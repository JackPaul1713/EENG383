

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 15:53:29 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	text79,global,reloc=2,class=CODE,delta=1
    96                           	psect	text80,global,reloc=2,class=CODE,delta=1
    97                           	psect	text81,global,reloc=2,class=CODE,delta=1
    98                           	psect	text82,global,reloc=2,class=CODE,delta=1
    99                           	psect	text83,global,reloc=2,class=CODE,delta=1
   100                           	psect	text84,global,reloc=2,class=CODE,delta=1
   101                           	psect	text85,global,reloc=2,class=CODE,delta=1
   102                           	psect	text86,global,reloc=2,class=CODE,delta=1
   103                           	psect	text87,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   109                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   110   000000                     
   111                           ; Generated 06/04/2022 GMT
   112                           ; 
   113                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   114                           ; All rights reserved.
   115                           ; 
   116                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   117                           ; 
   118                           ; Redistribution and use in source and binary forms, with or without modification, are
   119                           ; permitted provided that the following conditions are met:
   120                           ; 
   121                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   122                           ;        conditions and the following disclaimer.
   123                           ; 
   124                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   125                           ;        of conditions and the following disclaimer in the documentation and/or other
   126                           ;        materials provided with the distribution. Publication is not required when
   127                           ;        this file is used in an embedded application.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC18F25K22 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145   000000                     
   146 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   147   000000                     
   148 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   149   000000                     
   150 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   151   000000                     
   152                           	psect	idataBANK0
   153   004356                     __pidataBANK0:
   154                           	callstack 0
   155                           
   156                           ;initializer for txTMR1ISR@mask
   157   004356  01                 	db	1
   158                           
   159                           	psect	idataBANK1
   160   0042AA                     __pidataBANK1:
   161                           	callstack 0
   162                           
   163                           ;initializer for _bitPeriod
   164   0042AA  D055               	dw	53333
   165   0042AC  3415               	dw	13333
   166   0042AE  1A0A               	dw	6666
   167   0042B0  0682               	dw	1666
   168   0042B2  0341               	dw	833
   169                           
   170                           ;initializer for stoa@F1157
   171   0042B4  28                 	db	40
   172   0042B5  6E                 	db	110
   173   0042B6  75                 	db	117
   174   0042B7  6C                 	db	108
   175   0042B8  6C                 	db	108
   176   0042B9  29                 	db	41
   177   0042BA  00                 	db	0
   178                           
   179                           ;initializer for _baudRateSelected
   180   0042BB  02                 	db	2
   181                           
   182                           ;initializer for _character
   183   0042BC  30                 	db	48
   184   000000                     _CCPR2L	set	3943
   185   000000                     _CCPR2H	set	3944
   186   000000                     _PWM2CON	set	3941
   187   000000                     _ANSELA	set	3896
   188   000000                     _ANSELB	set	3897
   189   000000                     _ANSELC	set	3898
   190   000000                     _T1CON	set	4045
   191   000000                     _TMR1L	set	4046
   192   000000                     _TMR1H	set	4047
   193   000000                     _TXREG1	set	4013
   194   000000                     _RCREG1	set	4014
   195   000000                     _SPBRG1	set	4015
   196   000000                     _TXSTA1	set	4012
   197   000000                     _RCREG2	set	3956
   198   000000                     _TXREG2	set	3955
   199   000000                     _SPBRG2	set	3957
   200   000000                     _TXSTA2	set	3954
   201   000000                     _RCSTA2	set	3953
   202   000000                     _BAUDCON2	set	3952
   203   000000                     _PIE3bits	set	4003
   204   000000                     _TMR1	set	4046
   205   000000                     _T1GCONbits	set	4044
   206   000000                     _T1CONbits	set	4045
   207   000000                     _T2CONbits	set	4026
   208   000000                     _RCSTA1bits	set	4011
   209   000000                     _TXSTA1bits	set	4012
   210   000000                     _RCSTA2bits	set	3953
   211   000000                     _TXSTA2bits	set	3954
   212   000000                     _PLLRDY	set	32407
   213   000000                     _RCSTA1	set	4011
   214   000000                     _BAUDCON1	set	4024
   215   000000                     _PIR3bits	set	4004
   216   000000                     _RCONbits	set	4048
   217   000000                     _LATA	set	3977
   218   000000                     _OSCTUNE	set	3995
   219   000000                     _PIE1bits	set	3997
   220   000000                     _SPBRGH2	set	3958
   221   000000                     _OSCCON2	set	4050
   222   000000                     _OSCCON	set	4051
   223   000000                     _INTCONbits	set	4082
   224   000000                     _PIR1bits	set	3998
   225   000000                     _T2CON	set	4026
   226   000000                     _PR2	set	4027
   227   000000                     _SPBRGH1	set	4016
   228   000000                     _INTCON2bits	set	4081
   229   000000                     _T1GCON	set	4044
   230   000000                     _TMR2	set	4028
   231   000000                     _TRISA	set	3986
   232   000000                     _LATC	set	3979
   233   000000                     _LATB	set	3978
   234   000000                     _TRISC	set	3988
   235   000000                     _TRISB	set	3987
   236   000000                     _CCPTMRS0bits	set	3913
   237   000000                     _WPUB	set	3937
   238   000000                     _PSTR2CON	set	3939
   239   000000                     _ECCP2AS	set	3940
   240   000000                     _CCP2CON	set	3942
   241                           
   242                           	psect	mediumconst
   243   007A88                     __pmediumconst:
   244                           	callstack 0
   245   007A88  00                 	db	0
   246   007A89                     STR_42:
   247                           
   248                           ; BSR set to: 0
   249   007A89  52                 	db	82	;'R'
   250   007A8A  65                 	db	101	;'e'
   251   007A8B  63                 	db	99	;'c'
   252   007A8C  65                 	db	101	;'e'
   253   007A8D  69                 	db	105	;'i'
   254   007A8E  76                 	db	118	;'v'
   255   007A8F  65                 	db	101	;'e'
   256   007A90  64                 	db	100	;'d'
   257   007A91  0A                 	db	10
   258   007A92  0D                 	db	13
   259   007A93  20                 	db	32
   260   007A94  20                 	db	32
   261   007A95  6D                 	db	109	;'m'
   262   007A96  65                 	db	101	;'e'
   263   007A97  73                 	db	115	;'s'
   264   007A98  73                 	db	115	;'s'
   265   007A99  61                 	db	97	;'a'
   266   007A9A  67                 	db	103	;'g'
   267   007A9B  65                 	db	101	;'e'
   268   007A9C  3A                 	db	58	;':'
   269   007A9D  20                 	db	32
   270   007A9E  25                 	db	37
   271   007A9F  73                 	db	115	;'s'
   272   007AA0  0A                 	db	10
   273   007AA1  0D                 	db	13
   274   007AA2  20                 	db	32
   275   007AA3  20                 	db	32
   276   007AA4  63                 	db	99	;'c'
   277   007AA5  68                 	db	104	;'h'
   278   007AA6  65                 	db	101	;'e'
   279   007AA7  63                 	db	99	;'c'
   280   007AA8  6B                 	db	107	;'k'
   281   007AA9  73                 	db	115	;'s'
   282   007AAA  75                 	db	117	;'u'
   283   007AAB  6D                 	db	109	;'m'
   284   007AAC  3A                 	db	58	;':'
   285   007AAD  20                 	db	32
   286   007AAE  61                 	db	97	;'a'
   287   007AAF  63                 	db	99	;'c'
   288   007AB0  74                 	db	116	;'t'
   289   007AB1  75                 	db	117	;'u'
   290   007AB2  61                 	db	97	;'a'
   291   007AB3  6C                 	db	108	;'l'
   292   007AB4  28                 	db	40
   293   007AB5  25                 	db	37
   294   007AB6  75                 	db	117	;'u'
   295   007AB7  29                 	db	41
   296   007AB8  2C                 	db	44
   297   007AB9  20                 	db	32
   298   007ABA  65                 	db	101	;'e'
   299   007ABB  78                 	db	120	;'x'
   300   007ABC  70                 	db	112	;'p'
   301   007ABD  65                 	db	101	;'e'
   302   007ABE  63                 	db	99	;'c'
   303   007ABF  74                 	db	116	;'t'
   304   007AC0  65                 	db	101	;'e'
   305   007AC1  64                 	db	100	;'d'
   306   007AC2  28                 	db	40
   307   007AC3  25                 	db	37
   308   007AC4  75                 	db	117	;'u'
   309   007AC5  29                 	db	41
   310   007AC6  0A                 	db	10
   311   007AC7  0D                 	db	13
   312   007AC8  20                 	db	32
   313   007AC9  20                 	db	32
   314   007ACA  73                 	db	115	;'s'
   315   007ACB  6F                 	db	111	;'o'
   316   007ACC  75                 	db	117	;'u'
   317   007ACD  72                 	db	114	;'r'
   318   007ACE  63                 	db	99	;'c'
   319   007ACF  65                 	db	101	;'e'
   320   007AD0  20                 	db	32
   321   007AD1  61                 	db	97	;'a'
   322   007AD2  64                 	db	100	;'d'
   323   007AD3  64                 	db	100	;'d'
   324   007AD4  72                 	db	114	;'r'
   325   007AD5  65                 	db	101	;'e'
   326   007AD6  73                 	db	115	;'s'
   327   007AD7  73                 	db	115	;'s'
   328   007AD8  3A                 	db	58	;':'
   329   007AD9  20                 	db	32
   330   007ADA  25                 	db	37
   331   007ADB  75                 	db	117	;'u'
   332   007ADC  0A                 	db	10
   333   007ADD  0D                 	db	13
   334   007ADE  20                 	db	32
   335   007ADF  20                 	db	32
   336   007AE0  64                 	db	100	;'d'
   337   007AE1  65                 	db	101	;'e'
   338   007AE2  73                 	db	115	;'s'
   339   007AE3  74                 	db	116	;'t'
   340   007AE4  69                 	db	105	;'i'
   341   007AE5  6E                 	db	110	;'n'
   342   007AE6  74                 	db	116	;'t'
   343   007AE7  61                 	db	97	;'a'
   344   007AE8  74                 	db	116	;'t'
   345   007AE9  69                 	db	105	;'i'
   346   007AEA  6F                 	db	111	;'o'
   347   007AEB  6E                 	db	110	;'n'
   348   007AEC  20                 	db	32
   349   007AED  61                 	db	97	;'a'
   350   007AEE  64                 	db	100	;'d'
   351   007AEF  64                 	db	100	;'d'
   352   007AF0  72                 	db	114	;'r'
   353   007AF1  65                 	db	101	;'e'
   354   007AF2  73                 	db	115	;'s'
   355   007AF3  73                 	db	115	;'s'
   356   007AF4  3A                 	db	58	;':'
   357   007AF5  20                 	db	32
   358   007AF6  25                 	db	37
   359   007AF7  75                 	db	117	;'u'
   360   007AF8  0A                 	db	10
   361   007AF9  0D                 	db	13
   362   007AFA  00                 	db	0
   363   007AFB                     STR_41:
   364                           
   365                           ; BSR set to: 0
   366   007AFB  54                 	db	84	;'T'
   367   007AFC  72                 	db	114	;'r'
   368   007AFD  61                 	db	97	;'a'
   369   007AFE  6E                 	db	110	;'n'
   370   007AFF  73                 	db	115	;'s'
   371   007B00  6D                 	db	109	;'m'
   372   007B01  69                 	db	105	;'i'
   373   007B02  74                 	db	116	;'t'
   374   007B03  74                 	db	116	;'t'
   375   007B04  69                 	db	105	;'i'
   376   007B05  6E                 	db	110	;'n'
   377   007B06  67                 	db	103	;'g'
   378   007B07  0A                 	db	10
   379   007B08  0D                 	db	13
   380   007B09  20                 	db	32
   381   007B0A  20                 	db	32
   382   007B0B  6D                 	db	109	;'m'
   383   007B0C  65                 	db	101	;'e'
   384   007B0D  73                 	db	115	;'s'
   385   007B0E  73                 	db	115	;'s'
   386   007B0F  61                 	db	97	;'a'
   387   007B10  67                 	db	103	;'g'
   388   007B11  65                 	db	101	;'e'
   389   007B12  3A                 	db	58	;':'
   390   007B13  20                 	db	32
   391   007B14  25                 	db	37
   392   007B15  73                 	db	115	;'s'
   393   007B16  0A                 	db	10
   394   007B17  0D                 	db	13
   395   007B18  20                 	db	32
   396   007B19  20                 	db	32
   397   007B1A  63                 	db	99	;'c'
   398   007B1B  68                 	db	104	;'h'
   399   007B1C  65                 	db	101	;'e'
   400   007B1D  63                 	db	99	;'c'
   401   007B1E  6B                 	db	107	;'k'
   402   007B1F  73                 	db	115	;'s'
   403   007B20  75                 	db	117	;'u'
   404   007B21  6D                 	db	109	;'m'
   405   007B22  3A                 	db	58	;':'
   406   007B23  20                 	db	32
   407   007B24  25                 	db	37
   408   007B25  75                 	db	117	;'u'
   409   007B26  0A                 	db	10
   410   007B27  0D                 	db	13
   411   007B28  20                 	db	32
   412   007B29  20                 	db	32
   413   007B2A  73                 	db	115	;'s'
   414   007B2B  6F                 	db	111	;'o'
   415   007B2C  75                 	db	117	;'u'
   416   007B2D  72                 	db	114	;'r'
   417   007B2E  63                 	db	99	;'c'
   418   007B2F  65                 	db	101	;'e'
   419   007B30  20                 	db	32
   420   007B31  61                 	db	97	;'a'
   421   007B32  64                 	db	100	;'d'
   422   007B33  64                 	db	100	;'d'
   423   007B34  72                 	db	114	;'r'
   424   007B35  65                 	db	101	;'e'
   425   007B36  73                 	db	115	;'s'
   426   007B37  73                 	db	115	;'s'
   427   007B38  3A                 	db	58	;':'
   428   007B39  20                 	db	32
   429   007B3A  25                 	db	37
   430   007B3B  75                 	db	117	;'u'
   431   007B3C  0A                 	db	10
   432   007B3D  0D                 	db	13
   433   007B3E  20                 	db	32
   434   007B3F  20                 	db	32
   435   007B40  64                 	db	100	;'d'
   436   007B41  65                 	db	101	;'e'
   437   007B42  73                 	db	115	;'s'
   438   007B43  74                 	db	116	;'t'
   439   007B44  69                 	db	105	;'i'
   440   007B45  6E                 	db	110	;'n'
   441   007B46  74                 	db	116	;'t'
   442   007B47  61                 	db	97	;'a'
   443   007B48  74                 	db	116	;'t'
   444   007B49  69                 	db	105	;'i'
   445   007B4A  6F                 	db	111	;'o'
   446   007B4B  6E                 	db	110	;'n'
   447   007B4C  20                 	db	32
   448   007B4D  61                 	db	97	;'a'
   449   007B4E  64                 	db	100	;'d'
   450   007B4F  64                 	db	100	;'d'
   451   007B50  72                 	db	114	;'r'
   452   007B51  65                 	db	101	;'e'
   453   007B52  73                 	db	115	;'s'
   454   007B53  73                 	db	115	;'s'
   455   007B54  3A                 	db	58	;':'
   456   007B55  20                 	db	32
   457   007B56  25                 	db	37
   458   007B57  75                 	db	117	;'u'
   459   007B58  0A                 	db	10
   460   007B59  0D                 	db	13
   461   007B5A  00                 	db	0
   462   007B5B                     STR_36:
   463                           
   464                           ; BSR set to: 0
   465   007B5B  0A                 	db	10
   466   007B5C  0D                 	db	13
   467   007B5D  43                 	db	67	;'C'
   468   007B5E  72                 	db	114	;'r'
   469   007B5F  65                 	db	101	;'e'
   470   007B60  61                 	db	97	;'a'
   471   007B61  74                 	db	116	;'t'
   472   007B62  65                 	db	101	;'e'
   473   007B63  64                 	db	100	;'d'
   474   007B64  0A                 	db	10
   475   007B65  0D                 	db	13
   476   007B66  20                 	db	32
   477   007B67  20                 	db	32
   478   007B68  6D                 	db	109	;'m'
   479   007B69  65                 	db	101	;'e'
   480   007B6A  73                 	db	115	;'s'
   481   007B6B  73                 	db	115	;'s'
   482   007B6C  61                 	db	97	;'a'
   483   007B6D  67                 	db	103	;'g'
   484   007B6E  65                 	db	101	;'e'
   485   007B6F  3A                 	db	58	;':'
   486   007B70  20                 	db	32
   487   007B71  25                 	db	37
   488   007B72  73                 	db	115	;'s'
   489   007B73  0A                 	db	10
   490   007B74  0D                 	db	13
   491   007B75  20                 	db	32
   492   007B76  20                 	db	32
   493   007B77  63                 	db	99	;'c'
   494   007B78  68                 	db	104	;'h'
   495   007B79  65                 	db	101	;'e'
   496   007B7A  63                 	db	99	;'c'
   497   007B7B  6B                 	db	107	;'k'
   498   007B7C  73                 	db	115	;'s'
   499   007B7D  75                 	db	117	;'u'
   500   007B7E  6D                 	db	109	;'m'
   501   007B7F  3A                 	db	58	;':'
   502   007B80  20                 	db	32
   503   007B81  25                 	db	37
   504   007B82  75                 	db	117	;'u'
   505   007B83  0A                 	db	10
   506   007B84  0D                 	db	13
   507   007B85  20                 	db	32
   508   007B86  20                 	db	32
   509   007B87  73                 	db	115	;'s'
   510   007B88  6F                 	db	111	;'o'
   511   007B89  75                 	db	117	;'u'
   512   007B8A  72                 	db	114	;'r'
   513   007B8B  63                 	db	99	;'c'
   514   007B8C  65                 	db	101	;'e'
   515   007B8D  20                 	db	32
   516   007B8E  61                 	db	97	;'a'
   517   007B8F  64                 	db	100	;'d'
   518   007B90  64                 	db	100	;'d'
   519   007B91  72                 	db	114	;'r'
   520   007B92  65                 	db	101	;'e'
   521   007B93  73                 	db	115	;'s'
   522   007B94  73                 	db	115	;'s'
   523   007B95  3A                 	db	58	;':'
   524   007B96  20                 	db	32
   525   007B97  25                 	db	37
   526   007B98  75                 	db	117	;'u'
   527   007B99  0A                 	db	10
   528   007B9A  0D                 	db	13
   529   007B9B  20                 	db	32
   530   007B9C  20                 	db	32
   531   007B9D  64                 	db	100	;'d'
   532   007B9E  65                 	db	101	;'e'
   533   007B9F  73                 	db	115	;'s'
   534   007BA0  74                 	db	116	;'t'
   535   007BA1  69                 	db	105	;'i'
   536   007BA2  6E                 	db	110	;'n'
   537   007BA3  74                 	db	116	;'t'
   538   007BA4  61                 	db	97	;'a'
   539   007BA5  74                 	db	116	;'t'
   540   007BA6  69                 	db	105	;'i'
   541   007BA7  6F                 	db	111	;'o'
   542   007BA8  6E                 	db	110	;'n'
   543   007BA9  20                 	db	32
   544   007BAA  61                 	db	97	;'a'
   545   007BAB  64                 	db	100	;'d'
   546   007BAC  64                 	db	100	;'d'
   547   007BAD  72                 	db	114	;'r'
   548   007BAE  65                 	db	101	;'e'
   549   007BAF  73                 	db	115	;'s'
   550   007BB0  73                 	db	115	;'s'
   551   007BB1  3A                 	db	58	;':'
   552   007BB2  20                 	db	32
   553   007BB3  25                 	db	37
   554   007BB4  75                 	db	117	;'u'
   555   007BB5  0A                 	db	10
   556   007BB6  0D                 	db	13
   557   007BB7  00                 	db	0
   558   007BB8                     STR_4:
   559                           
   560                           ; BSR set to: 0
   561   007BB8  49                 	db	73	;'I'
   562   007BB9  6E                 	db	110	;'n'
   563   007BBA  73                 	db	115	;'s'
   564   007BBB  74                 	db	116	;'t'
   565   007BBC  61                 	db	97	;'a'
   566   007BBD  6C                 	db	108	;'l'
   567   007BBE  6C                 	db	108	;'l'
   568   007BBF  20                 	db	32
   569   007BC0  61                 	db	97	;'a'
   570   007BC1  20                 	db	32
   571   007BC2  6A                 	db	106	;'j'
   572   007BC3  75                 	db	117	;'u'
   573   007BC4  6D                 	db	109	;'m'
   574   007BC5  70                 	db	112	;'p'
   575   007BC6  65                 	db	101	;'e'
   576   007BC7  72                 	db	114	;'r'
   577   007BC8  20                 	db	32
   578   007BC9  77                 	db	119	;'w'
   579   007BCA  69                 	db	105	;'i'
   580   007BCB  72                 	db	114	;'r'
   581   007BCC  65                 	db	101	;'e'
   582   007BCD  20                 	db	32
   583   007BCE  66                 	db	102	;'f'
   584   007BCF  72                 	db	114	;'r'
   585   007BD0  6F                 	db	111	;'o'
   586   007BD1  6D                 	db	109	;'m'
   587   007BD2  20                 	db	32
   588   007BD3  52                 	db	82	;'R'
   589   007BD4  43                 	db	67	;'C'
   590   007BD5  30                 	db	48	;'0'
   591   007BD6  20                 	db	32
   592   007BD7  74                 	db	116	;'t'
   593   007BD8  6F                 	db	111	;'o'
   594   007BD9  20                 	db	32
   595   007BDA  52                 	db	82	;'R'
   596   007BDB  42                 	db	66	;'B'
   597   007BDC  37                 	db	55	;'7'
   598   007BDD  20                 	db	32
   599   007BDE  4F                 	db	79	;'O'
   600   007BDF  4E                 	db	78	;'N'
   601   007BE0  4C                 	db	76	;'L'
   602   007BE1  59                 	db	89	;'Y'
   603   007BE2  20                 	db	32
   604   007BE3  41                 	db	65	;'A'
   605   007BE4  46                 	db	70	;'F'
   606   007BE5  54                 	db	84	;'T'
   607   007BE6  45                 	db	69	;'E'
   608   007BE7  52                 	db	82	;'R'
   609   007BE8  20                 	db	32
   610   007BE9  75                 	db	117	;'u'
   611   007BEA  6E                 	db	110	;'n'
   612   007BEB  70                 	db	112	;'p'
   613   007BEC  6C                 	db	108	;'l'
   614   007BED  75                 	db	117	;'u'
   615   007BEE  67                 	db	103	;'g'
   616   007BEF  67                 	db	103	;'g'
   617   007BF0  69                 	db	105	;'i'
   618   007BF1  6E                 	db	110	;'n'
   619   007BF2  67                 	db	103	;'g'
   620   007BF3  20                 	db	32
   621   007BF4  50                 	db	80	;'P'
   622   007BF5  49                 	db	73	;'I'
   623   007BF6  43                 	db	67	;'C'
   624   007BF7  4B                 	db	75	;'K'
   625   007BF8  69                 	db	105	;'i'
   626   007BF9  74                 	db	116	;'t'
   627   007BFA  33                 	db	51	;'3'
   628   007BFB  0D                 	db	13
   629   007BFC  0A                 	db	10
   630   007BFD  00                 	db	0
   631   007BFE                     STR_16:
   632                           
   633                           ; BSR set to: 0
   634   007BFE  6D                 	db	109	;'m'
   635   007BFF  3A                 	db	58	;':'
   636   007C00  20                 	db	32
   637   007C01  63                 	db	99	;'c'
   638   007C02  72                 	db	114	;'r'
   639   007C03  65                 	db	101	;'e'
   640   007C04  61                 	db	97	;'a'
   641   007C05  74                 	db	116	;'t'
   642   007C06  65                 	db	101	;'e'
   643   007C07  20                 	db	32
   644   007C08  61                 	db	97	;'a'
   645   007C09  20                 	db	32
   646   007C0A  4E                 	db	78	;'N'
   647   007C0B  55                 	db	85	;'U'
   648   007C0C  4C                 	db	76	;'L'
   649   007C0D  4C                 	db	76	;'L'
   650   007C0E  20                 	db	32
   651   007C0F  74                 	db	116	;'t'
   652   007C10  65                 	db	101	;'e'
   653   007C11  72                 	db	114	;'r'
   654   007C12  6D                 	db	109	;'m'
   655   007C13  69                 	db	105	;'i'
   656   007C14  6E                 	db	110	;'n'
   657   007C15  61                 	db	97	;'a'
   658   007C16  74                 	db	116	;'t'
   659   007C17  65                 	db	101	;'e'
   660   007C18  64                 	db	100	;'d'
   661   007C19  20                 	db	32
   662   007C1A  6D                 	db	109	;'m'
   663   007C1B  65                 	db	101	;'e'
   664   007C1C  73                 	db	115	;'s'
   665   007C1D  73                 	db	115	;'s'
   666   007C1E  61                 	db	97	;'a'
   667   007C1F  67                 	db	103	;'g'
   668   007C20  65                 	db	101	;'e'
   669   007C21  20                 	db	32
   670   007C22  77                 	db	119	;'w'
   671   007C23  69                 	db	105	;'i'
   672   007C24  74                 	db	116	;'t'
   673   007C25  68                 	db	104	;'h'
   674   007C26  20                 	db	32
   675   007C27  53                 	db	83	;'S'
   676   007C28  52                 	db	82	;'R'
   677   007C29  43                 	db	67	;'C'
   678   007C2A  20                 	db	32
   679   007C2B  61                 	db	97	;'a'
   680   007C2C  6E                 	db	110	;'n'
   681   007C2D  64                 	db	100	;'d'
   682   007C2E  20                 	db	32
   683   007C2F  44                 	db	68	;'D'
   684   007C30  45                 	db	69	;'E'
   685   007C31  53                 	db	83	;'S'
   686   007C32  54                 	db	84	;'T'
   687   007C33  20                 	db	32
   688   007C34  70                 	db	112	;'p'
   689   007C35  72                 	db	114	;'r'
   690   007C36  65                 	db	101	;'e'
   691   007C37  66                 	db	102	;'f'
   692   007C38  69                 	db	105	;'i'
   693   007C39  78                 	db	120	;'x'
   694   007C3A  0A                 	db	10
   695   007C3B  0D                 	db	13
   696   007C3C  00                 	db	0
   697   007C3D                     STR_7:
   698                           
   699                           ; BSR set to: 0
   700   007C3D  2D                 	db	45
   701   007C3E  2D                 	db	45
   702   007C3F  2D                 	db	45
   703   007C40  2D                 	db	45
   704   007C41  2D                 	db	45
   705   007C42  2D                 	db	45
   706   007C43  2D                 	db	45
   707   007C44  2D                 	db	45
   708   007C45  2D                 	db	45
   709   007C46  2D                 	db	45
   710   007C47  2D                 	db	45
   711   007C48  2D                 	db	45
   712   007C49  2D                 	db	45
   713   007C4A  2D                 	db	45
   714   007C4B  2D                 	db	45
   715   007C4C  2D                 	db	45
   716   007C4D  2D                 	db	45
   717   007C4E  2D                 	db	45
   718   007C4F  2D                 	db	45
   719   007C50  2D                 	db	45
   720   007C51  2D                 	db	45
   721   007C52  2D                 	db	45
   722   007C53  2D                 	db	45
   723   007C54  2D                 	db	45
   724   007C55  2D                 	db	45
   725   007C56  2D                 	db	45
   726   007C57  2D                 	db	45
   727   007C58  2D                 	db	45
   728   007C59  2D                 	db	45
   729   007C5A  2D                 	db	45
   730   007C5B  2D                 	db	45
   731   007C5C  2D                 	db	45
   732   007C5D  2D                 	db	45
   733   007C5E  2D                 	db	45
   734   007C5F  2D                 	db	45
   735   007C60  2D                 	db	45
   736   007C61  2D                 	db	45
   737   007C62  2D                 	db	45
   738   007C63  2D                 	db	45
   739   007C64  2D                 	db	45
   740   007C65  2D                 	db	45
   741   007C66  2D                 	db	45
   742   007C67  2D                 	db	45
   743   007C68  2D                 	db	45
   744   007C69  2D                 	db	45
   745   007C6A  2D                 	db	45
   746   007C6B  2D                 	db	45
   747   007C6C  2D                 	db	45
   748   007C6D  2D                 	db	45
   749   007C6E  0D                 	db	13
   750   007C6F  0A                 	db	10
   751   007C70  00                 	db	0
   752   007C71                     STR_39:
   753                           
   754                           ; BSR set to: 0
   755   007C71  45                 	db	69	;'E'
   756   007C72  6E                 	db	110	;'n'
   757   007C73  74                 	db	116	;'t'
   758   007C74  65                 	db	101	;'e'
   759   007C75  72                 	db	114	;'r'
   760   007C76  20                 	db	32
   761   007C77  64                 	db	100	;'d'
   762   007C78  65                 	db	101	;'e'
   763   007C79  73                 	db	115	;'s'
   764   007C7A  74                 	db	116	;'t'
   765   007C7B  69                 	db	105	;'i'
   766   007C7C  6E                 	db	110	;'n'
   767   007C7D  61                 	db	97	;'a'
   768   007C7E  74                 	db	116	;'t'
   769   007C7F  69                 	db	105	;'i'
   770   007C80  6F                 	db	111	;'o'
   771   007C81  6E                 	db	110	;'n'
   772   007C82  20                 	db	32
   773   007C83  61                 	db	97	;'a'
   774   007C84  64                 	db	100	;'d'
   775   007C85  64                 	db	100	;'d'
   776   007C86  72                 	db	114	;'r'
   777   007C87  65                 	db	101	;'e'
   778   007C88  73                 	db	115	;'s'
   779   007C89  73                 	db	115	;'s'
   780   007C8A  2C                 	db	44
   781   007C8B  20                 	db	32
   782   007C8C  68                 	db	104	;'h'
   783   007C8D  69                 	db	105	;'i'
   784   007C8E  74                 	db	116	;'t'
   785   007C8F  20                 	db	32
   786   007C90  72                 	db	114	;'r'
   787   007C91  65                 	db	101	;'e'
   788   007C92  74                 	db	116	;'t'
   789   007C93  75                 	db	117	;'u'
   790   007C94  72                 	db	114	;'r'
   791   007C95  6E                 	db	110	;'n'
   792   007C96  20                 	db	32
   793   007C97  77                 	db	119	;'w'
   794   007C98  68                 	db	104	;'h'
   795   007C99  65                 	db	101	;'e'
   796   007C9A  6E                 	db	110	;'n'
   797   007C9B  20                 	db	32
   798   007C9C  64                 	db	100	;'d'
   799   007C9D  6F                 	db	111	;'o'
   800   007C9E  6E                 	db	110	;'n'
   801   007C9F  65                 	db	101	;'e'
   802   007CA0  2E                 	db	46
   803   007CA1  0A                 	db	10
   804   007CA2  0D                 	db	13
   805   007CA3  00                 	db	0
   806   007CA4                     STR_20:
   807                           
   808                           ; BSR set to: 0
   809   007CA4  52                 	db	82	;'R'
   810   007CA5  3A                 	db	58	;':'
   811   007CA6  20                 	db	32
   812   007CA7  52                 	db	82	;'R'
   813   007CA8  65                 	db	101	;'e'
   814   007CA9  63                 	db	99	;'c'
   815   007CAA  65                 	db	101	;'e'
   816   007CAB  69                 	db	105	;'i'
   817   007CAC  76                 	db	118	;'v'
   818   007CAD  65                 	db	101	;'e'
   819   007CAE  20                 	db	32
   820   007CAF  6D                 	db	109	;'m'
   821   007CB0  65                 	db	101	;'e'
   822   007CB1  73                 	db	115	;'s'
   823   007CB2  73                 	db	115	;'s'
   824   007CB3  61                 	db	97	;'a'
   825   007CB4  67                 	db	103	;'g'
   826   007CB5  65                 	db	101	;'e'
   827   007CB6  20                 	db	32
   828   007CB7  75                 	db	117	;'u'
   829   007CB8  73                 	db	115	;'s'
   830   007CB9  69                 	db	105	;'i'
   831   007CBA  6E                 	db	110	;'n'
   832   007CBB  67                 	db	103	;'g'
   833   007CBC  20                 	db	32
   834   007CBD  45                 	db	69	;'E'
   835   007CBE  55                 	db	85	;'U'
   836   007CBF  53                 	db	83	;'S'
   837   007CC0  41                 	db	65	;'A'
   838   007CC1  52                 	db	82	;'R'
   839   007CC2  54                 	db	84	;'T'
   840   007CC3  32                 	db	50	;'2'
   841   007CC4  20                 	db	32
   842   007CC5  76                 	db	118	;'v'
   843   007CC6  69                 	db	105	;'i'
   844   007CC7  61                 	db	97	;'a'
   845   007CC8  20                 	db	32
   846   007CC9  49                 	db	73	;'I'
   847   007CCA  52                 	db	82	;'R'
   848   007CCB  20                 	db	32
   849   007CCC  64                 	db	100	;'d'
   850   007CCD  65                 	db	101	;'e'
   851   007CCE  63                 	db	99	;'c'
   852   007CCF  6F                 	db	111	;'o'
   853   007CD0  64                 	db	100	;'d'
   854   007CD1  65                 	db	101	;'e'
   855   007CD2  72                 	db	114	;'r'
   856   007CD3  0A                 	db	10
   857   007CD4  0D                 	db	13
   858   007CD5  00                 	db	0
   859   007CD6                     STR_37:
   860                           
   861                           ; BSR set to: 0
   862   007CD6  45                 	db	69	;'E'
   863   007CD7  6E                 	db	110	;'n'
   864   007CD8  74                 	db	116	;'t'
   865   007CD9  65                 	db	101	;'e'
   866   007CDA  72                 	db	114	;'r'
   867   007CDB  20                 	db	32
   868   007CDC  73                 	db	115	;'s'
   869   007CDD  6F                 	db	111	;'o'
   870   007CDE  75                 	db	117	;'u'
   871   007CDF  72                 	db	114	;'r'
   872   007CE0  63                 	db	99	;'c'
   873   007CE1  65                 	db	101	;'e'
   874   007CE2  20                 	db	32
   875   007CE3  61                 	db	97	;'a'
   876   007CE4  64                 	db	100	;'d'
   877   007CE5  64                 	db	100	;'d'
   878   007CE6  72                 	db	114	;'r'
   879   007CE7  65                 	db	101	;'e'
   880   007CE8  73                 	db	115	;'s'
   881   007CE9  73                 	db	115	;'s'
   882   007CEA  2C                 	db	44
   883   007CEB  20                 	db	32
   884   007CEC  68                 	db	104	;'h'
   885   007CED  69                 	db	105	;'i'
   886   007CEE  74                 	db	116	;'t'
   887   007CEF  20                 	db	32
   888   007CF0  72                 	db	114	;'r'
   889   007CF1  65                 	db	101	;'e'
   890   007CF2  74                 	db	116	;'t'
   891   007CF3  75                 	db	117	;'u'
   892   007CF4  72                 	db	114	;'r'
   893   007CF5  6E                 	db	110	;'n'
   894   007CF6  20                 	db	32
   895   007CF7  77                 	db	119	;'w'
   896   007CF8  68                 	db	104	;'h'
   897   007CF9  65                 	db	101	;'e'
   898   007CFA  6E                 	db	110	;'n'
   899   007CFB  20                 	db	32
   900   007CFC  64                 	db	100	;'d'
   901   007CFD  6F                 	db	111	;'o'
   902   007CFE  6E                 	db	110	;'n'
   903   007CFF  65                 	db	101	;'e'
   904   007D00  2E                 	db	46
   905   007D01  0A                 	db	10
   906   007D02  0D                 	db	13
   907   007D03  00                 	db	0
   908   007D04                     STR_27:
   909                           
   910                           ; BSR set to: 0
   911   007D04  43                 	db	67	;'C'
   912   007D05  68                 	db	104	;'h'
   913   007D06  6F                 	db	111	;'o'
   914   007D07  6F                 	db	111	;'o'
   915   007D08  73                 	db	115	;'s'
   916   007D09  65                 	db	101	;'e'
   917   007D0A  20                 	db	32
   918   007D0B  74                 	db	116	;'t'
   919   007D0C  68                 	db	104	;'h'
   920   007D0D  65                 	db	101	;'e'
   921   007D0E  20                 	db	32
   922   007D0F  69                 	db	105	;'i'
   923   007D10  6E                 	db	110	;'n'
   924   007D11  64                 	db	100	;'d'
   925   007D12  65                 	db	101	;'e'
   926   007D13  78                 	db	120	;'x'
   927   007D14  20                 	db	32
   928   007D15  6F                 	db	111	;'o'
   929   007D16  66                 	db	102	;'f'
   930   007D17  20                 	db	32
   931   007D18  74                 	db	116	;'t'
   932   007D19  68                 	db	104	;'h'
   933   007D1A  65                 	db	101	;'e'
   934   007D1B  20                 	db	32
   935   007D1C  74                 	db	116	;'t'
   936   007D1D  61                 	db	97	;'a'
   937   007D1E  72                 	db	114	;'r'
   938   007D1F  67                 	db	103	;'g'
   939   007D20  65                 	db	101	;'e'
   940   007D21  74                 	db	116	;'t'
   941   007D22  20                 	db	32
   942   007D23  62                 	db	98	;'b'
   943   007D24  61                 	db	97	;'a'
   944   007D25  75                 	db	117	;'u'
   945   007D26  64                 	db	100	;'d'
   946   007D27  20                 	db	32
   947   007D28  72                 	db	114	;'r'
   948   007D29  61                 	db	97	;'a'
   949   007D2A  74                 	db	116	;'t'
   950   007D2B  65                 	db	101	;'e'
   951   007D2C  0D                 	db	13
   952   007D2D  0A                 	db	10
   953   007D2E  00                 	db	0
   954   007D2F                     STR_34:
   955                           
   956                           ; BSR set to: 0
   957   007D2F  45                 	db	69	;'E'
   958   007D30  6E                 	db	110	;'n'
   959   007D31  74                 	db	116	;'t'
   960   007D32  65                 	db	101	;'e'
   961   007D33  72                 	db	114	;'r'
   962   007D34  20                 	db	32
   963   007D35  6D                 	db	109	;'m'
   964   007D36  65                 	db	101	;'e'
   965   007D37  73                 	db	115	;'s'
   966   007D38  73                 	db	115	;'s'
   967   007D39  61                 	db	97	;'a'
   968   007D3A  67                 	db	103	;'g'
   969   007D3B  65                 	db	101	;'e'
   970   007D3C  2C                 	db	44
   971   007D3D  20                 	db	32
   972   007D3E  68                 	db	104	;'h'
   973   007D3F  69                 	db	105	;'i'
   974   007D40  74                 	db	116	;'t'
   975   007D41  20                 	db	32
   976   007D42  72                 	db	114	;'r'
   977   007D43  65                 	db	101	;'e'
   978   007D44  74                 	db	116	;'t'
   979   007D45  75                 	db	117	;'u'
   980   007D46  72                 	db	114	;'r'
   981   007D47  6E                 	db	110	;'n'
   982   007D48  20                 	db	32
   983   007D49  77                 	db	119	;'w'
   984   007D4A  68                 	db	104	;'h'
   985   007D4B  65                 	db	101	;'e'
   986   007D4C  6E                 	db	110	;'n'
   987   007D4D  20                 	db	32
   988   007D4E  64                 	db	100	;'d'
   989   007D4F  6F                 	db	111	;'o'
   990   007D50  6E                 	db	110	;'n'
   991   007D51  65                 	db	101	;'e'
   992   007D52  2E                 	db	46
   993   007D53  0A                 	db	10
   994   007D54  0D                 	db	13
   995   007D55  00                 	db	0
   996   007D56                     STR_2:
   997                           
   998                           ; BSR set to: 0
   999   007D56  52                 	db	82	;'R'
  1000   007D57  65                 	db	101	;'e'
  1001   007D58  63                 	db	99	;'c'
  1002   007D59  65                 	db	101	;'e'
  1003   007D5A  69                 	db	105	;'i'
  1004   007D5B  76                 	db	118	;'v'
  1005   007D5C  65                 	db	101	;'e'
  1006   007D5D  20                 	db	32
  1007   007D5E  61                 	db	97	;'a'
  1008   007D5F  6E                 	db	110	;'n'
  1009   007D60  64                 	db	100	;'d'
  1010   007D61  20                 	db	32
  1011   007D62  64                 	db	100	;'d'
  1012   007D63  65                 	db	101	;'e'
  1013   007D64  63                 	db	99	;'c'
  1014   007D65  6F                 	db	111	;'o'
  1015   007D66  64                 	db	100	;'d'
  1016   007D67  65                 	db	101	;'e'
  1017   007D68  20                 	db	32
  1018   007D69  61                 	db	97	;'a'
  1019   007D6A  6E                 	db	110	;'n'
  1020   007D6B  20                 	db	32
  1021   007D6C  49                 	db	73	;'I'
  1022   007D6D  52                 	db	82	;'R'
  1023   007D6E  20                 	db	32
  1024   007D6F  63                 	db	99	;'c'
  1025   007D70  68                 	db	104	;'h'
  1026   007D71  61                 	db	97	;'a'
  1027   007D72  72                 	db	114	;'r'
  1028   007D73  61                 	db	97	;'a'
  1029   007D74  63                 	db	99	;'c'
  1030   007D75  74                 	db	116	;'t'
  1031   007D76  65                 	db	101	;'e'
  1032   007D77  72                 	db	114	;'r'
  1033   007D78  0D                 	db	13
  1034   007D79  0A                 	db	10
  1035   007D7A  00                 	db	0
  1036   007D7B                     STR_18:
  1037                           
  1038                           ; BSR set to: 0
  1039   007D7B  64                 	db	100	;'d'
  1040   007D7C  3A                 	db	58	;':'
  1041   007D7D  20                 	db	32
  1042   007D7E  73                 	db	115	;'s'
  1043   007D7F  65                 	db	101	;'e'
  1044   007D80  74                 	db	116	;'t'
  1045   007D81  20                 	db	32
  1046   007D82  44                 	db	68	;'D'
  1047   007D83  65                 	db	101	;'e'
  1048   007D84  73                 	db	115	;'s'
  1049   007D85  74                 	db	116	;'t'
  1050   007D86  69                 	db	105	;'i'
  1051   007D87  6E                 	db	110	;'n'
  1052   007D88  61                 	db	97	;'a'
  1053   007D89  74                 	db	116	;'t'
  1054   007D8A  69                 	db	105	;'i'
  1055   007D8B  6F                 	db	111	;'o'
  1056   007D8C  6E                 	db	110	;'n'
  1057   007D8D  20                 	db	32
  1058   007D8E  74                 	db	116	;'t'
  1059   007D8F  72                 	db	114	;'r'
  1060   007D90  61                 	db	97	;'a'
  1061   007D91  6E                 	db	110	;'n'
  1062   007D92  73                 	db	115	;'s'
  1063   007D93  6D                 	db	109	;'m'
  1064   007D94  69                 	db	105	;'i'
  1065   007D95  74                 	db	116	;'t'
  1066   007D96  20                 	db	32
  1067   007D97  74                 	db	116	;'t'
  1068   007D98  61                 	db	97	;'a'
  1069   007D99  72                 	db	114	;'r'
  1070   007D9A  67                 	db	103	;'g'
  1071   007D9B  65                 	db	101	;'e'
  1072   007D9C  74                 	db	116	;'t'
  1073   007D9D  0A                 	db	10
  1074   007D9E  0D                 	db	13
  1075   007D9F  00                 	db	0
  1076   007DA0                     STR_40:
  1077                           
  1078                           ; BSR set to: 0
  1079   007DA0  0A                 	db	10
  1080   007DA1  0D                 	db	13
  1081   007DA2  53                 	db	83	;'S'
  1082   007DA3  65                 	db	101	;'e'
  1083   007DA4  74                 	db	116	;'t'
  1084   007DA5  0A                 	db	10
  1085   007DA6  0D                 	db	13
  1086   007DA7  20                 	db	32
  1087   007DA8  20                 	db	32
  1088   007DA9  64                 	db	100	;'d'
  1089   007DAA  65                 	db	101	;'e'
  1090   007DAB  73                 	db	115	;'s'
  1091   007DAC  74                 	db	116	;'t'
  1092   007DAD  69                 	db	105	;'i'
  1093   007DAE  6E                 	db	110	;'n'
  1094   007DAF  61                 	db	97	;'a'
  1095   007DB0  74                 	db	116	;'t'
  1096   007DB1  69                 	db	105	;'i'
  1097   007DB2  6F                 	db	111	;'o'
  1098   007DB3  6E                 	db	110	;'n'
  1099   007DB4  20                 	db	32
  1100   007DB5  61                 	db	97	;'a'
  1101   007DB6  64                 	db	100	;'d'
  1102   007DB7  64                 	db	100	;'d'
  1103   007DB8  72                 	db	114	;'r'
  1104   007DB9  65                 	db	101	;'e'
  1105   007DBA  73                 	db	115	;'s'
  1106   007DBB  73                 	db	115	;'s'
  1107   007DBC  3A                 	db	58	;':'
  1108   007DBD  20                 	db	32
  1109   007DBE  25                 	db	37
  1110   007DBF  75                 	db	117	;'u'
  1111   007DC0  0A                 	db	10
  1112   007DC1  0D                 	db	13
  1113   007DC2  00                 	db	0
  1114   007DC3                     STR_17:
  1115                           
  1116                           ; BSR set to: 0
  1117   007DC3  73                 	db	115	;'s'
  1118   007DC4  3A                 	db	58	;':'
  1119   007DC5  20                 	db	32
  1120   007DC6  73                 	db	115	;'s'
  1121   007DC7  65                 	db	101	;'e'
  1122   007DC8  74                 	db	116	;'t'
  1123   007DC9  20                 	db	32
  1124   007DCA  53                 	db	83	;'S'
  1125   007DCB  6F                 	db	111	;'o'
  1126   007DCC  75                 	db	117	;'u'
  1127   007DCD  72                 	db	114	;'r'
  1128   007DCE  63                 	db	99	;'c'
  1129   007DCF  65                 	db	101	;'e'
  1130   007DD0  20                 	db	32
  1131   007DD1  74                 	db	116	;'t'
  1132   007DD2  72                 	db	114	;'r'
  1133   007DD3  61                 	db	97	;'a'
  1134   007DD4  6E                 	db	110	;'n'
  1135   007DD5  73                 	db	115	;'s'
  1136   007DD6  6D                 	db	109	;'m'
  1137   007DD7  69                 	db	105	;'i'
  1138   007DD8  74                 	db	116	;'t'
  1139   007DD9  20                 	db	32
  1140   007DDA  69                 	db	105	;'i'
  1141   007DDB  64                 	db	100	;'d'
  1142   007DDC  65                 	db	101	;'e'
  1143   007DDD  6E                 	db	110	;'n'
  1144   007DDE  74                 	db	116	;'t'
  1145   007DDF  69                 	db	105	;'i'
  1146   007DE0  74                 	db	116	;'t'
  1147   007DE1  79                 	db	121	;'y'
  1148   007DE2  0A                 	db	10
  1149   007DE3  0D                 	db	13
  1150   007DE4  00                 	db	0
  1151   007DE5                     STR_19:
  1152                           
  1153                           ; BSR set to: 0
  1154   007DE5  53                 	db	83	;'S'
  1155   007DE6  3A                 	db	58	;':'
  1156   007DE7  20                 	db	32
  1157   007DE8  53                 	db	83	;'S'
  1158   007DE9  65                 	db	101	;'e'
  1159   007DEA  6E                 	db	110	;'n'
  1160   007DEB  64                 	db	100	;'d'
  1161   007DEC  20                 	db	32
  1162   007DED  6D                 	db	109	;'m'
  1163   007DEE  65                 	db	101	;'e'
  1164   007DEF  73                 	db	115	;'s'
  1165   007DF0  73                 	db	115	;'s'
  1166   007DF1  61                 	db	97	;'a'
  1167   007DF2  67                 	db	103	;'g'
  1168   007DF3  65                 	db	101	;'e'
  1169   007DF4  20                 	db	32
  1170   007DF5  75                 	db	117	;'u'
  1171   007DF6  73                 	db	115	;'s'
  1172   007DF7  69                 	db	105	;'i'
  1173   007DF8  6E                 	db	110	;'n'
  1174   007DF9  67                 	db	103	;'g'
  1175   007DFA  20                 	db	32
  1176   007DFB  54                 	db	84	;'T'
  1177   007DFC  4D                 	db	77	;'M'
  1178   007DFD  52                 	db	82	;'R'
  1179   007DFE  31                 	db	49	;'1'
  1180   007DFF  20                 	db	32
  1181   007E00  49                 	db	73	;'I'
  1182   007E01  53                 	db	83	;'S'
  1183   007E02  52                 	db	82	;'R'
  1184   007E03  0A                 	db	10
  1185   007E04  0D                 	db	13
  1186   007E05  00                 	db	0
  1187   007E06                     STR_33:
  1188                           
  1189                           ; BSR set to: 0
  1190   007E06  42                 	db	66	;'B'
  1191   007E07  61                 	db	97	;'a'
  1192   007E08  75                 	db	117	;'u'
  1193   007E09  64                 	db	100	;'d'
  1194   007E0A  20                 	db	32
  1195   007E0B  72                 	db	114	;'r'
  1196   007E0C  61                 	db	97	;'a'
  1197   007E0D  74                 	db	116	;'t'
  1198   007E0E  65                 	db	101	;'e'
  1199   007E0F  20                 	db	32
  1200   007E10  61                 	db	97	;'a'
  1201   007E11  73                 	db	115	;'s'
  1202   007E12  73                 	db	115	;'s'
  1203   007E13  69                 	db	105	;'i'
  1204   007E14  67                 	db	103	;'g'
  1205   007E15  6E                 	db	110	;'n'
  1206   007E16  65                 	db	101	;'e'
  1207   007E17  64                 	db	100	;'d'
  1208   007E18  20                 	db	32
  1209   007E19  25                 	db	37
  1210   007E1A  30                 	db	48	;'0'
  1211   007E1B  32                 	db	50	;'2'
  1212   007E1C  78                 	db	120	;'x'
  1213   007E1D  3A                 	db	58	;':'
  1214   007E1E  25                 	db	37
  1215   007E1F  30                 	db	48	;'0'
  1216   007E20  32                 	db	50	;'2'
  1217   007E21  78                 	db	120	;'x'
  1218   007E22  0D                 	db	13
  1219   007E23  0A                 	db	10
  1220   007E24  00                 	db	0
  1221   007E25                     STR_38:
  1222                           
  1223                           ; BSR set to: 0
  1224   007E25  0A                 	db	10
  1225   007E26  0D                 	db	13
  1226   007E27  53                 	db	83	;'S'
  1227   007E28  65                 	db	101	;'e'
  1228   007E29  74                 	db	116	;'t'
  1229   007E2A  0A                 	db	10
  1230   007E2B  0D                 	db	13
  1231   007E2C  20                 	db	32
  1232   007E2D  20                 	db	32
  1233   007E2E  73                 	db	115	;'s'
  1234   007E2F  6F                 	db	111	;'o'
  1235   007E30  75                 	db	117	;'u'
  1236   007E31  72                 	db	114	;'r'
  1237   007E32  63                 	db	99	;'c'
  1238   007E33  65                 	db	101	;'e'
  1239   007E34  20                 	db	32
  1240   007E35  61                 	db	97	;'a'
  1241   007E36  64                 	db	100	;'d'
  1242   007E37  64                 	db	100	;'d'
  1243   007E38  72                 	db	114	;'r'
  1244   007E39  65                 	db	101	;'e'
  1245   007E3A  73                 	db	115	;'s'
  1246   007E3B  73                 	db	115	;'s'
  1247   007E3C  3A                 	db	58	;':'
  1248   007E3D  20                 	db	32
  1249   007E3E  25                 	db	37
  1250   007E3F  75                 	db	117	;'u'
  1251   007E40  0A                 	db	10
  1252   007E41  0D                 	db	13
  1253   007E42  00                 	db	0
  1254   007E43                     STR_21:
  1255                           
  1256                           ; BSR set to: 0
  1257   007E43  4D                 	db	77	;'M'
  1258   007E44  3A                 	db	58	;':'
  1259   007E45  20                 	db	32
  1260   007E46  20                 	db	32
  1261   007E47  4D                 	db	77	;'M'
  1262   007E48  6F                 	db	111	;'o'
  1263   007E49  6E                 	db	110	;'n'
  1264   007E4A  69                 	db	105	;'i'
  1265   007E4B  74                 	db	116	;'t'
  1266   007E4C  6F                 	db	111	;'o'
  1267   007E4D  72                 	db	114	;'r'
  1268   007E4E  20                 	db	32
  1269   007E4F  61                 	db	97	;'a'
  1270   007E50  6C                 	db	108	;'l'
  1271   007E51  6C                 	db	108	;'l'
  1272   007E52  20                 	db	32
  1273   007E53  49                 	db	73	;'I'
  1274   007E54  52                 	db	82	;'R'
  1275   007E55  20                 	db	32
  1276   007E56  74                 	db	116	;'t'
  1277   007E57  72                 	db	114	;'r'
  1278   007E58  61                 	db	97	;'a'
  1279   007E59  66                 	db	102	;'f'
  1280   007E5A  66                 	db	102	;'f'
  1281   007E5B  69                 	db	105	;'i'
  1282   007E5C  63                 	db	99	;'c'
  1283   007E5D  0A                 	db	10
  1284   007E5E  0D                 	db	13
  1285   007E5F  00                 	db	0
  1286   007E60                     STR_44:
  1287                           
  1288                           ; BSR set to: 0
  1289   007E60  53                 	db	83	;'S'
  1290   007E61  52                 	db	82	;'R'
  1291   007E62  43                 	db	67	;'C'
  1292   007E63  20                 	db	32
  1293   007E64  44                 	db	68	;'D'
  1294   007E65  53                 	db	83	;'S'
  1295   007E66  54                 	db	84	;'T'
  1296   007E67  20                 	db	32
  1297   007E68  53                 	db	83	;'S'
  1298   007E69  55                 	db	85	;'U'
  1299   007E6A  4D                 	db	77	;'M'
  1300   007E6B  20                 	db	32
  1301   007E6C  43                 	db	67	;'C'
  1302   007E6D  48                 	db	72	;'H'
  1303   007E6E  45                 	db	69	;'E'
  1304   007E6F  43                 	db	67	;'C'
  1305   007E70  4B                 	db	75	;'K'
  1306   007E71  20                 	db	32
  1307   007E72  4D                 	db	77	;'M'
  1308   007E73  45                 	db	69	;'E'
  1309   007E74  53                 	db	83	;'S'
  1310   007E75  53                 	db	83	;'S'
  1311   007E76  41                 	db	65	;'A'
  1312   007E77  47                 	db	71	;'G'
  1313   007E78  45                 	db	69	;'E'
  1314   007E79  0A                 	db	10
  1315   007E7A  0D                 	db	13
  1316   007E7B  00                 	db	0
  1317   007E7C                     STR_22:
  1318                           
  1319                           ; BSR set to: 0
  1320   007E7C  78                 	db	120	;'x'
  1321   007E7D  2F                 	db	47
  1322   007E7E  58                 	db	88	;'X'
  1323   007E7F  3A                 	db	58	;':'
  1324   007E80  20                 	db	32
  1325   007E81  64                 	db	100	;'d'
  1326   007E82  65                 	db	101	;'e'
  1327   007E83  63                 	db	99	;'c'
  1328   007E84  6F                 	db	111	;'o'
  1329   007E85  64                 	db	100	;'d'
  1330   007E86  65                 	db	101	;'e'
  1331   007E87  20                 	db	32
  1332   007E88  74                 	db	116	;'t'
  1333   007E89  78                 	db	120	;'x'
  1334   007E8A  2F                 	db	47
  1335   007E8B  52                 	db	82	;'R'
  1336   007E8C  58                 	db	88	;'X'
  1337   007E8D  20                 	db	32
  1338   007E8E  6D                 	db	109	;'m'
  1339   007E8F  65                 	db	101	;'e'
  1340   007E90  73                 	db	115	;'s'
  1341   007E91  73                 	db	115	;'s'
  1342   007E92  61                 	db	97	;'a'
  1343   007E93  67                 	db	103	;'g'
  1344   007E94  65                 	db	101	;'e'
  1345   007E95  0A                 	db	10
  1346   007E96  0D                 	db	13
  1347   007E97  00                 	db	0
  1348   007E98                     STR_14:
  1349                           
  1350                           ; BSR set to: 0
  1351   007E98  7A                 	db	122	;'z'
  1352   007E99  3A                 	db	58	;':'
  1353   007E9A  20                 	db	32
  1354   007E9B  43                 	db	67	;'C'
  1355   007E9C  6C                 	db	108	;'l'
  1356   007E9D  65                 	db	101	;'e'
  1357   007E9E  61                 	db	97	;'a'
  1358   007E9F  72                 	db	114	;'r'
  1359   007EA0  20                 	db	32
  1360   007EA1  74                 	db	116	;'t'
  1361   007EA2  68                 	db	104	;'h'
  1362   007EA3  65                 	db	101	;'e'
  1363   007EA4  20                 	db	32
  1364   007EA5  74                 	db	116	;'t'
  1365   007EA6  65                 	db	101	;'e'
  1366   007EA7  72                 	db	114	;'r'
  1367   007EA8  6D                 	db	109	;'m'
  1368   007EA9  69                 	db	105	;'i'
  1369   007EAA  6E                 	db	110	;'n'
  1370   007EAB  61                 	db	97	;'a'
  1371   007EAC  6C                 	db	108	;'l'
  1372   007EAD  0D                 	db	13
  1373   007EAE  0A                 	db	10
  1374   007EAF  00                 	db	0
  1375   007EB0                     STR_3:
  1376                           
  1377                           ; BSR set to: 0
  1378   007EB0  44                 	db	68	;'D'
  1379   007EB1  65                 	db	101	;'e'
  1380   007EB2  76                 	db	118	;'v'
  1381   007EB3  27                 	db	39
  1382   007EB4  32                 	db	50	;'2'
  1383   007EB5  31                 	db	49	;'1'
  1384   007EB6  20                 	db	32
  1385   007EB7  42                 	db	66	;'B'
  1386   007EB8  6F                 	db	111	;'o'
  1387   007EB9  61                 	db	97	;'a'
  1388   007EBA  72                 	db	114	;'r'
  1389   007EBB  64                 	db	100	;'d'
  1390   007EBC  20                 	db	32
  1391   007EBD  77                 	db	119	;'w'
  1392   007EBE  69                 	db	105	;'i'
  1393   007EBF  72                 	db	114	;'r'
  1394   007EC0  69                 	db	105	;'i'
  1395   007EC1  6E                 	db	110	;'n'
  1396   007EC2  67                 	db	103	;'g'
  1397   007EC3  0D                 	db	13
  1398   007EC4  0A                 	db	10
  1399   007EC5  00                 	db	0
  1400   007EC6                     STR_43:
  1401                           
  1402                           ; BSR set to: 0
  1403   007EC6  4E                 	db	78	;'N'
  1404   007EC7  6F                 	db	111	;'o'
  1405   007EC8  20                 	db	32
  1406   007EC9  6D                 	db	109	;'m'
  1407   007ECA  65                 	db	101	;'e'
  1408   007ECB  73                 	db	115	;'s'
  1409   007ECC  73                 	db	115	;'s'
  1410   007ECD  61                 	db	97	;'a'
  1411   007ECE  67                 	db	103	;'g'
  1412   007ECF  65                 	db	101	;'e'
  1413   007ED0  20                 	db	32
  1414   007ED1  72                 	db	114	;'r'
  1415   007ED2  65                 	db	101	;'e'
  1416   007ED3  63                 	db	99	;'c'
  1417   007ED4  65                 	db	101	;'e'
  1418   007ED5  69                 	db	105	;'i'
  1419   007ED6  76                 	db	118	;'v'
  1420   007ED7  65                 	db	101	;'e'
  1421   007ED8  64                 	db	100	;'d'
  1422   007ED9  0A                 	db	10
  1423   007EDA  0D                 	db	13
  1424   007EDB  00                 	db	0
  1425   007EDC                     STR_45:
  1426                           
  1427                           ; BSR set to: 0
  1428   007EDC  20                 	db	32
  1429   007EDD  20                 	db	32
  1430   007EDE  25                 	db	37
  1431   007EDF  75                 	db	117	;'u'
  1432   007EE0  20                 	db	32
  1433   007EE1  25                 	db	37
  1434   007EE2  75                 	db	117	;'u'
  1435   007EE3  20                 	db	32
  1436   007EE4  25                 	db	37
  1437   007EE5  75                 	db	117	;'u'
  1438   007EE6  20                 	db	32
  1439   007EE7  25                 	db	37
  1440   007EE8  75                 	db	117	;'u'
  1441   007EE9  20                 	db	32
  1442   007EEA  20                 	db	32
  1443   007EEB  20                 	db	32
  1444   007EEC  20                 	db	32
  1445   007EED  25                 	db	37
  1446   007EEE  73                 	db	115	;'s'
  1447   007EEF  0A                 	db	10
  1448   007EF0  0D                 	db	13
  1449   007EF1  00                 	db	0
  1450   007EF2                     STR_52:
  1451                           
  1452                           ; BSR set to: 0
  1453   007EF2  4A                 	db	74	;'J'
  1454   007EF3  75                 	db	117	;'u'
  1455   007EF4  73                 	db	115	;'s'
  1456   007EF5  74                 	db	116	;'t'
  1457   007EF6  20                 	db	32
  1458   007EF7  72                 	db	114	;'r'
  1459   007EF8  65                 	db	101	;'e'
  1460   007EF9  73                 	db	115	;'s'
  1461   007EFA  65                 	db	101	;'e'
  1462   007EFB  74                 	db	116	;'t'
  1463   007EFC  20                 	db	32
  1464   007EFD  45                 	db	69	;'E'
  1465   007EFE  55                 	db	85	;'U'
  1466   007EFF  53                 	db	83	;'S'
  1467   007F00  41                 	db	65	;'A'
  1468   007F01  52                 	db	82	;'R'
  1469   007F02  54                 	db	84	;'T'
  1470   007F03  32                 	db	50	;'2'
  1471   007F04  0D                 	db	13
  1472   007F05  0A                 	db	10
  1473   007F06  00                 	db	0
  1474   007F07                     STR_13:
  1475                           
  1476                           ; BSR set to: 0
  1477   007F07  5A                 	db	90	;'Z'
  1478   007F08  3A                 	db	58	;':'
  1479   007F09  20                 	db	32
  1480   007F0A  52                 	db	82	;'R'
  1481   007F0B  65                 	db	101	;'e'
  1482   007F0C  73                 	db	115	;'s'
  1483   007F0D  65                 	db	101	;'e'
  1484   007F0E  74                 	db	116	;'t'
  1485   007F0F  20                 	db	32
  1486   007F10  70                 	db	112	;'p'
  1487   007F11  72                 	db	114	;'r'
  1488   007F12  6F                 	db	111	;'o'
  1489   007F13  63                 	db	99	;'c'
  1490   007F14  65                 	db	101	;'e'
  1491   007F15  73                 	db	115	;'s'
  1492   007F16  73                 	db	115	;'s'
  1493   007F17  6F                 	db	111	;'o'
  1494   007F18  72                 	db	114	;'r'
  1495   007F19  0D                 	db	13
  1496   007F1A  0A                 	db	10
  1497   007F1B  00                 	db	0
  1498   007F1C                     STR_15:
  1499                           
  1500                           ; BSR set to: 0
  1501   007F1C  62                 	db	98	;'b'
  1502   007F1D  3A                 	db	58	;':'
  1503   007F1E  20                 	db	32
  1504   007F1F  73                 	db	115	;'s'
  1505   007F20  65                 	db	101	;'e'
  1506   007F21  74                 	db	116	;'t'
  1507   007F22  20                 	db	32
  1508   007F23  42                 	db	66	;'B'
  1509   007F24  61                 	db	97	;'a'
  1510   007F25  75                 	db	117	;'u'
  1511   007F26  64                 	db	100	;'d'
  1512   007F27  20                 	db	32
  1513   007F28  72                 	db	114	;'r'
  1514   007F29  61                 	db	97	;'a'
  1515   007F2A  74                 	db	116	;'t'
  1516   007F2B  65                 	db	101	;'e'
  1517   007F2C  0A                 	db	10
  1518   007F2D  0D                 	db	13
  1519   007F2E  00                 	db	0
  1520   007F2F                     STR_53:
  1521                           
  1522                           ; BSR set to: 0
  1523   007F2F  55                 	db	85	;'U'
  1524   007F30  6E                 	db	110	;'n'
  1525   007F31  6B                 	db	107	;'k'
  1526   007F32  6E                 	db	110	;'n'
  1527   007F33  6F                 	db	111	;'o'
  1528   007F34  77                 	db	119	;'w'
  1529   007F35  6E                 	db	110	;'n'
  1530   007F36  20                 	db	32
  1531   007F37  6B                 	db	107	;'k'
  1532   007F38  65                 	db	101	;'e'
  1533   007F39  79                 	db	121	;'y'
  1534   007F3A  20                 	db	32
  1535   007F3B  25                 	db	37
  1536   007F3C  63                 	db	99	;'c'
  1537   007F3D  0D                 	db	13
  1538   007F3E  0A                 	db	10
  1539   007F3F  00                 	db	0
  1540   007F40                     STR_32:
  1541                           
  1542                           ; BSR set to: 0
  1543   007F40  34                 	db	52	;'4'
  1544   007F41  3A                 	db	58	;':'
  1545   007F42  20                 	db	32
  1546   007F43  31                 	db	49	;'1'
  1547   007F44  39                 	db	57	;'9'
  1548   007F45  32                 	db	50	;'2'
  1549   007F46  30                 	db	48	;'0'
  1550   007F47  30                 	db	48	;'0'
  1551   007F48  20                 	db	32
  1552   007F49  62                 	db	98	;'b'
  1553   007F4A  61                 	db	97	;'a'
  1554   007F4B  75                 	db	117	;'u'
  1555   007F4C  64                 	db	100	;'d'
  1556   007F4D  0D                 	db	13
  1557   007F4E  0A                 	db	10
  1558   007F4F  00                 	db	0
  1559   007F50                     STR_55:
  1560                           
  1561                           ; BSR set to: 0
  1562   007F50  3E                 	db	62	;'>'
  1563   007F51  3E                 	db	62	;'>'
  1564   007F52  20                 	db	32
  1565   007F53  52                 	db	82	;'R'
  1566   007F54  78                 	db	120	;'x'
  1567   007F55  44                 	db	68	;'D'
  1568   007F56  61                 	db	97	;'a'
  1569   007F57  74                 	db	116	;'t'
  1570   007F58  61                 	db	97	;'a'
  1571   007F59  3A                 	db	58	;':'
  1572   007F5A  20                 	db	32
  1573   007F5B  25                 	db	37
  1574   007F5C  63                 	db	99	;'c'
  1575   007F5D  0A                 	db	10
  1576   007F5E  0D                 	db	13
  1577   007F5F  00                 	db	0
  1578   007F60                     STR_56:
  1579                           
  1580                           ; BSR set to: 0
  1581   007F60  3E                 	db	62	;'>'
  1582   007F61  3E                 	db	62	;'>'
  1583   007F62  20                 	db	32
  1584   007F63  52                 	db	82	;'R'
  1585   007F64  78                 	db	120	;'x'
  1586   007F65  43                 	db	67	;'C'
  1587   007F66  53                 	db	83	;'S'
  1588   007F67  75                 	db	117	;'u'
  1589   007F68  6D                 	db	109	;'m'
  1590   007F69  3A                 	db	58	;':'
  1591   007F6A  20                 	db	32
  1592   007F6B  25                 	db	37
  1593   007F6C  75                 	db	117	;'u'
  1594   007F6D  0A                 	db	10
  1595   007F6E  0D                 	db	13
  1596   007F6F  00                 	db	0
  1597   007F70                     STR_29:
  1598                           
  1599                           ; BSR set to: 0
  1600   007F70  31                 	db	49	;'1'
  1601   007F71  3A                 	db	58	;':'
  1602   007F72  20                 	db	32
  1603   007F73  31                 	db	49	;'1'
  1604   007F74  32                 	db	50	;'2'
  1605   007F75  30                 	db	48	;'0'
  1606   007F76  30                 	db	48	;'0'
  1607   007F77  20                 	db	32
  1608   007F78  62                 	db	98	;'b'
  1609   007F79  61                 	db	97	;'a'
  1610   007F7A  75                 	db	117	;'u'
  1611   007F7B  64                 	db	100	;'d'
  1612   007F7C  0D                 	db	13
  1613   007F7D  0A                 	db	10
  1614   007F7E  00                 	db	0
  1615   007F7F                     STR_30:
  1616                           
  1617                           ; BSR set to: 0
  1618   007F7F  32                 	db	50	;'2'
  1619   007F80  3A                 	db	58	;':'
  1620   007F81  20                 	db	32
  1621   007F82  32                 	db	50	;'2'
  1622   007F83  34                 	db	52	;'4'
  1623   007F84  30                 	db	48	;'0'
  1624   007F85  30                 	db	48	;'0'
  1625   007F86  20                 	db	32
  1626   007F87  62                 	db	98	;'b'
  1627   007F88  61                 	db	97	;'a'
  1628   007F89  75                 	db	117	;'u'
  1629   007F8A  64                 	db	100	;'d'
  1630   007F8B  0D                 	db	13
  1631   007F8C  0A                 	db	10
  1632   007F8D  00                 	db	0
  1633   007F8E                     STR_31:
  1634                           
  1635                           ; BSR set to: 0
  1636   007F8E  33                 	db	51	;'3'
  1637   007F8F  3A                 	db	58	;':'
  1638   007F90  20                 	db	32
  1639   007F91  39                 	db	57	;'9'
  1640   007F92  36                 	db	54	;'6'
  1641   007F93  30                 	db	48	;'0'
  1642   007F94  30                 	db	48	;'0'
  1643   007F95  20                 	db	32
  1644   007F96  62                 	db	98	;'b'
  1645   007F97  61                 	db	97	;'a'
  1646   007F98  75                 	db	117	;'u'
  1647   007F99  64                 	db	100	;'d'
  1648   007F9A  0D                 	db	13
  1649   007F9B  0A                 	db	10
  1650   007F9C  00                 	db	0
  1651   007F9D                     STR_11:
  1652                           
  1653                           ; BSR set to: 0
  1654   007F9D  3F                 	db	63	;'?'
  1655   007F9E  3A                 	db	58	;':'
  1656   007F9F  20                 	db	32
  1657   007FA0  68                 	db	104	;'h'
  1658   007FA1  65                 	db	101	;'e'
  1659   007FA2  6C                 	db	108	;'l'
  1660   007FA3  70                 	db	112	;'p'
  1661   007FA4  20                 	db	32
  1662   007FA5  6D                 	db	109	;'m'
  1663   007FA6  65                 	db	101	;'e'
  1664   007FA7  6E                 	db	110	;'n'
  1665   007FA8  75                 	db	117	;'u'
  1666   007FA9  0D                 	db	13
  1667   007FAA  0A                 	db	10
  1668   007FAB  00                 	db	0
  1669   007FAC                     STR_28:
  1670                           
  1671                           ; BSR set to: 0
  1672   007FAC  30                 	db	48	;'0'
  1673   007FAD  3A                 	db	58	;':'
  1674   007FAE  20                 	db	32
  1675   007FAF  33                 	db	51	;'3'
  1676   007FB0  30                 	db	48	;'0'
  1677   007FB1  30                 	db	48	;'0'
  1678   007FB2  20                 	db	32
  1679   007FB3  62                 	db	98	;'b'
  1680   007FB4  61                 	db	97	;'a'
  1681   007FB5  75                 	db	117	;'u'
  1682   007FB6  64                 	db	100	;'d'
  1683   007FB7  0D                 	db	13
  1684   007FB8  0A                 	db	10
  1685   007FB9  00                 	db	0
  1686   007FBA                     STR_8:
  1687                           
  1688                           ; BSR set to: 0
  1689   007FBA  32                 	db	50	;'2'
  1690   007FBB  34                 	db	52	;'4'
  1691   007FBC  30                 	db	48	;'0'
  1692   007FBD  30                 	db	48	;'0'
  1693   007FBE  20                 	db	32
  1694   007FBF  42                 	db	66	;'B'
  1695   007FC0  61                 	db	97	;'a'
  1696   007FC1  75                 	db	117	;'u'
  1697   007FC2  64                 	db	100	;'d'
  1698   007FC3  0D                 	db	13
  1699   007FC4  0A                 	db	10
  1700   007FC5  00                 	db	0
  1701   007FC6                     STR_46:
  1702                           
  1703                           ; BSR set to: 0
  1704   007FC6  25                 	db	37
  1705   007FC7  75                 	db	117	;'u'
  1706   007FC8  3A                 	db	58	;':'
  1707   007FC9  20                 	db	32
  1708   007FCA  25                 	db	37
  1709   007FCB  78                 	db	120	;'x'
  1710   007FCC  20                 	db	32
  1711   007FCD  25                 	db	37
  1712   007FCE  63                 	db	99	;'c'
  1713   007FCF  0A                 	db	10
  1714   007FD0  0D                 	db	13
  1715   007FD1  00                 	db	0
  1716   007FD2                     STR_9:
  1717                           
  1718                           ; BSR set to: 0
  1719   007FD2  50                 	db	80	;'P'
  1720   007FD3  52                 	db	82	;'R'
  1721   007FD4  32                 	db	50	;'2'
  1722   007FD5  3A                 	db	58	;':'
  1723   007FD6  20                 	db	32
  1724   007FD7  25                 	db	37
  1725   007FD8  64                 	db	100	;'d'
  1726   007FD9  0D                 	db	13
  1727   007FDA  0A                 	db	10
  1728   007FDB  00                 	db	0
  1729   007FDC                     STR_1:
  1730                           
  1731                           ; BSR set to: 0
  1732   007FDC  4C                 	db	76	;'L'
  1733   007FDD  61                 	db	97	;'a'
  1734   007FDE  62                 	db	98	;'b'
  1735   007FDF  20                 	db	32
  1736   007FE0  37                 	db	55	;'7'
  1737   007FE1  0D                 	db	13
  1738   007FE2  0A                 	db	10
  1739   007FE3  00                 	db	0
  1740   007FE4                     STR_24:
  1741                           
  1742                           ; BSR set to: 0
  1743   007FE4  6F                 	db	111	;'o'
  1744   007FE5  3A                 	db	58	;':'
  1745   007FE6  09                 	db	9
  1746   007FE7  6F                 	db	111	;'o'
  1747   007FE8  6B                 	db	107	;'k'
  1748   007FE9  0D                 	db	13
  1749   007FEA  0A                 	db	10
  1750   007FEB  00                 	db	0
  1751   007FEC                     STR_12:
  1752                           
  1753                           ; BSR set to: 0
  1754   007FEC  6F                 	db	111	;'o'
  1755   007FED  3A                 	db	58	;':'
  1756   007FEE  20                 	db	32
  1757   007FEF  6B                 	db	107	;'k'
  1758   007FF0  0D                 	db	13
  1759   007FF1  0A                 	db	10
  1760   007FF2  00                 	db	0
  1761   007FF3                     STR_5:
  1762                           
  1763                           ; BSR set to: 0
  1764   007FF3  0A                 	db	10
  1765   007FF4  0D                 	db	13
  1766   007FF5  3E                 	db	62	;'>'
  1767   007FF6  20                 	db	32
  1768   007FF7  00                 	db	0
  1769   007FF8                     STR_60:
  1770                           
  1771                           ; BSR set to: 0
  1772   007FF8  6C                 	db	108	;'l'
  1773   007FF9  6C                 	db	108	;'l'
  1774   007FFA  73                 	db	115	;'s'
  1775   007FFB  00                 	db	0
  1776   007FFC                     STR_35:
  1777                           
  1778                           ; BSR set to: 0
  1779   007FFC  25                 	db	37
  1780   007FFD  63                 	db	99	;'c'
  1781   007FFE  00                 	db	0
  1782   007FFF  00                 	db	0	; dummy byte at the end
  1783   000000                     
  1784                           ; #config settings
  1785                           
  1786                           	psect	cinit
  1787   003BB8                     __pcinit:
  1788                           	callstack 0
  1789   003BB8                     start_initialization:
  1790                           	callstack 0
  1791   003BB8                     __initialization:
  1792                           	callstack 0
  1793                           
  1794                           ; Initialize objects allocated to BANK1 (19 bytes)
  1795                           ; load TBLPTR registers with __pidataBANK1
  1796   003BB8  0EAA               	movlw	low __pidataBANK1
  1797   003BBA  6EF6               	movwf	tblptrl,c
  1798   003BBC  0E42               	movlw	high __pidataBANK1
  1799   003BBE  6EF7               	movwf	tblptrh,c
  1800   003BC0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1801   003BC2  6EF8               	movwf	tblptru,c
  1802   003BC4  EE01  F0B7         	lfsr	0,__pdataBANK1
  1803   003BC8  EE10 F013          	lfsr	1,19
  1804   003BCC                     copy_data0:
  1805   003BCC  0009               	tblrd		*+
  1806   003BCE  CFF5 FFEE          	movff	tablat,postinc0
  1807   003BD2  50E5               	movf	postdec1,w,c
  1808   003BD4  50E1               	movf	fsr1l,w,c
  1809   003BD6  E1FA               	bnz	copy_data0
  1810                           
  1811                           ; Initialize objects allocated to BANK0 (1 bytes)
  1812                           ; load TBLPTR registers with __pidataBANK0
  1813   003BD8  0E56               	movlw	low __pidataBANK0
  1814   003BDA  6EF6               	movwf	tblptrl,c
  1815   003BDC  0E43               	movlw	high __pidataBANK0
  1816   003BDE  6EF7               	movwf	tblptrh,c
  1817   003BE0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1818   003BE2  6EF8               	movwf	tblptru,c
  1819   003BE4  0009               	tblrd		*+	;fetch initializer
  1820   003BE6  CFF5 F0E5          	movff	tablat,__pdataBANK0
  1821                           
  1822                           ; Clear objects allocated to BANK1 (143 bytes)
  1823   003BEA  EE01  F000         	lfsr	0,__pbssBANK1
  1824   003BEE  0E8F               	movlw	143
  1825   003BF0                     clear_0:
  1826   003BF0  6AEE               	clrf	postinc0,c
  1827   003BF2  06E8               	decf	wreg,f,c
  1828   003BF4  E1FD               	bnz	clear_0
  1829                           
  1830                           ; Clear objects allocated to BANK0 (23 bytes)
  1831   003BF6  EE00  F0CE         	lfsr	0,__pbssBANK0
  1832   003BFA  0E17               	movlw	23
  1833   003BFC                     clear_1:
  1834   003BFC  6AEE               	clrf	postinc0,c
  1835   003BFE  06E8               	decf	wreg,f,c
  1836   003C00  E1FD               	bnz	clear_1
  1837   003C02                     end_of_initialization:
  1838                           	callstack 0
  1839   003C02                     __end_of__initialization:
  1840                           	callstack 0
  1841   003C02  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1842   003C04  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1843   003C06  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1844   003C08  6EF8               	movwf	tblptru,c
  1845   003C0A  0100               	movlb	0
  1846   003C0C  EF8E  F000         	goto	_main	;jump to C main() function
  1847                           
  1848                           	psect	bssBANK0
  1849   0000CE                     __pbssBANK0:
  1850                           	callstack 0
  1851   0000CE                     _width:
  1852                           	callstack 0
  1853   0000CE                     	ds	2
  1854   0000D0                     _prec:
  1855                           	callstack 0
  1856   0000D0                     	ds	2
  1857   0000D2                     _timer1ReloadVal:
  1858                           	callstack 0
  1859   0000D2                     	ds	2
  1860   0000D4                     _flags:
  1861                           	callstack 0
  1862   0000D4                     	ds	1
  1863   0000D5                     rxEUSART2ISR@state:
  1864                           	callstack 0
  1865   0000D5                     	ds	1
  1866   0000D6                     rxEUSART2ISR@i:
  1867                           	callstack 0
  1868   0000D6                     	ds	1
  1869   0000D7                     txTMR1ISR@state:
  1870                           	callstack 0
  1871   0000D7                     	ds	1
  1872   0000D8                     txTMR1ISR@i:
  1873                           	callstack 0
  1874   0000D8                     	ds	1
  1875   0000D9                     _receiveBusy:
  1876                           	callstack 0
  1877   0000D9                     	ds	1
  1878   0000DA                     _ri:
  1879                           	callstack 0
  1880   0000DA                     	ds	1
  1881   0000DB                     _transmitBusy:
  1882                           	callstack 0
  1883   0000DB                     	ds	1
  1884   0000DC                     _ti:
  1885                           	callstack 0
  1886   0000DC                     	ds	1
  1887   0000DD                     _eusart1RxLastError:
  1888                           	callstack 0
  1889   0000DD                     	ds	1
  1890   0000DE                     _eusart2RxLastError:
  1891                           	callstack 0
  1892   0000DE                     	ds	1
  1893   0000DF                     _eusart2RxCount:
  1894                           	callstack 0
  1895   0000DF                     	ds	1
  1896   0000E0                     _eusart2RxTail:
  1897                           	callstack 0
  1898   0000E0                     	ds	1
  1899   0000E1                     _eusart2RxHead:
  1900                           	callstack 0
  1901   0000E1                     	ds	1
  1902   0000E2                     _eusart2TxBufferRemaining:
  1903                           	callstack 0
  1904   0000E2                     	ds	1
  1905   0000E3                     _eusart2TxTail:
  1906                           	callstack 0
  1907   0000E3                     	ds	1
  1908   0000E4                     _eusart2TxHead:
  1909                           	callstack 0
  1910   0000E4                     	ds	1
  1911                           
  1912                           	psect	dataBANK0
  1913   0000E5                     __pdataBANK0:
  1914                           	callstack 0
  1915   0000E5                     txTMR1ISR@mask:
  1916                           	callstack 0
  1917   0000E5                     	ds	1
  1918                           
  1919                           	psect	bssBANK1
  1920   000100                     __pbssBANK1:
  1921                           	callstack 0
  1922   000100                     _eusart2RxStatusBuffer:
  1923                           	callstack 0
  1924   000100                     	ds	8
  1925   000108                     _eusart2RxBuffer:
  1926                           	callstack 0
  1927   000108                     	ds	8
  1928   000110                     _eusart2TxBuffer:
  1929                           	callstack 0
  1930   000110                     	ds	8
  1931   000118                     _TMR1_InterruptHandler:
  1932                           	callstack 0
  1933   000118                     	ds	2
  1934   00011A                     _EUSART1_ErrorHandler:
  1935                           	callstack 0
  1936   00011A                     	ds	2
  1937   00011C                     _EUSART1_OverrunErrorHandler:
  1938                           	callstack 0
  1939   00011C                     	ds	2
  1940   00011E                     _EUSART1_FramingErrorHandler:
  1941                           	callstack 0
  1942   00011E                     	ds	2
  1943   000120                     _EUSART2_ErrorHandler:
  1944                           	callstack 0
  1945   000120                     	ds	2
  1946   000122                     _EUSART2_OverrunErrorHandler:
  1947                           	callstack 0
  1948   000122                     	ds	2
  1949   000124                     _EUSART2_FramingErrorHandler:
  1950                           	callstack 0
  1951   000124                     	ds	2
  1952   000126                     _EUSART2_RxDefaultInterruptHandler:
  1953                           	callstack 0
  1954   000126                     	ds	2
  1955   000128                     _EUSART2_TxDefaultInterruptHandler:
  1956                           	callstack 0
  1957   000128                     	ds	2
  1958   00012A                     _received:
  1959                           	callstack 0
  1960   00012A                     	ds	1
  1961   00012B                     _rcsum:
  1962                           	callstack 0
  1963   00012B                     	ds	1
  1964   00012C                     _rsum:
  1965                           	callstack 0
  1966   00012C                     	ds	1
  1967   00012D                     _transmitting:
  1968                           	callstack 0
  1969   00012D                     	ds	1
  1970   00012E                     _tsum:
  1971                           	callstack 0
  1972   00012E                     	ds	1
  1973   00012F                     _dbuf:
  1974                           	callstack 0
  1975   00012F                     	ds	32
  1976   00014F                     _receiveBuffer:
  1977                           	callstack 0
  1978   00014F                     	ds	32
  1979   00016F                     _transmitBuffer:
  1980                           	callstack 0
  1981   00016F                     	ds	32
  1982                           
  1983                           	psect	dataBANK1
  1984   0001B7                     __pdataBANK1:
  1985                           	callstack 0
  1986   0001B7                     _bitPeriod:
  1987                           	callstack 0
  1988   0001B7                     	ds	10
  1989   0001C1                     stoa@F1157:
  1990                           	callstack 0
  1991   0001C1                     	ds	7
  1992   0001C8                     _baudRateSelected:
  1993                           	callstack 0
  1994   0001C8                     	ds	1
  1995   0001C9                     _character:
  1996                           	callstack 0
  1997   0001C9                     	ds	1
  1998                           
  1999                           	psect	cstackBANK1
  2000   00018F                     __pcstackBANK1:
  2001                           	callstack 0
  2002   00018F                     vfpfcnvrt@c:
  2003                           	callstack 0
  2004                           
  2005                           ; 1 bytes @ 0x0
  2006   00018F                     	ds	1
  2007   000190                     vfpfcnvrt@done:
  2008                           	callstack 0
  2009                           
  2010                           ; 2 bytes @ 0x1
  2011   000190                     	ds	2
  2012   000192                     _vfpfcnvrt$2122:
  2013                           	callstack 0
  2014                           
  2015                           ; 2 bytes @ 0x3
  2016   000192                     	ds	2
  2017   000194                     vfpfcnvrt@convarg:
  2018                           	callstack 0
  2019                           
  2020                           ; 8 bytes @ 0x5
  2021   000194                     	ds	8
  2022   00019C                     vfpfcnvrt@cp:
  2023                           	callstack 0
  2024                           
  2025                           ; 2 bytes @ 0xD
  2026   00019C                     	ds	2
  2027   00019E                     ?_printf:
  2028                           	callstack 0
  2029   00019E                     printf@fmt:
  2030                           	callstack 0
  2031                           
  2032                           ; 2 bytes @ 0xF
  2033   00019E                     	ds	12
  2034   0001AA                     ??_read8bit:
  2035                           
  2036                           ; 1 bytes @ 0x1B
  2037   0001AA                     	ds	5
  2038   0001AF                     read8bit@maxValue:
  2039                           	callstack 0
  2040                           
  2041                           ; 1 bytes @ 0x20
  2042   0001AF                     	ds	1
  2043   0001B0                     read8bit@i:
  2044                           	callstack 0
  2045                           
  2046                           ; 1 bytes @ 0x21
  2047   0001B0                     	ds	1
  2048   0001B1                     read8bit@digit:
  2049                           	callstack 0
  2050                           
  2051                           ; 1 bytes @ 0x22
  2052   0001B1                     	ds	1
  2053   0001B2                     read8bit@character:
  2054                           	callstack 0
  2055                           
  2056                           ; 1 bytes @ 0x23
  2057   0001B2                     	ds	1
  2058   0001B3                     read8bit@numb:
  2059                           	callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x24
  2062   0001B3                     	ds	1
  2063   0001B4                     main@cmd:
  2064                           	callstack 0
  2065                           
  2066                           ; 1 bytes @ 0x25
  2067   0001B4                     	ds	1
  2068   0001B5                     main@i:
  2069                           	callstack 0
  2070                           
  2071                           ; 2 bytes @ 0x26
  2072   0001B5                     	ds	2
  2073                           
  2074                           	psect	cstackBANK0
  2075   000060                     __pcstackBANK0:
  2076                           	callstack 0
  2077   000060                     ?i2_vfprintf:
  2078                           	callstack 0
  2079   000060                     i2vfprintf@fp:
  2080                           	callstack 0
  2081                           
  2082                           ; 2 bytes @ 0x0
  2083   000060                     	ds	2
  2084   000062                     i2vfprintf@fmt:
  2085                           	callstack 0
  2086                           
  2087                           ; 2 bytes @ 0x2
  2088   000062                     	ds	2
  2089   000064                     i2vfprintf@ap:
  2090                           	callstack 0
  2091                           
  2092                           ; 2 bytes @ 0x4
  2093   000064                     	ds	2
  2094   000066                     ?i2_printf:
  2095                           	callstack 0
  2096   000066                     i2printf@fmt:
  2097                           	callstack 0
  2098                           
  2099                           ; 2 bytes @ 0x6
  2100   000066                     	ds	4
  2101   00006A                     ??_rxEUSART2ISR:
  2102                           
  2103                           ; 1 bytes @ 0xA
  2104   00006A                     	ds	2
  2105   00006C                     ??_INTERRUPT_InterruptManager:
  2106                           
  2107                           ; 1 bytes @ 0xC
  2108   00006C                     	ds	12
  2109   000078                     ?_strlen:
  2110                           	callstack 0
  2111   000078                     ?_isdigit:
  2112                           	callstack 0
  2113   000078                     ?_strncmp:
  2114                           	callstack 0
  2115   000078                     ?_isspace:
  2116                           	callstack 0
  2117   000078                     ?___wmul:
  2118                           	callstack 0
  2119   000078                     ?___awdiv:
  2120                           	callstack 0
  2121   000078                     ?___aodiv:
  2122                           	callstack 0
  2123   000078                     ?___aomod:
  2124                           	callstack 0
  2125   000078                     ?___lodiv:
  2126                           	callstack 0
  2127   000078                     ?___lomod:
  2128                           	callstack 0
  2129   000078                     EUSART1_Write@txData:
  2130                           	callstack 0
  2131   000078                     EUSART2_SetFramingErrorHandler@interruptHandler:
  2132                           	callstack 0
  2133   000078                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  2134                           	callstack 0
  2135   000078                     EUSART2_SetErrorHandler@interruptHandler:
  2136                           	callstack 0
  2137   000078                     EUSART2_SetTxInterruptHandler@interruptHandler:
  2138                           	callstack 0
  2139   000078                     EUSART2_SetRxInterruptHandler@interruptHandler:
  2140                           	callstack 0
  2141   000078                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2142                           	callstack 0
  2143   000078                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2144                           	callstack 0
  2145   000078                     EUSART1_SetErrorHandler@interruptHandler:
  2146                           	callstack 0
  2147   000078                     TMR1_WriteTimer@timerVal:
  2148                           	callstack 0
  2149   000078                     TMR1_SetInterruptHandler@InterruptHandler:
  2150                           	callstack 0
  2151   000078                     EPWM2_LoadDutyValue@dutyValue:
  2152                           	callstack 0
  2153   000078                     ___wmul@multiplier:
  2154                           	callstack 0
  2155   000078                     ___awdiv@dividend:
  2156                           	callstack 0
  2157   000078                     isdigit@c:
  2158                           	callstack 0
  2159   000078                     isspace@c:
  2160                           	callstack 0
  2161   000078                     strlen@s:
  2162                           	callstack 0
  2163   000078                     strncmp@_l:
  2164                           	callstack 0
  2165   000078                     ___aodiv@dividend:
  2166                           	callstack 0
  2167   000078                     ___aomod@dividend:
  2168                           	callstack 0
  2169   000078                     ___lodiv@dividend:
  2170                           	callstack 0
  2171   000078                     ___lomod@dividend:
  2172                           	callstack 0
  2173                           
  2174                           ; 8 bytes @ 0x18
  2175   000078                     	ds	1
  2176   000079                     putch@txData:
  2177                           	callstack 0
  2178                           
  2179                           ; 1 bytes @ 0x19
  2180   000079                     	ds	1
  2181   00007A                     ??_isdigit:
  2182   00007A                     ??_isspace:
  2183   00007A                     ??_EPWM2_LoadDutyValue:
  2184   00007A                     ___wmul@multiplicand:
  2185                           	callstack 0
  2186   00007A                     ___awdiv@divisor:
  2187                           	callstack 0
  2188   00007A                     fputc@c:
  2189                           	callstack 0
  2190   00007A                     strlen@a:
  2191                           	callstack 0
  2192   00007A                     strncmp@_r:
  2193                           	callstack 0
  2194                           
  2195                           ; 2 bytes @ 0x1A
  2196   00007A                     	ds	2
  2197   00007C                     ___awdiv@counter:
  2198                           	callstack 0
  2199   00007C                     _isspace$2159:
  2200                           	callstack 0
  2201   00007C                     ___wmul@product:
  2202                           	callstack 0
  2203   00007C                     fputc@fp:
  2204                           	callstack 0
  2205   00007C                     strncmp@n:
  2206                           	callstack 0
  2207                           
  2208                           ; 2 bytes @ 0x1C
  2209   00007C                     	ds	1
  2210   00007D                     ___awdiv@sign:
  2211                           	callstack 0
  2212                           
  2213                           ; 1 bytes @ 0x1D
  2214   00007D                     	ds	1
  2215   00007E                     ??_fputc:
  2216   00007E                     ??_strncmp:
  2217   00007E                     ?_atoi:
  2218                           	callstack 0
  2219   00007E                     ___awdiv@quotient:
  2220                           	callstack 0
  2221   00007E                     atoi@s:
  2222                           	callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x1E
  2225   00007E                     	ds	1
  2226   00007F                     strncmp@l:
  2227                           	callstack 0
  2228                           
  2229                           ; 2 bytes @ 0x1F
  2230   00007F                     	ds	1
  2231   000080                     ??_atoi:
  2232   000080                     ___aodiv@divisor:
  2233                           	callstack 0
  2234   000080                     ___aomod@divisor:
  2235                           	callstack 0
  2236   000080                     ___lodiv@divisor:
  2237                           	callstack 0
  2238   000080                     ___lomod@divisor:
  2239                           	callstack 0
  2240                           
  2241                           ; 8 bytes @ 0x20
  2242   000080                     	ds	1
  2243   000081                     strncmp@r:
  2244                           	callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x21
  2247   000081                     	ds	2
  2248   000083                     ctoa@fp:
  2249                           	callstack 0
  2250   000083                     stoa@fp:
  2251                           	callstack 0
  2252   000083                     atoi@neg:
  2253                           	callstack 0
  2254   000083                     fputs@s:
  2255                           	callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x23
  2258   000083                     	ds	2
  2259   000085                     ctoa@c:
  2260                           	callstack 0
  2261   000085                     stoa@s:
  2262                           	callstack 0
  2263   000085                     atoi@n:
  2264                           	callstack 0
  2265   000085                     fputs@fp:
  2266                           	callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x25
  2269   000085                     	ds	1
  2270   000086                     ??_ctoa:
  2271                           
  2272                           ; 1 bytes @ 0x26
  2273   000086                     	ds	1
  2274   000087                     ??_stoa:
  2275   000087                     fputs@c:
  2276                           	callstack 0
  2277   000087                     ctoa@l:
  2278                           	callstack 0
  2279                           
  2280                           ; 2 bytes @ 0x27
  2281   000087                     	ds	1
  2282   000088                     ___aodiv@counter:
  2283                           	callstack 0
  2284   000088                     ___aomod@counter:
  2285                           	callstack 0
  2286   000088                     ___lomod@counter:
  2287                           	callstack 0
  2288   000088                     fputs@i:
  2289                           	callstack 0
  2290   000088                     stoa@nuls:
  2291                           	callstack 0
  2292   000088                     ___lodiv@quotient:
  2293                           	callstack 0
  2294                           
  2295                           ; 8 bytes @ 0x28
  2296   000088                     	ds	1
  2297   000089                     ___aodiv@sign:
  2298                           	callstack 0
  2299   000089                     ___aomod@sign:
  2300                           	callstack 0
  2301   000089                     ctoa@w:
  2302                           	callstack 0
  2303                           
  2304                           ; 2 bytes @ 0x29
  2305   000089                     	ds	1
  2306   00008A                     ?_abs:
  2307                           	callstack 0
  2308   00008A                     pad@fp:
  2309                           	callstack 0
  2310   00008A                     abs@a:
  2311                           	callstack 0
  2312   00008A                     ___aodiv@quotient:
  2313                           	callstack 0
  2314                           
  2315                           ; 8 bytes @ 0x2A
  2316   00008A                     	ds	2
  2317   00008C                     ??_abs:
  2318   00008C                     pad@buf:
  2319                           	callstack 0
  2320                           
  2321                           ; 2 bytes @ 0x2C
  2322   00008C                     	ds	2
  2323   00008E                     pad@p:
  2324                           	callstack 0
  2325                           
  2326                           ; 2 bytes @ 0x2E
  2327   00008E                     	ds	1
  2328   00008F                     stoa@i:
  2329                           	callstack 0
  2330                           
  2331                           ; 2 bytes @ 0x2F
  2332   00008F                     	ds	1
  2333   000090                     ??_pad:
  2334   000090                     ___lodiv@counter:
  2335                           	callstack 0
  2336                           
  2337                           ; 1 bytes @ 0x30
  2338   000090                     	ds	1
  2339   000091                     pad@i:
  2340                           	callstack 0
  2341   000091                     stoa@w:
  2342                           	callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x31
  2345   000091                     	ds	2
  2346   000093                     pad@w:
  2347                           	callstack 0
  2348   000093                     stoa@cp:
  2349                           	callstack 0
  2350                           
  2351                           ; 2 bytes @ 0x33
  2352   000093                     	ds	2
  2353   000095                     dtoa@fp:
  2354                           	callstack 0
  2355   000095                     stoa@p:
  2356                           	callstack 0
  2357   000095                     utoa@fp:
  2358                           	callstack 0
  2359   000095                     xtoa@fp:
  2360                           	callstack 0
  2361                           
  2362                           ; 2 bytes @ 0x35
  2363   000095                     	ds	2
  2364   000097                     stoa@l:
  2365                           	callstack 0
  2366   000097                     dtoa@d:
  2367                           	callstack 0
  2368   000097                     utoa@d:
  2369                           	callstack 0
  2370   000097                     xtoa@d:
  2371                           	callstack 0
  2372                           
  2373                           ; 8 bytes @ 0x37
  2374   000097                     	ds	8
  2375   00009F                     ??_dtoa:
  2376   00009F                     ??_utoa:
  2377   00009F                     ??_xtoa:
  2378                           
  2379                           ; 1 bytes @ 0x3F
  2380   00009F                     	ds	8
  2381   0000A7                     _dtoa$2074:
  2382                           	callstack 0
  2383   0000A7                     utoa@p:
  2384                           	callstack 0
  2385   0000A7                     _xtoa$2101:
  2386                           	callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x47
  2389   0000A7                     	ds	2
  2390   0000A9                     dtoa@p:
  2391                           	callstack 0
  2392   0000A9                     utoa@w:
  2393                           	callstack 0
  2394   0000A9                     xtoa@p:
  2395                           	callstack 0
  2396                           
  2397                           ; 2 bytes @ 0x49
  2398   0000A9                     	ds	2
  2399   0000AB                     dtoa@w:
  2400                           	callstack 0
  2401   0000AB                     xtoa@w:
  2402                           	callstack 0
  2403   0000AB                     utoa@n:
  2404                           	callstack 0
  2405                           
  2406                           ; 8 bytes @ 0x4B
  2407   0000AB                     	ds	2
  2408   0000AD                     dtoa@n:
  2409                           	callstack 0
  2410   0000AD                     xtoa@n:
  2411                           	callstack 0
  2412                           
  2413                           ; 8 bytes @ 0x4D
  2414   0000AD                     	ds	6
  2415   0000B3                     utoa@i:
  2416                           	callstack 0
  2417                           
  2418                           ; 2 bytes @ 0x53
  2419   0000B3                     	ds	2
  2420   0000B5                     dtoa@s:
  2421                           	callstack 0
  2422   0000B5                     xtoa@i:
  2423                           	callstack 0
  2424                           
  2425                           ; 2 bytes @ 0x55
  2426   0000B5                     	ds	1
  2427   0000B6                     dtoa@i:
  2428                           	callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x56
  2431   0000B6                     	ds	1
  2432   0000B7                     xtoa@c:
  2433                           	callstack 0
  2434                           
  2435                           ; 1 bytes @ 0x57
  2436   0000B7                     	ds	1
  2437   0000B8                     vfpfcnvrt@fp:
  2438                           	callstack 0
  2439                           
  2440                           ; 2 bytes @ 0x58
  2441   0000B8                     	ds	2
  2442   0000BA                     vfpfcnvrt@fmt:
  2443                           	callstack 0
  2444                           
  2445                           ; 2 bytes @ 0x5A
  2446   0000BA                     	ds	2
  2447   0000BC                     vfpfcnvrt@ap:
  2448                           	callstack 0
  2449                           
  2450                           ; 2 bytes @ 0x5C
  2451   0000BC                     	ds	2
  2452   0000BE                     ??_vfpfcnvrt:
  2453                           
  2454                           ; 1 bytes @ 0x5E
  2455   0000BE                     	ds	4
  2456   0000C2                     ?_vfprintf:
  2457                           	callstack 0
  2458   0000C2                     vfprintf@fp:
  2459                           	callstack 0
  2460                           
  2461                           ; 2 bytes @ 0x62
  2462   0000C2                     	ds	2
  2463   0000C4                     vfprintf@fmt:
  2464                           	callstack 0
  2465                           
  2466                           ; 2 bytes @ 0x64
  2467   0000C4                     	ds	2
  2468   0000C6                     vfprintf@ap:
  2469                           	callstack 0
  2470                           
  2471                           ; 2 bytes @ 0x66
  2472   0000C6                     	ds	2
  2473   0000C8                     vfprintf@cfmt:
  2474                           	callstack 0
  2475                           
  2476                           ; 2 bytes @ 0x68
  2477   0000C8                     	ds	2
  2478   0000CA                     printf@ap:
  2479                           	callstack 0
  2480                           
  2481                           ; 2 bytes @ 0x6A
  2482   0000CA                     	ds	2
  2483   0000CC                     ??_main:
  2484                           
  2485                           ; 1 bytes @ 0x6C
  2486   0000CC                     	ds	2
  2487                           
  2488                           	psect	cstackCOMRAM
  2489   000001                     __pcstackCOMRAM:
  2490                           	callstack 0
  2491   000001                     ?i2___wmul:
  2492                           	callstack 0
  2493   000001                     ?i2_strlen:
  2494                           	callstack 0
  2495   000001                     ?i2_strncmp:
  2496                           	callstack 0
  2497   000001                     ?i2___aodiv:
  2498                           	callstack 0
  2499   000001                     ?i2___aomod:
  2500                           	callstack 0
  2501   000001                     ?i2___lodiv:
  2502                           	callstack 0
  2503   000001                     ?i2___lomod:
  2504                           	callstack 0
  2505   000001                     i2EUSART1_Write@txData:
  2506                           	callstack 0
  2507   000001                     i2TMR1_WriteTimer@timerVal:
  2508                           	callstack 0
  2509   000001                     i2EPWM2_LoadDutyValue@dutyValue:
  2510                           	callstack 0
  2511   000001                     i2___wmul@multiplier:
  2512                           	callstack 0
  2513   000001                     i2isdigit@c:
  2514                           	callstack 0
  2515   000001                     i2isspace@c:
  2516                           	callstack 0
  2517   000001                     i2strlen@s:
  2518                           	callstack 0
  2519   000001                     i2strncmp@_l:
  2520                           	callstack 0
  2521   000001                     i2___aodiv@dividend:
  2522                           	callstack 0
  2523   000001                     i2___aomod@dividend:
  2524                           	callstack 0
  2525   000001                     i2___lodiv@dividend:
  2526                           	callstack 0
  2527   000001                     i2___lomod@dividend:
  2528                           	callstack 0
  2529                           
  2530                           ; 8 bytes @ 0x0
  2531   000001                     	ds	1
  2532   000002                     i2putch@txData:
  2533                           	callstack 0
  2534                           
  2535                           ; 1 bytes @ 0x1
  2536   000002                     	ds	1
  2537   000003                     ??i2_EPWM2_LoadDutyValue:
  2538   000003                     ??i2_isspace:
  2539   000003                     i2___wmul@multiplicand:
  2540                           	callstack 0
  2541   000003                     i2fputc@c:
  2542                           	callstack 0
  2543   000003                     i2strlen@a:
  2544                           	callstack 0
  2545   000003                     i2strncmp@_r:
  2546                           	callstack 0
  2547                           
  2548                           ; 2 bytes @ 0x2
  2549   000003                     	ds	2
  2550   000005                     ??_txTMR1ISR:
  2551   000005                     i2___wmul@product:
  2552                           	callstack 0
  2553   000005                     i2fputc@fp:
  2554                           	callstack 0
  2555   000005                     i2strncmp@n:
  2556                           	callstack 0
  2557                           
  2558                           ; 2 bytes @ 0x4
  2559   000005                     	ds	2
  2560   000007                     ??i2_fputc:
  2561   000007                     ??i2_strncmp:
  2562   000007                     ?i2_atoi:
  2563                           	callstack 0
  2564   000007                     i2atoi@s:
  2565                           	callstack 0
  2566                           
  2567                           ; 2 bytes @ 0x6
  2568   000007                     	ds	1
  2569   000008                     i2strncmp@l:
  2570                           	callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x7
  2573   000008                     	ds	1
  2574   000009                     ??i2_atoi:
  2575   000009                     i2___aodiv@divisor:
  2576                           	callstack 0
  2577   000009                     i2___aomod@divisor:
  2578                           	callstack 0
  2579   000009                     i2___lodiv@divisor:
  2580                           	callstack 0
  2581   000009                     i2___lomod@divisor:
  2582                           	callstack 0
  2583                           
  2584                           ; 8 bytes @ 0x8
  2585   000009                     	ds	1
  2586   00000A                     i2strncmp@r:
  2587                           	callstack 0
  2588                           
  2589                           ; 2 bytes @ 0x9
  2590   00000A                     	ds	2
  2591   00000C                     i2ctoa@fp:
  2592                           	callstack 0
  2593   00000C                     i2stoa@fp:
  2594                           	callstack 0
  2595   00000C                     i2atoi@neg:
  2596                           	callstack 0
  2597   00000C                     i2fputs@s:
  2598                           	callstack 0
  2599                           
  2600                           ; 2 bytes @ 0xB
  2601   00000C                     	ds	2
  2602   00000E                     i2ctoa@c:
  2603                           	callstack 0
  2604   00000E                     i2stoa@s:
  2605                           	callstack 0
  2606   00000E                     i2atoi@n:
  2607                           	callstack 0
  2608   00000E                     i2fputs@fp:
  2609                           	callstack 0
  2610                           
  2611                           ; 2 bytes @ 0xD
  2612   00000E                     	ds	1
  2613   00000F                     ??i2_ctoa:
  2614                           
  2615                           ; 1 bytes @ 0xE
  2616   00000F                     	ds	1
  2617   000010                     ??i2_stoa:
  2618   000010                     i2fputs@c:
  2619                           	callstack 0
  2620   000010                     i2ctoa@l:
  2621                           	callstack 0
  2622                           
  2623                           ; 2 bytes @ 0xF
  2624   000010                     	ds	1
  2625   000011                     i2___aodiv@counter:
  2626                           	callstack 0
  2627   000011                     i2___aomod@counter:
  2628                           	callstack 0
  2629   000011                     i2___lomod@counter:
  2630                           	callstack 0
  2631   000011                     i2fputs@i:
  2632                           	callstack 0
  2633   000011                     i2stoa@nuls:
  2634                           	callstack 0
  2635   000011                     i2___lodiv@quotient:
  2636                           	callstack 0
  2637                           
  2638                           ; 8 bytes @ 0x10
  2639   000011                     	ds	1
  2640   000012                     i2___aodiv@sign:
  2641                           	callstack 0
  2642   000012                     i2___aomod@sign:
  2643                           	callstack 0
  2644   000012                     i2ctoa@w:
  2645                           	callstack 0
  2646                           
  2647                           ; 2 bytes @ 0x11
  2648   000012                     	ds	1
  2649   000013                     ?i2_abs:
  2650                           	callstack 0
  2651   000013                     i2pad@fp:
  2652                           	callstack 0
  2653   000013                     i2abs@a:
  2654                           	callstack 0
  2655   000013                     i2___aodiv@quotient:
  2656                           	callstack 0
  2657                           
  2658                           ; 8 bytes @ 0x12
  2659   000013                     	ds	2
  2660   000015                     ??i2_abs:
  2661   000015                     i2pad@buf:
  2662                           	callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x14
  2665   000015                     	ds	2
  2666   000017                     i2pad@p:
  2667                           	callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x16
  2670   000017                     	ds	1
  2671   000018                     i2stoa@i:
  2672                           	callstack 0
  2673                           
  2674                           ; 2 bytes @ 0x17
  2675   000018                     	ds	1
  2676   000019                     ??i2_pad:
  2677   000019                     i2___lodiv@counter:
  2678                           	callstack 0
  2679                           
  2680                           ; 1 bytes @ 0x18
  2681   000019                     	ds	1
  2682   00001A                     i2pad@i:
  2683                           	callstack 0
  2684   00001A                     i2stoa@w:
  2685                           	callstack 0
  2686                           
  2687                           ; 2 bytes @ 0x19
  2688   00001A                     	ds	2
  2689   00001C                     i2pad@w:
  2690                           	callstack 0
  2691   00001C                     i2stoa@cp:
  2692                           	callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x1B
  2695   00001C                     	ds	2
  2696   00001E                     i2dtoa@fp:
  2697                           	callstack 0
  2698   00001E                     i2stoa@p:
  2699                           	callstack 0
  2700   00001E                     i2utoa@fp:
  2701                           	callstack 0
  2702   00001E                     i2xtoa@fp:
  2703                           	callstack 0
  2704                           
  2705                           ; 2 bytes @ 0x1D
  2706   00001E                     	ds	2
  2707   000020                     i2stoa@l:
  2708                           	callstack 0
  2709   000020                     i2dtoa@d:
  2710                           	callstack 0
  2711   000020                     i2utoa@d:
  2712                           	callstack 0
  2713   000020                     i2xtoa@d:
  2714                           	callstack 0
  2715                           
  2716                           ; 8 bytes @ 0x1F
  2717   000020                     	ds	8
  2718   000028                     ??i2_dtoa:
  2719   000028                     ??i2_utoa:
  2720   000028                     ??i2_xtoa:
  2721                           
  2722                           ; 1 bytes @ 0x27
  2723   000028                     	ds	8
  2724   000030                     i2_dtoa$2074:
  2725                           	callstack 0
  2726   000030                     i2utoa@p:
  2727                           	callstack 0
  2728   000030                     i2_xtoa$2101:
  2729                           	callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x2F
  2732   000030                     	ds	2
  2733   000032                     i2dtoa@p:
  2734                           	callstack 0
  2735   000032                     i2utoa@w:
  2736                           	callstack 0
  2737   000032                     i2xtoa@p:
  2738                           	callstack 0
  2739                           
  2740                           ; 2 bytes @ 0x31
  2741   000032                     	ds	2
  2742   000034                     i2dtoa@w:
  2743                           	callstack 0
  2744   000034                     i2xtoa@w:
  2745                           	callstack 0
  2746   000034                     i2utoa@n:
  2747                           	callstack 0
  2748                           
  2749                           ; 8 bytes @ 0x33
  2750   000034                     	ds	2
  2751   000036                     i2dtoa@n:
  2752                           	callstack 0
  2753   000036                     i2xtoa@n:
  2754                           	callstack 0
  2755                           
  2756                           ; 8 bytes @ 0x35
  2757   000036                     	ds	6
  2758   00003C                     i2utoa@i:
  2759                           	callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x3B
  2762   00003C                     	ds	2
  2763   00003E                     i2dtoa@i:
  2764                           	callstack 0
  2765   00003E                     i2xtoa@i:
  2766                           	callstack 0
  2767                           
  2768                           ; 2 bytes @ 0x3D
  2769   00003E                     	ds	2
  2770   000040                     i2dtoa@s:
  2771                           	callstack 0
  2772   000040                     i2xtoa@c:
  2773                           	callstack 0
  2774                           
  2775                           ; 1 bytes @ 0x3F
  2776   000040                     	ds	1
  2777   000041                     i2vfpfcnvrt@fp:
  2778                           	callstack 0
  2779                           
  2780                           ; 2 bytes @ 0x40
  2781   000041                     	ds	2
  2782   000043                     i2vfpfcnvrt@fmt:
  2783                           	callstack 0
  2784                           
  2785                           ; 2 bytes @ 0x42
  2786   000043                     	ds	2
  2787   000045                     i2vfpfcnvrt@ap:
  2788                           	callstack 0
  2789                           
  2790                           ; 2 bytes @ 0x44
  2791   000045                     	ds	2
  2792   000047                     ??i2_vfpfcnvrt:
  2793                           
  2794                           ; 1 bytes @ 0x46
  2795   000047                     	ds	4
  2796   00004B                     i2vfpfcnvrt@done:
  2797                           	callstack 0
  2798                           
  2799                           ; 2 bytes @ 0x4A
  2800   00004B                     	ds	2
  2801   00004D                     i2_vfpfcnvrt$2122:
  2802                           	callstack 0
  2803                           
  2804                           ; 2 bytes @ 0x4C
  2805   00004D                     	ds	2
  2806   00004F                     i2vfpfcnvrt@c:
  2807                           	callstack 0
  2808                           
  2809                           ; 1 bytes @ 0x4E
  2810   00004F                     	ds	1
  2811   000050                     i2vfpfcnvrt@convarg:
  2812                           	callstack 0
  2813                           
  2814                           ; 8 bytes @ 0x4F
  2815   000050                     	ds	8
  2816   000058                     i2vfpfcnvrt@cp:
  2817                           	callstack 0
  2818                           
  2819                           ; 2 bytes @ 0x57
  2820   000058                     	ds	2
  2821   00005A                     i2vfprintf@cfmt:
  2822                           	callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x59
  2825   00005A                     	ds	2
  2826   00005C                     i2printf@ap:
  2827                           	callstack 0
  2828                           
  2829                           ; 2 bytes @ 0x5B
  2830   00005C                     	ds	2
  2831   00005E                     rxEUSART2ISR@character:
  2832                           	callstack 0
  2833                           
  2834                           ; 1 bytes @ 0x5D
  2835   00005E                     	ds	1
  2836                           
  2837 ;;
  2838 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2839 ;;
  2840 ;; *************** function _main *****************
  2841 ;; Defined at:
  2842 ;;		line 68 in file "main.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  i               2   38[BANK1 ] unsigned short 
  2847 ;;  cmd             1   37[BANK1 ] unsigned char 
  2848 ;;  charater        1    0        unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2858 ;;      Params:         0       0       0       0       0       0       0
  2859 ;;      Locals:         0       0       3       0       0       0       0
  2860 ;;      Temps:          0       2       0       0       0       0       0
  2861 ;;      Totals:         0       2       3       0       0       0       0
  2862 ;;Total ram usage:        5 bytes
  2863 ;; Hardware stack levels required when called: 21
  2864 ;; This function calls:
  2865 ;;		_EPWM2_LoadDutyValue
  2866 ;;		_EUSART1_Read
  2867 ;;		_EUSART1_is_rx_ready
  2868 ;;		_EUSART2_Read
  2869 ;;		_EUSART2_SetRxInterruptHandler
  2870 ;;		_EUSART2_is_rx_ready
  2871 ;;		_SYSTEM_Initialize
  2872 ;;		_TMR1_SetInterruptHandler
  2873 ;;		_TMR1_WriteTimer
  2874 ;;		_printf
  2875 ;;		_read8bit
  2876 ;; This function is called by:
  2877 ;;		Startup code after reset
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text0
  2882   00011C                     __ptext0:
  2883                           	callstack 0
  2884   00011C                     _main:
  2885                           	callstack 10
  2886   00011C                     
  2887                           ;main.c: 75:     transmitBuffer[0] = '0';
  2888   00011C  0E30               	movlw	48
  2889   00011E  0101               	movlb	1	; () banked
  2890   000120  6F6F               	movwf	_transmitBuffer& (0+255),b
  2891                           
  2892                           ;main.c: 76:     transmitBuffer[1] = '1';
  2893   000122  0E31               	movlw	49
  2894   000124  6F70               	movwf	(_transmitBuffer+1)& (0+255),b
  2895   000126                     
  2896                           ; BSR set to: 1
  2897                           ;main.c: 77:     SYSTEM_Initialize();
  2898   000126  ECF9  F020         	call	_SYSTEM_Initialize	;wreg free
  2899   00012A                     
  2900                           ;main.c: 78:     EPWM2_LoadDutyValue(0);
  2901   00012A  0E00               	movlw	0
  2902   00012C  0100               	movlb	0	; () banked
  2903   00012E  6F79               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  2904   000130  0E00               	movlw	0
  2905   000132  6F78               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  2906   000134  ECE1  F01F         	call	_EPWM2_LoadDutyValue	;wreg free
  2907   000138                     
  2908                           ;main.c: 81:     TMR1_WriteTimer(0x0000);
  2909   000138  0E00               	movlw	0
  2910   00013A  0100               	movlb	0	; () banked
  2911   00013C  6F79               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  2912   00013E  0E00               	movlw	0
  2913   000140  6F78               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  2914   000142  EC29  F020         	call	_TMR1_WriteTimer	;wreg free
  2915   000146                     
  2916                           ;main.c: 82:     PIR1bits.TMR1IF = 0;
  2917   000146  909E               	bcf	158,0,c	;volatile
  2918   000148                     l526:
  2919   000148  A09E               	btfss	158,0,c	;volatile
  2920   00014A  EFA9  F000         	goto	u6701
  2921   00014E  EFAB  F000         	goto	u6700
  2922   000152                     u6701:
  2923   000152  EFA4  F000         	goto	l526
  2924   000156                     u6700:
  2925   000156                     
  2926                           ;main.c: 86:     if ((EUSART2_is_rx_ready())) (void) EUSART2_Read();
  2927   000156  EC34  F021         	call	_EUSART2_is_rx_ready	;wreg free
  2928   00015A  0900               	iorlw	0
  2929   00015C  B4D8               	btfsc	status,2,c
  2930   00015E  EFB3  F000         	goto	u6711
  2931   000162  EFB5  F000         	goto	u6710
  2932   000166                     u6711:
  2933   000166  EFB7  F000         	goto	l6408
  2934   00016A                     u6710:
  2935   00016A  EC59  F01E         	call	_EUSART2_Read	;wreg free
  2936   00016E                     l6408:
  2937                           
  2938                           ;main.c: 87:     if ((EUSART2_is_rx_ready())) (void) EUSART2_Read();
  2939   00016E  EC34  F021         	call	_EUSART2_is_rx_ready	;wreg free
  2940   000172  0900               	iorlw	0
  2941   000174  B4D8               	btfsc	status,2,c
  2942   000176  EFBF  F000         	goto	u6721
  2943   00017A  EFC1  F000         	goto	u6720
  2944   00017E                     u6721:
  2945   00017E  EFC3  F000         	goto	l6412
  2946   000182                     u6720:
  2947   000182  EC59  F01E         	call	_EUSART2_Read	;wreg free
  2948   000186                     l6412:
  2949                           
  2950                           ;main.c: 89:     TMR1_SetInterruptHandler(txTMR1ISR);
  2951   000186  0E08               	movlw	low _txTMR1ISR
  2952   000188  0100               	movlb	0	; () banked
  2953   00018A  6F78               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  2954   00018C  0E2E               	movlw	high _txTMR1ISR
  2955   00018E  6F79               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  2956   000190  EC6E  F021         	call	_TMR1_SetInterruptHandler	;wreg free
  2957   000194                     
  2958                           ;main.c: 90:     PIE3bits.RC2IE = 0;
  2959   000194  9AA3               	bcf	163,5,c	;volatile
  2960   000196                     
  2961                           ;main.c: 91:     EUSART2_SetRxInterruptHandler(rxEUSART2ISR);
  2962   000196  0E4E               	movlw	low _rxEUSART2ISR
  2963   000198  0100               	movlb	0	; () banked
  2964   00019A  6F78               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  2965   00019C  0E2F               	movlw	high _rxEUSART2ISR
  2966   00019E  6F79               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  2967   0001A0  EC78  F021         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2968   0001A4                     
  2969                           ;main.c: 92:     PIE3bits.RC2IE = 1;
  2970   0001A4  8AA3               	bsf	163,5,c	;volatile
  2971   0001A6                     
  2972                           ;main.c: 93:     (INTCONbits.PEIE = 1);
  2973   0001A6  8CF2               	bsf	242,6,c	;volatile
  2974   0001A8                     
  2975                           ;main.c: 94:     (INTCONbits.GIE = 1);
  2976   0001A8  8EF2               	bsf	242,7,c	;volatile
  2977   0001AA                     
  2978                           ;main.c: 96:     printf("Lab 7\r\n");
  2979   0001AA  0EDC               	movlw	low STR_1
  2980   0001AC  0101               	movlb	1	; () banked
  2981   0001AE  6F9E               	movwf	printf@fmt& (0+255),b
  2982   0001B0  0E7F               	movlw	high STR_1
  2983   0001B2  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  2984   0001B4  EC96  F020         	call	_printf	;wreg free
  2985   0001B8                     
  2986                           ;main.c: 97:     printf("Receive and decode an IR character\r\n");
  2987   0001B8  0E56               	movlw	low STR_2
  2988   0001BA  0101               	movlb	1	; () banked
  2989   0001BC  6F9E               	movwf	printf@fmt& (0+255),b
  2990   0001BE  0E7D               	movlw	high STR_2
  2991   0001C0  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  2992   0001C2  EC96  F020         	call	_printf	;wreg free
  2993   0001C6                     
  2994                           ;main.c: 98:     printf("Dev'21 Board wiring\r\n");
  2995   0001C6  0EB0               	movlw	low STR_3
  2996   0001C8  0101               	movlb	1	; () banked
  2997   0001CA  6F9E               	movwf	printf@fmt& (0+255),b
  2998   0001CC  0E7E               	movlw	high STR_3
  2999   0001CE  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3000   0001D0  EC96  F020         	call	_printf	;wreg free
  3001   0001D4                     
  3002                           ;main.c: 99:     printf("Install a jumper wire from RC0 to RB7 ONLY AFTER unplugging PIC
      +                          Kit3\r\n");
  3003   0001D4  0EB8               	movlw	low STR_4
  3004   0001D6  0101               	movlb	1	; () banked
  3005   0001D8  6F9E               	movwf	printf@fmt& (0+255),b
  3006   0001DA  0E7B               	movlw	high STR_4
  3007   0001DC  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3008   0001DE  EC96  F020         	call	_printf	;wreg free
  3009   0001E2                     
  3010                           ;main.c: 100:     printf("\n\r> ");
  3011   0001E2  0EF3               	movlw	low STR_5
  3012   0001E4  0101               	movlb	1	; () banked
  3013   0001E6  6F9E               	movwf	printf@fmt& (0+255),b
  3014   0001E8  0E7F               	movlw	high STR_5
  3015   0001EA  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3016   0001EC  EC96  F020         	call	_printf	;wreg free
  3017   0001F0                     l6434:
  3018                           
  3019                           ;main.c: 103:     {;main.c: 104:         if ((EUSART1_is_rx_ready()))
  3020   0001F0  EC4B  F021         	call	_EUSART1_is_rx_ready	;wreg free
  3021   0001F4  0900               	iorlw	0
  3022   0001F6  B4D8               	btfsc	status,2,c
  3023   0001F8  EF00  F001         	goto	u6731
  3024   0001FC  EF02  F001         	goto	u6730
  3025   000200                     u6731:
  3026   000200  EFF8  F000         	goto	l6434
  3027   000204                     u6730:
  3028   000204                     
  3029                           ;main.c: 105:         {;main.c: 107:             cmd = EUSART1_Read();
  3030   000204  EC81  F020         	call	_EUSART1_Read	;wreg free
  3031   000208  0101               	movlb	1	; () banked
  3032   00020A  6FB4               	movwf	main@cmd& (0+255),b
  3033   00020C                     
  3034                           ; BSR set to: 1
  3035                           ;main.c: 108:             printf("%c\n\r", cmd);
  3036   00020C  0E5B               	movlw	low (STR_55+11)
  3037   00020E  6F9E               	movwf	printf@fmt& (0+255),b
  3038   000210  0E7F               	movlw	high (STR_55+11)
  3039   000212  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3040   000214  C1B4  F1A0         	movff	main@cmd,?_printf+2
  3041   000218  6BA1               	clrf	(?_printf+3)& (0+255),b
  3042   00021A  EC96  F020         	call	_printf	;wreg free
  3043                           
  3044                           ;main.c: 110:             switch (cmd)
  3045   00021E  EF98  F004         	goto	l6586
  3046   000222                     l6440:
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;main.c: 113:                     printf("----------------------------------------------
      +                          ---\r\n");
  3050   000222  0E3D               	movlw	low STR_7
  3051   000224  0101               	movlb	1	; () banked
  3052   000226  6F9E               	movwf	printf@fmt& (0+255),b
  3053   000228  0E7C               	movlw	high STR_7
  3054   00022A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3055   00022C  EC96  F020         	call	_printf	;wreg free
  3056                           
  3057                           ;main.c: 114:                     printf("2400 Baud\r\n");
  3058   000230  0EBA               	movlw	low STR_8
  3059   000232  0101               	movlb	1	; () banked
  3060   000234  6F9E               	movwf	printf@fmt& (0+255),b
  3061   000236  0E7F               	movlw	high STR_8
  3062   000238  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3063   00023A  EC96  F020         	call	_printf	;wreg free
  3064                           
  3065                           ;main.c: 115:                     printf("PR2: %d\r\n", PR2);
  3066   00023E  0ED2               	movlw	low STR_9
  3067   000240  0101               	movlb	1	; () banked
  3068   000242  6F9E               	movwf	printf@fmt& (0+255),b
  3069   000244  0E7F               	movlw	high STR_9
  3070   000246  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3071   000248  CFBB F1A0          	movff	4027,?_printf+2	;volatile
  3072   00024C  6BA1               	clrf	(?_printf+3)& (0+255),b
  3073   00024E  EC96  F020         	call	_printf	;wreg free
  3074                           
  3075                           ;main.c: 116:                     printf("----------------------------------------------
      +                          ---\r\n");
  3076   000252  0E3D               	movlw	low STR_7
  3077   000254  0101               	movlb	1	; () banked
  3078   000256  6F9E               	movwf	printf@fmt& (0+255),b
  3079   000258  0E7C               	movlw	high STR_7
  3080   00025A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3081   00025C  EC96  F020         	call	_printf	;wreg free
  3082                           
  3083                           ;main.c: 117:                     printf("?: help menu\r\n");
  3084   000260  0E9D               	movlw	low STR_11
  3085   000262  0101               	movlb	1	; () banked
  3086   000264  6F9E               	movwf	printf@fmt& (0+255),b
  3087   000266  0E7F               	movlw	high STR_11
  3088   000268  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3089   00026A  EC96  F020         	call	_printf	;wreg free
  3090                           
  3091                           ;main.c: 118:                     printf("o: k\r\n");
  3092   00026E  0EEC               	movlw	low STR_12
  3093   000270  0101               	movlb	1	; () banked
  3094   000272  6F9E               	movwf	printf@fmt& (0+255),b
  3095   000274  0E7F               	movlw	high STR_12
  3096   000276  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3097   000278  EC96  F020         	call	_printf	;wreg free
  3098                           
  3099                           ;main.c: 119:                     printf("Z: Reset processor\r\n");
  3100   00027C  0E07               	movlw	low STR_13
  3101   00027E  0101               	movlb	1	; () banked
  3102   000280  6F9E               	movwf	printf@fmt& (0+255),b
  3103   000282  0E7F               	movlw	high STR_13
  3104   000284  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3105   000286  EC96  F020         	call	_printf	;wreg free
  3106                           
  3107                           ;main.c: 120:                     printf("z: Clear the terminal\r\n");
  3108   00028A  0E98               	movlw	low STR_14
  3109   00028C  0101               	movlb	1	; () banked
  3110   00028E  6F9E               	movwf	printf@fmt& (0+255),b
  3111   000290  0E7E               	movlw	high STR_14
  3112   000292  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3113   000294  EC96  F020         	call	_printf	;wreg free
  3114                           
  3115                           ;main.c: 121:                     printf("b: set Baud rate\n\r");
  3116   000298  0E1C               	movlw	low STR_15
  3117   00029A  0101               	movlb	1	; () banked
  3118   00029C  6F9E               	movwf	printf@fmt& (0+255),b
  3119   00029E  0E7F               	movlw	high STR_15
  3120   0002A0  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3121   0002A2  EC96  F020         	call	_printf	;wreg free
  3122                           
  3123                           ;main.c: 122:                     printf("m: create a NULL terminated message with SRC a
      +                          nd DEST prefix\n\r");
  3124   0002A6  0EFE               	movlw	low STR_16
  3125   0002A8  0101               	movlb	1	; () banked
  3126   0002AA  6F9E               	movwf	printf@fmt& (0+255),b
  3127   0002AC  0E7B               	movlw	high STR_16
  3128   0002AE  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3129   0002B0  EC96  F020         	call	_printf	;wreg free
  3130                           
  3131                           ;main.c: 123:                     printf("s: set Source transmit identity\n\r");
  3132   0002B4  0EC3               	movlw	low STR_17
  3133   0002B6  0101               	movlb	1	; () banked
  3134   0002B8  6F9E               	movwf	printf@fmt& (0+255),b
  3135   0002BA  0E7D               	movlw	high STR_17
  3136   0002BC  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3137   0002BE  EC96  F020         	call	_printf	;wreg free
  3138                           
  3139                           ;main.c: 124:                     printf("d: set Destination transmit target\n\r");
  3140   0002C2  0E7B               	movlw	low STR_18
  3141   0002C4  0101               	movlb	1	; () banked
  3142   0002C6  6F9E               	movwf	printf@fmt& (0+255),b
  3143   0002C8  0E7D               	movlw	high STR_18
  3144   0002CA  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3145   0002CC  EC96  F020         	call	_printf	;wreg free
  3146                           
  3147                           ;main.c: 125:                     printf("S: Send message using TMR1 ISR\n\r");
  3148   0002D0  0EE5               	movlw	low STR_19
  3149   0002D2  0101               	movlb	1	; () banked
  3150   0002D4  6F9E               	movwf	printf@fmt& (0+255),b
  3151   0002D6  0E7D               	movlw	high STR_19
  3152   0002D8  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3153   0002DA  EC96  F020         	call	_printf	;wreg free
  3154                           
  3155                           ;main.c: 126:                     printf("R: Receive message using EUSART2 via IR decode
      +                          r\n\r");
  3156   0002DE  0EA4               	movlw	low STR_20
  3157   0002E0  0101               	movlb	1	; () banked
  3158   0002E2  6F9E               	movwf	printf@fmt& (0+255),b
  3159   0002E4  0E7C               	movlw	high STR_20
  3160   0002E6  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3161   0002E8  EC96  F020         	call	_printf	;wreg free
  3162                           
  3163                           ;main.c: 127:                     printf("M:  Monitor all IR traffic\n\r");
  3164   0002EC  0E43               	movlw	low STR_21
  3165   0002EE  0101               	movlb	1	; () banked
  3166   0002F0  6F9E               	movwf	printf@fmt& (0+255),b
  3167   0002F2  0E7E               	movlw	high STR_21
  3168   0002F4  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3169   0002F6  EC96  F020         	call	_printf	;wreg free
  3170                           
  3171                           ;main.c: 128:                     printf("x/X: decode tx/RX message\n\r");
  3172   0002FA  0E7C               	movlw	low STR_22
  3173   0002FC  0101               	movlb	1	; () banked
  3174   0002FE  6F9E               	movwf	printf@fmt& (0+255),b
  3175   000300  0E7E               	movlw	high STR_22
  3176   000302  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3177   000304  EC96  F020         	call	_printf	;wreg free
  3178                           
  3179                           ;main.c: 129:                     printf("----------------------------------------------
      +                          ---\r\n");
  3180   000308  0E3D               	movlw	low STR_7
  3181   00030A  0101               	movlb	1	; () banked
  3182   00030C  6F9E               	movwf	printf@fmt& (0+255),b
  3183   00030E  0E7C               	movlw	high STR_7
  3184   000310  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3185   000312  EC96  F020         	call	_printf	;wreg free
  3186                           
  3187                           ;main.c: 130:                     break;
  3188   000316  EFDF  F004         	goto	l6588
  3189   00031A                     l6442:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;main.c: 132:                     printf("o:	ok\r\n");
  3193   00031A  0EE4               	movlw	low STR_24
  3194   00031C  0101               	movlb	1	; () banked
  3195   00031E  6F9E               	movwf	printf@fmt& (0+255),b
  3196   000320  0E7F               	movlw	high STR_24
  3197   000322  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3198   000324  EC96  F020         	call	_printf	;wreg free
  3199                           
  3200                           ;main.c: 133:                     break;
  3201   000328  EFDF  F004         	goto	l6588
  3202   00032C                     l6444:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;main.c: 135:                     for (i = 0; i < 40; i++) printf("\n");
  3206   00032C  0E00               	movlw	0
  3207   00032E  0101               	movlb	1	; () banked
  3208   000330  6FB6               	movwf	(main@i+1)& (0+255),b
  3209   000332  0E00               	movlw	0
  3210   000334  6FB5               	movwf	main@i& (0+255),b
  3211   000336                     l6450:
  3212                           
  3213                           ; BSR set to: 1
  3214   000336  0E6F               	movlw	low (STR_7+50)
  3215   000338  6F9E               	movwf	printf@fmt& (0+255),b
  3216   00033A  0E7C               	movlw	high (STR_7+50)
  3217   00033C  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3218   00033E  EC96  F020         	call	_printf	;wreg free
  3219   000342  0101               	movlb	1	; () banked
  3220   000344  4BB5               	infsnz	main@i& (0+255),f,b
  3221   000346  2BB6               	incf	(main@i+1)& (0+255),f,b
  3222   000348                     
  3223                           ; BSR set to: 1
  3224   000348  51B6               	movf	(main@i+1)& (0+255),w,b
  3225   00034A  E109               	bnz	u6740
  3226   00034C  0E28               	movlw	40
  3227   00034E  5DB5               	subwf	main@i& (0+255),w,b
  3228   000350  A0D8               	btfss	status,0,c
  3229   000352  EFAD  F001         	goto	u6741
  3230   000356  EFAF  F001         	goto	u6740
  3231   00035A                     u6741:
  3232   00035A  EF9B  F001         	goto	l6450
  3233   00035E                     u6740:
  3234   00035E                     
  3235                           ; BSR set to: 1
  3236   00035E  00FF               	reset		;# 
  3237                           
  3238                           ;main.c: 137:                     break;
  3239   000360  EFDF  F004         	goto	l6588
  3240   000364                     l6456:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;main.c: 139:                     for (i = 0; i < 40; i++) printf("\n");
  3244   000364  0E00               	movlw	0
  3245   000366  0101               	movlb	1	; () banked
  3246   000368  6FB6               	movwf	(main@i+1)& (0+255),b
  3247   00036A  0E00               	movlw	0
  3248   00036C  6FB5               	movwf	main@i& (0+255),b
  3249   00036E                     l6462:
  3250                           
  3251                           ; BSR set to: 1
  3252   00036E  0E6F               	movlw	low (STR_7+50)
  3253   000370  6F9E               	movwf	printf@fmt& (0+255),b
  3254   000372  0E7C               	movlw	high (STR_7+50)
  3255   000374  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3256   000376  EC96  F020         	call	_printf	;wreg free
  3257   00037A  0101               	movlb	1	; () banked
  3258   00037C  4BB5               	infsnz	main@i& (0+255),f,b
  3259   00037E  2BB6               	incf	(main@i+1)& (0+255),f,b
  3260   000380                     
  3261                           ; BSR set to: 1
  3262   000380  51B6               	movf	(main@i+1)& (0+255),w,b
  3263   000382  E109               	bnz	u6750
  3264   000384  0E28               	movlw	40
  3265   000386  5DB5               	subwf	main@i& (0+255),w,b
  3266   000388  A0D8               	btfss	status,0,c
  3267   00038A  EFC9  F001         	goto	u6751
  3268   00038E  EFCB  F001         	goto	u6750
  3269   000392                     u6751:
  3270   000392  EFB7  F001         	goto	l6462
  3271   000396                     u6750:
  3272   000396  EFDF  F004         	goto	l6588
  3273   00039A                     l6468:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;main.c: 143:                     printf("Choose the index of the target baud rate\r\n")
      +                          ;
  3277   00039A  0E04               	movlw	low STR_27
  3278   00039C  0101               	movlb	1	; () banked
  3279   00039E  6F9E               	movwf	printf@fmt& (0+255),b
  3280   0003A0  0E7D               	movlw	high STR_27
  3281   0003A2  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3282   0003A4  EC96  F020         	call	_printf	;wreg free
  3283                           
  3284                           ;main.c: 144:                     printf("0: 300 baud\r\n");
  3285   0003A8  0EAC               	movlw	low STR_28
  3286   0003AA  0101               	movlb	1	; () banked
  3287   0003AC  6F9E               	movwf	printf@fmt& (0+255),b
  3288   0003AE  0E7F               	movlw	high STR_28
  3289   0003B0  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3290   0003B2  EC96  F020         	call	_printf	;wreg free
  3291                           
  3292                           ;main.c: 145:                     printf("1: 1200 baud\r\n");
  3293   0003B6  0E70               	movlw	low STR_29
  3294   0003B8  0101               	movlb	1	; () banked
  3295   0003BA  6F9E               	movwf	printf@fmt& (0+255),b
  3296   0003BC  0E7F               	movlw	high STR_29
  3297   0003BE  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3298   0003C0  EC96  F020         	call	_printf	;wreg free
  3299                           
  3300                           ;main.c: 146:                     printf("2: 2400 baud\r\n");
  3301   0003C4  0E7F               	movlw	low STR_30
  3302   0003C6  0101               	movlb	1	; () banked
  3303   0003C8  6F9E               	movwf	printf@fmt& (0+255),b
  3304   0003CA  0E7F               	movlw	high STR_30
  3305   0003CC  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3306   0003CE  EC96  F020         	call	_printf	;wreg free
  3307                           
  3308                           ;main.c: 147:                     printf("3: 9600 baud\r\n");
  3309   0003D2  0E8E               	movlw	low STR_31
  3310   0003D4  0101               	movlb	1	; () banked
  3311   0003D6  6F9E               	movwf	printf@fmt& (0+255),b
  3312   0003D8  0E7F               	movlw	high STR_31
  3313   0003DA  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3314   0003DC  EC96  F020         	call	_printf	;wreg free
  3315                           
  3316                           ;main.c: 148:                     printf("4: 19200 baud\r\n");
  3317   0003E0  0E40               	movlw	low STR_32
  3318   0003E2  0101               	movlb	1	; () banked
  3319   0003E4  6F9E               	movwf	printf@fmt& (0+255),b
  3320   0003E6  0E7F               	movlw	high STR_32
  3321   0003E8  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3322   0003EA  EC96  F020         	call	_printf	;wreg free
  3323   0003EE                     l6470:
  3324   0003EE  EC4B  F021         	call	_EUSART1_is_rx_ready	;wreg free
  3325   0003F2  0900               	iorlw	0
  3326   0003F4  A4D8               	btfss	status,2,c
  3327   0003F6  EFFF  F001         	goto	u6761
  3328   0003FA  EF01  F002         	goto	u6760
  3329   0003FE                     u6761:
  3330   0003FE  EFF7  F001         	goto	l6470
  3331   000402                     u6760:
  3332   000402                     
  3333                           ;main.c: 151:                     baudRateSelected = EUSART1_Read() - '0';
  3334   000402  EC81  F020         	call	_EUSART1_Read	;wreg free
  3335   000406  0FD0               	addlw	208
  3336   000408  0101               	movlb	1	; () banked
  3337   00040A  6FC8               	movwf	_baudRateSelected& (0+255),b
  3338                           
  3339                           ;main.c: 153:                     switch (baudRateSelected)
  3340   00040C  EF26  F002         	goto	l6488
  3341   000410                     l6474:
  3342                           
  3343                           ; BSR set to: 0
  3344   000410  0ED0               	movlw	208
  3345   000412  6E76               	movwf	118,c	;volatile
  3346                           
  3347                           ;main.c: 156:                             SPBRG2 = 0x54;
  3348   000414  0E54               	movlw	84
  3349   000416  6E75               	movwf	117,c	;volatile
  3350                           
  3351                           ;main.c: 157:                             break;
  3352   000418  EF48  F002         	goto	l6490
  3353   00041C                     l6476:
  3354                           
  3355                           ; BSR set to: 0
  3356   00041C  0E34               	movlw	52
  3357   00041E  6E76               	movwf	118,c	;volatile
  3358                           
  3359                           ;main.c: 159:                             SPBRG2 = 0x14;
  3360   000420  0E14               	movlw	20
  3361   000422  6E75               	movwf	117,c	;volatile
  3362                           
  3363                           ;main.c: 160:                             break;
  3364   000424  EF48  F002         	goto	l6490
  3365   000428                     l6478:
  3366                           
  3367                           ; BSR set to: 0
  3368   000428  0E1A               	movlw	26
  3369   00042A  6E76               	movwf	118,c	;volatile
  3370                           
  3371                           ;main.c: 162:                             SPBRG2 = 0x0A;
  3372   00042C  0E0A               	movlw	10
  3373   00042E  6E75               	movwf	117,c	;volatile
  3374                           
  3375                           ;main.c: 163:                             break;
  3376   000430  EF48  F002         	goto	l6490
  3377   000434                     l6480:
  3378                           
  3379                           ; BSR set to: 0
  3380   000434  0E06               	movlw	6
  3381   000436  6E76               	movwf	118,c	;volatile
  3382                           
  3383                           ;main.c: 165:                             SPBRG2 = 0x82;
  3384   000438  0E82               	movlw	130
  3385   00043A  6E75               	movwf	117,c	;volatile
  3386                           
  3387                           ;main.c: 166:                             break;
  3388   00043C  EF48  F002         	goto	l6490
  3389   000440                     l6482:
  3390                           
  3391                           ; BSR set to: 0
  3392   000440  0E03               	movlw	3
  3393   000442  6E76               	movwf	118,c	;volatile
  3394                           
  3395                           ;main.c: 168:                             SPBRG2 = 0x40;
  3396   000444  0E40               	movlw	64
  3397   000446  6E75               	movwf	117,c	;volatile
  3398                           
  3399                           ;main.c: 169:                             break;
  3400   000448  EF48  F002         	goto	l6490
  3401   00044C                     l6488:
  3402                           
  3403                           ; BSR set to: 1
  3404   00044C  51C8               	movf	_baudRateSelected& (0+255),w,b
  3405   00044E  0100               	movlb	0	; () banked
  3406   000450  6FCC               	movwf	??_main& (0+255),b
  3407   000452  6BCD               	clrf	(??_main+1)& (0+255),b
  3408                           
  3409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3410                           ; Switch size 1, requested type "simple"
  3411                           ; Number of cases is 1, Range of values is 0 to 0
  3412                           ; switch strategies available:
  3413                           ; Name         Instructions Cycles
  3414                           ; simple_byte            4     3 (average)
  3415                           ;	Chosen strategy is simple_byte
  3416   000454  51CD               	movf	(??_main+1)& (0+255),w,b
  3417   000456  0A00               	xorlw	0	; case 0
  3418   000458  B4D8               	btfsc	status,2,c
  3419   00045A  EF31  F002         	goto	l6842
  3420   00045E  EF0E  F002         	goto	l6476
  3421   000462                     l6842:
  3422                           
  3423                           ; BSR set to: 0
  3424                           ; Switch size 1, requested type "simple"
  3425                           ; Number of cases is 5, Range of values is 0 to 4
  3426                           ; switch strategies available:
  3427                           ; Name         Instructions Cycles
  3428                           ; simple_byte           16     9 (average)
  3429                           ;	Chosen strategy is simple_byte
  3430   000462  51CC               	movf	??_main& (0+255),w,b
  3431   000464  0A00               	xorlw	0	; case 0
  3432   000466  B4D8               	btfsc	status,2,c
  3433   000468  EF08  F002         	goto	l6474
  3434   00046C  0A01               	xorlw	1	; case 1
  3435   00046E  B4D8               	btfsc	status,2,c
  3436   000470  EF0E  F002         	goto	l6476
  3437   000474  0A03               	xorlw	3	; case 2
  3438   000476  B4D8               	btfsc	status,2,c
  3439   000478  EF14  F002         	goto	l6478
  3440   00047C  0A01               	xorlw	1	; case 3
  3441   00047E  B4D8               	btfsc	status,2,c
  3442   000480  EF1A  F002         	goto	l6480
  3443   000484  0A07               	xorlw	7	; case 4
  3444   000486  B4D8               	btfsc	status,2,c
  3445   000488  EF20  F002         	goto	l6482
  3446   00048C  EF0E  F002         	goto	l6476
  3447   000490                     l6490:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;main.c: 174:                     printf("Baud rate assigned %02x:%02x\r\n", SPBRGH2, SP
      +                          BRG2);
  3451   000490  0E06               	movlw	low STR_33
  3452   000492  0101               	movlb	1	; () banked
  3453   000494  6F9E               	movwf	printf@fmt& (0+255),b
  3454   000496  0E7E               	movlw	high STR_33
  3455   000498  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3456   00049A  CF76 F1A0          	movff	3958,?_printf+2	;volatile
  3457   00049E  6BA1               	clrf	(?_printf+3)& (0+255),b
  3458   0004A0  CF75 F1A2          	movff	3957,?_printf+4	;volatile
  3459   0004A4  6BA3               	clrf	(?_printf+5)& (0+255),b
  3460   0004A6  EC96  F020         	call	_printf	;wreg free
  3461                           
  3462                           ;main.c: 175:                     break;
  3463   0004AA  EFDF  F004         	goto	l6588
  3464   0004AE                     l6492:
  3465                           
  3466                           ; BSR set to: 0
  3467                           ;main.c: 178:                     i = 2;
  3468   0004AE  0E00               	movlw	0
  3469   0004B0  0101               	movlb	1	; () banked
  3470   0004B2  6FB6               	movwf	(main@i+1)& (0+255),b
  3471   0004B4  0E02               	movlw	2
  3472   0004B6  6FB5               	movwf	main@i& (0+255),b
  3473   0004B8                     
  3474                           ; BSR set to: 1
  3475                           ;main.c: 179:                     tsum = transmitBuffer[0] + transmitBuffer[1];
  3476   0004B8  5170               	movf	(_transmitBuffer+1)& (0+255),w,b
  3477   0004BA  256F               	addwf	_transmitBuffer& (0+255),w,b
  3478   0004BC  6F2E               	movwf	_tsum& (0+255),b
  3479   0004BE                     
  3480                           ; BSR set to: 1
  3481                           ;main.c: 181:                     printf("Enter message, hit return when done.\n\r");
  3482   0004BE  0E2F               	movlw	low STR_34
  3483   0004C0  6F9E               	movwf	printf@fmt& (0+255),b
  3484   0004C2  0E7D               	movlw	high STR_34
  3485   0004C4  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3486   0004C6  EC96  F020         	call	_printf	;wreg free
  3487   0004CA                     l6498:
  3488                           
  3489                           ;main.c: 183:                     character = EUSART1_Read();
  3490   0004CA  EC81  F020         	call	_EUSART1_Read	;wreg free
  3491   0004CE  0101               	movlb	1	; () banked
  3492   0004D0  6FC9               	movwf	_character& (0+255),b
  3493                           
  3494                           ;main.c: 184:                     while(character != '\r')
  3495   0004D2  EF8F  F002         	goto	l6514
  3496   0004D6                     l6500:
  3497                           
  3498                           ; BSR set to: 1
  3499                           ;main.c: 185:                     {;main.c: 186:                         if(i > 32 -2) b
      +                          reak;
  3500   0004D6  51B6               	movf	(main@i+1)& (0+255),w,b
  3501   0004D8  E109               	bnz	u6770
  3502   0004DA  0E1F               	movlw	31
  3503   0004DC  5DB5               	subwf	main@i& (0+255),w,b
  3504   0004DE  A0D8               	btfss	status,0,c
  3505   0004E0  EF74  F002         	goto	u6771
  3506   0004E4  EF76  F002         	goto	u6770
  3507   0004E8                     u6771:
  3508   0004E8  EF78  F002         	goto	l6504
  3509   0004EC                     u6770:
  3510   0004EC  EF98  F002         	goto	l6516
  3511   0004F0                     l6504:
  3512                           
  3513                           ; BSR set to: 1
  3514                           ;main.c: 187:                         transmitBuffer[i] = character;
  3515   0004F0  0E6F               	movlw	low _transmitBuffer
  3516   0004F2  25B5               	addwf	main@i& (0+255),w,b
  3517   0004F4  6ED9               	movwf	fsr2l,c
  3518   0004F6  0E01               	movlw	high _transmitBuffer
  3519   0004F8  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3520   0004FA  6EDA               	movwf	fsr2h,c
  3521   0004FC  C1C9  FFDF         	movff	_character,indf2
  3522   000500                     
  3523                           ; BSR set to: 1
  3524                           ;main.c: 188:                         tsum += character;
  3525   000500  51C9               	movf	_character& (0+255),w,b
  3526   000502  272E               	addwf	_tsum& (0+255),f,b
  3527   000504                     
  3528                           ; BSR set to: 1
  3529                           ;main.c: 189:                         i++;
  3530   000504  4BB5               	infsnz	main@i& (0+255),f,b
  3531   000506  2BB6               	incf	(main@i+1)& (0+255),f,b
  3532   000508                     
  3533                           ; BSR set to: 1
  3534                           ;main.c: 190:                         printf("%c", character);
  3535   000508  0EFC               	movlw	low STR_35
  3536   00050A  6F9E               	movwf	printf@fmt& (0+255),b
  3537   00050C  0E7F               	movlw	high STR_35
  3538   00050E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3539   000510  C1C9  F1A0         	movff	_character,?_printf+2
  3540   000514  6BA1               	clrf	(?_printf+3)& (0+255),b
  3541   000516  EC96  F020         	call	_printf	;wreg free
  3542   00051A  EF65  F002         	goto	l6498
  3543   00051E                     l6514:
  3544                           
  3545                           ; BSR set to: 1
  3546                           ;main.c: 184:                     while(character != '\r')
  3547   00051E  0E0D               	movlw	13
  3548   000520  19C9               	xorwf	_character& (0+255),w,b
  3549   000522  A4D8               	btfss	status,2,c
  3550   000524  EF96  F002         	goto	u6781
  3551   000528  EF98  F002         	goto	u6780
  3552   00052C                     u6781:
  3553   00052C  EF6B  F002         	goto	l6500
  3554   000530                     u6780:
  3555   000530                     l6516:
  3556                           
  3557                           ; BSR set to: 1
  3558                           ;main.c: 193:                     transmitBuffer[i] = '\0'; i++;
  3559   000530  0E6F               	movlw	low _transmitBuffer
  3560   000532  25B5               	addwf	main@i& (0+255),w,b
  3561   000534  6ED9               	movwf	fsr2l,c
  3562   000536  0E01               	movlw	high _transmitBuffer
  3563   000538  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3564   00053A  6EDA               	movwf	fsr2h,c
  3565   00053C  0E00               	movlw	0
  3566   00053E  6EDF               	movwf	indf2,c
  3567   000540                     
  3568                           ; BSR set to: 1
  3569   000540  4BB5               	infsnz	main@i& (0+255),f,b
  3570   000542  2BB6               	incf	(main@i+1)& (0+255),f,b
  3571   000544                     
  3572                           ; BSR set to: 1
  3573                           ;main.c: 194:                     transmitBuffer[i] = tsum;
  3574   000544  0E6F               	movlw	low _transmitBuffer
  3575   000546  25B5               	addwf	main@i& (0+255),w,b
  3576   000548  6ED9               	movwf	fsr2l,c
  3577   00054A  0E01               	movlw	high _transmitBuffer
  3578   00054C  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3579   00054E  6EDA               	movwf	fsr2h,c
  3580   000550  C12E  FFDF         	movff	_tsum,indf2
  3581   000554                     
  3582                           ; BSR set to: 1
  3583                           ;main.c: 196:                     printf("\n\rCreated\n\r  message: %s\n\r  checksum: %u
      +                          \n\r  source address: %u\n\r  destintation address: %u\n\r", (transmitBuffer + 2), tsum,
      +                           transmitBuffer[0], transmitBuffer[1]);
  3584   000554  0E5B               	movlw	low STR_36
  3585   000556  6F9E               	movwf	printf@fmt& (0+255),b
  3586   000558  0E7B               	movlw	high STR_36
  3587   00055A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3588   00055C  0E71               	movlw	low (_transmitBuffer+2)
  3589   00055E  6FA0               	movwf	(?_printf+2)& (0+255),b
  3590   000560  0E01               	movlw	high (_transmitBuffer+2)
  3591   000562  6FA1               	movwf	(?_printf+3)& (0+255),b
  3592   000564  C12E  F1A2         	movff	_tsum,?_printf+4
  3593   000568  6BA3               	clrf	(?_printf+5)& (0+255),b
  3594   00056A  C16F  F1A4         	movff	_transmitBuffer,?_printf+6
  3595   00056E  6BA5               	clrf	(?_printf+7)& (0+255),b
  3596   000570  C170  F1A6         	movff	_transmitBuffer+1,?_printf+8
  3597   000574  6BA7               	clrf	(?_printf+9)& (0+255),b
  3598   000576  EC96  F020         	call	_printf	;wreg free
  3599                           
  3600                           ;main.c: 197:                     break;
  3601   00057A  EFDF  F004         	goto	l6588
  3602   00057E                     l6524:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;main.c: 200:                     printf("Enter source address, hit return when done.\n\
      +                          r");
  3606   00057E  0ED6               	movlw	low STR_37
  3607   000580  0101               	movlb	1	; () banked
  3608   000582  6F9E               	movwf	printf@fmt& (0+255),b
  3609   000584  0E7C               	movlw	high STR_37
  3610   000586  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3611   000588  EC96  F020         	call	_printf	;wreg free
  3612                           
  3613                           ;main.c: 202:                     transmitBuffer[0] = read8bit();
  3614   00058C  EC97  F013         	call	_read8bit	;wreg free
  3615   000590  0101               	movlb	1	; () banked
  3616   000592  6F6F               	movwf	_transmitBuffer& (0+255),b
  3617                           
  3618                           ;main.c: 204:                     printf("\n\rSet\n\r  source address: %u\n\r", transmit
      +                          Buffer[0]);
  3619   000594  0E25               	movlw	low STR_38
  3620   000596  6F9E               	movwf	printf@fmt& (0+255),b
  3621   000598  0E7E               	movlw	high STR_38
  3622   00059A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3623   00059C  C16F  F1A0         	movff	_transmitBuffer,?_printf+2
  3624   0005A0  6BA1               	clrf	(?_printf+3)& (0+255),b
  3625   0005A2  EC96  F020         	call	_printf	;wreg free
  3626                           
  3627                           ;main.c: 205:                     break;
  3628   0005A6  EFDF  F004         	goto	l6588
  3629   0005AA                     l6526:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;main.c: 208:                     printf("Enter destination address, hit return when don
      +                          e.\n\r");
  3633   0005AA  0E71               	movlw	low STR_39
  3634   0005AC  0101               	movlb	1	; () banked
  3635   0005AE  6F9E               	movwf	printf@fmt& (0+255),b
  3636   0005B0  0E7C               	movlw	high STR_39
  3637   0005B2  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3638   0005B4  EC96  F020         	call	_printf	;wreg free
  3639                           
  3640                           ;main.c: 210:                     transmitBuffer[1] = read8bit();
  3641   0005B8  EC97  F013         	call	_read8bit	;wreg free
  3642   0005BC  0101               	movlb	1	; () banked
  3643   0005BE  6F70               	movwf	(_transmitBuffer+1)& (0+255),b
  3644                           
  3645                           ;main.c: 212:                     printf("\n\rSet\n\r  destination address: %u\n\r", tra
      +                          nsmitBuffer[1]);
  3646   0005C0  0EA0               	movlw	low STR_40
  3647   0005C2  6F9E               	movwf	printf@fmt& (0+255),b
  3648   0005C4  0E7D               	movlw	high STR_40
  3649   0005C6  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3650   0005C8  C170  F1A0         	movff	_transmitBuffer+1,?_printf+2
  3651   0005CC  6BA1               	clrf	(?_printf+3)& (0+255),b
  3652   0005CE  EC96  F020         	call	_printf	;wreg free
  3653                           
  3654                           ;main.c: 213:                     break;
  3655   0005D2  EFDF  F004         	goto	l6588
  3656   0005D6                     l6528:
  3657                           
  3658                           ; BSR set to: 0
  3659                           ;main.c: 215:                     transmitting = 1;
  3660   0005D6  0E01               	movlw	1
  3661   0005D8  0101               	movlb	1	; () banked
  3662   0005DA  6F2D               	movwf	_transmitting& (0+255),b
  3663   0005DC                     l6530:
  3664                           
  3665                           ; BSR set to: 1
  3666   0005DC  052D               	decf	_transmitting& (0+255),w,b
  3667   0005DE  B4D8               	btfsc	status,2,c
  3668   0005E0  EFF4  F002         	goto	u6791
  3669   0005E4  EFF6  F002         	goto	u6790
  3670   0005E8                     u6791:
  3671   0005E8  EFEE  F002         	goto	l6530
  3672   0005EC                     u6790:
  3673   0005EC                     
  3674                           ; BSR set to: 1
  3675                           ;main.c: 217:                     printf("Transmitting\n\r  message: %s\n\r  checksum: %
      +                          u\n\r  source address: %u\n\r  destintation address: %u\n\r", (transmitBuffer + 2), tsum
      +                          , transmitBuffer[0], transmitBuffer[1]);
  3676   0005EC  0EFB               	movlw	low STR_41
  3677   0005EE  6F9E               	movwf	printf@fmt& (0+255),b
  3678   0005F0  0E7A               	movlw	high STR_41
  3679   0005F2  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3680   0005F4  0E71               	movlw	low (_transmitBuffer+2)
  3681   0005F6  6FA0               	movwf	(?_printf+2)& (0+255),b
  3682   0005F8  0E01               	movlw	high (_transmitBuffer+2)
  3683   0005FA  6FA1               	movwf	(?_printf+3)& (0+255),b
  3684   0005FC  C12E  F1A2         	movff	_tsum,?_printf+4
  3685   000600  6BA3               	clrf	(?_printf+5)& (0+255),b
  3686   000602  C16F  F1A4         	movff	_transmitBuffer,?_printf+6
  3687   000606  6BA5               	clrf	(?_printf+7)& (0+255),b
  3688   000608  C170  F1A6         	movff	_transmitBuffer+1,?_printf+8
  3689   00060C  6BA7               	clrf	(?_printf+9)& (0+255),b
  3690   00060E  EC96  F020         	call	_printf	;wreg free
  3691                           
  3692                           ;main.c: 218:                     break;
  3693   000612  EFDF  F004         	goto	l6588
  3694   000616                     l6534:
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;main.c: 220:                     if(received == 1)
  3698   000616  0101               	movlb	1	; () banked
  3699   000618  052A               	decf	_received& (0+255),w,b
  3700   00061A  A4D8               	btfss	status,2,c
  3701   00061C  EF12  F003         	goto	u6801
  3702   000620  EF14  F003         	goto	u6800
  3703   000624                     u6801:
  3704   000624  EF2F  F003         	goto	l6540
  3705   000628                     u6800:
  3706   000628                     
  3707                           ; BSR set to: 1
  3708                           ;main.c: 221:                     {;main.c: 222:                         printf("Receive
      +                          d\n\r  message: %s\n\r  checksum: actual(%u), expected(%u)\n\r  source address: %u\n\r  
      +                          destintation address: %u\n\r", (receiveBuffer + 2), rsum, rcsum, receiveBuffer[0], recei
      +                          veBuffer[1]);
  3709   000628  0E89               	movlw	low STR_42
  3710   00062A  6F9E               	movwf	printf@fmt& (0+255),b
  3711   00062C  0E7A               	movlw	high STR_42
  3712   00062E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3713   000630  0E51               	movlw	low (_receiveBuffer+2)
  3714   000632  6FA0               	movwf	(?_printf+2)& (0+255),b
  3715   000634  0E01               	movlw	high (_receiveBuffer+2)
  3716   000636  6FA1               	movwf	(?_printf+3)& (0+255),b
  3717   000638  C12C  F1A2         	movff	_rsum,?_printf+4
  3718   00063C  6BA3               	clrf	(?_printf+5)& (0+255),b
  3719   00063E  C12B  F1A4         	movff	_rcsum,?_printf+6
  3720   000642  6BA5               	clrf	(?_printf+7)& (0+255),b
  3721   000644  C14F  F1A6         	movff	_receiveBuffer,?_printf+8
  3722   000648  6BA7               	clrf	(?_printf+9)& (0+255),b
  3723   00064A  C150  F1A8         	movff	_receiveBuffer+1,?_printf+10
  3724   00064E  6BA9               	clrf	(?_printf+11)& (0+255),b
  3725   000650  EC96  F020         	call	_printf	;wreg free
  3726   000654                     
  3727                           ;main.c: 223:                         received = 0;
  3728   000654  0E00               	movlw	0
  3729   000656  0101               	movlb	1	; () banked
  3730   000658  6F2A               	movwf	_received& (0+255),b
  3731                           
  3732                           ;main.c: 224:                     }
  3733   00065A  EFDF  F004         	goto	l6588
  3734   00065E                     l6540:
  3735                           
  3736                           ; BSR set to: 1
  3737   00065E  0EC6               	movlw	low STR_43
  3738   000660  6F9E               	movwf	printf@fmt& (0+255),b
  3739   000662  0E7E               	movlw	high STR_43
  3740   000664  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3741   000666  EC96  F020         	call	_printf	;wreg free
  3742   00066A  EFDF  F004         	goto	l6588
  3743   00066E                     l569:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;main.c: 228:                     character = RCREG1;
  3747   00066E  CFAE F1C9          	movff	4014,_character	;volatile
  3748   000672                     
  3749                           ; BSR set to: 0
  3750                           ;main.c: 229:                     printf("SRC DST SUM CHECK MESSAGE\n\r");
  3751   000672  0E60               	movlw	low STR_44
  3752   000674  0101               	movlb	1	; () banked
  3753   000676  6F9E               	movwf	printf@fmt& (0+255),b
  3754   000678  0E7E               	movlw	high STR_44
  3755   00067A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3756   00067C  EC96  F020         	call	_printf	;wreg free
  3757                           
  3758                           ;main.c: 231:                     while(character == RCREG1)
  3759   000680  EF63  F003         	goto	l6550
  3760   000684                     l6544:
  3761                           
  3762                           ; BSR set to: 1
  3763                           ;main.c: 232:                     {;main.c: 233:                         if(received == 
      +                          1)
  3764   000684  052A               	decf	_received& (0+255),w,b
  3765   000686  A4D8               	btfss	status,2,c
  3766   000688  EF48  F003         	goto	u6811
  3767   00068C  EF4A  F003         	goto	u6810
  3768   000690                     u6811:
  3769   000690  EF63  F003         	goto	l6550
  3770   000694                     u6810:
  3771   000694                     
  3772                           ; BSR set to: 1
  3773                           ;main.c: 234:                         {;main.c: 235:                             printf(
      +                          "  %u %u %u %u    %s\n\r", receiveBuffer[0], receiveBuffer[1], rsum, rcsum, (receiveBuff
      +                          er + 2));
  3774   000694  0EDC               	movlw	low STR_45
  3775   000696  6F9E               	movwf	printf@fmt& (0+255),b
  3776   000698  0E7E               	movlw	high STR_45
  3777   00069A  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3778   00069C  C14F  F1A0         	movff	_receiveBuffer,?_printf+2
  3779   0006A0  6BA1               	clrf	(?_printf+3)& (0+255),b
  3780   0006A2  C150  F1A2         	movff	_receiveBuffer+1,?_printf+4
  3781   0006A6  6BA3               	clrf	(?_printf+5)& (0+255),b
  3782   0006A8  C12C  F1A4         	movff	_rsum,?_printf+6
  3783   0006AC  6BA5               	clrf	(?_printf+7)& (0+255),b
  3784   0006AE  C12B  F1A6         	movff	_rcsum,?_printf+8
  3785   0006B2  6BA7               	clrf	(?_printf+9)& (0+255),b
  3786   0006B4  0E51               	movlw	low (_receiveBuffer+2)
  3787   0006B6  6FA8               	movwf	(?_printf+10)& (0+255),b
  3788   0006B8  0E01               	movlw	high (_receiveBuffer+2)
  3789   0006BA  6FA9               	movwf	(?_printf+11)& (0+255),b
  3790   0006BC  EC96  F020         	call	_printf	;wreg free
  3791   0006C0                     
  3792                           ;main.c: 236:                             received = 0;
  3793   0006C0  0E00               	movlw	0
  3794   0006C2  0101               	movlb	1	; () banked
  3795   0006C4  6F2A               	movwf	_received& (0+255),b
  3796   0006C6                     l6550:
  3797                           
  3798                           ;main.c: 231:                     while(character == RCREG1)
  3799   0006C6  50AE               	movf	174,w,c	;volatile
  3800   0006C8  0101               	movlb	1	; () banked
  3801   0006CA  19C9               	xorwf	_character& (0+255),w,b
  3802   0006CC  B4D8               	btfsc	status,2,c
  3803   0006CE  EF6B  F003         	goto	u6821
  3804   0006D2  EF6D  F003         	goto	u6820
  3805   0006D6                     u6821:
  3806   0006D6  EF42  F003         	goto	l6544
  3807   0006DA                     u6820:
  3808   0006DA  EFDF  F004         	goto	l6588
  3809   0006DE                     l6552:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;main.c: 243:                     i = 0;
  3813   0006DE  0E00               	movlw	0
  3814   0006E0  0101               	movlb	1	; () banked
  3815   0006E2  6FB6               	movwf	(main@i+1)& (0+255),b
  3816   0006E4  0E00               	movlw	0
  3817   0006E6  6FB5               	movwf	main@i& (0+255),b
  3818                           
  3819                           ;main.c: 244:                     while(transmitBuffer[i] != '\0')
  3820   0006E8  EF9D  F003         	goto	l6558
  3821   0006EC                     l6554:
  3822                           
  3823                           ; BSR set to: 1
  3824                           ;main.c: 245:                     {;main.c: 246:                         printf("%u: %x 
      +                          %c\n\r", i, transmitBuffer[i], transmitBuffer[i]);
  3825   0006EC  0EC6               	movlw	low STR_46
  3826   0006EE  6F9E               	movwf	printf@fmt& (0+255),b
  3827   0006F0  0E7F               	movlw	high STR_46
  3828   0006F2  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3829   0006F4  C1B5  F1A0         	movff	main@i,?_printf+2
  3830   0006F8  C1B6  F1A1         	movff	main@i+1,?_printf+3
  3831   0006FC  0E6F               	movlw	low _transmitBuffer
  3832   0006FE  25B5               	addwf	main@i& (0+255),w,b
  3833   000700  6ED9               	movwf	fsr2l,c
  3834   000702  0E01               	movlw	high _transmitBuffer
  3835   000704  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3836   000706  6EDA               	movwf	fsr2h,c
  3837   000708  50DF               	movf	indf2,w,c
  3838   00070A  0100               	movlb	0	; () banked
  3839   00070C  6FCC               	movwf	??_main& (0+255),b
  3840   00070E  51CC               	movf	??_main& (0+255),w,b
  3841   000710  0101               	movlb	1	; () banked
  3842   000712  6FA2               	movwf	(?_printf+4)& (0+255),b
  3843   000714  6BA3               	clrf	(?_printf+5)& (0+255),b
  3844   000716  0E6F               	movlw	low _transmitBuffer
  3845   000718  25B5               	addwf	main@i& (0+255),w,b
  3846   00071A  6ED9               	movwf	fsr2l,c
  3847   00071C  0E01               	movlw	high _transmitBuffer
  3848   00071E  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3849   000720  6EDA               	movwf	fsr2h,c
  3850   000722  50DF               	movf	indf2,w,c
  3851   000724  0100               	movlb	0	; () banked
  3852   000726  6FCD               	movwf	(??_main+1)& (0+255),b
  3853   000728  51CD               	movf	(??_main+1)& (0+255),w,b
  3854   00072A  0101               	movlb	1	; () banked
  3855   00072C  6FA4               	movwf	(?_printf+6)& (0+255),b
  3856   00072E  6BA5               	clrf	(?_printf+7)& (0+255),b
  3857   000730  EC96  F020         	call	_printf	;wreg free
  3858   000734                     
  3859                           ;main.c: 247:                         i++;
  3860   000734  0101               	movlb	1	; () banked
  3861   000736  4BB5               	infsnz	main@i& (0+255),f,b
  3862   000738  2BB6               	incf	(main@i+1)& (0+255),f,b
  3863   00073A                     l6558:
  3864                           
  3865                           ; BSR set to: 1
  3866                           ;main.c: 244:                     while(transmitBuffer[i] != '\0')
  3867   00073A  0E6F               	movlw	low _transmitBuffer
  3868   00073C  25B5               	addwf	main@i& (0+255),w,b
  3869   00073E  6ED9               	movwf	fsr2l,c
  3870   000740  0E01               	movlw	high _transmitBuffer
  3871   000742  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3872   000744  6EDA               	movwf	fsr2h,c
  3873   000746  50DF               	movf	indf2,w,c
  3874   000748  A4D8               	btfss	status,2,c
  3875   00074A  EFA9  F003         	goto	u6831
  3876   00074E  EFAB  F003         	goto	u6830
  3877   000752                     u6831:
  3878   000752  EF76  F003         	goto	l6554
  3879   000756                     u6830:
  3880   000756                     
  3881                           ; BSR set to: 1
  3882                           ;main.c: 249:                     printf("%u: %x %c\n\r", i, transmitBuffer[i], transmit
      +                          Buffer[i]); i++;
  3883   000756  0EC6               	movlw	low STR_46
  3884   000758  6F9E               	movwf	printf@fmt& (0+255),b
  3885   00075A  0E7F               	movlw	high STR_46
  3886   00075C  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3887   00075E  C1B5  F1A0         	movff	main@i,?_printf+2
  3888   000762  C1B6  F1A1         	movff	main@i+1,?_printf+3
  3889   000766  0E6F               	movlw	low _transmitBuffer
  3890   000768  25B5               	addwf	main@i& (0+255),w,b
  3891   00076A  6ED9               	movwf	fsr2l,c
  3892   00076C  0E01               	movlw	high _transmitBuffer
  3893   00076E  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3894   000770  6EDA               	movwf	fsr2h,c
  3895   000772  50DF               	movf	indf2,w,c
  3896   000774  0100               	movlb	0	; () banked
  3897   000776  6FCC               	movwf	??_main& (0+255),b
  3898   000778  51CC               	movf	??_main& (0+255),w,b
  3899   00077A  0101               	movlb	1	; () banked
  3900   00077C  6FA2               	movwf	(?_printf+4)& (0+255),b
  3901   00077E  6BA3               	clrf	(?_printf+5)& (0+255),b
  3902   000780  0E6F               	movlw	low _transmitBuffer
  3903   000782  25B5               	addwf	main@i& (0+255),w,b
  3904   000784  6ED9               	movwf	fsr2l,c
  3905   000786  0E01               	movlw	high _transmitBuffer
  3906   000788  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3907   00078A  6EDA               	movwf	fsr2h,c
  3908   00078C  50DF               	movf	indf2,w,c
  3909   00078E  0100               	movlb	0	; () banked
  3910   000790  6FCD               	movwf	(??_main+1)& (0+255),b
  3911   000792  51CD               	movf	(??_main+1)& (0+255),w,b
  3912   000794  0101               	movlb	1	; () banked
  3913   000796  6FA4               	movwf	(?_printf+6)& (0+255),b
  3914   000798  6BA5               	clrf	(?_printf+7)& (0+255),b
  3915   00079A  EC96  F020         	call	_printf	;wreg free
  3916   00079E  0101               	movlb	1	; () banked
  3917   0007A0  4BB5               	infsnz	main@i& (0+255),f,b
  3918   0007A2  2BB6               	incf	(main@i+1)& (0+255),f,b
  3919   0007A4                     
  3920                           ; BSR set to: 1
  3921                           ;main.c: 250:                     printf("%u: %x %c\n\r", i, transmitBuffer[i], transmit
      +                          Buffer[i]);
  3922   0007A4  0EC6               	movlw	low STR_46
  3923   0007A6  6F9E               	movwf	printf@fmt& (0+255),b
  3924   0007A8  0E7F               	movlw	high STR_46
  3925   0007AA  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3926   0007AC  C1B5  F1A0         	movff	main@i,?_printf+2
  3927   0007B0  C1B6  F1A1         	movff	main@i+1,?_printf+3
  3928   0007B4  0E6F               	movlw	low _transmitBuffer
  3929   0007B6  25B5               	addwf	main@i& (0+255),w,b
  3930   0007B8  6ED9               	movwf	fsr2l,c
  3931   0007BA  0E01               	movlw	high _transmitBuffer
  3932   0007BC  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3933   0007BE  6EDA               	movwf	fsr2h,c
  3934   0007C0  50DF               	movf	indf2,w,c
  3935   0007C2  0100               	movlb	0	; () banked
  3936   0007C4  6FCC               	movwf	??_main& (0+255),b
  3937   0007C6  51CC               	movf	??_main& (0+255),w,b
  3938   0007C8  0101               	movlb	1	; () banked
  3939   0007CA  6FA2               	movwf	(?_printf+4)& (0+255),b
  3940   0007CC  6BA3               	clrf	(?_printf+5)& (0+255),b
  3941   0007CE  0E6F               	movlw	low _transmitBuffer
  3942   0007D0  25B5               	addwf	main@i& (0+255),w,b
  3943   0007D2  6ED9               	movwf	fsr2l,c
  3944   0007D4  0E01               	movlw	high _transmitBuffer
  3945   0007D6  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3946   0007D8  6EDA               	movwf	fsr2h,c
  3947   0007DA  50DF               	movf	indf2,w,c
  3948   0007DC  0100               	movlb	0	; () banked
  3949   0007DE  6FCD               	movwf	(??_main+1)& (0+255),b
  3950   0007E0  51CD               	movf	(??_main+1)& (0+255),w,b
  3951   0007E2  0101               	movlb	1	; () banked
  3952   0007E4  6FA4               	movwf	(?_printf+6)& (0+255),b
  3953   0007E6  6BA5               	clrf	(?_printf+7)& (0+255),b
  3954   0007E8  EC96  F020         	call	_printf	;wreg free
  3955                           
  3956                           ;main.c: 251:                     break;
  3957   0007EC  EFDF  F004         	goto	l6588
  3958   0007F0                     l6566:
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;main.c: 253:                     i = 0;
  3962   0007F0  0E00               	movlw	0
  3963   0007F2  0101               	movlb	1	; () banked
  3964   0007F4  6FB6               	movwf	(main@i+1)& (0+255),b
  3965   0007F6  0E00               	movlw	0
  3966   0007F8  6FB5               	movwf	main@i& (0+255),b
  3967                           
  3968                           ;main.c: 254:                     while(receiveBuffer[i] != '\0')
  3969   0007FA  EF26  F004         	goto	l6572
  3970   0007FE                     l6568:
  3971                           
  3972                           ; BSR set to: 1
  3973                           ;main.c: 255:                     {;main.c: 256:                         printf("%u: %x 
      +                          %c\n\r", i, receiveBuffer[i], receiveBuffer[i]);
  3974   0007FE  0EC6               	movlw	low STR_46
  3975   000800  6F9E               	movwf	printf@fmt& (0+255),b
  3976   000802  0E7F               	movlw	high STR_46
  3977   000804  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  3978   000806  C1B5  F1A0         	movff	main@i,?_printf+2
  3979   00080A  C1B6  F1A1         	movff	main@i+1,?_printf+3
  3980   00080E  0E4F               	movlw	low _receiveBuffer
  3981   000810  25B5               	addwf	main@i& (0+255),w,b
  3982   000812  6ED9               	movwf	fsr2l,c
  3983   000814  0E01               	movlw	high _receiveBuffer
  3984   000816  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3985   000818  6EDA               	movwf	fsr2h,c
  3986   00081A  50DF               	movf	indf2,w,c
  3987   00081C  0100               	movlb	0	; () banked
  3988   00081E  6FCC               	movwf	??_main& (0+255),b
  3989   000820  51CC               	movf	??_main& (0+255),w,b
  3990   000822  0101               	movlb	1	; () banked
  3991   000824  6FA2               	movwf	(?_printf+4)& (0+255),b
  3992   000826  6BA3               	clrf	(?_printf+5)& (0+255),b
  3993   000828  0E4F               	movlw	low _receiveBuffer
  3994   00082A  25B5               	addwf	main@i& (0+255),w,b
  3995   00082C  6ED9               	movwf	fsr2l,c
  3996   00082E  0E01               	movlw	high _receiveBuffer
  3997   000830  21B6               	addwfc	(main@i+1)& (0+255),w,b
  3998   000832  6EDA               	movwf	fsr2h,c
  3999   000834  50DF               	movf	indf2,w,c
  4000   000836  0100               	movlb	0	; () banked
  4001   000838  6FCD               	movwf	(??_main+1)& (0+255),b
  4002   00083A  51CD               	movf	(??_main+1)& (0+255),w,b
  4003   00083C  0101               	movlb	1	; () banked
  4004   00083E  6FA4               	movwf	(?_printf+6)& (0+255),b
  4005   000840  6BA5               	clrf	(?_printf+7)& (0+255),b
  4006   000842  EC96  F020         	call	_printf	;wreg free
  4007   000846                     
  4008                           ;main.c: 257:                         i++;
  4009   000846  0101               	movlb	1	; () banked
  4010   000848  4BB5               	infsnz	main@i& (0+255),f,b
  4011   00084A  2BB6               	incf	(main@i+1)& (0+255),f,b
  4012   00084C                     l6572:
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;main.c: 254:                     while(receiveBuffer[i] != '\0')
  4016   00084C  0E4F               	movlw	low _receiveBuffer
  4017   00084E  25B5               	addwf	main@i& (0+255),w,b
  4018   000850  6ED9               	movwf	fsr2l,c
  4019   000852  0E01               	movlw	high _receiveBuffer
  4020   000854  21B6               	addwfc	(main@i+1)& (0+255),w,b
  4021   000856  6EDA               	movwf	fsr2h,c
  4022   000858  50DF               	movf	indf2,w,c
  4023   00085A  A4D8               	btfss	status,2,c
  4024   00085C  EF32  F004         	goto	u6841
  4025   000860  EF34  F004         	goto	u6840
  4026   000864                     u6841:
  4027   000864  EFFF  F003         	goto	l6568
  4028   000868                     u6840:
  4029   000868                     
  4030                           ; BSR set to: 1
  4031                           ;main.c: 259:                     printf("%u: %x %c\n\r", i, receiveBuffer[i], receiveBu
      +                          ffer[i]); i++;
  4032   000868  0EC6               	movlw	low STR_46
  4033   00086A  6F9E               	movwf	printf@fmt& (0+255),b
  4034   00086C  0E7F               	movlw	high STR_46
  4035   00086E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4036   000870  C1B5  F1A0         	movff	main@i,?_printf+2
  4037   000874  C1B6  F1A1         	movff	main@i+1,?_printf+3
  4038   000878  0E4F               	movlw	low _receiveBuffer
  4039   00087A  25B5               	addwf	main@i& (0+255),w,b
  4040   00087C  6ED9               	movwf	fsr2l,c
  4041   00087E  0E01               	movlw	high _receiveBuffer
  4042   000880  21B6               	addwfc	(main@i+1)& (0+255),w,b
  4043   000882  6EDA               	movwf	fsr2h,c
  4044   000884  50DF               	movf	indf2,w,c
  4045   000886  0100               	movlb	0	; () banked
  4046   000888  6FCC               	movwf	??_main& (0+255),b
  4047   00088A  51CC               	movf	??_main& (0+255),w,b
  4048   00088C  0101               	movlb	1	; () banked
  4049   00088E  6FA2               	movwf	(?_printf+4)& (0+255),b
  4050   000890  6BA3               	clrf	(?_printf+5)& (0+255),b
  4051   000892  0E4F               	movlw	low _receiveBuffer
  4052   000894  25B5               	addwf	main@i& (0+255),w,b
  4053   000896  6ED9               	movwf	fsr2l,c
  4054   000898  0E01               	movlw	high _receiveBuffer
  4055   00089A  21B6               	addwfc	(main@i+1)& (0+255),w,b
  4056   00089C  6EDA               	movwf	fsr2h,c
  4057   00089E  50DF               	movf	indf2,w,c
  4058   0008A0  0100               	movlb	0	; () banked
  4059   0008A2  6FCD               	movwf	(??_main+1)& (0+255),b
  4060   0008A4  51CD               	movf	(??_main+1)& (0+255),w,b
  4061   0008A6  0101               	movlb	1	; () banked
  4062   0008A8  6FA4               	movwf	(?_printf+6)& (0+255),b
  4063   0008AA  6BA5               	clrf	(?_printf+7)& (0+255),b
  4064   0008AC  EC96  F020         	call	_printf	;wreg free
  4065   0008B0  0101               	movlb	1	; () banked
  4066   0008B2  4BB5               	infsnz	main@i& (0+255),f,b
  4067   0008B4  2BB6               	incf	(main@i+1)& (0+255),f,b
  4068   0008B6                     
  4069                           ; BSR set to: 1
  4070                           ;main.c: 260:                     printf("%u: %x %c\n\r", i, receiveBuffer[i], receiveBu
      +                          ffer[i]);
  4071   0008B6  0EC6               	movlw	low STR_46
  4072   0008B8  6F9E               	movwf	printf@fmt& (0+255),b
  4073   0008BA  0E7F               	movlw	high STR_46
  4074   0008BC  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4075   0008BE  C1B5  F1A0         	movff	main@i,?_printf+2
  4076   0008C2  C1B6  F1A1         	movff	main@i+1,?_printf+3
  4077   0008C6  0E4F               	movlw	low _receiveBuffer
  4078   0008C8  25B5               	addwf	main@i& (0+255),w,b
  4079   0008CA  6ED9               	movwf	fsr2l,c
  4080   0008CC  0E01               	movlw	high _receiveBuffer
  4081   0008CE  21B6               	addwfc	(main@i+1)& (0+255),w,b
  4082   0008D0  6EDA               	movwf	fsr2h,c
  4083   0008D2  50DF               	movf	indf2,w,c
  4084   0008D4  0100               	movlb	0	; () banked
  4085   0008D6  6FCC               	movwf	??_main& (0+255),b
  4086   0008D8  51CC               	movf	??_main& (0+255),w,b
  4087   0008DA  0101               	movlb	1	; () banked
  4088   0008DC  6FA2               	movwf	(?_printf+4)& (0+255),b
  4089   0008DE  6BA3               	clrf	(?_printf+5)& (0+255),b
  4090   0008E0  0E4F               	movlw	low _receiveBuffer
  4091   0008E2  25B5               	addwf	main@i& (0+255),w,b
  4092   0008E4  6ED9               	movwf	fsr2l,c
  4093   0008E6  0E01               	movlw	high _receiveBuffer
  4094   0008E8  21B6               	addwfc	(main@i+1)& (0+255),w,b
  4095   0008EA  6EDA               	movwf	fsr2h,c
  4096   0008EC  50DF               	movf	indf2,w,c
  4097   0008EE  0100               	movlb	0	; () banked
  4098   0008F0  6FCD               	movwf	(??_main+1)& (0+255),b
  4099   0008F2  51CD               	movf	(??_main+1)& (0+255),w,b
  4100   0008F4  0101               	movlb	1	; () banked
  4101   0008F6  6FA4               	movwf	(?_printf+6)& (0+255),b
  4102   0008F8  6BA5               	clrf	(?_printf+7)& (0+255),b
  4103   0008FA  EC96  F020         	call	_printf	;wreg free
  4104                           
  4105                           ;main.c: 261:                     break;
  4106   0008FE  EFDF  F004         	goto	l6588
  4107   000902                     l582:
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;main.c: 263:                     RCSTA2bits.CREN = 0;
  4111   000902  9871               	bcf	113,4,c	;volatile
  4112                           
  4113                           ;main.c: 264:                     RCSTA2bits.CREN = 1;
  4114   000904  8871               	bsf	113,4,c	;volatile
  4115   000906                     
  4116                           ; BSR set to: 0
  4117                           ;main.c: 265:                     printf("Just reset EUSART2\r\n");
  4118   000906  0EF2               	movlw	low STR_52
  4119   000908  0101               	movlb	1	; () banked
  4120   00090A  6F9E               	movwf	printf@fmt& (0+255),b
  4121   00090C  0E7E               	movlw	high STR_52
  4122   00090E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4123   000910  EC96  F020         	call	_printf	;wreg free
  4124                           
  4125                           ;main.c: 266:                     break;
  4126   000914  EFDF  F004         	goto	l6588
  4127   000918                     l6582:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;main.c: 268:                     printf("Unknown key %c\r\n", cmd);
  4131   000918  0E2F               	movlw	low STR_53
  4132   00091A  0101               	movlb	1	; () banked
  4133   00091C  6F9E               	movwf	printf@fmt& (0+255),b
  4134   00091E  0E7F               	movlw	high STR_53
  4135   000920  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4136   000922  C1B4  F1A0         	movff	main@cmd,?_printf+2
  4137   000926  6BA1               	clrf	(?_printf+3)& (0+255),b
  4138   000928  EC96  F020         	call	_printf	;wreg free
  4139                           
  4140                           ;main.c: 269:                     break;
  4141   00092C  EFDF  F004         	goto	l6588
  4142   000930                     l6586:
  4143   000930  0101               	movlb	1	; () banked
  4144   000932  51B4               	movf	main@cmd& (0+255),w,b
  4145   000934  0100               	movlb	0	; () banked
  4146   000936  6FCC               	movwf	??_main& (0+255),b
  4147   000938  6BCD               	clrf	(??_main+1)& (0+255),b
  4148                           
  4149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4150                           ; Switch size 1, requested type "simple"
  4151                           ; Number of cases is 1, Range of values is 0 to 0
  4152                           ; switch strategies available:
  4153                           ; Name         Instructions Cycles
  4154                           ; simple_byte            4     3 (average)
  4155                           ;	Chosen strategy is simple_byte
  4156   00093A  51CD               	movf	(??_main+1)& (0+255),w,b
  4157   00093C  0A00               	xorlw	0	; case 0
  4158   00093E  B4D8               	btfsc	status,2,c
  4159   000940  EFA4  F004         	goto	l6844
  4160   000944  EF8C  F004         	goto	l6582
  4161   000948                     l6844:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ; Switch size 1, requested type "simple"
  4165                           ; Number of cases is 14, Range of values is 63 to 122
  4166                           ; switch strategies available:
  4167                           ; Name         Instructions Cycles
  4168                           ; simple_byte           43    22 (average)
  4169                           ;	Chosen strategy is simple_byte
  4170   000948  51CC               	movf	??_main& (0+255),w,b
  4171   00094A  0A3F               	xorlw	63	; case 63
  4172   00094C  B4D8               	btfsc	status,2,c
  4173   00094E  EF11  F001         	goto	l6440
  4174   000952  0A72               	xorlw	114	; case 77
  4175   000954  B4D8               	btfsc	status,2,c
  4176   000956  EF37  F003         	goto	l569
  4177   00095A  0A1F               	xorlw	31	; case 82
  4178   00095C  B4D8               	btfsc	status,2,c
  4179   00095E  EF0B  F003         	goto	l6534
  4180   000962  0A01               	xorlw	1	; case 83
  4181   000964  B4D8               	btfsc	status,2,c
  4182   000966  EFEB  F002         	goto	l6528
  4183   00096A  0A0B               	xorlw	11	; case 88
  4184   00096C  B4D8               	btfsc	status,2,c
  4185   00096E  EFF8  F003         	goto	l6566
  4186   000972  0A02               	xorlw	2	; case 90
  4187   000974  B4D8               	btfsc	status,2,c
  4188   000976  EF96  F001         	goto	l6444
  4189   00097A  0A38               	xorlw	56	; case 98
  4190   00097C  B4D8               	btfsc	status,2,c
  4191   00097E  EFCD  F001         	goto	l6468
  4192   000982  0A06               	xorlw	6	; case 100
  4193   000984  B4D8               	btfsc	status,2,c
  4194   000986  EFD5  F002         	goto	l6526
  4195   00098A  0A09               	xorlw	9	; case 109
  4196   00098C  B4D8               	btfsc	status,2,c
  4197   00098E  EF57  F002         	goto	l6492
  4198   000992  0A02               	xorlw	2	; case 111
  4199   000994  B4D8               	btfsc	status,2,c
  4200   000996  EF8D  F001         	goto	l6442
  4201   00099A  0A1D               	xorlw	29	; case 114
  4202   00099C  B4D8               	btfsc	status,2,c
  4203   00099E  EF81  F004         	goto	l582
  4204   0009A2  0A01               	xorlw	1	; case 115
  4205   0009A4  B4D8               	btfsc	status,2,c
  4206   0009A6  EFBF  F002         	goto	l6524
  4207   0009AA  0A0B               	xorlw	11	; case 120
  4208   0009AC  B4D8               	btfsc	status,2,c
  4209   0009AE  EF6F  F003         	goto	l6552
  4210   0009B2  0A02               	xorlw	2	; case 122
  4211   0009B4  B4D8               	btfsc	status,2,c
  4212   0009B6  EFB2  F001         	goto	l6456
  4213   0009BA  EF8C  F004         	goto	l6582
  4214   0009BE                     l6588:
  4215                           
  4216                           ;main.c: 271:             printf("\n\r> ");
  4217   0009BE  0EF3               	movlw	low STR_5
  4218   0009C0  0101               	movlb	1	; () banked
  4219   0009C2  6F9E               	movwf	printf@fmt& (0+255),b
  4220   0009C4  0E7F               	movlw	high STR_5
  4221   0009C6  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4222   0009C8  EC96  F020         	call	_printf	;wreg free
  4223   0009CC  EFF8  F000         	goto	l6434
  4224   0009D0  EF8C  F000         	goto	start
  4225   0009D4                     __end_of_main:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _read8bit *****************
  4229 ;; Defined at:
  4230 ;;		line 356 in file "main.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  numb            1   36[BANK1 ] unsigned char 
  4235 ;;  character       1   35[BANK1 ] unsigned char 
  4236 ;;  digit           1   34[BANK1 ] unsigned char 
  4237 ;;  i               1   33[BANK1 ] unsigned char 
  4238 ;;  maxValue        1   32[BANK1 ] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      unsigned char 
  4241 ;; Registers used:
  4242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4248 ;;      Params:         0       0       0       0       0       0       0
  4249 ;;      Locals:         0       0       5       0       0       0       0
  4250 ;;      Temps:          0       0       5       0       0       0       0
  4251 ;;      Totals:         0       0      10       0       0       0       0
  4252 ;;Total ram usage:       10 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 20
  4255 ;; This function calls:
  4256 ;;		_EUSART1_Read
  4257 ;;		___awdiv
  4258 ;;		_printf
  4259 ;; This function is called by:
  4260 ;;		_main
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text1
  4265   00272E                     __ptext1:
  4266                           	callstack 0
  4267   00272E                     _read8bit:
  4268                           	callstack 10
  4269   00272E                     
  4270                           ;main.c: 359:     uint8_t numb = 0;
  4271   00272E  0E00               	movlw	0
  4272   002730  0101               	movlb	1	; () banked
  4273   002732  6FB3               	movwf	read8bit@numb& (0+255),b
  4274   002734                     
  4275                           ; BSR set to: 1
  4276                           ;main.c: 360:     uint8_t maxValue = 255;
  4277   002734  69AF               	setf	read8bit@maxValue& (0+255),b
  4278                           
  4279                           ;main.c: 362:     uint8_t character = 0;
  4280   002736  0E00               	movlw	0
  4281   002738  6FB2               	movwf	read8bit@character& (0+255),b
  4282                           
  4283                           ;main.c: 363:     uint8_t i = 0;
  4284   00273A  0E00               	movlw	0
  4285   00273C  6FB0               	movwf	read8bit@i& (0+255),b
  4286                           
  4287                           ;main.c: 365:     while(character != '\r')
  4288   00273E  EF48  F014         	goto	l6388
  4289   002742                     l6350:
  4290                           
  4291                           ; BSR set to: 1
  4292                           ;main.c: 366:     {;main.c: 368:         character = EUSART1_Read();
  4293   002742  EC81  F020         	call	_EUSART1_Read	;wreg free
  4294   002746  0101               	movlb	1	; () banked
  4295   002748  6FB2               	movwf	read8bit@character& (0+255),b
  4296   00274A                     
  4297                           ; BSR set to: 1
  4298                           ;main.c: 370:         if(character == 127)
  4299   00274A  0E7F               	movlw	127
  4300   00274C  19B2               	xorwf	read8bit@character& (0+255),w,b
  4301   00274E  A4D8               	btfss	status,2,c
  4302   002750  EFAC  F013         	goto	u6591
  4303   002754  EFAE  F013         	goto	u6590
  4304   002758                     u6591:
  4305   002758  EFD9  F013         	goto	l6364
  4306   00275C                     u6590:
  4307   00275C                     
  4308                           ; BSR set to: 1
  4309                           ;main.c: 371:         {;main.c: 372:             printf("%c", character);
  4310   00275C  0EFC               	movlw	low STR_35
  4311   00275E  6F9E               	movwf	printf@fmt& (0+255),b
  4312   002760  0E7F               	movlw	high STR_35
  4313   002762  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4314   002764  C1B2  F1A0         	movff	read8bit@character,?_printf+2
  4315   002768  6BA1               	clrf	(?_printf+3)& (0+255),b
  4316   00276A  EC96  F020         	call	_printf	;wreg free
  4317   00276E                     
  4318                           ;main.c: 373:             if(numb > 0) numb /= 10;
  4319   00276E  0101               	movlb	1	; () banked
  4320   002770  51B3               	movf	read8bit@numb& (0+255),w,b
  4321   002772  B4D8               	btfsc	status,2,c
  4322   002774  EFBE  F013         	goto	u6601
  4323   002778  EFC0  F013         	goto	u6600
  4324   00277C                     u6601:
  4325   00277C  EFCE  F013         	goto	l6360
  4326   002780                     u6600:
  4327   002780                     
  4328                           ; BSR set to: 1
  4329   002780  C1B3  F078         	movff	read8bit@numb,___awdiv@dividend
  4330   002784  0100               	movlb	0	; () banked
  4331   002786  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  4332   002788  0E00               	movlw	0
  4333   00278A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  4334   00278C  0E0A               	movlw	10
  4335   00278E  6F7A               	movwf	___awdiv@divisor& (0+255),b
  4336   002790  ECF3  F01B         	call	___awdiv	;wreg free
  4337   002794  0100               	movlb	0	; () banked
  4338   002796  5178               	movf	?___awdiv& (0+255),w,b
  4339   002798  0101               	movlb	1	; () banked
  4340   00279A  6FB3               	movwf	read8bit@numb& (0+255),b
  4341   00279C                     l6360:
  4342                           
  4343                           ; BSR set to: 1
  4344                           ;main.c: 374:             if(i > 0) i--;
  4345   00279C  51B0               	movf	read8bit@i& (0+255),w,b
  4346   00279E  B4D8               	btfsc	status,2,c
  4347   0027A0  EFD4  F013         	goto	u6611
  4348   0027A4  EFD6  F013         	goto	u6610
  4349   0027A8                     u6611:
  4350   0027A8  EF48  F014         	goto	l6388
  4351   0027AC                     u6610:
  4352   0027AC                     
  4353                           ; BSR set to: 1
  4354   0027AC  07B0               	decf	read8bit@i& (0+255),f,b
  4355   0027AE  EF48  F014         	goto	l6388
  4356   0027B2                     l6364:
  4357                           
  4358                           ; BSR set to: 1
  4359                           ;main.c: 378:         digit = character - '0';
  4360   0027B2  51B2               	movf	read8bit@character& (0+255),w,b
  4361   0027B4  0FD0               	addlw	208
  4362   0027B6  6FB1               	movwf	read8bit@digit& (0+255),b
  4363                           
  4364                           ;main.c: 379:         if((digit > 9) || (numb * 10 + digit > maxValue)) continue;
  4365   0027B8  0E0A               	movlw	10
  4366   0027BA  61B1               	cpfslt	read8bit@digit& (0+255),b
  4367   0027BC  EFE2  F013         	goto	u6621
  4368   0027C0  EFE4  F013         	goto	u6620
  4369   0027C4                     u6621:
  4370   0027C4  EF48  F014         	goto	l6388
  4371   0027C8                     u6620:
  4372   0027C8                     
  4373                           ; BSR set to: 1
  4374   0027C8  51B3               	movf	read8bit@numb& (0+255),w,b
  4375   0027CA  0D0A               	mullw	10
  4376   0027CC  CFF3 F1AA          	movff	prodl,??_read8bit
  4377   0027D0  CFF4 F1AB          	movff	prodh,??_read8bit+1
  4378   0027D4  51B1               	movf	read8bit@digit& (0+255),w,b
  4379   0027D6  27AA               	addwf	??_read8bit& (0+255),f,b
  4380   0027D8  0E00               	movlw	0
  4381   0027DA  23AB               	addwfc	(??_read8bit+1)& (0+255),f,b
  4382   0027DC  51AF               	movf	read8bit@maxValue& (0+255),w,b
  4383   0027DE  6FAC               	movwf	(??_read8bit+2)& (0+255),b
  4384   0027E0  6BAD               	clrf	(??_read8bit+3)& (0+255),b
  4385   0027E2  51AA               	movf	??_read8bit& (0+255),w,b
  4386   0027E4  5DAC               	subwf	(??_read8bit+2)& (0+255),w,b
  4387   0027E6  51AD               	movf	(??_read8bit+3)& (0+255),w,b
  4388   0027E8  0A80               	xorlw	128
  4389   0027EA  6FAE               	movwf	(??_read8bit+4)& (0+255),b
  4390   0027EC  51AB               	movf	(??_read8bit+1)& (0+255),w,b
  4391   0027EE  0A80               	xorlw	128
  4392   0027F0  59AE               	subwfb	(??_read8bit+4)& (0+255),w,b
  4393   0027F2  B0D8               	btfsc	status,0,c
  4394   0027F4  EFFE  F013         	goto	u6631
  4395   0027F8  EF00  F014         	goto	u6630
  4396   0027FC                     u6631:
  4397   0027FC  EF02  F014         	goto	l6368
  4398   002800                     u6630:
  4399   002800  EF48  F014         	goto	l6388
  4400   002804                     l6368:
  4401                           
  4402                           ; BSR set to: 1
  4403                           ;main.c: 380:         if((numb == 0) && (digit == 0) && (i > 0)) continue;
  4404   002804  51B3               	movf	read8bit@numb& (0+255),w,b
  4405   002806  A4D8               	btfss	status,2,c
  4406   002808  EF08  F014         	goto	u6641
  4407   00280C  EF0A  F014         	goto	u6640
  4408   002810                     u6641:
  4409   002810  EF1C  F014         	goto	l6376
  4410   002814                     u6640:
  4411   002814                     
  4412                           ; BSR set to: 1
  4413   002814  51B1               	movf	read8bit@digit& (0+255),w,b
  4414   002816  A4D8               	btfss	status,2,c
  4415   002818  EF10  F014         	goto	u6651
  4416   00281C  EF12  F014         	goto	u6650
  4417   002820                     u6651:
  4418   002820  EF1C  F014         	goto	l6376
  4419   002824                     u6650:
  4420   002824                     
  4421                           ; BSR set to: 1
  4422   002824  51B0               	movf	read8bit@i& (0+255),w,b
  4423   002826  B4D8               	btfsc	status,2,c
  4424   002828  EF18  F014         	goto	u6661
  4425   00282C  EF1A  F014         	goto	u6660
  4426   002830                     u6661:
  4427   002830  EF1C  F014         	goto	l6376
  4428   002834                     u6660:
  4429   002834  EF48  F014         	goto	l6388
  4430   002838                     l6376:
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;main.c: 381:         if((numb == 0) && (i > 0)) printf("%c", 127);
  4434   002838  51B3               	movf	read8bit@numb& (0+255),w,b
  4435   00283A  A4D8               	btfss	status,2,c
  4436   00283C  EF22  F014         	goto	u6671
  4437   002840  EF24  F014         	goto	u6670
  4438   002844                     u6671:
  4439   002844  EF36  F014         	goto	l634
  4440   002848                     u6670:
  4441   002848                     
  4442                           ; BSR set to: 1
  4443   002848  51B0               	movf	read8bit@i& (0+255),w,b
  4444   00284A  B4D8               	btfsc	status,2,c
  4445   00284C  EF2A  F014         	goto	u6681
  4446   002850  EF2C  F014         	goto	u6680
  4447   002854                     u6681:
  4448   002854  EF36  F014         	goto	l634
  4449   002858                     u6680:
  4450   002858                     
  4451                           ; BSR set to: 1
  4452   002858  0EFC               	movlw	low STR_35
  4453   00285A  6F9E               	movwf	printf@fmt& (0+255),b
  4454   00285C  0E7F               	movlw	high STR_35
  4455   00285E  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4456   002860  0E00               	movlw	0
  4457   002862  6FA1               	movwf	(?_printf+3)& (0+255),b
  4458   002864  0E7F               	movlw	127
  4459   002866  6FA0               	movwf	(?_printf+2)& (0+255),b
  4460   002868  EC96  F020         	call	_printf	;wreg free
  4461   00286C                     l634:
  4462                           
  4463                           ;main.c: 382:         printf("%c", character);
  4464   00286C  0EFC               	movlw	low STR_35
  4465   00286E  0101               	movlb	1	; () banked
  4466   002870  6F9E               	movwf	printf@fmt& (0+255),b
  4467   002872  0E7F               	movlw	high STR_35
  4468   002874  6F9F               	movwf	(printf@fmt+1)& (0+255),b
  4469   002876  C1B2  F1A0         	movff	read8bit@character,?_printf+2
  4470   00287A  6BA1               	clrf	(?_printf+3)& (0+255),b
  4471   00287C  EC96  F020         	call	_printf	;wreg free
  4472   002880                     
  4473                           ;main.c: 383:         numb *= 10;
  4474   002880  0E0A               	movlw	10
  4475   002882  0101               	movlb	1	; () banked
  4476   002884  03B3               	mulwf	read8bit@numb& (0+255),b
  4477   002886  50F3               	movf	prodl,w,c
  4478   002888  6FB3               	movwf	read8bit@numb& (0+255),b
  4479   00288A                     
  4480                           ; BSR set to: 1
  4481                           ;main.c: 384:         numb += digit;
  4482   00288A  51B1               	movf	read8bit@digit& (0+255),w,b
  4483   00288C  27B3               	addwf	read8bit@numb& (0+255),f,b
  4484   00288E                     
  4485                           ; BSR set to: 1
  4486                           ;main.c: 385:         i++;
  4487   00288E  2BB0               	incf	read8bit@i& (0+255),f,b
  4488   002890                     l6388:
  4489                           
  4490                           ; BSR set to: 1
  4491                           ;main.c: 365:     while(character != '\r')
  4492   002890  0E0D               	movlw	13
  4493   002892  19B2               	xorwf	read8bit@character& (0+255),w,b
  4494   002894  A4D8               	btfss	status,2,c
  4495   002896  EF4F  F014         	goto	u6691
  4496   00289A  EF51  F014         	goto	u6690
  4497   00289E                     u6691:
  4498   00289E  EFA1  F013         	goto	l6350
  4499   0028A2                     u6690:
  4500   0028A2                     
  4501                           ; BSR set to: 1
  4502                           ;main.c: 388:     return(numb);
  4503   0028A2  51B3               	movf	read8bit@numb& (0+255),w,b
  4504   0028A4                     
  4505                           ; BSR set to: 1
  4506   0028A4  0012               	return		;funcret
  4507   0028A6                     __end_of_read8bit:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _printf *****************
  4511 ;; Defined at:
  4512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  fmt             2   15[BANK1 ] PTR const unsigned char 
  4515 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  4516 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  4517 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  4518 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  4519 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  4520 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  4521 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  4522 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  4523 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  4524 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  4525 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  4526 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  4527 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  4528 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  4529 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  ap              2  106[BANK0 ] PTR void [1]
  4532 ;;		 -> ?_printf(2), 
  4533 ;;  ret             2    0        int 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;                  2   15[BANK1 ] int 
  4536 ;; Registers used:
  4537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 0/0
  4540 ;;		On exit  : 0/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4543 ;;      Params:         0       0      12       0       0       0       0
  4544 ;;      Locals:         0       2       0       0       0       0       0
  4545 ;;      Temps:          0       0       0       0       0       0       0
  4546 ;;      Totals:         0       2      12       0       0       0       0
  4547 ;;Total ram usage:       14 bytes
  4548 ;; Hardware stack levels used: 1
  4549 ;; Hardware stack levels required when called: 19
  4550 ;; This function calls:
  4551 ;;		_vfprintf
  4552 ;; This function is called by:
  4553 ;;		_main
  4554 ;;		_read8bit
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text2
  4559   00412C                     __ptext2:
  4560                           	callstack 0
  4561   00412C                     _printf:
  4562                           	callstack 10
  4563   00412C  0EA0               	movlw	low (?_printf+2)
  4564   00412E  0100               	movlb	0	; () banked
  4565   004130  6FCA               	movwf	printf@ap& (0+255),b
  4566   004132  0E01               	movlw	high (?_printf+2)
  4567   004134  6FCB               	movwf	(printf@ap+1)& (0+255),b
  4568   004136                     
  4569                           ; BSR set to: 0
  4570   004136  0E00               	movlw	0
  4571   004138  6FC2               	movwf	vfprintf@fp& (0+255),b
  4572   00413A  0E00               	movlw	0
  4573   00413C  6FC3               	movwf	(vfprintf@fp+1)& (0+255),b
  4574   00413E  C19E  F0C4         	movff	printf@fmt,vfprintf@fmt
  4575   004142  C19F  F0C5         	movff	printf@fmt+1,vfprintf@fmt+1
  4576   004146  0ECA               	movlw	low printf@ap
  4577   004148  6FC6               	movwf	vfprintf@ap& (0+255),b
  4578   00414A  0E00               	movlw	high printf@ap
  4579   00414C  6FC7               	movwf	(vfprintf@ap+1)& (0+255),b
  4580   00414E  EC08  F01E         	call	_vfprintf	;wreg free
  4581   004152  0012               	return		;funcret
  4582   004154                     __end_of_printf:
  4583                           	callstack 0
  4584                           
  4585 ;; *************** function _vfprintf *****************
  4586 ;; Defined at:
  4587 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  fp              2   98[BANK0 ] PTR struct _IO_FILE
  4590 ;;		 -> NULL(0), 
  4591 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  4592 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  4593 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  4594 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  4595 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  4596 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  4597 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  4598 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  4599 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  4600 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  4601 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  4602 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  4603 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  4604 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  4605 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  4606 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  4607 ;;  ap              2  102[BANK0 ] PTR PTR void 
  4608 ;;		 -> printf@ap(2), 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  cfmt            2  104[BANK0 ] PTR unsigned char 
  4611 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  4612 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  4613 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  4614 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  4615 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  4616 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  4617 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  4618 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  4619 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  4620 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  4621 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  4622 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  4623 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  4624 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  4625 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  2   98[BANK0 ] int 
  4628 ;; Registers used:
  4629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4635 ;;      Params:         0       6       0       0       0       0       0
  4636 ;;      Locals:         0       2       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0
  4638 ;;      Totals:         0       8       0       0       0       0       0
  4639 ;;Total ram usage:        8 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 18
  4642 ;; This function calls:
  4643 ;;		_vfpfcnvrt
  4644 ;; This function is called by:
  4645 ;;		_printf
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text3
  4650   003C10                     __ptext3:
  4651                           	callstack 0
  4652   003C10                     _vfprintf:
  4653                           	callstack 10
  4654   003C10                     
  4655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4656   003C10  C0C4  F0C8         	movff	vfprintf@fmt,vfprintf@cfmt
  4657   003C14  C0C5  F0C9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4658                           
  4659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4660   003C18  EF1D  F01E         	goto	l6334
  4661   003C1C                     l6332:
  4662                           
  4663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4664   003C1C  C0C2  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  4665   003C20  C0C3  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4666   003C24  0EC8               	movlw	low vfprintf@cfmt
  4667   003C26  0100               	movlb	0	; () banked
  4668   003C28  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  4669   003C2A  0E00               	movlw	high vfprintf@cfmt
  4670   003C2C  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4671   003C2E  C0C6  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  4672   003C32  C0C7  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4673   003C36  ECEA  F004         	call	_vfpfcnvrt	;wreg free
  4674   003C3A                     l6334:
  4675                           
  4676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4677   003C3A  C0C8  FFF6         	movff	vfprintf@cfmt,tblptrl
  4678   003C3E  C0C9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4679   003C42                     	if	0	;tblptru may be non-zero
  4680   003C42                     	endif
  4681   003C42                     	if	0	;tblptru may be non-zero
  4682   003C42                     	endif
  4683   003C42  0008               	tblrd		*
  4684   003C44  50F5               	movf	tablat,w,c
  4685   003C46  0900               	iorlw	0
  4686   003C48  A4D8               	btfss	status,2,c
  4687   003C4A  EF29  F01E         	goto	u6581
  4688   003C4E  EF2B  F01E         	goto	u6580
  4689   003C52                     u6581:
  4690   003C52  EF0E  F01E         	goto	l6332
  4691   003C56                     u6580:
  4692   003C56                     
  4693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4694   003C56  0E00               	movlw	0
  4695   003C58  0100               	movlb	0	; () banked
  4696   003C5A  6FC3               	movwf	(?_vfprintf+1)& (0+255),b
  4697   003C5C  0E00               	movlw	0
  4698   003C5E  6FC2               	movwf	?_vfprintf& (0+255),b
  4699   003C60                     
  4700                           ; BSR set to: 0
  4701   003C60  0012               	return		;funcret
  4702   003C62                     __end_of_vfprintf:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _vfpfcnvrt *****************
  4706 ;; Defined at:
  4707 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  4710 ;;		 -> NULL(0), 
  4711 ;;  fmt             2   90[BANK0 ] PTR PTR unsigned char 
  4712 ;;		 -> vfprintf@cfmt(2), 
  4713 ;;  ap              2   92[BANK0 ] PTR PTR void 
  4714 ;;		 -> printf@ap(2), 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  convarg         8    5[BANK1 ] struct .
  4717 ;;  cp              2   13[BANK1 ] PTR unsigned char 
  4718 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  4719 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  4720 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  4721 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  4722 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  4723 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  4724 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  4725 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  4726 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  4727 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  4728 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  4729 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  4730 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  4731 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  4732 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  4733 ;;  done            2    1[BANK1 ] int 
  4734 ;;  i               2    0        int 
  4735 ;;  c               1    0[BANK1 ] unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4745 ;;      Params:         0       6       0       0       0       0       0
  4746 ;;      Locals:         0       0      15       0       0       0       0
  4747 ;;      Temps:          0       4       0       0       0       0       0
  4748 ;;      Totals:         0      10      15       0       0       0       0
  4749 ;;Total ram usage:       25 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 17
  4752 ;; This function calls:
  4753 ;;		_atoi
  4754 ;;		_ctoa
  4755 ;;		_dtoa
  4756 ;;		_fputc
  4757 ;;		_isdigit
  4758 ;;		_stoa
  4759 ;;		_strncmp
  4760 ;;		_utoa
  4761 ;;		_xtoa
  4762 ;; This function is called by:
  4763 ;;		_vfprintf
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text4
  4768   0009D4                     __ptext4:
  4769                           	callstack 0
  4770   0009D4                     _vfpfcnvrt:
  4771                           	callstack 10
  4772   0009D4                     
  4773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4774   0009D4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4775   0009D8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4776   0009DC  CFDE FFF6          	movff	postinc2,tblptrl
  4777   0009E0  CFDD FFF7          	movff	postdec2,tblptrh
  4778   0009E4                     	if	0	;tblptru may be non-zero
  4779   0009E4                     	endif
  4780   0009E4                     	if	0	;tblptru may be non-zero
  4781   0009E4                     	endif
  4782   0009E4  0008               	tblrd		*
  4783   0009E6  50F5               	movf	tablat,w,c
  4784   0009E8  0A25               	xorlw	37
  4785   0009EA  A4D8               	btfss	status,2,c
  4786   0009EC  EFFA  F004         	goto	u6451
  4787   0009F0  EFFC  F004         	goto	u6450
  4788   0009F4                     u6451:
  4789   0009F4  EF6B  F007         	goto	l6312
  4790   0009F8                     u6450:
  4791   0009F8                     
  4792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4793   0009F8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4794   0009FC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4795   000A00  2ADE               	incf	postinc2,f,c
  4796   000A02  0E00               	movlw	0
  4797   000A04  22DD               	addwfc	postdec2,f,c
  4798   000A06                     
  4799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4800   000A06  0E00               	movlw	0
  4801   000A08  0100               	movlb	0	; () banked
  4802   000A0A  6FCF               	movwf	(_width+1)& (0+255),b
  4803   000A0C  0E00               	movlw	0
  4804   000A0E  6FCE               	movwf	_width& (0+255),b
  4805   000A10  C0CE  F0D4         	movff	_width,_flags
  4806   000A14                     
  4807                           ; BSR set to: 0
  4808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4809   000A14  69D0               	setf	_prec& (0+255),b
  4810   000A16  69D1               	setf	(_prec+1)& (0+255),b
  4811   000A18                     
  4812                           ; BSR set to: 0
  4813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4814   000A18  0E00               	movlw	0
  4815   000A1A  0101               	movlb	1	; () banked
  4816   000A1C  6F91               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4817   000A1E  0E00               	movlw	0
  4818   000A20  6F90               	movwf	vfpfcnvrt@done& (0+255),b
  4819                           
  4820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4821   000A22  EF3F  F005         	goto	l6236
  4822   000A26                     l6226:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  4826   000A26  83D4               	bsf	_flags& (0+255),1,b
  4827   000A28                     
  4828                           ; BSR set to: 0
  4829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  4830   000A28  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4831   000A2C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4832   000A30  2ADE               	incf	postinc2,f,c
  4833   000A32  0E00               	movlw	0
  4834   000A34  22DD               	addwfc	postdec2,f,c
  4835                           
  4836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  4837   000A36  EF3F  F005         	goto	l6236
  4838   000A3A                     l6230:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  4842   000A3A  0E00               	movlw	0
  4843   000A3C  0101               	movlb	1	; () banked
  4844   000A3E  6F91               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4845   000A40  0E01               	movlw	1
  4846   000A42  6F90               	movwf	vfpfcnvrt@done& (0+255),b
  4847                           
  4848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  4849   000A44  EF3F  F005         	goto	l6236
  4850   000A48                     l6234:
  4851                           
  4852                           ; BSR set to: 1
  4853   000A48  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4854   000A4C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4855   000A50  CFDE FFF6          	movff	postinc2,tblptrl
  4856   000A54  CFDD FFF7          	movff	postdec2,tblptrh
  4857   000A58                     	if	0	;tblptru may be non-zero
  4858   000A58                     	endif
  4859   000A58                     	if	0	;tblptru may be non-zero
  4860   000A58                     	endif
  4861   000A58  0008               	tblrd		*
  4862   000A5A  50F5               	movf	tablat,w,c
  4863   000A5C  0100               	movlb	0	; () banked
  4864   000A5E  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4865   000A60  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4866                           
  4867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4868                           ; Switch size 1, requested type "simple"
  4869                           ; Number of cases is 1, Range of values is 0 to 0
  4870                           ; switch strategies available:
  4871                           ; Name         Instructions Cycles
  4872                           ; simple_byte            4     3 (average)
  4873                           ;	Chosen strategy is simple_byte
  4874   000A62  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4875   000A64  0A00               	xorlw	0	; case 0
  4876   000A66  B4D8               	btfsc	status,2,c
  4877   000A68  EF38  F005         	goto	l6846
  4878   000A6C  EF1D  F005         	goto	l6230
  4879   000A70                     l6846:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ; Switch size 1, requested type "simple"
  4883                           ; Number of cases is 1, Range of values is 48 to 48
  4884                           ; switch strategies available:
  4885                           ; Name         Instructions Cycles
  4886                           ; simple_byte            4     3 (average)
  4887                           ;	Chosen strategy is simple_byte
  4888   000A70  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4889   000A72  0A30               	xorlw	48	; case 48
  4890   000A74  B4D8               	btfsc	status,2,c
  4891   000A76  EF13  F005         	goto	l6226
  4892   000A7A  EF1D  F005         	goto	l6230
  4893   000A7E                     l6236:
  4894                           
  4895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4896   000A7E  0101               	movlb	1	; () banked
  4897   000A80  5190               	movf	vfpfcnvrt@done& (0+255),w,b
  4898   000A82  1191               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4899   000A84  B4D8               	btfsc	status,2,c
  4900   000A86  EF47  F005         	goto	u6461
  4901   000A8A  EF49  F005         	goto	u6460
  4902   000A8E                     u6461:
  4903   000A8E  EF24  F005         	goto	l6234
  4904   000A92                     u6460:
  4905   000A92                     
  4906                           ; BSR set to: 1
  4907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  4908   000A92  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4909   000A96  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4910   000A9A  CFDE FFF6          	movff	postinc2,tblptrl
  4911   000A9E  CFDD FFF7          	movff	postdec2,tblptrh
  4912   000AA2                     	if	0	;tblptru may be non-zero
  4913   000AA2                     	endif
  4914   000AA2                     	if	0	;tblptru may be non-zero
  4915   000AA2                     	endif
  4916   000AA2  0008               	tblrd		*
  4917   000AA4  50F5               	movf	tablat,w,c
  4918   000AA6  0A2A               	xorlw	42
  4919   000AA8  A4D8               	btfss	status,2,c
  4920   000AAA  EF59  F005         	goto	u6471
  4921   000AAE  EF5B  F005         	goto	u6470
  4922   000AB2                     u6471:
  4923   000AB2  EF85  F005         	goto	l6246
  4924   000AB6                     u6470:
  4925   000AB6                     
  4926                           ; BSR set to: 1
  4927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  4928   000AB6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4929   000ABA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4930   000ABE  2ADE               	incf	postinc2,f,c
  4931   000AC0  0E00               	movlw	0
  4932   000AC2  22DD               	addwfc	postdec2,f,c
  4933                           
  4934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4935   000AC4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4936   000AC8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4937   000ACC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4938   000AD0  0E02               	movlw	2
  4939   000AD2  26DE               	addwf	postinc2,f,c
  4940   000AD4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4941   000AD8  0E00               	movlw	0
  4942   000ADA  22DD               	addwfc	postdec2,f,c
  4943   000ADC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4944   000AE0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4945   000AE4  CFDE F0CE          	movff	postinc2,_width
  4946   000AE8  CFDD F0CF          	movff	postdec2,_width+1
  4947   000AEC                     
  4948                           ; BSR set to: 1
  4949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  4950   000AEC  0100               	movlb	0	; () banked
  4951   000AEE  BFCF               	btfsc	(_width+1)& (0+255),7,b
  4952   000AF0  EF7E  F005         	goto	u6480
  4953   000AF4  EF7C  F005         	goto	u6481
  4954   000AF8                     u6481:
  4955   000AF8  EFB9  F005         	goto	l6254
  4956   000AFC                     u6480:
  4957   000AFC                     
  4958                           ; BSR set to: 0
  4959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  4960   000AFC  81D4               	bsf	_flags& (0+255),0,b
  4961                           
  4962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  4963   000AFE  6DCE               	negf	_width& (0+255),b
  4964   000B00  1FCF               	comf	(_width+1)& (0+255),f,b
  4965   000B02  B0D8               	btfsc	status,0,c
  4966   000B04  2BCF               	incf	(_width+1)& (0+255),f,b
  4967   000B06  EFB9  F005         	goto	l6254
  4968   000B0A                     l6246:
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  4972   000B0A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4973   000B0E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4974   000B12  CFDE F07E          	movff	postinc2,atoi@s
  4975   000B16  CFDD F07F          	movff	postdec2,atoi@s+1
  4976   000B1A  ECB8  F015         	call	_atoi	;wreg free
  4977   000B1E  C07E  F0CE         	movff	?_atoi,_width
  4978   000B22  C07F  F0CF         	movff	?_atoi+1,_width+1
  4979                           
  4980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4981   000B26  EF9C  F005         	goto	l6252
  4982   000B2A                     l6248:
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  4986   000B2A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4987   000B2E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4988   000B32  2ADE               	incf	postinc2,f,c
  4989   000B34  0E00               	movlw	0
  4990   000B36  22DD               	addwfc	postdec2,f,c
  4991   000B38                     l6252:
  4992   000B38  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4993   000B3C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4994   000B40  CFDE FFF6          	movff	postinc2,tblptrl
  4995   000B44  CFDD FFF7          	movff	postdec2,tblptrh
  4996   000B48                     	if	0	;tblptru may be non-zero
  4997   000B48                     	endif
  4998   000B48                     	if	0	;tblptru may be non-zero
  4999   000B48                     	endif
  5000   000B48  0008               	tblrd		*
  5001   000B4A  CFF5 F0BE          	movff	tablat,??_vfpfcnvrt
  5002   000B4E  0ED0               	movlw	208
  5003   000B50  0100               	movlb	0	; () banked
  5004   000B52  25BE               	addwf	??_vfpfcnvrt& (0+255),w,b
  5005   000B54  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5006   000B56  6BC0               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  5007   000B58  0EFF               	movlw	255
  5008   000B5A  23C0               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  5009   000B5C  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  5010   000B5E  E109               	bnz	u6490
  5011   000B60  0E0A               	movlw	10
  5012   000B62  5DBF               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  5013   000B64  A0D8               	btfss	status,0,c
  5014   000B66  EFB7  F005         	goto	u6491
  5015   000B6A  EFB9  F005         	goto	u6490
  5016   000B6E                     u6491:
  5017   000B6E  EF95  F005         	goto	l6248
  5018   000B72                     u6490:
  5019   000B72                     l6254:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  5023   000B72  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5024   000B76  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5025   000B7A  CFDE FFF6          	movff	postinc2,tblptrl
  5026   000B7E  CFDD FFF7          	movff	postdec2,tblptrh
  5027   000B82                     	if	0	;tblptru may be non-zero
  5028   000B82                     	endif
  5029   000B82                     	if	0	;tblptru may be non-zero
  5030   000B82                     	endif
  5031   000B82  0008               	tblrd		*
  5032   000B84  50F5               	movf	tablat,w,c
  5033   000B86  0A63               	xorlw	99
  5034   000B88  A4D8               	btfss	status,2,c
  5035   000B8A  EFC9  F005         	goto	u6501
  5036   000B8E  EFCB  F005         	goto	u6500
  5037   000B92                     u6501:
  5038   000B92  EFEF  F005         	goto	l6262
  5039   000B96                     u6500:
  5040   000B96                     
  5041                           ; BSR set to: 0
  5042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  5043   000B96  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5044   000B9A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5045   000B9E  2ADE               	incf	postinc2,f,c
  5046   000BA0  0E00               	movlw	0
  5047   000BA2  22DD               	addwfc	postdec2,f,c
  5048                           
  5049                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5050   000BA4  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5051   000BA8  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5052   000BAC  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5053   000BB0  0E02               	movlw	2
  5054   000BB2  26DE               	addwf	postinc2,f,c
  5055   000BB4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5056   000BB8  0E00               	movlw	0
  5057   000BBA  22DD               	addwfc	postdec2,f,c
  5058   000BBC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5059   000BC0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5060   000BC4  50DF               	movf	indf2,w,c
  5061   000BC6  0101               	movlb	1	; () banked
  5062   000BC8  6F8F               	movwf	vfpfcnvrt@c& (0+255),b
  5063   000BCA                     
  5064                           ; BSR set to: 1
  5065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  5066   000BCA  C0B8  F083         	movff	vfpfcnvrt@fp,ctoa@fp
  5067   000BCE  C0B9  F084         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5068   000BD2  C18F  F085         	movff	vfpfcnvrt@c,ctoa@c
  5069   000BD6  ECC2  F01A         	call	_ctoa	;wreg free
  5070   000BDA  EF80  F007         	goto	l1468
  5071   000BDE                     l6262:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  5075   000BDE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5076   000BE2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5077   000BE6  CFDE F19C          	movff	postinc2,vfpfcnvrt@cp
  5078   000BEA  CFDD F19D          	movff	postdec2,vfpfcnvrt@cp+1
  5079   000BEE                     
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5082   000BEE  C19C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5083   000BF2  C19D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5084   000BF6                     	if	0	;tblptru may be non-zero
  5085   000BF6                     	endif
  5086   000BF6                     	if	0	;tblptru may be non-zero
  5087   000BF6                     	endif
  5088   000BF6  0008               	tblrd		*
  5089   000BF8  50F5               	movf	tablat,w,c
  5090   000BFA  0A64               	xorlw	100
  5091   000BFC  B4D8               	btfsc	status,2,c
  5092   000BFE  EF03  F006         	goto	u6511
  5093   000C02  EF05  F006         	goto	u6510
  5094   000C06                     u6511:
  5095   000C06  EF13  F006         	goto	l6268
  5096   000C0A                     u6510:
  5097   000C0A                     
  5098                           ; BSR set to: 0
  5099   000C0A  C19C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5100   000C0E  C19D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5101   000C12                     	if	0	;tblptru may be non-zero
  5102   000C12                     	endif
  5103   000C12                     	if	0	;tblptru may be non-zero
  5104   000C12                     	endif
  5105   000C12  0008               	tblrd		*
  5106   000C14  50F5               	movf	tablat,w,c
  5107   000C16  0A69               	xorlw	105
  5108   000C18  A4D8               	btfss	status,2,c
  5109   000C1A  EF11  F006         	goto	u6521
  5110   000C1E  EF13  F006         	goto	u6520
  5111   000C22                     u6521:
  5112   000C22  EF5A  F006         	goto	l6274
  5113   000C26                     u6520:
  5114   000C26                     l6268:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5118   000C26  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5119   000C2A  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5120   000C2E  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5121   000C32  0E02               	movlw	2
  5122   000C34  26DE               	addwf	postinc2,f,c
  5123   000C36  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5124   000C3A  0E00               	movlw	0
  5125   000C3C  22DD               	addwfc	postdec2,f,c
  5126   000C3E  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5127   000C42  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5128   000C46  CFDE F194          	movff	postinc2,vfpfcnvrt@convarg
  5129   000C4A  CFDD F195          	movff	postdec2,vfpfcnvrt@convarg+1
  5130   000C4E  0101               	movlb	1	; () banked
  5131   000C50  0E00               	movlw	0
  5132   000C52  BF95               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  5133   000C54  0EFF               	movlw	-1
  5134   000C56  6F96               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  5135   000C58  6F97               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  5136   000C5A  6F98               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  5137   000C5C  6F99               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  5138   000C5E  6F9A               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  5139   000C60  6F9B               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  5140                           
  5141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  5142   000C62  0E01               	movlw	1
  5143   000C64  259C               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5144   000C66  0100               	movlb	0	; () banked
  5145   000C68  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  5146   000C6A  0E00               	movlw	0
  5147   000C6C  0101               	movlb	1	; () banked
  5148   000C6E  219D               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5149   000C70  0100               	movlb	0	; () banked
  5150   000C72  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5151   000C74  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5152   000C78  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5153   000C7C  C0BE  FFDE         	movff	??_vfpfcnvrt,postinc2
  5154   000C80  C0BF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5155   000C84                     
  5156                           ; BSR set to: 0
  5157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  5158   000C84  C0B8  F095         	movff	vfpfcnvrt@fp,dtoa@fp
  5159   000C88  C0B9  F096         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5160   000C8C  C194  F097         	movff	vfpfcnvrt@convarg,dtoa@d
  5161   000C90  C195  F098         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5162   000C94  C196  F099         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  5163   000C98  C197  F09A         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  5164   000C9C  C198  F09B         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  5165   000CA0  C199  F09C         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  5166   000CA4  C19A  F09D         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  5167   000CA8  C19B  F09E         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  5168   000CAC  EC07  F00A         	call	_dtoa	;wreg free
  5169   000CB0  EF80  F007         	goto	l1468
  5170   000CB4                     l6274:
  5171                           
  5172                           ; BSR set to: 0
  5173   000CB4  C19C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5174   000CB8  C19D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5175   000CBC                     	if	0	;tblptru may be non-zero
  5176   000CBC                     	endif
  5177   000CBC                     	if	0	;tblptru may be non-zero
  5178   000CBC                     	endif
  5179   000CBC  0008               	tblrd		*
  5180   000CBE  50F5               	movf	tablat,w,c
  5181   000CC0  0A78               	xorlw	120
  5182   000CC2  B4D8               	btfsc	status,2,c
  5183   000CC4  EF66  F006         	goto	u6531
  5184   000CC8  EF68  F006         	goto	u6530
  5185   000CCC                     u6531:
  5186   000CCC  EF76  F006         	goto	l6278
  5187   000CD0                     u6530:
  5188   000CD0                     
  5189                           ; BSR set to: 0
  5190   000CD0  C19C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5191   000CD4  C19D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5192   000CD8                     	if	0	;tblptru may be non-zero
  5193   000CD8                     	endif
  5194   000CD8                     	if	0	;tblptru may be non-zero
  5195   000CD8                     	endif
  5196   000CD8  0008               	tblrd		*
  5197   000CDA  50F5               	movf	tablat,w,c
  5198   000CDC  0A75               	xorlw	117
  5199   000CDE  A4D8               	btfss	status,2,c
  5200   000CE0  EF74  F006         	goto	u6541
  5201   000CE4  EF76  F006         	goto	u6540
  5202   000CE8                     u6541:
  5203   000CE8  EFF2  F006         	goto	l6292
  5204   000CEC                     u6540:
  5205   000CEC                     l6278:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  5209   000CEC  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5210   000CF0  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5211   000CF4  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5212   000CF8  0E02               	movlw	2
  5213   000CFA  26DE               	addwf	postinc2,f,c
  5214   000CFC  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5215   000D00  0E00               	movlw	0
  5216   000D02  22DD               	addwfc	postdec2,f,c
  5217   000D04  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5218   000D08  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5219   000D0C  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  5220   000D10  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  5221   000D14  C0C0  F194         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  5222   000D18  C0C1  F195         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  5223   000D1C  0101               	movlb	1	; () banked
  5224   000D1E  6B96               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  5225   000D20  6B97               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  5226   000D22  6B98               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  5227   000D24  6B99               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  5228   000D26  6B9A               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  5229   000D28  6B9B               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  5230                           
  5231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  5232   000D2A  0E01               	movlw	1
  5233   000D2C  259C               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5234   000D2E  0100               	movlb	0	; () banked
  5235   000D30  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  5236   000D32  0E00               	movlw	0
  5237   000D34  0101               	movlb	1	; () banked
  5238   000D36  219D               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5239   000D38  0100               	movlb	0	; () banked
  5240   000D3A  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5241   000D3C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5242   000D40  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5243   000D44  C0BE  FFDE         	movff	??_vfpfcnvrt,postinc2
  5244   000D48  C0BF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5245                           
  5246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  5247   000D4C  EFD8  F006         	goto	l6290
  5248   000D50                     l6280:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  5252   000D50  C0B8  F095         	movff	vfpfcnvrt@fp,utoa@fp
  5253   000D54  C0B9  F096         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  5254   000D58  C194  F097         	movff	vfpfcnvrt@convarg,utoa@d
  5255   000D5C  C195  F098         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  5256   000D60  C196  F099         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  5257   000D64  C197  F09A         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  5258   000D68  C198  F09B         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  5259   000D6C  C199  F09C         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  5260   000D70  C19A  F09D         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  5261   000D74  C19B  F09E         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  5262   000D78  ECC0  F00C         	call	_utoa	;wreg free
  5263   000D7C  EF80  F007         	goto	l1468
  5264   000D80                     l6284:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  5268   000D80  C0B8  F095         	movff	vfpfcnvrt@fp,xtoa@fp
  5269   000D84  C0B9  F096         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5270   000D88  C194  F097         	movff	vfpfcnvrt@convarg,xtoa@d
  5271   000D8C  C195  F098         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  5272   000D90  C196  F099         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  5273   000D94  C197  F09A         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  5274   000D98  C198  F09B         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  5275   000D9C  C199  F09C         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  5276   000DA0  C19A  F09D         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  5277   000DA4  C19B  F09E         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  5278   000DA8  ECBD  F00E         	call	_xtoa	;wreg free
  5279   000DAC  EF80  F007         	goto	l1468
  5280   000DB0                     l6290:
  5281                           
  5282                           ; BSR set to: 0
  5283   000DB0  C19C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5284   000DB4  C19D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5285   000DB8                     	if	0	;tblptru may be non-zero
  5286   000DB8                     	endif
  5287   000DB8                     	if	0	;tblptru may be non-zero
  5288   000DB8                     	endif
  5289   000DB8  0008               	tblrd		*
  5290   000DBA  50F5               	movf	tablat,w,c
  5291   000DBC  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  5292   000DBE  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  5293                           
  5294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5295                           ; Switch size 1, requested type "simple"
  5296                           ; Number of cases is 1, Range of values is 0 to 0
  5297                           ; switch strategies available:
  5298                           ; Name         Instructions Cycles
  5299                           ; simple_byte            4     3 (average)
  5300                           ;	Chosen strategy is simple_byte
  5301   000DC0  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5302   000DC2  0A00               	xorlw	0	; case 0
  5303   000DC4  B4D8               	btfsc	status,2,c
  5304   000DC6  EFE7  F006         	goto	l6848
  5305   000DCA  EFF2  F006         	goto	l6292
  5306   000DCE                     l6848:
  5307                           
  5308                           ; BSR set to: 0
  5309                           ; Switch size 1, requested type "simple"
  5310                           ; Number of cases is 2, Range of values is 117 to 120
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte            7     4 (average)
  5314                           ;	Chosen strategy is simple_byte
  5315   000DCE  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  5316   000DD0  0A75               	xorlw	117	; case 117
  5317   000DD2  B4D8               	btfsc	status,2,c
  5318   000DD4  EFA8  F006         	goto	l6280
  5319   000DD8  0A0D               	xorlw	13	; case 120
  5320   000DDA  B4D8               	btfsc	status,2,c
  5321   000DDC  EFC0  F006         	goto	l6284
  5322   000DE0  EFF2  F006         	goto	l6292
  5323   000DE4                     l6292:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  5327   000DE4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5328   000DE8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5329   000DEC  CFDE FFF6          	movff	postinc2,tblptrl
  5330   000DF0  CFDD FFF7          	movff	postdec2,tblptrh
  5331   000DF4                     	if	0	;tblptru may be non-zero
  5332   000DF4                     	endif
  5333   000DF4                     	if	0	;tblptru may be non-zero
  5334   000DF4                     	endif
  5335   000DF4  0008               	tblrd		*
  5336   000DF6  50F5               	movf	tablat,w,c
  5337   000DF8  0A73               	xorlw	115
  5338   000DFA  B4D8               	btfsc	status,2,c
  5339   000DFC  EF02  F007         	goto	u6551
  5340   000E00  EF04  F007         	goto	u6550
  5341   000E04                     u6551:
  5342   000E04  EF20  F007         	goto	l6296
  5343   000E08                     u6550:
  5344   000E08                     
  5345                           ; BSR set to: 0
  5346   000E08  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5347   000E0C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5348   000E10  CFDE F078          	movff	postinc2,strncmp@_l
  5349   000E14  CFDD F079          	movff	postdec2,strncmp@_l+1
  5350   000E18  0EF8               	movlw	low STR_60
  5351   000E1A  6F7A               	movwf	strncmp@_r& (0+255),b
  5352   000E1C  0E7F               	movlw	high STR_60
  5353   000E1E  6F7B               	movwf	(strncmp@_r+1)& (0+255),b
  5354   000E20  0E00               	movlw	0
  5355   000E22  6F7D               	movwf	(strncmp@n+1)& (0+255),b
  5356   000E24  0E03               	movlw	3
  5357   000E26  6F7C               	movwf	strncmp@n& (0+255),b
  5358   000E28  EC12  F019         	call	_strncmp	;wreg free
  5359   000E2C  0100               	movlb	0	; () banked
  5360   000E2E  5178               	movf	?_strncmp& (0+255),w,b
  5361   000E30  1179               	iorwf	(?_strncmp+1)& (0+255),w,b
  5362   000E32  A4D8               	btfss	status,2,c
  5363   000E34  EF1E  F007         	goto	u6561
  5364   000E38  EF20  F007         	goto	u6560
  5365   000E3C                     u6561:
  5366   000E3C  EF62  F007         	goto	l6308
  5367   000E40                     u6560:
  5368   000E40                     l6296:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  5372   000E40  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5373   000E44  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5374   000E48  CFDE FFF6          	movff	postinc2,tblptrl
  5375   000E4C  CFDD FFF7          	movff	postdec2,tblptrh
  5376   000E50                     	if	0	;tblptru may be non-zero
  5377   000E50                     	endif
  5378   000E50                     	if	0	;tblptru may be non-zero
  5379   000E50                     	endif
  5380   000E50  0008               	tblrd		*
  5381   000E52  50F5               	movf	tablat,w,c
  5382   000E54  0A73               	xorlw	115
  5383   000E56  B4D8               	btfsc	status,2,c
  5384   000E58  EF30  F007         	goto	u6571
  5385   000E5C  EF32  F007         	goto	u6570
  5386   000E60                     u6571:
  5387   000E60  EF39  F007         	goto	l6300
  5388   000E64                     u6570:
  5389   000E64                     
  5390                           ; BSR set to: 0
  5391   000E64  0E00               	movlw	0
  5392   000E66  0101               	movlb	1	; () banked
  5393   000E68  6F93               	movwf	(_vfpfcnvrt$2122+1)& (0+255),b
  5394   000E6A  0E03               	movlw	3
  5395   000E6C  6F92               	movwf	_vfpfcnvrt$2122& (0+255),b
  5396   000E6E  EF3E  F007         	goto	l6302
  5397   000E72                     l6300:
  5398                           
  5399                           ; BSR set to: 0
  5400   000E72  0E00               	movlw	0
  5401   000E74  0101               	movlb	1	; () banked
  5402   000E76  6F93               	movwf	(_vfpfcnvrt$2122+1)& (0+255),b
  5403   000E78  0E01               	movlw	1
  5404   000E7A  6F92               	movwf	_vfpfcnvrt$2122& (0+255),b
  5405   000E7C                     l6302:
  5406                           
  5407                           ; BSR set to: 1
  5408   000E7C  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5409   000E80  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5410   000E84  5192               	movf	_vfpfcnvrt$2122& (0+255),w,b
  5411   000E86  26DE               	addwf	postinc2,f,c
  5412   000E88  5193               	movf	(_vfpfcnvrt$2122+1)& (0+255),w,b
  5413   000E8A  22DD               	addwfc	postdec2,f,c
  5414   000E8C                     
  5415                           ; BSR set to: 1
  5416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  5417   000E8C  C0B8  F083         	movff	vfpfcnvrt@fp,stoa@fp
  5418   000E90  C0B9  F084         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  5419   000E94  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5420   000E98  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5421   000E9C  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  5422   000EA0  0E02               	movlw	2
  5423   000EA2  26DE               	addwf	postinc2,f,c
  5424   000EA4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  5425   000EA8  0E00               	movlw	0
  5426   000EAA  22DD               	addwfc	postdec2,f,c
  5427   000EAC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5428   000EB0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5429   000EB4  CFDE F085          	movff	postinc2,stoa@s
  5430   000EB8  CFDD F086          	movff	postdec2,stoa@s+1
  5431   000EBC  EC16  F012         	call	_stoa	;wreg free
  5432   000EC0  EF80  F007         	goto	l1468
  5433   000EC4                     l6308:
  5434                           
  5435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  5436   000EC4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5437   000EC8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5438   000ECC  2ADE               	incf	postinc2,f,c
  5439   000ECE  0E00               	movlw	0
  5440   000ED0  22DD               	addwfc	postdec2,f,c
  5441   000ED2  EF80  F007         	goto	l1468
  5442   000ED6                     l6312:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  5445   000ED6  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5446   000EDA  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5447   000EDE  CFDE FFF6          	movff	postinc2,tblptrl
  5448   000EE2  CFDD FFF7          	movff	postdec2,tblptrh
  5449   000EE6                     	if	0	;tblptru may be non-zero
  5450   000EE6                     	endif
  5451   000EE6                     	if	0	;tblptru may be non-zero
  5452   000EE6                     	endif
  5453   000EE6  0008               	tblrd		*
  5454   000EE8  50F5               	movf	tablat,w,c
  5455   000EEA  0100               	movlb	0	; () banked
  5456   000EEC  6F7A               	movwf	fputc@c& (0+255),b
  5457   000EEE  6B7B               	clrf	(fputc@c+1)& (0+255),b
  5458   000EF0  C0B8  F07C         	movff	vfpfcnvrt@fp,fputc@fp
  5459   000EF4  C0B9  F07D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5460   000EF8  EC05  F01D         	call	_fputc	;wreg free
  5461   000EFC  EF62  F007         	goto	l6308
  5462   000F00                     l1468:
  5463   000F00  0012               	return		;funcret
  5464   000F02                     __end_of_vfpfcnvrt:
  5465                           	callstack 0
  5466                           
  5467 ;; *************** function _xtoa *****************
  5468 ;; Defined at:
  5469 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  5472 ;;		 -> NULL(0), 
  5473 ;;  d               8   55[BANK0 ] unsigned long long 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  n               8   77[BANK0 ] unsigned long long 
  5476 ;;  i               2   85[BANK0 ] int 
  5477 ;;  w               2   75[BANK0 ] int 
  5478 ;;  p               2   73[BANK0 ] int 
  5479 ;;  c               1   87[BANK0 ] unsigned char 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5489 ;;      Params:         0      10       0       0       0       0       0
  5490 ;;      Locals:         0      17       0       0       0       0       0
  5491 ;;      Temps:          0       8       0       0       0       0       0
  5492 ;;      Totals:         0      35       0       0       0       0       0
  5493 ;;Total ram usage:       35 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 16
  5496 ;; This function calls:
  5497 ;;		_pad
  5498 ;; This function is called by:
  5499 ;;		_vfpfcnvrt
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text5
  5504   001D7A                     __ptext5:
  5505                           	callstack 0
  5506   001D7A                     _xtoa:
  5507                           	callstack 10
  5508   001D7A                     
  5509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  5510   001D7A  0100               	movlb	0	; () banked
  5511   001D7C  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  5512   001D7E  EFC3  F00E         	goto	u6271
  5513   001D82  EFC5  F00E         	goto	u6270
  5514   001D86                     u6271:
  5515   001D86  EFC6  F00E         	goto	l6122
  5516   001D8A                     u6270:
  5517   001D8A                     
  5518                           ; BSR set to: 0
  5519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  5520   001D8A  93D4               	bcf	_flags& (0+255),1,b
  5521   001D8C                     l6122:
  5522                           
  5523                           ; BSR set to: 0
  5524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  5525   001D8C  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  5526   001D8E  EFD3  F00E         	goto	u6280
  5527   001D92  51D1               	movf	(_prec+1)& (0+255),w,b
  5528   001D94  E106               	bnz	u6281
  5529   001D96  05D0               	decf	_prec& (0+255),w,b
  5530   001D98  B0D8               	btfsc	status,0,c
  5531   001D9A  EFD1  F00E         	goto	u6281
  5532   001D9E  EFD3  F00E         	goto	u6280
  5533   001DA2                     u6281:
  5534   001DA2  EFD9  F00E         	goto	l1434
  5535   001DA6                     u6280:
  5536   001DA6                     
  5537                           ; BSR set to: 0
  5538   001DA6  0E00               	movlw	0
  5539   001DA8  6FAA               	movwf	(xtoa@p+1)& (0+255),b
  5540   001DAA  0E01               	movlw	1
  5541   001DAC  6FA9               	movwf	xtoa@p& (0+255),b
  5542   001DAE  EFDD  F00E         	goto	l1436
  5543   001DB2                     l1434:
  5544                           
  5545                           ; BSR set to: 0
  5546   001DB2  C0D0  F0A9         	movff	_prec,xtoa@p
  5547   001DB6  C0D1  F0AA         	movff	_prec+1,xtoa@p+1
  5548   001DBA                     l1436:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  5552   001DBA  C0CE  F0AB         	movff	_width,xtoa@w
  5553   001DBE  C0CF  F0AC         	movff	_width+1,xtoa@w+1
  5554                           
  5555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  5556   001DC2  C097  F0AD         	movff	xtoa@d,xtoa@n
  5557   001DC6  C098  F0AE         	movff	xtoa@d+1,xtoa@n+1
  5558   001DCA  C099  F0AF         	movff	xtoa@d+2,xtoa@n+2
  5559   001DCE  C09A  F0B0         	movff	xtoa@d+3,xtoa@n+3
  5560   001DD2  C09B  F0B1         	movff	xtoa@d+4,xtoa@n+4
  5561   001DD6  C09C  F0B2         	movff	xtoa@d+5,xtoa@n+5
  5562   001DDA  C09D  F0B3         	movff	xtoa@d+6,xtoa@n+6
  5563   001DDE  C09E  F0B4         	movff	xtoa@d+7,xtoa@n+7
  5564   001DE2                     
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  5567   001DE2  0E00               	movlw	0
  5568   001DE4  6FB6               	movwf	(xtoa@i+1)& (0+255),b
  5569   001DE6  0E1F               	movlw	31
  5570   001DE8  6FB5               	movwf	xtoa@i& (0+255),b
  5571   001DEA                     
  5572                           ; BSR set to: 0
  5573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  5574   001DEA  0E00               	movlw	0
  5575   001DEC  0101               	movlb	1	; () banked
  5576   001DEE  6F4E               	movwf	(_dbuf+31)& (0+255),b
  5577                           
  5578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  5579   001DF0  EF55  F00F         	goto	l6150
  5580   001DF4                     l6130:
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  5584   001DF4  07B5               	decf	xtoa@i& (0+255),f,b
  5585   001DF6  A0D8               	btfss	status,0,c
  5586   001DF8  07B6               	decf	(xtoa@i+1)& (0+255),f,b
  5587   001DFA                     
  5588                           ; BSR set to: 0
  5589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  5590   001DFA  51AD               	movf	xtoa@n& (0+255),w,b
  5591   001DFC  0B0F               	andlw	15
  5592   001DFE  6FB7               	movwf	xtoa@c& (0+255),b
  5593   001E00                     
  5594                           ; BSR set to: 0
  5595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5596   001E00  0E09               	movlw	9
  5597   001E02  65B7               	cpfsgt	xtoa@c& (0+255),b
  5598   001E04  EF06  F00F         	goto	u6291
  5599   001E08  EF08  F00F         	goto	u6290
  5600   001E0C                     u6291:
  5601   001E0C  EF10  F00F         	goto	l6138
  5602   001E10                     u6290:
  5603   001E10                     
  5604                           ; BSR set to: 0
  5605   001E10  0E57               	movlw	87
  5606   001E12  25B7               	addwf	xtoa@c& (0+255),w,b
  5607   001E14  6FA7               	movwf	_xtoa$2101& (0+255),b
  5608   001E16  6BA8               	clrf	(_xtoa$2101+1)& (0+255),b
  5609   001E18  0E00               	movlw	0
  5610   001E1A  23A8               	addwfc	(_xtoa$2101+1)& (0+255),f,b
  5611   001E1C  EF16  F00F         	goto	l6140
  5612   001E20                     l6138:
  5613                           
  5614                           ; BSR set to: 0
  5615   001E20  0E30               	movlw	48
  5616   001E22  25B7               	addwf	xtoa@c& (0+255),w,b
  5617   001E24  6FA7               	movwf	_xtoa$2101& (0+255),b
  5618   001E26  6BA8               	clrf	(_xtoa$2101+1)& (0+255),b
  5619   001E28  0E00               	movlw	0
  5620   001E2A  23A8               	addwfc	(_xtoa$2101+1)& (0+255),f,b
  5621   001E2C                     l6140:
  5622                           
  5623                           ; BSR set to: 0
  5624   001E2C  C0A7  F0B7         	movff	_xtoa$2101,xtoa@c
  5625   001E30                     
  5626                           ; BSR set to: 0
  5627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  5628   001E30  0E2F               	movlw	low _dbuf
  5629   001E32  25B5               	addwf	xtoa@i& (0+255),w,b
  5630   001E34  6ED9               	movwf	fsr2l,c
  5631   001E36  0E01               	movlw	high _dbuf
  5632   001E38  21B6               	addwfc	(xtoa@i+1)& (0+255),w,b
  5633   001E3A  6EDA               	movwf	fsr2h,c
  5634   001E3C  C0B7  FFDF         	movff	xtoa@c,indf2
  5635   001E40                     
  5636                           ; BSR set to: 0
  5637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  5638   001E40  07A9               	decf	xtoa@p& (0+255),f,b
  5639   001E42  A0D8               	btfss	status,0,c
  5640   001E44  07AA               	decf	(xtoa@p+1)& (0+255),f,b
  5641   001E46                     
  5642                           ; BSR set to: 0
  5643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  5644   001E46  07AB               	decf	xtoa@w& (0+255),f,b
  5645   001E48  A0D8               	btfss	status,0,c
  5646   001E4A  07AC               	decf	(xtoa@w+1)& (0+255),f,b
  5647   001E4C                     
  5648                           ; BSR set to: 0
  5649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  5650   001E4C  C0AD  F09F         	movff	xtoa@n,??_xtoa
  5651   001E50  C0AE  F0A0         	movff	xtoa@n+1,??_xtoa+1
  5652   001E54  C0AF  F0A1         	movff	xtoa@n+2,??_xtoa+2
  5653   001E58  C0B0  F0A2         	movff	xtoa@n+3,??_xtoa+3
  5654   001E5C  C0B1  F0A3         	movff	xtoa@n+4,??_xtoa+4
  5655   001E60  C0B2  F0A4         	movff	xtoa@n+5,??_xtoa+5
  5656   001E64  C0B3  F0A5         	movff	xtoa@n+6,??_xtoa+6
  5657   001E68  C0B4  F0A6         	movff	xtoa@n+7,??_xtoa+7
  5658   001E6C  0E05               	movlw	5
  5659   001E6E  EF42  F00F         	goto	u6300
  5660   001E72                     u6305:
  5661   001E72  90D8               	bcf	status,0,c
  5662   001E74  33A6               	rrcf	(??_xtoa+7)& (0+255),f,b
  5663   001E76  33A5               	rrcf	(??_xtoa+6)& (0+255),f,b
  5664   001E78  33A4               	rrcf	(??_xtoa+5)& (0+255),f,b
  5665   001E7A  33A3               	rrcf	(??_xtoa+4)& (0+255),f,b
  5666   001E7C  33A2               	rrcf	(??_xtoa+3)& (0+255),f,b
  5667   001E7E  33A1               	rrcf	(??_xtoa+2)& (0+255),f,b
  5668   001E80  33A0               	rrcf	(??_xtoa+1)& (0+255),f,b
  5669   001E82  339F               	rrcf	??_xtoa& (0+255),f,b
  5670   001E84                     u6300:
  5671   001E84  2EE8               	decfsz	wreg,f,c
  5672   001E86  EF39  F00F         	goto	u6305
  5673   001E8A  C09F  F0AD         	movff	??_xtoa,xtoa@n
  5674   001E8E  C0A0  F0AE         	movff	??_xtoa+1,xtoa@n+1
  5675   001E92  C0A1  F0AF         	movff	??_xtoa+2,xtoa@n+2
  5676   001E96  C0A2  F0B0         	movff	??_xtoa+3,xtoa@n+3
  5677   001E9A  C0A3  F0B1         	movff	??_xtoa+4,xtoa@n+4
  5678   001E9E  C0A4  F0B2         	movff	??_xtoa+5,xtoa@n+5
  5679   001EA2  C0A5  F0B3         	movff	??_xtoa+6,xtoa@n+6
  5680   001EA6  C0A6  F0B4         	movff	??_xtoa+7,xtoa@n+7
  5681   001EAA                     l6150:
  5682                           
  5683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  5684   001EAA  0100               	movlb	0	; () banked
  5685   001EAC  BFB6               	btfsc	(xtoa@i+1)& (0+255),7,b
  5686   001EAE  EF62  F00F         	goto	u6311
  5687   001EB2  51B6               	movf	(xtoa@i+1)& (0+255),w,b
  5688   001EB4  E109               	bnz	u6310
  5689   001EB6  0E02               	movlw	2
  5690   001EB8  5DB5               	subwf	xtoa@i& (0+255),w,b
  5691   001EBA  A0D8               	btfss	status,0,c
  5692   001EBC  EF62  F00F         	goto	u6311
  5693   001EC0  EF64  F00F         	goto	u6310
  5694   001EC4                     u6311:
  5695   001EC4  EF94  F00F         	goto	l6160
  5696   001EC8                     u6310:
  5697   001EC8                     
  5698                           ; BSR set to: 0
  5699   001EC8  51AD               	movf	xtoa@n& (0+255),w,b
  5700   001ECA  11AE               	iorwf	(xtoa@n+1)& (0+255),w,b
  5701   001ECC  11AF               	iorwf	(xtoa@n+2)& (0+255),w,b
  5702   001ECE  11B0               	iorwf	(xtoa@n+3)& (0+255),w,b
  5703   001ED0  11B1               	iorwf	(xtoa@n+4)& (0+255),w,b
  5704   001ED2  11B2               	iorwf	(xtoa@n+5)& (0+255),w,b
  5705   001ED4  11B3               	iorwf	(xtoa@n+6)& (0+255),w,b
  5706   001ED6  11B4               	iorwf	(xtoa@n+7)& (0+255),w,b
  5707   001ED8  A4D8               	btfss	status,2,c
  5708   001EDA  EF71  F00F         	goto	u6321
  5709   001EDE  EF73  F00F         	goto	u6320
  5710   001EE2                     u6321:
  5711   001EE2  EFFA  F00E         	goto	l6130
  5712   001EE6                     u6320:
  5713   001EE6                     
  5714                           ; BSR set to: 0
  5715   001EE6  BFAA               	btfsc	(xtoa@p+1)& (0+255),7,b
  5716   001EE8  EF80  F00F         	goto	u6330
  5717   001EEC  51AA               	movf	(xtoa@p+1)& (0+255),w,b
  5718   001EEE  E106               	bnz	u6331
  5719   001EF0  05A9               	decf	xtoa@p& (0+255),w,b
  5720   001EF2  B0D8               	btfsc	status,0,c
  5721   001EF4  EF7E  F00F         	goto	u6331
  5722   001EF8  EF80  F00F         	goto	u6330
  5723   001EFC                     u6331:
  5724   001EFC  EFFA  F00E         	goto	l6130
  5725   001F00                     u6330:
  5726   001F00                     
  5727                           ; BSR set to: 0
  5728   001F00  BFAC               	btfsc	(xtoa@w+1)& (0+255),7,b
  5729   001F02  EF8B  F00F         	goto	u6341
  5730   001F06  51AC               	movf	(xtoa@w+1)& (0+255),w,b
  5731   001F08  E108               	bnz	u6340
  5732   001F0A  05AB               	decf	xtoa@w& (0+255),w,b
  5733   001F0C  A0D8               	btfss	status,0,c
  5734   001F0E  EF8B  F00F         	goto	u6341
  5735   001F12  EF8D  F00F         	goto	u6340
  5736   001F16                     u6341:
  5737   001F16  EF94  F00F         	goto	l6160
  5738   001F1A                     u6340:
  5739   001F1A                     
  5740                           ; BSR set to: 0
  5741   001F1A  B3D4               	btfsc	_flags& (0+255),1,b
  5742   001F1C  EF92  F00F         	goto	u6351
  5743   001F20  EF94  F00F         	goto	u6350
  5744   001F24                     u6351:
  5745   001F24  EFFA  F00E         	goto	l6130
  5746   001F28                     u6350:
  5747   001F28                     l6160:
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  5751   001F28  C095  F08A         	movff	xtoa@fp,pad@fp
  5752   001F2C  C096  F08B         	movff	xtoa@fp+1,pad@fp+1
  5753   001F30  0E2F               	movlw	low _dbuf
  5754   001F32  25B5               	addwf	xtoa@i& (0+255),w,b
  5755   001F34  6F8C               	movwf	pad@buf& (0+255),b
  5756   001F36  0E01               	movlw	high _dbuf
  5757   001F38  21B6               	addwfc	(xtoa@i+1)& (0+255),w,b
  5758   001F3A  6F8D               	movwf	(pad@buf+1)& (0+255),b
  5759   001F3C  C0AB  F08E         	movff	xtoa@w,pad@p
  5760   001F40  C0AC  F08F         	movff	xtoa@w+1,pad@p+1
  5761   001F44  EC56  F01C         	call	_pad	;wreg free
  5762   001F48  0012               	return		;funcret
  5763   001F4A                     __end_of_xtoa:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function _utoa *****************
  5767 ;; Defined at:
  5768 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  5771 ;;		 -> NULL(0), 
  5772 ;;  d               8   55[BANK0 ] unsigned long long 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  n               8   75[BANK0 ] unsigned long long 
  5775 ;;  i               2   83[BANK0 ] int 
  5776 ;;  w               2   73[BANK0 ] int 
  5777 ;;  p               2   71[BANK0 ] int 
  5778 ;; Return value:  Size  Location     Type
  5779 ;;                  1    wreg      void 
  5780 ;; Registers used:
  5781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5782 ;; Tracked objects:
  5783 ;;		On entry : 0/0
  5784 ;;		On exit  : 0/0
  5785 ;;		Unchanged: 0/0
  5786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5787 ;;      Params:         0      10       0       0       0       0       0
  5788 ;;      Locals:         0      14       0       0       0       0       0
  5789 ;;      Temps:          0       8       0       0       0       0       0
  5790 ;;      Totals:         0      32       0       0       0       0       0
  5791 ;;Total ram usage:       32 bytes
  5792 ;; Hardware stack levels used: 1
  5793 ;; Hardware stack levels required when called: 16
  5794 ;; This function calls:
  5795 ;;		___lodiv
  5796 ;;		___lomod
  5797 ;;		_pad
  5798 ;; This function is called by:
  5799 ;;		_vfpfcnvrt
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text6
  5804   001980                     __ptext6:
  5805                           	callstack 0
  5806   001980                     _utoa:
  5807                           	callstack 10
  5808   001980                     
  5809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  5810   001980  0100               	movlb	0	; () banked
  5811   001982  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  5812   001984  EFC6  F00C         	goto	u6201
  5813   001988  EFC8  F00C         	goto	u6200
  5814   00198C                     u6201:
  5815   00198C  EFC9  F00C         	goto	l6086
  5816   001990                     u6200:
  5817   001990                     
  5818                           ; BSR set to: 0
  5819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  5820   001990  93D4               	bcf	_flags& (0+255),1,b
  5821   001992                     l6086:
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  5825   001992  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  5826   001994  EFD6  F00C         	goto	u6210
  5827   001998  51D1               	movf	(_prec+1)& (0+255),w,b
  5828   00199A  E106               	bnz	u6211
  5829   00199C  05D0               	decf	_prec& (0+255),w,b
  5830   00199E  B0D8               	btfsc	status,0,c
  5831   0019A0  EFD4  F00C         	goto	u6211
  5832   0019A4  EFD6  F00C         	goto	u6210
  5833   0019A8                     u6211:
  5834   0019A8  EFDC  F00C         	goto	l1419
  5835   0019AC                     u6210:
  5836   0019AC                     
  5837                           ; BSR set to: 0
  5838   0019AC  0E00               	movlw	0
  5839   0019AE  6FA8               	movwf	(utoa@p+1)& (0+255),b
  5840   0019B0  0E01               	movlw	1
  5841   0019B2  6FA7               	movwf	utoa@p& (0+255),b
  5842   0019B4  EFE0  F00C         	goto	l1421
  5843   0019B8                     l1419:
  5844                           
  5845                           ; BSR set to: 0
  5846   0019B8  C0D0  F0A7         	movff	_prec,utoa@p
  5847   0019BC  C0D1  F0A8         	movff	_prec+1,utoa@p+1
  5848   0019C0                     l1421:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  5852   0019C0  C0CE  F0A9         	movff	_width,utoa@w
  5853   0019C4  C0CF  F0AA         	movff	_width+1,utoa@w+1
  5854                           
  5855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  5856   0019C8  C097  F0AB         	movff	utoa@d,utoa@n
  5857   0019CC  C098  F0AC         	movff	utoa@d+1,utoa@n+1
  5858   0019D0  C099  F0AD         	movff	utoa@d+2,utoa@n+2
  5859   0019D4  C09A  F0AE         	movff	utoa@d+3,utoa@n+3
  5860   0019D8  C09B  F0AF         	movff	utoa@d+4,utoa@n+4
  5861   0019DC  C09C  F0B0         	movff	utoa@d+5,utoa@n+5
  5862   0019E0  C09D  F0B1         	movff	utoa@d+6,utoa@n+6
  5863   0019E4  C09E  F0B2         	movff	utoa@d+7,utoa@n+7
  5864   0019E8                     
  5865                           ; BSR set to: 0
  5866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  5867   0019E8  0E00               	movlw	0
  5868   0019EA  6FB4               	movwf	(utoa@i+1)& (0+255),b
  5869   0019EC  0E1F               	movlw	31
  5870   0019EE  6FB3               	movwf	utoa@i& (0+255),b
  5871   0019F0                     
  5872                           ; BSR set to: 0
  5873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  5874   0019F0  0E00               	movlw	0
  5875   0019F2  0101               	movlb	1	; () banked
  5876   0019F4  6F4E               	movwf	(_dbuf+31)& (0+255),b
  5877                           
  5878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5879   0019F6  EF74  F00D         	goto	l6104
  5880   0019FA                     l6094:
  5881                           
  5882                           ; BSR set to: 0
  5883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  5884   0019FA  07B3               	decf	utoa@i& (0+255),f,b
  5885   0019FC  A0D8               	btfss	status,0,c
  5886   0019FE  07B4               	decf	(utoa@i+1)& (0+255),f,b
  5887   001A00                     
  5888                           ; BSR set to: 0
  5889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  5890   001A00  0E2F               	movlw	low _dbuf
  5891   001A02  25B3               	addwf	utoa@i& (0+255),w,b
  5892   001A04  6ED9               	movwf	fsr2l,c
  5893   001A06  0E01               	movlw	high _dbuf
  5894   001A08  21B4               	addwfc	(utoa@i+1)& (0+255),w,b
  5895   001A0A  6EDA               	movwf	fsr2h,c
  5896   001A0C  C0AB  F078         	movff	utoa@n,___lomod@dividend
  5897   001A10  C0AC  F079         	movff	utoa@n+1,___lomod@dividend+1
  5898   001A14  C0AD  F07A         	movff	utoa@n+2,___lomod@dividend+2
  5899   001A18  C0AE  F07B         	movff	utoa@n+3,___lomod@dividend+3
  5900   001A1C  C0AF  F07C         	movff	utoa@n+4,___lomod@dividend+4
  5901   001A20  C0B0  F07D         	movff	utoa@n+5,___lomod@dividend+5
  5902   001A24  C0B1  F07E         	movff	utoa@n+6,___lomod@dividend+6
  5903   001A28  C0B2  F07F         	movff	utoa@n+7,___lomod@dividend+7
  5904   001A2C  0E0A               	movlw	10
  5905   001A2E  6F80               	movwf	___lomod@divisor& (0+255),b
  5906   001A30  0E00               	movlw	0
  5907   001A32  6F81               	movwf	(___lomod@divisor+1)& (0+255),b
  5908   001A34  0E00               	movlw	0
  5909   001A36  6F82               	movwf	(___lomod@divisor+2)& (0+255),b
  5910   001A38  0E00               	movlw	0
  5911   001A3A  6F83               	movwf	(___lomod@divisor+3)& (0+255),b
  5912   001A3C  0E00               	movlw	0
  5913   001A3E  6F84               	movwf	(___lomod@divisor+4)& (0+255),b
  5914   001A40  0E00               	movlw	0
  5915   001A42  6F85               	movwf	(___lomod@divisor+5)& (0+255),b
  5916   001A44  0E00               	movlw	0
  5917   001A46  6F86               	movwf	(___lomod@divisor+6)& (0+255),b
  5918   001A48  0E00               	movlw	0
  5919   001A4A  6F87               	movwf	(___lomod@divisor+7)& (0+255),b
  5920   001A4C  ECF1  F019         	call	___lomod	;wreg free
  5921   001A50  C078  F09F         	movff	?___lomod,??_utoa
  5922   001A54  C079  F0A0         	movff	?___lomod+1,??_utoa+1
  5923   001A58  C07A  F0A1         	movff	?___lomod+2,??_utoa+2
  5924   001A5C  C07B  F0A2         	movff	?___lomod+3,??_utoa+3
  5925   001A60  C07C  F0A3         	movff	?___lomod+4,??_utoa+4
  5926   001A64  C07D  F0A4         	movff	?___lomod+5,??_utoa+5
  5927   001A68  C07E  F0A5         	movff	?___lomod+6,??_utoa+6
  5928   001A6C  C07F  F0A6         	movff	?___lomod+7,??_utoa+7
  5929   001A70  0100               	movlb	0	; () banked
  5930   001A72  519F               	movf	??_utoa& (0+255),w,b
  5931   001A74  0F30               	addlw	48
  5932   001A76  6EDF               	movwf	indf2,c
  5933   001A78                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  5936   001A78  07A7               	decf	utoa@p& (0+255),f,b
  5937   001A7A  A0D8               	btfss	status,0,c
  5938   001A7C  07A8               	decf	(utoa@p+1)& (0+255),f,b
  5939   001A7E                     
  5940                           ; BSR set to: 0
  5941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  5942   001A7E  07A9               	decf	utoa@w& (0+255),f,b
  5943   001A80  A0D8               	btfss	status,0,c
  5944   001A82  07AA               	decf	(utoa@w+1)& (0+255),f,b
  5945   001A84                     
  5946                           ; BSR set to: 0
  5947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  5948   001A84  C0AB  F078         	movff	utoa@n,___lodiv@dividend
  5949   001A88  C0AC  F079         	movff	utoa@n+1,___lodiv@dividend+1
  5950   001A8C  C0AD  F07A         	movff	utoa@n+2,___lodiv@dividend+2
  5951   001A90  C0AE  F07B         	movff	utoa@n+3,___lodiv@dividend+3
  5952   001A94  C0AF  F07C         	movff	utoa@n+4,___lodiv@dividend+4
  5953   001A98  C0B0  F07D         	movff	utoa@n+5,___lodiv@dividend+5
  5954   001A9C  C0B1  F07E         	movff	utoa@n+6,___lodiv@dividend+6
  5955   001AA0  C0B2  F07F         	movff	utoa@n+7,___lodiv@dividend+7
  5956   001AA4  0E0A               	movlw	10
  5957   001AA6  6F80               	movwf	___lodiv@divisor& (0+255),b
  5958   001AA8  0E00               	movlw	0
  5959   001AAA  6F81               	movwf	(___lodiv@divisor+1)& (0+255),b
  5960   001AAC  0E00               	movlw	0
  5961   001AAE  6F82               	movwf	(___lodiv@divisor+2)& (0+255),b
  5962   001AB0  0E00               	movlw	0
  5963   001AB2  6F83               	movwf	(___lodiv@divisor+3)& (0+255),b
  5964   001AB4  0E00               	movlw	0
  5965   001AB6  6F84               	movwf	(___lodiv@divisor+4)& (0+255),b
  5966   001AB8  0E00               	movlw	0
  5967   001ABA  6F85               	movwf	(___lodiv@divisor+5)& (0+255),b
  5968   001ABC  0E00               	movlw	0
  5969   001ABE  6F86               	movwf	(___lodiv@divisor+6)& (0+255),b
  5970   001AC0  0E00               	movlw	0
  5971   001AC2  6F87               	movwf	(___lodiv@divisor+7)& (0+255),b
  5972   001AC4  EC21  F018         	call	___lodiv	;wreg free
  5973   001AC8  C078  F0AB         	movff	?___lodiv,utoa@n
  5974   001ACC  C079  F0AC         	movff	?___lodiv+1,utoa@n+1
  5975   001AD0  C07A  F0AD         	movff	?___lodiv+2,utoa@n+2
  5976   001AD4  C07B  F0AE         	movff	?___lodiv+3,utoa@n+3
  5977   001AD8  C07C  F0AF         	movff	?___lodiv+4,utoa@n+4
  5978   001ADC  C07D  F0B0         	movff	?___lodiv+5,utoa@n+5
  5979   001AE0  C07E  F0B1         	movff	?___lodiv+6,utoa@n+6
  5980   001AE4  C07F  F0B2         	movff	?___lodiv+7,utoa@n+7
  5981   001AE8                     l6104:
  5982                           
  5983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5984   001AE8  0100               	movlb	0	; () banked
  5985   001AEA  51B3               	movf	utoa@i& (0+255),w,b
  5986   001AEC  11B4               	iorwf	(utoa@i+1)& (0+255),w,b
  5987   001AEE  B4D8               	btfsc	status,2,c
  5988   001AF0  EF7C  F00D         	goto	u6221
  5989   001AF4  EF7E  F00D         	goto	u6220
  5990   001AF8                     u6221:
  5991   001AF8  EFAE  F00D         	goto	l6114
  5992   001AFC                     u6220:
  5993   001AFC                     
  5994                           ; BSR set to: 0
  5995   001AFC  51AB               	movf	utoa@n& (0+255),w,b
  5996   001AFE  11AC               	iorwf	(utoa@n+1)& (0+255),w,b
  5997   001B00  11AD               	iorwf	(utoa@n+2)& (0+255),w,b
  5998   001B02  11AE               	iorwf	(utoa@n+3)& (0+255),w,b
  5999   001B04  11AF               	iorwf	(utoa@n+4)& (0+255),w,b
  6000   001B06  11B0               	iorwf	(utoa@n+5)& (0+255),w,b
  6001   001B08  11B1               	iorwf	(utoa@n+6)& (0+255),w,b
  6002   001B0A  11B2               	iorwf	(utoa@n+7)& (0+255),w,b
  6003   001B0C  A4D8               	btfss	status,2,c
  6004   001B0E  EF8B  F00D         	goto	u6231
  6005   001B12  EF8D  F00D         	goto	u6230
  6006   001B16                     u6231:
  6007   001B16  EFFD  F00C         	goto	l6094
  6008   001B1A                     u6230:
  6009   001B1A                     
  6010                           ; BSR set to: 0
  6011   001B1A  BFA8               	btfsc	(utoa@p+1)& (0+255),7,b
  6012   001B1C  EF9A  F00D         	goto	u6240
  6013   001B20  51A8               	movf	(utoa@p+1)& (0+255),w,b
  6014   001B22  E106               	bnz	u6241
  6015   001B24  05A7               	decf	utoa@p& (0+255),w,b
  6016   001B26  B0D8               	btfsc	status,0,c
  6017   001B28  EF98  F00D         	goto	u6241
  6018   001B2C  EF9A  F00D         	goto	u6240
  6019   001B30                     u6241:
  6020   001B30  EFFD  F00C         	goto	l6094
  6021   001B34                     u6240:
  6022   001B34                     
  6023                           ; BSR set to: 0
  6024   001B34  BFAA               	btfsc	(utoa@w+1)& (0+255),7,b
  6025   001B36  EFA5  F00D         	goto	u6251
  6026   001B3A  51AA               	movf	(utoa@w+1)& (0+255),w,b
  6027   001B3C  E108               	bnz	u6250
  6028   001B3E  05A9               	decf	utoa@w& (0+255),w,b
  6029   001B40  A0D8               	btfss	status,0,c
  6030   001B42  EFA5  F00D         	goto	u6251
  6031   001B46  EFA7  F00D         	goto	u6250
  6032   001B4A                     u6251:
  6033   001B4A  EFAE  F00D         	goto	l6114
  6034   001B4E                     u6250:
  6035   001B4E                     
  6036                           ; BSR set to: 0
  6037   001B4E  B3D4               	btfsc	_flags& (0+255),1,b
  6038   001B50  EFAC  F00D         	goto	u6261
  6039   001B54  EFAE  F00D         	goto	u6260
  6040   001B58                     u6261:
  6041   001B58  EFFD  F00C         	goto	l6094
  6042   001B5C                     u6260:
  6043   001B5C                     l6114:
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6047   001B5C  C095  F08A         	movff	utoa@fp,pad@fp
  6048   001B60  C096  F08B         	movff	utoa@fp+1,pad@fp+1
  6049   001B64  0E2F               	movlw	low _dbuf
  6050   001B66  25B3               	addwf	utoa@i& (0+255),w,b
  6051   001B68  6F8C               	movwf	pad@buf& (0+255),b
  6052   001B6A  0E01               	movlw	high _dbuf
  6053   001B6C  21B4               	addwfc	(utoa@i+1)& (0+255),w,b
  6054   001B6E  6F8D               	movwf	(pad@buf+1)& (0+255),b
  6055   001B70  C0A9  F08E         	movff	utoa@w,pad@p
  6056   001B74  C0AA  F08F         	movff	utoa@w+1,pad@p+1
  6057   001B78  EC56  F01C         	call	_pad	;wreg free
  6058   001B7C  0012               	return		;funcret
  6059   001B7E                     __end_of_utoa:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function ___lomod *****************
  6063 ;; Defined at:
  6064 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  dividend        8   24[BANK0 ] unsigned long long 
  6067 ;;  divisor         8   32[BANK0 ] unsigned long long 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;  counter         1   40[BANK0 ] unsigned char 
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  8   24[BANK0 ] unsigned long long 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6079 ;;      Params:         0      16       0       0       0       0       0
  6080 ;;      Locals:         0       1       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0
  6082 ;;      Totals:         0      17       0       0       0       0       0
  6083 ;;Total ram usage:       17 bytes
  6084 ;; Hardware stack levels used: 1
  6085 ;; Hardware stack levels required when called: 11
  6086 ;; This function calls:
  6087 ;;		Nothing
  6088 ;; This function is called by:
  6089 ;;		_utoa
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093                           	psect	text7
  6094   0033E2                     __ptext7:
  6095                           	callstack 0
  6096   0033E2                     ___lomod:
  6097                           	callstack 14
  6098   0033E2  0100               	movlb	0	; () banked
  6099   0033E4  5180               	movf	___lomod@divisor& (0+255),w,b
  6100   0033E6  1181               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  6101   0033E8  1182               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  6102   0033EA  1183               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  6103   0033EC  1184               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  6104   0033EE  1185               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  6105   0033F0  1186               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  6106   0033F2  1187               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  6107   0033F4  B4D8               	btfsc	status,2,c
  6108   0033F6  EFFF  F019         	goto	u5801
  6109   0033FA  EF01  F01A         	goto	u5800
  6110   0033FE                     u5801:
  6111   0033FE  EF49  F01A         	goto	l1087
  6112   003402                     u5800:
  6113   003402                     
  6114                           ; BSR set to: 0
  6115   003402  0E01               	movlw	1
  6116   003404  6F88               	movwf	___lomod@counter& (0+255),b
  6117   003406  EF0F  F01A         	goto	l5898
  6118   00340A                     l5896:
  6119                           
  6120                           ; BSR set to: 0
  6121   00340A  90D8               	bcf	status,0,c
  6122   00340C  3780               	rlcf	___lomod@divisor& (0+255),f,b
  6123   00340E  3781               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  6124   003410  3782               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  6125   003412  3783               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  6126   003414  3784               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  6127   003416  3785               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  6128   003418  3786               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  6129   00341A  3787               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  6130   00341C  2B88               	incf	___lomod@counter& (0+255),f,b
  6131   00341E                     l5898:
  6132                           
  6133                           ; BSR set to: 0
  6134   00341E  AF87               	btfss	(___lomod@divisor+7)& (0+255),7,b
  6135   003420  EF14  F01A         	goto	u5811
  6136   003424  EF16  F01A         	goto	u5810
  6137   003428                     u5811:
  6138   003428  EF05  F01A         	goto	l5896
  6139   00342C                     u5810:
  6140   00342C                     l5900:
  6141                           
  6142                           ; BSR set to: 0
  6143   00342C  5180               	movf	___lomod@divisor& (0+255),w,b
  6144   00342E  5D78               	subwf	___lomod@dividend& (0+255),w,b
  6145   003430  5181               	movf	(___lomod@divisor+1)& (0+255),w,b
  6146   003432  5979               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  6147   003434  5182               	movf	(___lomod@divisor+2)& (0+255),w,b
  6148   003436  597A               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  6149   003438  5183               	movf	(___lomod@divisor+3)& (0+255),w,b
  6150   00343A  597B               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  6151   00343C  5184               	movf	(___lomod@divisor+4)& (0+255),w,b
  6152   00343E  597C               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  6153   003440  5185               	movf	(___lomod@divisor+5)& (0+255),w,b
  6154   003442  597D               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  6155   003444  5186               	movf	(___lomod@divisor+6)& (0+255),w,b
  6156   003446  597E               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  6157   003448  5187               	movf	(___lomod@divisor+7)& (0+255),w,b
  6158   00344A  597F               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  6159   00344C  A0D8               	btfss	status,0,c
  6160   00344E  EF2B  F01A         	goto	u5821
  6161   003452  EF2D  F01A         	goto	u5820
  6162   003456                     u5821:
  6163   003456  EF3D  F01A         	goto	l5904
  6164   00345A                     u5820:
  6165   00345A                     
  6166                           ; BSR set to: 0
  6167   00345A  5180               	movf	___lomod@divisor& (0+255),w,b
  6168   00345C  5F78               	subwf	___lomod@dividend& (0+255),f,b
  6169   00345E  5181               	movf	(___lomod@divisor+1)& (0+255),w,b
  6170   003460  5B79               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  6171   003462  5182               	movf	(___lomod@divisor+2)& (0+255),w,b
  6172   003464  5B7A               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  6173   003466  5183               	movf	(___lomod@divisor+3)& (0+255),w,b
  6174   003468  5B7B               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  6175   00346A  5184               	movf	(___lomod@divisor+4)& (0+255),w,b
  6176   00346C  5B7C               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  6177   00346E  5185               	movf	(___lomod@divisor+5)& (0+255),w,b
  6178   003470  5B7D               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  6179   003472  5186               	movf	(___lomod@divisor+6)& (0+255),w,b
  6180   003474  5B7E               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  6181   003476  5187               	movf	(___lomod@divisor+7)& (0+255),w,b
  6182   003478  5B7F               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  6183   00347A                     l5904:
  6184                           
  6185                           ; BSR set to: 0
  6186   00347A  90D8               	bcf	status,0,c
  6187   00347C  3387               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  6188   00347E  3386               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  6189   003480  3385               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  6190   003482  3384               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  6191   003484  3383               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  6192   003486  3382               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  6193   003488  3381               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  6194   00348A  3380               	rrcf	___lomod@divisor& (0+255),f,b
  6195   00348C                     
  6196                           ; BSR set to: 0
  6197   00348C  2F88               	decfsz	___lomod@counter& (0+255),f,b
  6198   00348E  EF16  F01A         	goto	l5900
  6199   003492                     l1087:
  6200                           
  6201                           ; BSR set to: 0
  6202   003492  C078  F078         	movff	___lomod@dividend,?___lomod
  6203   003496  C079  F079         	movff	___lomod@dividend+1,?___lomod+1
  6204   00349A  C07A  F07A         	movff	___lomod@dividend+2,?___lomod+2
  6205   00349E  C07B  F07B         	movff	___lomod@dividend+3,?___lomod+3
  6206   0034A2  C07C  F07C         	movff	___lomod@dividend+4,?___lomod+4
  6207   0034A6  C07D  F07D         	movff	___lomod@dividend+5,?___lomod+5
  6208   0034AA  C07E  F07E         	movff	___lomod@dividend+6,?___lomod+6
  6209   0034AE  C07F  F07F         	movff	___lomod@dividend+7,?___lomod+7
  6210   0034B2                     
  6211                           ; BSR set to: 0
  6212   0034B2  0012               	return		;funcret
  6213   0034B4                     __end_of___lomod:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function ___lodiv *****************
  6217 ;; Defined at:
  6218 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  dividend        8   24[BANK0 ] unsigned long long 
  6221 ;;  divisor         8   32[BANK0 ] unsigned long long 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;  quotient        8   40[BANK0 ] unsigned long long 
  6224 ;;  counter         1   48[BANK0 ] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  8   24[BANK0 ] unsigned long long 
  6227 ;; Registers used:
  6228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6234 ;;      Params:         0      16       0       0       0       0       0
  6235 ;;      Locals:         0       9       0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0       0       0
  6237 ;;      Totals:         0      25       0       0       0       0       0
  6238 ;;Total ram usage:       25 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; Hardware stack levels required when called: 11
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_utoa
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           	psect	text8
  6249   003042                     __ptext8:
  6250                           	callstack 0
  6251   003042                     ___lodiv:
  6252                           	callstack 14
  6253   003042  EE20  F088         	lfsr	2,___lodiv@quotient
  6254   003046  0E07               	movlw	7
  6255   003048                     u5761:
  6256   003048  6ADE               	clrf	postinc2,c
  6257   00304A  06E8               	decf	wreg,f,c
  6258   00304C  E2FD               	bc	u5761
  6259   00304E  0100               	movlb	0	; () banked
  6260   003050  5180               	movf	___lodiv@divisor& (0+255),w,b
  6261   003052  1181               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  6262   003054  1182               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  6263   003056  1183               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  6264   003058  1184               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  6265   00305A  1185               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  6266   00305C  1186               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  6267   00305E  1187               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  6268   003060  B4D8               	btfsc	status,2,c
  6269   003062  EF35  F018         	goto	u5771
  6270   003066  EF37  F018         	goto	u5770
  6271   00306A                     u5771:
  6272   00306A  EF89  F018         	goto	l1077
  6273   00306E                     u5770:
  6274   00306E                     
  6275                           ; BSR set to: 0
  6276   00306E  0E01               	movlw	1
  6277   003070  6F90               	movwf	___lodiv@counter& (0+255),b
  6278   003072  EF45  F018         	goto	l5878
  6279   003076                     l5876:
  6280                           
  6281                           ; BSR set to: 0
  6282   003076  90D8               	bcf	status,0,c
  6283   003078  3780               	rlcf	___lodiv@divisor& (0+255),f,b
  6284   00307A  3781               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  6285   00307C  3782               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  6286   00307E  3783               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  6287   003080  3784               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  6288   003082  3785               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  6289   003084  3786               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  6290   003086  3787               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  6291   003088  2B90               	incf	___lodiv@counter& (0+255),f,b
  6292   00308A                     l5878:
  6293                           
  6294                           ; BSR set to: 0
  6295   00308A  AF87               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  6296   00308C  EF4A  F018         	goto	u5781
  6297   003090  EF4C  F018         	goto	u5780
  6298   003094                     u5781:
  6299   003094  EF3B  F018         	goto	l5876
  6300   003098                     u5780:
  6301   003098                     l5880:
  6302                           
  6303                           ; BSR set to: 0
  6304   003098  90D8               	bcf	status,0,c
  6305   00309A  3788               	rlcf	___lodiv@quotient& (0+255),f,b
  6306   00309C  3789               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  6307   00309E  378A               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  6308   0030A0  378B               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  6309   0030A2  378C               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  6310   0030A4  378D               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  6311   0030A6  378E               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  6312   0030A8  378F               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  6313   0030AA                     
  6314                           ; BSR set to: 0
  6315   0030AA  5180               	movf	___lodiv@divisor& (0+255),w,b
  6316   0030AC  5D78               	subwf	___lodiv@dividend& (0+255),w,b
  6317   0030AE  5181               	movf	(___lodiv@divisor+1)& (0+255),w,b
  6318   0030B0  5979               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  6319   0030B2  5182               	movf	(___lodiv@divisor+2)& (0+255),w,b
  6320   0030B4  597A               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  6321   0030B6  5183               	movf	(___lodiv@divisor+3)& (0+255),w,b
  6322   0030B8  597B               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  6323   0030BA  5184               	movf	(___lodiv@divisor+4)& (0+255),w,b
  6324   0030BC  597C               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  6325   0030BE  5185               	movf	(___lodiv@divisor+5)& (0+255),w,b
  6326   0030C0  597D               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  6327   0030C2  5186               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6328   0030C4  597E               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  6329   0030C6  5187               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6330   0030C8  597F               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  6331   0030CA  A0D8               	btfss	status,0,c
  6332   0030CC  EF6A  F018         	goto	u5791
  6333   0030D0  EF6C  F018         	goto	u5790
  6334   0030D4                     u5791:
  6335   0030D4  EF7D  F018         	goto	l5888
  6336   0030D8                     u5790:
  6337   0030D8                     
  6338                           ; BSR set to: 0
  6339   0030D8  5180               	movf	___lodiv@divisor& (0+255),w,b
  6340   0030DA  5F78               	subwf	___lodiv@dividend& (0+255),f,b
  6341   0030DC  5181               	movf	(___lodiv@divisor+1)& (0+255),w,b
  6342   0030DE  5B79               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  6343   0030E0  5182               	movf	(___lodiv@divisor+2)& (0+255),w,b
  6344   0030E2  5B7A               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  6345   0030E4  5183               	movf	(___lodiv@divisor+3)& (0+255),w,b
  6346   0030E6  5B7B               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  6347   0030E8  5184               	movf	(___lodiv@divisor+4)& (0+255),w,b
  6348   0030EA  5B7C               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  6349   0030EC  5185               	movf	(___lodiv@divisor+5)& (0+255),w,b
  6350   0030EE  5B7D               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  6351   0030F0  5186               	movf	(___lodiv@divisor+6)& (0+255),w,b
  6352   0030F2  5B7E               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  6353   0030F4  5187               	movf	(___lodiv@divisor+7)& (0+255),w,b
  6354   0030F6  5B7F               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  6355   0030F8                     
  6356                           ; BSR set to: 0
  6357   0030F8  8188               	bsf	___lodiv@quotient& (0+255),0,b
  6358   0030FA                     l5888:
  6359                           
  6360                           ; BSR set to: 0
  6361   0030FA  90D8               	bcf	status,0,c
  6362   0030FC  3387               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  6363   0030FE  3386               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  6364   003100  3385               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  6365   003102  3384               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  6366   003104  3383               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  6367   003106  3382               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  6368   003108  3381               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  6369   00310A  3380               	rrcf	___lodiv@divisor& (0+255),f,b
  6370   00310C                     
  6371                           ; BSR set to: 0
  6372   00310C  2F90               	decfsz	___lodiv@counter& (0+255),f,b
  6373   00310E  EF4C  F018         	goto	l5880
  6374   003112                     l1077:
  6375                           
  6376                           ; BSR set to: 0
  6377   003112  C088  F078         	movff	___lodiv@quotient,?___lodiv
  6378   003116  C089  F079         	movff	___lodiv@quotient+1,?___lodiv+1
  6379   00311A  C08A  F07A         	movff	___lodiv@quotient+2,?___lodiv+2
  6380   00311E  C08B  F07B         	movff	___lodiv@quotient+3,?___lodiv+3
  6381   003122  C08C  F07C         	movff	___lodiv@quotient+4,?___lodiv+4
  6382   003126  C08D  F07D         	movff	___lodiv@quotient+5,?___lodiv+5
  6383   00312A  C08E  F07E         	movff	___lodiv@quotient+6,?___lodiv+6
  6384   00312E  C08F  F07F         	movff	___lodiv@quotient+7,?___lodiv+7
  6385   003132                     
  6386                           ; BSR set to: 0
  6387   003132  0012               	return		;funcret
  6388   003134                     __end_of___lodiv:
  6389                           	callstack 0
  6390                           
  6391 ;; *************** function _strncmp *****************
  6392 ;; Defined at:
  6393 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  _l              2   24[BANK0 ] PTR const unsigned char 
  6396 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  6397 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  6398 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  6399 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  6400 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  6401 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  6402 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  6403 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  6404 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  6405 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  6406 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  6407 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  6408 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  6409 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  6410 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  6411 ;;  _r              2   26[BANK0 ] PTR const unsigned char 
  6412 ;;		 -> STR_62(4), 
  6413 ;;  n               2   28[BANK0 ] unsigned int 
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;  r               2   33[BANK0 ] PTR const unsigned char 
  6416 ;;		 -> STR_62(4), 
  6417 ;;  l               2   31[BANK0 ] PTR const unsigned char 
  6418 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  6419 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  6420 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  6421 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  6422 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  6423 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  6424 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  6425 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  6426 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  6427 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  6428 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  6429 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  6430 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  6431 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  6432 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  2   24[BANK0 ] int 
  6435 ;; Registers used:
  6436 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6442 ;;      Params:         0       6       0       0       0       0       0
  6443 ;;      Locals:         0       4       0       0       0       0       0
  6444 ;;      Temps:          0       1       0       0       0       0       0
  6445 ;;      Totals:         0      11       0       0       0       0       0
  6446 ;;Total ram usage:       11 bytes
  6447 ;; Hardware stack levels used: 1
  6448 ;; Hardware stack levels required when called: 11
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_vfpfcnvrt
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text9
  6457   003224                     __ptext9:
  6458                           	callstack 0
  6459   003224                     _strncmp:
  6460                           	callstack 15
  6461   003224  C078  F07F         	movff	strncmp@_l,strncmp@l
  6462   003228  C079  F080         	movff	strncmp@_l+1,strncmp@l+1
  6463   00322C  C07A  F081         	movff	strncmp@_r,strncmp@r
  6464   003230  C07B  F082         	movff	strncmp@_r+1,strncmp@r+1
  6465   003234  0100               	movlb	0	; () banked
  6466   003236  077C               	decf	strncmp@n& (0+255),f,b
  6467   003238  A0D8               	btfss	status,0,c
  6468   00323A  077D               	decf	(strncmp@n+1)& (0+255),f,b
  6469   00323C  297C               	incf	strncmp@n& (0+255),w,b
  6470   00323E  E106               	bnz	u6401
  6471   003240  297D               	incf	(strncmp@n+1)& (0+255),w,b
  6472   003242  A4D8               	btfss	status,2,c
  6473   003244  EF26  F019         	goto	u6401
  6474   003248  EF28  F019         	goto	u6400
  6475   00324C                     u6401:
  6476   00324C  EF35  F019         	goto	l6204
  6477   003250                     u6400:
  6478   003250                     
  6479                           ; BSR set to: 0
  6480   003250  0E00               	movlw	0
  6481   003252  6F79               	movwf	(?_strncmp+1)& (0+255),b
  6482   003254  0E00               	movlw	0
  6483   003256  6F78               	movwf	?_strncmp& (0+255),b
  6484   003258  EF81  F019         	goto	l1567
  6485   00325C                     l6202:
  6486                           
  6487                           ; BSR set to: 0
  6488   00325C  4B7F               	infsnz	strncmp@l& (0+255),f,b
  6489   00325E  2B80               	incf	(strncmp@l+1)& (0+255),f,b
  6490   003260  4B81               	infsnz	strncmp@r& (0+255),f,b
  6491   003262  2B82               	incf	(strncmp@r+1)& (0+255),f,b
  6492   003264  077C               	decf	strncmp@n& (0+255),f,b
  6493   003266  A0D8               	btfss	status,0,c
  6494   003268  077D               	decf	(strncmp@n+1)& (0+255),f,b
  6495   00326A                     l6204:
  6496                           
  6497                           ; BSR set to: 0
  6498   00326A  C07F  FFF6         	movff	strncmp@l,tblptrl
  6499   00326E  C080  FFF7         	movff	strncmp@l+1,tblptrh
  6500   003272                     	if	0	;tblptru may be non-zero
  6501   003272                     	endif
  6502   003272                     	if	0	;tblptru may be non-zero
  6503   003272                     	endif
  6504   003272  0008               	tblrd		*
  6505   003274  50F5               	movf	tablat,w,c
  6506   003276  0900               	iorlw	0
  6507   003278  B4D8               	btfsc	status,2,c
  6508   00327A  EF41  F019         	goto	u6411
  6509   00327E  EF43  F019         	goto	u6410
  6510   003282                     u6411:
  6511   003282  EF6F  F019         	goto	l6212
  6512   003286                     u6410:
  6513   003286                     
  6514                           ; BSR set to: 0
  6515   003286  C081  FFF6         	movff	strncmp@r,tblptrl
  6516   00328A  C082  FFF7         	movff	strncmp@r+1,tblptrh
  6517   00328E                     	if	0	;tblptru may be non-zero
  6518   00328E                     	endif
  6519   00328E                     	if	0	;tblptru may be non-zero
  6520   00328E                     	endif
  6521   00328E  0008               	tblrd		*
  6522   003290  50F5               	movf	tablat,w,c
  6523   003292  0900               	iorlw	0
  6524   003294  B4D8               	btfsc	status,2,c
  6525   003296  EF4F  F019         	goto	u6421
  6526   00329A  EF51  F019         	goto	u6420
  6527   00329E                     u6421:
  6528   00329E  EF6F  F019         	goto	l6212
  6529   0032A2                     u6420:
  6530   0032A2                     
  6531                           ; BSR set to: 0
  6532   0032A2  517C               	movf	strncmp@n& (0+255),w,b
  6533   0032A4  117D               	iorwf	(strncmp@n+1)& (0+255),w,b
  6534   0032A6  B4D8               	btfsc	status,2,c
  6535   0032A8  EF58  F019         	goto	u6431
  6536   0032AC  EF5A  F019         	goto	u6430
  6537   0032B0                     u6431:
  6538   0032B0  EF6F  F019         	goto	l6212
  6539   0032B4                     u6430:
  6540   0032B4                     
  6541                           ; BSR set to: 0
  6542   0032B4  C07F  FFF6         	movff	strncmp@l,tblptrl
  6543   0032B8  C080  FFF7         	movff	strncmp@l+1,tblptrh
  6544   0032BC                     	if	0	;tblptru may be non-zero
  6545   0032BC                     	endif
  6546   0032BC                     	if	0	;tblptru may be non-zero
  6547   0032BC                     	endif
  6548   0032BC  0008               	tblrd		*
  6549   0032BE  CFF5 F07E          	movff	tablat,??_strncmp
  6550   0032C2  C081  FFF6         	movff	strncmp@r,tblptrl
  6551   0032C6  C082  FFF7         	movff	strncmp@r+1,tblptrh
  6552   0032CA                     	if	0	;tblptru may be non-zero
  6553   0032CA                     	endif
  6554   0032CA                     	if	0	;tblptru may be non-zero
  6555   0032CA                     	endif
  6556   0032CA  0008               	tblrd		*
  6557   0032CC  50F5               	movf	tablat,w,c
  6558   0032CE  197E               	xorwf	??_strncmp& (0+255),w,b
  6559   0032D0  B4D8               	btfsc	status,2,c
  6560   0032D2  EF6D  F019         	goto	u6441
  6561   0032D6  EF6F  F019         	goto	u6440
  6562   0032DA                     u6441:
  6563   0032DA  EF2E  F019         	goto	l6202
  6564   0032DE                     u6440:
  6565   0032DE                     l6212:
  6566                           
  6567                           ; BSR set to: 0
  6568   0032DE  C07F  FFF6         	movff	strncmp@l,tblptrl
  6569   0032E2  C080  FFF7         	movff	strncmp@l+1,tblptrh
  6570   0032E6                     	if	0	;tblptru may be non-zero
  6571   0032E6                     	endif
  6572   0032E6                     	if	0	;tblptru may be non-zero
  6573   0032E6                     	endif
  6574   0032E6  0008               	tblrd		*
  6575   0032E8  CFF5 F07E          	movff	tablat,??_strncmp
  6576   0032EC  C081  FFF6         	movff	strncmp@r,tblptrl
  6577   0032F0  C082  FFF7         	movff	strncmp@r+1,tblptrh
  6578   0032F4                     	if	0	;tblptru may be non-zero
  6579   0032F4                     	endif
  6580   0032F4                     	if	0	;tblptru may be non-zero
  6581   0032F4                     	endif
  6582   0032F4  0008               	tblrd		*
  6583   0032F6  50F5               	movf	tablat,w,c
  6584   0032F8  5D7E               	subwf	??_strncmp& (0+255),w,b
  6585   0032FA  6F78               	movwf	?_strncmp& (0+255),b
  6586   0032FC  6B79               	clrf	(?_strncmp+1)& (0+255),b
  6587   0032FE  A0D8               	btfss	status,0,c
  6588   003300  0779               	decf	(?_strncmp+1)& (0+255),f,b
  6589   003302                     l1567:
  6590                           
  6591                           ; BSR set to: 0
  6592   003302  0012               	return		;funcret
  6593   003304                     __end_of_strncmp:
  6594                           	callstack 0
  6595                           
  6596 ;; *************** function _stoa *****************
  6597 ;; Defined at:
  6598 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  6601 ;;		 -> NULL(0), 
  6602 ;;  s               2   37[BANK0 ] PTR unsigned char 
  6603 ;;		 -> ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  6604 ;; Auto vars:     Size  Location     Type
  6605 ;;  nuls            7   40[BANK0 ] unsigned char [7]
  6606 ;;  l               2   55[BANK0 ] int 
  6607 ;;  p               2   53[BANK0 ] int 
  6608 ;;  cp              2   51[BANK0 ] PTR unsigned char 
  6609 ;;		 -> stoa@nuls(7), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  6610 ;;  w               2   49[BANK0 ] int 
  6611 ;;  i               2   47[BANK0 ] int 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6621 ;;      Params:         0       4       0       0       0       0       0
  6622 ;;      Locals:         0      17       0       0       0       0       0
  6623 ;;      Temps:          0       1       0       0       0       0       0
  6624 ;;      Totals:         0      22       0       0       0       0       0
  6625 ;;Total ram usage:       22 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 14
  6628 ;; This function calls:
  6629 ;;		_fputc
  6630 ;;		_strlen
  6631 ;; This function is called by:
  6632 ;;		_vfpfcnvrt
  6633 ;; This function uses a non-reentrant model
  6634 ;;
  6635                           
  6636                           	psect	text10
  6637   00242C                     __ptext10:
  6638                           	callstack 0
  6639   00242C                     _stoa:
  6640                           	callstack 12
  6641   00242C                     
  6642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  6643   00242C  EE21  F0C1         	lfsr	2,stoa@F1157
  6644   002430  EE10  F088         	lfsr	1,stoa@nuls
  6645   002434  0E06               	movlw	6
  6646   002436                     u6111:
  6647   002436  CFDB FFE3          	movff	plusw2,plusw1
  6648   00243A  06E8               	decf	wreg,f,c
  6649   00243C  E2FC               	bc	u6111
  6650   00243E                     
  6651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  6652   00243E  C085  F093         	movff	stoa@s,stoa@cp
  6653   002442  C086  F094         	movff	stoa@s+1,stoa@cp+1
  6654   002446                     
  6655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  6656   002446  0100               	movlb	0	; () banked
  6657   002448  5193               	movf	stoa@cp& (0+255),w,b
  6658   00244A  1194               	iorwf	(stoa@cp+1)& (0+255),w,b
  6659   00244C  A4D8               	btfss	status,2,c
  6660   00244E  EF2B  F012         	goto	u6121
  6661   002452  EF2D  F012         	goto	u6120
  6662   002456                     u6121:
  6663   002456  EF31  F012         	goto	l6048
  6664   00245A                     u6120:
  6665   00245A                     
  6666                           ; BSR set to: 0
  6667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  6668   00245A  0E88               	movlw	low stoa@nuls
  6669   00245C  6F93               	movwf	stoa@cp& (0+255),b
  6670   00245E  0E00               	movlw	high stoa@nuls
  6671   002460  6F94               	movwf	(stoa@cp+1)& (0+255),b
  6672   002462                     l6048:
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  6676   002462  C093  F078         	movff	stoa@cp,strlen@s
  6677   002466  C094  F079         	movff	stoa@cp+1,strlen@s+1
  6678   00246A  EC8D  F01F         	call	_strlen	;wreg free
  6679   00246E  C078  F097         	movff	?_strlen,stoa@l
  6680   002472  C079  F098         	movff	?_strlen+1,stoa@l+1
  6681   002476                     
  6682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  6683   002476  C0D0  F095         	movff	_prec,stoa@p
  6684   00247A  C0D1  F096         	movff	_prec+1,stoa@p+1
  6685   00247E                     
  6686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6687   00247E  0100               	movlb	0	; () banked
  6688   002480  BF96               	btfsc	(stoa@p+1)& (0+255),7,b
  6689   002482  EF45  F012         	goto	u6131
  6690   002486  EF47  F012         	goto	u6130
  6691   00248A                     u6131:
  6692   00248A  EF5C  F012         	goto	l1400
  6693   00248E                     u6130:
  6694   00248E                     
  6695                           ; BSR set to: 0
  6696   00248E  5197               	movf	stoa@l& (0+255),w,b
  6697   002490  5D95               	subwf	stoa@p& (0+255),w,b
  6698   002492  5196               	movf	(stoa@p+1)& (0+255),w,b
  6699   002494  0A80               	xorlw	128
  6700   002496  6F87               	movwf	??_stoa& (0+255),b
  6701   002498  5198               	movf	(stoa@l+1)& (0+255),w,b
  6702   00249A  0A80               	xorlw	128
  6703   00249C  5987               	subwfb	??_stoa& (0+255),w,b
  6704   00249E  A0D8               	btfss	status,0,c
  6705   0024A0  EF54  F012         	goto	u6141
  6706   0024A4  EF56  F012         	goto	u6140
  6707   0024A8                     u6141:
  6708   0024A8  EF58  F012         	goto	l1398
  6709   0024AC                     u6140:
  6710   0024AC  EF5C  F012         	goto	l1400
  6711   0024B0                     l1398:
  6712                           
  6713                           ; BSR set to: 0
  6714   0024B0  C095  F097         	movff	stoa@p,stoa@l
  6715   0024B4  C096  F098         	movff	stoa@p+1,stoa@l+1
  6716   0024B8                     l1400:
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  6720   0024B8  C097  F095         	movff	stoa@l,stoa@p
  6721   0024BC  C098  F096         	movff	stoa@l+1,stoa@p+1
  6722                           
  6723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  6724   0024C0  C0CE  F091         	movff	_width,stoa@w
  6725   0024C4  C0CF  F092         	movff	_width+1,stoa@w+1
  6726                           
  6727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 859:     if (!(fl
      +                          ags & (1 << 0))) {
  6728   0024C8  B1D4               	btfsc	_flags& (0+255),0,b
  6729   0024CA  EF69  F012         	goto	u6151
  6730   0024CE  EF6B  F012         	goto	u6150
  6731   0024D2                     u6151:
  6732   0024D2  EF89  F012         	goto	l6064
  6733   0024D6                     u6150:
  6734   0024D6  EF7A  F012         	goto	l6062
  6735   0024DA                     l6058:
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  6739   0024DA  0E00               	movlw	0
  6740   0024DC  6F7B               	movwf	(fputc@c+1)& (0+255),b
  6741   0024DE  0E20               	movlw	32
  6742   0024E0  6F7A               	movwf	fputc@c& (0+255),b
  6743   0024E2  C083  F07C         	movff	stoa@fp,fputc@fp
  6744   0024E6  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  6745   0024EA  EC05  F01D         	call	_fputc	;wreg free
  6746   0024EE                     
  6747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  6748   0024EE  0100               	movlb	0	; () banked
  6749   0024F0  4B97               	infsnz	stoa@l& (0+255),f,b
  6750   0024F2  2B98               	incf	(stoa@l+1)& (0+255),f,b
  6751   0024F4                     l6062:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  6755   0024F4  5191               	movf	stoa@w& (0+255),w,b
  6756   0024F6  5D97               	subwf	stoa@l& (0+255),w,b
  6757   0024F8  5198               	movf	(stoa@l+1)& (0+255),w,b
  6758   0024FA  0A80               	xorlw	128
  6759   0024FC  6F87               	movwf	??_stoa& (0+255),b
  6760   0024FE  5192               	movf	(stoa@w+1)& (0+255),w,b
  6761   002500  0A80               	xorlw	128
  6762   002502  5987               	subwfb	??_stoa& (0+255),w,b
  6763   002504  A0D8               	btfss	status,0,c
  6764   002506  EF87  F012         	goto	u6161
  6765   00250A  EF89  F012         	goto	u6160
  6766   00250E                     u6161:
  6767   00250E  EF6D  F012         	goto	l6058
  6768   002512                     u6160:
  6769   002512                     l6064:
  6770                           
  6771                           ; BSR set to: 0
  6772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  6773   002512  0E00               	movlw	0
  6774   002514  6F90               	movwf	(stoa@i+1)& (0+255),b
  6775   002516  0E00               	movlw	0
  6776   002518  6F8F               	movwf	stoa@i& (0+255),b
  6777                           
  6778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  6779   00251A  EFA3  F012         	goto	l6072
  6780   00251E                     l6066:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  6784   00251E  C093  FFD9         	movff	stoa@cp,fsr2l
  6785   002522  C094  FFDA         	movff	stoa@cp+1,fsr2h
  6786   002526  50DF               	movf	indf2,w,c
  6787   002528  6F87               	movwf	??_stoa& (0+255),b
  6788   00252A  5187               	movf	??_stoa& (0+255),w,b
  6789   00252C  6F7A               	movwf	fputc@c& (0+255),b
  6790   00252E  6B7B               	clrf	(fputc@c+1)& (0+255),b
  6791   002530  C083  F07C         	movff	stoa@fp,fputc@fp
  6792   002534  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  6793   002538  EC05  F01D         	call	_fputc	;wreg free
  6794   00253C                     
  6795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  6796   00253C  0100               	movlb	0	; () banked
  6797   00253E  4B93               	infsnz	stoa@cp& (0+255),f,b
  6798   002540  2B94               	incf	(stoa@cp+1)& (0+255),f,b
  6799   002542                     
  6800                           ; BSR set to: 0
  6801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  6802   002542  4B8F               	infsnz	stoa@i& (0+255),f,b
  6803   002544  2B90               	incf	(stoa@i+1)& (0+255),f,b
  6804   002546                     l6072:
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  6808   002546  5195               	movf	stoa@p& (0+255),w,b
  6809   002548  5D8F               	subwf	stoa@i& (0+255),w,b
  6810   00254A  5190               	movf	(stoa@i+1)& (0+255),w,b
  6811   00254C  0A80               	xorlw	128
  6812   00254E  6F87               	movwf	??_stoa& (0+255),b
  6813   002550  5196               	movf	(stoa@p+1)& (0+255),w,b
  6814   002552  0A80               	xorlw	128
  6815   002554  5987               	subwfb	??_stoa& (0+255),w,b
  6816   002556  A0D8               	btfss	status,0,c
  6817   002558  EFB0  F012         	goto	u6171
  6818   00255C  EFB2  F012         	goto	u6170
  6819   002560                     u6171:
  6820   002560  EF8F  F012         	goto	l6066
  6821   002564                     u6170:
  6822   002564                     
  6823                           ; BSR set to: 0
  6824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 879:     if (flag
      +                          s & (1 << 0)) {
  6825   002564  A1D4               	btfss	_flags& (0+255),0,b
  6826   002566  EFB7  F012         	goto	u6181
  6827   00256A  EFB9  F012         	goto	u6180
  6828   00256E                     u6181:
  6829   00256E  EFD7  F012         	goto	l1414
  6830   002572                     u6180:
  6831   002572  EFC8  F012         	goto	l6080
  6832   002576                     l6076:
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 881:             
      +                          fputc(' ', fp);
  6836   002576  0E00               	movlw	0
  6837   002578  6F7B               	movwf	(fputc@c+1)& (0+255),b
  6838   00257A  0E20               	movlw	32
  6839   00257C  6F7A               	movwf	fputc@c& (0+255),b
  6840   00257E  C083  F07C         	movff	stoa@fp,fputc@fp
  6841   002582  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  6842   002586  EC05  F01D         	call	_fputc	;wreg free
  6843   00258A                     
  6844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 882:             
      +                          ++l;
  6845   00258A  0100               	movlb	0	; () banked
  6846   00258C  4B97               	infsnz	stoa@l& (0+255),f,b
  6847   00258E  2B98               	incf	(stoa@l+1)& (0+255),f,b
  6848   002590                     l6080:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 880:         whil
      +                          e (l < w) {
  6852   002590  5191               	movf	stoa@w& (0+255),w,b
  6853   002592  5D97               	subwf	stoa@l& (0+255),w,b
  6854   002594  5198               	movf	(stoa@l+1)& (0+255),w,b
  6855   002596  0A80               	xorlw	128
  6856   002598  6F87               	movwf	??_stoa& (0+255),b
  6857   00259A  5192               	movf	(stoa@w+1)& (0+255),w,b
  6858   00259C  0A80               	xorlw	128
  6859   00259E  5987               	subwfb	??_stoa& (0+255),w,b
  6860   0025A0  A0D8               	btfss	status,0,c
  6861   0025A2  EFD5  F012         	goto	u6191
  6862   0025A6  EFD7  F012         	goto	u6190
  6863   0025AA                     u6191:
  6864   0025AA  EFBB  F012         	goto	l6076
  6865   0025AE                     u6190:
  6866   0025AE                     l1414:
  6867                           
  6868                           ; BSR set to: 0
  6869   0025AE  0012               	return		;funcret
  6870   0025B0                     __end_of_stoa:
  6871                           	callstack 0
  6872                           
  6873 ;; *************** function _strlen *****************
  6874 ;; Defined at:
  6875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  s               2   24[BANK0 ] PTR const unsigned char 
  6878 ;;		 -> stoa@nuls(7), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;  a               2   26[BANK0 ] PTR const unsigned char 
  6881 ;;		 -> stoa@nuls(7), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  2   24[BANK0 ] unsigned int 
  6884 ;; Registers used:
  6885 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6891 ;;      Params:         0       2       0       0       0       0       0
  6892 ;;      Locals:         0       2       0       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0       0       0
  6894 ;;      Totals:         0       4       0       0       0       0       0
  6895 ;;Total ram usage:        4 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; Hardware stack levels required when called: 11
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_stoa
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text11
  6906   003F1A                     __ptext11:
  6907                           	callstack 0
  6908   003F1A                     _strlen:
  6909                           	callstack 14
  6910   003F1A  C078  F07A         	movff	strlen@s,strlen@a
  6911   003F1E  C079  F07B         	movff	strlen@s+1,strlen@a+1
  6912   003F22  EF96  F01F         	goto	l5934
  6913   003F26                     l5932:
  6914   003F26  0100               	movlb	0	; () banked
  6915   003F28  4B78               	infsnz	strlen@s& (0+255),f,b
  6916   003F2A  2B79               	incf	(strlen@s+1)& (0+255),f,b
  6917   003F2C                     l5934:
  6918   003F2C  C078  FFD9         	movff	strlen@s,fsr2l
  6919   003F30  C079  FFDA         	movff	strlen@s+1,fsr2h
  6920   003F34  50DF               	movf	indf2,w,c
  6921   003F36  A4D8               	btfss	status,2,c
  6922   003F38  EFA0  F01F         	goto	u5881
  6923   003F3C  EFA2  F01F         	goto	u5880
  6924   003F40                     u5881:
  6925   003F40  EF93  F01F         	goto	l5932
  6926   003F44                     u5880:
  6927   003F44  0100               	movlb	0	; () banked
  6928   003F46  517A               	movf	strlen@a& (0+255),w,b
  6929   003F48  5D78               	subwf	strlen@s& (0+255),w,b
  6930   003F4A  6F78               	movwf	?_strlen& (0+255),b
  6931   003F4C  517B               	movf	(strlen@a+1)& (0+255),w,b
  6932   003F4E  5979               	subwfb	(strlen@s+1)& (0+255),w,b
  6933   003F50  6F79               	movwf	(?_strlen+1)& (0+255),b
  6934   003F52                     
  6935                           ; BSR set to: 0
  6936   003F52  0012               	return		;funcret
  6937   003F54                     __end_of_strlen:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _dtoa *****************
  6941 ;; Defined at:
  6942 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  6945 ;;		 -> NULL(0), 
  6946 ;;  d               8   55[BANK0 ] long long 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  n               8   77[BANK0 ] long long 
  6949 ;;  i               2   86[BANK0 ] int 
  6950 ;;  w               2   75[BANK0 ] int 
  6951 ;;  p               2   73[BANK0 ] int 
  6952 ;;  s               1   85[BANK0 ] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6962 ;;      Params:         0      10       0       0       0       0       0
  6963 ;;      Locals:         0      17       0       0       0       0       0
  6964 ;;      Temps:          0       8       0       0       0       0       0
  6965 ;;      Totals:         0      35       0       0       0       0       0
  6966 ;;Total ram usage:       35 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 16
  6969 ;; This function calls:
  6970 ;;		___aodiv
  6971 ;;		___aomod
  6972 ;;		_abs
  6973 ;;		_pad
  6974 ;; This function is called by:
  6975 ;;		_vfpfcnvrt
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text12
  6980   00140E                     __ptext12:
  6981                           	callstack 0
  6982   00140E                     _dtoa:
  6983                           	callstack 10
  6984   00140E                     
  6985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  6986   00140E  C097  F0AD         	movff	dtoa@d,dtoa@n
  6987   001412  C098  F0AE         	movff	dtoa@d+1,dtoa@n+1
  6988   001416  C099  F0AF         	movff	dtoa@d+2,dtoa@n+2
  6989   00141A  C09A  F0B0         	movff	dtoa@d+3,dtoa@n+3
  6990   00141E  C09B  F0B1         	movff	dtoa@d+4,dtoa@n+4
  6991   001422  C09C  F0B2         	movff	dtoa@d+5,dtoa@n+5
  6992   001426  C09D  F0B3         	movff	dtoa@d+6,dtoa@n+6
  6993   00142A  C09E  F0B4         	movff	dtoa@d+7,dtoa@n+7
  6994   00142E                     
  6995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  6996   00142E  0100               	movlb	0	; () banked
  6997   001430  BFB4               	btfsc	(dtoa@n+7)& (0+255),7,b
  6998   001432  EF1D  F00A         	goto	u5981
  6999   001436  EF20  F00A         	goto	u5980
  7000   00143A                     u5981:
  7001   00143A  0E01               	movlw	1
  7002   00143C  EF21  F00A         	goto	u5990
  7003   001440                     u5980:
  7004   001440  0E00               	movlw	0
  7005   001442                     u5990:
  7006   001442  6FB5               	movwf	dtoa@s& (0+255),b
  7007   001444                     
  7008                           ; BSR set to: 0
  7009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7010   001444  51B5               	movf	dtoa@s& (0+255),w,b
  7011   001446  B4D8               	btfsc	status,2,c
  7012   001448  EF28  F00A         	goto	u6001
  7013   00144C  EF2A  F00A         	goto	u6000
  7014   001450                     u6001:
  7015   001450  EF3A  F00A         	goto	l5988
  7016   001454                     u6000:
  7017   001454                     
  7018                           ; BSR set to: 0
  7019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7020   001454  1FB4               	comf	(dtoa@n+7)& (0+255),f,b
  7021   001456  1FB3               	comf	(dtoa@n+6)& (0+255),f,b
  7022   001458  1FB2               	comf	(dtoa@n+5)& (0+255),f,b
  7023   00145A  1FB1               	comf	(dtoa@n+4)& (0+255),f,b
  7024   00145C  1FB0               	comf	(dtoa@n+3)& (0+255),f,b
  7025   00145E  1FAF               	comf	(dtoa@n+2)& (0+255),f,b
  7026   001460  1FAE               	comf	(dtoa@n+1)& (0+255),f,b
  7027   001462  6DAD               	negf	dtoa@n& (0+255),b
  7028   001464  0E00               	movlw	0
  7029   001466  23AE               	addwfc	(dtoa@n+1)& (0+255),f,b
  7030   001468  23AF               	addwfc	(dtoa@n+2)& (0+255),f,b
  7031   00146A  23B0               	addwfc	(dtoa@n+3)& (0+255),f,b
  7032   00146C  23B1               	addwfc	(dtoa@n+4)& (0+255),f,b
  7033   00146E  23B2               	addwfc	(dtoa@n+5)& (0+255),f,b
  7034   001470  23B3               	addwfc	(dtoa@n+6)& (0+255),f,b
  7035   001472  23B4               	addwfc	(dtoa@n+7)& (0+255),f,b
  7036   001474                     l5988:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  7040   001474  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  7041   001476  EF3F  F00A         	goto	u6011
  7042   00147A  EF41  F00A         	goto	u6010
  7043   00147E                     u6011:
  7044   00147E  EF42  F00A         	goto	l5992
  7045   001482                     u6010:
  7046   001482                     
  7047                           ; BSR set to: 0
  7048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  7049   001482  93D4               	bcf	_flags& (0+255),1,b
  7050   001484                     l5992:
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7054   001484  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  7055   001486  EF4F  F00A         	goto	u6020
  7056   00148A  51D1               	movf	(_prec+1)& (0+255),w,b
  7057   00148C  E106               	bnz	u6021
  7058   00148E  05D0               	decf	_prec& (0+255),w,b
  7059   001490  B0D8               	btfsc	status,0,c
  7060   001492  EF4D  F00A         	goto	u6021
  7061   001496  EF4F  F00A         	goto	u6020
  7062   00149A                     u6021:
  7063   00149A  EF55  F00A         	goto	l1375
  7064   00149E                     u6020:
  7065   00149E                     
  7066                           ; BSR set to: 0
  7067   00149E  0E00               	movlw	0
  7068   0014A0  6FAA               	movwf	(dtoa@p+1)& (0+255),b
  7069   0014A2  0E01               	movlw	1
  7070   0014A4  6FA9               	movwf	dtoa@p& (0+255),b
  7071   0014A6  EF59  F00A         	goto	l1377
  7072   0014AA                     l1375:
  7073                           
  7074                           ; BSR set to: 0
  7075   0014AA  C0D0  F0A9         	movff	_prec,dtoa@p
  7076   0014AE  C0D1  F0AA         	movff	_prec+1,dtoa@p+1
  7077   0014B2                     l1377:
  7078                           
  7079                           ; BSR set to: 0
  7080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7081   0014B2  C0CE  F0AB         	movff	_width,dtoa@w
  7082   0014B6  C0CF  F0AC         	movff	_width+1,dtoa@w+1
  7083   0014BA                     
  7084                           ; BSR set to: 0
  7085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7086   0014BA  51B5               	movf	dtoa@s& (0+255),w,b
  7087   0014BC  B4D8               	btfsc	status,2,c
  7088   0014BE  EF63  F00A         	goto	u6031
  7089   0014C2  EF65  F00A         	goto	u6030
  7090   0014C6                     u6031:
  7091   0014C6  EF7C  F00A         	goto	l1378
  7092   0014CA                     u6030:
  7093   0014CA                     
  7094                           ; BSR set to: 0
  7095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7096   0014CA  07AB               	decf	dtoa@w& (0+255),f,b
  7097   0014CC  A0D8               	btfss	status,0,c
  7098   0014CE  07AC               	decf	(dtoa@w+1)& (0+255),f,b
  7099   0014D0                     
  7100                           ; BSR set to: 0
  7101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7102   0014D0  51B5               	movf	dtoa@s& (0+255),w,b
  7103   0014D2  A4D8               	btfss	status,2,c
  7104   0014D4  EF6E  F00A         	goto	u6041
  7105   0014D8  EF70  F00A         	goto	u6040
  7106   0014DC                     u6041:
  7107   0014DC  EF76  F00A         	goto	l6004
  7108   0014E0                     u6040:
  7109   0014E0                     
  7110                           ; BSR set to: 0
  7111   0014E0  0E00               	movlw	0
  7112   0014E2  6FA8               	movwf	(_dtoa$2074+1)& (0+255),b
  7113   0014E4  0E2B               	movlw	43
  7114   0014E6  6FA7               	movwf	_dtoa$2074& (0+255),b
  7115   0014E8  EF7A  F00A         	goto	l6006
  7116   0014EC                     l6004:
  7117                           
  7118                           ; BSR set to: 0
  7119   0014EC  0E00               	movlw	0
  7120   0014EE  6FA8               	movwf	(_dtoa$2074+1)& (0+255),b
  7121   0014F0  0E2D               	movlw	45
  7122   0014F2  6FA7               	movwf	_dtoa$2074& (0+255),b
  7123   0014F4                     l6006:
  7124                           
  7125                           ; BSR set to: 0
  7126   0014F4  C0A7  F0B5         	movff	_dtoa$2074,dtoa@s
  7127   0014F8                     l1378:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7131   0014F8  0E00               	movlw	0
  7132   0014FA  6FB7               	movwf	(dtoa@i+1)& (0+255),b
  7133   0014FC  0E1F               	movlw	31
  7134   0014FE  6FB6               	movwf	dtoa@i& (0+255),b
  7135   001500                     
  7136                           ; BSR set to: 0
  7137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7138   001500  0E00               	movlw	0
  7139   001502  0101               	movlb	1	; () banked
  7140   001504  6F4E               	movwf	(_dbuf+31)& (0+255),b
  7141                           
  7142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7143   001506  EF02  F00B         	goto	l6020
  7144   00150A                     l6010:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7148   00150A  07B6               	decf	dtoa@i& (0+255),f,b
  7149   00150C  A0D8               	btfss	status,0,c
  7150   00150E  07B7               	decf	(dtoa@i+1)& (0+255),f,b
  7151   001510                     
  7152                           ; BSR set to: 0
  7153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7154   001510  0E2F               	movlw	low _dbuf
  7155   001512  25B6               	addwf	dtoa@i& (0+255),w,b
  7156   001514  6ED9               	movwf	fsr2l,c
  7157   001516  0E01               	movlw	high _dbuf
  7158   001518  21B7               	addwfc	(dtoa@i+1)& (0+255),w,b
  7159   00151A  6EDA               	movwf	fsr2h,c
  7160   00151C  C0AD  F078         	movff	dtoa@n,___aomod@dividend
  7161   001520  C0AE  F079         	movff	dtoa@n+1,___aomod@dividend+1
  7162   001524  C0AF  F07A         	movff	dtoa@n+2,___aomod@dividend+2
  7163   001528  C0B0  F07B         	movff	dtoa@n+3,___aomod@dividend+3
  7164   00152C  C0B1  F07C         	movff	dtoa@n+4,___aomod@dividend+4
  7165   001530  C0B2  F07D         	movff	dtoa@n+5,___aomod@dividend+5
  7166   001534  C0B3  F07E         	movff	dtoa@n+6,___aomod@dividend+6
  7167   001538  C0B4  F07F         	movff	dtoa@n+7,___aomod@dividend+7
  7168   00153C  0E0A               	movlw	10
  7169   00153E  6F80               	movwf	___aomod@divisor& (0+255),b
  7170   001540  0E00               	movlw	0
  7171   001542  6F81               	movwf	(___aomod@divisor+1)& (0+255),b
  7172   001544  0E00               	movlw	0
  7173   001546  6F82               	movwf	(___aomod@divisor+2)& (0+255),b
  7174   001548  0E00               	movlw	0
  7175   00154A  6F83               	movwf	(___aomod@divisor+3)& (0+255),b
  7176   00154C  0E00               	movlw	0
  7177   00154E  6F84               	movwf	(___aomod@divisor+4)& (0+255),b
  7178   001550  0E00               	movlw	0
  7179   001552  6F85               	movwf	(___aomod@divisor+5)& (0+255),b
  7180   001554  0E00               	movlw	0
  7181   001556  6F86               	movwf	(___aomod@divisor+6)& (0+255),b
  7182   001558  0E00               	movlw	0
  7183   00155A  6F87               	movwf	(___aomod@divisor+7)& (0+255),b
  7184   00155C  EC53  F014         	call	___aomod	;wreg free
  7185   001560  C078  F09F         	movff	?___aomod,??_dtoa
  7186   001564  C079  F0A0         	movff	?___aomod+1,??_dtoa+1
  7187   001568  C07A  F0A1         	movff	?___aomod+2,??_dtoa+2
  7188   00156C  C07B  F0A2         	movff	?___aomod+3,??_dtoa+3
  7189   001570  C07C  F0A3         	movff	?___aomod+4,??_dtoa+4
  7190   001574  C07D  F0A4         	movff	?___aomod+5,??_dtoa+5
  7191   001578  C07E  F0A5         	movff	?___aomod+6,??_dtoa+6
  7192   00157C  C07F  F0A6         	movff	?___aomod+7,??_dtoa+7
  7193   001580  C09F  F08A         	movff	??_dtoa,abs@a
  7194   001584  C0A0  F08B         	movff	??_dtoa+1,abs@a+1
  7195   001588  EC0C  F01F         	call	_abs	;wreg free
  7196   00158C  0100               	movlb	0	; () banked
  7197   00158E  518A               	movf	?_abs& (0+255),w,b
  7198   001590  0F30               	addlw	48
  7199   001592  6EDF               	movwf	indf2,c
  7200   001594                     
  7201                           ; BSR set to: 0
  7202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7203   001594  07A9               	decf	dtoa@p& (0+255),f,b
  7204   001596  A0D8               	btfss	status,0,c
  7205   001598  07AA               	decf	(dtoa@p+1)& (0+255),f,b
  7206   00159A                     
  7207                           ; BSR set to: 0
  7208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7209   00159A  07AB               	decf	dtoa@w& (0+255),f,b
  7210   00159C  A0D8               	btfss	status,0,c
  7211   00159E  07AC               	decf	(dtoa@w+1)& (0+255),f,b
  7212   0015A0                     
  7213                           ; BSR set to: 0
  7214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7215   0015A0  C0AD  F078         	movff	dtoa@n,___aodiv@dividend
  7216   0015A4  C0AE  F079         	movff	dtoa@n+1,___aodiv@dividend+1
  7217   0015A8  C0AF  F07A         	movff	dtoa@n+2,___aodiv@dividend+2
  7218   0015AC  C0B0  F07B         	movff	dtoa@n+3,___aodiv@dividend+3
  7219   0015B0  C0B1  F07C         	movff	dtoa@n+4,___aodiv@dividend+4
  7220   0015B4  C0B2  F07D         	movff	dtoa@n+5,___aodiv@dividend+5
  7221   0015B8  C0B3  F07E         	movff	dtoa@n+6,___aodiv@dividend+6
  7222   0015BC  C0B4  F07F         	movff	dtoa@n+7,___aodiv@dividend+7
  7223   0015C0  0E0A               	movlw	10
  7224   0015C2  6F80               	movwf	___aodiv@divisor& (0+255),b
  7225   0015C4  0E00               	movlw	0
  7226   0015C6  6F81               	movwf	(___aodiv@divisor+1)& (0+255),b
  7227   0015C8  0E00               	movlw	0
  7228   0015CA  6F82               	movwf	(___aodiv@divisor+2)& (0+255),b
  7229   0015CC  0E00               	movlw	0
  7230   0015CE  6F83               	movwf	(___aodiv@divisor+3)& (0+255),b
  7231   0015D0  0E00               	movlw	0
  7232   0015D2  6F84               	movwf	(___aodiv@divisor+4)& (0+255),b
  7233   0015D4  0E00               	movlw	0
  7234   0015D6  6F85               	movwf	(___aodiv@divisor+5)& (0+255),b
  7235   0015D8  0E00               	movlw	0
  7236   0015DA  6F86               	movwf	(___aodiv@divisor+6)& (0+255),b
  7237   0015DC  0E00               	movlw	0
  7238   0015DE  6F87               	movwf	(___aodiv@divisor+7)& (0+255),b
  7239   0015E0  EC8D  F010         	call	___aodiv	;wreg free
  7240   0015E4  C078  F0AD         	movff	?___aodiv,dtoa@n
  7241   0015E8  C079  F0AE         	movff	?___aodiv+1,dtoa@n+1
  7242   0015EC  C07A  F0AF         	movff	?___aodiv+2,dtoa@n+2
  7243   0015F0  C07B  F0B0         	movff	?___aodiv+3,dtoa@n+3
  7244   0015F4  C07C  F0B1         	movff	?___aodiv+4,dtoa@n+4
  7245   0015F8  C07D  F0B2         	movff	?___aodiv+5,dtoa@n+5
  7246   0015FC  C07E  F0B3         	movff	?___aodiv+6,dtoa@n+6
  7247   001600  C07F  F0B4         	movff	?___aodiv+7,dtoa@n+7
  7248   001604                     l6020:
  7249                           
  7250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7251   001604  0100               	movlb	0	; () banked
  7252   001606  BFB7               	btfsc	(dtoa@i+1)& (0+255),7,b
  7253   001608  EF0E  F00B         	goto	u6051
  7254   00160C  51B7               	movf	(dtoa@i+1)& (0+255),w,b
  7255   00160E  E108               	bnz	u6050
  7256   001610  05B6               	decf	dtoa@i& (0+255),w,b
  7257   001612  A0D8               	btfss	status,0,c
  7258   001614  EF0E  F00B         	goto	u6051
  7259   001618  EF10  F00B         	goto	u6050
  7260   00161C                     u6051:
  7261   00161C  EF40  F00B         	goto	l6030
  7262   001620                     u6050:
  7263   001620                     
  7264                           ; BSR set to: 0
  7265   001620  51AD               	movf	dtoa@n& (0+255),w,b
  7266   001622  11AE               	iorwf	(dtoa@n+1)& (0+255),w,b
  7267   001624  11AF               	iorwf	(dtoa@n+2)& (0+255),w,b
  7268   001626  11B0               	iorwf	(dtoa@n+3)& (0+255),w,b
  7269   001628  11B1               	iorwf	(dtoa@n+4)& (0+255),w,b
  7270   00162A  11B2               	iorwf	(dtoa@n+5)& (0+255),w,b
  7271   00162C  11B3               	iorwf	(dtoa@n+6)& (0+255),w,b
  7272   00162E  11B4               	iorwf	(dtoa@n+7)& (0+255),w,b
  7273   001630  A4D8               	btfss	status,2,c
  7274   001632  EF1D  F00B         	goto	u6061
  7275   001636  EF1F  F00B         	goto	u6060
  7276   00163A                     u6061:
  7277   00163A  EF85  F00A         	goto	l6010
  7278   00163E                     u6060:
  7279   00163E                     
  7280                           ; BSR set to: 0
  7281   00163E  BFAA               	btfsc	(dtoa@p+1)& (0+255),7,b
  7282   001640  EF2C  F00B         	goto	u6070
  7283   001644  51AA               	movf	(dtoa@p+1)& (0+255),w,b
  7284   001646  E106               	bnz	u6071
  7285   001648  05A9               	decf	dtoa@p& (0+255),w,b
  7286   00164A  B0D8               	btfsc	status,0,c
  7287   00164C  EF2A  F00B         	goto	u6071
  7288   001650  EF2C  F00B         	goto	u6070
  7289   001654                     u6071:
  7290   001654  EF85  F00A         	goto	l6010
  7291   001658                     u6070:
  7292   001658                     
  7293                           ; BSR set to: 0
  7294   001658  BFAC               	btfsc	(dtoa@w+1)& (0+255),7,b
  7295   00165A  EF37  F00B         	goto	u6081
  7296   00165E  51AC               	movf	(dtoa@w+1)& (0+255),w,b
  7297   001660  E108               	bnz	u6080
  7298   001662  05AB               	decf	dtoa@w& (0+255),w,b
  7299   001664  A0D8               	btfss	status,0,c
  7300   001666  EF37  F00B         	goto	u6081
  7301   00166A  EF39  F00B         	goto	u6080
  7302   00166E                     u6081:
  7303   00166E  EF40  F00B         	goto	l6030
  7304   001672                     u6080:
  7305   001672                     
  7306                           ; BSR set to: 0
  7307   001672  B3D4               	btfsc	_flags& (0+255),1,b
  7308   001674  EF3E  F00B         	goto	u6091
  7309   001678  EF40  F00B         	goto	u6090
  7310   00167C                     u6091:
  7311   00167C  EF85  F00A         	goto	l6010
  7312   001680                     u6090:
  7313   001680                     l6030:
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  7317   001680  51B5               	movf	dtoa@s& (0+255),w,b
  7318   001682  B4D8               	btfsc	status,2,c
  7319   001684  EF46  F00B         	goto	u6101
  7320   001688  EF48  F00B         	goto	u6100
  7321   00168C                     u6101:
  7322   00168C  EF53  F00B         	goto	l6036
  7323   001690                     u6100:
  7324   001690                     
  7325                           ; BSR set to: 0
  7326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  7327   001690  07B6               	decf	dtoa@i& (0+255),f,b
  7328   001692  A0D8               	btfss	status,0,c
  7329   001694  07B7               	decf	(dtoa@i+1)& (0+255),f,b
  7330   001696                     
  7331                           ; BSR set to: 0
  7332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  7333   001696  0E2F               	movlw	low _dbuf
  7334   001698  25B6               	addwf	dtoa@i& (0+255),w,b
  7335   00169A  6ED9               	movwf	fsr2l,c
  7336   00169C  0E01               	movlw	high _dbuf
  7337   00169E  21B7               	addwfc	(dtoa@i+1)& (0+255),w,b
  7338   0016A0  6EDA               	movwf	fsr2h,c
  7339   0016A2  C0B5  FFDF         	movff	dtoa@s,indf2
  7340   0016A6                     l6036:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7344   0016A6  C095  F08A         	movff	dtoa@fp,pad@fp
  7345   0016AA  C096  F08B         	movff	dtoa@fp+1,pad@fp+1
  7346   0016AE  0E2F               	movlw	low _dbuf
  7347   0016B0  25B6               	addwf	dtoa@i& (0+255),w,b
  7348   0016B2  6F8C               	movwf	pad@buf& (0+255),b
  7349   0016B4  0E01               	movlw	high _dbuf
  7350   0016B6  21B7               	addwfc	(dtoa@i+1)& (0+255),w,b
  7351   0016B8  6F8D               	movwf	(pad@buf+1)& (0+255),b
  7352   0016BA  C0AB  F08E         	movff	dtoa@w,pad@p
  7353   0016BE  C0AC  F08F         	movff	dtoa@w+1,pad@p+1
  7354   0016C2  EC56  F01C         	call	_pad	;wreg free
  7355   0016C6  0012               	return		;funcret
  7356   0016C8                     __end_of_dtoa:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function _pad *****************
  7360 ;; Defined at:
  7361 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  7364 ;;		 -> NULL(0), 
  7365 ;;  buf             2   44[BANK0 ] PTR unsigned char 
  7366 ;;		 -> dbuf(32), 
  7367 ;;  p               2   46[BANK0 ] int 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  w               2   51[BANK0 ] int 
  7370 ;;  i               2   49[BANK0 ] int 
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7380 ;;      Params:         0       6       0       0       0       0       0
  7381 ;;      Locals:         0       4       0       0       0       0       0
  7382 ;;      Temps:          0       1       0       0       0       0       0
  7383 ;;      Totals:         0      11       0       0       0       0       0
  7384 ;;Total ram usage:       11 bytes
  7385 ;; Hardware stack levels used: 1
  7386 ;; Hardware stack levels required when called: 15
  7387 ;; This function calls:
  7388 ;;		_fputc
  7389 ;;		_fputs
  7390 ;; This function is called by:
  7391 ;;		_dtoa
  7392 ;;		_utoa
  7393 ;;		_xtoa
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text13
  7398   0038AC                     __ptext13:
  7399                           	callstack 0
  7400   0038AC                     _pad:
  7401                           	callstack 10
  7402   0038AC                     
  7403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  7404   0038AC  0100               	movlb	0	; () banked
  7405   0038AE  A1D4               	btfss	_flags& (0+255),0,b
  7406   0038B0  EF5C  F01C         	goto	u5831
  7407   0038B4  EF5E  F01C         	goto	u5830
  7408   0038B8                     u5831:
  7409   0038B8  EF68  F01C         	goto	l5912
  7410   0038BC                     u5830:
  7411   0038BC                     
  7412                           ; BSR set to: 0
  7413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  7414   0038BC  C08C  F083         	movff	pad@buf,fputs@s
  7415   0038C0  C08D  F084         	movff	pad@buf+1,fputs@s+1
  7416   0038C4  C08A  F085         	movff	pad@fp,fputs@fp
  7417   0038C8  C08B  F086         	movff	pad@fp+1,fputs@fp+1
  7418   0038CC  EC7F  F01E         	call	_fputs	;wreg free
  7419   0038D0                     l5912:
  7420                           
  7421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  7422   0038D0  0100               	movlb	0	; () banked
  7423   0038D2  BF8F               	btfsc	(pad@p+1)& (0+255),7,b
  7424   0038D4  EF6E  F01C         	goto	u5841
  7425   0038D8  EF70  F01C         	goto	u5840
  7426   0038DC                     u5841:
  7427   0038DC  EF76  F01C         	goto	l5916
  7428   0038E0                     u5840:
  7429   0038E0                     
  7430                           ; BSR set to: 0
  7431   0038E0  C08E  F093         	movff	pad@p,pad@w
  7432   0038E4  C08F  F094         	movff	pad@p+1,pad@w+1
  7433   0038E8  EF7A  F01C         	goto	l1348
  7434   0038EC                     l5916:
  7435                           
  7436                           ; BSR set to: 0
  7437   0038EC  0E00               	movlw	0
  7438   0038EE  6F94               	movwf	(pad@w+1)& (0+255),b
  7439   0038F0  0E00               	movlw	0
  7440   0038F2  6F93               	movwf	pad@w& (0+255),b
  7441   0038F4                     l1348:
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  7445   0038F4  0E00               	movlw	0
  7446   0038F6  6F92               	movwf	(pad@i+1)& (0+255),b
  7447   0038F8  0E00               	movlw	0
  7448   0038FA  6F91               	movwf	pad@i& (0+255),b
  7449                           
  7450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7451   0038FC  EF8D  F01C         	goto	l5922
  7452   003900                     l5918:
  7453                           
  7454                           ; BSR set to: 0
  7455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  7456   003900  0E00               	movlw	0
  7457   003902  6F7B               	movwf	(fputc@c+1)& (0+255),b
  7458   003904  0E20               	movlw	32
  7459   003906  6F7A               	movwf	fputc@c& (0+255),b
  7460   003908  C08A  F07C         	movff	pad@fp,fputc@fp
  7461   00390C  C08B  F07D         	movff	pad@fp+1,fputc@fp+1
  7462   003910  EC05  F01D         	call	_fputc	;wreg free
  7463   003914                     
  7464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  7465   003914  0100               	movlb	0	; () banked
  7466   003916  4B91               	infsnz	pad@i& (0+255),f,b
  7467   003918  2B92               	incf	(pad@i+1)& (0+255),f,b
  7468   00391A                     l5922:
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  7472   00391A  5193               	movf	pad@w& (0+255),w,b
  7473   00391C  5D91               	subwf	pad@i& (0+255),w,b
  7474   00391E  5192               	movf	(pad@i+1)& (0+255),w,b
  7475   003920  0A80               	xorlw	128
  7476   003922  6F90               	movwf	??_pad& (0+255),b
  7477   003924  5194               	movf	(pad@w+1)& (0+255),w,b
  7478   003926  0A80               	xorlw	128
  7479   003928  5990               	subwfb	??_pad& (0+255),w,b
  7480   00392A  A0D8               	btfss	status,0,c
  7481   00392C  EF9A  F01C         	goto	u5851
  7482   003930  EF9C  F01C         	goto	u5850
  7483   003934                     u5851:
  7484   003934  EF80  F01C         	goto	l5918
  7485   003938                     u5850:
  7486   003938                     
  7487                           ; BSR set to: 0
  7488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  7489   003938  B1D4               	btfsc	_flags& (0+255),0,b
  7490   00393A  EFA1  F01C         	goto	u5861
  7491   00393E  EFA3  F01C         	goto	u5860
  7492   003942                     u5861:
  7493   003942  EFAD  F01C         	goto	l1353
  7494   003946                     u5860:
  7495   003946                     
  7496                           ; BSR set to: 0
  7497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  7498   003946  C08C  F083         	movff	pad@buf,fputs@s
  7499   00394A  C08D  F084         	movff	pad@buf+1,fputs@s+1
  7500   00394E  C08A  F085         	movff	pad@fp,fputs@fp
  7501   003952  C08B  F086         	movff	pad@fp+1,fputs@fp+1
  7502   003956  EC7F  F01E         	call	_fputs	;wreg free
  7503   00395A                     l1353:
  7504   00395A  0012               	return		;funcret
  7505   00395C                     __end_of_pad:
  7506                           	callstack 0
  7507                           
  7508 ;; *************** function _fputs *****************
  7509 ;; Defined at:
  7510 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  s               2   35[BANK0 ] PTR const unsigned char 
  7513 ;;		 -> dbuf(32), 
  7514 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  7515 ;;		 -> NULL(0), 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  i               2   40[BANK0 ] int 
  7518 ;;  c               1   39[BANK0 ] unsigned char 
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  2   35[BANK0 ] int 
  7521 ;; Registers used:
  7522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7528 ;;      Params:         0       4       0       0       0       0       0
  7529 ;;      Locals:         0       3       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0
  7531 ;;      Totals:         0       7       0       0       0       0       0
  7532 ;;Total ram usage:        7 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 14
  7535 ;; This function calls:
  7536 ;;		_fputc
  7537 ;; This function is called by:
  7538 ;;		_pad
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text14
  7543   003CFE                     __ptext14:
  7544                           	callstack 0
  7545   003CFE                     _fputs:
  7546                           	callstack 10
  7547   003CFE  0E00               	movlw	0
  7548   003D00  0100               	movlb	0	; () banked
  7549   003D02  6F89               	movwf	(fputs@i+1)& (0+255),b
  7550   003D04  0E00               	movlw	0
  7551   003D06  6F88               	movwf	fputs@i& (0+255),b
  7552   003D08  EF92  F01E         	goto	l5782
  7553   003D0C                     l5778:
  7554                           
  7555                           ; BSR set to: 0
  7556   003D0C  C087  F07A         	movff	fputs@c,fputc@c
  7557   003D10  6B7B               	clrf	(fputc@c+1)& (0+255),b
  7558   003D12  C085  F07C         	movff	fputs@fp,fputc@fp
  7559   003D16  C086  F07D         	movff	fputs@fp+1,fputc@fp+1
  7560   003D1A  EC05  F01D         	call	_fputc	;wreg free
  7561   003D1E  0100               	movlb	0	; () banked
  7562   003D20  4B88               	infsnz	fputs@i& (0+255),f,b
  7563   003D22  2B89               	incf	(fputs@i+1)& (0+255),f,b
  7564   003D24                     l5782:
  7565                           
  7566                           ; BSR set to: 0
  7567   003D24  5188               	movf	fputs@i& (0+255),w,b
  7568   003D26  2583               	addwf	fputs@s& (0+255),w,b
  7569   003D28  6ED9               	movwf	fsr2l,c
  7570   003D2A  5189               	movf	(fputs@i+1)& (0+255),w,b
  7571   003D2C  2184               	addwfc	(fputs@s+1)& (0+255),w,b
  7572   003D2E  6EDA               	movwf	fsr2h,c
  7573   003D30  50DF               	movf	indf2,w,c
  7574   003D32  6F87               	movwf	fputs@c& (0+255),b
  7575   003D34  5187               	movf	fputs@c& (0+255),w,b
  7576   003D36  A4D8               	btfss	status,2,c
  7577   003D38  EFA0  F01E         	goto	u5621
  7578   003D3C  EFA2  F01E         	goto	u5620
  7579   003D40                     u5621:
  7580   003D40  EF86  F01E         	goto	l5778
  7581   003D44                     u5620:
  7582   003D44                     
  7583                           ; BSR set to: 0
  7584   003D44  0012               	return		;funcret
  7585   003D46                     __end_of_fputs:
  7586                           	callstack 0
  7587                           
  7588 ;; *************** function _abs *****************
  7589 ;; Defined at:
  7590 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  a               2   42[BANK0 ] int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;		None
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  2   42[BANK0 ] int 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7604 ;;      Params:         0       2       0       0       0       0       0
  7605 ;;      Locals:         0       0       0       0       0       0       0
  7606 ;;      Temps:          0       2       0       0       0       0       0
  7607 ;;      Totals:         0       4       0       0       0       0       0
  7608 ;;Total ram usage:        4 bytes
  7609 ;; Hardware stack levels used: 1
  7610 ;; Hardware stack levels required when called: 11
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_dtoa
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text15
  7619   003E18                     __ptext15:
  7620                           	callstack 0
  7621   003E18                     _abs:
  7622                           	callstack 14
  7623   003E18  0100               	movlb	0	; () banked
  7624   003E1A  BF8B               	btfsc	(abs@a+1)& (0+255),7,b
  7625   003E1C  EF1A  F01F         	goto	u5870
  7626   003E20  518B               	movf	(abs@a+1)& (0+255),w,b
  7627   003E22  E106               	bnz	u5871
  7628   003E24  058A               	decf	abs@a& (0+255),w,b
  7629   003E26  B0D8               	btfsc	status,0,c
  7630   003E28  EF18  F01F         	goto	u5871
  7631   003E2C  EF1A  F01F         	goto	u5870
  7632   003E30                     u5871:
  7633   003E30  EF28  F01F         	goto	l1495
  7634   003E34                     u5870:
  7635   003E34                     
  7636                           ; BSR set to: 0
  7637   003E34  C08A  F08C         	movff	abs@a,??_abs
  7638   003E38  C08B  F08D         	movff	abs@a+1,??_abs+1
  7639   003E3C  1F8C               	comf	??_abs& (0+255),f,b
  7640   003E3E  1F8D               	comf	(??_abs+1)& (0+255),f,b
  7641   003E40  4B8C               	infsnz	??_abs& (0+255),f,b
  7642   003E42  2B8D               	incf	(??_abs+1)& (0+255),f,b
  7643   003E44  C08C  F08A         	movff	??_abs,?_abs
  7644   003E48  C08D  F08B         	movff	??_abs+1,?_abs+1
  7645   003E4C  EF2C  F01F         	goto	l1498
  7646   003E50                     l1495:
  7647                           
  7648                           ; BSR set to: 0
  7649   003E50  C08A  F08A         	movff	abs@a,?_abs
  7650   003E54  C08B  F08B         	movff	abs@a+1,?_abs+1
  7651   003E58                     l1498:
  7652                           
  7653                           ; BSR set to: 0
  7654   003E58  0012               	return		;funcret
  7655   003E5A                     __end_of_abs:
  7656                           	callstack 0
  7657                           
  7658 ;; *************** function ___aomod *****************
  7659 ;; Defined at:
  7660 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  dividend        8   24[BANK0 ] long long 
  7663 ;;  divisor         8   32[BANK0 ] long long 
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  sign            1   41[BANK0 ] unsigned char 
  7666 ;;  counter         1   40[BANK0 ] unsigned char 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  8   24[BANK0 ] long long 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7676 ;;      Params:         0      16       0       0       0       0       0
  7677 ;;      Locals:         0       2       0       0       0       0       0
  7678 ;;      Temps:          0       0       0       0       0       0       0
  7679 ;;      Totals:         0      18       0       0       0       0       0
  7680 ;;Total ram usage:       18 bytes
  7681 ;; Hardware stack levels used: 1
  7682 ;; Hardware stack levels required when called: 11
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_dtoa
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           	psect	text16
  7691   0028A6                     __ptext16:
  7692                           	callstack 0
  7693   0028A6                     ___aomod:
  7694                           	callstack 14
  7695   0028A6  0E00               	movlw	0
  7696   0028A8  0100               	movlb	0	; () banked
  7697   0028AA  6F89               	movwf	___aomod@sign& (0+255),b
  7698   0028AC                     
  7699                           ; BSR set to: 0
  7700   0028AC  BF7F               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  7701   0028AE  EF5D  F014         	goto	u5700
  7702   0028B2  EF5B  F014         	goto	u5701
  7703   0028B6                     u5701:
  7704   0028B6  EF6F  F014         	goto	l5842
  7705   0028BA                     u5700:
  7706   0028BA                     
  7707                           ; BSR set to: 0
  7708   0028BA  1F7F               	comf	(___aomod@dividend+7)& (0+255),f,b
  7709   0028BC  1F7E               	comf	(___aomod@dividend+6)& (0+255),f,b
  7710   0028BE  1F7D               	comf	(___aomod@dividend+5)& (0+255),f,b
  7711   0028C0  1F7C               	comf	(___aomod@dividend+4)& (0+255),f,b
  7712   0028C2  1F7B               	comf	(___aomod@dividend+3)& (0+255),f,b
  7713   0028C4  1F7A               	comf	(___aomod@dividend+2)& (0+255),f,b
  7714   0028C6  1F79               	comf	(___aomod@dividend+1)& (0+255),f,b
  7715   0028C8  6D78               	negf	___aomod@dividend& (0+255),b
  7716   0028CA  0E00               	movlw	0
  7717   0028CC  2379               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  7718   0028CE  237A               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  7719   0028D0  237B               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  7720   0028D2  237C               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  7721   0028D4  237D               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  7722   0028D6  237E               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  7723   0028D8  237F               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  7724   0028DA                     
  7725                           ; BSR set to: 0
  7726   0028DA  0E01               	movlw	1
  7727   0028DC  6F89               	movwf	___aomod@sign& (0+255),b
  7728   0028DE                     l5842:
  7729                           
  7730                           ; BSR set to: 0
  7731   0028DE  BF87               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  7732   0028E0  EF76  F014         	goto	u5710
  7733   0028E4  EF74  F014         	goto	u5711
  7734   0028E8                     u5711:
  7735   0028E8  EF86  F014         	goto	l5846
  7736   0028EC                     u5710:
  7737   0028EC                     
  7738                           ; BSR set to: 0
  7739   0028EC  1F87               	comf	(___aomod@divisor+7)& (0+255),f,b
  7740   0028EE  1F86               	comf	(___aomod@divisor+6)& (0+255),f,b
  7741   0028F0  1F85               	comf	(___aomod@divisor+5)& (0+255),f,b
  7742   0028F2  1F84               	comf	(___aomod@divisor+4)& (0+255),f,b
  7743   0028F4  1F83               	comf	(___aomod@divisor+3)& (0+255),f,b
  7744   0028F6  1F82               	comf	(___aomod@divisor+2)& (0+255),f,b
  7745   0028F8  1F81               	comf	(___aomod@divisor+1)& (0+255),f,b
  7746   0028FA  6D80               	negf	___aomod@divisor& (0+255),b
  7747   0028FC  0E00               	movlw	0
  7748   0028FE  2381               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  7749   002900  2382               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  7750   002902  2383               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  7751   002904  2384               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  7752   002906  2385               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  7753   002908  2386               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  7754   00290A  2387               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  7755   00290C                     l5846:
  7756                           
  7757                           ; BSR set to: 0
  7758   00290C  5180               	movf	___aomod@divisor& (0+255),w,b
  7759   00290E  1181               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  7760   002910  1182               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  7761   002912  1183               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  7762   002914  1184               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  7763   002916  1185               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  7764   002918  1186               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  7765   00291A  1187               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  7766   00291C  B4D8               	btfsc	status,2,c
  7767   00291E  EF93  F014         	goto	u5721
  7768   002922  EF95  F014         	goto	u5720
  7769   002926                     u5721:
  7770   002926  EFDD  F014         	goto	l5862
  7771   00292A                     u5720:
  7772   00292A                     
  7773                           ; BSR set to: 0
  7774   00292A  0E01               	movlw	1
  7775   00292C  6F88               	movwf	___aomod@counter& (0+255),b
  7776   00292E  EFA3  F014         	goto	l5852
  7777   002932                     l5850:
  7778                           
  7779                           ; BSR set to: 0
  7780   002932  90D8               	bcf	status,0,c
  7781   002934  3780               	rlcf	___aomod@divisor& (0+255),f,b
  7782   002936  3781               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  7783   002938  3782               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  7784   00293A  3783               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  7785   00293C  3784               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  7786   00293E  3785               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  7787   002940  3786               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  7788   002942  3787               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  7789   002944  2B88               	incf	___aomod@counter& (0+255),f,b
  7790   002946                     l5852:
  7791                           
  7792                           ; BSR set to: 0
  7793   002946  AF87               	btfss	(___aomod@divisor+7)& (0+255),7,b
  7794   002948  EFA8  F014         	goto	u5731
  7795   00294C  EFAA  F014         	goto	u5730
  7796   002950                     u5731:
  7797   002950  EF99  F014         	goto	l5850
  7798   002954                     u5730:
  7799   002954                     l5854:
  7800                           
  7801                           ; BSR set to: 0
  7802   002954  5180               	movf	___aomod@divisor& (0+255),w,b
  7803   002956  5D78               	subwf	___aomod@dividend& (0+255),w,b
  7804   002958  5181               	movf	(___aomod@divisor+1)& (0+255),w,b
  7805   00295A  5979               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  7806   00295C  5182               	movf	(___aomod@divisor+2)& (0+255),w,b
  7807   00295E  597A               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  7808   002960  5183               	movf	(___aomod@divisor+3)& (0+255),w,b
  7809   002962  597B               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  7810   002964  5184               	movf	(___aomod@divisor+4)& (0+255),w,b
  7811   002966  597C               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  7812   002968  5185               	movf	(___aomod@divisor+5)& (0+255),w,b
  7813   00296A  597D               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  7814   00296C  5186               	movf	(___aomod@divisor+6)& (0+255),w,b
  7815   00296E  597E               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  7816   002970  5187               	movf	(___aomod@divisor+7)& (0+255),w,b
  7817   002972  597F               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  7818   002974  A0D8               	btfss	status,0,c
  7819   002976  EFBF  F014         	goto	u5741
  7820   00297A  EFC1  F014         	goto	u5740
  7821   00297E                     u5741:
  7822   00297E  EFD1  F014         	goto	l5858
  7823   002982                     u5740:
  7824   002982                     
  7825                           ; BSR set to: 0
  7826   002982  5180               	movf	___aomod@divisor& (0+255),w,b
  7827   002984  5F78               	subwf	___aomod@dividend& (0+255),f,b
  7828   002986  5181               	movf	(___aomod@divisor+1)& (0+255),w,b
  7829   002988  5B79               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  7830   00298A  5182               	movf	(___aomod@divisor+2)& (0+255),w,b
  7831   00298C  5B7A               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  7832   00298E  5183               	movf	(___aomod@divisor+3)& (0+255),w,b
  7833   002990  5B7B               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  7834   002992  5184               	movf	(___aomod@divisor+4)& (0+255),w,b
  7835   002994  5B7C               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  7836   002996  5185               	movf	(___aomod@divisor+5)& (0+255),w,b
  7837   002998  5B7D               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  7838   00299A  5186               	movf	(___aomod@divisor+6)& (0+255),w,b
  7839   00299C  5B7E               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  7840   00299E  5187               	movf	(___aomod@divisor+7)& (0+255),w,b
  7841   0029A0  5B7F               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  7842   0029A2                     l5858:
  7843                           
  7844                           ; BSR set to: 0
  7845   0029A2  90D8               	bcf	status,0,c
  7846   0029A4  3387               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  7847   0029A6  3386               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  7848   0029A8  3385               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  7849   0029AA  3384               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  7850   0029AC  3383               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  7851   0029AE  3382               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  7852   0029B0  3381               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  7853   0029B2  3380               	rrcf	___aomod@divisor& (0+255),f,b
  7854   0029B4                     
  7855                           ; BSR set to: 0
  7856   0029B4  2F88               	decfsz	___aomod@counter& (0+255),f,b
  7857   0029B6  EFAA  F014         	goto	l5854
  7858   0029BA                     l5862:
  7859                           
  7860                           ; BSR set to: 0
  7861   0029BA  5189               	movf	___aomod@sign& (0+255),w,b
  7862   0029BC  B4D8               	btfsc	status,2,c
  7863   0029BE  EFE3  F014         	goto	u5751
  7864   0029C2  EFE5  F014         	goto	u5750
  7865   0029C6                     u5751:
  7866   0029C6  EFF5  F014         	goto	l5866
  7867   0029CA                     u5750:
  7868   0029CA                     
  7869                           ; BSR set to: 0
  7870   0029CA  1F7F               	comf	(___aomod@dividend+7)& (0+255),f,b
  7871   0029CC  1F7E               	comf	(___aomod@dividend+6)& (0+255),f,b
  7872   0029CE  1F7D               	comf	(___aomod@dividend+5)& (0+255),f,b
  7873   0029D0  1F7C               	comf	(___aomod@dividend+4)& (0+255),f,b
  7874   0029D2  1F7B               	comf	(___aomod@dividend+3)& (0+255),f,b
  7875   0029D4  1F7A               	comf	(___aomod@dividend+2)& (0+255),f,b
  7876   0029D6  1F79               	comf	(___aomod@dividend+1)& (0+255),f,b
  7877   0029D8  6D78               	negf	___aomod@dividend& (0+255),b
  7878   0029DA  0E00               	movlw	0
  7879   0029DC  2379               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  7880   0029DE  237A               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  7881   0029E0  237B               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  7882   0029E2  237C               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  7883   0029E4  237D               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  7884   0029E6  237E               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  7885   0029E8  237F               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  7886   0029EA                     l5866:
  7887                           
  7888                           ; BSR set to: 0
  7889   0029EA  C078  F078         	movff	___aomod@dividend,?___aomod
  7890   0029EE  C079  F079         	movff	___aomod@dividend+1,?___aomod+1
  7891   0029F2  C07A  F07A         	movff	___aomod@dividend+2,?___aomod+2
  7892   0029F6  C07B  F07B         	movff	___aomod@dividend+3,?___aomod+3
  7893   0029FA  C07C  F07C         	movff	___aomod@dividend+4,?___aomod+4
  7894   0029FE  C07D  F07D         	movff	___aomod@dividend+5,?___aomod+5
  7895   002A02  C07E  F07E         	movff	___aomod@dividend+6,?___aomod+6
  7896   002A06  C07F  F07F         	movff	___aomod@dividend+7,?___aomod+7
  7897   002A0A                     
  7898                           ; BSR set to: 0
  7899   002A0A  0012               	return		;funcret
  7900   002A0C                     __end_of___aomod:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function ___aodiv *****************
  7904 ;; Defined at:
  7905 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  dividend        8   24[BANK0 ] long long 
  7908 ;;  divisor         8   32[BANK0 ] long long 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  quotient        8   42[BANK0 ] long long 
  7911 ;;  sign            1   41[BANK0 ] unsigned char 
  7912 ;;  counter         1   40[BANK0 ] unsigned char 
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  8   24[BANK0 ] long long 
  7915 ;; Registers used:
  7916 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7922 ;;      Params:         0      16       0       0       0       0       0
  7923 ;;      Locals:         0      10       0       0       0       0       0
  7924 ;;      Temps:          0       0       0       0       0       0       0
  7925 ;;      Totals:         0      26       0       0       0       0       0
  7926 ;;Total ram usage:       26 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; Hardware stack levels required when called: 11
  7929 ;; This function calls:
  7930 ;;		Nothing
  7931 ;; This function is called by:
  7932 ;;		_dtoa
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text17
  7937   00211A                     __ptext17:
  7938                           	callstack 0
  7939   00211A                     ___aodiv:
  7940                           	callstack 14
  7941   00211A  0E00               	movlw	0
  7942   00211C  0100               	movlb	0	; () banked
  7943   00211E  6F89               	movwf	___aodiv@sign& (0+255),b
  7944   002120                     
  7945                           ; BSR set to: 0
  7946   002120  BF87               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  7947   002122  EF97  F010         	goto	u5630
  7948   002126  EF95  F010         	goto	u5631
  7949   00212A                     u5631:
  7950   00212A  EFA9  F010         	goto	l5798
  7951   00212E                     u5630:
  7952   00212E                     
  7953                           ; BSR set to: 0
  7954   00212E  1F87               	comf	(___aodiv@divisor+7)& (0+255),f,b
  7955   002130  1F86               	comf	(___aodiv@divisor+6)& (0+255),f,b
  7956   002132  1F85               	comf	(___aodiv@divisor+5)& (0+255),f,b
  7957   002134  1F84               	comf	(___aodiv@divisor+4)& (0+255),f,b
  7958   002136  1F83               	comf	(___aodiv@divisor+3)& (0+255),f,b
  7959   002138  1F82               	comf	(___aodiv@divisor+2)& (0+255),f,b
  7960   00213A  1F81               	comf	(___aodiv@divisor+1)& (0+255),f,b
  7961   00213C  6D80               	negf	___aodiv@divisor& (0+255),b
  7962   00213E  0E00               	movlw	0
  7963   002140  2381               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  7964   002142  2382               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  7965   002144  2383               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  7966   002146  2384               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  7967   002148  2385               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  7968   00214A  2386               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  7969   00214C  2387               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  7970   00214E                     
  7971                           ; BSR set to: 0
  7972   00214E  0E01               	movlw	1
  7973   002150  6F89               	movwf	___aodiv@sign& (0+255),b
  7974   002152                     l5798:
  7975                           
  7976                           ; BSR set to: 0
  7977   002152  BF7F               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  7978   002154  EFB0  F010         	goto	u5640
  7979   002158  EFAE  F010         	goto	u5641
  7980   00215C                     u5641:
  7981   00215C  EFC2  F010         	goto	l5804
  7982   002160                     u5640:
  7983   002160                     
  7984                           ; BSR set to: 0
  7985   002160  1F7F               	comf	(___aodiv@dividend+7)& (0+255),f,b
  7986   002162  1F7E               	comf	(___aodiv@dividend+6)& (0+255),f,b
  7987   002164  1F7D               	comf	(___aodiv@dividend+5)& (0+255),f,b
  7988   002166  1F7C               	comf	(___aodiv@dividend+4)& (0+255),f,b
  7989   002168  1F7B               	comf	(___aodiv@dividend+3)& (0+255),f,b
  7990   00216A  1F7A               	comf	(___aodiv@dividend+2)& (0+255),f,b
  7991   00216C  1F79               	comf	(___aodiv@dividend+1)& (0+255),f,b
  7992   00216E  6D78               	negf	___aodiv@dividend& (0+255),b
  7993   002170  0E00               	movlw	0
  7994   002172  2379               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  7995   002174  237A               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  7996   002176  237B               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  7997   002178  237C               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  7998   00217A  237D               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  7999   00217C  237E               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  8000   00217E  237F               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  8001   002180                     
  8002                           ; BSR set to: 0
  8003   002180  0E01               	movlw	1
  8004   002182  1B89               	xorwf	___aodiv@sign& (0+255),f,b
  8005   002184                     l5804:
  8006                           
  8007                           ; BSR set to: 0
  8008   002184  EE20  F08A         	lfsr	2,___aodiv@quotient
  8009   002188  0E07               	movlw	7
  8010   00218A                     u5651:
  8011   00218A  6ADE               	clrf	postinc2,c
  8012   00218C  06E8               	decf	wreg,f,c
  8013   00218E  E2FD               	bc	u5651
  8014   002190                     
  8015                           ; BSR set to: 0
  8016   002190  5180               	movf	___aodiv@divisor& (0+255),w,b
  8017   002192  1181               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  8018   002194  1182               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  8019   002196  1183               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  8020   002198  1184               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  8021   00219A  1185               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  8022   00219C  1186               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  8023   00219E  1187               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  8024   0021A0  B4D8               	btfsc	status,2,c
  8025   0021A2  EFD5  F010         	goto	u5661
  8026   0021A6  EFD7  F010         	goto	u5660
  8027   0021AA                     u5661:
  8028   0021AA  EF29  F011         	goto	l5826
  8029   0021AE                     u5660:
  8030   0021AE                     
  8031                           ; BSR set to: 0
  8032   0021AE  0E01               	movlw	1
  8033   0021B0  6F88               	movwf	___aodiv@counter& (0+255),b
  8034   0021B2  EFE5  F010         	goto	l5812
  8035   0021B6                     l5810:
  8036                           
  8037                           ; BSR set to: 0
  8038   0021B6  90D8               	bcf	status,0,c
  8039   0021B8  3780               	rlcf	___aodiv@divisor& (0+255),f,b
  8040   0021BA  3781               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  8041   0021BC  3782               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  8042   0021BE  3783               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  8043   0021C0  3784               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  8044   0021C2  3785               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  8045   0021C4  3786               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  8046   0021C6  3787               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  8047   0021C8  2B88               	incf	___aodiv@counter& (0+255),f,b
  8048   0021CA                     l5812:
  8049                           
  8050                           ; BSR set to: 0
  8051   0021CA  AF87               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  8052   0021CC  EFEA  F010         	goto	u5671
  8053   0021D0  EFEC  F010         	goto	u5670
  8054   0021D4                     u5671:
  8055   0021D4  EFDB  F010         	goto	l5810
  8056   0021D8                     u5670:
  8057   0021D8                     l5814:
  8058                           
  8059                           ; BSR set to: 0
  8060   0021D8  90D8               	bcf	status,0,c
  8061   0021DA  378A               	rlcf	___aodiv@quotient& (0+255),f,b
  8062   0021DC  378B               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  8063   0021DE  378C               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  8064   0021E0  378D               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  8065   0021E2  378E               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  8066   0021E4  378F               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  8067   0021E6  3790               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  8068   0021E8  3791               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  8069   0021EA                     
  8070                           ; BSR set to: 0
  8071   0021EA  5180               	movf	___aodiv@divisor& (0+255),w,b
  8072   0021EC  5D78               	subwf	___aodiv@dividend& (0+255),w,b
  8073   0021EE  5181               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8074   0021F0  5979               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  8075   0021F2  5182               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8076   0021F4  597A               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  8077   0021F6  5183               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8078   0021F8  597B               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  8079   0021FA  5184               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8080   0021FC  597C               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  8081   0021FE  5185               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8082   002200  597D               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  8083   002202  5186               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8084   002204  597E               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  8085   002206  5187               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8086   002208  597F               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  8087   00220A  A0D8               	btfss	status,0,c
  8088   00220C  EF0A  F011         	goto	u5681
  8089   002210  EF0C  F011         	goto	u5680
  8090   002214                     u5681:
  8091   002214  EF1D  F011         	goto	l5822
  8092   002218                     u5680:
  8093   002218                     
  8094                           ; BSR set to: 0
  8095   002218  5180               	movf	___aodiv@divisor& (0+255),w,b
  8096   00221A  5F78               	subwf	___aodiv@dividend& (0+255),f,b
  8097   00221C  5181               	movf	(___aodiv@divisor+1)& (0+255),w,b
  8098   00221E  5B79               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  8099   002220  5182               	movf	(___aodiv@divisor+2)& (0+255),w,b
  8100   002222  5B7A               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  8101   002224  5183               	movf	(___aodiv@divisor+3)& (0+255),w,b
  8102   002226  5B7B               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  8103   002228  5184               	movf	(___aodiv@divisor+4)& (0+255),w,b
  8104   00222A  5B7C               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  8105   00222C  5185               	movf	(___aodiv@divisor+5)& (0+255),w,b
  8106   00222E  5B7D               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  8107   002230  5186               	movf	(___aodiv@divisor+6)& (0+255),w,b
  8108   002232  5B7E               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  8109   002234  5187               	movf	(___aodiv@divisor+7)& (0+255),w,b
  8110   002236  5B7F               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  8111   002238                     
  8112                           ; BSR set to: 0
  8113   002238  818A               	bsf	___aodiv@quotient& (0+255),0,b
  8114   00223A                     l5822:
  8115                           
  8116                           ; BSR set to: 0
  8117   00223A  90D8               	bcf	status,0,c
  8118   00223C  3387               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  8119   00223E  3386               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  8120   002240  3385               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  8121   002242  3384               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  8122   002244  3383               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  8123   002246  3382               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  8124   002248  3381               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  8125   00224A  3380               	rrcf	___aodiv@divisor& (0+255),f,b
  8126   00224C                     
  8127                           ; BSR set to: 0
  8128   00224C  2F88               	decfsz	___aodiv@counter& (0+255),f,b
  8129   00224E  EFEC  F010         	goto	l5814
  8130   002252                     l5826:
  8131                           
  8132                           ; BSR set to: 0
  8133   002252  5189               	movf	___aodiv@sign& (0+255),w,b
  8134   002254  B4D8               	btfsc	status,2,c
  8135   002256  EF2F  F011         	goto	u5691
  8136   00225A  EF31  F011         	goto	u5690
  8137   00225E                     u5691:
  8138   00225E  EF41  F011         	goto	l5830
  8139   002262                     u5690:
  8140   002262                     
  8141                           ; BSR set to: 0
  8142   002262  1F91               	comf	(___aodiv@quotient+7)& (0+255),f,b
  8143   002264  1F90               	comf	(___aodiv@quotient+6)& (0+255),f,b
  8144   002266  1F8F               	comf	(___aodiv@quotient+5)& (0+255),f,b
  8145   002268  1F8E               	comf	(___aodiv@quotient+4)& (0+255),f,b
  8146   00226A  1F8D               	comf	(___aodiv@quotient+3)& (0+255),f,b
  8147   00226C  1F8C               	comf	(___aodiv@quotient+2)& (0+255),f,b
  8148   00226E  1F8B               	comf	(___aodiv@quotient+1)& (0+255),f,b
  8149   002270  6D8A               	negf	___aodiv@quotient& (0+255),b
  8150   002272  0E00               	movlw	0
  8151   002274  238B               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  8152   002276  238C               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  8153   002278  238D               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  8154   00227A  238E               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  8155   00227C  238F               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  8156   00227E  2390               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  8157   002280  2391               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  8158   002282                     l5830:
  8159                           
  8160                           ; BSR set to: 0
  8161   002282  C08A  F078         	movff	___aodiv@quotient,?___aodiv
  8162   002286  C08B  F079         	movff	___aodiv@quotient+1,?___aodiv+1
  8163   00228A  C08C  F07A         	movff	___aodiv@quotient+2,?___aodiv+2
  8164   00228E  C08D  F07B         	movff	___aodiv@quotient+3,?___aodiv+3
  8165   002292  C08E  F07C         	movff	___aodiv@quotient+4,?___aodiv+4
  8166   002296  C08F  F07D         	movff	___aodiv@quotient+5,?___aodiv+5
  8167   00229A  C090  F07E         	movff	___aodiv@quotient+6,?___aodiv+6
  8168   00229E  C091  F07F         	movff	___aodiv@quotient+7,?___aodiv+7
  8169   0022A2                     
  8170                           ; BSR set to: 0
  8171   0022A2  0012               	return		;funcret
  8172   0022A4                     __end_of___aodiv:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function _ctoa *****************
  8176 ;; Defined at:
  8177 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  8180 ;;		 -> NULL(0), 
  8181 ;;  c               1   37[BANK0 ] unsigned char 
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;  w               2   41[BANK0 ] int 
  8184 ;;  l               2   39[BANK0 ] int 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8194 ;;      Params:         0       3       0       0       0       0       0
  8195 ;;      Locals:         0       4       0       0       0       0       0
  8196 ;;      Temps:          0       1       0       0       0       0       0
  8197 ;;      Totals:         0       8       0       0       0       0       0
  8198 ;;Total ram usage:        8 bytes
  8199 ;; Hardware stack levels used: 1
  8200 ;; Hardware stack levels required when called: 14
  8201 ;; This function calls:
  8202 ;;		_fputc
  8203 ;; This function is called by:
  8204 ;;		_vfpfcnvrt
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text18
  8209   003584                     __ptext18:
  8210                           	callstack 0
  8211   003584                     _ctoa:
  8212                           	callstack 12
  8213   003584                     
  8214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  8215   003584  0100               	movlb	0	; () banked
  8216   003586  51CE               	movf	_width& (0+255),w,b
  8217   003588  11CF               	iorwf	(_width+1)& (0+255),w,b
  8218   00358A  A4D8               	btfss	status,2,c
  8219   00358C  EFCA  F01A         	goto	u5931
  8220   003590  EFCC  F01A         	goto	u5930
  8221   003594                     u5931:
  8222   003594  EFD2  F01A         	goto	l5960
  8223   003598                     u5930:
  8224   003598                     
  8225                           ; BSR set to: 0
  8226   003598  C0CE  F089         	movff	_width,ctoa@w
  8227   00359C  C0CF  F08A         	movff	_width+1,ctoa@w+1
  8228   0035A0  EFD8  F01A         	goto	l5962
  8229   0035A4                     l5960:
  8230                           
  8231                           ; BSR set to: 0
  8232   0035A4  0EFF               	movlw	255
  8233   0035A6  25CE               	addwf	_width& (0+255),w,b
  8234   0035A8  6F89               	movwf	ctoa@w& (0+255),b
  8235   0035AA  0EFF               	movlw	255
  8236   0035AC  21CF               	addwfc	(_width+1)& (0+255),w,b
  8237   0035AE  6F8A               	movwf	(ctoa@w+1)& (0+255),b
  8238   0035B0                     l5962:
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  8242   0035B0  A1D4               	btfss	_flags& (0+255),0,b
  8243   0035B2  EFDD  F01A         	goto	u5941
  8244   0035B6  EFDF  F01A         	goto	u5940
  8245   0035BA                     u5941:
  8246   0035BA  EFE8  F01A         	goto	l5966
  8247   0035BE                     u5940:
  8248   0035BE                     
  8249                           ; BSR set to: 0
  8250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  8251   0035BE  C085  F07A         	movff	ctoa@c,fputc@c
  8252   0035C2  6B7B               	clrf	(fputc@c+1)& (0+255),b
  8253   0035C4  C083  F07C         	movff	ctoa@fp,fputc@fp
  8254   0035C8  C084  F07D         	movff	ctoa@fp+1,fputc@fp+1
  8255   0035CC  EC05  F01D         	call	_fputc	;wreg free
  8256   0035D0                     l5966:
  8257                           
  8258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  8259   0035D0  0100               	movlb	0	; () banked
  8260   0035D2  BF8A               	btfsc	(ctoa@w+1)& (0+255),7,b
  8261   0035D4  EFEE  F01A         	goto	u5951
  8262   0035D8  EFF0  F01A         	goto	u5950
  8263   0035DC                     u5951:
  8264   0035DC  EFF2  F01A         	goto	l5970
  8265   0035E0                     u5950:
  8266   0035E0  EFF6  F01A         	goto	l1364
  8267   0035E4                     l5970:
  8268                           
  8269                           ; BSR set to: 0
  8270   0035E4  0E00               	movlw	0
  8271   0035E6  6F8A               	movwf	(ctoa@w+1)& (0+255),b
  8272   0035E8  0E00               	movlw	0
  8273   0035EA  6F89               	movwf	ctoa@w& (0+255),b
  8274   0035EC                     l1364:
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  8278   0035EC  0E00               	movlw	0
  8279   0035EE  6F88               	movwf	(ctoa@l+1)& (0+255),b
  8280   0035F0  0E00               	movlw	0
  8281   0035F2  6F87               	movwf	ctoa@l& (0+255),b
  8282                           
  8283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  8284   0035F4  EF09  F01B         	goto	l5976
  8285   0035F8                     l5972:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  8289   0035F8  0E00               	movlw	0
  8290   0035FA  6F7B               	movwf	(fputc@c+1)& (0+255),b
  8291   0035FC  0E20               	movlw	32
  8292   0035FE  6F7A               	movwf	fputc@c& (0+255),b
  8293   003600  C083  F07C         	movff	ctoa@fp,fputc@fp
  8294   003604  C084  F07D         	movff	ctoa@fp+1,fputc@fp+1
  8295   003608  EC05  F01D         	call	_fputc	;wreg free
  8296   00360C                     
  8297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  8298   00360C  0100               	movlb	0	; () banked
  8299   00360E  4B87               	infsnz	ctoa@l& (0+255),f,b
  8300   003610  2B88               	incf	(ctoa@l+1)& (0+255),f,b
  8301   003612                     l5976:
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  8305   003612  5189               	movf	ctoa@w& (0+255),w,b
  8306   003614  5D87               	subwf	ctoa@l& (0+255),w,b
  8307   003616  5188               	movf	(ctoa@l+1)& (0+255),w,b
  8308   003618  0A80               	xorlw	128
  8309   00361A  6F86               	movwf	??_ctoa& (0+255),b
  8310   00361C  518A               	movf	(ctoa@w+1)& (0+255),w,b
  8311   00361E  0A80               	xorlw	128
  8312   003620  5986               	subwfb	??_ctoa& (0+255),w,b
  8313   003622  A0D8               	btfss	status,0,c
  8314   003624  EF16  F01B         	goto	u5961
  8315   003628  EF18  F01B         	goto	u5960
  8316   00362C                     u5961:
  8317   00362C  EFFC  F01A         	goto	l5972
  8318   003630                     u5960:
  8319   003630                     
  8320                           ; BSR set to: 0
  8321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  8322   003630  B1D4               	btfsc	_flags& (0+255),0,b
  8323   003632  EF1D  F01B         	goto	u5971
  8324   003636  EF1F  F01B         	goto	u5970
  8325   00363A                     u5971:
  8326   00363A  EF28  F01B         	goto	l1369
  8327   00363E                     u5970:
  8328   00363E                     
  8329                           ; BSR set to: 0
  8330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  8331   00363E  C085  F07A         	movff	ctoa@c,fputc@c
  8332   003642  6B7B               	clrf	(fputc@c+1)& (0+255),b
  8333   003644  C083  F07C         	movff	ctoa@fp,fputc@fp
  8334   003648  C084  F07D         	movff	ctoa@fp+1,fputc@fp+1
  8335   00364C  EC05  F01D         	call	_fputc	;wreg free
  8336   003650                     l1369:
  8337   003650  0012               	return		;funcret
  8338   003652                     __end_of_ctoa:
  8339                           	callstack 0
  8340                           
  8341 ;; *************** function _fputc *****************
  8342 ;; Defined at:
  8343 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;  c               2   26[BANK0 ] int 
  8346 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  8347 ;;		 -> NULL(0), 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  2   26[BANK0 ] int 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8359 ;;      Params:         0       4       0       0       0       0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0
  8361 ;;      Temps:          0       5       0       0       0       0       0
  8362 ;;      Totals:         0       9       0       0       0       0       0
  8363 ;;Total ram usage:        9 bytes
  8364 ;; Hardware stack levels used: 1
  8365 ;; Hardware stack levels required when called: 13
  8366 ;; This function calls:
  8367 ;;		_putch
  8368 ;; This function is called by:
  8369 ;;		_pad
  8370 ;;		_ctoa
  8371 ;;		_stoa
  8372 ;;		_vfpfcnvrt
  8373 ;;		_fputs
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text19
  8378   003A0A                     __ptext19:
  8379                           	callstack 0
  8380   003A0A                     _fputc:
  8381                           	callstack 10
  8382   003A0A  0100               	movlb	0	; () banked
  8383   003A0C  517C               	movf	fputc@fp& (0+255),w,b
  8384   003A0E  117D               	iorwf	(fputc@fp+1)& (0+255),w,b
  8385   003A10  B4D8               	btfsc	status,2,c
  8386   003A12  EF0D  F01D         	goto	u5581
  8387   003A16  EF0F  F01D         	goto	u5580
  8388   003A1A                     u5581:
  8389   003A1A  EF18  F01D         	goto	l5766
  8390   003A1E                     u5580:
  8391   003A1E                     
  8392                           ; BSR set to: 0
  8393   003A1E  517C               	movf	fputc@fp& (0+255),w,b
  8394   003A20  117D               	iorwf	(fputc@fp+1)& (0+255),w,b
  8395   003A22  A4D8               	btfss	status,2,c
  8396   003A24  EF16  F01D         	goto	u5591
  8397   003A28  EF18  F01D         	goto	u5590
  8398   003A2C                     u5591:
  8399   003A2C  EF1D  F01D         	goto	l5768
  8400   003A30                     u5590:
  8401   003A30                     l5766:
  8402                           
  8403                           ; BSR set to: 0
  8404   003A30  517A               	movf	fputc@c& (0+255),w,b
  8405   003A32  EC67  F021         	call	_putch
  8406   003A36  EF50  F01D         	goto	l1549
  8407   003A3A                     l5768:
  8408                           
  8409                           ; BSR set to: 0
  8410   003A3A  EE20 F009          	lfsr	2,9
  8411   003A3E  517C               	movf	fputc@fp& (0+255),w,b
  8412   003A40  26D9               	addwf	fsr2l,f,c
  8413   003A42  517D               	movf	(fputc@fp+1)& (0+255),w,b
  8414   003A44  22DA               	addwfc	fsr2h,f,c
  8415   003A46  50DE               	movf	postinc2,w,c
  8416   003A48  10DE               	iorwf	postinc2,w,c
  8417   003A4A  B4D8               	btfsc	status,2,c
  8418   003A4C  EF2A  F01D         	goto	u5601
  8419   003A50  EF2C  F01D         	goto	u5600
  8420   003A54                     u5601:
  8421   003A54  EF47  F01D         	goto	l5772
  8422   003A58                     u5600:
  8423   003A58                     
  8424                           ; BSR set to: 0
  8425   003A58  EE20 F009          	lfsr	2,9
  8426   003A5C  517C               	movf	fputc@fp& (0+255),w,b
  8427   003A5E  26D9               	addwf	fsr2l,f,c
  8428   003A60  517D               	movf	(fputc@fp+1)& (0+255),w,b
  8429   003A62  22DA               	addwfc	fsr2h,f,c
  8430   003A64  EE10 F003          	lfsr	1,3
  8431   003A68  517C               	movf	fputc@fp& (0+255),w,b
  8432   003A6A  26E1               	addwf	fsr1l,f,c
  8433   003A6C  517D               	movf	(fputc@fp+1)& (0+255),w,b
  8434   003A6E  22E2               	addwfc	fsr1h,f,c
  8435   003A70  50DE               	movf	postinc2,w,c
  8436   003A72  5CE6               	subwf	postinc1,w,c
  8437   003A74  50E6               	movf	postinc1,w,c
  8438   003A76  0A80               	xorlw	128
  8439   003A78  6F82               	movwf	(??_fputc+4)& (0+255),b
  8440   003A7A  50DE               	movf	postinc2,w,c
  8441   003A7C  0A80               	xorlw	128
  8442   003A7E  5982               	subwfb	(??_fputc+4)& (0+255),w,b
  8443   003A80  B0D8               	btfsc	status,0,c
  8444   003A82  EF45  F01D         	goto	u5611
  8445   003A86  EF47  F01D         	goto	u5610
  8446   003A8A                     u5611:
  8447   003A8A  EF50  F01D         	goto	l1549
  8448   003A8E                     u5610:
  8449   003A8E                     l5772:
  8450                           
  8451                           ; BSR set to: 0
  8452   003A8E  EE20 F003          	lfsr	2,3
  8453   003A92  517C               	movf	fputc@fp& (0+255),w,b
  8454   003A94  26D9               	addwf	fsr2l,f,c
  8455   003A96  517D               	movf	(fputc@fp+1)& (0+255),w,b
  8456   003A98  22DA               	addwfc	fsr2h,f,c
  8457   003A9A  2ADE               	incf	postinc2,f,c
  8458   003A9C  0E00               	movlw	0
  8459   003A9E  22DD               	addwfc	postdec2,f,c
  8460   003AA0                     l1549:
  8461   003AA0  0012               	return		;funcret
  8462   003AA2                     __end_of_fputc:
  8463                           	callstack 0
  8464                           
  8465 ;; *************** function _putch *****************
  8466 ;; Defined at:
  8467 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;  txData          1    wreg     unsigned char 
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;  txData          1   25[BANK0 ] unsigned char 
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8481 ;;      Params:         0       0       0       0       0       0       0
  8482 ;;      Locals:         0       1       0       0       0       0       0
  8483 ;;      Temps:          0       0       0       0       0       0       0
  8484 ;;      Totals:         0       1       0       0       0       0       0
  8485 ;;Total ram usage:        1 bytes
  8486 ;; Hardware stack levels used: 1
  8487 ;; Hardware stack levels required when called: 12
  8488 ;; This function calls:
  8489 ;;		_EUSART1_Write
  8490 ;; This function is called by:
  8491 ;;		_fputc
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text20
  8496   0042CE                     __ptext20:
  8497                           	callstack 0
  8498   0042CE                     _putch:
  8499                           	callstack 10
  8500                           
  8501                           ;incstack = 0
  8502                           ;putch@txData stored from wreg
  8503   0042CE  0100               	movlb	0	; () banked
  8504   0042D0  6F79               	movwf	putch@txData& (0+255),b
  8505   0042D2                     
  8506                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  8507   0042D2  0100               	movlb	0	; () banked
  8508   0042D4  5179               	movf	putch@txData& (0+255),w,b
  8509   0042D6  EC28  F021         	call	_EUSART1_Write
  8510   0042DA  0012               	return		;funcret
  8511   0042DC                     __end_of_putch:
  8512                           	callstack 0
  8513                           
  8514 ;; *************** function _EUSART1_Write *****************
  8515 ;; Defined at:
  8516 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  8517 ;; Parameters:    Size  Location     Type
  8518 ;;  txData          1    wreg     unsigned char 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  txData          1   24[BANK0 ] unsigned char 
  8521 ;; Return value:  Size  Location     Type
  8522 ;;                  1    wreg      void 
  8523 ;; Registers used:
  8524 ;;		wreg
  8525 ;; Tracked objects:
  8526 ;;		On entry : 0/0
  8527 ;;		On exit  : 0/0
  8528 ;;		Unchanged: 0/0
  8529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8530 ;;      Params:         0       0       0       0       0       0       0
  8531 ;;      Locals:         0       1       0       0       0       0       0
  8532 ;;      Temps:          0       0       0       0       0       0       0
  8533 ;;      Totals:         0       1       0       0       0       0       0
  8534 ;;Total ram usage:        1 bytes
  8535 ;; Hardware stack levels used: 1
  8536 ;; Hardware stack levels required when called: 11
  8537 ;; This function calls:
  8538 ;;		Nothing
  8539 ;; This function is called by:
  8540 ;;		_putch
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text21
  8545   004250                     __ptext21:
  8546                           	callstack 0
  8547   004250                     _EUSART1_Write:
  8548                           	callstack 10
  8549                           
  8550                           ;incstack = 0
  8551                           ;EUSART1_Write@txData stored from wreg
  8552   004250  0100               	movlb	0	; () banked
  8553   004252  6F78               	movwf	EUSART1_Write@txData& (0+255),b
  8554   004254                     l245:
  8555                           
  8556                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  8557   004254  A89E               	btfss	158,4,c	;volatile
  8558   004256  EF2F  F021         	goto	u5571
  8559   00425A  EF31  F021         	goto	u5570
  8560   00425E                     u5571:
  8561   00425E  EF2A  F021         	goto	l245
  8562   004262                     u5570:
  8563   004262                     
  8564                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  8565   004262  C078  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  8566   004266  0012               	return		;funcret
  8567   004268                     __end_of_EUSART1_Write:
  8568                           	callstack 0
  8569                           
  8570 ;; *************** function _atoi *****************
  8571 ;; Defined at:
  8572 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  8575 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
  8576 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
  8577 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
  8578 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
  8579 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
  8580 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
  8581 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
  8582 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
  8583 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
  8584 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
  8585 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
  8586 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
  8587 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
  8588 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
  8589 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;  n               2   37[BANK0 ] int 
  8592 ;;  neg             2   35[BANK0 ] int 
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  2   30[BANK0 ] int 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8597 ;; Tracked objects:
  8598 ;;		On entry : 0/0
  8599 ;;		On exit  : 0/0
  8600 ;;		Unchanged: 0/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8602 ;;      Params:         0       2       0       0       0       0       0
  8603 ;;      Locals:         0       4       0       0       0       0       0
  8604 ;;      Temps:          0       3       0       0       0       0       0
  8605 ;;      Totals:         0       9       0       0       0       0       0
  8606 ;;Total ram usage:        9 bytes
  8607 ;; Hardware stack levels used: 1
  8608 ;; Hardware stack levels required when called: 12
  8609 ;; This function calls:
  8610 ;;		___wmul
  8611 ;;		_isdigit
  8612 ;;		_isspace
  8613 ;; This function is called by:
  8614 ;;		_vfpfcnvrt
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text22
  8619   002B70                     __ptext22:
  8620                           	callstack 0
  8621   002B70                     _atoi:
  8622                           	callstack 14
  8623   002B70  0E00               	movlw	0
  8624   002B72  0100               	movlb	0	; () banked
  8625   002B74  6F86               	movwf	(atoi@n+1)& (0+255),b
  8626   002B76  0E00               	movlw	0
  8627   002B78  6F85               	movwf	atoi@n& (0+255),b
  8628   002B7A  0E00               	movlw	0
  8629   002B7C  6F84               	movwf	(atoi@neg+1)& (0+255),b
  8630   002B7E  0E00               	movlw	0
  8631   002B80  6F83               	movwf	atoi@neg& (0+255),b
  8632   002B82  EFC5  F015         	goto	l6170
  8633   002B86                     l6166:
  8634                           
  8635                           ; BSR set to: 0
  8636   002B86  4B7E               	infsnz	atoi@s& (0+255),f,b
  8637   002B88  2B7F               	incf	(atoi@s+1)& (0+255),f,b
  8638   002B8A                     l6170:
  8639                           
  8640                           ; BSR set to: 0
  8641   002B8A  C07E  FFF6         	movff	atoi@s,tblptrl
  8642   002B8E  C07F  FFF7         	movff	atoi@s+1,tblptrh
  8643   002B92                     	if	0	;tblptru may be non-zero
  8644   002B92                     	endif
  8645   002B92                     	if	0	;tblptru may be non-zero
  8646   002B92                     	endif
  8647   002B92  0008               	tblrd		*
  8648   002B94  50F5               	movf	tablat,w,c
  8649   002B96  0A20               	xorlw	32
  8650   002B98  B4D8               	btfsc	status,2,c
  8651   002B9A  EFD1  F015         	goto	u6361
  8652   002B9E  EFD3  F015         	goto	u6360
  8653   002BA2                     u6361:
  8654   002BA2  EFC3  F015         	goto	l6166
  8655   002BA6                     u6360:
  8656   002BA6                     
  8657                           ; BSR set to: 0
  8658   002BA6  C07E  FFF6         	movff	atoi@s,tblptrl
  8659   002BAA  C07F  FFF7         	movff	atoi@s+1,tblptrh
  8660   002BAE                     	if	0	;tblptru may be non-zero
  8661   002BAE                     	endif
  8662   002BAE                     	if	0	;tblptru may be non-zero
  8663   002BAE                     	endif
  8664   002BAE  0008               	tblrd		*
  8665   002BB0  CFF5 F080          	movff	tablat,??_atoi
  8666   002BB4  0EF7               	movlw	247
  8667   002BB6  2580               	addwf	??_atoi& (0+255),w,b
  8668   002BB8  6F81               	movwf	(??_atoi+1)& (0+255),b
  8669   002BBA  6B82               	clrf	(??_atoi+2)& (0+255),b
  8670   002BBC  0EFF               	movlw	255
  8671   002BBE  2382               	addwfc	(??_atoi+2)& (0+255),f,b
  8672   002BC0  5182               	movf	(??_atoi+2)& (0+255),w,b
  8673   002BC2  E109               	bnz	u6370
  8674   002BC4  0E05               	movlw	5
  8675   002BC6  5D81               	subwf	(??_atoi+1)& (0+255),w,b
  8676   002BC8  A0D8               	btfss	status,0,c
  8677   002BCA  EFE9  F015         	goto	u6371
  8678   002BCE  EFEB  F015         	goto	u6370
  8679   002BD2                     u6371:
  8680   002BD2  EFC3  F015         	goto	l6166
  8681   002BD6                     u6370:
  8682   002BD6  EFF5  F015         	goto	l6178
  8683   002BDA                     l6174:
  8684                           
  8685                           ; BSR set to: 0
  8686   002BDA  0E00               	movlw	0
  8687   002BDC  6F84               	movwf	(atoi@neg+1)& (0+255),b
  8688   002BDE  0E01               	movlw	1
  8689   002BE0  6F83               	movwf	atoi@neg& (0+255),b
  8690   002BE2                     l6176:
  8691                           
  8692                           ; BSR set to: 0
  8693   002BE2  4B7E               	infsnz	atoi@s& (0+255),f,b
  8694   002BE4  2B7F               	incf	(atoi@s+1)& (0+255),f,b
  8695   002BE6  EF2B  F016         	goto	l6186
  8696   002BEA                     l6178:
  8697                           
  8698                           ; BSR set to: 0
  8699   002BEA  C07E  FFF6         	movff	atoi@s,tblptrl
  8700   002BEE  C07F  FFF7         	movff	atoi@s+1,tblptrh
  8701   002BF2                     	if	0	;tblptru may be non-zero
  8702   002BF2                     	endif
  8703   002BF2                     	if	0	;tblptru may be non-zero
  8704   002BF2                     	endif
  8705   002BF2  0008               	tblrd		*
  8706   002BF4  50F5               	movf	tablat,w,c
  8707   002BF6  6F80               	movwf	??_atoi& (0+255),b
  8708   002BF8  6B81               	clrf	(??_atoi+1)& (0+255),b
  8709                           
  8710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8711                           ; Switch size 1, requested type "simple"
  8712                           ; Number of cases is 1, Range of values is 0 to 0
  8713                           ; switch strategies available:
  8714                           ; Name         Instructions Cycles
  8715                           ; simple_byte            4     3 (average)
  8716                           ;	Chosen strategy is simple_byte
  8717   002BFA  5181               	movf	(??_atoi+1)& (0+255),w,b
  8718   002BFC  0A00               	xorlw	0	; case 0
  8719   002BFE  B4D8               	btfsc	status,2,c
  8720   002C00  EF04  F016         	goto	l6850
  8721   002C04  EF2B  F016         	goto	l6186
  8722   002C08                     l6850:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ; Switch size 1, requested type "simple"
  8726                           ; Number of cases is 2, Range of values is 43 to 45
  8727                           ; switch strategies available:
  8728                           ; Name         Instructions Cycles
  8729                           ; simple_byte            7     4 (average)
  8730                           ;	Chosen strategy is simple_byte
  8731   002C08  5180               	movf	??_atoi& (0+255),w,b
  8732   002C0A  0A2B               	xorlw	43	; case 43
  8733   002C0C  B4D8               	btfsc	status,2,c
  8734   002C0E  EFF1  F015         	goto	l6176
  8735   002C12  0A06               	xorlw	6	; case 45
  8736   002C14  B4D8               	btfsc	status,2,c
  8737   002C16  EFED  F015         	goto	l6174
  8738   002C1A  EF2B  F016         	goto	l6186
  8739   002C1E                     l6180:
  8740                           
  8741                           ; BSR set to: 0
  8742   002C1E  C085  F078         	movff	atoi@n,___wmul@multiplier
  8743   002C22  C086  F079         	movff	atoi@n+1,___wmul@multiplier+1
  8744   002C26  0E00               	movlw	0
  8745   002C28  6F7B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8746   002C2A  0E0A               	movlw	10
  8747   002C2C  6F7A               	movwf	___wmul@multiplicand& (0+255),b
  8748   002C2E  ECAA  F020         	call	___wmul	;wreg free
  8749   002C32  C07E  FFF6         	movff	atoi@s,tblptrl
  8750   002C36  C07F  FFF7         	movff	atoi@s+1,tblptrh
  8751   002C3A                     	if	0	;tblptru may be non-zero
  8752   002C3A                     	endif
  8753   002C3A                     	if	0	;tblptru may be non-zero
  8754   002C3A                     	endif
  8755   002C3A  0008               	tblrd		*
  8756   002C3C  50F5               	movf	tablat,w,c
  8757   002C3E  0100               	movlb	0	; () banked
  8758   002C40  5F78               	subwf	?___wmul& (0+255),f,b
  8759   002C42  0E00               	movlw	0
  8760   002C44  5B79               	subwfb	(?___wmul+1)& (0+255),f,b
  8761   002C46  0E30               	movlw	48
  8762   002C48  2578               	addwf	?___wmul& (0+255),w,b
  8763   002C4A  6F85               	movwf	atoi@n& (0+255),b
  8764   002C4C  0E00               	movlw	0
  8765   002C4E  2179               	addwfc	(?___wmul+1)& (0+255),w,b
  8766   002C50  6F86               	movwf	(atoi@n+1)& (0+255),b
  8767   002C52  EFF1  F015         	goto	l6176
  8768   002C56                     l6186:
  8769                           
  8770                           ; BSR set to: 0
  8771   002C56  C07E  FFF6         	movff	atoi@s,tblptrl
  8772   002C5A  C07F  FFF7         	movff	atoi@s+1,tblptrh
  8773   002C5E                     	if	0	;tblptru may be non-zero
  8774   002C5E                     	endif
  8775   002C5E                     	if	0	;tblptru may be non-zero
  8776   002C5E                     	endif
  8777   002C5E  0008               	tblrd		*
  8778   002C60  CFF5 F080          	movff	tablat,??_atoi
  8779   002C64  0ED0               	movlw	208
  8780   002C66  2580               	addwf	??_atoi& (0+255),w,b
  8781   002C68  6F81               	movwf	(??_atoi+1)& (0+255),b
  8782   002C6A  6B82               	clrf	(??_atoi+2)& (0+255),b
  8783   002C6C  0EFF               	movlw	255
  8784   002C6E  2382               	addwfc	(??_atoi+2)& (0+255),f,b
  8785   002C70  5182               	movf	(??_atoi+2)& (0+255),w,b
  8786   002C72  E109               	bnz	u6380
  8787   002C74  0E0A               	movlw	10
  8788   002C76  5D81               	subwf	(??_atoi+1)& (0+255),w,b
  8789   002C78  A0D8               	btfss	status,0,c
  8790   002C7A  EF41  F016         	goto	u6381
  8791   002C7E  EF43  F016         	goto	u6380
  8792   002C82                     u6381:
  8793   002C82  EF0F  F016         	goto	l6180
  8794   002C86                     u6380:
  8795   002C86                     
  8796                           ; BSR set to: 0
  8797   002C86  5183               	movf	atoi@neg& (0+255),w,b
  8798   002C88  1184               	iorwf	(atoi@neg+1)& (0+255),w,b
  8799   002C8A  A4D8               	btfss	status,2,c
  8800   002C8C  EF4A  F016         	goto	u6391
  8801   002C90  EF4C  F016         	goto	u6390
  8802   002C94                     u6391:
  8803   002C94  EF5A  F016         	goto	l1520
  8804   002C98                     u6390:
  8805   002C98                     
  8806                           ; BSR set to: 0
  8807   002C98  C085  F080         	movff	atoi@n,??_atoi
  8808   002C9C  C086  F081         	movff	atoi@n+1,??_atoi+1
  8809   002CA0  1F80               	comf	??_atoi& (0+255),f,b
  8810   002CA2  1F81               	comf	(??_atoi+1)& (0+255),f,b
  8811   002CA4  4B80               	infsnz	??_atoi& (0+255),f,b
  8812   002CA6  2B81               	incf	(??_atoi+1)& (0+255),f,b
  8813   002CA8  C080  F07E         	movff	??_atoi,?_atoi
  8814   002CAC  C081  F07F         	movff	??_atoi+1,?_atoi+1
  8815   002CB0  EF5E  F016         	goto	l1523
  8816   002CB4                     l1520:
  8817                           
  8818                           ; BSR set to: 0
  8819   002CB4  C085  F07E         	movff	atoi@n,?_atoi
  8820   002CB8  C086  F07F         	movff	atoi@n+1,?_atoi+1
  8821   002CBC                     l1523:
  8822                           
  8823                           ; BSR set to: 0
  8824   002CBC  0012               	return		;funcret
  8825   002CBE                     __end_of_atoi:
  8826                           	callstack 0
  8827                           
  8828 ;; *************** function _isspace *****************
  8829 ;; Defined at:
  8830 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  c               2   24[BANK0 ] int 
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;		None
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  2   24[BANK0 ] int 
  8837 ;; Registers used:
  8838 ;;		wreg, status,2, status,0
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8844 ;;      Params:         0       2       0       0       0       0       0
  8845 ;;      Locals:         0       1       0       0       0       0       0
  8846 ;;      Temps:          0       2       0       0       0       0       0
  8847 ;;      Totals:         0       5       0       0       0       0       0
  8848 ;;Total ram usage:        5 bytes
  8849 ;; Hardware stack levels used: 1
  8850 ;; Hardware stack levels required when called: 11
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		_atoi
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text23
  8859   003D46                     __ptext23:
  8860                           	callstack 0
  8861   003D46                     _isspace:
  8862                           	callstack 14
  8863   003D46  0E01               	movlw	1
  8864   003D48  0100               	movlb	0	; () banked
  8865   003D4A  6F7C               	movwf	_isspace$2159& (0+255),b
  8866   003D4C                     
  8867                           ; BSR set to: 0
  8868   003D4C  0E20               	movlw	32
  8869   003D4E  1978               	xorwf	isspace@c& (0+255),w,b
  8870   003D50  1179               	iorwf	(isspace@c+1)& (0+255),w,b
  8871   003D52  B4D8               	btfsc	status,2,c
  8872   003D54  EFAE  F01E         	goto	u5911
  8873   003D58  EFB0  F01E         	goto	u5910
  8874   003D5C                     u5911:
  8875   003D5C  EFC3  F01E         	goto	l5952
  8876   003D60                     u5910:
  8877   003D60                     
  8878                           ; BSR set to: 0
  8879   003D60  0EF7               	movlw	247
  8880   003D62  2578               	addwf	isspace@c& (0+255),w,b
  8881   003D64  6F7A               	movwf	??_isspace& (0+255),b
  8882   003D66  0EFF               	movlw	255
  8883   003D68  2179               	addwfc	(isspace@c+1)& (0+255),w,b
  8884   003D6A  6F7B               	movwf	(??_isspace+1)& (0+255),b
  8885   003D6C  517B               	movf	(??_isspace+1)& (0+255),w,b
  8886   003D6E  E109               	bnz	u5920
  8887   003D70  0E05               	movlw	5
  8888   003D72  5D7A               	subwf	??_isspace& (0+255),w,b
  8889   003D74  A0D8               	btfss	status,0,c
  8890   003D76  EFBF  F01E         	goto	u5921
  8891   003D7A  EFC1  F01E         	goto	u5920
  8892   003D7E                     u5921:
  8893   003D7E  EFC3  F01E         	goto	l5952
  8894   003D82                     u5920:
  8895   003D82                     
  8896                           ; BSR set to: 0
  8897   003D82  0E00               	movlw	0
  8898   003D84  6F7C               	movwf	_isspace$2159& (0+255),b
  8899   003D86                     l5952:
  8900                           
  8901                           ; BSR set to: 0
  8902   003D86  C07C  F078         	movff	_isspace$2159,?_isspace
  8903   003D8A  6B79               	clrf	(?_isspace+1)& (0+255),b
  8904   003D8C                     
  8905                           ; BSR set to: 0
  8906   003D8C  0012               	return		;funcret
  8907   003D8E                     __end_of_isspace:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function _isdigit *****************
  8911 ;; Defined at:
  8912 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  c               2   24[BANK0 ] int 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  2   24[BANK0 ] int 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8926 ;;      Params:         0       2       0       0       0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0
  8928 ;;      Temps:          0       2       0       0       0       0       0
  8929 ;;      Totals:         0       4       0       0       0       0       0
  8930 ;;Total ram usage:        4 bytes
  8931 ;; Hardware stack levels used: 1
  8932 ;; Hardware stack levels required when called: 11
  8933 ;; This function calls:
  8934 ;;		Nothing
  8935 ;; This function is called by:
  8936 ;;		_vfpfcnvrt
  8937 ;;		_atoi
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text24
  8942   004024                     __ptext24:
  8943                           	callstack 0
  8944   004024                     _isdigit:
  8945                           	callstack 15
  8946   004024  0ED0               	movlw	208
  8947   004026  0100               	movlb	0	; () banked
  8948   004028  2578               	addwf	isdigit@c& (0+255),w,b
  8949   00402A  6F7A               	movwf	??_isdigit& (0+255),b
  8950   00402C  0EFF               	movlw	255
  8951   00402E  2179               	addwfc	(isdigit@c+1)& (0+255),w,b
  8952   004030  6F7B               	movwf	(??_isdigit+1)& (0+255),b
  8953   004032  517B               	movf	(??_isdigit+1)& (0+255),w,b
  8954   004034  E10A               	bnz	u5890
  8955   004036  0E0A               	movlw	10
  8956   004038  5D7A               	subwf	??_isdigit& (0+255),w,b
  8957   00403A  A0D8               	btfss	status,0,c
  8958   00403C  EF22  F020         	goto	u5891
  8959   004040  EF25  F020         	goto	u5890
  8960   004044                     u5891:
  8961   004044  0E01               	movlw	1
  8962   004046  EF26  F020         	goto	u5900
  8963   00404A                     u5890:
  8964   00404A  0E00               	movlw	0
  8965   00404C                     u5900:
  8966   00404C  6F78               	movwf	?_isdigit& (0+255),b
  8967   00404E  6B79               	clrf	(?_isdigit+1)& (0+255),b
  8968   004050                     
  8969                           ; BSR set to: 0
  8970   004050  0012               	return		;funcret
  8971   004052                     __end_of_isdigit:
  8972                           	callstack 0
  8973                           
  8974 ;; *************** function ___wmul *****************
  8975 ;; Defined at:
  8976 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;  multiplier      2   24[BANK0 ] unsigned int 
  8979 ;;  multiplicand    2   26[BANK0 ] unsigned int 
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;  product         2   28[BANK0 ] unsigned int 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  2   24[BANK0 ] unsigned int 
  8984 ;; Registers used:
  8985 ;;		wreg, status,2, status,0, prodl, prodh
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8991 ;;      Params:         0       4       0       0       0       0       0
  8992 ;;      Locals:         0       2       0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0
  8994 ;;      Totals:         0       6       0       0       0       0       0
  8995 ;;Total ram usage:        6 bytes
  8996 ;; Hardware stack levels used: 1
  8997 ;; Hardware stack levels required when called: 11
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_atoi
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text25
  9006   004154                     __ptext25:
  9007                           	callstack 0
  9008   004154                     ___wmul:
  9009                           	callstack 14
  9010   004154  0100               	movlb	0	; () banked
  9011   004156  5178               	movf	___wmul@multiplier& (0+255),w,b
  9012   004158  037A               	mulwf	___wmul@multiplicand& (0+255),b
  9013   00415A  CFF3 F07C          	movff	prodl,___wmul@product
  9014   00415E  CFF4 F07D          	movff	prodh,___wmul@product+1
  9015   004162  5178               	movf	___wmul@multiplier& (0+255),w,b
  9016   004164  037B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9017   004166  50F3               	movf	243,w,c
  9018   004168  277D               	addwf	(___wmul@product+1)& (0+255),f,b
  9019   00416A  5179               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9020   00416C  037A               	mulwf	___wmul@multiplicand& (0+255),b
  9021   00416E  50F3               	movf	243,w,c
  9022   004170  277D               	addwf	(___wmul@product+1)& (0+255),f,b
  9023   004172                     
  9024                           ; BSR set to: 0
  9025   004172  C07C  F078         	movff	___wmul@product,?___wmul
  9026   004176  C07D  F079         	movff	___wmul@product+1,?___wmul+1
  9027   00417A                     
  9028                           ; BSR set to: 0
  9029   00417A  0012               	return		;funcret
  9030   00417C                     __end_of___wmul:
  9031                           	callstack 0
  9032                           
  9033 ;; *************** function ___awdiv *****************
  9034 ;; Defined at:
  9035 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  dividend        2   24[BANK0 ] int 
  9038 ;;  divisor         2   26[BANK0 ] int 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  quotient        2   30[BANK0 ] int 
  9041 ;;  sign            1   29[BANK0 ] unsigned char 
  9042 ;;  counter         1   28[BANK0 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  2   24[BANK0 ] int 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2, status,0
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9052 ;;      Params:         0       4       0       0       0       0       0
  9053 ;;      Locals:         0       4       0       0       0       0       0
  9054 ;;      Temps:          0       0       0       0       0       0       0
  9055 ;;      Totals:         0       8       0       0       0       0       0
  9056 ;;Total ram usage:        8 bytes
  9057 ;; Hardware stack levels used: 1
  9058 ;; Hardware stack levels required when called: 11
  9059 ;; This function calls:
  9060 ;;		Nothing
  9061 ;; This function is called by:
  9062 ;;		_read8bit
  9063 ;; This function uses a non-reentrant model
  9064 ;;
  9065                           
  9066                           	psect	text26
  9067   0037E6                     __ptext26:
  9068                           	callstack 0
  9069   0037E6                     ___awdiv:
  9070                           	callstack 18
  9071   0037E6  0E00               	movlw	0
  9072   0037E8  0100               	movlb	0	; () banked
  9073   0037EA  6F7D               	movwf	___awdiv@sign& (0+255),b
  9074   0037EC                     
  9075                           ; BSR set to: 0
  9076   0037EC  BF7B               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  9077   0037EE  EFFD  F01B         	goto	u4930
  9078   0037F2  EFFB  F01B         	goto	u4931
  9079   0037F6                     u4931:
  9080   0037F6  EF03  F01C         	goto	l5034
  9081   0037FA                     u4930:
  9082   0037FA                     
  9083                           ; BSR set to: 0
  9084   0037FA  6D7A               	negf	___awdiv@divisor& (0+255),b
  9085   0037FC  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9086   0037FE  B0D8               	btfsc	status,0,c
  9087   003800  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9088   003802                     
  9089                           ; BSR set to: 0
  9090   003802  0E01               	movlw	1
  9091   003804  6F7D               	movwf	___awdiv@sign& (0+255),b
  9092   003806                     l5034:
  9093                           
  9094                           ; BSR set to: 0
  9095   003806  BF79               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  9096   003808  EF0A  F01C         	goto	u4940
  9097   00380C  EF08  F01C         	goto	u4941
  9098   003810                     u4941:
  9099   003810  EF10  F01C         	goto	l5040
  9100   003814                     u4940:
  9101   003814                     
  9102                           ; BSR set to: 0
  9103   003814  6D78               	negf	___awdiv@dividend& (0+255),b
  9104   003816  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9105   003818  B0D8               	btfsc	status,0,c
  9106   00381A  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9107   00381C                     
  9108                           ; BSR set to: 0
  9109   00381C  0E01               	movlw	1
  9110   00381E  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
  9111   003820                     l5040:
  9112                           
  9113                           ; BSR set to: 0
  9114   003820  0E00               	movlw	0
  9115   003822  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
  9116   003824  0E00               	movlw	0
  9117   003826  6F7E               	movwf	___awdiv@quotient& (0+255),b
  9118   003828                     
  9119                           ; BSR set to: 0
  9120   003828  517A               	movf	___awdiv@divisor& (0+255),w,b
  9121   00382A  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9122   00382C  B4D8               	btfsc	status,2,c
  9123   00382E  EF1B  F01C         	goto	u4951
  9124   003832  EF1D  F01C         	goto	u4950
  9125   003836                     u4951:
  9126   003836  EF45  F01C         	goto	l5062
  9127   00383A                     u4950:
  9128   00383A                     
  9129                           ; BSR set to: 0
  9130   00383A  0E01               	movlw	1
  9131   00383C  6F7C               	movwf	___awdiv@counter& (0+255),b
  9132   00383E  EF25  F01C         	goto	l5048
  9133   003842                     l5046:
  9134                           
  9135                           ; BSR set to: 0
  9136   003842  90D8               	bcf	status,0,c
  9137   003844  377A               	rlcf	___awdiv@divisor& (0+255),f,b
  9138   003846  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9139   003848  2B7C               	incf	___awdiv@counter& (0+255),f,b
  9140   00384A                     l5048:
  9141                           
  9142                           ; BSR set to: 0
  9143   00384A  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9144   00384C  EF2A  F01C         	goto	u4961
  9145   003850  EF2C  F01C         	goto	u4960
  9146   003854                     u4961:
  9147   003854  EF21  F01C         	goto	l5046
  9148   003858                     u4960:
  9149   003858                     l5050:
  9150                           
  9151                           ; BSR set to: 0
  9152   003858  90D8               	bcf	status,0,c
  9153   00385A  377E               	rlcf	___awdiv@quotient& (0+255),f,b
  9154   00385C  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9155   00385E                     
  9156                           ; BSR set to: 0
  9157   00385E  517A               	movf	___awdiv@divisor& (0+255),w,b
  9158   003860  5D78               	subwf	___awdiv@dividend& (0+255),w,b
  9159   003862  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9160   003864  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9161   003866  A0D8               	btfss	status,0,c
  9162   003868  EF38  F01C         	goto	u4971
  9163   00386C  EF3A  F01C         	goto	u4970
  9164   003870                     u4971:
  9165   003870  EF3F  F01C         	goto	l5058
  9166   003874                     u4970:
  9167   003874                     
  9168                           ; BSR set to: 0
  9169   003874  517A               	movf	___awdiv@divisor& (0+255),w,b
  9170   003876  5F78               	subwf	___awdiv@dividend& (0+255),f,b
  9171   003878  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9172   00387A  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9173   00387C                     
  9174                           ; BSR set to: 0
  9175   00387C  817E               	bsf	___awdiv@quotient& (0+255),0,b
  9176   00387E                     l5058:
  9177                           
  9178                           ; BSR set to: 0
  9179   00387E  90D8               	bcf	status,0,c
  9180   003880  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9181   003882  337A               	rrcf	___awdiv@divisor& (0+255),f,b
  9182   003884                     
  9183                           ; BSR set to: 0
  9184   003884  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
  9185   003886  EF2C  F01C         	goto	l5050
  9186   00388A                     l5062:
  9187                           
  9188                           ; BSR set to: 0
  9189   00388A  517D               	movf	___awdiv@sign& (0+255),w,b
  9190   00388C  B4D8               	btfsc	status,2,c
  9191   00388E  EF4B  F01C         	goto	u4981
  9192   003892  EF4D  F01C         	goto	u4980
  9193   003896                     u4981:
  9194   003896  EF51  F01C         	goto	l5066
  9195   00389A                     u4980:
  9196   00389A                     
  9197                           ; BSR set to: 0
  9198   00389A  6D7E               	negf	___awdiv@quotient& (0+255),b
  9199   00389C  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9200   00389E  B0D8               	btfsc	status,0,c
  9201   0038A0  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9202   0038A2                     l5066:
  9203                           
  9204                           ; BSR set to: 0
  9205   0038A2  C07E  F078         	movff	___awdiv@quotient,?___awdiv
  9206   0038A6  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
  9207   0038AA                     
  9208                           ; BSR set to: 0
  9209   0038AA  0012               	return		;funcret
  9210   0038AC                     __end_of___awdiv:
  9211                           	callstack 0
  9212                           
  9213 ;; *************** function _EUSART1_Read *****************
  9214 ;; Defined at:
  9215 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      unsigned char 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9229 ;;      Params:         0       0       0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; Hardware stack levels required when called: 11
  9236 ;; This function calls:
  9237 ;;		Nothing
  9238 ;; This function is called by:
  9239 ;;		_main
  9240 ;;		_read8bit
  9241 ;;		_getch
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text27
  9246   004102                     __ptext27:
  9247                           	callstack 0
  9248   004102                     _EUSART1_Read:
  9249                           	callstack 18
  9250   004102                     l238:
  9251                           
  9252                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  9253   004102  AA9E               	btfss	158,5,c	;volatile
  9254   004104  EF86  F020         	goto	u4851
  9255   004108  EF88  F020         	goto	u4850
  9256   00410C                     u4851:
  9257   00410C  EF81  F020         	goto	l238
  9258   004110                     u4850:
  9259   004110                     
  9260                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  9261   004110  0E00               	movlw	0
  9262   004112  0100               	movlb	0	; () banked
  9263   004114  6FDD               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  9264   004116                     
  9265                           ; BSR set to: 0
  9266                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  9267   004116  A2AB               	btfss	171,1,c	;volatile
  9268   004118  EF90  F020         	goto	u4861
  9269   00411C  EF92  F020         	goto	u4860
  9270   004120                     u4861:
  9271   004120  EF94  F020         	goto	l4944
  9272   004124                     u4860:
  9273   004124                     
  9274                           ; BSR set to: 0
  9275                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  9276   004124  98AB               	bcf	171,4,c	;volatile
  9277                           
  9278                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  9279   004126  88AB               	bsf	171,4,c	;volatile
  9280   004128                     l4944:
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  9284   004128  50AE               	movf	174,w,c	;volatile
  9285   00412A                     
  9286                           ; BSR set to: 0
  9287   00412A  0012               	return		;funcret
  9288   00412C                     __end_of_EUSART1_Read:
  9289                           	callstack 0
  9290                           
  9291 ;; *************** function _TMR1_WriteTimer *****************
  9292 ;; Defined at:
  9293 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  timerVal        2   24[BANK0 ] unsigned short 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9307 ;;      Params:         0       2       0       0       0       0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0
  9309 ;;      Temps:          0       0       0       0       0       0       0
  9310 ;;      Totals:         0       2       0       0       0       0       0
  9311 ;;Total ram usage:        2 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; Hardware stack levels required when called: 11
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_main
  9318 ;;		_TMR1_Reload
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           	psect	text28
  9323   004052                     __ptext28:
  9324                           	callstack 0
  9325   004052                     _TMR1_WriteTimer:
  9326                           	callstack 19
  9327   004052                     
  9328                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  9329   004052  A4CD               	btfss	205,2,c	;volatile
  9330   004054  EF2E  F020         	goto	u5141
  9331   004058  EF30  F020         	goto	u5140
  9332   00405C                     u5141:
  9333   00405C  EF39  F020         	goto	l5170
  9334   004060                     u5140:
  9335   004060                     
  9336                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  9337   004060  90CD               	bcf	205,0,c	;volatile
  9338   004062                     
  9339                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  9340   004062  0100               	movlb	0	; () banked
  9341   004064  5179               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  9342   004066  6ECF               	movwf	207,c	;volatile
  9343   004068                     
  9344                           ; BSR set to: 0
  9345                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  9346   004068  C078  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  9347   00406C                     
  9348                           ; BSR set to: 0
  9349                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  9350   00406C  80CD               	bsf	205,0,c	;volatile
  9351                           
  9352                           ;mcc_generated_files/tmr1.c: 134:     }
  9353   00406E  EF3E  F020         	goto	l380
  9354   004072                     l5170:
  9355                           
  9356                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9357   004072  0100               	movlb	0	; () banked
  9358   004074  5179               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  9359   004076  6ECF               	movwf	207,c	;volatile
  9360   004078                     
  9361                           ; BSR set to: 0
  9362                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  9363   004078  C078  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  9364   00407C                     l380:
  9365                           
  9366                           ; BSR set to: 0
  9367   00407C  0012               	return		;funcret
  9368   00407E                     __end_of_TMR1_WriteTimer:
  9369                           	callstack 0
  9370                           
  9371 ;; *************** function _SYSTEM_Initialize *****************
  9372 ;; Defined at:
  9373 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;		None
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  1    wreg      void 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0, cstack
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9387 ;;      Params:         0       0       0       0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0
  9389 ;;      Temps:          0       0       0       0       0       0       0
  9390 ;;      Totals:         0       0       0       0       0       0       0
  9391 ;;Total ram usage:        0 bytes
  9392 ;; Hardware stack levels used: 1
  9393 ;; Hardware stack levels required when called: 13
  9394 ;; This function calls:
  9395 ;;		_EPWM2_Initialize
  9396 ;;		_EUSART1_Initialize
  9397 ;;		_EUSART2_Initialize
  9398 ;;		_INTERRUPT_Initialize
  9399 ;;		_OSCILLATOR_Initialize
  9400 ;;		_PIN_MANAGER_Initialize
  9401 ;;		_TMR1_Initialize
  9402 ;;		_TMR2_Initialize
  9403 ;; This function is called by:
  9404 ;;		_main
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text29
  9409   0041F2                     __ptext29:
  9410                           	callstack 0
  9411   0041F2                     _SYSTEM_Initialize:
  9412                           	callstack 17
  9413   0041F2                     
  9414                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  9415   0041F2  ECA6  F021         	call	_INTERRUPT_Initialize	;wreg free
  9416   0041F6                     
  9417                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9418   0041F6  EC55  F020         	call	_PIN_MANAGER_Initialize	;wreg free
  9419   0041FA                     
  9420                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9421   0041FA  EC1A  F021         	call	_OSCILLATOR_Initialize	;wreg free
  9422   0041FE                     
  9423                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  9424   0041FE  EC0A  F021         	call	_EPWM2_Initialize	;wreg free
  9425   004202                     
  9426                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  9427   004202  EC5F  F021         	call	_TMR2_Initialize	;wreg free
  9428   004206                     
  9429                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  9430   004206  EC3F  F020         	call	_TMR1_Initialize	;wreg free
  9431   00420A                     
  9432                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  9433   00420A  ECC7  F01E         	call	_EUSART1_Initialize	;wreg free
  9434   00420E                     
  9435                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  9436   00420E  EC9C  F01D         	call	_EUSART2_Initialize	;wreg free
  9437   004212  0012               	return		;funcret
  9438   004214                     __end_of_SYSTEM_Initialize:
  9439                           	callstack 0
  9440                           
  9441 ;; *************** function _TMR2_Initialize *****************
  9442 ;; Defined at:
  9443 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;		None
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1    wreg      void 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9457 ;;      Params:         0       0       0       0       0       0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0
  9460 ;;      Totals:         0       0       0       0       0       0       0
  9461 ;;Total ram usage:        0 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; Hardware stack levels required when called: 11
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_SYSTEM_Initialize
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           	psect	text30
  9472   0042BE                     __ptext30:
  9473                           	callstack 0
  9474   0042BE                     _TMR2_Initialize:
  9475                           	callstack 18
  9476   0042BE                     
  9477                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
  9478   0042BE  0E68               	movlw	104
  9479   0042C0  6EBB               	movwf	187,c	;volatile
  9480                           
  9481                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  9482   0042C2  0E00               	movlw	0
  9483   0042C4  6EBC               	movwf	188,c	;volatile
  9484   0042C6                     
  9485                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  9486   0042C6  929E               	bcf	158,1,c	;volatile
  9487                           
  9488                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  9489   0042C8  0E05               	movlw	5
  9490   0042CA  6EBA               	movwf	186,c	;volatile
  9491   0042CC  0012               	return		;funcret
  9492   0042CE                     __end_of_TMR2_Initialize:
  9493                           	callstack 0
  9494                           
  9495 ;; *************** function _TMR1_Initialize *****************
  9496 ;; Defined at:
  9497 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;		None
  9500 ;; Auto vars:     Size  Location     Type
  9501 ;;		None
  9502 ;; Return value:  Size  Location     Type
  9503 ;;                  1    wreg      void 
  9504 ;; Registers used:
  9505 ;;		wreg, status,2, status,0, cstack
  9506 ;; Tracked objects:
  9507 ;;		On entry : 0/0
  9508 ;;		On exit  : 0/0
  9509 ;;		Unchanged: 0/0
  9510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9511 ;;      Params:         0       0       0       0       0       0       0
  9512 ;;      Locals:         0       0       0       0       0       0       0
  9513 ;;      Temps:          0       0       0       0       0       0       0
  9514 ;;      Totals:         0       0       0       0       0       0       0
  9515 ;;Total ram usage:        0 bytes
  9516 ;; Hardware stack levels used: 1
  9517 ;; Hardware stack levels required when called: 12
  9518 ;; This function calls:
  9519 ;;		_TMR1_SetInterruptHandler
  9520 ;; This function is called by:
  9521 ;;		_SYSTEM_Initialize
  9522 ;; This function uses a non-reentrant model
  9523 ;;
  9524                           
  9525                           	psect	text31
  9526   00407E                     __ptext31:
  9527                           	callstack 0
  9528   00407E                     _TMR1_Initialize:
  9529                           	callstack 17
  9530   00407E                     
  9531                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  9532   00407E  0E00               	movlw	0
  9533   004080  6ECC               	movwf	204,c	;volatile
  9534                           
  9535                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  9536   004082  0E00               	movlw	0
  9537   004084  6ECF               	movwf	207,c	;volatile
  9538                           
  9539                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  9540   004086  0E00               	movlw	0
  9541   004088  6ECE               	movwf	206,c	;volatile
  9542   00408A                     
  9543                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  9544   00408A  CFCE F0D2          	movff	4046,_timer1ReloadVal	;volatile
  9545   00408E  CFCF F0D3          	movff	4047,_timer1ReloadVal+1	;volatile
  9546   004092                     
  9547                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  9548   004092  909E               	bcf	158,0,c	;volatile
  9549   004094                     
  9550                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  9551   004094  809D               	bsf	157,0,c	;volatile
  9552   004096                     
  9553                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  9554   004096  0E52               	movlw	low _TMR1_DefaultInterruptHandler
  9555   004098  0100               	movlb	0	; () banked
  9556   00409A  6F78               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  9557   00409C  0E43               	movlw	high _TMR1_DefaultInterruptHandler
  9558   00409E  6F79               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  9559   0040A0  EC6E  F021         	call	_TMR1_SetInterruptHandler	;wreg free
  9560   0040A4                     
  9561                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  9562   0040A4  0E01               	movlw	1
  9563   0040A6  6ECD               	movwf	205,c	;volatile
  9564   0040A8  0012               	return		;funcret
  9565   0040AA                     __end_of_TMR1_Initialize:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _TMR1_SetInterruptHandler *****************
  9569 ;; Defined at:
  9570 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  InterruptHan    2   24[BANK0 ] PTR FTN()void 
  9573 ;;		 -> txTMR1ISR(1), TMR1_DefaultInterruptHandler(1), 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9585 ;;      Params:         0       2       0       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0       0       0
  9588 ;;      Totals:         0       2       0       0       0       0       0
  9589 ;;Total ram usage:        2 bytes
  9590 ;; Hardware stack levels used: 1
  9591 ;; Hardware stack levels required when called: 11
  9592 ;; This function calls:
  9593 ;;		Nothing
  9594 ;; This function is called by:
  9595 ;;		_TMR1_Initialize
  9596 ;;		_main
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           	psect	text32
  9601   0042DC                     __ptext32:
  9602                           	callstack 0
  9603   0042DC                     _TMR1_SetInterruptHandler:
  9604                           	callstack 19
  9605   0042DC                     
  9606                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  9607   0042DC  C078  F118         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  9608   0042E0  C079  F119         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  9609   0042E4  0012               	return		;funcret
  9610   0042E6                     __end_of_TMR1_SetInterruptHandler:
  9611                           	callstack 0
  9612                           
  9613 ;; *************** function _PIN_MANAGER_Initialize *****************
  9614 ;; Defined at:
  9615 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;		None
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;		None
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      void 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9629 ;;      Params:         0       0       0       0       0       0       0
  9630 ;;      Locals:         0       0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0
  9632 ;;      Totals:         0       0       0       0       0       0       0
  9633 ;;Total ram usage:        0 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; Hardware stack levels required when called: 11
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_SYSTEM_Initialize
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text33
  9644   0040AA                     __ptext33:
  9645                           	callstack 0
  9646   0040AA                     _PIN_MANAGER_Initialize:
  9647                           	callstack 18
  9648   0040AA                     
  9649                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  9650   0040AA  0E00               	movlw	0
  9651   0040AC  6E89               	movwf	137,c	;volatile
  9652                           
  9653                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  9654   0040AE  0E00               	movlw	0
  9655   0040B0  6E8A               	movwf	138,c	;volatile
  9656                           
  9657                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  9658   0040B2  0E00               	movlw	0
  9659   0040B4  6E8B               	movwf	139,c	;volatile
  9660   0040B6                     
  9661                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  9662   0040B6  6892               	setf	146,c	;volatile
  9663                           
  9664                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  9665   0040B8  0EBF               	movlw	191
  9666   0040BA  6E93               	movwf	147,c	;volatile
  9667                           
  9668                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  9669   0040BC  0EBD               	movlw	189
  9670   0040BE  6E94               	movwf	148,c	;volatile
  9671                           
  9672                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  9673   0040C0  0E3C               	movlw	60
  9674   0040C2  010F               	movlb	15	; () banked
  9675   0040C4  6F3A               	movwf	58,b	;volatile
  9676                           
  9677                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  9678   0040C6  0E3F               	movlw	63
  9679   0040C8  6F39               	movwf	57,b	;volatile
  9680                           
  9681                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  9682   0040CA  0E2F               	movlw	47
  9683   0040CC  6F38               	movwf	56,b	;volatile
  9684                           
  9685                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  9686   0040CE  0E00               	movlw	0
  9687   0040D0  6E61               	movwf	97,c	;volatile
  9688   0040D2                     
  9689                           ; BSR set to: 15
  9690                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  9691   0040D2  8EF1               	bsf	241,7,c	;volatile
  9692   0040D4                     
  9693                           ; BSR set to: 15
  9694   0040D4  0012               	return		;funcret
  9695   0040D6                     __end_of_PIN_MANAGER_Initialize:
  9696                           	callstack 0
  9697                           
  9698 ;; *************** function _OSCILLATOR_Initialize *****************
  9699 ;; Defined at:
  9700 ;;		line 63 in file "mcc_generated_files/mcc.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;		None
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9714 ;;      Params:         0       0       0       0       0       0       0
  9715 ;;      Locals:         0       0       0       0       0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0
  9717 ;;      Totals:         0       0       0       0       0       0       0
  9718 ;;Total ram usage:        0 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 11
  9721 ;; This function calls:
  9722 ;;		Nothing
  9723 ;; This function is called by:
  9724 ;;		_SYSTEM_Initialize
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text34
  9729   004234                     __ptext34:
  9730                           	callstack 0
  9731   004234                     _OSCILLATOR_Initialize:
  9732                           	callstack 18
  9733   004234                     
  9734                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  9735   004234  0E70               	movlw	112
  9736   004236  6ED3               	movwf	211,c	;volatile
  9737                           
  9738                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  9739   004238  0E04               	movlw	4
  9740   00423A  6ED2               	movwf	210,c	;volatile
  9741                           
  9742                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  9743   00423C  0E40               	movlw	64
  9744   00423E  6E9B               	movwf	155,c	;volatile
  9745   004240                     l302:
  9746                           
  9747                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  9748   004240  AED2               	btfss	4050,7,c	;volatile
  9749   004242  EF25  F021         	goto	u4871
  9750   004246  EF27  F021         	goto	u4870
  9751   00424A                     u4871:
  9752   00424A  EF20  F021         	goto	l302
  9753   00424E                     u4870:
  9754   00424E  0012               	return		;funcret
  9755   004250                     __end_of_OSCILLATOR_Initialize:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _INTERRUPT_Initialize *****************
  9759 ;; Defined at:
  9760 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      void 
  9767 ;; Registers used:
  9768 ;;		None
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9774 ;;      Params:         0       0       0       0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used: 1
  9780 ;; Hardware stack levels required when called: 11
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		_SYSTEM_Initialize
  9785 ;; This function uses a non-reentrant model
  9786 ;;
  9787                           
  9788                           	psect	text35
  9789   00434C                     __ptext35:
  9790                           	callstack 0
  9791   00434C                     _INTERRUPT_Initialize:
  9792                           	callstack 18
  9793   00434C                     
  9794                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  9795   00434C  9ED0               	bcf	208,7,c	;volatile
  9796   00434E  0012               	return		;funcret
  9797   004350                     __end_of_INTERRUPT_Initialize:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _EUSART2_Initialize *****************
  9801 ;; Defined at:
  9802 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;		None
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;		None
  9807 ;; Return value:  Size  Location     Type
  9808 ;;                  1    wreg      void 
  9809 ;; Registers used:
  9810 ;;		wreg, status,2, status,0, cstack
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9816 ;;      Params:         0       0       0       0       0       0       0
  9817 ;;      Locals:         0       0       0       0       0       0       0
  9818 ;;      Temps:          0       0       0       0       0       0       0
  9819 ;;      Totals:         0       0       0       0       0       0       0
  9820 ;;Total ram usage:        0 bytes
  9821 ;; Hardware stack levels used: 1
  9822 ;; Hardware stack levels required when called: 12
  9823 ;; This function calls:
  9824 ;;		_EUSART2_SetErrorHandler
  9825 ;;		_EUSART2_SetFramingErrorHandler
  9826 ;;		_EUSART2_SetOverrunErrorHandler
  9827 ;;		_EUSART2_SetRxInterruptHandler
  9828 ;;		_EUSART2_SetTxInterruptHandler
  9829 ;; This function is called by:
  9830 ;;		_SYSTEM_Initialize
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           
  9834                           	psect	text36
  9835   003B38                     __ptext36:
  9836                           	callstack 0
  9837   003B38                     _EUSART2_Initialize:
  9838                           	callstack 17
  9839   003B38                     
  9840                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  9841   003B38  9AA3               	bcf	163,5,c	;volatile
  9842   003B3A                     
  9843                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  9844   003B3A  0E1E               	movlw	low _EUSART2_Receive_ISR
  9845   003B3C  0100               	movlb	0	; () banked
  9846   003B3E  6F78               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  9847   003B40  0E37               	movlw	high _EUSART2_Receive_ISR
  9848   003B42  6F79               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  9849   003B44  EC78  F021         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  9850   003B48                     
  9851                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  9852   003B48  98A3               	bcf	163,4,c	;volatile
  9853                           
  9854                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  9855   003B4A  0E5A               	movlw	low _EUSART2_Transmit_ISR
  9856   003B4C  0100               	movlb	0	; () banked
  9857   003B4E  6F78               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
  9858   003B50  0E3E               	movlw	high _EUSART2_Transmit_ISR
  9859   003B52  6F79               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  9860   003B54  EC73  F021         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  9861   003B58                     
  9862                           ;mcc_generated_files/eusart2.c: 98:     BAUDCON2 = 0x08;
  9863   003B58  0E08               	movlw	8
  9864   003B5A  6E70               	movwf	112,c	;volatile
  9865   003B5C                     
  9866                           ;mcc_generated_files/eusart2.c: 101:     RCSTA2 = 0x90;
  9867   003B5C  0E90               	movlw	144
  9868   003B5E  6E71               	movwf	113,c	;volatile
  9869   003B60                     
  9870                           ;mcc_generated_files/eusart2.c: 104:     TXSTA2 = 0x24;
  9871   003B60  0E24               	movlw	36
  9872   003B62  6E72               	movwf	114,c	;volatile
  9873   003B64                     
  9874                           ;mcc_generated_files/eusart2.c: 107:     SPBRG2 = 0x0A;
  9875   003B64  0E0A               	movlw	10
  9876   003B66  6E75               	movwf	117,c	;volatile
  9877   003B68                     
  9878                           ;mcc_generated_files/eusart2.c: 110:     SPBRGH2 = 0x1A;
  9879   003B68  0E1A               	movlw	26
  9880   003B6A  6E76               	movwf	118,c	;volatile
  9881   003B6C                     
  9882                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  9883   003B6C  0E54               	movlw	low _EUSART2_DefaultFramingErrorHandler
  9884   003B6E  0100               	movlb	0	; () banked
  9885   003B70  6F78               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler& (0+255),b
  9886   003B72  0E43               	movlw	high _EUSART2_DefaultFramingErrorHandler
  9887   003B74  6F79               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  9888   003B76  EC82  F021         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  9889   003B7A                     
  9890                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  9891   003B7A  0E40               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  9892   003B7C  0100               	movlb	0	; () banked
  9893   003B7E  6F78               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler& (0+255),b
  9894   003B80  0E43               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  9895   003B82  6F79               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  9896   003B84  EC7D  F021         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  9897   003B88                     
  9898                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  9899   003B88  0E46               	movlw	low _EUSART2_DefaultErrorHandler
  9900   003B8A  0100               	movlb	0	; () banked
  9901   003B8C  6F78               	movwf	EUSART2_SetErrorHandler@interruptHandler& (0+255),b
  9902   003B8E  0E43               	movlw	high _EUSART2_DefaultErrorHandler
  9903   003B90  6F79               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)& (0+255),b
  9904   003B92  EC87  F021         	call	_EUSART2_SetErrorHandler	;wreg free
  9905                           
  9906                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  9907   003B96  0E00               	movlw	0
  9908   003B98  0100               	movlb	0	; () banked
  9909   003B9A  6FDE               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  9910                           
  9911                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  9912   003B9C  0E00               	movlw	0
  9913   003B9E  6FE4               	movwf	_eusart2TxHead& (0+255),b	;volatile
  9914                           
  9915                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  9916   003BA0  0E00               	movlw	0
  9917   003BA2  6FE3               	movwf	_eusart2TxTail& (0+255),b	;volatile
  9918                           
  9919                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  9920   003BA4  0E08               	movlw	8
  9921   003BA6  6FE2               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  9922                           
  9923                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  9924   003BA8  0E00               	movlw	0
  9925   003BAA  6FE1               	movwf	_eusart2RxHead& (0+255),b	;volatile
  9926                           
  9927                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  9928   003BAC  0E00               	movlw	0
  9929   003BAE  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
  9930                           
  9931                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  9932   003BB0  0E00               	movlw	0
  9933   003BB2  6FDF               	movwf	_eusart2RxCount& (0+255),b	;volatile
  9934   003BB4                     
  9935                           ; BSR set to: 0
  9936                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  9937   003BB4  8AA3               	bsf	163,5,c	;volatile
  9938   003BB6                     
  9939                           ; BSR set to: 0
  9940   003BB6  0012               	return		;funcret
  9941   003BB8                     __end_of_EUSART2_Initialize:
  9942                           	callstack 0
  9943                           
  9944 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  9945 ;; Defined at:
  9946 ;;		line 276 in file "mcc_generated_files/eusart2.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  9949 ;;		 -> EUSART2_Transmit_ISR(1), 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9961 ;;      Params:         0       2       0       0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0
  9964 ;;      Totals:         0       2       0       0       0       0       0
  9965 ;;Total ram usage:        2 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; Hardware stack levels required when called: 11
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_EUSART2_Initialize
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text37
  9976   0042E6                     __ptext37:
  9977                           	callstack 0
  9978   0042E6                     _EUSART2_SetTxInterruptHandler:
  9979                           	callstack 17
  9980   0042E6                     
  9981                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  9982   0042E6  C078  F128         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  9983   0042EA  C079  F129         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  9984   0042EE  0012               	return		;funcret
  9985   0042F0                     __end_of_EUSART2_SetTxInterruptHandler:
  9986                           	callstack 0
  9987                           
  9988 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  9989 ;; Defined at:
  9990 ;;		line 280 in file "mcc_generated_files/eusart2.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  9993 ;;		 -> rxEUSART2ISR(1), EUSART2_Receive_ISR(1), 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, status,0
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10005 ;;      Params:         0       2       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0
 10008 ;;      Totals:         0       2       0       0       0       0       0
 10009 ;;Total ram usage:        2 bytes
 10010 ;; Hardware stack levels used: 1
 10011 ;; Hardware stack levels required when called: 11
 10012 ;; This function calls:
 10013 ;;		Nothing
 10014 ;; This function is called by:
 10015 ;;		_EUSART2_Initialize
 10016 ;;		_main
 10017 ;; This function uses a non-reentrant model
 10018 ;;
 10019                           
 10020                           	psect	text38
 10021   0042F0                     __ptext38:
 10022                           	callstack 0
 10023   0042F0                     _EUSART2_SetRxInterruptHandler:
 10024                           	callstack 17
 10025   0042F0                     
 10026                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
 10027   0042F0  C078  F126         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 10028   0042F4  C079  F127         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 10029   0042F8  0012               	return		;funcret
 10030   0042FA                     __end_of_EUSART2_SetRxInterruptHandler:
 10031                           	callstack 0
 10032                           
 10033 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 10034 ;; Defined at:
 10035 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 10036 ;; Parameters:    Size  Location     Type
 10037 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
 10038 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;		None
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1    wreg      void 
 10043 ;; Registers used:
 10044 ;;		wreg, status,2, status,0
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10050 ;;      Params:         0       2       0       0       0       0       0
 10051 ;;      Locals:         0       0       0       0       0       0       0
 10052 ;;      Temps:          0       0       0       0       0       0       0
 10053 ;;      Totals:         0       2       0       0       0       0       0
 10054 ;;Total ram usage:        2 bytes
 10055 ;; Hardware stack levels used: 1
 10056 ;; Hardware stack levels required when called: 11
 10057 ;; This function calls:
 10058 ;;		Nothing
 10059 ;; This function is called by:
 10060 ;;		_EUSART2_Initialize
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064                           	psect	text39
 10065   0042FA                     __ptext39:
 10066                           	callstack 0
 10067   0042FA                     _EUSART2_SetOverrunErrorHandler:
 10068                           	callstack 17
 10069   0042FA                     
 10070                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
 10071   0042FA  C078  F122         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
 10072   0042FE  C079  F123         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
 10073   004302  0012               	return		;funcret
 10074   004304                     __end_of_EUSART2_SetOverrunErrorHandler:
 10075                           	callstack 0
 10076                           
 10077 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 10078 ;; Defined at:
 10079 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
 10082 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      void 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0
 10089 ;; Tracked objects:
 10090 ;;		On entry : 0/0
 10091 ;;		On exit  : 0/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10094 ;;      Params:         0       2       0       0       0       0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0
 10096 ;;      Temps:          0       0       0       0       0       0       0
 10097 ;;      Totals:         0       2       0       0       0       0       0
 10098 ;;Total ram usage:        2 bytes
 10099 ;; Hardware stack levels used: 1
 10100 ;; Hardware stack levels required when called: 11
 10101 ;; This function calls:
 10102 ;;		Nothing
 10103 ;; This function is called by:
 10104 ;;		_EUSART2_Initialize
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text40
 10109   004304                     __ptext40:
 10110                           	callstack 0
 10111   004304                     _EUSART2_SetFramingErrorHandler:
 10112                           	callstack 17
 10113   004304                     
 10114                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
 10115   004304  C078  F124         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
 10116   004308  C079  F125         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
 10117   00430C  0012               	return		;funcret
 10118   00430E                     __end_of_EUSART2_SetFramingErrorHandler:
 10119                           	callstack 0
 10120                           
 10121 ;; *************** function _EUSART2_SetErrorHandler *****************
 10122 ;; Defined at:
 10123 ;;		line 272 in file "mcc_generated_files/eusart2.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
 10126 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;		None
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  1    wreg      void 
 10131 ;; Registers used:
 10132 ;;		wreg, status,2, status,0
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10138 ;;      Params:         0       2       0       0       0       0       0
 10139 ;;      Locals:         0       0       0       0       0       0       0
 10140 ;;      Temps:          0       0       0       0       0       0       0
 10141 ;;      Totals:         0       2       0       0       0       0       0
 10142 ;;Total ram usage:        2 bytes
 10143 ;; Hardware stack levels used: 1
 10144 ;; Hardware stack levels required when called: 11
 10145 ;; This function calls:
 10146 ;;		Nothing
 10147 ;; This function is called by:
 10148 ;;		_EUSART2_Initialize
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152                           	psect	text41
 10153   00430E                     __ptext41:
 10154                           	callstack 0
 10155   00430E                     _EUSART2_SetErrorHandler:
 10156                           	callstack 17
 10157   00430E                     
 10158                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
 10159   00430E  C078  F120         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
 10160   004312  C079  F121         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
 10161   004316  0012               	return		;funcret
 10162   004318                     __end_of_EUSART2_SetErrorHandler:
 10163                           	callstack 0
 10164                           
 10165 ;; *************** function _EUSART1_Initialize *****************
 10166 ;; Defined at:
 10167 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 10168 ;; Parameters:    Size  Location     Type
 10169 ;;		None
 10170 ;; Auto vars:     Size  Location     Type
 10171 ;;		None
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, status,2, status,0, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10181 ;;      Params:         0       0       0       0       0       0       0
 10182 ;;      Locals:         0       0       0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0
 10184 ;;      Totals:         0       0       0       0       0       0       0
 10185 ;;Total ram usage:        0 bytes
 10186 ;; Hardware stack levels used: 1
 10187 ;; Hardware stack levels required when called: 12
 10188 ;; This function calls:
 10189 ;;		_EUSART1_SetErrorHandler
 10190 ;;		_EUSART1_SetFramingErrorHandler
 10191 ;;		_EUSART1_SetOverrunErrorHandler
 10192 ;; This function is called by:
 10193 ;;		_SYSTEM_Initialize
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text42
 10198   003D8E                     __ptext42:
 10199                           	callstack 0
 10200   003D8E                     _EUSART1_Initialize:
 10201                           	callstack 17
 10202   003D8E                     
 10203                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
 10204   003D8E  0E08               	movlw	8
 10205   003D90  6EB8               	movwf	184,c	;volatile
 10206                           
 10207                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
 10208   003D92  0E90               	movlw	144
 10209   003D94  6EAB               	movwf	171,c	;volatile
 10210                           
 10211                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
 10212   003D96  0E24               	movlw	36
 10213   003D98  6EAC               	movwf	172,c	;volatile
 10214                           
 10215                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
 10216   003D9A  0E82               	movlw	130
 10217   003D9C  6EAF               	movwf	175,c	;volatile
 10218                           
 10219                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
 10220   003D9E  0E06               	movlw	6
 10221   003DA0  6EB0               	movwf	176,c	;volatile
 10222   003DA2                     
 10223                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 10224   003DA2  0E00               	movlw	0
 10225   003DA4  0100               	movlb	0	; () banked
 10226   003DA6  6F78               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 10227   003DA8  0E00               	movlw	0
 10228   003DAA  6F79               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 10229   003DAC  EC91  F021         	call	_EUSART1_SetFramingErrorHandler	;wreg free
 10230   003DB0                     
 10231                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 10232   003DB0  0E00               	movlw	0
 10233   003DB2  0100               	movlb	0	; () banked
 10234   003DB4  6F78               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 10235   003DB6  0E00               	movlw	0
 10236   003DB8  6F79               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 10237   003DBA  EC8C  F021         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
 10238   003DBE                     
 10239                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 10240   003DBE  0E00               	movlw	0
 10241   003DC0  0100               	movlb	0	; () banked
 10242   003DC2  6F78               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
 10243   003DC4  0E00               	movlw	0
 10244   003DC6  6F79               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 10245   003DC8  EC96  F021         	call	_EUSART1_SetErrorHandler	;wreg free
 10246   003DCC                     
 10247                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 10248   003DCC  0E00               	movlw	0
 10249   003DCE  0100               	movlb	0	; () banked
 10250   003DD0  6FDD               	movwf	_eusart1RxLastError& (0+255),b	;volatile
 10251   003DD2                     
 10252                           ; BSR set to: 0
 10253   003DD2  0012               	return		;funcret
 10254   003DD4                     __end_of_EUSART1_Initialize:
 10255                           	callstack 0
 10256                           
 10257 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 10258 ;; Defined at:
 10259 ;;		line 170 in file "mcc_generated_files/eusart1.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
 10262 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, status,2, status,0
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10274 ;;      Params:         0       2       0       0       0       0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0
 10276 ;;      Temps:          0       0       0       0       0       0       0
 10277 ;;      Totals:         0       2       0       0       0       0       0
 10278 ;;Total ram usage:        2 bytes
 10279 ;; Hardware stack levels used: 1
 10280 ;; Hardware stack levels required when called: 11
 10281 ;; This function calls:
 10282 ;;		Nothing
 10283 ;; This function is called by:
 10284 ;;		_EUSART1_Initialize
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288                           	psect	text43
 10289   004318                     __ptext43:
 10290                           	callstack 0
 10291   004318                     _EUSART1_SetOverrunErrorHandler:
 10292                           	callstack 17
 10293   004318                     
 10294                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
 10295   004318  C078  F11C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
 10296   00431C  C079  F11D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
 10297   004320  0012               	return		;funcret
 10298   004322                     __end_of_EUSART1_SetOverrunErrorHandler:
 10299                           	callstack 0
 10300                           
 10301 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 10302 ;; Defined at:
 10303 ;;		line 166 in file "mcc_generated_files/eusart1.c"
 10304 ;; Parameters:    Size  Location     Type
 10305 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
 10306 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 10307 ;; Auto vars:     Size  Location     Type
 10308 ;;		None
 10309 ;; Return value:  Size  Location     Type
 10310 ;;                  1    wreg      void 
 10311 ;; Registers used:
 10312 ;;		wreg, status,2, status,0
 10313 ;; Tracked objects:
 10314 ;;		On entry : 0/0
 10315 ;;		On exit  : 0/0
 10316 ;;		Unchanged: 0/0
 10317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10318 ;;      Params:         0       2       0       0       0       0       0
 10319 ;;      Locals:         0       0       0       0       0       0       0
 10320 ;;      Temps:          0       0       0       0       0       0       0
 10321 ;;      Totals:         0       2       0       0       0       0       0
 10322 ;;Total ram usage:        2 bytes
 10323 ;; Hardware stack levels used: 1
 10324 ;; Hardware stack levels required when called: 11
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		_EUSART1_Initialize
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text44
 10333   004322                     __ptext44:
 10334                           	callstack 0
 10335   004322                     _EUSART1_SetFramingErrorHandler:
 10336                           	callstack 17
 10337   004322                     
 10338                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
 10339   004322  C078  F11E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
 10340   004326  C079  F11F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
 10341   00432A  0012               	return		;funcret
 10342   00432C                     __end_of_EUSART1_SetFramingErrorHandler:
 10343                           	callstack 0
 10344                           
 10345 ;; *************** function _EUSART1_SetErrorHandler *****************
 10346 ;; Defined at:
 10347 ;;		line 174 in file "mcc_generated_files/eusart1.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
 10350 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;                  1    wreg      void 
 10355 ;; Registers used:
 10356 ;;		wreg, status,2, status,0
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10362 ;;      Params:         0       2       0       0       0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0
 10365 ;;      Totals:         0       2       0       0       0       0       0
 10366 ;;Total ram usage:        2 bytes
 10367 ;; Hardware stack levels used: 1
 10368 ;; Hardware stack levels required when called: 11
 10369 ;; This function calls:
 10370 ;;		Nothing
 10371 ;; This function is called by:
 10372 ;;		_EUSART1_Initialize
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376                           	psect	text45
 10377   00432C                     __ptext45:
 10378                           	callstack 0
 10379   00432C                     _EUSART1_SetErrorHandler:
 10380                           	callstack 17
 10381   00432C                     
 10382                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
 10383   00432C  C078  F11A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
 10384   004330  C079  F11B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
 10385   004334  0012               	return		;funcret
 10386   004336                     __end_of_EUSART1_SetErrorHandler:
 10387                           	callstack 0
 10388                           
 10389 ;; *************** function _EPWM2_Initialize *****************
 10390 ;; Defined at:
 10391 ;;		line 64 in file "mcc_generated_files/epwm2.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;		None
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg, status,2
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10405 ;;      Params:         0       0       0       0       0       0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0
 10408 ;;      Totals:         0       0       0       0       0       0       0
 10409 ;;Total ram usage:        0 bytes
 10410 ;; Hardware stack levels used: 1
 10411 ;; Hardware stack levels required when called: 11
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_SYSTEM_Initialize
 10416 ;; This function uses a non-reentrant model
 10417 ;;
 10418                           
 10419                           	psect	text46
 10420   004214                     __ptext46:
 10421                           	callstack 0
 10422   004214                     _EPWM2_Initialize:
 10423                           	callstack 18
 10424   004214                     
 10425                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x1C;
 10426   004214  0E1C               	movlw	28
 10427   004216  6E66               	movwf	102,c	;volatile
 10428                           
 10429                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
 10430   004218  0E00               	movlw	0
 10431   00421A  6E64               	movwf	100,c	;volatile
 10432                           
 10433                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
 10434   00421C  0E80               	movlw	128
 10435   00421E  6E65               	movwf	101,c	;volatile
 10436                           
 10437                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
 10438   004220  0E01               	movlw	1
 10439   004222  6E63               	movwf	99,c	;volatile
 10440                           
 10441                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
 10442   004224  0E00               	movlw	0
 10443   004226  6E68               	movwf	104,c	;volatile
 10444                           
 10445                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x34;
 10446   004228  0E34               	movlw	52
 10447   00422A  6E67               	movwf	103,c	;volatile
 10448                           
 10449                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
 10450   00422C  0EE7               	movlw	-25
 10451   00422E  010F               	movlb	15	; () banked
 10452   004230  1749               	andwf	73,f,b	;volatile
 10453   004232                     
 10454                           ; BSR set to: 15
 10455   004232  0012               	return		;funcret
 10456   004234                     __end_of_EPWM2_Initialize:
 10457                           	callstack 0
 10458                           
 10459 ;; *************** function _EUSART2_is_rx_ready *****************
 10460 ;; Defined at:
 10461 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 10462 ;; Parameters:    Size  Location     Type
 10463 ;;		None
 10464 ;; Auto vars:     Size  Location     Type
 10465 ;;		None
 10466 ;; Return value:  Size  Location     Type
 10467 ;;                  1    wreg      _Bool 
 10468 ;; Registers used:
 10469 ;;		wreg, status,2
 10470 ;; Tracked objects:
 10471 ;;		On entry : 0/0
 10472 ;;		On exit  : 0/0
 10473 ;;		Unchanged: 0/0
 10474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10475 ;;      Params:         0       0       0       0       0       0       0
 10476 ;;      Locals:         0       0       0       0       0       0       0
 10477 ;;      Temps:          0       0       0       0       0       0       0
 10478 ;;      Totals:         0       0       0       0       0       0       0
 10479 ;;Total ram usage:        0 bytes
 10480 ;; Hardware stack levels used: 1
 10481 ;; Hardware stack levels required when called: 11
 10482 ;; This function calls:
 10483 ;;		Nothing
 10484 ;; This function is called by:
 10485 ;;		_main
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           	psect	text47
 10490   004268                     __ptext47:
 10491                           	callstack 0
 10492   004268                     _EUSART2_is_rx_ready:
 10493                           	callstack 19
 10494   004268                     
 10495                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
 10496   004268  0100               	movlb	0	; () banked
 10497   00426A  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 10498   00426C  A4D8               	btfss	status,2,c
 10499   00426E  EF3B  F021         	goto	u4991
 10500   004272  EF3E  F021         	goto	u4990
 10501   004276                     u4991:
 10502   004276  0E01               	movlw	1
 10503   004278  EF3F  F021         	goto	u5000
 10504   00427C                     u4990:
 10505   00427C  0E00               	movlw	0
 10506   00427E                     u5000:
 10507   00427E                     
 10508                           ; BSR set to: 0
 10509   00427E  0012               	return		;funcret
 10510   004280                     __end_of_EUSART2_is_rx_ready:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _EUSART2_Read *****************
 10514 ;; Defined at:
 10515 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;		None
 10518 ;; Auto vars:     Size  Location     Type
 10519 ;;  readValue       1    0        unsigned char 
 10520 ;; Return value:  Size  Location     Type
 10521 ;;                  1    wreg      unsigned char 
 10522 ;; Registers used:
 10523 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10524 ;; Tracked objects:
 10525 ;;		On entry : 0/0
 10526 ;;		On exit  : 0/0
 10527 ;;		Unchanged: 0/0
 10528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10529 ;;      Params:         0       0       0       0       0       0       0
 10530 ;;      Locals:         0       0       0       0       0       0       0
 10531 ;;      Temps:          0       0       0       0       0       0       0
 10532 ;;      Totals:         0       0       0       0       0       0       0
 10533 ;;Total ram usage:        0 bytes
 10534 ;; Hardware stack levels used: 1
 10535 ;; Hardware stack levels required when called: 11
 10536 ;; This function calls:
 10537 ;;		Nothing
 10538 ;; This function is called by:
 10539 ;;		_main
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text48
 10544   003CB2                     __ptext48:
 10545                           	callstack 0
 10546   003CB2                     _EUSART2_Read:
 10547                           	callstack 19
 10548   003CB2                     l5082:
 10549                           
 10550                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
 10551   003CB2  0100               	movlb	0	; () banked
 10552   003CB4  51DF               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 10553   003CB6  B4D8               	btfsc	status,2,c
 10554   003CB8  EF60  F01E         	goto	u5011
 10555   003CBC  EF62  F01E         	goto	u5010
 10556   003CC0                     u5011:
 10557   003CC0  EF59  F01E         	goto	l5082
 10558   003CC4                     u5010:
 10559   003CC4                     
 10560                           ; BSR set to: 0
 10561                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
 10562   003CC4  0E00               	movlw	low _eusart2RxStatusBuffer
 10563   003CC6  25E0               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 10564   003CC8  6ED9               	movwf	fsr2l,c
 10565   003CCA  6ADA               	clrf	fsr2h,c
 10566   003CCC  0E01               	movlw	high _eusart2RxStatusBuffer
 10567   003CCE  22DA               	addwfc	fsr2h,f,c
 10568   003CD0  50DF               	movf	indf2,w,c
 10569   003CD2  6FDE               	movwf	_eusart2RxLastError& (0+255),b	;volatile
 10570   003CD4  0E08               	movlw	low _eusart2RxBuffer
 10571   003CD6  25E0               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
 10572   003CD8  6ED9               	movwf	fsr2l,c
 10573   003CDA  6ADA               	clrf	fsr2h,c
 10574   003CDC  0E01               	movlw	high _eusart2RxBuffer
 10575   003CDE  22DA               	addwfc	fsr2h,f,c
 10576   003CE0                     
 10577                           ; BSR set to: 0
 10578   003CE0  2BE0               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 10579   003CE2                     
 10580                           ; BSR set to: 0
 10581                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 10582   003CE2  0E07               	movlw	7
 10583   003CE4  65E0               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 10584   003CE6  EF77  F01E         	goto	u5021
 10585   003CEA  EF79  F01E         	goto	u5020
 10586   003CEE                     u5021:
 10587   003CEE  EF7B  F01E         	goto	l5092
 10588   003CF2                     u5020:
 10589   003CF2                     
 10590                           ; BSR set to: 0
 10591                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
 10592   003CF2  0E00               	movlw	0
 10593   003CF4  6FE0               	movwf	_eusart2RxTail& (0+255),b	;volatile
 10594   003CF6                     l5092:
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
 10598   003CF6  9AA3               	bcf	163,5,c	;volatile
 10599   003CF8                     
 10600                           ; BSR set to: 0
 10601                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
 10602   003CF8  07DF               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 10603   003CFA                     
 10604                           ; BSR set to: 0
 10605                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
 10606   003CFA  8AA3               	bsf	163,5,c	;volatile
 10607   003CFC                     
 10608                           ; BSR set to: 0
 10609   003CFC  0012               	return		;funcret
 10610   003CFE                     __end_of_EUSART2_Read:
 10611                           	callstack 0
 10612                           
 10613 ;; *************** function _EUSART1_is_rx_ready *****************
 10614 ;; Defined at:
 10615 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;		None
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;		None
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      _Bool 
 10622 ;; Registers used:
 10623 ;;		wreg
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10629 ;;      Params:         0       0       0       0       0       0       0
 10630 ;;      Locals:         0       0       0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0
 10632 ;;      Totals:         0       0       0       0       0       0       0
 10633 ;;Total ram usage:        0 bytes
 10634 ;; Hardware stack levels used: 1
 10635 ;; Hardware stack levels required when called: 11
 10636 ;; This function calls:
 10637 ;;		Nothing
 10638 ;; This function is called by:
 10639 ;;		_main
 10640 ;; This function uses a non-reentrant model
 10641 ;;
 10642                           
 10643                           	psect	text49
 10644   004296                     __ptext49:
 10645                           	callstack 0
 10646   004296                     _EUSART1_is_rx_ready:
 10647                           	callstack 19
 10648   004296                     
 10649                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 10650   004296  BA9E               	btfsc	158,5,c	;volatile
 10651   004298  EF50  F021         	goto	u5131
 10652   00429C  EF53  F021         	goto	u5130
 10653   0042A0                     u5131:
 10654   0042A0  0E01               	movlw	1
 10655   0042A2  EF54  F021         	goto	u5136
 10656   0042A6                     u5130:
 10657   0042A6  0E00               	movlw	0
 10658   0042A8                     u5136:
 10659   0042A8  0012               	return		;funcret
 10660   0042AA                     __end_of_EUSART1_is_rx_ready:
 10661                           	callstack 0
 10662                           
 10663 ;; *************** function _EPWM2_LoadDutyValue *****************
 10664 ;; Defined at:
 10665 ;;		line 90 in file "mcc_generated_files/epwm2.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;  dutyValue       2   24[BANK0 ] unsigned short 
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2, status,0
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10679 ;;      Params:         0       2       0       0       0       0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0
 10681 ;;      Temps:          0       2       0       0       0       0       0
 10682 ;;      Totals:         0       4       0       0       0       0       0
 10683 ;;Total ram usage:        4 bytes
 10684 ;; Hardware stack levels used: 1
 10685 ;; Hardware stack levels required when called: 11
 10686 ;; This function calls:
 10687 ;;		Nothing
 10688 ;; This function is called by:
 10689 ;;		_main
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           	psect	text50
 10694   003FC2                     __ptext50:
 10695                           	callstack 0
 10696   003FC2                     _EPWM2_LoadDutyValue:
 10697                           	callstack 19
 10698   003FC2                     
 10699                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
 10700   003FC2  C078  F07A         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
 10701   003FC6  C079  F07B         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
 10702   003FCA  0100               	movlb	0	; () banked
 10703   003FCC  90D8               	bcf	status,0,c
 10704   003FCE  337B               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
 10705   003FD0  337A               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
 10706   003FD2  90D8               	bcf	status,0,c
 10707   003FD4  337B               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
 10708   003FD6  337A               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
 10709   003FD8  517A               	movf	??_EPWM2_LoadDutyValue& (0+255),w,b
 10710   003FDA  6E67               	movwf	103,c	;volatile
 10711                           
 10712                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 10713   003FDC  C078  F07A         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
 10714   003FE0  0E03               	movlw	3
 10715   003FE2  177A               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
 10716   003FE4  3B7A               	swapf	??_EPWM2_LoadDutyValue& (0+255),f,b
 10717   003FE6  0EF0               	movlw	240
 10718   003FE8  177A               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
 10719   003FEA  5066               	movf	102,w,c	;volatile
 10720   003FEC  0BCF               	andlw	207
 10721   003FEE  117A               	iorwf	??_EPWM2_LoadDutyValue& (0+255),w,b
 10722   003FF0  6E66               	movwf	102,c	;volatile
 10723   003FF2                     
 10724                           ; BSR set to: 0
 10725   003FF2  0012               	return		;funcret
 10726   003FF4                     __end_of_EPWM2_LoadDutyValue:
 10727                           	callstack 0
 10728                           
 10729 ;; *************** function _INTERRUPT_InterruptManager *****************
 10730 ;; Defined at:
 10731 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10732 ;; Parameters:    Size  Location     Type
 10733 ;;		None
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;		None
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      void 
 10738 ;; Registers used:
 10739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : 0/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10745 ;;      Params:         0       0       0       0       0       0       0
 10746 ;;      Locals:         0       0       0       0       0       0       0
 10747 ;;      Temps:          0      12       0       0       0       0       0
 10748 ;;      Totals:         0      12       0       0       0       0       0
 10749 ;;Total ram usage:       12 bytes
 10750 ;; Hardware stack levels used: 1
 10751 ;; Hardware stack levels required when called: 10
 10752 ;; This function calls:
 10753 ;;		Absolute function
 10754 ;;		_EUSART2_Receive_ISR
 10755 ;;		_EUSART2_Transmit_ISR
 10756 ;;		_TMR1_ISR
 10757 ;;		_rxEUSART2ISR
 10758 ;; This function is called by:
 10759 ;;		Interrupt level 2
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763                           	psect	intcode
 10764   000008                     __pintcode:
 10765                           	callstack 0
 10766   000008                     _INTERRUPT_InterruptManager:
 10767                           	callstack 10
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;incstack = 0
 10771   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10772   00000A  CFFA F06C          	movff	pclath,??_INTERRUPT_InterruptManager
 10773   00000E  CFFB F06D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10774   000012  CFE1 F06E          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 10775   000016  CFE2 F06F          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 10776   00001A  CFD9 F070          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 10777   00001E  CFDA F071          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 10778   000022  CFF3 F072          	movff	prodl,??_INTERRUPT_InterruptManager+6
 10779   000026  CFF4 F073          	movff	prodh,??_INTERRUPT_InterruptManager+7
 10780   00002A  CFF6 F074          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
 10781   00002E  CFF7 F075          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
 10782   000032  CFF8 F076          	movff	tblptru,??_INTERRUPT_InterruptManager+10
 10783   000036  CFF5 F077          	movff	tablat,??_INTERRUPT_InterruptManager+11
 10784   00003A                     
 10785                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 10786   00003A  ACF2               	btfss	242,6,c	;volatile
 10787   00003C  EF22  F000         	goto	i2u533_41
 10788   000040  EF24  F000         	goto	i2u533_40
 10789   000044                     i2u533_41:
 10790   000044  EF72  F000         	goto	i2l178
 10791   000048                     i2u533_40:
 10792   000048                     
 10793                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 10794   000048  A8A3               	btfss	163,4,c	;volatile
 10795   00004A  EF29  F000         	goto	i2u534_41
 10796   00004E  EF2B  F000         	goto	i2u534_40
 10797   000052                     i2u534_41:
 10798   000052  EF42  F000         	goto	i2l171
 10799   000056                     i2u534_40:
 10800   000056  A8A4               	btfss	164,4,c	;volatile
 10801   000058  EF30  F000         	goto	i2u535_41
 10802   00005C  EF32  F000         	goto	i2u535_40
 10803   000060                     i2u535_41:
 10804   000060  EF42  F000         	goto	i2l171
 10805   000064                     i2u535_40:
 10806   000064                     
 10807                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
 10808   000064  D802               	call	i2u536_48
 10809   000066  EF40  F000         	goto	i2u536_49
 10810   00006A                     i2u536_48:
 10811   00006A  0005               	push	
 10812   00006C  0101               	movlb	1	; () banked
 10813   00006E  6EFA               	movwf	pclath,c
 10814   000070  5128               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 10815   000072  6EFD               	movwf	tosl,c
 10816   000074  5129               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 10817   000076  6EFE               	movwf	tosh,c
 10818   000078  50F8               	movf	tblptru,w,c
 10819   00007A  6EFF               	movwf	tosu,c
 10820   00007C  50FA               	movf	pclath,w,c
 10821   00007E  0012               	return		;indir
 10822   000080                     i2u536_49:
 10823                           
 10824                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 10825   000080  EF72  F000         	goto	i2l178
 10826   000084                     i2l171:
 10827   000084  AAA3               	btfss	163,5,c	;volatile
 10828   000086  EF47  F000         	goto	i2u537_41
 10829   00008A  EF49  F000         	goto	i2u537_40
 10830   00008E                     i2u537_41:
 10831   00008E  EF60  F000         	goto	i2l173
 10832   000092                     i2u537_40:
 10833   000092  AAA4               	btfss	164,5,c	;volatile
 10834   000094  EF4E  F000         	goto	i2u538_41
 10835   000098  EF50  F000         	goto	i2u538_40
 10836   00009C                     i2u538_41:
 10837   00009C  EF60  F000         	goto	i2l173
 10838   0000A0                     i2u538_40:
 10839   0000A0                     
 10840                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
 10841   0000A0  D802               	call	i2u539_48
 10842   0000A2  EF5E  F000         	goto	i2u539_49
 10843   0000A6                     i2u539_48:
 10844   0000A6  0005               	push	
 10845   0000A8  0101               	movlb	1	; () banked
 10846   0000AA  6EFA               	movwf	pclath,c
 10847   0000AC  5126               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 10848   0000AE  6EFD               	movwf	tosl,c
 10849   0000B0  5127               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 10850   0000B2  6EFE               	movwf	tosh,c
 10851   0000B4  50F8               	movf	tblptru,w,c
 10852   0000B6  6EFF               	movwf	tosu,c
 10853   0000B8  50FA               	movf	pclath,w,c
 10854   0000BA  0012               	return		;indir
 10855   0000BC                     i2u539_49:
 10856                           
 10857                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 10858   0000BC  EF72  F000         	goto	i2l178
 10859   0000C0                     i2l173:
 10860   0000C0  A09D               	btfss	157,0,c	;volatile
 10861   0000C2  EF65  F000         	goto	i2u540_41
 10862   0000C6  EF67  F000         	goto	i2u540_40
 10863   0000CA                     i2u540_41:
 10864   0000CA  EF72  F000         	goto	i2l172
 10865   0000CE                     i2u540_40:
 10866   0000CE  A09E               	btfss	158,0,c	;volatile
 10867   0000D0  EF6C  F000         	goto	i2u541_41
 10868   0000D4  EF6E  F000         	goto	i2u541_40
 10869   0000D8                     i2u541_41:
 10870   0000D8  EF72  F000         	goto	i2l172
 10871   0000DC                     i2u541_40:
 10872   0000DC                     
 10873                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             TMR1_ISR();
 10874   0000DC  EC6E  F01F         	call	_TMR1_ISR	;wreg free
 10875                           
 10876                           ;mcc_generated_files/interrupt_manager.c: 74:         }
 10877   0000E0  EF72  F000         	goto	i2l178
 10878   0000E4                     i2l172:
 10879   0000E4                     i2l178:
 10880   0000E4  C077  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
 10881   0000E8  C076  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
 10882   0000EC  C075  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
 10883   0000F0  C074  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
 10884   0000F4  C073  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 10885   0000F8  C072  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 10886   0000FC  C071  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 10887   000100  C070  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 10888   000104  C06F  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 10889   000108  C06E  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 10890   00010C  C06D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10891   000110  C06C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10892   000114  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10893   000116  0011               	retfie		f
 10894   000118                     __end_of_INTERRUPT_InterruptManager:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _EUSART2_Receive_ISR *****************
 10898 ;; Defined at:
 10899 ;;		line 216 in file "mcc_generated_files/eusart2.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;                  1    wreg      void 
 10906 ;; Registers used:
 10907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10913 ;;      Params:         0       0       0       0       0       0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used: 1
 10919 ;; Hardware stack levels required when called: 2
 10920 ;; This function calls:
 10921 ;;		Absolute function
 10922 ;;		_EUSART2_DefaultErrorHandler
 10923 ;;		_EUSART2_DefaultFramingErrorHandler
 10924 ;;		_EUSART2_DefaultOverrunErrorHandler
 10925 ;;		_EUSART2_RxDataHandler
 10926 ;; This function is called by:
 10927 ;;		_EUSART2_Initialize
 10928 ;;		_INTERRUPT_InterruptManager
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           
 10932                           	psect	text52
 10933   00371E                     __ptext52:
 10934                           	callstack 0
 10935   00371E                     _EUSART2_Receive_ISR:
 10936                           	callstack 17
 10937   00371E                     
 10938                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
 10939   00371E  0E00               	movlw	low _eusart2RxStatusBuffer
 10940   003720  0100               	movlb	0	; () banked
 10941   003722  25E1               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 10942   003724  6ED9               	movwf	fsr2l,c
 10943   003726  6ADA               	clrf	fsr2h,c
 10944   003728  0E01               	movlw	high _eusart2RxStatusBuffer
 10945   00372A  22DA               	addwfc	fsr2h,f,c
 10946   00372C  0E00               	movlw	0
 10947   00372E  6EDF               	movwf	indf2,c
 10948   003730                     
 10949                           ; BSR set to: 0
 10950                           ;mcc_generated_files/eusart2.c: 221:     if(RCSTA2bits.FERR){
 10951   003730  A471               	btfss	113,2,c	;volatile
 10952   003732  EF9D  F01B         	goto	i2u505_41
 10953   003736  EF9F  F01B         	goto	i2u505_40
 10954   00373A                     i2u505_41:
 10955   00373A  EFB4  F01B         	goto	i2l5120
 10956   00373E                     i2u505_40:
 10957   00373E                     
 10958                           ; BSR set to: 0
 10959                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
 10960   00373E  0E00               	movlw	low _eusart2RxStatusBuffer
 10961   003740  25E1               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 10962   003742  6ED9               	movwf	fsr2l,c
 10963   003744  6ADA               	clrf	fsr2h,c
 10964   003746  0E01               	movlw	high _eusart2RxStatusBuffer
 10965   003748  22DA               	addwfc	fsr2h,f,c
 10966   00374A  0101               	movlb	1	; () banked
 10967   00374C  82DF               	bsf	indf2,1,c
 10968   00374E                     
 10969                           ; BSR set to: 1
 10970                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
 10971   00374E  D802               	call	i2u506_48
 10972   003750  EFB4  F01B         	goto	i2u506_49
 10973   003754                     i2u506_48:
 10974   003754  0005               	push	
 10975   003756  6EFA               	movwf	pclath,c
 10976   003758  5124               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
 10977   00375A  6EFD               	movwf	tosl,c
 10978   00375C  5125               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
 10979   00375E  6EFE               	movwf	tosh,c
 10980   003760  50F8               	movf	tblptru,w,c
 10981   003762  6EFF               	movwf	tosu,c
 10982   003764  50FA               	movf	pclath,w,c
 10983   003766  0012               	return		;indir
 10984   003768                     i2u506_49:
 10985   003768                     i2l5120:
 10986                           
 10987                           ;mcc_generated_files/eusart2.c: 226:     if(RCSTA2bits.OERR){
 10988   003768  A271               	btfss	113,1,c	;volatile
 10989   00376A  EFB9  F01B         	goto	i2u507_41
 10990   00376E  EFBB  F01B         	goto	i2u507_40
 10991   003772                     i2u507_41:
 10992   003772  EFD1  F01B         	goto	i2l5126
 10993   003776                     i2u507_40:
 10994   003776                     
 10995                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
 10996   003776  0E00               	movlw	low _eusart2RxStatusBuffer
 10997   003778  0100               	movlb	0	; () banked
 10998   00377A  25E1               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 10999   00377C  6ED9               	movwf	fsr2l,c
 11000   00377E  6ADA               	clrf	fsr2h,c
 11001   003780  0E01               	movlw	high _eusart2RxStatusBuffer
 11002   003782  22DA               	addwfc	fsr2h,f,c
 11003   003784  0101               	movlb	1	; () banked
 11004   003786  84DF               	bsf	indf2,2,c
 11005   003788                     
 11006                           ; BSR set to: 1
 11007                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
 11008   003788  D802               	call	i2u508_48
 11009   00378A  EFD1  F01B         	goto	i2u508_49
 11010   00378E                     i2u508_48:
 11011   00378E  0005               	push	
 11012   003790  6EFA               	movwf	pclath,c
 11013   003792  5122               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
 11014   003794  6EFD               	movwf	tosl,c
 11015   003796  5123               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
 11016   003798  6EFE               	movwf	tosh,c
 11017   00379A  50F8               	movf	tblptru,w,c
 11018   00379C  6EFF               	movwf	tosu,c
 11019   00379E  50FA               	movf	pclath,w,c
 11020   0037A0  0012               	return		;indir
 11021   0037A2                     i2u508_49:
 11022   0037A2                     i2l5126:
 11023                           
 11024                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
 11025   0037A2  0E00               	movlw	low _eusart2RxStatusBuffer
 11026   0037A4  0100               	movlb	0	; () banked
 11027   0037A6  25E1               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 11028   0037A8  6ED9               	movwf	fsr2l,c
 11029   0037AA  6ADA               	clrf	fsr2h,c
 11030   0037AC  0E01               	movlw	high _eusart2RxStatusBuffer
 11031   0037AE  22DA               	addwfc	fsr2h,f,c
 11032   0037B0  50DF               	movf	indf2,w,c
 11033   0037B2  B4D8               	btfsc	status,2,c
 11034   0037B4  EFDE  F01B         	goto	i2u509_41
 11035   0037B8  EFE0  F01B         	goto	i2u509_40
 11036   0037BC                     i2u509_41:
 11037   0037BC  EFF0  F01B         	goto	i2l5130
 11038   0037C0                     i2u509_40:
 11039   0037C0                     
 11040                           ; BSR set to: 0
 11041                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
 11042   0037C0  D802               	call	i2u510_48
 11043   0037C2  EFEE  F01B         	goto	i2u510_49
 11044   0037C6                     i2u510_48:
 11045   0037C6  0005               	push	
 11046   0037C8  0101               	movlb	1	; () banked
 11047   0037CA  6EFA               	movwf	pclath,c
 11048   0037CC  5120               	movf	_EUSART2_ErrorHandler& (0+255),w,b
 11049   0037CE  6EFD               	movwf	tosl,c
 11050   0037D0  5121               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
 11051   0037D2  6EFE               	movwf	tosh,c
 11052   0037D4  50F8               	movf	tblptru,w,c
 11053   0037D6  6EFF               	movwf	tosu,c
 11054   0037D8  50FA               	movf	pclath,w,c
 11055   0037DA  0012               	return		;indir
 11056   0037DC                     i2u510_49:
 11057                           
 11058                           ;mcc_generated_files/eusart2.c: 233:     } else {
 11059   0037DC  EFF2  F01B         	goto	i2l116
 11060   0037E0                     i2l5130:
 11061                           
 11062                           ; BSR set to: 0
 11063                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
 11064   0037E0  EC6B  F020         	call	_EUSART2_RxDataHandler	;wreg free
 11065   0037E4                     i2l116:
 11066   0037E4  0012               	return		;funcret
 11067   0037E6                     __end_of_EUSART2_Receive_ISR:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function _rxEUSART2ISR *****************
 11071 ;; Defined at:
 11072 ;;		line 320 in file "main.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;  character       1   93[COMRAM] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11086 ;;      Params:         0       0       0       0       0       0       0
 11087 ;;      Locals:         1       0       0       0       0       0       0
 11088 ;;      Temps:          0       2       0       0       0       0       0
 11089 ;;      Totals:         1       2       0       0       0       0       0
 11090 ;;Total ram usage:        3 bytes
 11091 ;; Hardware stack levels used: 1
 11092 ;; Hardware stack levels required when called: 9
 11093 ;; This function calls:
 11094 ;;		i2_printf
 11095 ;; This function is called by:
 11096 ;;		_main
 11097 ;;		_INTERRUPT_InterruptManager
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text53
 11102   002F4E                     __ptext53:
 11103                           	callstack 0
 11104   002F4E                     _rxEUSART2ISR:
 11105                           	callstack 10
 11106   002F4E                     
 11107                           ;main.c: 326:     static rxState_t state = RXDATA;;main.c: 328:     character = RCREG2;
 11108   002F4E  CF74 F05E          	movff	3956,rxEUSART2ISR@character	;volatile
 11109                           
 11110                           ;main.c: 329:     if(received == 0)
 11111   002F52  0101               	movlb	1	; () banked
 11112   002F54  512A               	movf	_received& (0+255),w,b
 11113   002F56  A4D8               	btfss	status,2,c
 11114   002F58  EFB0  F017         	goto	i2u526_41
 11115   002F5C  EFB2  F017         	goto	i2u526_40
 11116   002F60                     i2u526_41:
 11117   002F60  EF20  F018         	goto	i2l622
 11118   002F64                     i2u526_40:
 11119   002F64  EF0A  F018         	goto	i2l5262
 11120   002F68                     i2l5230:
 11121                           
 11122                           ; BSR set to: 0
 11123                           ;main.c: 334:                 printf(">> RxData: %c\n\r", character);
 11124   002F68  0E50               	movlw	low STR_55
 11125   002F6A  6F66               	movwf	i2printf@fmt& (0+255),b
 11126   002F6C  0E7F               	movlw	high STR_55
 11127   002F6E  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
 11128   002F70  C05E  F068         	movff	rxEUSART2ISR@character,?i2_printf+2
 11129   002F74  6B69               	clrf	(?i2_printf+3)& (0+255),b
 11130   002F76  ECBE  F020         	call	i2_printf	;wreg free
 11131   002F7A                     
 11132                           ;main.c: 336:                 receiveBuffer[i] = character;
 11133   002F7A  0E4F               	movlw	low _receiveBuffer
 11134   002F7C  0100               	movlb	0	; () banked
 11135   002F7E  25D6               	addwf	rxEUSART2ISR@i& (0+255),w,b
 11136   002F80  6ED9               	movwf	fsr2l,c
 11137   002F82  6ADA               	clrf	fsr2h,c
 11138   002F84  0E01               	movlw	high _receiveBuffer
 11139   002F86  22DA               	addwfc	fsr2h,f,c
 11140   002F88  C05E  FFDF         	movff	rxEUSART2ISR@character,indf2
 11141   002F8C                     
 11142                           ; BSR set to: 0
 11143                           ;main.c: 337:                 if(i == 0) rsum = character;
 11144   002F8C  51D6               	movf	rxEUSART2ISR@i& (0+255),w,b
 11145   002F8E  A4D8               	btfss	status,2,c
 11146   002F90  EFCC  F017         	goto	i2u527_41
 11147   002F94  EFCE  F017         	goto	i2u527_40
 11148   002F98                     i2u527_41:
 11149   002F98  EFD2  F017         	goto	i2l5238
 11150   002F9C                     i2u527_40:
 11151   002F9C                     
 11152                           ; BSR set to: 0
 11153   002F9C  C05E  F12C         	movff	rxEUSART2ISR@character,_rsum
 11154   002FA0  EFD5  F017         	goto	i2l5240
 11155   002FA4                     i2l5238:
 11156                           
 11157                           ; BSR set to: 0
 11158   002FA4  505E               	movf	rxEUSART2ISR@character^0,w,c
 11159   002FA6  0101               	movlb	1	; () banked
 11160   002FA8  272C               	addwf	_rsum& (0+255),f,b
 11161   002FAA                     i2l5240:
 11162                           
 11163                           ;main.c: 339:                 i++;
 11164   002FAA  0100               	movlb	0	; () banked
 11165   002FAC  2BD6               	incf	rxEUSART2ISR@i& (0+255),f,b
 11166   002FAE                     
 11167                           ; BSR set to: 0
 11168                           ;main.c: 340:                 if((character == '\0') || (i == 32 -1)) state = RXCSUM;
 11169   002FAE  505E               	movf	rxEUSART2ISR@character^0,w,c
 11170   002FB0  B4D8               	btfsc	status,2,c
 11171   002FB2  EFDD  F017         	goto	i2u528_41
 11172   002FB6  EFDF  F017         	goto	i2u528_40
 11173   002FBA                     i2u528_41:
 11174   002FBA  EFE8  F017         	goto	i2l5246
 11175   002FBE                     i2u528_40:
 11176   002FBE                     
 11177                           ; BSR set to: 0
 11178   002FBE  0E1F               	movlw	31
 11179   002FC0  19D6               	xorwf	rxEUSART2ISR@i& (0+255),w,b
 11180   002FC2  A4D8               	btfss	status,2,c
 11181   002FC4  EFE6  F017         	goto	i2u529_41
 11182   002FC8  EFE8  F017         	goto	i2u529_40
 11183   002FCC                     i2u529_41:
 11184   002FCC  EF20  F018         	goto	i2l622
 11185   002FD0                     i2u529_40:
 11186   002FD0                     i2l5246:
 11187                           
 11188                           ; BSR set to: 0
 11189   002FD0  0E01               	movlw	1
 11190   002FD2  6FD5               	movwf	rxEUSART2ISR@state& (0+255),b
 11191   002FD4  EF20  F018         	goto	i2l622
 11192   002FD8                     i2l5248:
 11193                           
 11194                           ; BSR set to: 0
 11195                           ;main.c: 343:                 printf(">> RxCSum: %u\n\r", character);
 11196   002FD8  0E60               	movlw	low STR_56
 11197   002FDA  6F66               	movwf	i2printf@fmt& (0+255),b
 11198   002FDC  0E7F               	movlw	high STR_56
 11199   002FDE  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
 11200   002FE0  C05E  F068         	movff	rxEUSART2ISR@character,?i2_printf+2
 11201   002FE4  6B69               	clrf	(?i2_printf+3)& (0+255),b
 11202   002FE6  ECBE  F020         	call	i2_printf	;wreg free
 11203   002FEA                     
 11204                           ;main.c: 345:                 receiveBuffer[i] = character;
 11205   002FEA  0E4F               	movlw	low _receiveBuffer
 11206   002FEC  0100               	movlb	0	; () banked
 11207   002FEE  25D6               	addwf	rxEUSART2ISR@i& (0+255),w,b
 11208   002FF0  6ED9               	movwf	fsr2l,c
 11209   002FF2  6ADA               	clrf	fsr2h,c
 11210   002FF4  0E01               	movlw	high _receiveBuffer
 11211   002FF6  22DA               	addwfc	fsr2h,f,c
 11212   002FF8  C05E  FFDF         	movff	rxEUSART2ISR@character,indf2
 11213   002FFC                     
 11214                           ; BSR set to: 0
 11215                           ;main.c: 346:                 rcsum = character;
 11216   002FFC  C05E  F12B         	movff	rxEUSART2ISR@character,_rcsum
 11217   003000                     
 11218                           ; BSR set to: 0
 11219                           ;main.c: 347:                 i = 0;
 11220   003000  0E00               	movlw	0
 11221   003002  6FD6               	movwf	rxEUSART2ISR@i& (0+255),b
 11222   003004                     
 11223                           ; BSR set to: 0
 11224                           ;main.c: 348:                 received = 1;
 11225   003004  0E01               	movlw	1
 11226   003006  0101               	movlb	1	; () banked
 11227   003008  6F2A               	movwf	_received& (0+255),b
 11228   00300A                     
 11229                           ; BSR set to: 1
 11230                           ;main.c: 349:                 state = RXDATA;
 11231   00300A  0E00               	movlw	0
 11232   00300C  0100               	movlb	0	; () banked
 11233   00300E  6FD5               	movwf	rxEUSART2ISR@state& (0+255),b
 11234                           
 11235                           ;main.c: 350:                 break;
 11236   003010  EF20  F018         	goto	i2l622
 11237   003014                     i2l5262:
 11238                           
 11239                           ; BSR set to: 1
 11240   003014  0100               	movlb	0	; () banked
 11241   003016  51D5               	movf	rxEUSART2ISR@state& (0+255),w,b
 11242   003018  6F6A               	movwf	??_rxEUSART2ISR& (0+255),b
 11243   00301A  6B6B               	clrf	(??_rxEUSART2ISR+1)& (0+255),b
 11244                           
 11245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11246                           ; Switch size 1, requested type "simple"
 11247                           ; Number of cases is 1, Range of values is 0 to 0
 11248                           ; switch strategies available:
 11249                           ; Name         Instructions Cycles
 11250                           ; simple_byte            4     3 (average)
 11251                           ;	Chosen strategy is simple_byte
 11252   00301C  516B               	movf	(??_rxEUSART2ISR+1)& (0+255),w,b
 11253   00301E  0A00               	xorlw	0	; case 0
 11254   003020  B4D8               	btfsc	status,2,c
 11255   003022  EF15  F018         	goto	i2l6852
 11256   003026  EF20  F018         	goto	i2l622
 11257   00302A                     i2l6852:
 11258                           
 11259                           ; BSR set to: 0
 11260                           ; Switch size 1, requested type "simple"
 11261                           ; Number of cases is 2, Range of values is 0 to 1
 11262                           ; switch strategies available:
 11263                           ; Name         Instructions Cycles
 11264                           ; simple_byte            7     4 (average)
 11265                           ;	Chosen strategy is simple_byte
 11266   00302A  516A               	movf	??_rxEUSART2ISR& (0+255),w,b
 11267   00302C  0A00               	xorlw	0	; case 0
 11268   00302E  B4D8               	btfsc	status,2,c
 11269   003030  EFB4  F017         	goto	i2l5230
 11270   003034  0A01               	xorlw	1	; case 1
 11271   003036  B4D8               	btfsc	status,2,c
 11272   003038  EFEC  F017         	goto	i2l5248
 11273   00303C  EF20  F018         	goto	i2l622
 11274   003040                     i2l622:
 11275   003040  0012               	return		;funcret
 11276   003042                     __end_of_rxEUSART2ISR:
 11277                           	callstack 0
 11278                           
 11279 ;; *************** function i2_printf *****************
 11280 ;; Defined at:
 11281 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
 11282 ;; Parameters:    Size  Location     Type
 11283 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
 11284 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 11285 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 11286 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 11287 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 11288 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 11289 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 11290 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 11291 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 11292 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 11293 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 11294 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 11295 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 11296 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 11297 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 11298 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;  ap              2   91[COMRAM] PTR void [1]
 11301 ;;		 -> ?i2_printf(2), ?_printf(2), 
 11302 ;;  ret             2    0        int 
 11303 ;; Return value:  Size  Location     Type
 11304 ;;                  2    6[BANK0 ] int 
 11305 ;; Registers used:
 11306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11307 ;; Tracked objects:
 11308 ;;		On entry : 0/0
 11309 ;;		On exit  : 0/0
 11310 ;;		Unchanged: 0/0
 11311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11312 ;;      Params:         0       4       0       0       0       0       0
 11313 ;;      Locals:         2       0       0       0       0       0       0
 11314 ;;      Temps:          0       0       0       0       0       0       0
 11315 ;;      Totals:         2       4       0       0       0       0       0
 11316 ;;Total ram usage:        6 bytes
 11317 ;; Hardware stack levels used: 1
 11318 ;; Hardware stack levels required when called: 8
 11319 ;; This function calls:
 11320 ;;		i2_vfprintf
 11321 ;; This function is called by:
 11322 ;;		_rxEUSART2ISR
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text54
 11327   00417C                     __ptext54:
 11328                           	callstack 0
 11329   00417C                     i2_printf:
 11330                           	callstack 10
 11331   00417C  0E68               	movlw	low (?i2_printf+2)
 11332   00417E  6E5C               	movwf	i2printf@ap^0,c
 11333   004180  0E00               	movlw	high (?i2_printf+2)
 11334   004182  6E5D               	movwf	(i2printf@ap+1)^0,c
 11335   004184  0E00               	movlw	0
 11336   004186  0100               	movlb	0	; () banked
 11337   004188  6F60               	movwf	i2vfprintf@fp& (0+255),b
 11338   00418A  0E00               	movlw	0
 11339   00418C  6F61               	movwf	(i2vfprintf@fp+1)& (0+255),b
 11340   00418E  C066  F062         	movff	i2printf@fmt,i2vfprintf@fmt
 11341   004192  C067  F063         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
 11342   004196  0E5C               	movlw	low i2printf@ap
 11343   004198  6F64               	movwf	i2vfprintf@ap& (0+255),b
 11344   00419A  0E00               	movlw	high i2printf@ap
 11345   00419C  6F65               	movwf	(i2vfprintf@ap+1)& (0+255),b
 11346   00419E  EC31  F01E         	call	i2_vfprintf	;wreg free
 11347   0041A2  0012               	return		;funcret
 11348   0041A4                     __end_ofi2_printf:
 11349                           	callstack 0
 11350                           
 11351 ;; *************** function i2_vfprintf *****************
 11352 ;; Defined at:
 11353 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 11354 ;; Parameters:    Size  Location     Type
 11355 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11356 ;;		 -> NULL(0), 
 11357 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11358 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 11359 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 11360 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 11361 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 11362 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 11363 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 11364 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 11365 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 11366 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 11367 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 11368 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 11369 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 11370 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 11371 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 11372 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 11373 ;;  ap              2    4[BANK0 ] PTR PTR void 
 11374 ;;		 -> i2printf@ap(2), printf@ap(2), 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
 11377 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 11378 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 11379 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 11380 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 11381 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 11382 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 11383 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 11384 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 11385 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 11386 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 11387 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 11388 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 11389 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 11390 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 11391 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 11392 ;; Return value:  Size  Location     Type
 11393 ;;                  2    0[BANK0 ] int 
 11394 ;; Registers used:
 11395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11396 ;; Tracked objects:
 11397 ;;		On entry : 0/0
 11398 ;;		On exit  : 0/0
 11399 ;;		Unchanged: 0/0
 11400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11401 ;;      Params:         0       6       0       0       0       0       0
 11402 ;;      Locals:         2       0       0       0       0       0       0
 11403 ;;      Temps:          0       0       0       0       0       0       0
 11404 ;;      Totals:         2       6       0       0       0       0       0
 11405 ;;Total ram usage:        8 bytes
 11406 ;; Hardware stack levels used: 1
 11407 ;; Hardware stack levels required when called: 7
 11408 ;; This function calls:
 11409 ;;		i2_vfpfcnvrt
 11410 ;; This function is called by:
 11411 ;;		i2_printf
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text55
 11416   003C62                     __ptext55:
 11417                           	callstack 0
 11418   003C62                     i2_vfprintf:
 11419                           	callstack 10
 11420   003C62                     
 11421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
 11422   003C62  C062  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
 11423   003C66  C063  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
 11424                           
 11425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
 11426   003C6A  EF45  F01E         	goto	i2l4890
 11427   003C6E                     i2l4888:
 11428                           
 11429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
 11430   003C6E  C060  F041         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
 11431   003C72  C061  F042         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
 11432   003C76  0E5A               	movlw	low i2vfprintf@cfmt
 11433   003C78  6E43               	movwf	i2vfpfcnvrt@fmt^0,c
 11434   003C7A  0E00               	movlw	high i2vfprintf@cfmt
 11435   003C7C  6E44               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
 11436   003C7E  C064  F045         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
 11437   003C82  C065  F046         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
 11438   003C86  EC81  F007         	call	i2_vfpfcnvrt	;wreg free
 11439   003C8A                     i2l4890:
 11440                           
 11441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
 11442   003C8A  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
 11443   003C8E  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
 11444   003C92                     	if	0	;tblptru may be non-zero
 11445   003C92                     	endif
 11446   003C92                     	if	0	;tblptru may be non-zero
 11447   003C92                     	endif
 11448   003C92  0008               	tblrd		*
 11449   003C94  50F5               	movf	tablat,w,c
 11450   003C96  0900               	iorlw	0
 11451   003C98  A4D8               	btfss	status,2,c
 11452   003C9A  EF51  F01E         	goto	i2u484_41
 11453   003C9E  EF53  F01E         	goto	i2u484_40
 11454   003CA2                     i2u484_41:
 11455   003CA2  EF37  F01E         	goto	i2l4888
 11456   003CA6                     i2u484_40:
 11457   003CA6                     
 11458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
 11459   003CA6  0E00               	movlw	0
 11460   003CA8  0100               	movlb	0	; () banked
 11461   003CAA  6F61               	movwf	(?i2_vfprintf+1)& (0+255),b
 11462   003CAC  0E00               	movlw	0
 11463   003CAE  6F60               	movwf	?i2_vfprintf& (0+255),b
 11464   003CB0                     
 11465                           ; BSR set to: 0
 11466   003CB0  0012               	return		;funcret
 11467   003CB2                     __end_ofi2_vfprintf:
 11468                           	callstack 0
 11469                           
 11470 ;; *************** function i2_vfpfcnvrt *****************
 11471 ;; Defined at:
 11472 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
 11475 ;;		 -> NULL(0), 
 11476 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
 11477 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
 11478 ;;  ap              2   68[COMRAM] PTR PTR void 
 11479 ;;		 -> i2printf@ap(2), printf@ap(2), 
 11480 ;; Auto vars:     Size  Location     Type
 11481 ;;  convarg         8   79[COMRAM] struct .
 11482 ;;  cp              2   87[COMRAM] PTR unsigned char 
 11483 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 11484 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 11485 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 11486 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 11487 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 11488 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 11489 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 11490 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 11491 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 11492 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 11493 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 11494 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 11495 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 11496 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 11497 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 11498 ;;  done            2   74[COMRAM] int 
 11499 ;;  i               2    0        int 
 11500 ;;  c               1   78[COMRAM] unsigned char 
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  1    wreg      void 
 11503 ;; Registers used:
 11504 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11510 ;;      Params:         6       0       0       0       0       0       0
 11511 ;;      Locals:        15       0       0       0       0       0       0
 11512 ;;      Temps:          4       0       0       0       0       0       0
 11513 ;;      Totals:        25       0       0       0       0       0       0
 11514 ;;Total ram usage:       25 bytes
 11515 ;; Hardware stack levels used: 1
 11516 ;; Hardware stack levels required when called: 6
 11517 ;; This function calls:
 11518 ;;		i2_atoi
 11519 ;;		i2_ctoa
 11520 ;;		i2_dtoa
 11521 ;;		i2_fputc
 11522 ;;		i2_isdigit
 11523 ;;		i2_stoa
 11524 ;;		i2_strncmp
 11525 ;;		i2_utoa
 11526 ;;		i2_xtoa
 11527 ;; This function is called by:
 11528 ;;		i2_vfprintf
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           	psect	text56
 11533   000F02                     __ptext56:
 11534                           	callstack 0
 11535   000F02                     i2_vfpfcnvrt:
 11536                           	callstack 10
 11537   000F02                     
 11538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
 11539   000F02  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11540   000F06  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11541   000F0A  CFDE FFF6          	movff	postinc2,tblptrl
 11542   000F0E  CFDD FFF7          	movff	postdec2,tblptrh
 11543   000F12                     	if	0	;tblptru may be non-zero
 11544   000F12                     	endif
 11545   000F12                     	if	0	;tblptru may be non-zero
 11546   000F12                     	endif
 11547   000F12  0008               	tblrd		*
 11548   000F14  50F5               	movf	tablat,w,c
 11549   000F16  0A25               	xorlw	37
 11550   000F18  A4D8               	btfss	status,2,c
 11551   000F1A  EF91  F007         	goto	i2u468_41
 11552   000F1E  EF93  F007         	goto	i2u468_40
 11553   000F22                     i2u468_41:
 11554   000F22  EFF2  F009         	goto	i2l4818
 11555   000F26                     i2u468_40:
 11556   000F26                     
 11557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
 11558   000F26  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11559   000F2A  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11560   000F2E  2ADE               	incf	postinc2,f,c
 11561   000F30  0E00               	movlw	0
 11562   000F32  22DD               	addwfc	postdec2,f,c
 11563   000F34                     
 11564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
 11565   000F34  0E00               	movlw	0
 11566   000F36  0100               	movlb	0	; () banked
 11567   000F38  6FCF               	movwf	(_width+1)& (0+255),b
 11568   000F3A  0E00               	movlw	0
 11569   000F3C  6FCE               	movwf	_width& (0+255),b
 11570   000F3E  C0CE  F0D4         	movff	_width,_flags
 11571   000F42                     
 11572                           ; BSR set to: 0
 11573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
 11574   000F42  69D0               	setf	_prec& (0+255),b
 11575   000F44  69D1               	setf	(_prec+1)& (0+255),b
 11576   000F46                     
 11577                           ; BSR set to: 0
 11578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
 11579   000F46  0E00               	movlw	0
 11580   000F48  6E4C               	movwf	(i2vfpfcnvrt@done+1)^0,c
 11581   000F4A  0E00               	movlw	0
 11582   000F4C  6E4B               	movwf	i2vfpfcnvrt@done^0,c
 11583                           
 11584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
 11585   000F4E  EFD4  F007         	goto	i2l4742
 11586   000F52                     i2l4732:
 11587                           
 11588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
 11589   000F52  0100               	movlb	0	; () banked
 11590   000F54  83D4               	bsf	_flags& (0+255),1,b
 11591   000F56                     
 11592                           ; BSR set to: 0
 11593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
 11594   000F56  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11595   000F5A  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11596   000F5E  2ADE               	incf	postinc2,f,c
 11597   000F60  0E00               	movlw	0
 11598   000F62  22DD               	addwfc	postdec2,f,c
 11599                           
 11600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
 11601   000F64  EFD4  F007         	goto	i2l4742
 11602   000F68                     i2l4736:
 11603                           
 11604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
 11605   000F68  0E00               	movlw	0
 11606   000F6A  6E4C               	movwf	(i2vfpfcnvrt@done+1)^0,c
 11607   000F6C  0E01               	movlw	1
 11608   000F6E  6E4B               	movwf	i2vfpfcnvrt@done^0,c
 11609                           
 11610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
 11611   000F70  EFD4  F007         	goto	i2l4742
 11612   000F74                     i2l4740:
 11613   000F74  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11614   000F78  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11615   000F7C  CFDE FFF6          	movff	postinc2,tblptrl
 11616   000F80  CFDD FFF7          	movff	postdec2,tblptrh
 11617   000F84                     	if	0	;tblptru may be non-zero
 11618   000F84                     	endif
 11619   000F84                     	if	0	;tblptru may be non-zero
 11620   000F84                     	endif
 11621   000F84  0008               	tblrd		*
 11622   000F86  50F5               	movf	tablat,w,c
 11623   000F88  6E47               	movwf	??i2_vfpfcnvrt^0,c
 11624   000F8A  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
 11625                           
 11626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11627                           ; Switch size 1, requested type "simple"
 11628                           ; Number of cases is 1, Range of values is 0 to 0
 11629                           ; switch strategies available:
 11630                           ; Name         Instructions Cycles
 11631                           ; simple_byte            4     3 (average)
 11632                           ;	Chosen strategy is simple_byte
 11633   000F8C  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 11634   000F8E  0A00               	xorlw	0	; case 0
 11635   000F90  B4D8               	btfsc	status,2,c
 11636   000F92  EFCD  F007         	goto	i2l6854
 11637   000F96  EFB4  F007         	goto	i2l4736
 11638   000F9A                     i2l6854:
 11639                           
 11640                           ; Switch size 1, requested type "simple"
 11641                           ; Number of cases is 1, Range of values is 48 to 48
 11642                           ; switch strategies available:
 11643                           ; Name         Instructions Cycles
 11644                           ; simple_byte            4     3 (average)
 11645                           ;	Chosen strategy is simple_byte
 11646   000F9A  5047               	movf	??i2_vfpfcnvrt^0,w,c
 11647   000F9C  0A30               	xorlw	48	; case 48
 11648   000F9E  B4D8               	btfsc	status,2,c
 11649   000FA0  EFA9  F007         	goto	i2l4732
 11650   000FA4  EFB4  F007         	goto	i2l4736
 11651   000FA8                     i2l4742:
 11652                           
 11653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
 11654   000FA8  504B               	movf	i2vfpfcnvrt@done^0,w,c
 11655   000FAA  104C               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
 11656   000FAC  B4D8               	btfsc	status,2,c
 11657   000FAE  EFDB  F007         	goto	i2u469_41
 11658   000FB2  EFDD  F007         	goto	i2u469_40
 11659   000FB6                     i2u469_41:
 11660   000FB6  EFBA  F007         	goto	i2l4740
 11661   000FBA                     i2u469_40:
 11662   000FBA                     
 11663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
 11664   000FBA  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11665   000FBE  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11666   000FC2  CFDE FFF6          	movff	postinc2,tblptrl
 11667   000FC6  CFDD FFF7          	movff	postdec2,tblptrh
 11668   000FCA                     	if	0	;tblptru may be non-zero
 11669   000FCA                     	endif
 11670   000FCA                     	if	0	;tblptru may be non-zero
 11671   000FCA                     	endif
 11672   000FCA  0008               	tblrd		*
 11673   000FCC  50F5               	movf	tablat,w,c
 11674   000FCE  0A2A               	xorlw	42
 11675   000FD0  A4D8               	btfss	status,2,c
 11676   000FD2  EFED  F007         	goto	i2u470_41
 11677   000FD6  EFEF  F007         	goto	i2u470_40
 11678   000FDA                     i2u470_41:
 11679   000FDA  EF19  F008         	goto	i2l4752
 11680   000FDE                     i2u470_40:
 11681   000FDE                     
 11682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
 11683   000FDE  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11684   000FE2  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11685   000FE6  2ADE               	incf	postinc2,f,c
 11686   000FE8  0E00               	movlw	0
 11687   000FEA  22DD               	addwfc	postdec2,f,c
 11688                           
 11689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11690   000FEC  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 11691   000FF0  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 11692   000FF4  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
 11693   000FF8  0E02               	movlw	2
 11694   000FFA  26DE               	addwf	postinc2,f,c
 11695   000FFC  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
 11696   001000  0E00               	movlw	0
 11697   001002  22DD               	addwfc	postdec2,f,c
 11698   001004  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 11699   001008  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 11700   00100C  CFDE F0CE          	movff	postinc2,_width
 11701   001010  CFDD F0CF          	movff	postdec2,_width+1
 11702   001014                     
 11703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
 11704   001014  0100               	movlb	0	; () banked
 11705   001016  BFCF               	btfsc	(_width+1)& (0+255),7,b
 11706   001018  EF12  F008         	goto	i2u471_40
 11707   00101C  EF10  F008         	goto	i2u471_41
 11708   001020                     i2u471_41:
 11709   001020  EF4C  F008         	goto	i2l4760
 11710   001024                     i2u471_40:
 11711   001024                     
 11712                           ; BSR set to: 0
 11713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
 11714   001024  81D4               	bsf	_flags& (0+255),0,b
 11715                           
 11716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
 11717   001026  6DCE               	negf	_width& (0+255),b
 11718   001028  1FCF               	comf	(_width+1)& (0+255),f,b
 11719   00102A  B0D8               	btfsc	status,0,c
 11720   00102C  2BCF               	incf	(_width+1)& (0+255),f,b
 11721   00102E  EF4C  F008         	goto	i2l4760
 11722   001032                     i2l4752:
 11723                           
 11724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
 11725   001032  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11726   001036  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11727   00103A  CFDE F007          	movff	postinc2,i2atoi@s
 11728   00103E  CFDD F008          	movff	postdec2,i2atoi@s+1
 11729   001042  EC5F  F016         	call	i2_atoi	;wreg free
 11730   001046  C007  F0CE         	movff	?i2_atoi,_width
 11731   00104A  C008  F0CF         	movff	?i2_atoi+1,_width+1
 11732                           
 11733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
 11734   00104E  EF30  F008         	goto	i2l4758
 11735   001052                     i2l4754:
 11736                           
 11737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
 11738   001052  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11739   001056  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11740   00105A  2ADE               	incf	postinc2,f,c
 11741   00105C  0E00               	movlw	0
 11742   00105E  22DD               	addwfc	postdec2,f,c
 11743   001060                     i2l4758:
 11744   001060  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11745   001064  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11746   001068  CFDE FFF6          	movff	postinc2,tblptrl
 11747   00106C  CFDD FFF7          	movff	postdec2,tblptrh
 11748   001070                     	if	0	;tblptru may be non-zero
 11749   001070                     	endif
 11750   001070                     	if	0	;tblptru may be non-zero
 11751   001070                     	endif
 11752   001070  0008               	tblrd		*
 11753   001072  CFF5 F047          	movff	tablat,??i2_vfpfcnvrt
 11754   001076  0ED0               	movlw	208
 11755   001078  2447               	addwf	??i2_vfpfcnvrt^0,w,c
 11756   00107A  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
 11757   00107C  6A49               	clrf	(??i2_vfpfcnvrt+2)^0,c
 11758   00107E  0EFF               	movlw	255
 11759   001080  2249               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
 11760   001082  5049               	movf	(??i2_vfpfcnvrt+2)^0,w,c
 11761   001084  E109               	bnz	i2u472_40
 11762   001086  0E0A               	movlw	10
 11763   001088  5C48               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
 11764   00108A  A0D8               	btfss	status,0,c
 11765   00108C  EF4A  F008         	goto	i2u472_41
 11766   001090  EF4C  F008         	goto	i2u472_40
 11767   001094                     i2u472_41:
 11768   001094  EF29  F008         	goto	i2l4754
 11769   001098                     i2u472_40:
 11770   001098                     i2l4760:
 11771                           
 11772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
 11773   001098  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11774   00109C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11775   0010A0  CFDE FFF6          	movff	postinc2,tblptrl
 11776   0010A4  CFDD FFF7          	movff	postdec2,tblptrh
 11777   0010A8                     	if	0	;tblptru may be non-zero
 11778   0010A8                     	endif
 11779   0010A8                     	if	0	;tblptru may be non-zero
 11780   0010A8                     	endif
 11781   0010A8  0008               	tblrd		*
 11782   0010AA  50F5               	movf	tablat,w,c
 11783   0010AC  0A63               	xorlw	99
 11784   0010AE  A4D8               	btfss	status,2,c
 11785   0010B0  EF5C  F008         	goto	i2u473_41
 11786   0010B4  EF5E  F008         	goto	i2u473_40
 11787   0010B8                     i2u473_41:
 11788   0010B8  EF81  F008         	goto	i2l4768
 11789   0010BC                     i2u473_40:
 11790   0010BC                     
 11791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
 11792   0010BC  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11793   0010C0  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11794   0010C4  2ADE               	incf	postinc2,f,c
 11795   0010C6  0E00               	movlw	0
 11796   0010C8  22DD               	addwfc	postdec2,f,c
 11797                           
 11798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11799   0010CA  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 11800   0010CE  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 11801   0010D2  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
 11802   0010D6  0E02               	movlw	2
 11803   0010D8  26DE               	addwf	postinc2,f,c
 11804   0010DA  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
 11805   0010DE  0E00               	movlw	0
 11806   0010E0  22DD               	addwfc	postdec2,f,c
 11807   0010E2  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 11808   0010E6  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 11809   0010EA  50DF               	movf	indf2,w,c
 11810   0010EC  6E4F               	movwf	i2vfpfcnvrt@c^0,c
 11811   0010EE                     
 11812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of i2_vfpfcnvrt is never used
 11813   0010EE  C041  F00C         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
 11814   0010F2  C042  F00D         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
 11815   0010F6  C04F  F00E         	movff	i2vfpfcnvrt@c,i2ctoa@c
 11816   0010FA  EC29  F01B         	call	i2_ctoa	;wreg free
 11817   0010FE  EF06  F00A         	goto	i2l1468
 11818   001102                     i2l4768:
 11819                           
 11820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
 11821   001102  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11822   001106  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11823   00110A  CFDE F058          	movff	postinc2,i2vfpfcnvrt@cp
 11824   00110E  CFDD F059          	movff	postdec2,i2vfpfcnvrt@cp+1
 11825   001112                     
 11826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
 11827   001112  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 11828   001116  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 11829   00111A                     	if	0	;tblptru may be non-zero
 11830   00111A                     	endif
 11831   00111A                     	if	0	;tblptru may be non-zero
 11832   00111A                     	endif
 11833   00111A  0008               	tblrd		*
 11834   00111C  50F5               	movf	tablat,w,c
 11835   00111E  0A64               	xorlw	100
 11836   001120  B4D8               	btfsc	status,2,c
 11837   001122  EF95  F008         	goto	i2u474_41
 11838   001126  EF97  F008         	goto	i2u474_40
 11839   00112A                     i2u474_41:
 11840   00112A  EFA5  F008         	goto	i2l4774
 11841   00112E                     i2u474_40:
 11842   00112E  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 11843   001132  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 11844   001136                     	if	0	;tblptru may be non-zero
 11845   001136                     	endif
 11846   001136                     	if	0	;tblptru may be non-zero
 11847   001136                     	endif
 11848   001136  0008               	tblrd		*
 11849   001138  50F5               	movf	tablat,w,c
 11850   00113A  0A69               	xorlw	105
 11851   00113C  A4D8               	btfss	status,2,c
 11852   00113E  EFA3  F008         	goto	i2u475_41
 11853   001142  EFA5  F008         	goto	i2u475_40
 11854   001146                     i2u475_41:
 11855   001146  EFE8  F008         	goto	i2l4780
 11856   00114A                     i2u475_40:
 11857   00114A                     i2l4774:
 11858                           
 11859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
 11860   00114A  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 11861   00114E  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 11862   001152  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
 11863   001156  0E02               	movlw	2
 11864   001158  26DE               	addwf	postinc2,f,c
 11865   00115A  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
 11866   00115E  0E00               	movlw	0
 11867   001160  22DD               	addwfc	postdec2,f,c
 11868   001162  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 11869   001166  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 11870   00116A  CFDE F050          	movff	postinc2,i2vfpfcnvrt@convarg
 11871   00116E  CFDD F051          	movff	postdec2,i2vfpfcnvrt@convarg+1
 11872   001172  0E00               	movlw	0
 11873   001174  BE51               	btfsc	(i2vfpfcnvrt@convarg+1)^0,7,c
 11874   001176  0EFF               	movlw	-1
 11875   001178  6E52               	movwf	(i2vfpfcnvrt@convarg+2)^0,c
 11876   00117A  6E53               	movwf	(i2vfpfcnvrt@convarg+3)^0,c
 11877   00117C  6E54               	movwf	(i2vfpfcnvrt@convarg+4)^0,c
 11878   00117E  6E55               	movwf	(i2vfpfcnvrt@convarg+5)^0,c
 11879   001180  6E56               	movwf	(i2vfpfcnvrt@convarg+6)^0,c
 11880   001182  6E57               	movwf	(i2vfpfcnvrt@convarg+7)^0,c
 11881                           
 11882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
 11883   001184  0E01               	movlw	1
 11884   001186  2458               	addwf	i2vfpfcnvrt@cp^0,w,c
 11885   001188  6E47               	movwf	??i2_vfpfcnvrt^0,c
 11886   00118A  0E00               	movlw	0
 11887   00118C  2059               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
 11888   00118E  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
 11889   001190  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11890   001194  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11891   001198  C047  FFDE         	movff	??i2_vfpfcnvrt,postinc2
 11892   00119C  C048  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
 11893   0011A0                     
 11894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of i2_vfpfcnvrt is never used
 11895   0011A0  C041  F01E         	movff	i2vfpfcnvrt@fp,i2dtoa@fp
 11896   0011A4  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2dtoa@fp+1
 11897   0011A8  C050  F020         	movff	i2vfpfcnvrt@convarg,i2dtoa@d
 11898   0011AC  C051  F021         	movff	i2vfpfcnvrt@convarg+1,i2dtoa@d+1
 11899   0011B0  C052  F022         	movff	i2vfpfcnvrt@convarg+2,i2dtoa@d+2
 11900   0011B4  C053  F023         	movff	i2vfpfcnvrt@convarg+3,i2dtoa@d+3
 11901   0011B8  C054  F024         	movff	i2vfpfcnvrt@convarg+4,i2dtoa@d+4
 11902   0011BC  C055  F025         	movff	i2vfpfcnvrt@convarg+5,i2dtoa@d+5
 11903   0011C0  C056  F026         	movff	i2vfpfcnvrt@convarg+6,i2dtoa@d+6
 11904   0011C4  C057  F027         	movff	i2vfpfcnvrt@convarg+7,i2dtoa@d+7
 11905   0011C8  EC64  F00B         	call	i2_dtoa	;wreg free
 11906   0011CC  EF06  F00A         	goto	i2l1468
 11907   0011D0                     i2l4780:
 11908   0011D0  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 11909   0011D4  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 11910   0011D8                     	if	0	;tblptru may be non-zero
 11911   0011D8                     	endif
 11912   0011D8                     	if	0	;tblptru may be non-zero
 11913   0011D8                     	endif
 11914   0011D8  0008               	tblrd		*
 11915   0011DA  50F5               	movf	tablat,w,c
 11916   0011DC  0A78               	xorlw	120
 11917   0011DE  B4D8               	btfsc	status,2,c
 11918   0011E0  EFF4  F008         	goto	i2u476_41
 11919   0011E4  EFF6  F008         	goto	i2u476_40
 11920   0011E8                     i2u476_41:
 11921   0011E8  EF04  F009         	goto	i2l4784
 11922   0011EC                     i2u476_40:
 11923   0011EC  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 11924   0011F0  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 11925   0011F4                     	if	0	;tblptru may be non-zero
 11926   0011F4                     	endif
 11927   0011F4                     	if	0	;tblptru may be non-zero
 11928   0011F4                     	endif
 11929   0011F4  0008               	tblrd		*
 11930   0011F6  50F5               	movf	tablat,w,c
 11931   0011F8  0A75               	xorlw	117
 11932   0011FA  A4D8               	btfss	status,2,c
 11933   0011FC  EF02  F009         	goto	i2u477_41
 11934   001200  EF04  F009         	goto	i2u477_40
 11935   001204                     i2u477_41:
 11936   001204  EF7C  F009         	goto	i2l4798
 11937   001208                     i2u477_40:
 11938   001208                     i2l4784:
 11939                           
 11940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
 11941   001208  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 11942   00120C  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 11943   001210  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
 11944   001214  0E02               	movlw	2
 11945   001216  26DE               	addwf	postinc2,f,c
 11946   001218  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
 11947   00121C  0E00               	movlw	0
 11948   00121E  22DD               	addwfc	postdec2,f,c
 11949   001220  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 11950   001224  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 11951   001228  CFDE F049          	movff	postinc2,??i2_vfpfcnvrt+2
 11952   00122C  CFDD F04A          	movff	postdec2,??i2_vfpfcnvrt+3
 11953   001230  C049  F050         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@convarg
 11954   001234  C04A  F051         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@convarg+1
 11955   001238  6A52               	clrf	(i2vfpfcnvrt@convarg+2)^0,c
 11956   00123A  6A53               	clrf	(i2vfpfcnvrt@convarg+3)^0,c
 11957   00123C  6A54               	clrf	(i2vfpfcnvrt@convarg+4)^0,c
 11958   00123E  6A55               	clrf	(i2vfpfcnvrt@convarg+5)^0,c
 11959   001240  6A56               	clrf	(i2vfpfcnvrt@convarg+6)^0,c
 11960   001242  6A57               	clrf	(i2vfpfcnvrt@convarg+7)^0,c
 11961                           
 11962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
 11963   001244  0E01               	movlw	1
 11964   001246  2458               	addwf	i2vfpfcnvrt@cp^0,w,c
 11965   001248  6E47               	movwf	??i2_vfpfcnvrt^0,c
 11966   00124A  0E00               	movlw	0
 11967   00124C  2059               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
 11968   00124E  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
 11969   001250  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 11970   001254  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 11971   001258  C047  FFDE         	movff	??i2_vfpfcnvrt,postinc2
 11972   00125C  C048  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
 11973                           
 11974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
 11975   001260  EF62  F009         	goto	i2l4796
 11976   001264                     i2l4786:
 11977                           
 11978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of i2_vfpfcnvrt is never used
 11979   001264  C041  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
 11980   001268  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
 11981   00126C  C050  F020         	movff	i2vfpfcnvrt@convarg,i2utoa@d
 11982   001270  C051  F021         	movff	i2vfpfcnvrt@convarg+1,i2utoa@d+1
 11983   001274  C052  F022         	movff	i2vfpfcnvrt@convarg+2,i2utoa@d+2
 11984   001278  C053  F023         	movff	i2vfpfcnvrt@convarg+3,i2utoa@d+3
 11985   00127C  C054  F024         	movff	i2vfpfcnvrt@convarg+4,i2utoa@d+4
 11986   001280  C055  F025         	movff	i2vfpfcnvrt@convarg+5,i2utoa@d+5
 11987   001284  C056  F026         	movff	i2vfpfcnvrt@convarg+6,i2utoa@d+6
 11988   001288  C057  F027         	movff	i2vfpfcnvrt@convarg+7,i2utoa@d+7
 11989   00128C  ECBF  F00D         	call	i2_utoa	;wreg free
 11990   001290  EF06  F00A         	goto	i2l1468
 11991   001294                     i2l4790:
 11992                           
 11993                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of i2_vfpfcnvrt is never used
 11994   001294  C041  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
 11995   001298  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
 11996   00129C  C050  F020         	movff	i2vfpfcnvrt@convarg,i2xtoa@d
 11997   0012A0  C051  F021         	movff	i2vfpfcnvrt@convarg+1,i2xtoa@d+1
 11998   0012A4  C052  F022         	movff	i2vfpfcnvrt@convarg+2,i2xtoa@d+2
 11999   0012A8  C053  F023         	movff	i2vfpfcnvrt@convarg+3,i2xtoa@d+3
 12000   0012AC  C054  F024         	movff	i2vfpfcnvrt@convarg+4,i2xtoa@d+4
 12001   0012B0  C055  F025         	movff	i2vfpfcnvrt@convarg+5,i2xtoa@d+5
 12002   0012B4  C056  F026         	movff	i2vfpfcnvrt@convarg+6,i2xtoa@d+6
 12003   0012B8  C057  F027         	movff	i2vfpfcnvrt@convarg+7,i2xtoa@d+7
 12004   0012BC  ECA5  F00F         	call	i2_xtoa	;wreg free
 12005   0012C0  EF06  F00A         	goto	i2l1468
 12006   0012C4                     i2l4796:
 12007   0012C4  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
 12008   0012C8  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
 12009   0012CC                     	if	0	;tblptru may be non-zero
 12010   0012CC                     	endif
 12011   0012CC                     	if	0	;tblptru may be non-zero
 12012   0012CC                     	endif
 12013   0012CC  0008               	tblrd		*
 12014   0012CE  50F5               	movf	tablat,w,c
 12015   0012D0  6E47               	movwf	??i2_vfpfcnvrt^0,c
 12016   0012D2  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
 12017                           
 12018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12019                           ; Switch size 1, requested type "simple"
 12020                           ; Number of cases is 1, Range of values is 0 to 0
 12021                           ; switch strategies available:
 12022                           ; Name         Instructions Cycles
 12023                           ; simple_byte            4     3 (average)
 12024                           ;	Chosen strategy is simple_byte
 12025   0012D4  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
 12026   0012D6  0A00               	xorlw	0	; case 0
 12027   0012D8  B4D8               	btfsc	status,2,c
 12028   0012DA  EF71  F009         	goto	i2l6856
 12029   0012DE  EF7C  F009         	goto	i2l4798
 12030   0012E2                     i2l6856:
 12031                           
 12032                           ; Switch size 1, requested type "simple"
 12033                           ; Number of cases is 2, Range of values is 117 to 120
 12034                           ; switch strategies available:
 12035                           ; Name         Instructions Cycles
 12036                           ; simple_byte            7     4 (average)
 12037                           ;	Chosen strategy is simple_byte
 12038   0012E2  5047               	movf	??i2_vfpfcnvrt^0,w,c
 12039   0012E4  0A75               	xorlw	117	; case 117
 12040   0012E6  B4D8               	btfsc	status,2,c
 12041   0012E8  EF32  F009         	goto	i2l4786
 12042   0012EC  0A0D               	xorlw	13	; case 120
 12043   0012EE  B4D8               	btfsc	status,2,c
 12044   0012F0  EF4A  F009         	goto	i2l4790
 12045   0012F4  EF7C  F009         	goto	i2l4798
 12046   0012F8                     i2l4798:
 12047                           
 12048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
 12049   0012F8  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 12050   0012FC  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 12051   001300  CFDE FFF6          	movff	postinc2,tblptrl
 12052   001304  CFDD FFF7          	movff	postdec2,tblptrh
 12053   001308                     	if	0	;tblptru may be non-zero
 12054   001308                     	endif
 12055   001308                     	if	0	;tblptru may be non-zero
 12056   001308                     	endif
 12057   001308  0008               	tblrd		*
 12058   00130A  50F5               	movf	tablat,w,c
 12059   00130C  0A73               	xorlw	115
 12060   00130E  B4D8               	btfsc	status,2,c
 12061   001310  EF8C  F009         	goto	i2u478_41
 12062   001314  EF8E  F009         	goto	i2u478_40
 12063   001318                     i2u478_41:
 12064   001318  EFA9  F009         	goto	i2l4802
 12065   00131C                     i2u478_40:
 12066   00131C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 12067   001320  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 12068   001324  CFDE F001          	movff	postinc2,i2strncmp@_l
 12069   001328  CFDD F002          	movff	postdec2,i2strncmp@_l+1
 12070   00132C  0EF8               	movlw	low STR_60
 12071   00132E  6E03               	movwf	i2strncmp@_r^0,c
 12072   001330  0E7F               	movlw	high STR_60
 12073   001332  6E04               	movwf	(i2strncmp@_r+1)^0,c
 12074   001334  0E00               	movlw	0
 12075   001336  6E06               	movwf	(i2strncmp@n+1)^0,c
 12076   001338  0E03               	movlw	3
 12077   00133A  6E05               	movwf	i2strncmp@n^0,c
 12078   00133C  EC82  F019         	call	i2_strncmp	;wreg free
 12079   001340  5001               	movf	?i2_strncmp^0,w,c
 12080   001342  1002               	iorwf	(?i2_strncmp+1)^0,w,c
 12081   001344  A4D8               	btfss	status,2,c
 12082   001346  EFA7  F009         	goto	i2u479_41
 12083   00134A  EFA9  F009         	goto	i2u479_40
 12084   00134E                     i2u479_41:
 12085   00134E  EFE9  F009         	goto	i2l4814
 12086   001352                     i2u479_40:
 12087   001352                     i2l4802:
 12088                           
 12089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
 12090   001352  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 12091   001356  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 12092   00135A  CFDE FFF6          	movff	postinc2,tblptrl
 12093   00135E  CFDD FFF7          	movff	postdec2,tblptrh
 12094   001362                     	if	0	;tblptru may be non-zero
 12095   001362                     	endif
 12096   001362                     	if	0	;tblptru may be non-zero
 12097   001362                     	endif
 12098   001362  0008               	tblrd		*
 12099   001364  50F5               	movf	tablat,w,c
 12100   001366  0A73               	xorlw	115
 12101   001368  B4D8               	btfsc	status,2,c
 12102   00136A  EFB9  F009         	goto	i2u480_41
 12103   00136E  EFBB  F009         	goto	i2u480_40
 12104   001372                     i2u480_41:
 12105   001372  EFC1  F009         	goto	i2l4806
 12106   001376                     i2u480_40:
 12107   001376  0E00               	movlw	0
 12108   001378  6E4E               	movwf	(i2_vfpfcnvrt$2122+1)^0,c
 12109   00137A  0E03               	movlw	3
 12110   00137C  6E4D               	movwf	i2_vfpfcnvrt$2122^0,c
 12111   00137E  EFC5  F009         	goto	i2l4808
 12112   001382                     i2l4806:
 12113   001382  0E00               	movlw	0
 12114   001384  6E4E               	movwf	(i2_vfpfcnvrt$2122+1)^0,c
 12115   001386  0E01               	movlw	1
 12116   001388  6E4D               	movwf	i2_vfpfcnvrt$2122^0,c
 12117   00138A                     i2l4808:
 12118   00138A  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 12119   00138E  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 12120   001392  504D               	movf	i2_vfpfcnvrt$2122^0,w,c
 12121   001394  26DE               	addwf	postinc2,f,c
 12122   001396  504E               	movf	(i2_vfpfcnvrt$2122+1)^0,w,c
 12123   001398  22DD               	addwfc	postdec2,f,c
 12124   00139A                     
 12125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of i2_vfpfcnvrt is never used
 12126   00139A  C041  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
 12127   00139E  C042  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
 12128   0013A2  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
 12129   0013A6  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
 12130   0013AA  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
 12131   0013AE  0E02               	movlw	2
 12132   0013B0  26DE               	addwf	postinc2,f,c
 12133   0013B2  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
 12134   0013B6  0E00               	movlw	0
 12135   0013B8  22DD               	addwfc	postdec2,f,c
 12136   0013BA  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
 12137   0013BE  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
 12138   0013C2  CFDE F00E          	movff	postinc2,i2stoa@s
 12139   0013C6  CFDD F00F          	movff	postdec2,i2stoa@s+1
 12140   0013CA  ECD8  F012         	call	i2_stoa	;wreg free
 12141   0013CE  EF06  F00A         	goto	i2l1468
 12142   0013D2                     i2l4814:
 12143                           
 12144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
 12145   0013D2  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 12146   0013D6  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 12147   0013DA  2ADE               	incf	postinc2,f,c
 12148   0013DC  0E00               	movlw	0
 12149   0013DE  22DD               	addwfc	postdec2,f,c
 12150   0013E0  EF06  F00A         	goto	i2l1468
 12151   0013E4                     i2l4818:
 12152                           
 12153                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
 12154   0013E4  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
 12155   0013E8  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
 12156   0013EC  CFDE FFF6          	movff	postinc2,tblptrl
 12157   0013F0  CFDD FFF7          	movff	postdec2,tblptrh
 12158   0013F4                     	if	0	;tblptru may be non-zero
 12159   0013F4                     	endif
 12160   0013F4                     	if	0	;tblptru may be non-zero
 12161   0013F4                     	endif
 12162   0013F4  0008               	tblrd		*
 12163   0013F6  50F5               	movf	tablat,w,c
 12164   0013F8  6E03               	movwf	i2fputc@c^0,c
 12165   0013FA  6A04               	clrf	(i2fputc@c+1)^0,c
 12166   0013FC  C041  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
 12167   001400  C042  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
 12168   001404  EC51  F01D         	call	i2_fputc	;wreg free
 12169   001408  EFE9  F009         	goto	i2l4814
 12170   00140C                     i2l1468:
 12171   00140C  0012               	return		;funcret
 12172   00140E                     __end_ofi2_vfpfcnvrt:
 12173                           	callstack 0
 12174                           
 12175 ;; *************** function i2_xtoa *****************
 12176 ;; Defined at:
 12177 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 12180 ;;		 -> NULL(0), 
 12181 ;;  d               8   31[COMRAM] unsigned long long 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  n               8   53[COMRAM] unsigned long long 
 12184 ;;  i               2   61[COMRAM] int 
 12185 ;;  w               2   51[COMRAM] int 
 12186 ;;  p               2   49[COMRAM] int 
 12187 ;;  c               1   63[COMRAM] unsigned char 
 12188 ;; Return value:  Size  Location     Type
 12189 ;;                  1    wreg      void 
 12190 ;; Registers used:
 12191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12192 ;; Tracked objects:
 12193 ;;		On entry : 0/0
 12194 ;;		On exit  : 0/0
 12195 ;;		Unchanged: 0/0
 12196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12197 ;;      Params:        10       0       0       0       0       0       0
 12198 ;;      Locals:        17       0       0       0       0       0       0
 12199 ;;      Temps:          8       0       0       0       0       0       0
 12200 ;;      Totals:        35       0       0       0       0       0       0
 12201 ;;Total ram usage:       35 bytes
 12202 ;; Hardware stack levels used: 1
 12203 ;; Hardware stack levels required when called: 5
 12204 ;; This function calls:
 12205 ;;		i2_pad
 12206 ;; This function is called by:
 12207 ;;		i2_vfpfcnvrt
 12208 ;; This function uses a non-reentrant model
 12209 ;;
 12210                           
 12211                           	psect	text57
 12212   001F4A                     __ptext57:
 12213                           	callstack 0
 12214   001F4A                     i2_xtoa:
 12215                           	callstack 10
 12216   001F4A                     
 12217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
 12218   001F4A  0100               	movlb	0	; () banked
 12219   001F4C  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 12220   001F4E  EFAB  F00F         	goto	i2u437_41
 12221   001F52  EFAD  F00F         	goto	i2u437_40
 12222   001F56                     i2u437_41:
 12223   001F56  EFAE  F00F         	goto	i2l4514
 12224   001F5A                     i2u437_40:
 12225   001F5A                     
 12226                           ; BSR set to: 0
 12227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
 12228   001F5A  93D4               	bcf	_flags& (0+255),1,b
 12229   001F5C                     i2l4514:
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
 12233   001F5C  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 12234   001F5E  EFBB  F00F         	goto	i2u438_40
 12235   001F62  51D1               	movf	(_prec+1)& (0+255),w,b
 12236   001F64  E106               	bnz	i2u438_41
 12237   001F66  05D0               	decf	_prec& (0+255),w,b
 12238   001F68  B0D8               	btfsc	status,0,c
 12239   001F6A  EFB9  F00F         	goto	i2u438_41
 12240   001F6E  EFBB  F00F         	goto	i2u438_40
 12241   001F72                     i2u438_41:
 12242   001F72  EFC1  F00F         	goto	i2l1434
 12243   001F76                     i2u438_40:
 12244   001F76                     
 12245                           ; BSR set to: 0
 12246   001F76  0E00               	movlw	0
 12247   001F78  6E33               	movwf	(i2xtoa@p+1)^0,c
 12248   001F7A  0E01               	movlw	1
 12249   001F7C  6E32               	movwf	i2xtoa@p^0,c
 12250   001F7E  EFC5  F00F         	goto	i2l1436
 12251   001F82                     i2l1434:
 12252                           
 12253                           ; BSR set to: 0
 12254   001F82  C0D0  F032         	movff	_prec,i2xtoa@p
 12255   001F86  C0D1  F033         	movff	_prec+1,i2xtoa@p+1
 12256   001F8A                     i2l1436:
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
 12260   001F8A  C0CE  F034         	movff	_width,i2xtoa@w
 12261   001F8E  C0CF  F035         	movff	_width+1,i2xtoa@w+1
 12262                           
 12263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
 12264   001F92  C020  F036         	movff	i2xtoa@d,i2xtoa@n
 12265   001F96  C021  F037         	movff	i2xtoa@d+1,i2xtoa@n+1
 12266   001F9A  C022  F038         	movff	i2xtoa@d+2,i2xtoa@n+2
 12267   001F9E  C023  F039         	movff	i2xtoa@d+3,i2xtoa@n+3
 12268   001FA2  C024  F03A         	movff	i2xtoa@d+4,i2xtoa@n+4
 12269   001FA6  C025  F03B         	movff	i2xtoa@d+5,i2xtoa@n+5
 12270   001FAA  C026  F03C         	movff	i2xtoa@d+6,i2xtoa@n+6
 12271   001FAE  C027  F03D         	movff	i2xtoa@d+7,i2xtoa@n+7
 12272   001FB2                     
 12273                           ; BSR set to: 0
 12274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
 12275   001FB2  0E00               	movlw	0
 12276   001FB4  6E3F               	movwf	(i2xtoa@i+1)^0,c
 12277   001FB6  0E1F               	movlw	31
 12278   001FB8  6E3E               	movwf	i2xtoa@i^0,c
 12279   001FBA                     
 12280                           ; BSR set to: 0
 12281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
 12282   001FBA  0E00               	movlw	0
 12283   001FBC  0101               	movlb	1	; () banked
 12284   001FBE  6F4E               	movwf	(_dbuf+31)& (0+255),b
 12285                           
 12286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
 12287   001FC0  EF3D  F010         	goto	i2l4542
 12288   001FC4                     i2l4522:
 12289                           
 12290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
 12291   001FC4  063E               	decf	i2xtoa@i^0,f,c
 12292   001FC6  A0D8               	btfss	status,0,c
 12293   001FC8  063F               	decf	(i2xtoa@i+1)^0,f,c
 12294   001FCA                     
 12295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
 12296   001FCA  5036               	movf	i2xtoa@n^0,w,c
 12297   001FCC  0B0F               	andlw	15
 12298   001FCE  6E40               	movwf	i2xtoa@c^0,c
 12299   001FD0                     
 12300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 12301   001FD0  0E09               	movlw	9
 12302   001FD2  6440               	cpfsgt	i2xtoa@c^0,c
 12303   001FD4  EFEE  F00F         	goto	i2u439_41
 12304   001FD8  EFF0  F00F         	goto	i2u439_40
 12305   001FDC                     i2u439_41:
 12306   001FDC  EFF8  F00F         	goto	i2l4530
 12307   001FE0                     i2u439_40:
 12308   001FE0  0E57               	movlw	87
 12309   001FE2  2440               	addwf	i2xtoa@c^0,w,c
 12310   001FE4  6E30               	movwf	i2_xtoa$2101^0,c
 12311   001FE6  6A31               	clrf	(i2_xtoa$2101+1)^0,c
 12312   001FE8  0E00               	movlw	0
 12313   001FEA  2231               	addwfc	(i2_xtoa$2101+1)^0,f,c
 12314   001FEC  EFFE  F00F         	goto	i2l4532
 12315   001FF0                     i2l4530:
 12316   001FF0  0E30               	movlw	48
 12317   001FF2  2440               	addwf	i2xtoa@c^0,w,c
 12318   001FF4  6E30               	movwf	i2_xtoa$2101^0,c
 12319   001FF6  6A31               	clrf	(i2_xtoa$2101+1)^0,c
 12320   001FF8  0E00               	movlw	0
 12321   001FFA  2231               	addwfc	(i2_xtoa$2101+1)^0,f,c
 12322   001FFC                     i2l4532:
 12323   001FFC  C030  F040         	movff	i2_xtoa$2101,i2xtoa@c
 12324   002000                     
 12325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
 12326   002000  0E2F               	movlw	low _dbuf
 12327   002002  243E               	addwf	i2xtoa@i^0,w,c
 12328   002004  6ED9               	movwf	fsr2l,c
 12329   002006  0E01               	movlw	high _dbuf
 12330   002008  203F               	addwfc	(i2xtoa@i+1)^0,w,c
 12331   00200A  6EDA               	movwf	fsr2h,c
 12332   00200C  C040  FFDF         	movff	i2xtoa@c,indf2
 12333   002010                     
 12334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
 12335   002010  0632               	decf	i2xtoa@p^0,f,c
 12336   002012  A0D8               	btfss	status,0,c
 12337   002014  0633               	decf	(i2xtoa@p+1)^0,f,c
 12338   002016                     
 12339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
 12340   002016  0634               	decf	i2xtoa@w^0,f,c
 12341   002018  A0D8               	btfss	status,0,c
 12342   00201A  0635               	decf	(i2xtoa@w+1)^0,f,c
 12343   00201C                     
 12344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
 12345   00201C  C036  F028         	movff	i2xtoa@n,??i2_xtoa
 12346   002020  C037  F029         	movff	i2xtoa@n+1,??i2_xtoa+1
 12347   002024  C038  F02A         	movff	i2xtoa@n+2,??i2_xtoa+2
 12348   002028  C039  F02B         	movff	i2xtoa@n+3,??i2_xtoa+3
 12349   00202C  C03A  F02C         	movff	i2xtoa@n+4,??i2_xtoa+4
 12350   002030  C03B  F02D         	movff	i2xtoa@n+5,??i2_xtoa+5
 12351   002034  C03C  F02E         	movff	i2xtoa@n+6,??i2_xtoa+6
 12352   002038  C03D  F02F         	movff	i2xtoa@n+7,??i2_xtoa+7
 12353   00203C  0E05               	movlw	5
 12354   00203E  EF2A  F010         	goto	i2u440_40
 12355   002042                     i2u440_45:
 12356   002042  90D8               	bcf	status,0,c
 12357   002044  322F               	rrcf	(??i2_xtoa+7)^0,f,c
 12358   002046  322E               	rrcf	(??i2_xtoa+6)^0,f,c
 12359   002048  322D               	rrcf	(??i2_xtoa+5)^0,f,c
 12360   00204A  322C               	rrcf	(??i2_xtoa+4)^0,f,c
 12361   00204C  322B               	rrcf	(??i2_xtoa+3)^0,f,c
 12362   00204E  322A               	rrcf	(??i2_xtoa+2)^0,f,c
 12363   002050  3229               	rrcf	(??i2_xtoa+1)^0,f,c
 12364   002052  3228               	rrcf	??i2_xtoa^0,f,c
 12365   002054                     i2u440_40:
 12366   002054  2EE8               	decfsz	wreg,f,c
 12367   002056  EF21  F010         	goto	i2u440_45
 12368   00205A  C028  F036         	movff	??i2_xtoa,i2xtoa@n
 12369   00205E  C029  F037         	movff	??i2_xtoa+1,i2xtoa@n+1
 12370   002062  C02A  F038         	movff	??i2_xtoa+2,i2xtoa@n+2
 12371   002066  C02B  F039         	movff	??i2_xtoa+3,i2xtoa@n+3
 12372   00206A  C02C  F03A         	movff	??i2_xtoa+4,i2xtoa@n+4
 12373   00206E  C02D  F03B         	movff	??i2_xtoa+5,i2xtoa@n+5
 12374   002072  C02E  F03C         	movff	??i2_xtoa+6,i2xtoa@n+6
 12375   002076  C02F  F03D         	movff	??i2_xtoa+7,i2xtoa@n+7
 12376   00207A                     i2l4542:
 12377                           
 12378                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
 12379   00207A  BE3F               	btfsc	(i2xtoa@i+1)^0,7,c
 12380   00207C  EF49  F010         	goto	i2u441_41
 12381   002080  503F               	movf	(i2xtoa@i+1)^0,w,c
 12382   002082  E109               	bnz	i2u441_40
 12383   002084  0E02               	movlw	2
 12384   002086  5C3E               	subwf	i2xtoa@i^0,w,c
 12385   002088  A0D8               	btfss	status,0,c
 12386   00208A  EF49  F010         	goto	i2u441_41
 12387   00208E  EF4B  F010         	goto	i2u441_40
 12388   002092                     i2u441_41:
 12389   002092  EF7C  F010         	goto	i2l4552
 12390   002096                     i2u441_40:
 12391   002096  5036               	movf	i2xtoa@n^0,w,c
 12392   002098  1037               	iorwf	(i2xtoa@n+1)^0,w,c
 12393   00209A  1038               	iorwf	(i2xtoa@n+2)^0,w,c
 12394   00209C  1039               	iorwf	(i2xtoa@n+3)^0,w,c
 12395   00209E  103A               	iorwf	(i2xtoa@n+4)^0,w,c
 12396   0020A0  103B               	iorwf	(i2xtoa@n+5)^0,w,c
 12397   0020A2  103C               	iorwf	(i2xtoa@n+6)^0,w,c
 12398   0020A4  103D               	iorwf	(i2xtoa@n+7)^0,w,c
 12399   0020A6  A4D8               	btfss	status,2,c
 12400   0020A8  EF58  F010         	goto	i2u442_41
 12401   0020AC  EF5A  F010         	goto	i2u442_40
 12402   0020B0                     i2u442_41:
 12403   0020B0  EFE2  F00F         	goto	i2l4522
 12404   0020B4                     i2u442_40:
 12405   0020B4  BE33               	btfsc	(i2xtoa@p+1)^0,7,c
 12406   0020B6  EF67  F010         	goto	i2u443_40
 12407   0020BA  5033               	movf	(i2xtoa@p+1)^0,w,c
 12408   0020BC  E106               	bnz	i2u443_41
 12409   0020BE  0432               	decf	i2xtoa@p^0,w,c
 12410   0020C0  B0D8               	btfsc	status,0,c
 12411   0020C2  EF65  F010         	goto	i2u443_41
 12412   0020C6  EF67  F010         	goto	i2u443_40
 12413   0020CA                     i2u443_41:
 12414   0020CA  EFE2  F00F         	goto	i2l4522
 12415   0020CE                     i2u443_40:
 12416   0020CE  BE35               	btfsc	(i2xtoa@w+1)^0,7,c
 12417   0020D0  EF72  F010         	goto	i2u444_41
 12418   0020D4  5035               	movf	(i2xtoa@w+1)^0,w,c
 12419   0020D6  E108               	bnz	i2u444_40
 12420   0020D8  0434               	decf	i2xtoa@w^0,w,c
 12421   0020DA  A0D8               	btfss	status,0,c
 12422   0020DC  EF72  F010         	goto	i2u444_41
 12423   0020E0  EF74  F010         	goto	i2u444_40
 12424   0020E4                     i2u444_41:
 12425   0020E4  EF7C  F010         	goto	i2l4552
 12426   0020E8                     i2u444_40:
 12427   0020E8  0100               	movlb	0	; () banked
 12428   0020EA  B3D4               	btfsc	_flags& (0+255),1,b
 12429   0020EC  EF7A  F010         	goto	i2u445_41
 12430   0020F0  EF7C  F010         	goto	i2u445_40
 12431   0020F4                     i2u445_41:
 12432   0020F4  EFE2  F00F         	goto	i2l4522
 12433   0020F8                     i2u445_40:
 12434   0020F8                     i2l4552:
 12435                           
 12436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 12437   0020F8  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 12438   0020FC  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 12439   002100  0E2F               	movlw	low _dbuf
 12440   002102  243E               	addwf	i2xtoa@i^0,w,c
 12441   002104  6E15               	movwf	i2pad@buf^0,c
 12442   002106  0E01               	movlw	high _dbuf
 12443   002108  203F               	addwfc	(i2xtoa@i+1)^0,w,c
 12444   00210A  6E16               	movwf	(i2pad@buf+1)^0,c
 12445   00210C  C034  F017         	movff	i2xtoa@w,i2pad@p
 12446   002110  C035  F018         	movff	i2xtoa@w+1,i2pad@p+1
 12447   002114  ECAE  F01C         	call	i2_pad	;wreg free
 12448   002118  0012               	return		;funcret
 12449   00211A                     __end_ofi2_xtoa:
 12450                           	callstack 0
 12451                           
 12452 ;; *************** function i2_utoa *****************
 12453 ;; Defined at:
 12454 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 12457 ;;		 -> NULL(0), 
 12458 ;;  d               8   31[COMRAM] unsigned long long 
 12459 ;; Auto vars:     Size  Location     Type
 12460 ;;  n               8   51[COMRAM] unsigned long long 
 12461 ;;  i               2   59[COMRAM] int 
 12462 ;;  w               2   49[COMRAM] int 
 12463 ;;  p               2   47[COMRAM] int 
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12473 ;;      Params:        10       0       0       0       0       0       0
 12474 ;;      Locals:        14       0       0       0       0       0       0
 12475 ;;      Temps:          8       0       0       0       0       0       0
 12476 ;;      Totals:        32       0       0       0       0       0       0
 12477 ;;Total ram usage:       32 bytes
 12478 ;; Hardware stack levels used: 1
 12479 ;; Hardware stack levels required when called: 5
 12480 ;; This function calls:
 12481 ;;		i2___lodiv
 12482 ;;		i2___lomod
 12483 ;;		i2_pad
 12484 ;; This function is called by:
 12485 ;;		i2_vfpfcnvrt
 12486 ;; This function uses a non-reentrant model
 12487 ;;
 12488                           
 12489                           	psect	text58
 12490   001B7E                     __ptext58:
 12491                           	callstack 0
 12492   001B7E                     i2_utoa:
 12493                           	callstack 10
 12494   001B7E                     
 12495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
 12496   001B7E  0100               	movlb	0	; () banked
 12497   001B80  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 12498   001B82  EFC5  F00D         	goto	i2u430_41
 12499   001B86  EFC7  F00D         	goto	i2u430_40
 12500   001B8A                     i2u430_41:
 12501   001B8A  EFC8  F00D         	goto	i2l4478
 12502   001B8E                     i2u430_40:
 12503   001B8E                     
 12504                           ; BSR set to: 0
 12505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
 12506   001B8E  93D4               	bcf	_flags& (0+255),1,b
 12507   001B90                     i2l4478:
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
 12511   001B90  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 12512   001B92  EFD5  F00D         	goto	i2u431_40
 12513   001B96  51D1               	movf	(_prec+1)& (0+255),w,b
 12514   001B98  E106               	bnz	i2u431_41
 12515   001B9A  05D0               	decf	_prec& (0+255),w,b
 12516   001B9C  B0D8               	btfsc	status,0,c
 12517   001B9E  EFD3  F00D         	goto	i2u431_41
 12518   001BA2  EFD5  F00D         	goto	i2u431_40
 12519   001BA6                     i2u431_41:
 12520   001BA6  EFDB  F00D         	goto	i2l1419
 12521   001BAA                     i2u431_40:
 12522   001BAA                     
 12523                           ; BSR set to: 0
 12524   001BAA  0E00               	movlw	0
 12525   001BAC  6E31               	movwf	(i2utoa@p+1)^0,c
 12526   001BAE  0E01               	movlw	1
 12527   001BB0  6E30               	movwf	i2utoa@p^0,c
 12528   001BB2  EFDF  F00D         	goto	i2l1421
 12529   001BB6                     i2l1419:
 12530                           
 12531                           ; BSR set to: 0
 12532   001BB6  C0D0  F030         	movff	_prec,i2utoa@p
 12533   001BBA  C0D1  F031         	movff	_prec+1,i2utoa@p+1
 12534   001BBE                     i2l1421:
 12535                           
 12536                           ; BSR set to: 0
 12537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
 12538   001BBE  C0CE  F032         	movff	_width,i2utoa@w
 12539   001BC2  C0CF  F033         	movff	_width+1,i2utoa@w+1
 12540                           
 12541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
 12542   001BC6  C020  F034         	movff	i2utoa@d,i2utoa@n
 12543   001BCA  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 12544   001BCE  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 12545   001BD2  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 12546   001BD6  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 12547   001BDA  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 12548   001BDE  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 12549   001BE2  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 12550   001BE6                     
 12551                           ; BSR set to: 0
 12552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
 12553   001BE6  0E00               	movlw	0
 12554   001BE8  6E3D               	movwf	(i2utoa@i+1)^0,c
 12555   001BEA  0E1F               	movlw	31
 12556   001BEC  6E3C               	movwf	i2utoa@i^0,c
 12557   001BEE                     
 12558                           ; BSR set to: 0
 12559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
 12560   001BEE  0E00               	movlw	0
 12561   001BF0  0101               	movlb	1	; () banked
 12562   001BF2  6F4E               	movwf	(_dbuf+31)& (0+255),b
 12563                           
 12564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
 12565   001BF4  EF72  F00E         	goto	i2l4496
 12566   001BF8                     i2l4486:
 12567                           
 12568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
 12569   001BF8  063C               	decf	i2utoa@i^0,f,c
 12570   001BFA  A0D8               	btfss	status,0,c
 12571   001BFC  063D               	decf	(i2utoa@i+1)^0,f,c
 12572   001BFE                     
 12573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
 12574   001BFE  0E2F               	movlw	low _dbuf
 12575   001C00  243C               	addwf	i2utoa@i^0,w,c
 12576   001C02  6ED9               	movwf	fsr2l,c
 12577   001C04  0E01               	movlw	high _dbuf
 12578   001C06  203D               	addwfc	(i2utoa@i+1)^0,w,c
 12579   001C08  6EDA               	movwf	fsr2h,c
 12580   001C0A  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 12581   001C0E  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 12582   001C12  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 12583   001C16  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 12584   001C1A  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 12585   001C1E  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 12586   001C22  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 12587   001C26  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 12588   001C2A  0E0A               	movlw	10
 12589   001C2C  6E09               	movwf	i2___lomod@divisor^0,c
 12590   001C2E  0E00               	movlw	0
 12591   001C30  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 12592   001C32  0E00               	movlw	0
 12593   001C34  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 12594   001C36  0E00               	movlw	0
 12595   001C38  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 12596   001C3A  0E00               	movlw	0
 12597   001C3C  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 12598   001C3E  0E00               	movlw	0
 12599   001C40  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 12600   001C42  0E00               	movlw	0
 12601   001C44  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 12602   001C46  0E00               	movlw	0
 12603   001C48  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 12604   001C4A  EC5A  F01A         	call	i2___lomod	;wreg free
 12605   001C4E  C001  F028         	movff	?i2___lomod,??i2_utoa
 12606   001C52  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 12607   001C56  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 12608   001C5A  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 12609   001C5E  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 12610   001C62  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 12611   001C66  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 12612   001C6A  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 12613   001C6E  5028               	movf	??i2_utoa^0,w,c
 12614   001C70  0F30               	addlw	48
 12615   001C72  6EDF               	movwf	indf2,c
 12616   001C74                     
 12617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
 12618   001C74  0630               	decf	i2utoa@p^0,f,c
 12619   001C76  A0D8               	btfss	status,0,c
 12620   001C78  0631               	decf	(i2utoa@p+1)^0,f,c
 12621   001C7A                     
 12622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
 12623   001C7A  0632               	decf	i2utoa@w^0,f,c
 12624   001C7C  A0D8               	btfss	status,0,c
 12625   001C7E  0633               	decf	(i2utoa@w+1)^0,f,c
 12626   001C80                     
 12627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
 12628   001C80  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 12629   001C84  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 12630   001C88  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 12631   001C8C  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 12632   001C90  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 12633   001C94  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 12634   001C98  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 12635   001C9C  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 12636   001CA0  0E0A               	movlw	10
 12637   001CA2  6E09               	movwf	i2___lodiv@divisor^0,c
 12638   001CA4  0E00               	movlw	0
 12639   001CA6  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 12640   001CA8  0E00               	movlw	0
 12641   001CAA  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 12642   001CAC  0E00               	movlw	0
 12643   001CAE  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 12644   001CB0  0E00               	movlw	0
 12645   001CB2  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 12646   001CB4  0E00               	movlw	0
 12647   001CB6  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 12648   001CB8  0E00               	movlw	0
 12649   001CBA  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 12650   001CBC  0E00               	movlw	0
 12651   001CBE  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 12652   001CC0  EC9A  F018         	call	i2___lodiv	;wreg free
 12653   001CC4  C001  F034         	movff	?i2___lodiv,i2utoa@n
 12654   001CC8  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 12655   001CCC  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 12656   001CD0  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 12657   001CD4  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 12658   001CD8  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 12659   001CDC  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 12660   001CE0  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 12661   001CE4                     i2l4496:
 12662                           
 12663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
 12664   001CE4  503C               	movf	i2utoa@i^0,w,c
 12665   001CE6  103D               	iorwf	(i2utoa@i+1)^0,w,c
 12666   001CE8  B4D8               	btfsc	status,2,c
 12667   001CEA  EF79  F00E         	goto	i2u432_41
 12668   001CEE  EF7B  F00E         	goto	i2u432_40
 12669   001CF2                     i2u432_41:
 12670   001CF2  EFAC  F00E         	goto	i2l4506
 12671   001CF6                     i2u432_40:
 12672   001CF6  5034               	movf	i2utoa@n^0,w,c
 12673   001CF8  1035               	iorwf	(i2utoa@n+1)^0,w,c
 12674   001CFA  1036               	iorwf	(i2utoa@n+2)^0,w,c
 12675   001CFC  1037               	iorwf	(i2utoa@n+3)^0,w,c
 12676   001CFE  1038               	iorwf	(i2utoa@n+4)^0,w,c
 12677   001D00  1039               	iorwf	(i2utoa@n+5)^0,w,c
 12678   001D02  103A               	iorwf	(i2utoa@n+6)^0,w,c
 12679   001D04  103B               	iorwf	(i2utoa@n+7)^0,w,c
 12680   001D06  A4D8               	btfss	status,2,c
 12681   001D08  EF88  F00E         	goto	i2u433_41
 12682   001D0C  EF8A  F00E         	goto	i2u433_40
 12683   001D10                     i2u433_41:
 12684   001D10  EFFC  F00D         	goto	i2l4486
 12685   001D14                     i2u433_40:
 12686   001D14  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 12687   001D16  EF97  F00E         	goto	i2u434_40
 12688   001D1A  5031               	movf	(i2utoa@p+1)^0,w,c
 12689   001D1C  E106               	bnz	i2u434_41
 12690   001D1E  0430               	decf	i2utoa@p^0,w,c
 12691   001D20  B0D8               	btfsc	status,0,c
 12692   001D22  EF95  F00E         	goto	i2u434_41
 12693   001D26  EF97  F00E         	goto	i2u434_40
 12694   001D2A                     i2u434_41:
 12695   001D2A  EFFC  F00D         	goto	i2l4486
 12696   001D2E                     i2u434_40:
 12697   001D2E  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 12698   001D30  EFA2  F00E         	goto	i2u435_41
 12699   001D34  5033               	movf	(i2utoa@w+1)^0,w,c
 12700   001D36  E108               	bnz	i2u435_40
 12701   001D38  0432               	decf	i2utoa@w^0,w,c
 12702   001D3A  A0D8               	btfss	status,0,c
 12703   001D3C  EFA2  F00E         	goto	i2u435_41
 12704   001D40  EFA4  F00E         	goto	i2u435_40
 12705   001D44                     i2u435_41:
 12706   001D44  EFAC  F00E         	goto	i2l4506
 12707   001D48                     i2u435_40:
 12708   001D48  0100               	movlb	0	; () banked
 12709   001D4A  B3D4               	btfsc	_flags& (0+255),1,b
 12710   001D4C  EFAA  F00E         	goto	i2u436_41
 12711   001D50  EFAC  F00E         	goto	i2u436_40
 12712   001D54                     i2u436_41:
 12713   001D54  EFFC  F00D         	goto	i2l4486
 12714   001D58                     i2u436_40:
 12715   001D58                     i2l4506:
 12716                           
 12717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
 12718   001D58  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 12719   001D5C  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 12720   001D60  0E2F               	movlw	low _dbuf
 12721   001D62  243C               	addwf	i2utoa@i^0,w,c
 12722   001D64  6E15               	movwf	i2pad@buf^0,c
 12723   001D66  0E01               	movlw	high _dbuf
 12724   001D68  203D               	addwfc	(i2utoa@i+1)^0,w,c
 12725   001D6A  6E16               	movwf	(i2pad@buf+1)^0,c
 12726   001D6C  C032  F017         	movff	i2utoa@w,i2pad@p
 12727   001D70  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 12728   001D74  ECAE  F01C         	call	i2_pad	;wreg free
 12729   001D78  0012               	return		;funcret
 12730   001D7A                     __end_ofi2_utoa:
 12731                           	callstack 0
 12732                           
 12733 ;; *************** function i2___lomod *****************
 12734 ;; Defined at:
 12735 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
 12736 ;; Parameters:    Size  Location     Type
 12737 ;;  dividend        8    0[COMRAM] unsigned long long 
 12738 ;;  divisor         8    8[COMRAM] unsigned long long 
 12739 ;; Auto vars:     Size  Location     Type
 12740 ;;  counter         1   16[COMRAM] unsigned char 
 12741 ;; Return value:  Size  Location     Type
 12742 ;;                  8    0[COMRAM] unsigned long long 
 12743 ;; Registers used:
 12744 ;;		wreg, status,2, status,0
 12745 ;; Tracked objects:
 12746 ;;		On entry : 0/0
 12747 ;;		On exit  : 0/0
 12748 ;;		Unchanged: 0/0
 12749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12750 ;;      Params:        16       0       0       0       0       0       0
 12751 ;;      Locals:         1       0       0       0       0       0       0
 12752 ;;      Temps:          0       0       0       0       0       0       0
 12753 ;;      Totals:        17       0       0       0       0       0       0
 12754 ;;Total ram usage:       17 bytes
 12755 ;; Hardware stack levels used: 1
 12756 ;; This function calls:
 12757 ;;		Nothing
 12758 ;; This function is called by:
 12759 ;;		i2_utoa
 12760 ;; This function uses a non-reentrant model
 12761 ;;
 12762                           
 12763                           	psect	text59
 12764   0034B4                     __ptext59:
 12765                           	callstack 0
 12766   0034B4                     i2___lomod:
 12767                           	callstack 14
 12768   0034B4  5009               	movf	i2___lomod@divisor^0,w,c
 12769   0034B6  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 12770   0034B8  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 12771   0034BA  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 12772   0034BC  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 12773   0034BE  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 12774   0034C0  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 12775   0034C2  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 12776   0034C4  B4D8               	btfsc	status,2,c
 12777   0034C6  EF67  F01A         	goto	i2u340_41
 12778   0034CA  EF69  F01A         	goto	i2u340_40
 12779   0034CE                     i2u340_41:
 12780   0034CE  EFB1  F01A         	goto	i2l1087
 12781   0034D2                     i2u340_40:
 12782   0034D2  0E01               	movlw	1
 12783   0034D4  6E11               	movwf	i2___lomod@counter^0,c
 12784   0034D6  EF77  F01A         	goto	i2l4034
 12785   0034DA                     i2l4032:
 12786   0034DA  90D8               	bcf	status,0,c
 12787   0034DC  3609               	rlcf	i2___lomod@divisor^0,f,c
 12788   0034DE  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 12789   0034E0  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 12790   0034E2  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 12791   0034E4  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 12792   0034E6  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 12793   0034E8  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 12794   0034EA  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 12795   0034EC  2A11               	incf	i2___lomod@counter^0,f,c
 12796   0034EE                     i2l4034:
 12797   0034EE  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 12798   0034F0  EF7C  F01A         	goto	i2u341_41
 12799   0034F4  EF7E  F01A         	goto	i2u341_40
 12800   0034F8                     i2u341_41:
 12801   0034F8  EF6D  F01A         	goto	i2l4032
 12802   0034FC                     i2u341_40:
 12803   0034FC                     i2l4036:
 12804   0034FC  5009               	movf	i2___lomod@divisor^0,w,c
 12805   0034FE  5C01               	subwf	i2___lomod@dividend^0,w,c
 12806   003500  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 12807   003502  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 12808   003504  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 12809   003506  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 12810   003508  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 12811   00350A  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 12812   00350C  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 12813   00350E  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 12814   003510  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 12815   003512  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 12816   003514  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 12817   003516  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 12818   003518  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 12819   00351A  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 12820   00351C  A0D8               	btfss	status,0,c
 12821   00351E  EF93  F01A         	goto	i2u342_41
 12822   003522  EF95  F01A         	goto	i2u342_40
 12823   003526                     i2u342_41:
 12824   003526  EFA5  F01A         	goto	i2l4040
 12825   00352A                     i2u342_40:
 12826   00352A  5009               	movf	i2___lomod@divisor^0,w,c
 12827   00352C  5E01               	subwf	i2___lomod@dividend^0,f,c
 12828   00352E  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 12829   003530  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 12830   003532  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 12831   003534  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 12832   003536  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 12833   003538  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 12834   00353A  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 12835   00353C  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 12836   00353E  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 12837   003540  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 12838   003542  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 12839   003544  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 12840   003546  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 12841   003548  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 12842   00354A                     i2l4040:
 12843   00354A  90D8               	bcf	status,0,c
 12844   00354C  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 12845   00354E  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 12846   003550  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 12847   003552  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 12848   003554  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 12849   003556  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 12850   003558  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 12851   00355A  3209               	rrcf	i2___lomod@divisor^0,f,c
 12852   00355C  2E11               	decfsz	i2___lomod@counter^0,f,c
 12853   00355E  EF7E  F01A         	goto	i2l4036
 12854   003562                     i2l1087:
 12855   003562  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 12856   003566  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 12857   00356A  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 12858   00356E  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 12859   003572  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 12860   003576  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 12861   00357A  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 12862   00357E  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 12863   003582  0012               	return		;funcret
 12864   003584                     __end_ofi2___lomod:
 12865                           	callstack 0
 12866                           
 12867 ;; *************** function i2___lodiv *****************
 12868 ;; Defined at:
 12869 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  dividend        8    0[COMRAM] unsigned long long 
 12872 ;;  divisor         8    8[COMRAM] unsigned long long 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;  quotient        8   16[COMRAM] unsigned long long 
 12875 ;;  counter         1   24[COMRAM] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  8    0[COMRAM] unsigned long long 
 12878 ;; Registers used:
 12879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12885 ;;      Params:        16       0       0       0       0       0       0
 12886 ;;      Locals:         9       0       0       0       0       0       0
 12887 ;;      Temps:          0       0       0       0       0       0       0
 12888 ;;      Totals:        25       0       0       0       0       0       0
 12889 ;;Total ram usage:       25 bytes
 12890 ;; Hardware stack levels used: 1
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		i2_utoa
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text60
 12899   003134                     __ptext60:
 12900                           	callstack 0
 12901   003134                     i2___lodiv:
 12902                           	callstack 14
 12903   003134  EE20  F011         	lfsr	2,i2___lodiv@quotient
 12904   003138  0E07               	movlw	7
 12905   00313A                     i2u336_41:
 12906   00313A  6ADE               	clrf	postinc2,c
 12907   00313C  06E8               	decf	wreg,f,c
 12908   00313E  E2FD               	bc	i2u336_41
 12909   003140  5009               	movf	i2___lodiv@divisor^0,w,c
 12910   003142  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 12911   003144  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 12912   003146  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 12913   003148  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 12914   00314A  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 12915   00314C  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 12916   00314E  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 12917   003150  B4D8               	btfsc	status,2,c
 12918   003152  EFAD  F018         	goto	i2u337_41
 12919   003156  EFAF  F018         	goto	i2u337_40
 12920   00315A                     i2u337_41:
 12921   00315A  EF01  F019         	goto	i2l1077
 12922   00315E                     i2u337_40:
 12923   00315E  0E01               	movlw	1
 12924   003160  6E19               	movwf	i2___lodiv@counter^0,c
 12925   003162  EFBD  F018         	goto	i2l4014
 12926   003166                     i2l4012:
 12927   003166  90D8               	bcf	status,0,c
 12928   003168  3609               	rlcf	i2___lodiv@divisor^0,f,c
 12929   00316A  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 12930   00316C  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 12931   00316E  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 12932   003170  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 12933   003172  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 12934   003174  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 12935   003176  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 12936   003178  2A19               	incf	i2___lodiv@counter^0,f,c
 12937   00317A                     i2l4014:
 12938   00317A  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 12939   00317C  EFC2  F018         	goto	i2u338_41
 12940   003180  EFC4  F018         	goto	i2u338_40
 12941   003184                     i2u338_41:
 12942   003184  EFB3  F018         	goto	i2l4012
 12943   003188                     i2u338_40:
 12944   003188                     i2l4016:
 12945   003188  90D8               	bcf	status,0,c
 12946   00318A  3611               	rlcf	i2___lodiv@quotient^0,f,c
 12947   00318C  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 12948   00318E  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 12949   003190  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 12950   003192  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 12951   003194  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 12952   003196  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 12953   003198  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 12954   00319A  5009               	movf	i2___lodiv@divisor^0,w,c
 12955   00319C  5C01               	subwf	i2___lodiv@dividend^0,w,c
 12956   00319E  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 12957   0031A0  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 12958   0031A2  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 12959   0031A4  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 12960   0031A6  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 12961   0031A8  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 12962   0031AA  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 12963   0031AC  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 12964   0031AE  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 12965   0031B0  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 12966   0031B2  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 12967   0031B4  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 12968   0031B6  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 12969   0031B8  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 12970   0031BA  A0D8               	btfss	status,0,c
 12971   0031BC  EFE2  F018         	goto	i2u339_41
 12972   0031C0  EFE4  F018         	goto	i2u339_40
 12973   0031C4                     i2u339_41:
 12974   0031C4  EFF5  F018         	goto	i2l4024
 12975   0031C8                     i2u339_40:
 12976   0031C8  5009               	movf	i2___lodiv@divisor^0,w,c
 12977   0031CA  5E01               	subwf	i2___lodiv@dividend^0,f,c
 12978   0031CC  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 12979   0031CE  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 12980   0031D0  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 12981   0031D2  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 12982   0031D4  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 12983   0031D6  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 12984   0031D8  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 12985   0031DA  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 12986   0031DC  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 12987   0031DE  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 12988   0031E0  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 12989   0031E2  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 12990   0031E4  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 12991   0031E6  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 12992   0031E8  8011               	bsf	i2___lodiv@quotient^0,0,c
 12993   0031EA                     i2l4024:
 12994   0031EA  90D8               	bcf	status,0,c
 12995   0031EC  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 12996   0031EE  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 12997   0031F0  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 12998   0031F2  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 12999   0031F4  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 13000   0031F6  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 13001   0031F8  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 13002   0031FA  3209               	rrcf	i2___lodiv@divisor^0,f,c
 13003   0031FC  2E19               	decfsz	i2___lodiv@counter^0,f,c
 13004   0031FE  EFC4  F018         	goto	i2l4016
 13005   003202                     i2l1077:
 13006   003202  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 13007   003206  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 13008   00320A  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 13009   00320E  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 13010   003212  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 13011   003216  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 13012   00321A  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 13013   00321E  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 13014   003222  0012               	return		;funcret
 13015   003224                     __end_ofi2___lodiv:
 13016                           	callstack 0
 13017                           
 13018 ;; *************** function i2_strncmp *****************
 13019 ;; Defined at:
 13020 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
 13021 ;; Parameters:    Size  Location     Type
 13022 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 13023 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 13024 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 13025 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 13026 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 13027 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 13028 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 13029 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 13030 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 13031 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 13032 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 13033 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 13034 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 13035 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 13036 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 13037 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 13038 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 13039 ;;		 -> STR_62(4), 
 13040 ;;  n               2    4[COMRAM] unsigned int 
 13041 ;; Auto vars:     Size  Location     Type
 13042 ;;  r               2    9[COMRAM] PTR const unsigned char 
 13043 ;;		 -> STR_62(4), 
 13044 ;;  l               2    7[COMRAM] PTR const unsigned char 
 13045 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 13046 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 13047 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 13048 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 13049 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 13050 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 13051 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 13052 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 13053 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 13054 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 13055 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 13056 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 13057 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 13058 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 13059 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 13060 ;; Return value:  Size  Location     Type
 13061 ;;                  2    0[COMRAM] int 
 13062 ;; Registers used:
 13063 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 13064 ;; Tracked objects:
 13065 ;;		On entry : 0/0
 13066 ;;		On exit  : 0/0
 13067 ;;		Unchanged: 0/0
 13068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13069 ;;      Params:         6       0       0       0       0       0       0
 13070 ;;      Locals:         4       0       0       0       0       0       0
 13071 ;;      Temps:          1       0       0       0       0       0       0
 13072 ;;      Totals:        11       0       0       0       0       0       0
 13073 ;;Total ram usage:       11 bytes
 13074 ;; Hardware stack levels used: 1
 13075 ;; This function calls:
 13076 ;;		Nothing
 13077 ;; This function is called by:
 13078 ;;		i2_vfpfcnvrt
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text61
 13083   003304                     __ptext61:
 13084                           	callstack 0
 13085   003304                     i2_strncmp:
 13086                           	callstack 15
 13087   003304  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 13088   003308  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 13089   00330C  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 13090   003310  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 13091   003314  0605               	decf	i2strncmp@n^0,f,c
 13092   003316  A0D8               	btfss	status,0,c
 13093   003318  0606               	decf	(i2strncmp@n+1)^0,f,c
 13094   00331A  2805               	incf	i2strncmp@n^0,w,c
 13095   00331C  E106               	bnz	i2u450_41
 13096   00331E  2806               	incf	(i2strncmp@n+1)^0,w,c
 13097   003320  A4D8               	btfss	status,2,c
 13098   003322  EF95  F019         	goto	i2u450_41
 13099   003326  EF97  F019         	goto	i2u450_40
 13100   00332A                     i2u450_41:
 13101   00332A  EFA4  F019         	goto	i2l4596
 13102   00332E                     i2u450_40:
 13103   00332E  0E00               	movlw	0
 13104   003330  6E02               	movwf	(?i2_strncmp+1)^0,c
 13105   003332  0E00               	movlw	0
 13106   003334  6E01               	movwf	?i2_strncmp^0,c
 13107   003336  EFF0  F019         	goto	i2l1567
 13108   00333A                     i2l4594:
 13109   00333A  4A08               	infsnz	i2strncmp@l^0,f,c
 13110   00333C  2A09               	incf	(i2strncmp@l+1)^0,f,c
 13111   00333E  4A0A               	infsnz	i2strncmp@r^0,f,c
 13112   003340  2A0B               	incf	(i2strncmp@r+1)^0,f,c
 13113   003342  0605               	decf	i2strncmp@n^0,f,c
 13114   003344  A0D8               	btfss	status,0,c
 13115   003346  0606               	decf	(i2strncmp@n+1)^0,f,c
 13116   003348                     i2l4596:
 13117   003348  C008  FFF6         	movff	i2strncmp@l,tblptrl
 13118   00334C  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 13119   003350                     	if	0	;tblptru may be non-zero
 13120   003350                     	endif
 13121   003350                     	if	0	;tblptru may be non-zero
 13122   003350                     	endif
 13123   003350  0008               	tblrd		*
 13124   003352  50F5               	movf	tablat,w,c
 13125   003354  0900               	iorlw	0
 13126   003356  B4D8               	btfsc	status,2,c
 13127   003358  EFB0  F019         	goto	i2u451_41
 13128   00335C  EFB2  F019         	goto	i2u451_40
 13129   003360                     i2u451_41:
 13130   003360  EFDE  F019         	goto	i2l4604
 13131   003364                     i2u451_40:
 13132   003364  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 13133   003368  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 13134   00336C                     	if	0	;tblptru may be non-zero
 13135   00336C                     	endif
 13136   00336C                     	if	0	;tblptru may be non-zero
 13137   00336C                     	endif
 13138   00336C  0008               	tblrd		*
 13139   00336E  50F5               	movf	tablat,w,c
 13140   003370  0900               	iorlw	0
 13141   003372  B4D8               	btfsc	status,2,c
 13142   003374  EFBE  F019         	goto	i2u452_41
 13143   003378  EFC0  F019         	goto	i2u452_40
 13144   00337C                     i2u452_41:
 13145   00337C  EFDE  F019         	goto	i2l4604
 13146   003380                     i2u452_40:
 13147   003380  5005               	movf	i2strncmp@n^0,w,c
 13148   003382  1006               	iorwf	(i2strncmp@n+1)^0,w,c
 13149   003384  B4D8               	btfsc	status,2,c
 13150   003386  EFC7  F019         	goto	i2u453_41
 13151   00338A  EFC9  F019         	goto	i2u453_40
 13152   00338E                     i2u453_41:
 13153   00338E  EFDE  F019         	goto	i2l4604
 13154   003392                     i2u453_40:
 13155   003392  C008  FFF6         	movff	i2strncmp@l,tblptrl
 13156   003396  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 13157   00339A                     	if	0	;tblptru may be non-zero
 13158   00339A                     	endif
 13159   00339A                     	if	0	;tblptru may be non-zero
 13160   00339A                     	endif
 13161   00339A  0008               	tblrd		*
 13162   00339C  CFF5 F007          	movff	tablat,??i2_strncmp
 13163   0033A0  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 13164   0033A4  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 13165   0033A8                     	if	0	;tblptru may be non-zero
 13166   0033A8                     	endif
 13167   0033A8                     	if	0	;tblptru may be non-zero
 13168   0033A8                     	endif
 13169   0033A8  0008               	tblrd		*
 13170   0033AA  50F5               	movf	tablat,w,c
 13171   0033AC  1807               	xorwf	??i2_strncmp^0,w,c
 13172   0033AE  B4D8               	btfsc	status,2,c
 13173   0033B0  EFDC  F019         	goto	i2u454_41
 13174   0033B4  EFDE  F019         	goto	i2u454_40
 13175   0033B8                     i2u454_41:
 13176   0033B8  EF9D  F019         	goto	i2l4594
 13177   0033BC                     i2u454_40:
 13178   0033BC                     i2l4604:
 13179   0033BC  C008  FFF6         	movff	i2strncmp@l,tblptrl
 13180   0033C0  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 13181   0033C4                     	if	0	;tblptru may be non-zero
 13182   0033C4                     	endif
 13183   0033C4                     	if	0	;tblptru may be non-zero
 13184   0033C4                     	endif
 13185   0033C4  0008               	tblrd		*
 13186   0033C6  CFF5 F007          	movff	tablat,??i2_strncmp
 13187   0033CA  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 13188   0033CE  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 13189   0033D2                     	if	0	;tblptru may be non-zero
 13190   0033D2                     	endif
 13191   0033D2                     	if	0	;tblptru may be non-zero
 13192   0033D2                     	endif
 13193   0033D2  0008               	tblrd		*
 13194   0033D4  50F5               	movf	tablat,w,c
 13195   0033D6  5C07               	subwf	??i2_strncmp^0,w,c
 13196   0033D8  6E01               	movwf	?i2_strncmp^0,c
 13197   0033DA  6A02               	clrf	(?i2_strncmp+1)^0,c
 13198   0033DC  A0D8               	btfss	status,0,c
 13199   0033DE  0602               	decf	(?i2_strncmp+1)^0,f,c
 13200   0033E0                     i2l1567:
 13201   0033E0  0012               	return		;funcret
 13202   0033E2                     __end_ofi2_strncmp:
 13203                           	callstack 0
 13204                           
 13205 ;; *************** function i2_stoa *****************
 13206 ;; Defined at:
 13207 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13210 ;;		 -> NULL(0), 
 13211 ;;  s               2   13[COMRAM] PTR unsigned char 
 13212 ;;		 -> ?i2_printf(2), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;  nuls            7   16[COMRAM] unsigned char [7]
 13215 ;;  l               2   31[COMRAM] int 
 13216 ;;  p               2   29[COMRAM] int 
 13217 ;;  cp              2   27[COMRAM] PTR unsigned char 
 13218 ;;		 -> ?i2_printf(2), i2stoa@nuls(7), stoa@nuls(7), ?_printf(2), 
 13219 ;;		 -> receiveBuffer(32), transmitBuffer(32), 
 13220 ;;  w               2   25[COMRAM] int 
 13221 ;;  i               2   23[COMRAM] int 
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  1    wreg      void 
 13224 ;; Registers used:
 13225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13231 ;;      Params:         4       0       0       0       0       0       0
 13232 ;;      Locals:        17       0       0       0       0       0       0
 13233 ;;      Temps:          1       0       0       0       0       0       0
 13234 ;;      Totals:        22       0       0       0       0       0       0
 13235 ;;Total ram usage:       22 bytes
 13236 ;; Hardware stack levels used: 1
 13237 ;; Hardware stack levels required when called: 3
 13238 ;; This function calls:
 13239 ;;		i2_fputc
 13240 ;;		i2_strlen
 13241 ;; This function is called by:
 13242 ;;		i2_vfpfcnvrt
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           
 13246                           	psect	text62
 13247   0025B0                     __ptext62:
 13248                           	callstack 0
 13249   0025B0                     i2_stoa:
 13250                           	callstack 12
 13251   0025B0                     
 13252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
 13253   0025B0  EE21  F0C1         	lfsr	2,stoa@F1157
 13254   0025B4  EE10  F011         	lfsr	1,i2stoa@nuls
 13255   0025B8  0E06               	movlw	6
 13256   0025BA                     i2u421_41:
 13257   0025BA  CFDB FFE3          	movff	plusw2,plusw1
 13258   0025BE  06E8               	decf	wreg,f,c
 13259   0025C0  E2FC               	bc	i2u421_41
 13260   0025C2                     
 13261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
 13262   0025C2  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 13263   0025C6  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 13264   0025CA                     
 13265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
 13266   0025CA  501C               	movf	i2stoa@cp^0,w,c
 13267   0025CC  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 13268   0025CE  A4D8               	btfss	status,2,c
 13269   0025D0  EFEC  F012         	goto	i2u422_41
 13270   0025D4  EFEE  F012         	goto	i2u422_40
 13271   0025D8                     i2u422_41:
 13272   0025D8  EFF2  F012         	goto	i2l4440
 13273   0025DC                     i2u422_40:
 13274   0025DC                     
 13275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
 13276   0025DC  0E11               	movlw	low i2stoa@nuls
 13277   0025DE  6E1C               	movwf	i2stoa@cp^0,c
 13278   0025E0  0E00               	movlw	high i2stoa@nuls
 13279   0025E2  6E1D               	movwf	(i2stoa@cp+1)^0,c
 13280   0025E4                     i2l4440:
 13281                           
 13282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
 13283   0025E4  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 13284   0025E8  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 13285   0025EC  ECC6  F01F         	call	i2_strlen	;wreg free
 13286   0025F0  C001  F020         	movff	?i2_strlen,i2stoa@l
 13287   0025F4  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 13288   0025F8                     
 13289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
 13290   0025F8  C0D0  F01E         	movff	_prec,i2stoa@p
 13291   0025FC  C0D1  F01F         	movff	_prec+1,i2stoa@p+1
 13292   002600                     
 13293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 13294   002600  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 13295   002602  EF05  F013         	goto	i2u423_41
 13296   002606  EF07  F013         	goto	i2u423_40
 13297   00260A                     i2u423_41:
 13298   00260A  EF1C  F013         	goto	i2l1400
 13299   00260E                     i2u423_40:
 13300   00260E  5020               	movf	i2stoa@l^0,w,c
 13301   002610  5C1E               	subwf	i2stoa@p^0,w,c
 13302   002612  501F               	movf	(i2stoa@p+1)^0,w,c
 13303   002614  0A80               	xorlw	128
 13304   002616  6E10               	movwf	??i2_stoa^0,c
 13305   002618  5021               	movf	(i2stoa@l+1)^0,w,c
 13306   00261A  0A80               	xorlw	128
 13307   00261C  5810               	subwfb	??i2_stoa^0,w,c
 13308   00261E  A0D8               	btfss	status,0,c
 13309   002620  EF14  F013         	goto	i2u424_41
 13310   002624  EF16  F013         	goto	i2u424_40
 13311   002628                     i2u424_41:
 13312   002628  EF18  F013         	goto	i2l1398
 13313   00262C                     i2u424_40:
 13314   00262C  EF1C  F013         	goto	i2l1400
 13315   002630                     i2l1398:
 13316   002630  C01E  F020         	movff	i2stoa@p,i2stoa@l
 13317   002634  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 13318   002638                     i2l1400:
 13319                           
 13320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 13321   002638  C020  F01E         	movff	i2stoa@l,i2stoa@p
 13322   00263C  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 13323                           
 13324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 13325   002640  C0CE  F01A         	movff	_width,i2stoa@w
 13326   002644  C0CF  F01B         	movff	_width+1,i2stoa@w+1
 13327                           
 13328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 859:     if (!(fl
      +                          ags & (1 << 0))) {
 13329   002648  0100               	movlb	0	; () banked
 13330   00264A  B1D4               	btfsc	_flags& (0+255),0,b
 13331   00264C  EF2A  F013         	goto	i2u425_41
 13332   002650  EF2C  F013         	goto	i2u425_40
 13333   002654                     i2u425_41:
 13334   002654  EF49  F013         	goto	i2l4456
 13335   002658                     i2u425_40:
 13336   002658  EF3A  F013         	goto	i2l4454
 13337   00265C                     i2l4450:
 13338                           
 13339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 13340   00265C  0E00               	movlw	0
 13341   00265E  6E04               	movwf	(i2fputc@c+1)^0,c
 13342   002660  0E20               	movlw	32
 13343   002662  6E03               	movwf	i2fputc@c^0,c
 13344   002664  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 13345   002668  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 13346   00266C  EC51  F01D         	call	i2_fputc	;wreg free
 13347   002670                     
 13348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 13349   002670  4A20               	infsnz	i2stoa@l^0,f,c
 13350   002672  2A21               	incf	(i2stoa@l+1)^0,f,c
 13351   002674                     i2l4454:
 13352                           
 13353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 13354   002674  501A               	movf	i2stoa@w^0,w,c
 13355   002676  5C20               	subwf	i2stoa@l^0,w,c
 13356   002678  5021               	movf	(i2stoa@l+1)^0,w,c
 13357   00267A  0A80               	xorlw	128
 13358   00267C  6E10               	movwf	??i2_stoa^0,c
 13359   00267E  501B               	movf	(i2stoa@w+1)^0,w,c
 13360   002680  0A80               	xorlw	128
 13361   002682  5810               	subwfb	??i2_stoa^0,w,c
 13362   002684  A0D8               	btfss	status,0,c
 13363   002686  EF47  F013         	goto	i2u426_41
 13364   00268A  EF49  F013         	goto	i2u426_40
 13365   00268E                     i2u426_41:
 13366   00268E  EF2E  F013         	goto	i2l4450
 13367   002692                     i2u426_40:
 13368   002692                     i2l4456:
 13369                           
 13370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 13371   002692  0E00               	movlw	0
 13372   002694  6E19               	movwf	(i2stoa@i+1)^0,c
 13373   002696  0E00               	movlw	0
 13374   002698  6E18               	movwf	i2stoa@i^0,c
 13375                           
 13376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 13377   00269A  EF62  F013         	goto	i2l4464
 13378   00269E                     i2l4458:
 13379                           
 13380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 13381   00269E  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 13382   0026A2  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 13383   0026A6  50DF               	movf	indf2,w,c
 13384   0026A8  6E10               	movwf	??i2_stoa^0,c
 13385   0026AA  5010               	movf	??i2_stoa^0,w,c
 13386   0026AC  6E03               	movwf	i2fputc@c^0,c
 13387   0026AE  6A04               	clrf	(i2fputc@c+1)^0,c
 13388   0026B0  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 13389   0026B4  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 13390   0026B8  EC51  F01D         	call	i2_fputc	;wreg free
 13391   0026BC                     
 13392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 13393   0026BC  4A1C               	infsnz	i2stoa@cp^0,f,c
 13394   0026BE  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 13395   0026C0                     
 13396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 13397   0026C0  4A18               	infsnz	i2stoa@i^0,f,c
 13398   0026C2  2A19               	incf	(i2stoa@i+1)^0,f,c
 13399   0026C4                     i2l4464:
 13400                           
 13401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 13402   0026C4  501E               	movf	i2stoa@p^0,w,c
 13403   0026C6  5C18               	subwf	i2stoa@i^0,w,c
 13404   0026C8  5019               	movf	(i2stoa@i+1)^0,w,c
 13405   0026CA  0A80               	xorlw	128
 13406   0026CC  6E10               	movwf	??i2_stoa^0,c
 13407   0026CE  501F               	movf	(i2stoa@p+1)^0,w,c
 13408   0026D0  0A80               	xorlw	128
 13409   0026D2  5810               	subwfb	??i2_stoa^0,w,c
 13410   0026D4  A0D8               	btfss	status,0,c
 13411   0026D6  EF6F  F013         	goto	i2u427_41
 13412   0026DA  EF71  F013         	goto	i2u427_40
 13413   0026DE                     i2u427_41:
 13414   0026DE  EF4F  F013         	goto	i2l4458
 13415   0026E2                     i2u427_40:
 13416   0026E2                     
 13417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 879:     if (flag
      +                          s & (1 << 0)) {
 13418   0026E2  0100               	movlb	0	; () banked
 13419   0026E4  A1D4               	btfss	_flags& (0+255),0,b
 13420   0026E6  EF77  F013         	goto	i2u428_41
 13421   0026EA  EF79  F013         	goto	i2u428_40
 13422   0026EE                     i2u428_41:
 13423   0026EE  EF96  F013         	goto	i2l1414
 13424   0026F2                     i2u428_40:
 13425   0026F2  EF87  F013         	goto	i2l4472
 13426   0026F6                     i2l4468:
 13427                           
 13428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 881:             
      +                          fputc(' ', fp);
 13429   0026F6  0E00               	movlw	0
 13430   0026F8  6E04               	movwf	(i2fputc@c+1)^0,c
 13431   0026FA  0E20               	movlw	32
 13432   0026FC  6E03               	movwf	i2fputc@c^0,c
 13433   0026FE  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 13434   002702  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 13435   002706  EC51  F01D         	call	i2_fputc	;wreg free
 13436   00270A                     
 13437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 882:             
      +                          ++l;
 13438   00270A  4A20               	infsnz	i2stoa@l^0,f,c
 13439   00270C  2A21               	incf	(i2stoa@l+1)^0,f,c
 13440   00270E                     i2l4472:
 13441                           
 13442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 880:         whil
      +                          e (l < w) {
 13443   00270E  501A               	movf	i2stoa@w^0,w,c
 13444   002710  5C20               	subwf	i2stoa@l^0,w,c
 13445   002712  5021               	movf	(i2stoa@l+1)^0,w,c
 13446   002714  0A80               	xorlw	128
 13447   002716  6E10               	movwf	??i2_stoa^0,c
 13448   002718  501B               	movf	(i2stoa@w+1)^0,w,c
 13449   00271A  0A80               	xorlw	128
 13450   00271C  5810               	subwfb	??i2_stoa^0,w,c
 13451   00271E  A0D8               	btfss	status,0,c
 13452   002720  EF94  F013         	goto	i2u429_41
 13453   002724  EF96  F013         	goto	i2u429_40
 13454   002728                     i2u429_41:
 13455   002728  EF7B  F013         	goto	i2l4468
 13456   00272C                     i2u429_40:
 13457   00272C                     i2l1414:
 13458   00272C  0012               	return		;funcret
 13459   00272E                     __end_ofi2_stoa:
 13460                           	callstack 0
 13461                           
 13462 ;; *************** function i2_strlen *****************
 13463 ;; Defined at:
 13464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13467 ;;		 -> ?i2_printf(2), i2stoa@nuls(7), stoa@nuls(7), ?_printf(2), 
 13468 ;;		 -> receiveBuffer(32), transmitBuffer(32), 
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13471 ;;		 -> ?i2_printf(2), i2stoa@nuls(7), stoa@nuls(7), ?_printf(2), 
 13472 ;;		 -> receiveBuffer(32), transmitBuffer(32), 
 13473 ;; Return value:  Size  Location     Type
 13474 ;;                  2    0[COMRAM] unsigned int 
 13475 ;; Registers used:
 13476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13477 ;; Tracked objects:
 13478 ;;		On entry : 0/0
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13482 ;;      Params:         2       0       0       0       0       0       0
 13483 ;;      Locals:         2       0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0
 13485 ;;      Totals:         4       0       0       0       0       0       0
 13486 ;;Total ram usage:        4 bytes
 13487 ;; Hardware stack levels used: 1
 13488 ;; This function calls:
 13489 ;;		Nothing
 13490 ;; This function is called by:
 13491 ;;		i2_stoa
 13492 ;; This function uses a non-reentrant model
 13493 ;;
 13494                           
 13495                           	psect	text63
 13496   003F8C                     __ptext63:
 13497                           	callstack 0
 13498   003F8C                     i2_strlen:
 13499                           	callstack 14
 13500   003F8C  C001  F003         	movff	i2strlen@s,i2strlen@a
 13501   003F90  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 13502   003F94  EFCE  F01F         	goto	i2l4082
 13503   003F98                     i2l4080:
 13504   003F98  4A01               	infsnz	i2strlen@s^0,f,c
 13505   003F9A  2A02               	incf	(i2strlen@s+1)^0,f,c
 13506   003F9C                     i2l4082:
 13507   003F9C  C001  FFD9         	movff	i2strlen@s,fsr2l
 13508   003FA0  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 13509   003FA4  50DF               	movf	indf2,w,c
 13510   003FA6  A4D8               	btfss	status,2,c
 13511   003FA8  EFD8  F01F         	goto	i2u350_41
 13512   003FAC  EFDA  F01F         	goto	i2u350_40
 13513   003FB0                     i2u350_41:
 13514   003FB0  EFCC  F01F         	goto	i2l4080
 13515   003FB4                     i2u350_40:
 13516   003FB4  5003               	movf	i2strlen@a^0,w,c
 13517   003FB6  5C01               	subwf	i2strlen@s^0,w,c
 13518   003FB8  6E01               	movwf	?i2_strlen^0,c
 13519   003FBA  5004               	movf	(i2strlen@a+1)^0,w,c
 13520   003FBC  5802               	subwfb	(i2strlen@s+1)^0,w,c
 13521   003FBE  6E02               	movwf	(?i2_strlen+1)^0,c
 13522   003FC0  0012               	return		;funcret
 13523   003FC2                     __end_ofi2_strlen:
 13524                           	callstack 0
 13525                           
 13526 ;; *************** function i2_dtoa *****************
 13527 ;; Defined at:
 13528 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 13529 ;; Parameters:    Size  Location     Type
 13530 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 13531 ;;		 -> NULL(0), 
 13532 ;;  d               8   31[COMRAM] long long 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;  n               8   53[COMRAM] long long 
 13535 ;;  i               2   61[COMRAM] int 
 13536 ;;  w               2   51[COMRAM] int 
 13537 ;;  p               2   49[COMRAM] int 
 13538 ;;  s               1   63[COMRAM] unsigned char 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13548 ;;      Params:        10       0       0       0       0       0       0
 13549 ;;      Locals:        17       0       0       0       0       0       0
 13550 ;;      Temps:          8       0       0       0       0       0       0
 13551 ;;      Totals:        35       0       0       0       0       0       0
 13552 ;;Total ram usage:       35 bytes
 13553 ;; Hardware stack levels used: 1
 13554 ;; Hardware stack levels required when called: 5
 13555 ;; This function calls:
 13556 ;;		i2___aodiv
 13557 ;;		i2___aomod
 13558 ;;		i2_abs
 13559 ;;		i2_pad
 13560 ;; This function is called by:
 13561 ;;		i2_vfpfcnvrt
 13562 ;; This function uses a non-reentrant model
 13563 ;;
 13564                           
 13565                           	psect	text64
 13566   0016C8                     __ptext64:
 13567                           	callstack 0
 13568   0016C8                     i2_dtoa:
 13569                           	callstack 10
 13570   0016C8                     
 13571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
 13572   0016C8  C020  F036         	movff	i2dtoa@d,i2dtoa@n
 13573   0016CC  C021  F037         	movff	i2dtoa@d+1,i2dtoa@n+1
 13574   0016D0  C022  F038         	movff	i2dtoa@d+2,i2dtoa@n+2
 13575   0016D4  C023  F039         	movff	i2dtoa@d+3,i2dtoa@n+3
 13576   0016D8  C024  F03A         	movff	i2dtoa@d+4,i2dtoa@n+4
 13577   0016DC  C025  F03B         	movff	i2dtoa@d+5,i2dtoa@n+5
 13578   0016E0  C026  F03C         	movff	i2dtoa@d+6,i2dtoa@n+6
 13579   0016E4  C027  F03D         	movff	i2dtoa@d+7,i2dtoa@n+7
 13580   0016E8                     
 13581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
 13582   0016E8  BE3D               	btfsc	(i2dtoa@n+7)^0,7,c
 13583   0016EA  EF79  F00B         	goto	i2u408_41
 13584   0016EE  EF7C  F00B         	goto	i2u408_40
 13585   0016F2                     i2u408_41:
 13586   0016F2  0E01               	movlw	1
 13587   0016F4  EF7D  F00B         	goto	i2u409_40
 13588   0016F8                     i2u408_40:
 13589   0016F8  0E00               	movlw	0
 13590   0016FA                     i2u409_40:
 13591   0016FA  6E40               	movwf	i2dtoa@s^0,c
 13592   0016FC                     
 13593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
 13594   0016FC  5040               	movf	i2dtoa@s^0,w,c
 13595   0016FE  B4D8               	btfsc	status,2,c
 13596   001700  EF84  F00B         	goto	i2u410_41
 13597   001704  EF86  F00B         	goto	i2u410_40
 13598   001708                     i2u410_41:
 13599   001708  EF96  F00B         	goto	i2l4380
 13600   00170C                     i2u410_40:
 13601   00170C                     
 13602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
 13603   00170C  1E3D               	comf	(i2dtoa@n+7)^0,f,c
 13604   00170E  1E3C               	comf	(i2dtoa@n+6)^0,f,c
 13605   001710  1E3B               	comf	(i2dtoa@n+5)^0,f,c
 13606   001712  1E3A               	comf	(i2dtoa@n+4)^0,f,c
 13607   001714  1E39               	comf	(i2dtoa@n+3)^0,f,c
 13608   001716  1E38               	comf	(i2dtoa@n+2)^0,f,c
 13609   001718  1E37               	comf	(i2dtoa@n+1)^0,f,c
 13610   00171A  6C36               	negf	i2dtoa@n^0,c
 13611   00171C  0E00               	movlw	0
 13612   00171E  2237               	addwfc	(i2dtoa@n+1)^0,f,c
 13613   001720  2238               	addwfc	(i2dtoa@n+2)^0,f,c
 13614   001722  2239               	addwfc	(i2dtoa@n+3)^0,f,c
 13615   001724  223A               	addwfc	(i2dtoa@n+4)^0,f,c
 13616   001726  223B               	addwfc	(i2dtoa@n+5)^0,f,c
 13617   001728  223C               	addwfc	(i2dtoa@n+6)^0,f,c
 13618   00172A  223D               	addwfc	(i2dtoa@n+7)^0,f,c
 13619   00172C                     i2l4380:
 13620                           
 13621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
 13622   00172C  0100               	movlb	0	; () banked
 13623   00172E  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 13624   001730  EF9C  F00B         	goto	i2u411_41
 13625   001734  EF9E  F00B         	goto	i2u411_40
 13626   001738                     i2u411_41:
 13627   001738  EF9F  F00B         	goto	i2l4384
 13628   00173C                     i2u411_40:
 13629   00173C                     
 13630                           ; BSR set to: 0
 13631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
 13632   00173C  93D4               	bcf	_flags& (0+255),1,b
 13633   00173E                     i2l4384:
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
 13637   00173E  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 13638   001740  EFAC  F00B         	goto	i2u412_40
 13639   001744  51D1               	movf	(_prec+1)& (0+255),w,b
 13640   001746  E106               	bnz	i2u412_41
 13641   001748  05D0               	decf	_prec& (0+255),w,b
 13642   00174A  B0D8               	btfsc	status,0,c
 13643   00174C  EFAA  F00B         	goto	i2u412_41
 13644   001750  EFAC  F00B         	goto	i2u412_40
 13645   001754                     i2u412_41:
 13646   001754  EFB2  F00B         	goto	i2l1375
 13647   001758                     i2u412_40:
 13648   001758                     
 13649                           ; BSR set to: 0
 13650   001758  0E00               	movlw	0
 13651   00175A  6E33               	movwf	(i2dtoa@p+1)^0,c
 13652   00175C  0E01               	movlw	1
 13653   00175E  6E32               	movwf	i2dtoa@p^0,c
 13654   001760  EFB6  F00B         	goto	i2l1377
 13655   001764                     i2l1375:
 13656                           
 13657                           ; BSR set to: 0
 13658   001764  C0D0  F032         	movff	_prec,i2dtoa@p
 13659   001768  C0D1  F033         	movff	_prec+1,i2dtoa@p+1
 13660   00176C                     i2l1377:
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
 13664   00176C  C0CE  F034         	movff	_width,i2dtoa@w
 13665   001770  C0CF  F035         	movff	_width+1,i2dtoa@w+1
 13666   001774                     
 13667                           ; BSR set to: 0
 13668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
 13669   001774  5040               	movf	i2dtoa@s^0,w,c
 13670   001776  B4D8               	btfsc	status,2,c
 13671   001778  EFC0  F00B         	goto	i2u413_41
 13672   00177C  EFC2  F00B         	goto	i2u413_40
 13673   001780                     i2u413_41:
 13674   001780  EFD9  F00B         	goto	i2l1378
 13675   001784                     i2u413_40:
 13676   001784                     
 13677                           ; BSR set to: 0
 13678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
 13679   001784  0634               	decf	i2dtoa@w^0,f,c
 13680   001786  A0D8               	btfss	status,0,c
 13681   001788  0635               	decf	(i2dtoa@w+1)^0,f,c
 13682   00178A                     
 13683                           ; BSR set to: 0
 13684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
 13685   00178A  5040               	movf	i2dtoa@s^0,w,c
 13686   00178C  A4D8               	btfss	status,2,c
 13687   00178E  EFCB  F00B         	goto	i2u414_41
 13688   001792  EFCD  F00B         	goto	i2u414_40
 13689   001796                     i2u414_41:
 13690   001796  EFD3  F00B         	goto	i2l4396
 13691   00179A                     i2u414_40:
 13692   00179A                     
 13693                           ; BSR set to: 0
 13694   00179A  0E00               	movlw	0
 13695   00179C  6E31               	movwf	(i2_dtoa$2074+1)^0,c
 13696   00179E  0E2B               	movlw	43
 13697   0017A0  6E30               	movwf	i2_dtoa$2074^0,c
 13698   0017A2  EFD7  F00B         	goto	i2l4398
 13699   0017A6                     i2l4396:
 13700                           
 13701                           ; BSR set to: 0
 13702   0017A6  0E00               	movlw	0
 13703   0017A8  6E31               	movwf	(i2_dtoa$2074+1)^0,c
 13704   0017AA  0E2D               	movlw	45
 13705   0017AC  6E30               	movwf	i2_dtoa$2074^0,c
 13706   0017AE                     i2l4398:
 13707                           
 13708                           ; BSR set to: 0
 13709   0017AE  C030  F040         	movff	i2_dtoa$2074,i2dtoa@s
 13710   0017B2                     i2l1378:
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
 13714   0017B2  0E00               	movlw	0
 13715   0017B4  6E3F               	movwf	(i2dtoa@i+1)^0,c
 13716   0017B6  0E1F               	movlw	31
 13717   0017B8  6E3E               	movwf	i2dtoa@i^0,c
 13718   0017BA                     
 13719                           ; BSR set to: 0
 13720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
 13721   0017BA  0E00               	movlw	0
 13722   0017BC  0101               	movlb	1	; () banked
 13723   0017BE  6F4E               	movwf	(_dbuf+31)& (0+255),b
 13724                           
 13725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
 13726   0017C0  EF5E  F00C         	goto	i2l4412
 13727   0017C4                     i2l4402:
 13728                           
 13729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
 13730   0017C4  063E               	decf	i2dtoa@i^0,f,c
 13731   0017C6  A0D8               	btfss	status,0,c
 13732   0017C8  063F               	decf	(i2dtoa@i+1)^0,f,c
 13733   0017CA                     
 13734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 13735   0017CA  0E2F               	movlw	low _dbuf
 13736   0017CC  243E               	addwf	i2dtoa@i^0,w,c
 13737   0017CE  6ED9               	movwf	fsr2l,c
 13738   0017D0  0E01               	movlw	high _dbuf
 13739   0017D2  203F               	addwfc	(i2dtoa@i+1)^0,w,c
 13740   0017D4  6EDA               	movwf	fsr2h,c
 13741   0017D6  C036  F001         	movff	i2dtoa@n,i2___aomod@dividend
 13742   0017DA  C037  F002         	movff	i2dtoa@n+1,i2___aomod@dividend+1
 13743   0017DE  C038  F003         	movff	i2dtoa@n+2,i2___aomod@dividend+2
 13744   0017E2  C039  F004         	movff	i2dtoa@n+3,i2___aomod@dividend+3
 13745   0017E6  C03A  F005         	movff	i2dtoa@n+4,i2___aomod@dividend+4
 13746   0017EA  C03B  F006         	movff	i2dtoa@n+5,i2___aomod@dividend+5
 13747   0017EE  C03C  F007         	movff	i2dtoa@n+6,i2___aomod@dividend+6
 13748   0017F2  C03D  F008         	movff	i2dtoa@n+7,i2___aomod@dividend+7
 13749   0017F6  0E0A               	movlw	10
 13750   0017F8  6E09               	movwf	i2___aomod@divisor^0,c
 13751   0017FA  0E00               	movlw	0
 13752   0017FC  6E0A               	movwf	(i2___aomod@divisor+1)^0,c
 13753   0017FE  0E00               	movlw	0
 13754   001800  6E0B               	movwf	(i2___aomod@divisor+2)^0,c
 13755   001802  0E00               	movlw	0
 13756   001804  6E0C               	movwf	(i2___aomod@divisor+3)^0,c
 13757   001806  0E00               	movlw	0
 13758   001808  6E0D               	movwf	(i2___aomod@divisor+4)^0,c
 13759   00180A  0E00               	movlw	0
 13760   00180C  6E0E               	movwf	(i2___aomod@divisor+5)^0,c
 13761   00180E  0E00               	movlw	0
 13762   001810  6E0F               	movwf	(i2___aomod@divisor+6)^0,c
 13763   001812  0E00               	movlw	0
 13764   001814  6E10               	movwf	(i2___aomod@divisor+7)^0,c
 13765   001816  EC06  F015         	call	i2___aomod	;wreg free
 13766   00181A  C001  F028         	movff	?i2___aomod,??i2_dtoa
 13767   00181E  C002  F029         	movff	?i2___aomod+1,??i2_dtoa+1
 13768   001822  C003  F02A         	movff	?i2___aomod+2,??i2_dtoa+2
 13769   001826  C004  F02B         	movff	?i2___aomod+3,??i2_dtoa+3
 13770   00182A  C005  F02C         	movff	?i2___aomod+4,??i2_dtoa+4
 13771   00182E  C006  F02D         	movff	?i2___aomod+5,??i2_dtoa+5
 13772   001832  C007  F02E         	movff	?i2___aomod+6,??i2_dtoa+6
 13773   001836  C008  F02F         	movff	?i2___aomod+7,??i2_dtoa+7
 13774   00183A  C028  F013         	movff	??i2_dtoa,i2abs@a
 13775   00183E  C029  F014         	movff	??i2_dtoa+1,i2abs@a+1
 13776   001842  EC4E  F01F         	call	i2_abs	;wreg free
 13777   001846  5013               	movf	?i2_abs^0,w,c
 13778   001848  0F30               	addlw	48
 13779   00184A  6EDF               	movwf	indf2,c
 13780   00184C                     
 13781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
 13782   00184C  0632               	decf	i2dtoa@p^0,f,c
 13783   00184E  A0D8               	btfss	status,0,c
 13784   001850  0633               	decf	(i2dtoa@p+1)^0,f,c
 13785   001852                     
 13786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
 13787   001852  0634               	decf	i2dtoa@w^0,f,c
 13788   001854  A0D8               	btfss	status,0,c
 13789   001856  0635               	decf	(i2dtoa@w+1)^0,f,c
 13790   001858                     
 13791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
 13792   001858  C036  F001         	movff	i2dtoa@n,i2___aodiv@dividend
 13793   00185C  C037  F002         	movff	i2dtoa@n+1,i2___aodiv@dividend+1
 13794   001860  C038  F003         	movff	i2dtoa@n+2,i2___aodiv@dividend+2
 13795   001864  C039  F004         	movff	i2dtoa@n+3,i2___aodiv@dividend+3
 13796   001868  C03A  F005         	movff	i2dtoa@n+4,i2___aodiv@dividend+4
 13797   00186C  C03B  F006         	movff	i2dtoa@n+5,i2___aodiv@dividend+5
 13798   001870  C03C  F007         	movff	i2dtoa@n+6,i2___aodiv@dividend+6
 13799   001874  C03D  F008         	movff	i2dtoa@n+7,i2___aodiv@dividend+7
 13800   001878  0E0A               	movlw	10
 13801   00187A  6E09               	movwf	i2___aodiv@divisor^0,c
 13802   00187C  0E00               	movlw	0
 13803   00187E  6E0A               	movwf	(i2___aodiv@divisor+1)^0,c
 13804   001880  0E00               	movlw	0
 13805   001882  6E0B               	movwf	(i2___aodiv@divisor+2)^0,c
 13806   001884  0E00               	movlw	0
 13807   001886  6E0C               	movwf	(i2___aodiv@divisor+3)^0,c
 13808   001888  0E00               	movlw	0
 13809   00188A  6E0D               	movwf	(i2___aodiv@divisor+4)^0,c
 13810   00188C  0E00               	movlw	0
 13811   00188E  6E0E               	movwf	(i2___aodiv@divisor+5)^0,c
 13812   001890  0E00               	movlw	0
 13813   001892  6E0F               	movwf	(i2___aodiv@divisor+6)^0,c
 13814   001894  0E00               	movlw	0
 13815   001896  6E10               	movwf	(i2___aodiv@divisor+7)^0,c
 13816   001898  EC52  F011         	call	i2___aodiv	;wreg free
 13817   00189C  C001  F036         	movff	?i2___aodiv,i2dtoa@n
 13818   0018A0  C002  F037         	movff	?i2___aodiv+1,i2dtoa@n+1
 13819   0018A4  C003  F038         	movff	?i2___aodiv+2,i2dtoa@n+2
 13820   0018A8  C004  F039         	movff	?i2___aodiv+3,i2dtoa@n+3
 13821   0018AC  C005  F03A         	movff	?i2___aodiv+4,i2dtoa@n+4
 13822   0018B0  C006  F03B         	movff	?i2___aodiv+5,i2dtoa@n+5
 13823   0018B4  C007  F03C         	movff	?i2___aodiv+6,i2dtoa@n+6
 13824   0018B8  C008  F03D         	movff	?i2___aodiv+7,i2dtoa@n+7
 13825   0018BC                     i2l4412:
 13826                           
 13827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
 13828   0018BC  BE3F               	btfsc	(i2dtoa@i+1)^0,7,c
 13829   0018BE  EF69  F00C         	goto	i2u415_41
 13830   0018C2  503F               	movf	(i2dtoa@i+1)^0,w,c
 13831   0018C4  E108               	bnz	i2u415_40
 13832   0018C6  043E               	decf	i2dtoa@i^0,w,c
 13833   0018C8  A0D8               	btfss	status,0,c
 13834   0018CA  EF69  F00C         	goto	i2u415_41
 13835   0018CE  EF6B  F00C         	goto	i2u415_40
 13836   0018D2                     i2u415_41:
 13837   0018D2  EF9C  F00C         	goto	i2l4422
 13838   0018D6                     i2u415_40:
 13839   0018D6  5036               	movf	i2dtoa@n^0,w,c
 13840   0018D8  1037               	iorwf	(i2dtoa@n+1)^0,w,c
 13841   0018DA  1038               	iorwf	(i2dtoa@n+2)^0,w,c
 13842   0018DC  1039               	iorwf	(i2dtoa@n+3)^0,w,c
 13843   0018DE  103A               	iorwf	(i2dtoa@n+4)^0,w,c
 13844   0018E0  103B               	iorwf	(i2dtoa@n+5)^0,w,c
 13845   0018E2  103C               	iorwf	(i2dtoa@n+6)^0,w,c
 13846   0018E4  103D               	iorwf	(i2dtoa@n+7)^0,w,c
 13847   0018E6  A4D8               	btfss	status,2,c
 13848   0018E8  EF78  F00C         	goto	i2u416_41
 13849   0018EC  EF7A  F00C         	goto	i2u416_40
 13850   0018F0                     i2u416_41:
 13851   0018F0  EFE2  F00B         	goto	i2l4402
 13852   0018F4                     i2u416_40:
 13853   0018F4  BE33               	btfsc	(i2dtoa@p+1)^0,7,c
 13854   0018F6  EF87  F00C         	goto	i2u417_40
 13855   0018FA  5033               	movf	(i2dtoa@p+1)^0,w,c
 13856   0018FC  E106               	bnz	i2u417_41
 13857   0018FE  0432               	decf	i2dtoa@p^0,w,c
 13858   001900  B0D8               	btfsc	status,0,c
 13859   001902  EF85  F00C         	goto	i2u417_41
 13860   001906  EF87  F00C         	goto	i2u417_40
 13861   00190A                     i2u417_41:
 13862   00190A  EFE2  F00B         	goto	i2l4402
 13863   00190E                     i2u417_40:
 13864   00190E  BE35               	btfsc	(i2dtoa@w+1)^0,7,c
 13865   001910  EF92  F00C         	goto	i2u418_41
 13866   001914  5035               	movf	(i2dtoa@w+1)^0,w,c
 13867   001916  E108               	bnz	i2u418_40
 13868   001918  0434               	decf	i2dtoa@w^0,w,c
 13869   00191A  A0D8               	btfss	status,0,c
 13870   00191C  EF92  F00C         	goto	i2u418_41
 13871   001920  EF94  F00C         	goto	i2u418_40
 13872   001924                     i2u418_41:
 13873   001924  EF9C  F00C         	goto	i2l4422
 13874   001928                     i2u418_40:
 13875   001928  0100               	movlb	0	; () banked
 13876   00192A  B3D4               	btfsc	_flags& (0+255),1,b
 13877   00192C  EF9A  F00C         	goto	i2u419_41
 13878   001930  EF9C  F00C         	goto	i2u419_40
 13879   001934                     i2u419_41:
 13880   001934  EFE2  F00B         	goto	i2l4402
 13881   001938                     i2u419_40:
 13882   001938                     i2l4422:
 13883                           
 13884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
 13885   001938  5040               	movf	i2dtoa@s^0,w,c
 13886   00193A  B4D8               	btfsc	status,2,c
 13887   00193C  EFA2  F00C         	goto	i2u420_41
 13888   001940  EFA4  F00C         	goto	i2u420_40
 13889   001944                     i2u420_41:
 13890   001944  EFAF  F00C         	goto	i2l4428
 13891   001948                     i2u420_40:
 13892   001948                     
 13893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
 13894   001948  063E               	decf	i2dtoa@i^0,f,c
 13895   00194A  A0D8               	btfss	status,0,c
 13896   00194C  063F               	decf	(i2dtoa@i+1)^0,f,c
 13897   00194E                     
 13898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
 13899   00194E  0E2F               	movlw	low _dbuf
 13900   001950  243E               	addwf	i2dtoa@i^0,w,c
 13901   001952  6ED9               	movwf	fsr2l,c
 13902   001954  0E01               	movlw	high _dbuf
 13903   001956  203F               	addwfc	(i2dtoa@i+1)^0,w,c
 13904   001958  6EDA               	movwf	fsr2h,c
 13905   00195A  C040  FFDF         	movff	i2dtoa@s,indf2
 13906   00195E                     i2l4428:
 13907                           
 13908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
 13909   00195E  C01E  F013         	movff	i2dtoa@fp,i2pad@fp
 13910   001962  C01F  F014         	movff	i2dtoa@fp+1,i2pad@fp+1
 13911   001966  0E2F               	movlw	low _dbuf
 13912   001968  243E               	addwf	i2dtoa@i^0,w,c
 13913   00196A  6E15               	movwf	i2pad@buf^0,c
 13914   00196C  0E01               	movlw	high _dbuf
 13915   00196E  203F               	addwfc	(i2dtoa@i+1)^0,w,c
 13916   001970  6E16               	movwf	(i2pad@buf+1)^0,c
 13917   001972  C034  F017         	movff	i2dtoa@w,i2pad@p
 13918   001976  C035  F018         	movff	i2dtoa@w+1,i2pad@p+1
 13919   00197A  ECAE  F01C         	call	i2_pad	;wreg free
 13920   00197E  0012               	return		;funcret
 13921   001980                     __end_ofi2_dtoa:
 13922                           	callstack 0
 13923                           
 13924 ;; *************** function i2_pad *****************
 13925 ;; Defined at:
 13926 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 13927 ;; Parameters:    Size  Location     Type
 13928 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 13929 ;;		 -> NULL(0), 
 13930 ;;  buf             2   20[COMRAM] PTR unsigned char 
 13931 ;;		 -> dbuf(32), 
 13932 ;;  p               2   22[COMRAM] int 
 13933 ;; Auto vars:     Size  Location     Type
 13934 ;;  w               2   27[COMRAM] int 
 13935 ;;  i               2   25[COMRAM] int 
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  1    wreg      void 
 13938 ;; Registers used:
 13939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13945 ;;      Params:         6       0       0       0       0       0       0
 13946 ;;      Locals:         4       0       0       0       0       0       0
 13947 ;;      Temps:          1       0       0       0       0       0       0
 13948 ;;      Totals:        11       0       0       0       0       0       0
 13949 ;;Total ram usage:       11 bytes
 13950 ;; Hardware stack levels used: 1
 13951 ;; Hardware stack levels required when called: 4
 13952 ;; This function calls:
 13953 ;;		i2_fputc
 13954 ;;		i2_fputs
 13955 ;; This function is called by:
 13956 ;;		i2_dtoa
 13957 ;;		i2_utoa
 13958 ;;		i2_xtoa
 13959 ;; This function uses a non-reentrant model
 13960 ;;
 13961                           
 13962                           	psect	text65
 13963   00395C                     __ptext65:
 13964                           	callstack 0
 13965   00395C                     i2_pad:
 13966                           	callstack 10
 13967   00395C                     
 13968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
 13969   00395C  0100               	movlb	0	; () banked
 13970   00395E  A1D4               	btfss	_flags& (0+255),0,b
 13971   003960  EFB4  F01C         	goto	i2u343_41
 13972   003964  EFB6  F01C         	goto	i2u343_40
 13973   003968                     i2u343_41:
 13974   003968  EFC0  F01C         	goto	i2l4048
 13975   00396C                     i2u343_40:
 13976   00396C                     
 13977                           ; BSR set to: 0
 13978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
 13979   00396C  C015  F00C         	movff	i2pad@buf,i2fputs@s
 13980   003970  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 13981   003974  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 13982   003978  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 13983   00397C  ECEA  F01E         	call	i2_fputs	;wreg free
 13984   003980                     i2l4048:
 13985                           
 13986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
 13987   003980  BE18               	btfsc	(i2pad@p+1)^0,7,c
 13988   003982  EFC5  F01C         	goto	i2u344_41
 13989   003986  EFC7  F01C         	goto	i2u344_40
 13990   00398A                     i2u344_41:
 13991   00398A  EFCD  F01C         	goto	i2l4052
 13992   00398E                     i2u344_40:
 13993   00398E  C017  F01C         	movff	i2pad@p,i2pad@w
 13994   003992  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 13995   003996  EFD1  F01C         	goto	i2l1348
 13996   00399A                     i2l4052:
 13997   00399A  0E00               	movlw	0
 13998   00399C  6E1D               	movwf	(i2pad@w+1)^0,c
 13999   00399E  0E00               	movlw	0
 14000   0039A0  6E1C               	movwf	i2pad@w^0,c
 14001   0039A2                     i2l1348:
 14002                           
 14003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
 14004   0039A2  0E00               	movlw	0
 14005   0039A4  6E1B               	movwf	(i2pad@i+1)^0,c
 14006   0039A6  0E00               	movlw	0
 14007   0039A8  6E1A               	movwf	i2pad@i^0,c
 14008                           
 14009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
 14010   0039AA  EFE3  F01C         	goto	i2l4058
 14011   0039AE                     i2l4054:
 14012                           
 14013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
 14014   0039AE  0E00               	movlw	0
 14015   0039B0  6E04               	movwf	(i2fputc@c+1)^0,c
 14016   0039B2  0E20               	movlw	32
 14017   0039B4  6E03               	movwf	i2fputc@c^0,c
 14018   0039B6  C013  F005         	movff	i2pad@fp,i2fputc@fp
 14019   0039BA  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 14020   0039BE  EC51  F01D         	call	i2_fputc	;wreg free
 14021   0039C2                     
 14022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
 14023   0039C2  4A1A               	infsnz	i2pad@i^0,f,c
 14024   0039C4  2A1B               	incf	(i2pad@i+1)^0,f,c
 14025   0039C6                     i2l4058:
 14026                           
 14027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
 14028   0039C6  501C               	movf	i2pad@w^0,w,c
 14029   0039C8  5C1A               	subwf	i2pad@i^0,w,c
 14030   0039CA  501B               	movf	(i2pad@i+1)^0,w,c
 14031   0039CC  0A80               	xorlw	128
 14032   0039CE  6E19               	movwf	??i2_pad^0,c
 14033   0039D0  501D               	movf	(i2pad@w+1)^0,w,c
 14034   0039D2  0A80               	xorlw	128
 14035   0039D4  5819               	subwfb	??i2_pad^0,w,c
 14036   0039D6  A0D8               	btfss	status,0,c
 14037   0039D8  EFF0  F01C         	goto	i2u345_41
 14038   0039DC  EFF2  F01C         	goto	i2u345_40
 14039   0039E0                     i2u345_41:
 14040   0039E0  EFD7  F01C         	goto	i2l4054
 14041   0039E4                     i2u345_40:
 14042   0039E4                     
 14043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
 14044   0039E4  0100               	movlb	0	; () banked
 14045   0039E6  B1D4               	btfsc	_flags& (0+255),0,b
 14046   0039E8  EFF8  F01C         	goto	i2u346_41
 14047   0039EC  EFFA  F01C         	goto	i2u346_40
 14048   0039F0                     i2u346_41:
 14049   0039F0  EF04  F01D         	goto	i2l1353
 14050   0039F4                     i2u346_40:
 14051   0039F4                     
 14052                           ; BSR set to: 0
 14053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
 14054   0039F4  C015  F00C         	movff	i2pad@buf,i2fputs@s
 14055   0039F8  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 14056   0039FC  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 14057   003A00  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 14058   003A04  ECEA  F01E         	call	i2_fputs	;wreg free
 14059   003A08                     i2l1353:
 14060   003A08  0012               	return		;funcret
 14061   003A0A                     __end_ofi2_pad:
 14062                           	callstack 0
 14063                           
 14064 ;; *************** function i2_fputs *****************
 14065 ;; Defined at:
 14066 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;  s               2   11[COMRAM] PTR const unsigned char 
 14069 ;;		 -> dbuf(32), 
 14070 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 14071 ;;		 -> NULL(0), 
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;  i               2   16[COMRAM] int 
 14074 ;;  c               1   15[COMRAM] unsigned char 
 14075 ;; Return value:  Size  Location     Type
 14076 ;;                  2   11[COMRAM] int 
 14077 ;; Registers used:
 14078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14079 ;; Tracked objects:
 14080 ;;		On entry : 0/0
 14081 ;;		On exit  : 0/0
 14082 ;;		Unchanged: 0/0
 14083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14084 ;;      Params:         4       0       0       0       0       0       0
 14085 ;;      Locals:         3       0       0       0       0       0       0
 14086 ;;      Temps:          0       0       0       0       0       0       0
 14087 ;;      Totals:         7       0       0       0       0       0       0
 14088 ;;Total ram usage:        7 bytes
 14089 ;; Hardware stack levels used: 1
 14090 ;; Hardware stack levels required when called: 3
 14091 ;; This function calls:
 14092 ;;		i2_fputc
 14093 ;; This function is called by:
 14094 ;;		i2_pad
 14095 ;; This function uses a non-reentrant model
 14096 ;;
 14097                           
 14098                           	psect	text66
 14099   003DD4                     __ptext66:
 14100                           	callstack 0
 14101   003DD4                     i2_fputs:
 14102                           	callstack 10
 14103   003DD4  0E00               	movlw	0
 14104   003DD6  6E12               	movwf	(i2fputs@i+1)^0,c
 14105   003DD8  0E00               	movlw	0
 14106   003DDA  6E11               	movwf	i2fputs@i^0,c
 14107   003DDC  EFFB  F01E         	goto	i2l3746
 14108   003DE0                     i2l3742:
 14109   003DE0  C010  F003         	movff	i2fputs@c,i2fputc@c
 14110   003DE4  6A04               	clrf	(i2fputc@c+1)^0,c
 14111   003DE6  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 14112   003DEA  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 14113   003DEE  EC51  F01D         	call	i2_fputc	;wreg free
 14114   003DF2  4A11               	infsnz	i2fputs@i^0,f,c
 14115   003DF4  2A12               	incf	(i2fputs@i+1)^0,f,c
 14116   003DF6                     i2l3746:
 14117   003DF6  5011               	movf	i2fputs@i^0,w,c
 14118   003DF8  240C               	addwf	i2fputs@s^0,w,c
 14119   003DFA  6ED9               	movwf	fsr2l,c
 14120   003DFC  5012               	movf	(i2fputs@i+1)^0,w,c
 14121   003DFE  200D               	addwfc	(i2fputs@s+1)^0,w,c
 14122   003E00  6EDA               	movwf	fsr2h,c
 14123   003E02  50DF               	movf	indf2,w,c
 14124   003E04  6E10               	movwf	i2fputs@c^0,c
 14125   003E06  5010               	movf	i2fputs@c^0,w,c
 14126   003E08  A4D8               	btfss	status,2,c
 14127   003E0A  EF09  F01F         	goto	i2u292_41
 14128   003E0E  EF0B  F01F         	goto	i2u292_40
 14129   003E12                     i2u292_41:
 14130   003E12  EFF0  F01E         	goto	i2l3742
 14131   003E16                     i2u292_40:
 14132   003E16  0012               	return		;funcret
 14133   003E18                     __end_ofi2_fputs:
 14134                           	callstack 0
 14135                           
 14136 ;; *************** function i2_abs *****************
 14137 ;; Defined at:
 14138 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  a               2   18[COMRAM] int 
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;		None
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  2   18[COMRAM] int 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2, status,0
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14152 ;;      Params:         2       0       0       0       0       0       0
 14153 ;;      Locals:         0       0       0       0       0       0       0
 14154 ;;      Temps:          2       0       0       0       0       0       0
 14155 ;;      Totals:         4       0       0       0       0       0       0
 14156 ;;Total ram usage:        4 bytes
 14157 ;; Hardware stack levels used: 1
 14158 ;; This function calls:
 14159 ;;		Nothing
 14160 ;; This function is called by:
 14161 ;;		i2_dtoa
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165                           	psect	text67
 14166   003E9C                     __ptext67:
 14167                           	callstack 0
 14168   003E9C                     i2_abs:
 14169                           	callstack 14
 14170   003E9C  BE14               	btfsc	(i2abs@a+1)^0,7,c
 14171   003E9E  EF5B  F01F         	goto	i2u347_40
 14172   003EA2  5014               	movf	(i2abs@a+1)^0,w,c
 14173   003EA4  E106               	bnz	i2u347_41
 14174   003EA6  0413               	decf	i2abs@a^0,w,c
 14175   003EA8  B0D8               	btfsc	status,0,c
 14176   003EAA  EF59  F01F         	goto	i2u347_41
 14177   003EAE  EF5B  F01F         	goto	i2u347_40
 14178   003EB2                     i2u347_41:
 14179   003EB2  EF69  F01F         	goto	i2l1495
 14180   003EB6                     i2u347_40:
 14181   003EB6  C013  F015         	movff	i2abs@a,??i2_abs
 14182   003EBA  C014  F016         	movff	i2abs@a+1,??i2_abs+1
 14183   003EBE  1E15               	comf	??i2_abs^0,f,c
 14184   003EC0  1E16               	comf	(??i2_abs+1)^0,f,c
 14185   003EC2  4A15               	infsnz	??i2_abs^0,f,c
 14186   003EC4  2A16               	incf	(??i2_abs+1)^0,f,c
 14187   003EC6  C015  F013         	movff	??i2_abs,?i2_abs
 14188   003ECA  C016  F014         	movff	??i2_abs+1,?i2_abs+1
 14189   003ECE  EF6D  F01F         	goto	i2l1498
 14190   003ED2                     i2l1495:
 14191   003ED2  C013  F013         	movff	i2abs@a,?i2_abs
 14192   003ED6  C014  F014         	movff	i2abs@a+1,?i2_abs+1
 14193   003EDA                     i2l1498:
 14194   003EDA  0012               	return		;funcret
 14195   003EDC                     __end_ofi2_abs:
 14196                           	callstack 0
 14197                           
 14198 ;; *************** function i2___aomod *****************
 14199 ;; Defined at:
 14200 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
 14201 ;; Parameters:    Size  Location     Type
 14202 ;;  dividend        8    0[COMRAM] long long 
 14203 ;;  divisor         8    8[COMRAM] long long 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  sign            1   17[COMRAM] unsigned char 
 14206 ;;  counter         1   16[COMRAM] unsigned char 
 14207 ;; Return value:  Size  Location     Type
 14208 ;;                  8    0[COMRAM] long long 
 14209 ;; Registers used:
 14210 ;;		wreg, status,2, status,0
 14211 ;; Tracked objects:
 14212 ;;		On entry : 0/0
 14213 ;;		On exit  : 0/0
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14216 ;;      Params:        16       0       0       0       0       0       0
 14217 ;;      Locals:         2       0       0       0       0       0       0
 14218 ;;      Temps:          0       0       0       0       0       0       0
 14219 ;;      Totals:        18       0       0       0       0       0       0
 14220 ;;Total ram usage:       18 bytes
 14221 ;; Hardware stack levels used: 1
 14222 ;; This function calls:
 14223 ;;		Nothing
 14224 ;; This function is called by:
 14225 ;;		i2_dtoa
 14226 ;; This function uses a non-reentrant model
 14227 ;;
 14228                           
 14229                           	psect	text68
 14230   002A0C                     __ptext68:
 14231                           	callstack 0
 14232   002A0C                     i2___aomod:
 14233                           	callstack 14
 14234   002A0C  0E00               	movlw	0
 14235   002A0E  6E12               	movwf	i2___aomod@sign^0,c
 14236   002A10  BE08               	btfsc	(i2___aomod@dividend+7)^0,7,c
 14237   002A12  EF0F  F015         	goto	i2u330_40
 14238   002A16  EF0D  F015         	goto	i2u330_41
 14239   002A1A                     i2u330_41:
 14240   002A1A  EF21  F015         	goto	i2l3978
 14241   002A1E                     i2u330_40:
 14242   002A1E  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 14243   002A20  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 14244   002A22  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 14245   002A24  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 14246   002A26  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 14247   002A28  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 14248   002A2A  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 14249   002A2C  6C01               	negf	i2___aomod@dividend^0,c
 14250   002A2E  0E00               	movlw	0
 14251   002A30  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 14252   002A32  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 14253   002A34  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 14254   002A36  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 14255   002A38  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 14256   002A3A  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 14257   002A3C  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 14258   002A3E  0E01               	movlw	1
 14259   002A40  6E12               	movwf	i2___aomod@sign^0,c
 14260   002A42                     i2l3978:
 14261   002A42  BE10               	btfsc	(i2___aomod@divisor+7)^0,7,c
 14262   002A44  EF28  F015         	goto	i2u331_40
 14263   002A48  EF26  F015         	goto	i2u331_41
 14264   002A4C                     i2u331_41:
 14265   002A4C  EF38  F015         	goto	i2l3982
 14266   002A50                     i2u331_40:
 14267   002A50  1E10               	comf	(i2___aomod@divisor+7)^0,f,c
 14268   002A52  1E0F               	comf	(i2___aomod@divisor+6)^0,f,c
 14269   002A54  1E0E               	comf	(i2___aomod@divisor+5)^0,f,c
 14270   002A56  1E0D               	comf	(i2___aomod@divisor+4)^0,f,c
 14271   002A58  1E0C               	comf	(i2___aomod@divisor+3)^0,f,c
 14272   002A5A  1E0B               	comf	(i2___aomod@divisor+2)^0,f,c
 14273   002A5C  1E0A               	comf	(i2___aomod@divisor+1)^0,f,c
 14274   002A5E  6C09               	negf	i2___aomod@divisor^0,c
 14275   002A60  0E00               	movlw	0
 14276   002A62  220A               	addwfc	(i2___aomod@divisor+1)^0,f,c
 14277   002A64  220B               	addwfc	(i2___aomod@divisor+2)^0,f,c
 14278   002A66  220C               	addwfc	(i2___aomod@divisor+3)^0,f,c
 14279   002A68  220D               	addwfc	(i2___aomod@divisor+4)^0,f,c
 14280   002A6A  220E               	addwfc	(i2___aomod@divisor+5)^0,f,c
 14281   002A6C  220F               	addwfc	(i2___aomod@divisor+6)^0,f,c
 14282   002A6E  2210               	addwfc	(i2___aomod@divisor+7)^0,f,c
 14283   002A70                     i2l3982:
 14284   002A70  5009               	movf	i2___aomod@divisor^0,w,c
 14285   002A72  100A               	iorwf	(i2___aomod@divisor+1)^0,w,c
 14286   002A74  100B               	iorwf	(i2___aomod@divisor+2)^0,w,c
 14287   002A76  100C               	iorwf	(i2___aomod@divisor+3)^0,w,c
 14288   002A78  100D               	iorwf	(i2___aomod@divisor+4)^0,w,c
 14289   002A7A  100E               	iorwf	(i2___aomod@divisor+5)^0,w,c
 14290   002A7C  100F               	iorwf	(i2___aomod@divisor+6)^0,w,c
 14291   002A7E  1010               	iorwf	(i2___aomod@divisor+7)^0,w,c
 14292   002A80  B4D8               	btfsc	status,2,c
 14293   002A82  EF45  F015         	goto	i2u332_41
 14294   002A86  EF47  F015         	goto	i2u332_40
 14295   002A8A                     i2u332_41:
 14296   002A8A  EF8F  F015         	goto	i2l3998
 14297   002A8E                     i2u332_40:
 14298   002A8E  0E01               	movlw	1
 14299   002A90  6E11               	movwf	i2___aomod@counter^0,c
 14300   002A92  EF55  F015         	goto	i2l3988
 14301   002A96                     i2l3986:
 14302   002A96  90D8               	bcf	status,0,c
 14303   002A98  3609               	rlcf	i2___aomod@divisor^0,f,c
 14304   002A9A  360A               	rlcf	(i2___aomod@divisor+1)^0,f,c
 14305   002A9C  360B               	rlcf	(i2___aomod@divisor+2)^0,f,c
 14306   002A9E  360C               	rlcf	(i2___aomod@divisor+3)^0,f,c
 14307   002AA0  360D               	rlcf	(i2___aomod@divisor+4)^0,f,c
 14308   002AA2  360E               	rlcf	(i2___aomod@divisor+5)^0,f,c
 14309   002AA4  360F               	rlcf	(i2___aomod@divisor+6)^0,f,c
 14310   002AA6  3610               	rlcf	(i2___aomod@divisor+7)^0,f,c
 14311   002AA8  2A11               	incf	i2___aomod@counter^0,f,c
 14312   002AAA                     i2l3988:
 14313   002AAA  AE10               	btfss	(i2___aomod@divisor+7)^0,7,c
 14314   002AAC  EF5A  F015         	goto	i2u333_41
 14315   002AB0  EF5C  F015         	goto	i2u333_40
 14316   002AB4                     i2u333_41:
 14317   002AB4  EF4B  F015         	goto	i2l3986
 14318   002AB8                     i2u333_40:
 14319   002AB8                     i2l3990:
 14320   002AB8  5009               	movf	i2___aomod@divisor^0,w,c
 14321   002ABA  5C01               	subwf	i2___aomod@dividend^0,w,c
 14322   002ABC  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 14323   002ABE  5802               	subwfb	(i2___aomod@dividend+1)^0,w,c
 14324   002AC0  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 14325   002AC2  5803               	subwfb	(i2___aomod@dividend+2)^0,w,c
 14326   002AC4  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 14327   002AC6  5804               	subwfb	(i2___aomod@dividend+3)^0,w,c
 14328   002AC8  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 14329   002ACA  5805               	subwfb	(i2___aomod@dividend+4)^0,w,c
 14330   002ACC  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 14331   002ACE  5806               	subwfb	(i2___aomod@dividend+5)^0,w,c
 14332   002AD0  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 14333   002AD2  5807               	subwfb	(i2___aomod@dividend+6)^0,w,c
 14334   002AD4  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 14335   002AD6  5808               	subwfb	(i2___aomod@dividend+7)^0,w,c
 14336   002AD8  A0D8               	btfss	status,0,c
 14337   002ADA  EF71  F015         	goto	i2u334_41
 14338   002ADE  EF73  F015         	goto	i2u334_40
 14339   002AE2                     i2u334_41:
 14340   002AE2  EF83  F015         	goto	i2l3994
 14341   002AE6                     i2u334_40:
 14342   002AE6  5009               	movf	i2___aomod@divisor^0,w,c
 14343   002AE8  5E01               	subwf	i2___aomod@dividend^0,f,c
 14344   002AEA  500A               	movf	(i2___aomod@divisor+1)^0,w,c
 14345   002AEC  5A02               	subwfb	(i2___aomod@dividend+1)^0,f,c
 14346   002AEE  500B               	movf	(i2___aomod@divisor+2)^0,w,c
 14347   002AF0  5A03               	subwfb	(i2___aomod@dividend+2)^0,f,c
 14348   002AF2  500C               	movf	(i2___aomod@divisor+3)^0,w,c
 14349   002AF4  5A04               	subwfb	(i2___aomod@dividend+3)^0,f,c
 14350   002AF6  500D               	movf	(i2___aomod@divisor+4)^0,w,c
 14351   002AF8  5A05               	subwfb	(i2___aomod@dividend+4)^0,f,c
 14352   002AFA  500E               	movf	(i2___aomod@divisor+5)^0,w,c
 14353   002AFC  5A06               	subwfb	(i2___aomod@dividend+5)^0,f,c
 14354   002AFE  500F               	movf	(i2___aomod@divisor+6)^0,w,c
 14355   002B00  5A07               	subwfb	(i2___aomod@dividend+6)^0,f,c
 14356   002B02  5010               	movf	(i2___aomod@divisor+7)^0,w,c
 14357   002B04  5A08               	subwfb	(i2___aomod@dividend+7)^0,f,c
 14358   002B06                     i2l3994:
 14359   002B06  90D8               	bcf	status,0,c
 14360   002B08  3210               	rrcf	(i2___aomod@divisor+7)^0,f,c
 14361   002B0A  320F               	rrcf	(i2___aomod@divisor+6)^0,f,c
 14362   002B0C  320E               	rrcf	(i2___aomod@divisor+5)^0,f,c
 14363   002B0E  320D               	rrcf	(i2___aomod@divisor+4)^0,f,c
 14364   002B10  320C               	rrcf	(i2___aomod@divisor+3)^0,f,c
 14365   002B12  320B               	rrcf	(i2___aomod@divisor+2)^0,f,c
 14366   002B14  320A               	rrcf	(i2___aomod@divisor+1)^0,f,c
 14367   002B16  3209               	rrcf	i2___aomod@divisor^0,f,c
 14368   002B18  2E11               	decfsz	i2___aomod@counter^0,f,c
 14369   002B1A  EF5C  F015         	goto	i2l3990
 14370   002B1E                     i2l3998:
 14371   002B1E  5012               	movf	i2___aomod@sign^0,w,c
 14372   002B20  B4D8               	btfsc	status,2,c
 14373   002B22  EF95  F015         	goto	i2u335_41
 14374   002B26  EF97  F015         	goto	i2u335_40
 14375   002B2A                     i2u335_41:
 14376   002B2A  EFA7  F015         	goto	i2l4002
 14377   002B2E                     i2u335_40:
 14378   002B2E  1E08               	comf	(i2___aomod@dividend+7)^0,f,c
 14379   002B30  1E07               	comf	(i2___aomod@dividend+6)^0,f,c
 14380   002B32  1E06               	comf	(i2___aomod@dividend+5)^0,f,c
 14381   002B34  1E05               	comf	(i2___aomod@dividend+4)^0,f,c
 14382   002B36  1E04               	comf	(i2___aomod@dividend+3)^0,f,c
 14383   002B38  1E03               	comf	(i2___aomod@dividend+2)^0,f,c
 14384   002B3A  1E02               	comf	(i2___aomod@dividend+1)^0,f,c
 14385   002B3C  6C01               	negf	i2___aomod@dividend^0,c
 14386   002B3E  0E00               	movlw	0
 14387   002B40  2202               	addwfc	(i2___aomod@dividend+1)^0,f,c
 14388   002B42  2203               	addwfc	(i2___aomod@dividend+2)^0,f,c
 14389   002B44  2204               	addwfc	(i2___aomod@dividend+3)^0,f,c
 14390   002B46  2205               	addwfc	(i2___aomod@dividend+4)^0,f,c
 14391   002B48  2206               	addwfc	(i2___aomod@dividend+5)^0,f,c
 14392   002B4A  2207               	addwfc	(i2___aomod@dividend+6)^0,f,c
 14393   002B4C  2208               	addwfc	(i2___aomod@dividend+7)^0,f,c
 14394   002B4E                     i2l4002:
 14395   002B4E  C001  F001         	movff	i2___aomod@dividend,?i2___aomod
 14396   002B52  C002  F002         	movff	i2___aomod@dividend+1,?i2___aomod+1
 14397   002B56  C003  F003         	movff	i2___aomod@dividend+2,?i2___aomod+2
 14398   002B5A  C004  F004         	movff	i2___aomod@dividend+3,?i2___aomod+3
 14399   002B5E  C005  F005         	movff	i2___aomod@dividend+4,?i2___aomod+4
 14400   002B62  C006  F006         	movff	i2___aomod@dividend+5,?i2___aomod+5
 14401   002B66  C007  F007         	movff	i2___aomod@dividend+6,?i2___aomod+6
 14402   002B6A  C008  F008         	movff	i2___aomod@dividend+7,?i2___aomod+7
 14403   002B6E  0012               	return		;funcret
 14404   002B70                     __end_ofi2___aomod:
 14405                           	callstack 0
 14406                           
 14407 ;; *************** function i2___aodiv *****************
 14408 ;; Defined at:
 14409 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
 14410 ;; Parameters:    Size  Location     Type
 14411 ;;  dividend        8    0[COMRAM] long long 
 14412 ;;  divisor         8    8[COMRAM] long long 
 14413 ;; Auto vars:     Size  Location     Type
 14414 ;;  quotient        8   18[COMRAM] long long 
 14415 ;;  sign            1   17[COMRAM] unsigned char 
 14416 ;;  counter         1   16[COMRAM] unsigned char 
 14417 ;; Return value:  Size  Location     Type
 14418 ;;                  8    0[COMRAM] long long 
 14419 ;; Registers used:
 14420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14421 ;; Tracked objects:
 14422 ;;		On entry : 0/0
 14423 ;;		On exit  : 0/0
 14424 ;;		Unchanged: 0/0
 14425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14426 ;;      Params:        16       0       0       0       0       0       0
 14427 ;;      Locals:        10       0       0       0       0       0       0
 14428 ;;      Temps:          0       0       0       0       0       0       0
 14429 ;;      Totals:        26       0       0       0       0       0       0
 14430 ;;Total ram usage:       26 bytes
 14431 ;; Hardware stack levels used: 1
 14432 ;; This function calls:
 14433 ;;		Nothing
 14434 ;; This function is called by:
 14435 ;;		i2_dtoa
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text69
 14440   0022A4                     __ptext69:
 14441                           	callstack 0
 14442   0022A4                     i2___aodiv:
 14443                           	callstack 14
 14444   0022A4  0E00               	movlw	0
 14445   0022A6  6E12               	movwf	i2___aodiv@sign^0,c
 14446   0022A8  BE10               	btfsc	(i2___aodiv@divisor+7)^0,7,c
 14447   0022AA  EF5B  F011         	goto	i2u323_40
 14448   0022AE  EF59  F011         	goto	i2u323_41
 14449   0022B2                     i2u323_41:
 14450   0022B2  EF6D  F011         	goto	i2l3934
 14451   0022B6                     i2u323_40:
 14452   0022B6  1E10               	comf	(i2___aodiv@divisor+7)^0,f,c
 14453   0022B8  1E0F               	comf	(i2___aodiv@divisor+6)^0,f,c
 14454   0022BA  1E0E               	comf	(i2___aodiv@divisor+5)^0,f,c
 14455   0022BC  1E0D               	comf	(i2___aodiv@divisor+4)^0,f,c
 14456   0022BE  1E0C               	comf	(i2___aodiv@divisor+3)^0,f,c
 14457   0022C0  1E0B               	comf	(i2___aodiv@divisor+2)^0,f,c
 14458   0022C2  1E0A               	comf	(i2___aodiv@divisor+1)^0,f,c
 14459   0022C4  6C09               	negf	i2___aodiv@divisor^0,c
 14460   0022C6  0E00               	movlw	0
 14461   0022C8  220A               	addwfc	(i2___aodiv@divisor+1)^0,f,c
 14462   0022CA  220B               	addwfc	(i2___aodiv@divisor+2)^0,f,c
 14463   0022CC  220C               	addwfc	(i2___aodiv@divisor+3)^0,f,c
 14464   0022CE  220D               	addwfc	(i2___aodiv@divisor+4)^0,f,c
 14465   0022D0  220E               	addwfc	(i2___aodiv@divisor+5)^0,f,c
 14466   0022D2  220F               	addwfc	(i2___aodiv@divisor+6)^0,f,c
 14467   0022D4  2210               	addwfc	(i2___aodiv@divisor+7)^0,f,c
 14468   0022D6  0E01               	movlw	1
 14469   0022D8  6E12               	movwf	i2___aodiv@sign^0,c
 14470   0022DA                     i2l3934:
 14471   0022DA  BE08               	btfsc	(i2___aodiv@dividend+7)^0,7,c
 14472   0022DC  EF74  F011         	goto	i2u324_40
 14473   0022E0  EF72  F011         	goto	i2u324_41
 14474   0022E4                     i2u324_41:
 14475   0022E4  EF86  F011         	goto	i2l3940
 14476   0022E8                     i2u324_40:
 14477   0022E8  1E08               	comf	(i2___aodiv@dividend+7)^0,f,c
 14478   0022EA  1E07               	comf	(i2___aodiv@dividend+6)^0,f,c
 14479   0022EC  1E06               	comf	(i2___aodiv@dividend+5)^0,f,c
 14480   0022EE  1E05               	comf	(i2___aodiv@dividend+4)^0,f,c
 14481   0022F0  1E04               	comf	(i2___aodiv@dividend+3)^0,f,c
 14482   0022F2  1E03               	comf	(i2___aodiv@dividend+2)^0,f,c
 14483   0022F4  1E02               	comf	(i2___aodiv@dividend+1)^0,f,c
 14484   0022F6  6C01               	negf	i2___aodiv@dividend^0,c
 14485   0022F8  0E00               	movlw	0
 14486   0022FA  2202               	addwfc	(i2___aodiv@dividend+1)^0,f,c
 14487   0022FC  2203               	addwfc	(i2___aodiv@dividend+2)^0,f,c
 14488   0022FE  2204               	addwfc	(i2___aodiv@dividend+3)^0,f,c
 14489   002300  2205               	addwfc	(i2___aodiv@dividend+4)^0,f,c
 14490   002302  2206               	addwfc	(i2___aodiv@dividend+5)^0,f,c
 14491   002304  2207               	addwfc	(i2___aodiv@dividend+6)^0,f,c
 14492   002306  2208               	addwfc	(i2___aodiv@dividend+7)^0,f,c
 14493   002308  0E01               	movlw	1
 14494   00230A  1A12               	xorwf	i2___aodiv@sign^0,f,c
 14495   00230C                     i2l3940:
 14496   00230C  EE20  F013         	lfsr	2,i2___aodiv@quotient
 14497   002310  0E07               	movlw	7
 14498   002312                     i2u325_41:
 14499   002312  6ADE               	clrf	postinc2,c
 14500   002314  06E8               	decf	wreg,f,c
 14501   002316  E2FD               	bc	i2u325_41
 14502   002318  5009               	movf	i2___aodiv@divisor^0,w,c
 14503   00231A  100A               	iorwf	(i2___aodiv@divisor+1)^0,w,c
 14504   00231C  100B               	iorwf	(i2___aodiv@divisor+2)^0,w,c
 14505   00231E  100C               	iorwf	(i2___aodiv@divisor+3)^0,w,c
 14506   002320  100D               	iorwf	(i2___aodiv@divisor+4)^0,w,c
 14507   002322  100E               	iorwf	(i2___aodiv@divisor+5)^0,w,c
 14508   002324  100F               	iorwf	(i2___aodiv@divisor+6)^0,w,c
 14509   002326  1010               	iorwf	(i2___aodiv@divisor+7)^0,w,c
 14510   002328  B4D8               	btfsc	status,2,c
 14511   00232A  EF99  F011         	goto	i2u326_41
 14512   00232E  EF9B  F011         	goto	i2u326_40
 14513   002332                     i2u326_41:
 14514   002332  EFED  F011         	goto	i2l3962
 14515   002336                     i2u326_40:
 14516   002336  0E01               	movlw	1
 14517   002338  6E11               	movwf	i2___aodiv@counter^0,c
 14518   00233A  EFA9  F011         	goto	i2l3948
 14519   00233E                     i2l3946:
 14520   00233E  90D8               	bcf	status,0,c
 14521   002340  3609               	rlcf	i2___aodiv@divisor^0,f,c
 14522   002342  360A               	rlcf	(i2___aodiv@divisor+1)^0,f,c
 14523   002344  360B               	rlcf	(i2___aodiv@divisor+2)^0,f,c
 14524   002346  360C               	rlcf	(i2___aodiv@divisor+3)^0,f,c
 14525   002348  360D               	rlcf	(i2___aodiv@divisor+4)^0,f,c
 14526   00234A  360E               	rlcf	(i2___aodiv@divisor+5)^0,f,c
 14527   00234C  360F               	rlcf	(i2___aodiv@divisor+6)^0,f,c
 14528   00234E  3610               	rlcf	(i2___aodiv@divisor+7)^0,f,c
 14529   002350  2A11               	incf	i2___aodiv@counter^0,f,c
 14530   002352                     i2l3948:
 14531   002352  AE10               	btfss	(i2___aodiv@divisor+7)^0,7,c
 14532   002354  EFAE  F011         	goto	i2u327_41
 14533   002358  EFB0  F011         	goto	i2u327_40
 14534   00235C                     i2u327_41:
 14535   00235C  EF9F  F011         	goto	i2l3946
 14536   002360                     i2u327_40:
 14537   002360                     i2l3950:
 14538   002360  90D8               	bcf	status,0,c
 14539   002362  3613               	rlcf	i2___aodiv@quotient^0,f,c
 14540   002364  3614               	rlcf	(i2___aodiv@quotient+1)^0,f,c
 14541   002366  3615               	rlcf	(i2___aodiv@quotient+2)^0,f,c
 14542   002368  3616               	rlcf	(i2___aodiv@quotient+3)^0,f,c
 14543   00236A  3617               	rlcf	(i2___aodiv@quotient+4)^0,f,c
 14544   00236C  3618               	rlcf	(i2___aodiv@quotient+5)^0,f,c
 14545   00236E  3619               	rlcf	(i2___aodiv@quotient+6)^0,f,c
 14546   002370  361A               	rlcf	(i2___aodiv@quotient+7)^0,f,c
 14547   002372  5009               	movf	i2___aodiv@divisor^0,w,c
 14548   002374  5C01               	subwf	i2___aodiv@dividend^0,w,c
 14549   002376  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 14550   002378  5802               	subwfb	(i2___aodiv@dividend+1)^0,w,c
 14551   00237A  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 14552   00237C  5803               	subwfb	(i2___aodiv@dividend+2)^0,w,c
 14553   00237E  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 14554   002380  5804               	subwfb	(i2___aodiv@dividend+3)^0,w,c
 14555   002382  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 14556   002384  5805               	subwfb	(i2___aodiv@dividend+4)^0,w,c
 14557   002386  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 14558   002388  5806               	subwfb	(i2___aodiv@dividend+5)^0,w,c
 14559   00238A  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 14560   00238C  5807               	subwfb	(i2___aodiv@dividend+6)^0,w,c
 14561   00238E  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 14562   002390  5808               	subwfb	(i2___aodiv@dividend+7)^0,w,c
 14563   002392  A0D8               	btfss	status,0,c
 14564   002394  EFCE  F011         	goto	i2u328_41
 14565   002398  EFD0  F011         	goto	i2u328_40
 14566   00239C                     i2u328_41:
 14567   00239C  EFE1  F011         	goto	i2l3958
 14568   0023A0                     i2u328_40:
 14569   0023A0  5009               	movf	i2___aodiv@divisor^0,w,c
 14570   0023A2  5E01               	subwf	i2___aodiv@dividend^0,f,c
 14571   0023A4  500A               	movf	(i2___aodiv@divisor+1)^0,w,c
 14572   0023A6  5A02               	subwfb	(i2___aodiv@dividend+1)^0,f,c
 14573   0023A8  500B               	movf	(i2___aodiv@divisor+2)^0,w,c
 14574   0023AA  5A03               	subwfb	(i2___aodiv@dividend+2)^0,f,c
 14575   0023AC  500C               	movf	(i2___aodiv@divisor+3)^0,w,c
 14576   0023AE  5A04               	subwfb	(i2___aodiv@dividend+3)^0,f,c
 14577   0023B0  500D               	movf	(i2___aodiv@divisor+4)^0,w,c
 14578   0023B2  5A05               	subwfb	(i2___aodiv@dividend+4)^0,f,c
 14579   0023B4  500E               	movf	(i2___aodiv@divisor+5)^0,w,c
 14580   0023B6  5A06               	subwfb	(i2___aodiv@dividend+5)^0,f,c
 14581   0023B8  500F               	movf	(i2___aodiv@divisor+6)^0,w,c
 14582   0023BA  5A07               	subwfb	(i2___aodiv@dividend+6)^0,f,c
 14583   0023BC  5010               	movf	(i2___aodiv@divisor+7)^0,w,c
 14584   0023BE  5A08               	subwfb	(i2___aodiv@dividend+7)^0,f,c
 14585   0023C0  8013               	bsf	i2___aodiv@quotient^0,0,c
 14586   0023C2                     i2l3958:
 14587   0023C2  90D8               	bcf	status,0,c
 14588   0023C4  3210               	rrcf	(i2___aodiv@divisor+7)^0,f,c
 14589   0023C6  320F               	rrcf	(i2___aodiv@divisor+6)^0,f,c
 14590   0023C8  320E               	rrcf	(i2___aodiv@divisor+5)^0,f,c
 14591   0023CA  320D               	rrcf	(i2___aodiv@divisor+4)^0,f,c
 14592   0023CC  320C               	rrcf	(i2___aodiv@divisor+3)^0,f,c
 14593   0023CE  320B               	rrcf	(i2___aodiv@divisor+2)^0,f,c
 14594   0023D0  320A               	rrcf	(i2___aodiv@divisor+1)^0,f,c
 14595   0023D2  3209               	rrcf	i2___aodiv@divisor^0,f,c
 14596   0023D4  2E11               	decfsz	i2___aodiv@counter^0,f,c
 14597   0023D6  EFB0  F011         	goto	i2l3950
 14598   0023DA                     i2l3962:
 14599   0023DA  5012               	movf	i2___aodiv@sign^0,w,c
 14600   0023DC  B4D8               	btfsc	status,2,c
 14601   0023DE  EFF3  F011         	goto	i2u329_41
 14602   0023E2  EFF5  F011         	goto	i2u329_40
 14603   0023E6                     i2u329_41:
 14604   0023E6  EF05  F012         	goto	i2l3966
 14605   0023EA                     i2u329_40:
 14606   0023EA  1E1A               	comf	(i2___aodiv@quotient+7)^0,f,c
 14607   0023EC  1E19               	comf	(i2___aodiv@quotient+6)^0,f,c
 14608   0023EE  1E18               	comf	(i2___aodiv@quotient+5)^0,f,c
 14609   0023F0  1E17               	comf	(i2___aodiv@quotient+4)^0,f,c
 14610   0023F2  1E16               	comf	(i2___aodiv@quotient+3)^0,f,c
 14611   0023F4  1E15               	comf	(i2___aodiv@quotient+2)^0,f,c
 14612   0023F6  1E14               	comf	(i2___aodiv@quotient+1)^0,f,c
 14613   0023F8  6C13               	negf	i2___aodiv@quotient^0,c
 14614   0023FA  0E00               	movlw	0
 14615   0023FC  2214               	addwfc	(i2___aodiv@quotient+1)^0,f,c
 14616   0023FE  2215               	addwfc	(i2___aodiv@quotient+2)^0,f,c
 14617   002400  2216               	addwfc	(i2___aodiv@quotient+3)^0,f,c
 14618   002402  2217               	addwfc	(i2___aodiv@quotient+4)^0,f,c
 14619   002404  2218               	addwfc	(i2___aodiv@quotient+5)^0,f,c
 14620   002406  2219               	addwfc	(i2___aodiv@quotient+6)^0,f,c
 14621   002408  221A               	addwfc	(i2___aodiv@quotient+7)^0,f,c
 14622   00240A                     i2l3966:
 14623   00240A  C013  F001         	movff	i2___aodiv@quotient,?i2___aodiv
 14624   00240E  C014  F002         	movff	i2___aodiv@quotient+1,?i2___aodiv+1
 14625   002412  C015  F003         	movff	i2___aodiv@quotient+2,?i2___aodiv+2
 14626   002416  C016  F004         	movff	i2___aodiv@quotient+3,?i2___aodiv+3
 14627   00241A  C017  F005         	movff	i2___aodiv@quotient+4,?i2___aodiv+4
 14628   00241E  C018  F006         	movff	i2___aodiv@quotient+5,?i2___aodiv+5
 14629   002422  C019  F007         	movff	i2___aodiv@quotient+6,?i2___aodiv+6
 14630   002426  C01A  F008         	movff	i2___aodiv@quotient+7,?i2___aodiv+7
 14631   00242A  0012               	return		;funcret
 14632   00242C                     __end_ofi2___aodiv:
 14633                           	callstack 0
 14634                           
 14635 ;; *************** function i2_ctoa *****************
 14636 ;; Defined at:
 14637 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 14638 ;; Parameters:    Size  Location     Type
 14639 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 14640 ;;		 -> NULL(0), 
 14641 ;;  c               1   13[COMRAM] unsigned char 
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;  w               2   17[COMRAM] int 
 14644 ;;  l               2   15[COMRAM] int 
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14654 ;;      Params:         3       0       0       0       0       0       0
 14655 ;;      Locals:         4       0       0       0       0       0       0
 14656 ;;      Temps:          1       0       0       0       0       0       0
 14657 ;;      Totals:         8       0       0       0       0       0       0
 14658 ;;Total ram usage:        8 bytes
 14659 ;; Hardware stack levels used: 1
 14660 ;; Hardware stack levels required when called: 3
 14661 ;; This function calls:
 14662 ;;		i2_fputc
 14663 ;; This function is called by:
 14664 ;;		i2_vfpfcnvrt
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           	psect	text70
 14669   003652                     __ptext70:
 14670                           	callstack 0
 14671   003652                     i2_ctoa:
 14672                           	callstack 12
 14673   003652                     
 14674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
 14675   003652  0100               	movlb	0	; () banked
 14676   003654  51CE               	movf	_width& (0+255),w,b
 14677   003656  11CF               	iorwf	(_width+1)& (0+255),w,b
 14678   003658  A4D8               	btfss	status,2,c
 14679   00365A  EF31  F01B         	goto	i2u403_41
 14680   00365E  EF33  F01B         	goto	i2u403_40
 14681   003662                     i2u403_41:
 14682   003662  EF39  F01B         	goto	i2l4352
 14683   003666                     i2u403_40:
 14684   003666                     
 14685                           ; BSR set to: 0
 14686   003666  C0CE  F012         	movff	_width,i2ctoa@w
 14687   00366A  C0CF  F013         	movff	_width+1,i2ctoa@w+1
 14688   00366E  EF3F  F01B         	goto	i2l4354
 14689   003672                     i2l4352:
 14690                           
 14691                           ; BSR set to: 0
 14692   003672  0EFF               	movlw	255
 14693   003674  25CE               	addwf	_width& (0+255),w,b
 14694   003676  6E12               	movwf	i2ctoa@w^0,c
 14695   003678  0EFF               	movlw	255
 14696   00367A  21CF               	addwfc	(_width+1)& (0+255),w,b
 14697   00367C  6E13               	movwf	(i2ctoa@w+1)^0,c
 14698   00367E                     i2l4354:
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
 14702   00367E  A1D4               	btfss	_flags& (0+255),0,b
 14703   003680  EF44  F01B         	goto	i2u404_41
 14704   003684  EF46  F01B         	goto	i2u404_40
 14705   003688                     i2u404_41:
 14706   003688  EF4F  F01B         	goto	i2l4358
 14707   00368C                     i2u404_40:
 14708   00368C                     
 14709                           ; BSR set to: 0
 14710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
 14711   00368C  C00E  F003         	movff	i2ctoa@c,i2fputc@c
 14712   003690  6A04               	clrf	(i2fputc@c+1)^0,c
 14713   003692  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
 14714   003696  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
 14715   00369A  EC51  F01D         	call	i2_fputc	;wreg free
 14716   00369E                     i2l4358:
 14717                           
 14718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
 14719   00369E  BE13               	btfsc	(i2ctoa@w+1)^0,7,c
 14720   0036A0  EF54  F01B         	goto	i2u405_41
 14721   0036A4  EF56  F01B         	goto	i2u405_40
 14722   0036A8                     i2u405_41:
 14723   0036A8  EF58  F01B         	goto	i2l4362
 14724   0036AC                     i2u405_40:
 14725   0036AC  EF5C  F01B         	goto	i2l1364
 14726   0036B0                     i2l4362:
 14727   0036B0  0E00               	movlw	0
 14728   0036B2  6E13               	movwf	(i2ctoa@w+1)^0,c
 14729   0036B4  0E00               	movlw	0
 14730   0036B6  6E12               	movwf	i2ctoa@w^0,c
 14731   0036B8                     i2l1364:
 14732                           
 14733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
 14734   0036B8  0E00               	movlw	0
 14735   0036BA  6E11               	movwf	(i2ctoa@l+1)^0,c
 14736   0036BC  0E00               	movlw	0
 14737   0036BE  6E10               	movwf	i2ctoa@l^0,c
 14738                           
 14739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
 14740   0036C0  EF6E  F01B         	goto	i2l4368
 14741   0036C4                     i2l4364:
 14742                           
 14743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
 14744   0036C4  0E00               	movlw	0
 14745   0036C6  6E04               	movwf	(i2fputc@c+1)^0,c
 14746   0036C8  0E20               	movlw	32
 14747   0036CA  6E03               	movwf	i2fputc@c^0,c
 14748   0036CC  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
 14749   0036D0  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
 14750   0036D4  EC51  F01D         	call	i2_fputc	;wreg free
 14751   0036D8                     
 14752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
 14753   0036D8  4A10               	infsnz	i2ctoa@l^0,f,c
 14754   0036DA  2A11               	incf	(i2ctoa@l+1)^0,f,c
 14755   0036DC                     i2l4368:
 14756                           
 14757                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
 14758   0036DC  5012               	movf	i2ctoa@w^0,w,c
 14759   0036DE  5C10               	subwf	i2ctoa@l^0,w,c
 14760   0036E0  5011               	movf	(i2ctoa@l+1)^0,w,c
 14761   0036E2  0A80               	xorlw	128
 14762   0036E4  6E0F               	movwf	??i2_ctoa^0,c
 14763   0036E6  5013               	movf	(i2ctoa@w+1)^0,w,c
 14764   0036E8  0A80               	xorlw	128
 14765   0036EA  580F               	subwfb	??i2_ctoa^0,w,c
 14766   0036EC  A0D8               	btfss	status,0,c
 14767   0036EE  EF7B  F01B         	goto	i2u406_41
 14768   0036F2  EF7D  F01B         	goto	i2u406_40
 14769   0036F6                     i2u406_41:
 14770   0036F6  EF62  F01B         	goto	i2l4364
 14771   0036FA                     i2u406_40:
 14772   0036FA                     
 14773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
 14774   0036FA  0100               	movlb	0	; () banked
 14775   0036FC  B1D4               	btfsc	_flags& (0+255),0,b
 14776   0036FE  EF83  F01B         	goto	i2u407_41
 14777   003702  EF85  F01B         	goto	i2u407_40
 14778   003706                     i2u407_41:
 14779   003706  EF8E  F01B         	goto	i2l1369
 14780   00370A                     i2u407_40:
 14781   00370A                     
 14782                           ; BSR set to: 0
 14783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
 14784   00370A  C00E  F003         	movff	i2ctoa@c,i2fputc@c
 14785   00370E  6A04               	clrf	(i2fputc@c+1)^0,c
 14786   003710  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
 14787   003714  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
 14788   003718  EC51  F01D         	call	i2_fputc	;wreg free
 14789   00371C                     i2l1369:
 14790   00371C  0012               	return		;funcret
 14791   00371E                     __end_ofi2_ctoa:
 14792                           	callstack 0
 14793                           
 14794 ;; *************** function i2_fputc *****************
 14795 ;; Defined at:
 14796 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 14797 ;; Parameters:    Size  Location     Type
 14798 ;;  c               2    2[COMRAM] int 
 14799 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 14800 ;;		 -> NULL(0), 
 14801 ;; Auto vars:     Size  Location     Type
 14802 ;;		None
 14803 ;; Return value:  Size  Location     Type
 14804 ;;                  2    2[COMRAM] int 
 14805 ;; Registers used:
 14806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14807 ;; Tracked objects:
 14808 ;;		On entry : 0/0
 14809 ;;		On exit  : 0/0
 14810 ;;		Unchanged: 0/0
 14811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14812 ;;      Params:         4       0       0       0       0       0       0
 14813 ;;      Locals:         0       0       0       0       0       0       0
 14814 ;;      Temps:          5       0       0       0       0       0       0
 14815 ;;      Totals:         9       0       0       0       0       0       0
 14816 ;;Total ram usage:        9 bytes
 14817 ;; Hardware stack levels used: 1
 14818 ;; Hardware stack levels required when called: 2
 14819 ;; This function calls:
 14820 ;;		i2_putch
 14821 ;; This function is called by:
 14822 ;;		i2_pad
 14823 ;;		i2_ctoa
 14824 ;;		i2_stoa
 14825 ;;		i2_vfpfcnvrt
 14826 ;;		i2_fputs
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           	psect	text71
 14831   003AA2                     __ptext71:
 14832                           	callstack 0
 14833   003AA2                     i2_fputc:
 14834                           	callstack 10
 14835   003AA2  5005               	movf	i2fputc@fp^0,w,c
 14836   003AA4  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 14837   003AA6  B4D8               	btfsc	status,2,c
 14838   003AA8  EF58  F01D         	goto	i2u287_41
 14839   003AAC  EF5A  F01D         	goto	i2u287_40
 14840   003AB0                     i2u287_41:
 14841   003AB0  EF63  F01D         	goto	i2l3722
 14842   003AB4                     i2u287_40:
 14843   003AB4  5005               	movf	i2fputc@fp^0,w,c
 14844   003AB6  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 14845   003AB8  A4D8               	btfss	status,2,c
 14846   003ABA  EF61  F01D         	goto	i2u288_41
 14847   003ABE  EF63  F01D         	goto	i2u288_40
 14848   003AC2                     i2u288_41:
 14849   003AC2  EF68  F01D         	goto	i2l3724
 14850   003AC6                     i2u288_40:
 14851   003AC6                     i2l3722:
 14852   003AC6  5003               	movf	i2fputc@c^0,w,c
 14853   003AC8  EC9B  F021         	call	i2_putch
 14854   003ACC  EF9B  F01D         	goto	i2l1549
 14855   003AD0                     i2l3724:
 14856   003AD0  EE20 F009          	lfsr	2,9
 14857   003AD4  5005               	movf	i2fputc@fp^0,w,c
 14858   003AD6  26D9               	addwf	fsr2l,f,c
 14859   003AD8  5006               	movf	(i2fputc@fp+1)^0,w,c
 14860   003ADA  22DA               	addwfc	fsr2h,f,c
 14861   003ADC  50DE               	movf	postinc2,w,c
 14862   003ADE  10DE               	iorwf	postinc2,w,c
 14863   003AE0  B4D8               	btfsc	status,2,c
 14864   003AE2  EF75  F01D         	goto	i2u289_41
 14865   003AE6  EF77  F01D         	goto	i2u289_40
 14866   003AEA                     i2u289_41:
 14867   003AEA  EF92  F01D         	goto	i2l3728
 14868   003AEE                     i2u289_40:
 14869   003AEE  EE20 F009          	lfsr	2,9
 14870   003AF2  5005               	movf	i2fputc@fp^0,w,c
 14871   003AF4  26D9               	addwf	fsr2l,f,c
 14872   003AF6  5006               	movf	(i2fputc@fp+1)^0,w,c
 14873   003AF8  22DA               	addwfc	fsr2h,f,c
 14874   003AFA  EE10 F003          	lfsr	1,3
 14875   003AFE  5005               	movf	i2fputc@fp^0,w,c
 14876   003B00  26E1               	addwf	fsr1l,f,c
 14877   003B02  5006               	movf	(i2fputc@fp+1)^0,w,c
 14878   003B04  22E2               	addwfc	fsr1h,f,c
 14879   003B06  50DE               	movf	postinc2,w,c
 14880   003B08  5CE6               	subwf	postinc1,w,c
 14881   003B0A  50E6               	movf	postinc1,w,c
 14882   003B0C  0A80               	xorlw	128
 14883   003B0E  6E0B               	movwf	(??i2_fputc+4)^0,c
 14884   003B10  50DE               	movf	postinc2,w,c
 14885   003B12  0A80               	xorlw	128
 14886   003B14  580B               	subwfb	(??i2_fputc+4)^0,w,c
 14887   003B16  B0D8               	btfsc	status,0,c
 14888   003B18  EF90  F01D         	goto	i2u290_41
 14889   003B1C  EF92  F01D         	goto	i2u290_40
 14890   003B20                     i2u290_41:
 14891   003B20  EF9B  F01D         	goto	i2l1549
 14892   003B24                     i2u290_40:
 14893   003B24                     i2l3728:
 14894   003B24  EE20 F003          	lfsr	2,3
 14895   003B28  5005               	movf	i2fputc@fp^0,w,c
 14896   003B2A  26D9               	addwf	fsr2l,f,c
 14897   003B2C  5006               	movf	(i2fputc@fp+1)^0,w,c
 14898   003B2E  22DA               	addwfc	fsr2h,f,c
 14899   003B30  2ADE               	incf	postinc2,f,c
 14900   003B32  0E00               	movlw	0
 14901   003B34  22DD               	addwfc	postdec2,f,c
 14902   003B36                     i2l1549:
 14903   003B36  0012               	return		;funcret
 14904   003B38                     __end_ofi2_fputc:
 14905                           	callstack 0
 14906                           
 14907 ;; *************** function i2_putch *****************
 14908 ;; Defined at:
 14909 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;  txData          1    wreg     unsigned char 
 14912 ;; Auto vars:     Size  Location     Type
 14913 ;;  txData          1    1[COMRAM] unsigned char 
 14914 ;; Return value:  Size  Location     Type
 14915 ;;                  1    wreg      void 
 14916 ;; Registers used:
 14917 ;;		wreg, status,2, cstack
 14918 ;; Tracked objects:
 14919 ;;		On entry : 0/0
 14920 ;;		On exit  : 0/0
 14921 ;;		Unchanged: 0/0
 14922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14923 ;;      Params:         0       0       0       0       0       0       0
 14924 ;;      Locals:         1       0       0       0       0       0       0
 14925 ;;      Temps:          0       0       0       0       0       0       0
 14926 ;;      Totals:         1       0       0       0       0       0       0
 14927 ;;Total ram usage:        1 bytes
 14928 ;; Hardware stack levels used: 1
 14929 ;; Hardware stack levels required when called: 1
 14930 ;; This function calls:
 14931 ;;		i2_EUSART1_Write
 14932 ;; This function is called by:
 14933 ;;		i2_fputc
 14934 ;; This function uses a non-reentrant model
 14935 ;;
 14936                           
 14937                           	psect	text72
 14938   004336                     __ptext72:
 14939                           	callstack 0
 14940   004336                     i2_putch:
 14941                           	callstack 10
 14942                           
 14943                           ;incstack = 0
 14944                           ;i2putch@txData stored from wreg
 14945   004336  6E02               	movwf	i2putch@txData^0,c
 14946   004338                     
 14947                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 14948   004338  5002               	movf	i2putch@txData^0,w,c
 14949   00433A  EC40  F021         	call	i2_EUSART1_Write
 14950   00433E  0012               	return		;funcret
 14951   004340                     __end_ofi2_putch:
 14952                           	callstack 0
 14953                           
 14954 ;; *************** function i2_EUSART1_Write *****************
 14955 ;; Defined at:
 14956 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  txData          1    wreg     unsigned char 
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;  txData          1    0[COMRAM] unsigned char 
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		wreg
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14970 ;;      Params:         0       0       0       0       0       0       0
 14971 ;;      Locals:         1       0       0       0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0
 14973 ;;      Totals:         1       0       0       0       0       0       0
 14974 ;;Total ram usage:        1 bytes
 14975 ;; Hardware stack levels used: 1
 14976 ;; This function calls:
 14977 ;;		Nothing
 14978 ;; This function is called by:
 14979 ;;		i2_putch
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           	psect	text73
 14984   004280                     __ptext73:
 14985                           	callstack 0
 14986   004280                     i2_EUSART1_Write:
 14987                           	callstack 10
 14988                           
 14989                           ;incstack = 0
 14990                           ;i2EUSART1_Write@txData stored from wreg
 14991   004280  6E01               	movwf	i2EUSART1_Write@txData^0,c
 14992   004282                     i2l245:
 14993                           
 14994                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 14995   004282  A89E               	btfss	158,4,c	;volatile
 14996   004284  EF46  F021         	goto	i2u282_41
 14997   004288  EF48  F021         	goto	i2u282_40
 14998   00428C                     i2u282_41:
 14999   00428C  EF41  F021         	goto	i2l245
 15000   004290                     i2u282_40:
 15001   004290                     
 15002                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 15003   004290  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 15004   004294  0012               	return		;funcret
 15005   004296                     __end_ofi2_EUSART1_Write:
 15006                           	callstack 0
 15007                           
 15008 ;; *************** function i2_atoi *****************
 15009 ;; Defined at:
 15010 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;  s               2    6[COMRAM] PTR const unsigned char 
 15013 ;;		 -> STR_59(3), STR_58(3), STR_57(3), STR_56(16), 
 15014 ;;		 -> STR_55(16), STR_54(5), STR_53(17), STR_52(21), 
 15015 ;;		 -> STR_51(12), STR_50(12), STR_49(12), STR_48(12), 
 15016 ;;		 -> STR_47(12), STR_46(12), STR_45(22), STR_44(28), 
 15017 ;;		 -> STR_43(22), STR_42(114), STR_41(96), STR_40(35), 
 15018 ;;		 -> STR_39(51), STR_38(30), STR_37(46), STR_36(93), 
 15019 ;;		 -> STR_35(3), STR_34(39), STR_33(31), STR_32(16), 
 15020 ;;		 -> STR_31(15), STR_30(15), STR_29(15), STR_28(14), 
 15021 ;;		 -> STR_27(43), STR_26(2), STR_25(2), STR_24(8), 
 15022 ;;		 -> STR_23(52), STR_22(28), STR_21(29), STR_20(50), 
 15023 ;;		 -> STR_19(33), STR_18(37), STR_17(34), STR_16(63), 
 15024 ;;		 -> STR_15(19), STR_14(24), STR_13(21), STR_12(7), 
 15025 ;;		 -> STR_11(15), STR_10(52), STR_9(10), STR_8(12), 
 15026 ;;		 -> STR_7(52), STR_6(5), STR_5(5), STR_4(70), 
 15027 ;;		 -> STR_3(22), STR_2(37), STR_1(8), 
 15028 ;; Auto vars:     Size  Location     Type
 15029 ;;  n               2   13[COMRAM] int 
 15030 ;;  neg             2   11[COMRAM] int 
 15031 ;; Return value:  Size  Location     Type
 15032 ;;                  2    6[COMRAM] int 
 15033 ;; Registers used:
 15034 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15035 ;; Tracked objects:
 15036 ;;		On entry : 0/0
 15037 ;;		On exit  : 0/0
 15038 ;;		Unchanged: 0/0
 15039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15040 ;;      Params:         2       0       0       0       0       0       0
 15041 ;;      Locals:         4       0       0       0       0       0       0
 15042 ;;      Temps:          3       0       0       0       0       0       0
 15043 ;;      Totals:         9       0       0       0       0       0       0
 15044 ;;Total ram usage:        9 bytes
 15045 ;; Hardware stack levels used: 1
 15046 ;; Hardware stack levels required when called: 1
 15047 ;; This function calls:
 15048 ;;		i2___wmul
 15049 ;;		i2_isdigit
 15050 ;;		i2_isspace
 15051 ;; This function is called by:
 15052 ;;		i2_vfpfcnvrt
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           	psect	text74
 15057   002CBE                     __ptext74:
 15058                           	callstack 0
 15059   002CBE                     i2_atoi:
 15060                           	callstack 14
 15061   002CBE  0E00               	movlw	0
 15062   002CC0  6E0F               	movwf	(i2atoi@n+1)^0,c
 15063   002CC2  0E00               	movlw	0
 15064   002CC4  6E0E               	movwf	i2atoi@n^0,c
 15065   002CC6  0E00               	movlw	0
 15066   002CC8  6E0D               	movwf	(i2atoi@neg+1)^0,c
 15067   002CCA  0E00               	movlw	0
 15068   002CCC  6E0C               	movwf	i2atoi@neg^0,c
 15069   002CCE  EF6B  F016         	goto	i2l4562
 15070   002CD2                     i2l4558:
 15071   002CD2  4A07               	infsnz	i2atoi@s^0,f,c
 15072   002CD4  2A08               	incf	(i2atoi@s+1)^0,f,c
 15073   002CD6                     i2l4562:
 15074   002CD6  C007  FFF6         	movff	i2atoi@s,tblptrl
 15075   002CDA  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 15076   002CDE                     	if	0	;tblptru may be non-zero
 15077   002CDE                     	endif
 15078   002CDE                     	if	0	;tblptru may be non-zero
 15079   002CDE                     	endif
 15080   002CDE  0008               	tblrd		*
 15081   002CE0  50F5               	movf	tablat,w,c
 15082   002CE2  0A20               	xorlw	32
 15083   002CE4  B4D8               	btfsc	status,2,c
 15084   002CE6  EF77  F016         	goto	i2u446_41
 15085   002CEA  EF79  F016         	goto	i2u446_40
 15086   002CEE                     i2u446_41:
 15087   002CEE  EF69  F016         	goto	i2l4558
 15088   002CF2                     i2u446_40:
 15089   002CF2  C007  FFF6         	movff	i2atoi@s,tblptrl
 15090   002CF6  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 15091   002CFA                     	if	0	;tblptru may be non-zero
 15092   002CFA                     	endif
 15093   002CFA                     	if	0	;tblptru may be non-zero
 15094   002CFA                     	endif
 15095   002CFA  0008               	tblrd		*
 15096   002CFC  CFF5 F009          	movff	tablat,??i2_atoi
 15097   002D00  0EF7               	movlw	247
 15098   002D02  2409               	addwf	??i2_atoi^0,w,c
 15099   002D04  6E0A               	movwf	(??i2_atoi+1)^0,c
 15100   002D06  6A0B               	clrf	(??i2_atoi+2)^0,c
 15101   002D08  0EFF               	movlw	255
 15102   002D0A  220B               	addwfc	(??i2_atoi+2)^0,f,c
 15103   002D0C  500B               	movf	(??i2_atoi+2)^0,w,c
 15104   002D0E  E109               	bnz	i2u447_40
 15105   002D10  0E05               	movlw	5
 15106   002D12  5C0A               	subwf	(??i2_atoi+1)^0,w,c
 15107   002D14  A0D8               	btfss	status,0,c
 15108   002D16  EF8F  F016         	goto	i2u447_41
 15109   002D1A  EF91  F016         	goto	i2u447_40
 15110   002D1E                     i2u447_41:
 15111   002D1E  EF69  F016         	goto	i2l4558
 15112   002D22                     i2u447_40:
 15113   002D22  EF9B  F016         	goto	i2l4570
 15114   002D26                     i2l4566:
 15115   002D26  0E00               	movlw	0
 15116   002D28  6E0D               	movwf	(i2atoi@neg+1)^0,c
 15117   002D2A  0E01               	movlw	1
 15118   002D2C  6E0C               	movwf	i2atoi@neg^0,c
 15119   002D2E                     i2l4568:
 15120   002D2E  4A07               	infsnz	i2atoi@s^0,f,c
 15121   002D30  2A08               	incf	(i2atoi@s+1)^0,f,c
 15122   002D32  EFD0  F016         	goto	i2l4578
 15123   002D36                     i2l4570:
 15124   002D36  C007  FFF6         	movff	i2atoi@s,tblptrl
 15125   002D3A  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 15126   002D3E                     	if	0	;tblptru may be non-zero
 15127   002D3E                     	endif
 15128   002D3E                     	if	0	;tblptru may be non-zero
 15129   002D3E                     	endif
 15130   002D3E  0008               	tblrd		*
 15131   002D40  50F5               	movf	tablat,w,c
 15132   002D42  6E09               	movwf	??i2_atoi^0,c
 15133   002D44  6A0A               	clrf	(??i2_atoi+1)^0,c
 15134                           
 15135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15136                           ; Switch size 1, requested type "simple"
 15137                           ; Number of cases is 1, Range of values is 0 to 0
 15138                           ; switch strategies available:
 15139                           ; Name         Instructions Cycles
 15140                           ; simple_byte            4     3 (average)
 15141                           ;	Chosen strategy is simple_byte
 15142   002D46  500A               	movf	(??i2_atoi+1)^0,w,c
 15143   002D48  0A00               	xorlw	0	; case 0
 15144   002D4A  B4D8               	btfsc	status,2,c
 15145   002D4C  EFAA  F016         	goto	i2l6858
 15146   002D50  EFD0  F016         	goto	i2l4578
 15147   002D54                     i2l6858:
 15148                           
 15149                           ; Switch size 1, requested type "simple"
 15150                           ; Number of cases is 2, Range of values is 43 to 45
 15151                           ; switch strategies available:
 15152                           ; Name         Instructions Cycles
 15153                           ; simple_byte            7     4 (average)
 15154                           ;	Chosen strategy is simple_byte
 15155   002D54  5009               	movf	??i2_atoi^0,w,c
 15156   002D56  0A2B               	xorlw	43	; case 43
 15157   002D58  B4D8               	btfsc	status,2,c
 15158   002D5A  EF97  F016         	goto	i2l4568
 15159   002D5E  0A06               	xorlw	6	; case 45
 15160   002D60  B4D8               	btfsc	status,2,c
 15161   002D62  EF93  F016         	goto	i2l4566
 15162   002D66  EFD0  F016         	goto	i2l4578
 15163   002D6A                     i2l4572:
 15164   002D6A  C00E  F001         	movff	i2atoi@n,i2___wmul@multiplier
 15165   002D6E  C00F  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 15166   002D72  0E00               	movlw	0
 15167   002D74  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 15168   002D76  0E0A               	movlw	10
 15169   002D78  6E03               	movwf	i2___wmul@multiplicand^0,c
 15170   002D7A  ECE6  F020         	call	i2___wmul	;wreg free
 15171   002D7E  C007  FFF6         	movff	i2atoi@s,tblptrl
 15172   002D82  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 15173   002D86                     	if	0	;tblptru may be non-zero
 15174   002D86                     	endif
 15175   002D86                     	if	0	;tblptru may be non-zero
 15176   002D86                     	endif
 15177   002D86  0008               	tblrd		*
 15178   002D88  50F5               	movf	tablat,w,c
 15179   002D8A  5E01               	subwf	?i2___wmul^0,f,c
 15180   002D8C  0E00               	movlw	0
 15181   002D8E  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 15182   002D90  0E30               	movlw	48
 15183   002D92  2401               	addwf	?i2___wmul^0,w,c
 15184   002D94  6E0E               	movwf	i2atoi@n^0,c
 15185   002D96  0E00               	movlw	0
 15186   002D98  2002               	addwfc	(?i2___wmul+1)^0,w,c
 15187   002D9A  6E0F               	movwf	(i2atoi@n+1)^0,c
 15188   002D9C  EF97  F016         	goto	i2l4568
 15189   002DA0                     i2l4578:
 15190   002DA0  C007  FFF6         	movff	i2atoi@s,tblptrl
 15191   002DA4  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 15192   002DA8                     	if	0	;tblptru may be non-zero
 15193   002DA8                     	endif
 15194   002DA8                     	if	0	;tblptru may be non-zero
 15195   002DA8                     	endif
 15196   002DA8  0008               	tblrd		*
 15197   002DAA  CFF5 F009          	movff	tablat,??i2_atoi
 15198   002DAE  0ED0               	movlw	208
 15199   002DB0  2409               	addwf	??i2_atoi^0,w,c
 15200   002DB2  6E0A               	movwf	(??i2_atoi+1)^0,c
 15201   002DB4  6A0B               	clrf	(??i2_atoi+2)^0,c
 15202   002DB6  0EFF               	movlw	255
 15203   002DB8  220B               	addwfc	(??i2_atoi+2)^0,f,c
 15204   002DBA  500B               	movf	(??i2_atoi+2)^0,w,c
 15205   002DBC  E109               	bnz	i2u448_40
 15206   002DBE  0E0A               	movlw	10
 15207   002DC0  5C0A               	subwf	(??i2_atoi+1)^0,w,c
 15208   002DC2  A0D8               	btfss	status,0,c
 15209   002DC4  EFE6  F016         	goto	i2u448_41
 15210   002DC8  EFE8  F016         	goto	i2u448_40
 15211   002DCC                     i2u448_41:
 15212   002DCC  EFB5  F016         	goto	i2l4572
 15213   002DD0                     i2u448_40:
 15214   002DD0  500C               	movf	i2atoi@neg^0,w,c
 15215   002DD2  100D               	iorwf	(i2atoi@neg+1)^0,w,c
 15216   002DD4  A4D8               	btfss	status,2,c
 15217   002DD6  EFEF  F016         	goto	i2u449_41
 15218   002DDA  EFF1  F016         	goto	i2u449_40
 15219   002DDE                     i2u449_41:
 15220   002DDE  EFFF  F016         	goto	i2l1520
 15221   002DE2                     i2u449_40:
 15222   002DE2  C00E  F009         	movff	i2atoi@n,??i2_atoi
 15223   002DE6  C00F  F00A         	movff	i2atoi@n+1,??i2_atoi+1
 15224   002DEA  1E09               	comf	??i2_atoi^0,f,c
 15225   002DEC  1E0A               	comf	(??i2_atoi+1)^0,f,c
 15226   002DEE  4A09               	infsnz	??i2_atoi^0,f,c
 15227   002DF0  2A0A               	incf	(??i2_atoi+1)^0,f,c
 15228   002DF2  C009  F007         	movff	??i2_atoi,?i2_atoi
 15229   002DF6  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
 15230   002DFA  EF03  F017         	goto	i2l1523
 15231   002DFE                     i2l1520:
 15232   002DFE  C00E  F007         	movff	i2atoi@n,?i2_atoi
 15233   002E02  C00F  F008         	movff	i2atoi@n+1,?i2_atoi+1
 15234   002E06                     i2l1523:
 15235   002E06  0012               	return		;funcret
 15236   002E08                     __end_ofi2_atoi:
 15237                           	callstack 0
 15238                           
 15239 ;; *************** function i2_isspace *****************
 15240 ;; Defined at:
 15241 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
 15242 ;; Parameters:    Size  Location     Type
 15243 ;;  c               2    0[COMRAM] int 
 15244 ;; Auto vars:     Size  Location     Type
 15245 ;;		None
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  2    0[COMRAM] int 
 15248 ;; Registers used:
 15249 ;;		wreg, status,2, status,0
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15255 ;;      Params:         2       0       0       0       0       0       0
 15256 ;;      Locals:         0       0       0       0       0       0       0
 15257 ;;      Temps:          2       0       0       0       0       0       0
 15258 ;;      Totals:         4       0       0       0       0       0       0
 15259 ;;Total ram usage:        4 bytes
 15260 ;; Hardware stack levels used: 1
 15261 ;; This function calls:
 15262 ;;		Nothing
 15263 ;; This function is called by:
 15264 ;;		i2_atoi
 15265 ;; This function uses a non-reentrant model
 15266 ;;
 15267                           
 15268                           	psect	text75
 15269   003F54                     __ptext75:
 15270                           	callstack 0
 15271   003F54                     i2_isspace:
 15272                           	callstack 14
 15273   003F54  0E20               	movlw	32
 15274   003F56  1801               	xorwf	i2isspace@c^0,w,c
 15275   003F58  1002               	iorwf	(i2isspace@c+1)^0,w,c
 15276   003F5A  B4D8               	btfsc	status,2,c
 15277   003F5C  EFB2  F01F         	goto	i2u348_41
 15278   003F60  EFB4  F01F         	goto	i2u348_40
 15279   003F64                     i2u348_41:
 15280   003F64  EFC5  F01F         	goto	i2l1534
 15281   003F68                     i2u348_40:
 15282   003F68  0EF7               	movlw	247
 15283   003F6A  2401               	addwf	i2isspace@c^0,w,c
 15284   003F6C  6E03               	movwf	??i2_isspace^0,c
 15285   003F6E  0EFF               	movlw	255
 15286   003F70  2002               	addwfc	(i2isspace@c+1)^0,w,c
 15287   003F72  6E04               	movwf	(??i2_isspace+1)^0,c
 15288   003F74  5004               	movf	(??i2_isspace+1)^0,w,c
 15289   003F76  E109               	bnz	i2u349_40
 15290   003F78  0E05               	movlw	5
 15291   003F7A  5C03               	subwf	??i2_isspace^0,w,c
 15292   003F7C  A0D8               	btfss	status,0,c
 15293   003F7E  EFC3  F01F         	goto	i2u349_41
 15294   003F82  EFC5  F01F         	goto	i2u349_40
 15295   003F86                     i2u349_41:
 15296   003F86  EFC5  F01F         	goto	i2l1534
 15297   003F8A                     i2u349_40:
 15298   003F8A                     i2l1534:
 15299   003F8A  0012               	return		;funcret
 15300   003F8C                     __end_ofi2_isspace:
 15301                           	callstack 0
 15302                           
 15303 ;; *************** function i2_isdigit *****************
 15304 ;; Defined at:
 15305 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
 15306 ;; Parameters:    Size  Location     Type
 15307 ;;  c               2    0[COMRAM] int 
 15308 ;; Auto vars:     Size  Location     Type
 15309 ;;		None
 15310 ;; Return value:  Size  Location     Type
 15311 ;;                  2    0[COMRAM] int 
 15312 ;; Registers used:
 15313 ;;		None
 15314 ;; Tracked objects:
 15315 ;;		On entry : 0/0
 15316 ;;		On exit  : 0/0
 15317 ;;		Unchanged: 0/0
 15318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15319 ;;      Params:         2       0       0       0       0       0       0
 15320 ;;      Locals:         0       0       0       0       0       0       0
 15321 ;;      Temps:          0       0       0       0       0       0       0
 15322 ;;      Totals:         2       0       0       0       0       0       0
 15323 ;;Total ram usage:        2 bytes
 15324 ;; Hardware stack levels used: 1
 15325 ;; This function calls:
 15326 ;;		Nothing
 15327 ;; This function is called by:
 15328 ;;		i2_vfpfcnvrt
 15329 ;;		i2_atoi
 15330 ;; This function uses a non-reentrant model
 15331 ;;
 15332                           
 15333                           	psect	text76
 15334   004350                     __ptext76:
 15335                           	callstack 0
 15336   004350                     i2_isdigit:
 15337                           	callstack 15
 15338   004350  0012               	return		;funcret
 15339   004352                     __end_ofi2_isdigit:
 15340                           	callstack 0
 15341                           
 15342 ;; *************** function i2___wmul *****************
 15343 ;; Defined at:
 15344 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 15345 ;; Parameters:    Size  Location     Type
 15346 ;;  multiplier      2    0[COMRAM] unsigned int 
 15347 ;;  multiplicand    2    2[COMRAM] unsigned int 
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;  product         2    4[COMRAM] unsigned int 
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  2    0[COMRAM] unsigned int 
 15352 ;; Registers used:
 15353 ;;		wreg, status,2, status,0, prodl, prodh
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15359 ;;      Params:         4       0       0       0       0       0       0
 15360 ;;      Locals:         2       0       0       0       0       0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0
 15362 ;;      Totals:         6       0       0       0       0       0       0
 15363 ;;Total ram usage:        6 bytes
 15364 ;; Hardware stack levels used: 1
 15365 ;; This function calls:
 15366 ;;		Nothing
 15367 ;; This function is called by:
 15368 ;;		i2_atoi
 15369 ;; This function uses a non-reentrant model
 15370 ;;
 15371                           
 15372                           	psect	text77
 15373   0041CC                     __ptext77:
 15374                           	callstack 0
 15375   0041CC                     i2___wmul:
 15376                           	callstack 14
 15377   0041CC  5001               	movf	i2___wmul@multiplier^0,w,c
 15378   0041CE  0203               	mulwf	i2___wmul@multiplicand^0,c
 15379   0041D0  CFF3 F005          	movff	prodl,i2___wmul@product
 15380   0041D4  CFF4 F006          	movff	prodh,i2___wmul@product+1
 15381   0041D8  5001               	movf	i2___wmul@multiplier^0,w,c
 15382   0041DA  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 15383   0041DC  50F3               	movf	243,w,c
 15384   0041DE  2606               	addwf	(i2___wmul@product+1)^0,f,c
 15385   0041E0  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 15386   0041E2  0203               	mulwf	i2___wmul@multiplicand^0,c
 15387   0041E4  50F3               	movf	243,w,c
 15388   0041E6  2606               	addwf	(i2___wmul@product+1)^0,f,c
 15389   0041E8  C005  F001         	movff	i2___wmul@product,?i2___wmul
 15390   0041EC  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 15391   0041F0  0012               	return		;funcret
 15392   0041F2                     __end_ofi2___wmul:
 15393                           	callstack 0
 15394                           
 15395 ;; *************** function _TMR1_ISR *****************
 15396 ;; Defined at:
 15397 ;;		line 158 in file "mcc_generated_files/tmr1.c"
 15398 ;; Parameters:    Size  Location     Type
 15399 ;;		None
 15400 ;; Auto vars:     Size  Location     Type
 15401 ;;		None
 15402 ;; Return value:  Size  Location     Type
 15403 ;;                  1    wreg      void 
 15404 ;; Registers used:
 15405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 15406 ;; Tracked objects:
 15407 ;;		On entry : 0/0
 15408 ;;		On exit  : 0/0
 15409 ;;		Unchanged: 0/0
 15410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15411 ;;      Params:         0       0       0       0       0       0       0
 15412 ;;      Locals:         0       0       0       0       0       0       0
 15413 ;;      Temps:          0       0       0       0       0       0       0
 15414 ;;      Totals:         0       0       0       0       0       0       0
 15415 ;;Total ram usage:        0 bytes
 15416 ;; Hardware stack levels used: 1
 15417 ;; Hardware stack levels required when called: 2
 15418 ;; This function calls:
 15419 ;;		Absolute function
 15420 ;;		_TMR1_DefaultInterruptHandler
 15421 ;;		_txTMR1ISR
 15422 ;;		i2_TMR1_WriteTimer
 15423 ;; This function is called by:
 15424 ;;		_INTERRUPT_InterruptManager
 15425 ;; This function uses a non-reentrant model
 15426 ;;
 15427                           
 15428                           	psect	text78
 15429   003EDC                     __ptext78:
 15430                           	callstack 0
 15431   003EDC                     _TMR1_ISR:
 15432                           	callstack 17
 15433   003EDC                     
 15434                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
 15435   003EDC  909E               	bcf	158,0,c	;volatile
 15436   003EDE                     
 15437                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
 15438   003EDE  C0D2  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 15439   003EE2  C0D3  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 15440   003EE6  ECD2  F020         	call	i2_TMR1_WriteTimer	;wreg free
 15441   003EEA                     
 15442                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
 15443   003EEA  0101               	movlb	1	; () banked
 15444   003EEC  5118               	movf	_TMR1_InterruptHandler& (0+255),w,b
 15445   003EEE  1119               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 15446   003EF0  B4D8               	btfsc	status,2,c
 15447   003EF2  EF7D  F01F         	goto	i2u511_41
 15448   003EF6  EF7F  F01F         	goto	i2u511_40
 15449   003EFA                     i2u511_41:
 15450   003EFA  EF8C  F01F         	goto	i2l393
 15451   003EFE                     i2u511_40:
 15452   003EFE                     
 15453                           ; BSR set to: 1
 15454                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
 15455   003EFE  D802               	call	i2u512_48
 15456   003F00  EF8C  F01F         	goto	i2u512_49
 15457   003F04                     i2u512_48:
 15458   003F04  0005               	push	
 15459   003F06  6EFA               	movwf	pclath,c
 15460   003F08  5118               	movf	_TMR1_InterruptHandler& (0+255),w,b
 15461   003F0A  6EFD               	movwf	tosl,c
 15462   003F0C  5119               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 15463   003F0E  6EFE               	movwf	tosh,c
 15464   003F10  50F8               	movf	tblptru,w,c
 15465   003F12  6EFF               	movwf	tosu,c
 15466   003F14  50FA               	movf	pclath,w,c
 15467   003F16  0012               	return		;indir
 15468   003F18                     i2u512_49:
 15469   003F18                     i2l393:
 15470   003F18  0012               	return		;funcret
 15471   003F1A                     __end_of_TMR1_ISR:
 15472                           	callstack 0
 15473                           
 15474 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15475 ;; Defined at:
 15476 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 15477 ;; Parameters:    Size  Location     Type
 15478 ;;		None
 15479 ;; Auto vars:     Size  Location     Type
 15480 ;;		None
 15481 ;; Return value:  Size  Location     Type
 15482 ;;                  1    wreg      void 
 15483 ;; Registers used:
 15484 ;;		None
 15485 ;; Tracked objects:
 15486 ;;		On entry : 0/0
 15487 ;;		On exit  : 0/0
 15488 ;;		Unchanged: 0/0
 15489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15490 ;;      Params:         0       0       0       0       0       0       0
 15491 ;;      Locals:         0       0       0       0       0       0       0
 15492 ;;      Temps:          0       0       0       0       0       0       0
 15493 ;;      Totals:         0       0       0       0       0       0       0
 15494 ;;Total ram usage:        0 bytes
 15495 ;; Hardware stack levels used: 1
 15496 ;; This function calls:
 15497 ;;		Nothing
 15498 ;; This function is called by:
 15499 ;;		_TMR1_Initialize
 15500 ;;		_TMR1_ISR
 15501 ;; This function uses a non-reentrant model
 15502 ;;
 15503                           
 15504                           	psect	text79
 15505   004352                     __ptext79:
 15506                           	callstack 0
 15507   004352                     _TMR1_DefaultInterruptHandler:
 15508                           	callstack 18
 15509   004352  0012               	return		;funcret
 15510   004354                     __end_of_TMR1_DefaultInterruptHandler:
 15511                           	callstack 0
 15512                           
 15513 ;; *************** function _txTMR1ISR *****************
 15514 ;; Defined at:
 15515 ;;		line 278 in file "main.c"
 15516 ;; Parameters:    Size  Location     Type
 15517 ;;		None
 15518 ;; Auto vars:     Size  Location     Type
 15519 ;;		None
 15520 ;; Return value:  Size  Location     Type
 15521 ;;                  1    wreg      void 
 15522 ;; Registers used:
 15523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15524 ;; Tracked objects:
 15525 ;;		On entry : 0/0
 15526 ;;		On exit  : 0/0
 15527 ;;		Unchanged: 0/0
 15528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15529 ;;      Params:         0       0       0       0       0       0       0
 15530 ;;      Locals:         0       0       0       0       0       0       0
 15531 ;;      Temps:          2       0       0       0       0       0       0
 15532 ;;      Totals:         2       0       0       0       0       0       0
 15533 ;;Total ram usage:        2 bytes
 15534 ;; Hardware stack levels used: 1
 15535 ;; Hardware stack levels required when called: 1
 15536 ;; This function calls:
 15537 ;;		i2_EPWM2_LoadDutyValue
 15538 ;;		i2_TMR1_WriteTimer
 15539 ;; This function is called by:
 15540 ;;		_main
 15541 ;;		_TMR1_ISR
 15542 ;; This function uses a non-reentrant model
 15543 ;;
 15544                           
 15545                           	psect	text80
 15546   002E08                     __ptext80:
 15547                           	callstack 0
 15548   002E08                     _txTMR1ISR:
 15549                           	callstack 17
 15550   002E08                     
 15551                           ;main.c: 282:     static uint8_t i = 0;;main.c: 283:     static uint8_t mask = 0b0000000
      +                          1;;main.c: 284:     static txState_t state = TXSTARTBIT;;main.c: 286:     if(transmittin
      +                          g == 1)
 15552   002E08  0101               	movlb	1	; () banked
 15553   002E0A  052D               	decf	_transmitting& (0+255),w,b
 15554   002E0C  A4D8               	btfss	status,2,c
 15555   002E0E  EF0B  F017         	goto	i2u488_41
 15556   002E12  EF0D  F017         	goto	i2u488_40
 15557   002E16                     i2u488_41:
 15558   002E16  EF8E  F017         	goto	i2l5018
 15559   002E1A                     i2u488_40:
 15560   002E1A  EF74  F017         	goto	i2l5016
 15561   002E1E                     i2l4984:
 15562                           
 15563                           ; BSR set to: 0
 15564                           ;main.c: 292:                 mask = 0b00000001;
 15565   002E1E  0E01               	movlw	1
 15566   002E20  6FE5               	movwf	txTMR1ISR@mask& (0+255),b
 15567   002E22                     
 15568                           ; BSR set to: 0
 15569                           ;main.c: 293:                 EPWM2_LoadDutyValue(25);
 15570   002E22  0E00               	movlw	0
 15571   002E24  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
 15572   002E26  0E19               	movlw	25
 15573   002E28  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
 15574   002E2A  ECFA  F01F         	call	i2_EPWM2_LoadDutyValue	;wreg free
 15575   002E2E                     
 15576                           ;main.c: 294:                 state = TXDATABITS;
 15577   002E2E  0E01               	movlw	1
 15578   002E30  0100               	movlb	0	; () banked
 15579   002E32  6FD7               	movwf	txTMR1ISR@state& (0+255),b
 15580                           
 15581                           ;main.c: 295:                 break;
 15582   002E34  EF8E  F017         	goto	i2l5018
 15583   002E38                     i2l4990:
 15584                           
 15585                           ; BSR set to: 0
 15586                           ;main.c: 298:                 if ((transmitBuffer[i] & mask) != 0) EPWM2_LoadDutyValue(0
      +                          );
 15587   002E38  0E6F               	movlw	low _transmitBuffer
 15588   002E3A  25D8               	addwf	txTMR1ISR@i& (0+255),w,b
 15589   002E3C  6ED9               	movwf	fsr2l,c
 15590   002E3E  6ADA               	clrf	fsr2h,c
 15591   002E40  0E01               	movlw	high _transmitBuffer
 15592   002E42  22DA               	addwfc	fsr2h,f,c
 15593   002E44  50DF               	movf	indf2,w,c
 15594   002E46  15E5               	andwf	txTMR1ISR@mask& (0+255),w,b
 15595   002E48  0900               	iorlw	0
 15596   002E4A  B4D8               	btfsc	status,2,c
 15597   002E4C  EF2A  F017         	goto	i2u489_41
 15598   002E50  EF2C  F017         	goto	i2u489_40
 15599   002E54                     i2u489_41:
 15600   002E54  EF34  F017         	goto	i2l4994
 15601   002E58                     i2u489_40:
 15602   002E58                     
 15603                           ; BSR set to: 0
 15604   002E58  0E00               	movlw	0
 15605   002E5A  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
 15606   002E5C  0E00               	movlw	0
 15607   002E5E  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
 15608   002E60  ECFA  F01F         	call	i2_EPWM2_LoadDutyValue	;wreg free
 15609   002E64  EF3A  F017         	goto	i2l4996
 15610   002E68                     i2l4994:
 15611                           
 15612                           ; BSR set to: 0
 15613   002E68  0E00               	movlw	0
 15614   002E6A  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
 15615   002E6C  0E19               	movlw	25
 15616   002E6E  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
 15617   002E70  ECFA  F01F         	call	i2_EPWM2_LoadDutyValue	;wreg free
 15618   002E74                     i2l4996:
 15619                           
 15620                           ;main.c: 300:                 mask = mask << 1;
 15621   002E74  0100               	movlb	0	; () banked
 15622   002E76  51E5               	movf	txTMR1ISR@mask& (0+255),w,b
 15623   002E78  25E5               	addwf	txTMR1ISR@mask& (0+255),w,b
 15624   002E7A  6FE5               	movwf	txTMR1ISR@mask& (0+255),b
 15625   002E7C                     
 15626                           ; BSR set to: 0
 15627                           ;main.c: 301:                 if(mask == 0) state = TXSTOPBIT;
 15628   002E7C  51E5               	movf	txTMR1ISR@mask& (0+255),w,b
 15629   002E7E  A4D8               	btfss	status,2,c
 15630   002E80  EF44  F017         	goto	i2u490_41
 15631   002E84  EF46  F017         	goto	i2u490_40
 15632   002E88                     i2u490_41:
 15633   002E88  EF8E  F017         	goto	i2l5018
 15634   002E8C                     i2u490_40:
 15635   002E8C                     
 15636                           ; BSR set to: 0
 15637   002E8C  0E02               	movlw	2
 15638   002E8E  6FD7               	movwf	txTMR1ISR@state& (0+255),b
 15639   002E90  EF8E  F017         	goto	i2l5018
 15640   002E94                     i2l5002:
 15641                           
 15642                           ; BSR set to: 0
 15643                           ;main.c: 305:                 EPWM2_LoadDutyValue(0);
 15644   002E94  0E00               	movlw	0
 15645   002E96  6E02               	movwf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
 15646   002E98  0E00               	movlw	0
 15647   002E9A  6E01               	movwf	i2EPWM2_LoadDutyValue@dutyValue^0,c
 15648   002E9C  ECFA  F01F         	call	i2_EPWM2_LoadDutyValue	;wreg free
 15649   002EA0                     
 15650                           ;main.c: 306:                 if((transmitBuffer[i-1] == '\0') && (i > 0))
 15651   002EA0  0E6E               	movlw	low (_transmitBuffer+65535)
 15652   002EA2  0100               	movlb	0	; () banked
 15653   002EA4  25D8               	addwf	txTMR1ISR@i& (0+255),w,b
 15654   002EA6  6ED9               	movwf	fsr2l,c
 15655   002EA8  6ADA               	clrf	fsr2h,c
 15656   002EAA  0E01               	movlw	high (_transmitBuffer+65535)
 15657   002EAC  22DA               	addwfc	fsr2h,f,c
 15658   002EAE  50DF               	movf	indf2,w,c
 15659   002EB0  A4D8               	btfss	status,2,c
 15660   002EB2  EF5D  F017         	goto	i2u491_41
 15661   002EB6  EF5F  F017         	goto	i2u491_40
 15662   002EBA                     i2u491_41:
 15663   002EBA  EF6E  F017         	goto	i2l5010
 15664   002EBE                     i2u491_40:
 15665   002EBE                     
 15666                           ; BSR set to: 0
 15667   002EBE  51D8               	movf	txTMR1ISR@i& (0+255),w,b
 15668   002EC0  B4D8               	btfsc	status,2,c
 15669   002EC2  EF65  F017         	goto	i2u492_41
 15670   002EC6  EF67  F017         	goto	i2u492_40
 15671   002ECA                     i2u492_41:
 15672   002ECA  EF6E  F017         	goto	i2l5010
 15673   002ECE                     i2u492_40:
 15674   002ECE                     
 15675                           ; BSR set to: 0
 15676                           ;main.c: 307:                 {;main.c: 308:                     i = 0;
 15677   002ECE  0E00               	movlw	0
 15678   002ED0  6FD8               	movwf	txTMR1ISR@i& (0+255),b
 15679                           
 15680                           ;main.c: 309:                     transmitting = 0;
 15681   002ED2  0E00               	movlw	0
 15682   002ED4  0101               	movlb	1	; () banked
 15683   002ED6  6F2D               	movwf	_transmitting& (0+255),b
 15684                           
 15685                           ;main.c: 310:                 }
 15686   002ED8  EF6F  F017         	goto	i2l5012
 15687   002EDC                     i2l5010:
 15688                           
 15689                           ; BSR set to: 0
 15690   002EDC  2BD8               	incf	txTMR1ISR@i& (0+255),f,b
 15691   002EDE                     i2l5012:
 15692                           
 15693                           ;main.c: 312:                 state = TXSTARTBIT;
 15694   002EDE  0E00               	movlw	0
 15695   002EE0  0100               	movlb	0	; () banked
 15696   002EE2  6FD7               	movwf	txTMR1ISR@state& (0+255),b
 15697                           
 15698                           ;main.c: 313:                 break;
 15699   002EE4  EF8E  F017         	goto	i2l5018
 15700   002EE8                     i2l5016:
 15701                           
 15702                           ; BSR set to: 1
 15703   002EE8  0100               	movlb	0	; () banked
 15704   002EEA  51D7               	movf	txTMR1ISR@state& (0+255),w,b
 15705   002EEC  6E05               	movwf	??_txTMR1ISR^0,c
 15706   002EEE  6A06               	clrf	(??_txTMR1ISR+1)^0,c
 15707                           
 15708                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15709                           ; Switch size 1, requested type "simple"
 15710                           ; Number of cases is 1, Range of values is 0 to 0
 15711                           ; switch strategies available:
 15712                           ; Name         Instructions Cycles
 15713                           ; simple_byte            4     3 (average)
 15714                           ;	Chosen strategy is simple_byte
 15715   002EF0  5006               	movf	(??_txTMR1ISR+1)^0,w,c
 15716   002EF2  0A00               	xorlw	0	; case 0
 15717   002EF4  B4D8               	btfsc	status,2,c
 15718   002EF6  EF7F  F017         	goto	i2l6860
 15719   002EFA  EF8E  F017         	goto	i2l5018
 15720   002EFE                     i2l6860:
 15721                           
 15722                           ; BSR set to: 0
 15723                           ; Switch size 1, requested type "simple"
 15724                           ; Number of cases is 3, Range of values is 0 to 2
 15725                           ; switch strategies available:
 15726                           ; Name         Instructions Cycles
 15727                           ; simple_byte           10     6 (average)
 15728                           ;	Chosen strategy is simple_byte
 15729   002EFE  5005               	movf	??_txTMR1ISR^0,w,c
 15730   002F00  0A00               	xorlw	0	; case 0
 15731   002F02  B4D8               	btfsc	status,2,c
 15732   002F04  EF0F  F017         	goto	i2l4984
 15733   002F08  0A01               	xorlw	1	; case 1
 15734   002F0A  B4D8               	btfsc	status,2,c
 15735   002F0C  EF1C  F017         	goto	i2l4990
 15736   002F10  0A03               	xorlw	3	; case 2
 15737   002F12  B4D8               	btfsc	status,2,c
 15738   002F14  EF4A  F017         	goto	i2l5002
 15739   002F18  EF8E  F017         	goto	i2l5018
 15740   002F1C                     i2l5018:
 15741                           
 15742                           ;main.c: 316:     TMR1_WriteTimer(0x10000 - bitPeriod[baudRateSelected]);
 15743   002F1C  0101               	movlb	1	; () banked
 15744   002F1E  51C8               	movf	_baudRateSelected& (0+255),w,b
 15745   002F20  0D02               	mullw	2
 15746   002F22  0EB7               	movlw	low _bitPeriod
 15747   002F24  24F3               	addwf	243,w,c
 15748   002F26  6ED9               	movwf	fsr2l,c
 15749   002F28  0E01               	movlw	high _bitPeriod
 15750   002F2A  20F4               	addwfc	prodh,w,c
 15751   002F2C  6EDA               	movwf	fsr2h,c
 15752   002F2E  CFDE F005          	movff	postinc2,??_txTMR1ISR
 15753   002F32  CFDD F006          	movff	postdec2,??_txTMR1ISR+1
 15754   002F36  5005               	movf	??_txTMR1ISR^0,w,c
 15755   002F38  0800               	sublw	0
 15756   002F3A  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
 15757   002F3C  5006               	movf	(??_txTMR1ISR+1)^0,w,c
 15758   002F3E  A0D8               	btfss	status,0,c
 15759   002F40  2AE8               	incf	wreg,f,c
 15760   002F42  0800               	sublw	0
 15761   002F44  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
 15762   002F46  ECD2  F020         	call	i2_TMR1_WriteTimer	;wreg free
 15763   002F4A                     
 15764                           ;main.c: 317:     PIR1bits.TMR1IF = 0;
 15765   002F4A  909E               	bcf	158,0,c	;volatile
 15766   002F4C  0012               	return		;funcret
 15767   002F4E                     __end_of_txTMR1ISR:
 15768                           	callstack 0
 15769                           
 15770 ;; *************** function i2_TMR1_WriteTimer *****************
 15771 ;; Defined at:
 15772 ;;		line 121 in file "mcc_generated_files/tmr1.c"
 15773 ;; Parameters:    Size  Location     Type
 15774 ;;  timerVal        2    0[COMRAM] unsigned short 
 15775 ;; Auto vars:     Size  Location     Type
 15776 ;;		None
 15777 ;; Return value:  Size  Location     Type
 15778 ;;                  1    wreg      void 
 15779 ;; Registers used:
 15780 ;;		wreg, status,2
 15781 ;; Tracked objects:
 15782 ;;		On entry : 0/0
 15783 ;;		On exit  : 0/0
 15784 ;;		Unchanged: 0/0
 15785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15786 ;;      Params:         2       0       0       0       0       0       0
 15787 ;;      Locals:         0       0       0       0       0       0       0
 15788 ;;      Temps:          0       0       0       0       0       0       0
 15789 ;;      Totals:         2       0       0       0       0       0       0
 15790 ;;Total ram usage:        2 bytes
 15791 ;; Hardware stack levels used: 1
 15792 ;; This function calls:
 15793 ;;		Nothing
 15794 ;; This function is called by:
 15795 ;;		_TMR1_ISR
 15796 ;;		_txTMR1ISR
 15797 ;; This function uses a non-reentrant model
 15798 ;;
 15799                           
 15800                           	psect	text81
 15801   0041A4                     __ptext81:
 15802                           	callstack 0
 15803   0041A4                     i2_TMR1_WriteTimer:
 15804                           	callstack 18
 15805   0041A4                     
 15806                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
 15807   0041A4  A4CD               	btfss	205,2,c	;volatile
 15808   0041A6  EFD7  F020         	goto	i2u483_41
 15809   0041AA  EFD9  F020         	goto	i2u483_40
 15810   0041AE                     i2u483_41:
 15811   0041AE  EFE1  F020         	goto	i2l4880
 15812   0041B2                     i2u483_40:
 15813   0041B2                     
 15814                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
 15815   0041B2  90CD               	bcf	205,0,c	;volatile
 15816   0041B4                     
 15817                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
 15818   0041B4  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
 15819   0041B6  6ECF               	movwf	207,c	;volatile
 15820   0041B8                     
 15821                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
 15822   0041B8  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 15823   0041BC                     
 15824                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
 15825   0041BC  80CD               	bsf	205,0,c	;volatile
 15826                           
 15827                           ;mcc_generated_files/tmr1.c: 134:     }
 15828   0041BE  EFE5  F020         	goto	i2l380
 15829   0041C2                     i2l4880:
 15830                           
 15831                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15832   0041C2  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
 15833   0041C4  6ECF               	movwf	207,c	;volatile
 15834   0041C6                     
 15835                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
 15836   0041C6  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 15837   0041CA                     i2l380:
 15838   0041CA  0012               	return		;funcret
 15839   0041CC                     __end_ofi2_TMR1_WriteTimer:
 15840                           	callstack 0
 15841                           
 15842 ;; *************** function i2_EPWM2_LoadDutyValue *****************
 15843 ;; Defined at:
 15844 ;;		line 90 in file "mcc_generated_files/epwm2.c"
 15845 ;; Parameters:    Size  Location     Type
 15846 ;;  dutyValue       2    0[COMRAM] unsigned short 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;		None
 15849 ;; Return value:  Size  Location     Type
 15850 ;;                  1    wreg      void 
 15851 ;; Registers used:
 15852 ;;		wreg, status,2, status,0
 15853 ;; Tracked objects:
 15854 ;;		On entry : 0/0
 15855 ;;		On exit  : 0/0
 15856 ;;		Unchanged: 0/0
 15857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15858 ;;      Params:         2       0       0       0       0       0       0
 15859 ;;      Locals:         0       0       0       0       0       0       0
 15860 ;;      Temps:          2       0       0       0       0       0       0
 15861 ;;      Totals:         4       0       0       0       0       0       0
 15862 ;;Total ram usage:        4 bytes
 15863 ;; Hardware stack levels used: 1
 15864 ;; This function calls:
 15865 ;;		Nothing
 15866 ;; This function is called by:
 15867 ;;		_txTMR1ISR
 15868 ;; This function uses a non-reentrant model
 15869 ;;
 15870                           
 15871                           	psect	text82
 15872   003FF4                     __ptext82:
 15873                           	callstack 0
 15874   003FF4                     i2_EPWM2_LoadDutyValue:
 15875                           	callstack 17
 15876   003FF4                     
 15877                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
 15878   003FF4  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
 15879   003FF8  C002  F004         	movff	i2EPWM2_LoadDutyValue@dutyValue+1,??i2_EPWM2_LoadDutyValue+1
 15880   003FFC  90D8               	bcf	status,0,c
 15881   003FFE  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
 15882   004000  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
 15883   004002  90D8               	bcf	status,0,c
 15884   004004  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
 15885   004006  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
 15886   004008  5003               	movf	??i2_EPWM2_LoadDutyValue^0,w,c
 15887   00400A  6E67               	movwf	103,c	;volatile
 15888                           
 15889                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 15890   00400C  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
 15891   004010  0E03               	movlw	3
 15892   004012  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
 15893   004014  3A03               	swapf	??i2_EPWM2_LoadDutyValue^0,f,c
 15894   004016  0EF0               	movlw	240
 15895   004018  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
 15896   00401A  5066               	movf	102,w,c	;volatile
 15897   00401C  0BCF               	andlw	207
 15898   00401E  1003               	iorwf	??i2_EPWM2_LoadDutyValue^0,w,c
 15899   004020  6E66               	movwf	102,c	;volatile
 15900   004022  0012               	return		;funcret
 15901   004024                     __end_ofi2_EPWM2_LoadDutyValue:
 15902                           	callstack 0
 15903                           
 15904 ;; *************** function _EUSART2_Transmit_ISR *****************
 15905 ;; Defined at:
 15906 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;		None
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;		None
 15911 ;; Return value:  Size  Location     Type
 15912 ;;                  1    wreg      void 
 15913 ;; Registers used:
 15914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15915 ;; Tracked objects:
 15916 ;;		On entry : 0/0
 15917 ;;		On exit  : 0/0
 15918 ;;		Unchanged: 0/0
 15919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15920 ;;      Params:         0       0       0       0       0       0       0
 15921 ;;      Locals:         0       0       0       0       0       0       0
 15922 ;;      Temps:          0       0       0       0       0       0       0
 15923 ;;      Totals:         0       0       0       0       0       0       0
 15924 ;;Total ram usage:        0 bytes
 15925 ;; Hardware stack levels used: 1
 15926 ;; This function calls:
 15927 ;;		Nothing
 15928 ;; This function is called by:
 15929 ;;		_EUSART2_Initialize
 15930 ;;		_INTERRUPT_InterruptManager
 15931 ;; This function uses a non-reentrant model
 15932 ;;
 15933                           
 15934                           	psect	text83
 15935   003E5A                     __ptext83:
 15936                           	callstack 0
 15937   003E5A                     _EUSART2_Transmit_ISR:
 15938                           	callstack 19
 15939   003E5A                     
 15940                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 15941   003E5A  0E08               	movlw	8
 15942   003E5C  0100               	movlb	0	; () banked
 15943   003E5E  61E2               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 15944   003E60  EF34  F01F         	goto	i2u503_41
 15945   003E64  EF36  F01F         	goto	i2u503_40
 15946   003E68                     i2u503_41:
 15947   003E68  EF4C  F01F         	goto	i2l106
 15948   003E6C                     i2u503_40:
 15949   003E6C                     
 15950                           ; BSR set to: 0
 15951                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          XREG2 = eusart2TxBuffer[eusart2TxTail++];
 15952   003E6C  0E10               	movlw	low _eusart2TxBuffer
 15953   003E6E  25E3               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 15954   003E70  6ED9               	movwf	fsr2l,c
 15955   003E72  6ADA               	clrf	fsr2h,c
 15956   003E74  0E01               	movlw	high _eusart2TxBuffer
 15957   003E76  22DA               	addwfc	fsr2h,f,c
 15958   003E78  50DF               	movf	indf2,w,c
 15959   003E7A  6E73               	movwf	115,c	;volatile
 15960   003E7C                     
 15961                           ; BSR set to: 0
 15962   003E7C  2BE3               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 15963   003E7E                     
 15964                           ; BSR set to: 0
 15965                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 15966   003E7E  0E07               	movlw	7
 15967   003E80  65E3               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 15968   003E82  EF45  F01F         	goto	i2u504_41
 15969   003E86  EF47  F01F         	goto	i2u504_40
 15970   003E8A                     i2u504_41:
 15971   003E8A  EF49  F01F         	goto	i2l5110
 15972   003E8E                     i2u504_40:
 15973   003E8E                     
 15974                           ; BSR set to: 0
 15975                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 15976   003E8E  0E00               	movlw	0
 15977   003E90  6FE3               	movwf	_eusart2TxTail& (0+255),b	;volatile
 15978   003E92                     i2l5110:
 15979                           
 15980                           ; BSR set to: 0
 15981                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 15982   003E92  2BE2               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 15983                           
 15984                           ;mcc_generated_files/eusart2.c: 209:     }
 15985   003E94  EF4D  F01F         	goto	i2l109
 15986   003E98                     i2l106:
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 15990   003E98  98A3               	bcf	163,4,c	;volatile
 15991   003E9A                     i2l109:
 15992                           
 15993                           ; BSR set to: 0
 15994   003E9A  0012               	return		;funcret
 15995   003E9C                     __end_of_EUSART2_Transmit_ISR:
 15996                           	callstack 0
 15997                           
 15998 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 15999 ;; Defined at:
 16000 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;		None
 16003 ;; Auto vars:     Size  Location     Type
 16004 ;;		None
 16005 ;; Return value:  Size  Location     Type
 16006 ;;                  1    wreg      void 
 16007 ;; Registers used:
 16008 ;;		None
 16009 ;; Tracked objects:
 16010 ;;		On entry : 0/0
 16011 ;;		On exit  : 0/0
 16012 ;;		Unchanged: 0/0
 16013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16014 ;;      Params:         0       0       0       0       0       0       0
 16015 ;;      Locals:         0       0       0       0       0       0       0
 16016 ;;      Temps:          0       0       0       0       0       0       0
 16017 ;;      Totals:         0       0       0       0       0       0       0
 16018 ;;Total ram usage:        0 bytes
 16019 ;; Hardware stack levels used: 1
 16020 ;; This function calls:
 16021 ;;		Nothing
 16022 ;; This function is called by:
 16023 ;;		_EUSART2_Initialize
 16024 ;;		_EUSART2_Receive_ISR
 16025 ;; This function uses a non-reentrant model
 16026 ;;
 16027                           
 16028                           	psect	text84
 16029   004340                     __ptext84:
 16030                           	callstack 0
 16031   004340                     _EUSART2_DefaultOverrunErrorHandler:
 16032                           	callstack 18
 16033   004340                     
 16034                           ;mcc_generated_files/eusart2.c: 255:     RCSTA2bits.CREN = 0;
 16035   004340  9871               	bcf	113,4,c	;volatile
 16036                           
 16037                           ;mcc_generated_files/eusart2.c: 256:     RCSTA2bits.CREN = 1;
 16038   004342  8871               	bsf	113,4,c	;volatile
 16039   004344  0012               	return		;funcret
 16040   004346                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 16041                           	callstack 0
 16042                           
 16043 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 16044 ;; Defined at:
 16045 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 16046 ;; Parameters:    Size  Location     Type
 16047 ;;		None
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;		None
 16050 ;; Return value:  Size  Location     Type
 16051 ;;                  1    wreg      void 
 16052 ;; Registers used:
 16053 ;;		None
 16054 ;; Tracked objects:
 16055 ;;		On entry : 0/0
 16056 ;;		On exit  : 0/0
 16057 ;;		Unchanged: 0/0
 16058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16059 ;;      Params:         0       0       0       0       0       0       0
 16060 ;;      Locals:         0       0       0       0       0       0       0
 16061 ;;      Temps:          0       0       0       0       0       0       0
 16062 ;;      Totals:         0       0       0       0       0       0       0
 16063 ;;Total ram usage:        0 bytes
 16064 ;; Hardware stack levels used: 1
 16065 ;; This function calls:
 16066 ;;		Nothing
 16067 ;; This function is called by:
 16068 ;;		_EUSART2_Initialize
 16069 ;;		_EUSART2_Receive_ISR
 16070 ;; This function uses a non-reentrant model
 16071 ;;
 16072                           
 16073                           	psect	text85
 16074   004354                     __ptext85:
 16075                           	callstack 0
 16076   004354                     _EUSART2_DefaultFramingErrorHandler:
 16077                           	callstack 18
 16078   004354  0012               	return		;funcret
 16079   004356                     __end_of_EUSART2_DefaultFramingErrorHandler:
 16080                           	callstack 0
 16081                           
 16082 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 16083 ;; Defined at:
 16084 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;		None
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;		None
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  1    wreg      void 
 16091 ;; Registers used:
 16092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16098 ;;      Params:         0       0       0       0       0       0       0
 16099 ;;      Locals:         0       0       0       0       0       0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0
 16101 ;;      Totals:         0       0       0       0       0       0       0
 16102 ;;Total ram usage:        0 bytes
 16103 ;; Hardware stack levels used: 1
 16104 ;; Hardware stack levels required when called: 1
 16105 ;; This function calls:
 16106 ;;		_EUSART2_RxDataHandler
 16107 ;; This function is called by:
 16108 ;;		_EUSART2_Initialize
 16109 ;;		_EUSART2_Receive_ISR
 16110 ;; This function uses a non-reentrant model
 16111 ;;
 16112                           
 16113                           	psect	text86
 16114   004346                     __ptext86:
 16115                           	callstack 0
 16116   004346                     _EUSART2_DefaultErrorHandler:
 16117                           	callstack 17
 16118   004346                     
 16119                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 16120   004346  EC6B  F020         	call	_EUSART2_RxDataHandler	;wreg free
 16121   00434A  0012               	return		;funcret
 16122   00434C                     __end_of_EUSART2_DefaultErrorHandler:
 16123                           	callstack 0
 16124                           
 16125 ;; *************** function _EUSART2_RxDataHandler *****************
 16126 ;; Defined at:
 16127 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 16128 ;; Parameters:    Size  Location     Type
 16129 ;;		None
 16130 ;; Auto vars:     Size  Location     Type
 16131 ;;		None
 16132 ;; Return value:  Size  Location     Type
 16133 ;;                  1    wreg      void 
 16134 ;; Registers used:
 16135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16136 ;; Tracked objects:
 16137 ;;		On entry : 0/0
 16138 ;;		On exit  : 0/0
 16139 ;;		Unchanged: 0/0
 16140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16141 ;;      Params:         0       0       0       0       0       0       0
 16142 ;;      Locals:         0       0       0       0       0       0       0
 16143 ;;      Temps:          0       0       0       0       0       0       0
 16144 ;;      Totals:         0       0       0       0       0       0       0
 16145 ;;Total ram usage:        0 bytes
 16146 ;; Hardware stack levels used: 1
 16147 ;; This function calls:
 16148 ;;		Nothing
 16149 ;; This function is called by:
 16150 ;;		_EUSART2_Receive_ISR
 16151 ;;		_EUSART2_DefaultErrorHandler
 16152 ;; This function uses a non-reentrant model
 16153 ;;
 16154                           
 16155                           	psect	text87
 16156   0040D6                     __ptext87:
 16157                           	callstack 0
 16158   0040D6                     _EUSART2_RxDataHandler:
 16159                           	callstack 18
 16160   0040D6                     
 16161                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RCREG2;
 16162   0040D6  0E08               	movlw	low _eusart2RxBuffer
 16163   0040D8  0100               	movlb	0	; () banked
 16164   0040DA  25E1               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 16165   0040DC  6ED9               	movwf	fsr2l,c
 16166   0040DE  6ADA               	clrf	fsr2h,c
 16167   0040E0  0E01               	movlw	high _eusart2RxBuffer
 16168   0040E2  22DA               	addwfc	fsr2h,f,c
 16169   0040E4  CF74 FFDF          	movff	3956,indf2	;volatile
 16170   0040E8                     
 16171                           ; BSR set to: 0
 16172   0040E8  2BE1               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 16173   0040EA                     
 16174                           ; BSR set to: 0
 16175                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 16176   0040EA  0E07               	movlw	7
 16177   0040EC  65E1               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 16178   0040EE  EF7B  F020         	goto	i2u481_41
 16179   0040F2  EF7D  F020         	goto	i2u481_40
 16180   0040F6                     i2u481_41:
 16181   0040F6  EF7F  F020         	goto	i2l4850
 16182   0040FA                     i2u481_40:
 16183   0040FA                     
 16184                           ; BSR set to: 0
 16185                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 16186   0040FA  0E00               	movlw	0
 16187   0040FC  6FE1               	movwf	_eusart2RxHead& (0+255),b	;volatile
 16188   0040FE                     i2l4850:
 16189                           
 16190                           ; BSR set to: 0
 16191                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 16192   0040FE  2BDF               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 16193   004100                     
 16194                           ; BSR set to: 0
 16195   004100  0012               	return		;funcret
 16196   004102                     __end_of_EUSART2_RxDataHandler:
 16197                           	callstack 0
 16198                           
 16199                           	psect	text88
 16200   000000                     __ptext88:
 16201                           	callstack 0
 16202   000000                     
 16203                           	psect	rparam
 16204   000000                     
 16205                           	psect	temp
 16206   00005F                     btemp:
 16207                           	callstack 0
 16208   00005F                     	ds	1
 16209   000000                     int$flags	set	btemp
 16210   000000                     wtemp8	set	btemp+1
 16211   000000                     ttemp5	set	btemp+1
 16212   000000                     ttemp6	set	btemp+4
 16213   000000                     ttemp7	set	btemp+8
 16214                           
 16215                           	psect	idloc
 16216                           
 16217                           ;Config register IDLOC0 @ 0x200000
 16218                           ;	unspecified, using default values
 16219   200000                     	org	2097152
 16220   200000  FF                 	db	255
 16221                           
 16222                           ;Config register IDLOC1 @ 0x200001
 16223                           ;	unspecified, using default values
 16224   200001                     	org	2097153
 16225   200001  FF                 	db	255
 16226                           
 16227                           ;Config register IDLOC2 @ 0x200002
 16228                           ;	unspecified, using default values
 16229   200002                     	org	2097154
 16230   200002  FF                 	db	255
 16231                           
 16232                           ;Config register IDLOC3 @ 0x200003
 16233                           ;	unspecified, using default values
 16234   200003                     	org	2097155
 16235   200003  FF                 	db	255
 16236                           
 16237                           ;Config register IDLOC4 @ 0x200004
 16238                           ;	unspecified, using default values
 16239   200004                     	org	2097156
 16240   200004  FF                 	db	255
 16241                           
 16242                           ;Config register IDLOC5 @ 0x200005
 16243                           ;	unspecified, using default values
 16244   200005                     	org	2097157
 16245   200005  FF                 	db	255
 16246                           
 16247                           ;Config register IDLOC6 @ 0x200006
 16248                           ;	unspecified, using default values
 16249   200006                     	org	2097158
 16250   200006  FF                 	db	255
 16251                           
 16252                           ;Config register IDLOC7 @ 0x200007
 16253                           ;	unspecified, using default values
 16254   200007                     	org	2097159
 16255   200007  FF                 	db	255
 16256                           
 16257                           	psect	config
 16258                           
 16259                           ; Padding undefined space
 16260   300000                     	org	3145728
 16261   300000  FF                 	db	255
 16262                           
 16263                           ;Config register CONFIG1H @ 0x300001
 16264                           ;	Oscillator Selection bits
 16265                           ;	FOSC = INTIO67, Internal oscillator block
 16266                           ;	4X PLL Enable
 16267                           ;	PLLCFG = OFF, Oscillator used directly
 16268                           ;	Primary clock enable bit
 16269                           ;	PRICLKEN = ON, Primary clock enabled
 16270                           ;	Fail-Safe Clock Monitor Enable bit
 16271                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16272                           ;	Internal/External Oscillator Switchover bit
 16273                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16274   300001                     	org	3145729
 16275   300001  28                 	db	40
 16276                           
 16277                           ;Config register CONFIG2L @ 0x300002
 16278                           ;	Power-up Timer Enable bit
 16279                           ;	PWRTEN = OFF, Power up timer disabled
 16280                           ;	Brown-out Reset Enable bits
 16281                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16282                           ;	Brown Out Reset Voltage bits
 16283                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16284   300002                     	org	3145730
 16285   300002  1F                 	db	31
 16286                           
 16287                           ;Config register CONFIG2H @ 0x300003
 16288                           ;	Watchdog Timer Enable bits
 16289                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16290                           ;	Watchdog Timer Postscale Select bits
 16291                           ;	WDTPS = 32768, 1:32768
 16292   300003                     	org	3145731
 16293   300003  3C                 	db	60
 16294                           
 16295                           ; Padding undefined space
 16296   300004                     	org	3145732
 16297   300004  FF                 	db	255
 16298                           
 16299                           ;Config register CONFIG3H @ 0x300005
 16300                           ;	CCP2 MUX bit
 16301                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16302                           ;	PORTB A/D Enable bit
 16303                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 16304                           ;	P3A/CCP3 Mux bit
 16305                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16306                           ;	HFINTOSC Fast Start-up
 16307                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16308                           ;	Timer3 Clock input mux bit
 16309                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16310                           ;	ECCP2 B output mux bit
 16311                           ;	P2BMX = PORTB5, P2B is on RB5
 16312                           ;	MCLR Pin Enable bit
 16313                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16314   300005                     	org	3145733
 16315   300005  BF                 	db	191
 16316                           
 16317                           ;Config register CONFIG4L @ 0x300006
 16318                           ;	Stack Full/Underflow Reset Enable bit
 16319                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16320                           ;	Single-Supply ICSP Enable bit
 16321                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16322                           ;	Extended Instruction Set Enable bit
 16323                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16324                           ;	Background Debug
 16325                           ;	DEBUG = OFF, Disabled
 16326   300006                     	org	3145734
 16327   300006  85                 	db	133
 16328                           
 16329                           ; Padding undefined space
 16330   300007                     	org	3145735
 16331   300007  FF                 	db	255
 16332                           
 16333                           ;Config register CONFIG5L @ 0x300008
 16334                           ;	Code Protection Block 0
 16335                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16336                           ;	Code Protection Block 1
 16337                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16338                           ;	Code Protection Block 2
 16339                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16340                           ;	Code Protection Block 3
 16341                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16342   300008                     	org	3145736
 16343   300008  0F                 	db	15
 16344                           
 16345                           ;Config register CONFIG5H @ 0x300009
 16346                           ;	Boot Block Code Protection bit
 16347                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16348                           ;	Data EEPROM Code Protection bit
 16349                           ;	CPD = OFF, Data EEPROM not code-protected
 16350   300009                     	org	3145737
 16351   300009  C0                 	db	192
 16352                           
 16353                           ;Config register CONFIG6L @ 0x30000A
 16354                           ;	Write Protection Block 0
 16355                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16356                           ;	Write Protection Block 1
 16357                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16358                           ;	Write Protection Block 2
 16359                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16360                           ;	Write Protection Block 3
 16361                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16362   30000A                     	org	3145738
 16363   30000A  0F                 	db	15
 16364                           
 16365                           ;Config register CONFIG6H @ 0x30000B
 16366                           ;	Configuration Register Write Protection bit
 16367                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16368                           ;	Boot Block Write Protection bit
 16369                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16370                           ;	Data EEPROM Write Protection bit
 16371                           ;	WRTD = OFF, Data EEPROM not write-protected
 16372   30000B                     	org	3145739
 16373   30000B  E0                 	db	224
 16374                           
 16375                           ;Config register CONFIG7L @ 0x30000C
 16376                           ;	Table Read Protection Block 0
 16377                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16378                           ;	Table Read Protection Block 1
 16379                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16380                           ;	Table Read Protection Block 2
 16381                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16382                           ;	Table Read Protection Block 3
 16383                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16384   30000C                     	org	3145740
 16385   30000C  0F                 	db	15
 16386                           
 16387                           ;Config register CONFIG7H @ 0x30000D
 16388                           ;	Boot Block Table Read Protection bit
 16389                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16390   30000D                     	org	3145741
 16391   30000D  40                 	db	64
 16392                           tosu	equ	0xFFF
 16393                           tosh	equ	0xFFE
 16394                           tosl	equ	0xFFD
 16395                           stkptr	equ	0xFFC
 16396                           pclatu	equ	0xFFB
 16397                           pclath	equ	0xFFA
 16398                           pcl	equ	0xFF9
 16399                           tblptru	equ	0xFF8
 16400                           tblptrh	equ	0xFF7
 16401                           tblptrl	equ	0xFF6
 16402                           tablat	equ	0xFF5
 16403                           prodh	equ	0xFF4
 16404                           prodl	equ	0xFF3
 16405                           indf0	equ	0xFEF
 16406                           postinc0	equ	0xFEE
 16407                           postdec0	equ	0xFED
 16408                           preinc0	equ	0xFEC
 16409                           plusw0	equ	0xFEB
 16410                           fsr0h	equ	0xFEA
 16411                           fsr0l	equ	0xFE9
 16412                           wreg	equ	0xFE8
 16413                           indf1	equ	0xFE7
 16414                           postinc1	equ	0xFE6
 16415                           postdec1	equ	0xFE5
 16416                           preinc1	equ	0xFE4
 16417                           plusw1	equ	0xFE3
 16418                           fsr1h	equ	0xFE2
 16419                           fsr1l	equ	0xFE1
 16420                           bsr	equ	0xFE0
 16421                           indf2	equ	0xFDF
 16422                           postinc2	equ	0xFDE
 16423                           postdec2	equ	0xFDD
 16424                           preinc2	equ	0xFDC
 16425                           plusw2	equ	0xFDB
 16426                           fsr2h	equ	0xFDA
 16427                           fsr2l	equ	0xFD9
 16428                           status	equ	0xFD8

Data Sizes:
    Strings     1398
    Constant    0
    Data        20
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    110     134
    BANK1           256     40     202
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_62(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_62(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1979$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1979$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2024$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 114
		 -> STR_59(CODE[3]), STR_58(CODE[3]), STR_57(CODE[3]), STR_56(CODE[16]), 
		 -> STR_55(CODE[16]), STR_54(CODE[5]), STR_53(CODE[17]), STR_52(CODE[21]), 
		 -> STR_51(CODE[12]), STR_50(CODE[12]), STR_49(CODE[12]), STR_48(CODE[12]), 
		 -> STR_47(CODE[12]), STR_46(CODE[12]), STR_45(CODE[22]), STR_44(CODE[28]), 
		 -> STR_43(CODE[22]), STR_42(CODE[114]), STR_41(CODE[96]), STR_40(CODE[35]), 
		 -> STR_39(CODE[51]), STR_38(CODE[30]), STR_37(CODE[46]), STR_36(CODE[93]), 
		 -> STR_35(CODE[3]), STR_34(CODE[39]), STR_33(CODE[31]), STR_32(CODE[16]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[15]), STR_28(CODE[14]), 
		 -> STR_27(CODE[43]), STR_26(CODE[2]), STR_25(CODE[2]), STR_24(CODE[8]), 
		 -> STR_23(CODE[52]), STR_22(CODE[28]), STR_21(CODE[29]), STR_20(CODE[50]), 
		 -> STR_19(CODE[33]), STR_18(CODE[37]), STR_17(CODE[34]), STR_16(CODE[63]), 
		 -> STR_15(CODE[19]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[52]), STR_9(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[5]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[37]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> txTMR1ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> txTMR1ISR(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rxEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rxEUSART2ISR(), Absolute function(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_rxEUSART2ISR
    _rxEUSART2ISR->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_dtoa
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_utoa->i2_pad
    i2_stoa->i2_fputc
    i2_dtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_abs->i2___aomod
    i2_ctoa->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2___wmul
    _TMR1_ISR->_txTMR1ISR
    _txTMR1ISR->i2_EPWM2_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_printf
    _read8bit->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_rxEUSART2ISR
    _rxEUSART2ISR->i2_printf
    i2_printf->i2_vfprintf

Critical Paths under _main in BANK1

    _main->_read8bit
    _read8bit->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   80219
                                            108 BANK0      2     2      0
                                             37 BANK1      3     3      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
      _EUSART2_SetRxInterruptHandler
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_WriteTimer
                             _printf
                           _read8bit
 ---------------------------------------------------------------------------------
 (1) _read8bit                                            10    10      0   39120
                                             27 BANK1     10    10      0
                       _EUSART1_Read
                            ___awdiv
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16     4     12   38043
                                            106 BANK0      2     2      0
                                             15 BANK1     12     0     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   32668
                                             98 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           27    21      6   32048
                                             88 BANK0     10     4      6
                                              0 BANK1     15    15      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                35    25     10    6159
                                             53 BANK0     35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    6825
                                             53 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             24 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             24 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     595
                                             24 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2946
                                             35 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    7713
                                             53 BANK0     35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    5413
                                             42 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2406
                                             35 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             42 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             24 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             24 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    2349
                                             35 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1906
                                             26 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             25 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1554
                                             30 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     259
                                             24 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     281
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     562
                                             24 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             24 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     340
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1034
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     566
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     174
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         1     1      0       8
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     320
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                         12    12      0   14326
                                             12 BANK0     12    12      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                           _TMR1_ISR
                       _rxEUSART2ISR *
 ---------------------------------------------------------------------------------
 (12) _rxEUSART2ISR                                        3     3      0   13898
                                             93 COMRAM     1     1      0
                                             10 BANK0      2     2      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                            8     4      4   13720
                                             91 COMRAM     2     2      0
                                              6 BANK0      4     0      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6   13606
                                             89 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        27    21      6   13385
                                             64 COMRAM    25    19      6
                             i2_atoi
                             i2_ctoa
                             i2_dtoa
                            i2_fputc
                          i2_isdigit
                             i2_stoa
                          i2_strncmp
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (16) i2_xtoa                                             35    25     10    2420
                                             29 COMRAM    35    25     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_utoa                                             32    22     10    2731
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2___lomod                                          17     1     16     211
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (17) i2___lodiv                                          25     9     16     214
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (16) i2_strncmp                                          11     5      6     303
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) i2_stoa                                             22    18      4    1273
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (17) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i2_dtoa                                             35    25     10    3303
                                             29 COMRAM    35    25     10
                          i2___aodiv
                          i2___aomod
                              i2_abs
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    1981
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     873
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (17) i2_abs                                               4     2      2      92
                                             18 COMRAM     4     2      2
                          i2___aomod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___aomod                                          18     2     16     348
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (17) i2___aodiv                                          26    10     16     352
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (16) i2_ctoa                                              8     5      3     905
                                             11 COMRAM     8     5      3
                            i2_fputc
 ---------------------------------------------------------------------------------
 (19) i2_fputc                                             9     5      4     672
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (20) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (21) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_atoi                                              9     7      2     622
                                              6 COMRAM     9     7      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (17) i2_isspace                                           5     3      2      78
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     428
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _txTMR1ISR *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _txTMR1ISR                                           2     2      0     288
                                              4 COMRAM     2     2      0
              i2_EPWM2_LoadDutyValue
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2_EPWM2_LoadDutyValue                               4     2      2     148
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_SetRxInterruptHandler
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _TMR1_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _isdigit
         _stoa
           _fputc
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
         _xtoa
           _pad
   _read8bit
     _EUSART1_Read
     ___awdiv
     _printf

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _txTMR1ISR *
       i2_EPWM2_LoadDutyValue
       i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer *
   _rxEUSART2ISR *
     i2_printf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_ctoa
             i2_fputc
               i2_putch
                 i2_EUSART1_Write
           i2_dtoa
             i2___aodiv
             i2___aomod
             i2_abs
               i2___aomod (ARG)
             i2_pad
               i2_fputc
               i2_fputs
                 i2_fputc
           i2_fputc
           i2_isdigit
           i2_stoa
             i2_fputc
             i2_strlen
           i2_strncmp
           i2_utoa
             i2___lodiv
             i2___lomod
             i2_pad
           i2_xtoa
             i2_pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     28      CA       6       78.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6E      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhhlh       1D      0       0      16        0.0%
BITBIGSFRllhlh      17      0       0      29        0.0%
BITBIGSFRlhhlll     12      0       0      26        0.0%
BITBIGSFRhlhhl       F      0       0      18        0.0%
BITBIGSFRllhll       E      0       0      30        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRllhhhh      7      0       0      27        0.0%
BITBIGSFRhllhh       7      0       0      20        0.0%
BITBIGSFRlhhllh      6      0       0      24        0.0%
BITBIGSFRlhhllh      6      0       0      25        0.0%
BITBIGSFRhlll        6      0       0      21        0.0%
BITBIGSFRlhhh        4      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      28        0.0%
BITBIGSFRlhhlh       1      0       0      23        0.0%
BITBIGSFRhlhl        1      0       0      19        0.0%
BITBIGSFRhhll        1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AE      31        0.0%
DATA                 0      0     1AE      33        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 15:53:29 2023

                        ?_EUSART2_RxDataHandler 0001                                              l81 427E  
                                            l75 3BB6                                              l94 3CFC  
                                  ___awdiv@sign 007D                                              _ri 00DA  
                                            _ti 00DC                             ___wmul@multiplicand 007A  
                                           l132 430C                                             l221 3DD2  
                                           l141 42EE                                             l302 4240  
                                           l135 4302                                             l144 42F8  
                                           l305 424E                                             l138 4316  
                                           l242 412A                                             l229 42A8  
                                           l165 434E                                             l245 4254  
                                           l318 42CC                                             l238 4102  
                                           l254 42DA                                             l272 4334  
                                           l248 4266                                             l266 432A  
                                           l426 40D4                                             l380 407C  
                                           l269 4320                                             l446 4232  
                                           l366 40A8                                             l526 0148  
                                           l449 3FF2                                             l634 286C  
                                           l299 4212                                             l539 035E  
                                           l396 42E4                                             l636 28A4  
                                           l582 0902                                             l639 417A  
                                           l753 22A2                                             l569 066E  
                                           l870 38AA                                             l766 2A0A  
                                           _PR2 000FBB                              i2___aodiv@quotient 0013  
                                  fp__txTMR1ISR 0000          __end_of_EUSART2_SetFramingErrorHandler 430E  
                _EUSART2_SetFramingErrorHandler 4304                                 _timer1ReloadVal 00D2  
                                           _abs 3E18                                             _pad 38AC  
                               _TMR2_Initialize 42BE                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                      _TXSTA2bits 000F72  
                           __end_ofi2_vfpfcnvrt 140E                        __end_of_EPWM2_Initialize 4234  
                         i2_EPWM2_LoadDutyValue 3FF4                                            ?_abs 008A  
                                          l1400 24B8                                            l1084 3132  
                                          l1077 3112                                            l1421 19C0  
                                          l1317 4152                                            l1414 25AE  
                                          l1094 34B2                                            l1351 3938  
                                          l1087 3492                                            l1520 2CB4  
                                          l1353 395A                                            l1409 2564  
                                          l1434 1DB2                                            l1523 2CBC  
                                          l1419 19B8                                            l1364 35EC  
                                          l1348 38F4                                            l1436 1DBA  
                                          l1429 1B7C                                            l1526 4050  
                                          l1534 3D8C                                            l1367 3630  
                                          l1391 16C6                                            l1375 14AA  
                                          l1448 1F48                                            l1369 3650  
                                          l1377 14B2                                            l1378 14F8  
                                          l1563 3F52                                            l1491 3C60  
                                          l1468 0F00                                            l1549 3AA0  
                                          l1557 3D44                                            l5030 37FA  
                                          l1398 24B0                                            l1495 3E50  
                                          l1567 3302                                            l5040 3820  
                                          l5032 3802                                            l6000 14D0  
                                          l5050 3858                                            l5042 3828  
                                          l5034 3806                                            l5026 37E6  
                                          l1498 3E58                                            l6010 150A  
                                          l6002 14E0                                            l5140 4296  
                                          l5060 3884                                            l5052 385E  
                                          l5044 383A                                            l5036 3814  
                                          l5028 37EC                                            l6012 1510  
                                          l6020 1604                                            l6004 14EC  
                                          l6100 1A7E                                            l5150 41FE  
                                          l5054 3874                                            l5046 3842  
                                          l5062 388A                                            l5038 381C  
                                          l6022 1620                                            l6030 1680  
                                          l6014 1594                                            l6006 14F4  
                                          l6110 1B34                                            l6102 1A84  
                                          l5080 3CB2                                            l5152 4202  
                                          l5144 41F2                                            l5160 4052  
                                          l5064 389A                                            l5056 387C  
                                          l5048 384A                                            l6032 1690  
                                          l6024 163E                                            l6016 159A  
                                          l6008 1500                                            l6040 242C  
                                          l6112 1B4E                                            l6104 1AE8  
                                          l6120 1D8A                                            l5090 3CF2  
                                          l5082 3CB2                                            l5154 4206  
                                          l5146 41F6                                            l5162 4060  
                                          l5170 4072                                            l5066 38A2  
                                          l5058 387E                                            l6034 1696  
                                          l6026 1658                                            l6018 15A0  
                                          l6050 2476                                            l6042 243E  
                                          l6210 32B4                                            l6202 325C  
                                          l6106 1AFC                                            l6114 1B5C  
                                          l6130 1DF4                                            l6122 1D8C  
                                          l5092 3CF6                                            l5084 3CC4  
                                          l5076 4268                                            l5156 420A  
                                          l5148 41FA                                            l5172 4078  
                                          l5164 4062                                            l6036 16A6  
                                          l6028 1672                                            l6060 24EE  
                                          l6052 247E                                            l6044 2446  
                                          l6212 32DE                                            l6204 326A  
                                          l6108 1B1A                                            l6140 1E2C  
                                          l6132 1DFA                                            l6124 1DA6  
                                          l6300 0E72                                            l6220 0A06  
                                          l5174 3FC2                                            l5094 3CF8  
                                          l5086 3CE0                                            l5158 420E  
                                          l5166 4068                                            l6070 2542  
                                          l6062 24F4                                            l6054 248E  
                                          l6046 245A                                            l6206 3286  
                                          l6142 1E30                                            l6134 1E00  
                                          l6150 1EAA                                            l6126 1DE2  
                                          l6118 1D7A                                            l6302 0E7C  
                                          l6230 0A3A                                            l6222 0A14  
                                          ?_pad 008A                                            l5096 3CFA  
                                          l5088 3CE2                                            l5168 406C  
                                          l6080 2590                                            l6072 2546  
                                          l6064 2512                                            l6048 2462  
                                          l6208 32A2                                            l6152 1EC8  
                                          l6160 1F28                                            l6144 1E40  
                                          l6136 1E10                                            l6128 1DEA  
                                          l6304 0E8C                                            l6240 0AB6  
                                          l6224 0A18                                            l6312 0ED6  
                                          l6216 09D4                                            l6400 0138  
                                          l6170 2B8A                                            l6066 251E  
                                          l6058 24DA                                            l6090 19E8  
                                          l6082 1980                                            l6154 1EE6  
                                          l6146 1E46                                            l6138 1E20  
                                          l6242 0AEC                                            l6234 0A48  
                                          l6226 0A26                                            l6218 09F8  
                                          l6330 3C10                                            l6410 0182  
                                          l6402 0146                                            l4900 3B48  
                                          l6180 2C1E                                            l6172 2BA6  
                                          l6164 2B70                                            l6076 2576  
                                          l6068 253C                                            l6092 19F0  
                                          l6084 1990                                            l6156 1F00  
                                          l6148 1E4C                                            l6308 0EC4  
                                          l6252 0B38                                            l6244 0AFC  
                                          l6228 0A28                                            l6236 0A7E  
                                          l6332 3C1C                                            l6340 412C  
                                          l6500 04D6                                            l6420 01A6  
                                          l6412 0186                                            l6404 0156  
                                          l4910 3B68                                            l4902 3B58  
                                          l6190 2C98                                            l6174 2BDA  
                                          l6166 2B86                                            l6078 258A  
                                          l6094 19FA                                            l6086 1992  
                                          l6158 1F1A                                            l6270 0C84  
                                          l6262 0BDE                                            l6254 0B72  
                                          l6246 0B0A                                            l6238 0A92  
                                          l6334 3C3A                                            l6342 4136  
                                          l6350 2742                                            l6510 0508  
                                          l6430 01D4                                            l6422 01A8  
                                          l6414 0194                                            l6406 016A  
                                          l4840 430E                                            l4832 42F0  
                                          l4912 3B6C                                            l4904 3B5C  
                                          l6176 2BE2                                            l5800 2160  
                                          l6096 1A00                                            l6088 19AC  
                                          l6280 0D50                                            l6264 0BEE  
                                          l6256 0B96                                            l6248 0B2A  
                                          l6336 3C56                                            l6360 279C  
                                          l6352 274A                                            l6520 0544  
                                          l6504 04F0                                            l6440 0222  
                                          l6432 01E2                                            l6424 01AA  
                                          l6416 0196                                            l6408 016E  
                                          l4930 3DB0                                            l4834 42E6  
                                          l4914 3B7A                                            l4906 3B60  
                                          l6186 2C56                                            l6178 2BEA  
                                          l5810 21B6                                            l5802 2180  
                                          l6098 1A78                                            l6290 0DB0  
                                          l6274 0CB4                                            l6266 0C0A  
                                          l6258 0BCA                                            l6370 2814  
                                          l6362 27AC                                            l6354 275C  
                                          l6346 272E                                            l6530 05DC  
                                          l6522 0554                                            l6506 0500  
                                          l6514 051E                                            l6450 0336  
                                          l6442 031A                                            l6434 01F0  
                                          l6426 01B8                                            l6418 01A4  
                                          l4852 4322                                            l4932 3DBE  
                                          l4836 4304                                            l4916 3B88  
                                          l4908 3B64                                            l4924 434C  
                                          l4940 4116                                            l6188 2C86  
                                          l5820 2238                                            l5812 21CA  
                                          l5804 2184                                            l6196 3224  
                                          l5900 342C                                            l6284 0D80  
                                          l6292 0DE4                                            l6276 0CD0  
                                          l6268 0C26                                            l6380 2858  
                                          l6372 2824                                            l6356 276E  
                                          l6364 27B2                                            l6348 2734  
                                          l6540 065E                                            l6532 05EC  
                                          l6524 057E                                            l6508 0504  
                                          l6516 0530                                            l6452 0342  
                                          l6444 032C                                            l6436 0204  
                                          l6428 01C6                                            l4854 4318  
                                          l4934 3DCC                                            l4926 3D8E  
                                          l4838 42FA                                            l4918 3BB4  
                                          l4950 40B6                                            l4942 4124  
                                          l5830 2282                                            l5822 223A  
                                          l5814 21D8                                            l5806 2190  
                                          l5910 38BC                                            l6198 3250  
                                          l5902 345A                                            l6294 0E08  
                                          l6278 0CEC                                            l6390 28A2  
                                          l6382 2880                                            l6366 27C8  
                                          l6358 2780                                            l6550 06C6  
                                          l6542 0672                                            l6534 0616  
                                          l6526 05AA                                            l6518 0540  
                                          l6470 03EE                                            l6462 036E  
                                          l6454 0348                                            l6438 020C  
                                          l4856 432C                                            l4928 3DA2  
                                          l4952 40D2                                            l4960 42C6  
                                          l4944 4128                                            l4936 4102  
                                          l5760 42D2                                            l5824 224C  
                                          l5816 21EA                                            l5808 21AE  
                                          l5840 28DA                                            l5920 3914  
                                          l5912 38D0                                            l5904 347A  
                                          l6296 0E40                                            l6384 288A  
                                          l6376 2838                                            l6368 2804  
                                          l6560 0756                                            l6552 06DE  
                                          l6544 0684                                            l6536 0628  
                                          l6528 05D6                                            l6480 0434  
                                          l6472 0402                                            l6464 037A  
                                          l6456 0364                                            l4954 4234  
                                          l4858 42DC                                            l4970 4096  
                                          l4962 407E                                            l4938 4110  
                                          l5770 3A58                                            l5762 3A0A  
                                          l5818 2218                                            l5826 2252  
                                          l5850 2932                                            l5842 28DE  
                                          l5834 28A6                                            l5922 391A  
                                          l5914 38E0                                            l5930 3F1A  
                                          l5906 348C                                            l6298 0E64  
                                          l6386 288E                                            l6378 2848  
                                          l6570 0846                                            l6562 079E  
                                          l6554 06EC                                            l6546 0694  
                                          l6538 0654                                            l6482 0440  
                                          l6490 0490                                            l6474 0410  
                                          l6466 0380                                            l6394 011C  
                                          l4956 4214                                            l4948 40AA  
                                          l4972 40A4                                            l4964 408A  
                                          l5940 4024                                            l5756 4254  
                                          l5772 3A8E                                            l5764 3A1E  
                                          l5828 2262                                            l5860 29B4  
                                          l5852 2946                                            l5844 28EC  
                                          l5836 28AC                                            l5780 3D1E  
                                          l5924 3946                                            l5916 38EC  
                                          l5908 38AC                                            l5932 3F26  
                                          l6388 2890                                            l6580 0906  
                                          l6572 084C                                            l6564 07A4  
                                          l6556 0734                                            l6548 06C0  
                                          l6492 04AE                                            l6476 041C  
                                          l6468 039A                                            l6396 0126  
                                          l4966 4092                                            l4958 42BE  
                                          l5950 3D82                                            l5758 4262  
                                          l5766 3A30                                            l5790 211A  
                                          l5854 2954                                            l5862 29BA  
                                          l5846 290C                                            l5838 28BA  
                                          l5926 3E18                                            l5782 3D24  
                                          l5918 3900                                            l5934 3F2C  
                                          l5870 3042                                            l6582 0918  
                                          l6574 0868                                            l6566 07F0  
                                          l6558 073A                                            l6494 04B8  
                                          l6478 0428                                            l6398 012A  
                                          l4896 3B38                                            l4968 4094  
                                          l5784 4154                                            l5952 3D86  
                                          l5944 3D46                                            l5768 3A3A  
                                          l5960 35A4                                            l5792 2120  
                                          l5864 29CA                                            l5856 2982  
                                          l5848 292A                                            l5928 3E34  
                                          l5776 3CFE                                            l5936 3F44  
                                          l5880 3098                                            l5872 304E  
                                          l6576 08B0                                            l6568 07FE  
                                          l6496 04BE                                            l6488 044C  
                                          l4898 3B3A                                            l5786 4172  
                                          l5946 3D4C                                            l6850 2C08  
                                          l5970 35E4                                            l5962 35B0  
                                          l5794 212E                                            l5866 29EA  
                                          l5858 29A2                                            l5778 3D0C  
                                          l5890 310C                                            l5882 30AA  
                                          l5874 306E                                            l6578 08B6  
                                          l6498 04CA                                            l6842 0462  
                                          l6586 0930                                            l5948 3D60  
                                          l5972 35F8                                            l5964 35BE  
                                          l5956 3584                                            l5796 214E  
                                          l5980 140E                                            l5884 30D8  
                                          l5876 3076                                            l5892 33E2  
                                          l6844 0948                                            l6588 09BE  
                                          l5974 360C                                            l5966 35D0  
                                          l5958 3598                                            l5798 2152  
                                          l5990 1482                                            l5982 142E  
                                          l5886 30F8                                            l5878 308A  
                                          l5894 3402                                            l6846 0A70  
                                          l5976 3612                                            l5992 1484  
                                          l5984 1444                                            l5888 30FA  
                                          l5896 340A                                            l6848 0DCE  
                                          l5978 363E                                            l5994 149E  
                                          l5986 1454                                            l5898 341E  
                                          l5996 14BA                                            l5988 1474  
                                          l5998 14CA                                            STR_1 7FDC  
                                          STR_2 7D56                                            STR_3 7EB0  
                                          STR_4 7BB8                                            STR_5 7FF3  
                                          STR_6 7F5B                                            STR_7 7C3D  
                                          STR_8 7FBA                                            STR_9 7FD2  
                                  _transmitBusy 00DB                                 fp__rxEUSART2ISR 0000  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u5000 427E  
                                          u5010 3CC4                                            u5011 3CC0  
                                          u5020 3CF2                                            u5021 3CEE  
                                          u6000 1454                                            u6001 1450  
                                          u5130 42A6                                            u6010 1482  
                                          u5131 42A0                                            u6011 147E  
                                          u5140 4060                                            u6100 1690  
                                          u6020 149E                                            u5141 405C  
                                          u6101 168C                                            u6021 149A  
                                          u6030 14CA                                            u6031 14C6  
                                          u6111 2436                                            u5136 42A8  
                                          u6040 14E0                                            u6120 245A  
                                          u6200 1990                                            u6041 14DC  
                                          u6121 2456                                            u6201 198C  
                                          u6050 1620                                            u6130 248E  
                                          u6210 19AC                                            u6051 161C  
                                          u6131 248A                                            u6211 19A8  
                                          u6060 163E                                            u6140 24AC  
                                          u6220 1AFC                                            u6300 1E84  
                                          u6061 163A                                            u6141 24A8  
                                          u6221 1AF8                                            u6070 1658  
                                          u6150 24D6                                            u6230 1B1A  
                                          u6310 1EC8                                            u6071 1654  
                                          u6151 24D2                                            u6231 1B16  
                                          u6311 1EC4                                            u5600 3A58  
                                          u6080 1672                                            u6160 2512  
                                          u6400 3250                                            u6240 1B34  
                                          u6320 1EE6                                            u5601 3A54  
                                          u6081 166E                                            u6161 250E  
                                          u6401 324C                                            u6241 1B30  
                                          u6321 1EE2                                            u6305 1E72  
                                          u5610 3A8E                                            u6090 1680  
                                          u6170 2564                                            u6410 3286  
                                          u6250 1B4E                                            u6330 1F00  
                                          u5611 3A8A                                            u6091 167C  
                                          u6171 2560                                            u6411 3282  
                                          u6251 1B4A                                            u6331 1EFC  
                                          u5700 28BA                                            u5620 3D44  
                                          u6180 2572                                            u6420 32A2  
                                          u6260 1B5C                                            u6340 1F1A  
                                          u6500 0B96                                            u5701 28B6  
                                          u5621 3D40                                            u6181 256E  
                                          u6421 329E                                            u6261 1B58  
                                          u6341 1F16                                            u6501 0B92  
                                          u5630 212E                                            u5710 28EC  
                                          u6190 25AE                                            u6430 32B4  
                                          u6350 1F28                                            u6270 1D8A  
                                          u6510 0C0A                                            u5631 212A  
                                          u5711 28E8                                            u6191 25AA  
                                          u6431 32B0                                            u6351 1F24  
                                          u6271 1D86                                            u6511 0C06  
                                          u6360 2BA6                                            u5640 2160  
                                          u5720 292A                                            u6440 32DE  
                                          u5800 3402                                            u6280 1DA6  
                                          u6520 0C26                                            u6600 2780  
                                          u6361 2BA2                                            u5641 215C  
                                          u5721 2926                                            u6441 32DA  
                                          u5801 33FE                                            u6281 1DA2  
                                          u6521 0C22                                            u6601 277C  
                                          u4850 4110                                            u4930 37FA  
                                          u6370 2BD6                                            u5570 4262  
                                          u5730 2954                                            u5810 342C  
                                          u6290 1E10                                            u6530 0CD0  
                                          u6450 09F8                                            u6610 27AC  
                                          u4851 410C                                            u4931 37F6  
                                          u6371 2BD2                                            u5571 425E  
                                          u5651 218A                                            u5731 2950  
                                          u5811 3428                                            u6291 1E0C  
                                          u6531 0CCC                                            u6451 09F4  
                                          u6611 27A8                                            u4860 4124  
                                          u4940 3814                                            u5900 404C  
                                          u6380 2C86                                            u5580 3A1E  
                                          u5660 21AE                                            u5740 2982  
                                          u5820 345A                                            u6540 0CEC  
                                          u6460 0A92                                            u6620 27C8  
                                          u6700 0156                                            u4861 4120  
                                          u4941 3810                                            u6381 2C82  
                                          u5581 3A1A                                            u5661 21AA  
                                          u5741 297E                                            u5821 3456  
                                          u6541 0CE8                                            u6461 0A8E  
                                          u6621 27C4                                            u6701 0152  
                                          u4870 424E                                            u4950 383A  
                                          u5910 3D60                                            u6390 2C98  
                                          u5590 3A30                                            u5670 21D8  
                                          u5750 29CA                                            u5830 38BC  
                                          u6550 0E08                                            u6470 0AB6  
                                          u6630 2800                                            u6710 016A  
                                          u4871 424A                                            u4951 3836  
                                          u5911 3D5C                                            u6391 2C94  
                                          u5591 3A2C                                            u5671 21D4  
                                          u5751 29C6                                            u5831 38B8  
                                          u6551 0E04                                            u6471 0AB2  
                                          u6631 27FC                                            u6711 0166  
                                          u4960 3858                                            u5920 3D82  
                                          u5680 2218                                            u5840 38E0  
                                          u6560 0E40                                            u6480 0AFC  
                                          u6640 2814                                            u6800 0628  
                                          u6720 0182                                            u4961 3854  
                                          u5921 3D7E                                            u5681 2214  
                                          u5841 38DC                                            u5761 3048  
                                          u6561 0E3C                                            u6481 0AF8  
                                          u6641 2810                                            u6801 0624  
                                          u6721 017E                                            u4970 3874  
                                          u5930 3598                                            u5690 2262  
                                          u5850 3938                                            u5770 306E  
                                          u6570 0E64                                            u6490 0B72  
                                          u6650 2824                                            u6810 0694  
                                          u6730 0204                                            u4971 3870  
                                          u5931 3594                                            u5691 225E  
                                          u5851 3934                                            u5771 306A  
                                          u6571 0E60                                            u6491 0B6E  
                                          u6651 2820                                            u6811 0690  
                                          u6731 0200                                            u4980 389A  
                                          u5940 35BE                                            u5860 3946  
                                          u5780 3098                                            u6580 3C56  
                                          u6660 2834                                            u6820 06DA  
                                          u6740 035E                                            u4981 3896  
                                          u5941 35BA                                            u5861 3942  
                                          u5781 3094                                            u6581 3C52  
                                          u6661 2830                                            u6821 06D6  
                                          u6741 035A                                            u4990 427C  
                                          u5950 35E0                                            u5870 3E34  
                                          u5790 30D8                                            u6670 2848  
                                          u6590 275C                                            u6830 0756  
                                          u6750 0396                                            u4991 4276  
                                          u5951 35DC                                            u5871 3E30  
                                          u5791 30D4                                            u6671 2844  
                                          u6591 2758                                            u6831 0752  
                                          u6751 0392                                            u5960 3630  
                                          u5880 3F44                                            u6680 2858  
                                          u6840 0868                                            u6760 0402  
                                          u5961 362C                                            u5881 3F40  
                                          u6681 2854                                            u6841 0864  
                                          u6761 03FE                                            u5890 404A  
                                          u5970 363E                                            u6690 28A2  
                                          u6770 04EC                                            u5891 4044  
                                          u5971 363A                                            u6691 289E  
                                          u6771 04E8                                            u5980 1440  
                                          u6780 0530                                            u5981 143A  
                                          u6781 052C                                            u5990 1442  
                                          u6790 05EC                                            u6791 05E8  
                                          _TMR1 000FCE                                            _TMR2 000FBC  
                                          _WPUB 000F61                           ??_EUSART2_Receive_ISR 0001  
                                 _EUSART1_Write 4250                                    _transmitting 012D  
                                          abs@a 008A                                            _dbuf 012F  
                                          _atoi 2B70                                            _ctoa 3584  
                                          _main 011C                                            _dtoa 140E  
                                 ?_EUSART1_Read 0001                                            _prec 00D0  
                                 ?_EUSART2_Read 0001                                            pad@i 0091  
                                          pad@p 008E                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0093  
                                          fsr2l 000FD9                                            _stoa 242C  
                                          btemp 005F                                            _rsum 012C  
                                          _utoa 1980                                            _tsum 012E  
                                          _xtoa 1D7A                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0118  
                               __end_ofi2_fputc 3B38                                 __end_ofi2_fputs 3E18  
                  __end_of_EUSART2_Transmit_ISR 3E9C                                 __end_ofi2_putch 4340  
                    ??_TMR1_SetInterruptHandler 007A                                     i2_dtoa$2074 0030  
                                  ___param_bank 000000                                           ??_abs 008C  
                                         ??_pad 0090                                      i2_vfprintf 3C62  
                 __end_of_OSCILLATOR_Initialize 4250                                 __end_of___aodiv 22A4  
                                         ?_atoi 007E                                           ?_ctoa 0083  
                                         ?_main 0001                                           ?_dtoa 0095  
                               __end_of___aomod 2A0C                                 __end_of___awdiv 38AC  
                                         STR_10 7C3D                                           STR_11 7F9D  
                                         STR_12 7FEC                                           STR_20 7CA4  
                                         STR_13 7F07                                           STR_21 7E43  
                                         STR_30 7F7F                                           STR_14 7E98  
                                         STR_22 7E7C                                           STR_23 7C3D  
                                         STR_31 7F8E                                           STR_15 7F1C  
                                         STR_24 7FE4                                           STR_32 7F40  
                                         STR_40 7DA0                                           STR_16 7BFE  
                                         STR_25 7C6F                                           STR_33 7E06  
                                         STR_17 7DC3                                           STR_41 7AFB  
                                         STR_26 7C6F                                           STR_50 7FC6  
                                         STR_18 7D7B                                           STR_34 7D2F  
                                         STR_42 7A89                                           STR_51 7FC6  
                                         STR_35 7FFC                                           STR_43 7EC6  
                                         STR_19 7DE5                                           STR_27 7D04  
                                         STR_60 7FF8                                           STR_28 7FAC  
                                         STR_52 7EF2                                           STR_44 7E60  
                                         STR_36 7B5B                                           STR_29 7F70  
                                         STR_53 7F2F                                           STR_45 7EDC  
                                         STR_37 7CD6                                           STR_54 7FF3  
                                         STR_62 7FF8                                           STR_46 7FC6  
                                         STR_38 7E25                                           STR_47 7FC6  
                                         STR_55 7F50                                           STR_39 7C71  
                                         STR_48 7FC6                                           STR_56 7F60  
                                         STR_49 7FC6                                           STR_57 7FFC  
                                         STR_58 7FFC                                           STR_59 7FFC  
                                         ?_stoa 0083                                           ?_utoa 0095  
                               __end_of___lodiv 3134                                 ___awdiv@divisor 007A  
                                         ?_xtoa 0095                                           _T1CON 000FCD  
                                         _T2CON 000FBA                                 __end_of___lomod 34B4  
                                         i2l120 4100                                           i2l106 3E98  
                                         i2l123 4354                                           i2l116 37E4  
                                         i2l109 3E9A                                           i2l126 4344  
                                         i2l129 434A                                           i2l171 0084  
                                         i2l172 00E4                                           i2l245 4282  
                                         i2l173 00C0                                           i2l254 433E  
                                         i2l248 4294                                           i2l178 00E4  
                                         i2l380 41CA                                           i2l605 2F4C  
                                         i2l622 3040                                           i2l449 4022  
                                         i2l393 3F18                                           i2l399 4352  
                                         i2l639 41F0                                           i2l753 242A  
                                         i2l766 2B6E                                 ___awdiv@counter 007C  
                                  vfpfcnvrt@fmt 00BA                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         i2_abs 3E9C                                           i2_pad 395C  
                              __end_of_TMR1_ISR 3F1A                                      i2isdigit@c 0001  
                                         _flags 00D4                                           _fputc 3A0A  
                                         _fputs 3CFE                                 __end_of_isdigit 4052  
                                         _rcsum 012B                                           atoi@n 0085  
                                         pad@fp 008A                                           atoi@s 007E  
                                         _width 00CE                                           ctoa@c 0085  
                                         _putch 42CE                                           ctoa@l 0087  
                                         ctoa@w 0089                                           main@i 01B5  
                                         dtoa@d 0097                                           dtoa@i 00B6  
                                         dtoa@n 00AD                                           dtoa@p 00A9  
                                         dtoa@s 00B5                                           dtoa@w 00AB  
                               __end_of_isspace 3D8E                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 40AA                                _baudRateSelected 01C8  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                __end_ofi2___wmul 41F2  
                                ??_EUSART1_Read 0078                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0078  
                                         stoa@i 008F                                           stoa@l 0097  
                                         stoa@p 0095                                           stoa@s 0085  
                                         stoa@w 0091                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                         utoa@d 0097                                           utoa@i 00B3  
                                         utoa@n 00AB                                           utoa@p 00A7  
                                         utoa@w 00A9                                           status 000FD8  
                                    i2isspace@c 0001                                           wtemp8 0060  
                                         xtoa@c 00B7                                           xtoa@d 0097  
                                         xtoa@i 00B5                                           xtoa@n 00AD  
                                         xtoa@p 00A9                                           xtoa@w 00AB  
                               __end_of_strncmp 3304                                ___lodiv@dividend 0078  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 4052  
                                 ?_rxEUSART2ISR 0001                                __end_ofi2_printf 41A4  
         __end_of_EUSART2_SetTxInterruptHandler 42F0                   _EUSART2_SetTxInterruptHandler 42E6  
                              __end_ofi2_strlen 3FC2                                 __initialization 3BB8  
                                  __end_of_atoi 2CBE                                    __end_of_ctoa 3652  
                    __end_of_EUSART1_Initialize 3DD4                                    __end_of_main 09D4  
                                  __end_of_dtoa 16C8                                    __end_of_stoa 25B0  
                                    i2printf@ap 005C                                    __end_of_utoa 1B7E  
                                  __end_of_xtoa 1F4A                         __end_of_TMR2_Initialize 42CE  
                   ?_INTERRUPT_InterruptManager 0001                                      i2stoa@nuls 0011  
                                   i2_vfpfcnvrt 0F02                                   i2vfpfcnvrt@ap 0045  
                                 i2vfpfcnvrt@cp 0058                                   i2vfpfcnvrt@fp 0041  
                                   i2_xtoa$2101 0030                                          ??_atoi 0080  
                                        ??_ctoa 0086                                          ??_main 00CC  
                                        ??_dtoa 009F                                          ??_stoa 0087  
                                        ??_utoa 009F                                          ??_xtoa 009F  
                                 __activetblptr 000002             __end_of_EUSART2_DefaultErrorHandler 434C  
                   _EUSART2_DefaultErrorHandler 4346                                          ?i2_abs 0013  
                                        ?i2_pad 0013                                ___lodiv@quotient 0088  
                        ?i2_EPWM2_LoadDutyValue 0001                                      i2strncmp@l 0008  
                                    i2strncmp@n 0005                                      i2strncmp@r 000A  
                    __end_of_EUSART2_Initialize 3BB8                        _eusart2TxBufferRemaining 00E2  
                                        ?_fputc 007A                                          ?_fputs 0083  
                                        _CCPR2H 000F68                                          _CCPR2L 000F67  
                              ___awdiv@dividend 0078                                  _transmitBuffer 016F  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 0078  
                                        i2l1400 2638                                          i2l1084 3222  
                                        i2l1077 3202                                          i2l1421 1BBE  
                                        i2l1317 41A2                                          i2l1414 272C  
                                        i2l1094 3582                                          i2l1351 39E4  
                                        i2l1087 3562                                          i2l1520 2DFE  
                                        i2l4000 2B2E                                          i2l1353 3A08  
                                        i2l1409 26E2                                          i2l4002 2B4E  
                                        i2l4010 315E                                          i2l1434 1F82  
                                        i2l1523 2E06                                          i2l1419 1BB6  
                                        i2l1364 36B8                                          i2l1348 39A2  
                                        i2l4020 31C8                                          i2l4012 3166  
                                        i2l1436 1F8A                                          i2l1429 1D78  
                                        i2l1526 4350                                          i2l1534 3F8A  
                                        i2l4022 31E8                                          i2l4014 317A  
                                        i2l4006 3134                                          i2l4030 34D2  
                                        i2l1367 36FA                                          i2l1391 197E  
                                        i2l1375 1764                                          i2l5000 2E8C  
                                        i2l4024 31EA                                          i2l4016 3188  
                                        i2l4008 3140                                          i2l4040 354A  
                                        i2l4032 34DA                                          i2l1448 2118  
                                        i2l1369 371C                                          i2l1377 176C  
                                        i2l5010 2EDC                                          i2l5002 2E94  
                                        i2l4050 398E                                          i2l1378 17B2  
                                        i2l4026 31FC                                          i2l4018 319A  
                                        i2l4042 355C                                          i2l4034 34EE  
                                        i2l1563 3FC0                                          i2l1491 3CB0  
                                        i2l5100 3E5A                                          i2l5020 2F4A  
                                        i2l5012 2EDE                                          i2l5004 2EA0  
                                        i2l4060 39F4                                          i2l4052 399A  
                                        i2l4044 395C                                          i2l4036 34FC  
                                        i2l4028 34B4                                          i2l1468 140C  
                                        i2l1549 3B36                                          i2l1557 3E16  
                                        i2l5110 3E92                                          i2l5102 3E6C  
                                        i2l5006 2EBE                                          i2l4070 3F54  
                                        i2l4062 3E9C                                          i2l4054 39AE  
                                        i2l4046 396C                                          i2l1398 2630  
                                        i2l4038 352A                                          i2l1495 3ED2  
                                        i2l1567 33E0                                          i2l5104 3E7C  
                                        i2l5008 2ECE                                          i2l5016 2EE8  
                                        i2l4072 3F68                                          i2l4064 3EB6  
                                        i2l4056 39C2                                          i2l4048 3980  
                                        i2l4400 17BA                                          i2l4080 3F98  
                                        i2l5120 3768                                          i2l5112 371E  
                                        i2l5106 3E7E                                          i2l5018 2F1C  
                                        i2l4066 4350                                          i2l4074 3F8A  
                                        i2l1498 3EDA                                          i2l4058 39C6  
                                        i2l4410 1858                                          i2l4402 17C4  
                                        i2l4082 3F9C                                          i2l5130 37E0  
                                        i2l5122 3776                                          i2l5114 3730  
                                        i2l5108 3E8E                                          i2l5132 3EDC  
                                        i2l4068 3F54                                          i2l4420 1928  
                                        i2l4404 17CA                                          i2l4412 18BC  
                                        i2l4084 3FB4                                          i2l4500 1D14  
                                        i2l5124 3788                                          i2l5116 373E  
                                        i2l5300 00DC                                          i2l5134 3EDE  
                                        i2l3702 4338                                          i2l4350 3666  
                                        i2l4414 18D6                                          i2l4422 1938  
                                        i2l4406 184C                                          i2l4078 3F8C  
                                        i2l4502 1D2E                                          i2l4510 1F4A  
                                        i2l5070 417C                                          i2l5230 2F68  
                                        i2l5126 37A2                                          i2l5118 374E  
                                        i2l5136 3EEA                                          i2l3720 3AB4  
                                        i2l4352 3672                                          i2l4424 1948  
                                        i2l4416 18F4                                          i2l4408 1852  
                                        i2l4440 25E4                                          i2l4432 25B0  
                                        i2l4600 3380                                          i2l4504 1D48  
                                        i2l4520 1FBA                                          i2l4512 1F5A  
                                        i2l5072 4184                                          i2l5240 2FAA  
                                        i2l5232 2F7A                                          i2l5224 2F4E  
                                        i2l5128 37C0                                          i2l5138 3EFE  
                                        i2l3722 3AC6                                          i2l4370 370A  
                                        i2l4362 36B0                                          i2l4354 367E  
                                        i2l4426 194E                                          i2l4418 190E  
                                        i2l4450 265C                                          i2l4442 25F8  
                                        i2l4434 25C2                                          i2l4602 3392  
                                        i2l4506 1D58                                          i2l4530 1FF0  
                                        i2l4522 1FC4                                          i2l4514 1F5C  
                                        i2l5250 2FEA                                          i2l5242 2FAE  
                                        i2l5234 2F8C                                          i2l5226 2F4E  
                                        i2l3724 3AD0                                          i2l4364 36C4  
                                        i2l4356 368C                                          i2l4348 3652  
                                        i2l3740 3DD4                                          i2l4428 195E  
                                        i2l4380 172C                                          i2l4372 16C8  
                                        i2l4460 26BC                                          i2l4452 2670  
                                        i2l4444 2600                                          i2l4436 25CA  
                                        i2l4604 33BC                                          i2l4540 201C  
                                        i2l4532 1FFC                                          i2l4524 1FCA  
                                        i2l4516 1F76                                          i2l5252 2FFC  
                                        i2l5244 2FBE                                          i2l5236 2F9C  
                                        i2l3726 3AEE                                          i2l3718 3AA2  
                                        i2l4366 36D8                                          i2l4358 369E  
                                        i2l3742 3DE0                                          i2l4390 1784  
                                        i2l4382 173C                                          i2l4374 16E8  
                                        i2l4470 270A                                          i2l4462 26C0  
                                        i2l4454 2674                                          i2l4446 260E  
                                        i2l4438 25DC                                          i2l4550 20E8  
                                        i2l4534 2000                                          i2l4526 1FD0  
                                        i2l4542 207A                                          i2l4518 1FB2  
                                        i2l5254 3000                                          i2l5246 2FD0  
                                        i2l5238 2FA4                                          i2l5262 3014  
                                        i2l3920 41CC                                          i2l3728 3B24  
                                        i2l4368 36DC                                          i2l3744 3DF2  
                                        i2l4392 178A                                          i2l4384 173E  
                                        i2l4376 16FC                                          i2l4472 270E  
                                        i2l4464 26C4                                          i2l4456 2692  
                                        i2l4480 1BAA                                          i2l4544 2096  
                                        i2l4552 20F8                                          i2l4536 2010  
                                        i2l4528 1FE0                                          i2l4800 131C  
                                        i2l5256 3004                                          i2l5248 2FD8  
                                        i2l3922 41E8                                          i2l4570 2D36  
                                        i2l4562 2CD6                                          i2l3930 22B6  
                                        i2l3746 3DF6                                          i2l4394 179A  
                                        i2l4386 1758                                          i2l4378 170C  
                                        i2l4458 269E                                          i2l4490 1C74  
                                        i2l4482 1BE6                                          i2l4474 1B7E  
                                        i2l4546 20B4                                          i2l4538 2016  
                                        i2l4810 139A                                          i2l4802 1352  
                                        i2l4730 0F46                                          i2l4722 0F02  
                                        i2l5258 300A                                          i2l5290 0056  
                                        i2l4580 2DD0                                          i2l4572 2D6A  
                                        i2l4564 2CF2                                          i2l4556 2CBE  
                                        i2l3940 230C                                          i2l3932 22D6  
                                        i2l4396 17A6                                          i2l4388 1774  
                                        i2l4468 26F6                                          i2l4492 1C7A  
                                        i2l4484 1BEE                                          i2l4476 1B8E  
                                        i2l4548 20CE                                          i2l4804 1376  
                                        i2l4740 0F74                                          i2l4732 0F52  
                                        i2l4724 0F26                                          i2l5292 0064  
                                        i2l4582 2DE2                                          i2l4566 2D26  
                                        i2l4558 2CD2                                          i2l3950 2360  
                                        i2l3942 2318                                          i2l3934 22DA  
                                        i2l3926 22A4                                          i2l4398 17AE  
                                        i2l4590 332E                                          i2l4494 1C80  
                                        i2l4486 1BF8                                          i2l4478 1B90  
                                        i2l4806 1382                                          i2l4814 13D2  
                                        i2l4750 1024                                          i2l4734 0F56  
                                        i2l4742 0FA8                                          i2l4726 0F34  
                                        i2l5294 0092                                          i2l5286 003A  
                                        i2l4920 4340                                          i2l4568 2D2E  
                                        i2l3696 4282                                          i2l3960 23D4  
                                        i2l3952 2372                                          i2l3944 2336  
                                        i2l3936 22E8                                          i2l3928 22A8  
                                        i2l4488 1BFE                                          i2l4496 1CE4  
                                        i2l4808 138A                                          i2l4760 1098  
                                        i2l4752 1032                                          i2l4744 0FBA  
                                        i2l4736 0F68                                          i2l4728 0F42  
                                        i2l5296 00A0                                          i2l5288 0048  
                                        i2l4850 40FE                                          i2l4842 40D6  
                                        i2l4922 4346                                          i2l4578 2DA0  
                                        i2l3698 4290                                          i2l3954 23A0  
                                        i2l3946 233E                                          i2l3962 23DA  
                                        i2l3938 2308                                          i2l3970 2A0C  
                                        i2l4594 333A                                          i2l4498 1CF6  
                                        i2l4770 1112                                          i2l4762 10BC  
                                        i2l4754 1052                                          i2l4746 0FDE  
                                        i2l4818 13E4                                          i2l5298 00CE  
                                        i2l4844 40E8                                          i2l3964 23EA  
                                        i2l3956 23C0                                          i2l3948 2352  
                                        i2l3980 2A50                                          i2l3972 2A10  
                                        i2l4596 3348                                          i2l4588 3304  
                                        i2l4780 11D0                                          i2l4772 112E  
                                        i2l4764 10EE                                          i2l4748 1014  
                                        i2l4846 40EA                                          i2l4870 41A4  
                                        i2l3966 240A                                          i2l3958 23C2  
                                        i2l3990 2AB8                                          i2l3982 2A70  
                                        i2l3974 2A1E                                          i2l4598 3364  
                                        i2l4790 1294                                          i2l4782 11EC  
                                        i2l4774 114A                                          i2l4758 1060  
                                        i2l4848 40FA                                          i2l4872 41B2  
                                        i2l4880 41C2                                          i2l3992 2AE6  
                                        i2l3984 2A8E                                          i2l3976 2A3E  
                                        i2l4784 1208                                          i2l4776 11A0  
                                        i2l4768 1102                                          i2l4882 41C6  
                                        i2l4874 41B4                                          i2l3994 2B06  
                                        i2l3986 2A96                                          i2l3978 2A42  
                                        i2l4786 1264                                          i2l4890 3C8A  
                                        i2l4884 3FF4                                          i2l4876 41B8  
                                        i2l4980 2E08                                          i2l3996 2B18  
                                        i2l3988 2AAA                                          i2l4796 12C4  
                                        i2l4892 3CA6                                          i2l4878 41BC  
                                        i2l4990 2E38                                          i2l3998 2B1E  
                                        i2l4798 12F8                                          i2l4886 3C62  
                                        i2l4992 2E58                                          i2l4984 2E1E  
                                        i2l4888 3C6E                                   i2putch@txData 0002  
                                        i2l4994 2E68                                          i2l4986 2E22  
                                        i2l6860 2EFE                                          i2l4996 2E74  
                                        i2l4988 2E2E                                          i2l6852 302A  
                                        i2l4998 2E7C                                          i2l6854 0F9A  
                                        i2l6856 12E2                                          i2l6858 2D54  
                                     ??i2_fputc 0007                                          _RCREG1 000FAE  
                                        _RCREG2 000F74                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _RCSTA2 000F71  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0190                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                       ??i2_putch 0002  
                                i2___aodiv@sign 0012                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                  ??_rxEUSART2ISR 006A  
                             read8bit@character 01B2                                          i2abs@a 0013  
                                        _TXSTA1 000FAC                                          _TXSTA2 000F72  
                                        i2_atoi 2CBE                                          i2_ctoa 3652  
                                        i2_dtoa 16C8                                          i2pad@i 001A  
                                        i2pad@p 0017                                          i2pad@w 001C  
                                        i2_stoa 25B0                                          i2_utoa 1B7E  
                                        i2_xtoa 1F4A            __end_of_TMR1_DefaultInterruptHandler 4354  
                  _TMR1_DefaultInterruptHandler 4352                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 00C8                                  i2___aomod@sign 0012  
                                     ??___aodiv 0088                                   i2vfprintf@fmt 0062  
                                     ??___aomod 0088                                          ___wmul 4154  
                                     ??___awdiv 007C                                       ??___lodiv 0088  
                                     ??___lomod 0088                                __end_of_read8bit 28A6  
                                   ?i2_vfprintf 0060                        ?_EUSART1_SetErrorHandler 0078  
                                 txTMR1ISR@mask 00E5                                          clear_0 3BF0  
                                        clear_1 3BFC                                ___awdiv@quotient 007E  
                                        isa$std 000001                     _EUSART2_FramingErrorHandler 0124  
                                        _printf 412C                                          pad@buf 008C  
              ??_EUSART1_SetOverrunErrorHandler 007A                 ?_EUSART1_SetOverrunErrorHandler 0078  
                                        ctoa@fp 0083                                          dtoa@fp 0095  
                                        _strlen 3F1A                               ??i2_EUSART1_Write 0001  
                                        fputc@c 007A                                          fputs@c 0087  
                                        fputs@i 0088                               __end_ofi2___aodiv 242C  
                                        fputs@s 0083                                       ??_isdigit 007A  
                             __end_ofi2___aomod 2B70                               __end_ofi2___lodiv 3224  
                             __end_ofi2___lomod 3584                                    __mediumconst 7A88  
                                     ??_isspace 007A                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                          _EUSART2_Transmit_ISR 3E5A                                          stoa@cp 0093  
                                        stoa@fp 0083                              i2___aomod@dividend 0001  
                              __end_of_vfprintf 3C62                               i2___lodiv@divisor 0009  
                               ??_EUSART1_Write 0078                             _EPWM2_LoadDutyValue 3FC2  
                                        utoa@fp 0095        TMR1_SetInterruptHandler@InterruptHandler 0078  
                             i2___lodiv@counter 0019                         __end_of_TMR1_WriteTimer 407E  
                                        xtoa@fp 0095                                       ??_strncmp 007E  
                               _eusart2RxBuffer 0108                                ?_TMR1_Initialize 0001  
                             __end_ofi2_isdigit 4352                               _SYSTEM_Initialize 41F2  
                               _eusart2TxBuffer 0110                                      __accesstop 0060  
                       __end_of__initialization 3C02                               __end_ofi2_isspace 3F8C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                       ??_EUSART2_RxDataHandler 0001                               __end_ofi2_strncmp 33E2  
                                 __end_ofi2_abs 3EDC                                   __end_ofi2_pad 3A0A  
                                __pcstackCOMRAM 0001                            ?_EPWM2_LoadDutyValue 0078  
                                  __pidataBANK0 4356                                    __pidataBANK1 42AA  
                           ??_SYSTEM_Initialize 007A                           rxEUSART2ISR@character 005E  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 3AA2  
                                 __end_of_fputs 3D46                  ?_EUSART2_SetTxInterruptHandler 0078  
                                 __end_of_putch 42DC                                     i2printf@fmt 0066  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 412C  
                          __end_of_EUSART2_Read 3CFE                                       ?i2___wmul 0001  
                                  read8bit@numb 01B3                                         ??i2_abs 0015  
                      ?_EUSART2_SetErrorHandler 0078                                         ??i2_pad 0019  
                         ?_EUSART2_Transmit_ISR 0001                               ?_EPWM2_Initialize 0001  
                                i2vfpfcnvrt@fmt 0043                                       ?i2_printf 0066  
                                     ?i2_strlen 0001                           i2EUSART1_Write@txData 0001  
                                       ??_fputc 007E                       __end_of_SYSTEM_Initialize 4214  
                                       ??_fputs 0087                              ??_EPWM2_Initialize 0078  
                                       ??_putch 0079                                   _eusart2RxHead 00E1  
                                 _eusart2TxHead 00E4                                      __pbssBANK0 00CE  
                                    __pbssBANK1 0100                                   _eusart2RxTail 00E0  
                                 _eusart2TxTail 00E3                ??_EUSART2_SetFramingErrorHandler 007A  
               ?_EUSART2_SetFramingErrorHandler 0078                                         ?i2_atoi 0007  
                                       ?i2_ctoa 000C                                         ?i2_dtoa 001E  
                                       ?i2_stoa 000C                                         ?i2_utoa 001E  
                                       ?i2_xtoa 001E                                     i2strncmp@_l 0001  
                                   i2strncmp@_r 0003                 __end_of_EUSART1_SetErrorHandler 4336  
                         ??_EPWM2_LoadDutyValue 007A                               rxEUSART2ISR@state 00D5  
                                       ?___wmul 0078                                      ??_TMR1_ISR 0007  
                                       _CCP2CON 000F66                                         _ECCP2AS 000F64  
                                       ?_printf 019E                                         ?_strlen 0078  
        __end_of_EUSART1_SetFramingErrorHandler 432C                  _EUSART1_SetFramingErrorHandler 4322  
                                    ??i2___wmul 0005                           _eusart2RxStatusBuffer 0100  
                          __end_of_rxEUSART2ISR 3042                               i2___lomod@divisor 0009  
                                       _OSCCON2 000FD2                     __end_of_EUSART2_Receive_ISR 37E6  
                             i2___lomod@counter 0011                                      ??i2_printf 005C  
                                       _OSCTUNE 000F9B                                         _PWM2CON 000F65  
                                       _SPBRGH1 000FB0                                         _SPBRGH2 000F76  
                                    ??i2_strlen 0003                                ?_TMR1_WriteTimer 0078  
                              ___lomod@dividend 0078                                         i2_fputc 3AA2  
                                     ?_read8bit 0001                                         i2_fputs 3DD4  
                                       i2atoi@n 000E                                         i2pad@fp 0013  
                                       i2atoi@s 0007                                         i2ctoa@c 000E  
                                       i2_putch 4336                                         i2ctoa@l 0010  
                                       i2ctoa@w 0012                                         i2dtoa@d 0020  
                                       i2dtoa@i 003E                                         i2dtoa@n 0036  
                                       i2dtoa@p 0032                                         i2dtoa@s 0040  
                                       i2dtoa@w 0034                                         i2stoa@i 0018  
                                       i2stoa@l 0020                                         i2stoa@p 001E  
                                       i2stoa@s 000E                                         i2stoa@w 001A  
                                       i2utoa@d 0020                                         i2utoa@i 003C  
                                       i2utoa@n 0034                                         i2utoa@p 0030  
                                       i2utoa@w 0032                                         i2xtoa@c 0040  
                                       i2xtoa@d 0020                                         i2xtoa@i 003E  
                                       i2xtoa@n 0036                                         i2xtoa@p 0032  
                                       i2xtoa@w 0034                                         __Hparam 0000  
                                       __Lparam 0000                  fp__EUSART2_DefaultErrorHandler 0000  
                                       ___aodiv 211A                                         ___aomod 28A6  
                                       ___awdiv 37E6                                         ___lodiv 3042  
                                       ___lomod 33E2                                       ?_vfprintf 00C2  
                                i2vfprintf@cfmt 005A                             _EUSART1_is_rx_ready 4296  
                                  ?i2_vfpfcnvrt 0041                                         __pcinit 3BB8  
               __end_of_EUSART2_SetErrorHandler 4318                                         __ramtop 0600  
                                       __ptext0 011C                                         __ptext1 272E  
                                       __ptext2 412C                                         __ptext3 3C10  
                                       __ptext4 09D4                                         __ptext5 1D7A  
                                       __ptext6 1980                                         __ptext7 33E2  
                                       __ptext8 3042                                         __ptext9 3224  
                       ??i2_EPWM2_LoadDutyValue 0003                  ??_TMR1_DefaultInterruptHandler 0001  
                                     _T1CONbits 000FCD           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 4346            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 4340  
                         _OSCILLATOR_Initialize 4234                          ??_EUSART2_Transmit_ISR 0001  
                                     _T2CONbits 000FBA                                         _isdigit 4024  
                                 _receiveBuffer 014F                                  txTMR1ISR@state 00D7  
                            _EUSART1_Initialize 3D8E                        ??_PIN_MANAGER_Initialize 0078  
                                       _isspace 3D46                       ?_TMR1_SetInterruptHandler 0078  
                                       atoi@neg 0083                               __end_of_txTMR1ISR 2F4E  
                                       main@cmd 01B4                                         _strncmp 3224  
                          end_of_initialization 3C02                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      ??_read8bit 01AA  
                                       fputc@fp 007C                                   __Lmediumconst 7A88  
                   _EUSART1_OverrunErrorHandler 011C                                         fputs@fp 0085  
                           i2___wmul@multiplier 0001                              _EUSART2_Initialize 3B38  
                               i2_EUSART1_Write 4280                               __end_of_vfpfcnvrt 0F02  
                                       postdec1 000FE5                                         postdec2 000FDD  
                            i2___lodiv@dividend 0001                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0194                                    ??i2_vfprintf 005A  
                                    ??_vfprintf 00C8                            ??_EUSART1_Initialize 007A  
                           ?_EUSART2_Initialize 0001                                         strlen@a 007A  
                           _EUSART2_is_rx_ready 4268                                         strlen@s 0078  
                             i2___aodiv@divisor 0009                               i2___aodiv@counter 0011  
                                     i2___aodiv 22A4                                       i2___aomod 2A0C  
                           EUSART1_Write@txData 0078                                       i2___lodiv 3134  
                         ??_EUSART1_is_rx_ready 0078                                       i2___lomod 34B4  
                          ??_EUSART2_Initialize 007A                            ?_EUSART2_is_rx_ready 0001  
                            i2___lodiv@quotient 0011                              __end_ofi2_vfprintf 3CB2  
                                  _EUSART1_Read 4102                                    _EUSART2_Read 3CB2  
                                     i2_isdigit 4350                                  __end_ofi2_atoi 2E08  
                                __end_ofi2_ctoa 371E                                  __end_ofi2_dtoa 1980  
                                     i2_isspace 3F54                                  __end_ofi2_stoa 272E  
                                __end_ofi2_utoa 1D7A                                  __end_ofi2_xtoa 211A  
                 __end_of_EUSART2_RxDataHandler 4102                                       i2atoi@neg 000C  
                  __end_of_INTERRUPT_Initialize 4350                                       i2_strncmp 3304  
                     i2TMR1_WriteTimer@timerVal 0001                                     vfpfcnvrt@ap 00BC  
                                   vfpfcnvrt@cp 019C                                     vfpfcnvrt@fp 00B8  
                                __end_of___wmul 417C                                       i2fputc@fp 0005  
                        ?_OSCILLATOR_Initialize 0001                                       i2fputs@fp 000E  
                              i2___wmul@product 0005                                  __end_of_printf 4154  
                                __end_of_strlen 3F54                             start_initialization 3BB8  
                               ___lodiv@divisor 0080                                 ___lodiv@counter 0090  
                                   __end_of_abs 3E5A                                     __end_of_pad 395C  
                                    ?i2___aodiv 0001                                      ?i2___aomod 0001  
 EUSART2_SetRxInterruptHandler@interruptHandler 0078   EUSART2_SetTxInterruptHandler@interruptHandler 0078  
                                 read8bit@digit 01B1                                    i2vfpfcnvrt@c 004F  
                                    ?i2___lodiv 0001                                      ?i2___lomod 0001  
                                   putch@txData 0079                           ??_EUSART2_is_rx_ready 0078  
                         __end_of_EUSART1_Write 4268                                       i2strlen@a 0003  
                                     i2strlen@s 0001                         __end_ofi2_EUSART1_Write 4296  
                                      ??i2_atoi 0009                                        ??i2_ctoa 000F  
                                      ??i2_dtoa 0028                                        ??i2_stoa 0010  
                                      ??i2_utoa 0028                                        ??i2_xtoa 0028  
                                    ?i2_isdigit 0001                                    _rxEUSART2ISR 2F4E  
        __end_of_EUSART2_SetOverrunErrorHandler 4304                  _EUSART2_SetOverrunErrorHandler 42FA  
                                    ?i2_isspace 0001                                     vfprintf@fmt 00C4  
                                  i2vfprintf@ap 0064                                 i2vfpfcnvrt@done 004B  
                                  i2vfprintf@fp 0060                                        ??___wmul 007C  
                                    ?i2_strncmp 0001                                     __pdataBANK0 00E5  
                                   __pdataBANK1 01B7                                read8bit@maxValue 01AF  
                                      ??_printf 00CA                               i2___aomod@divisor 0009  
                                      ??_strlen 007A                               i2___aomod@counter 0011  
                i2EPWM2_LoadDutyValue@dutyValue 0001                                  _eusart2RxCount 00DF  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 018F  
                              ___aodiv@dividend 0078                         fp__EUSART2_Transmit_ISR 0000  
                                 rxEUSART2ISR@i 00D6                                        ?i2_fputc 0003  
                                      ?i2_fputs 000C                ??_EUSART1_SetFramingErrorHandler 007A  
               ?_EUSART1_SetFramingErrorHandler 0078                 ??_EUSART2_SetRxInterruptHandler 007A  
                                      ?i2_putch 0001                                      txTMR1ISR@i 00D8  
                   __end_of_EPWM2_LoadDutyValue 3FF4                          fp__EUSART2_Receive_ISR 0000  
                                     _character 01C9                                       _bitPeriod 01B7  
                        _PIN_MANAGER_Initialize 40AA                                       _dtoa$2074 00A7  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 42E6  
                                 __pmediumconst 7A88                                        ?___aodiv 0078  
                                      ?___aomod 0078                                        ?___awdiv 0078  
                              ___aodiv@quotient 008A                                        ?___lodiv 0078  
                                      ?___lomod 0078               _EUSART2_TxDefaultInterruptHandler 0128  
                  ??_INTERRUPT_InterruptManager 006C                                 ___lomod@divisor 0080  
                               ___lomod@counter 0088                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 0078                   __end_ofi2_EPWM2_LoadDutyValue 4024  
                          _EUSART1_ErrorHandler 011A                    ?_EUSART2_DefaultErrorHandler 0001  
                                      ?_isspace 0078                         _EUSART1_SetErrorHandler 432C  
                                   ??i2___aodiv 0011                                     ??i2___aomod 0011  
                                   ??i2___lodiv 0011                                     ??i2___lomod 0011  
                                      ?_strncmp 0078                            _INTERRUPT_Initialize 434C  
                                     _txTMR1ISR 2E08                                ?i2_EUSART1_Write 0001  
                                ___wmul@product 007C         EUSART1_SetErrorHandler@interruptHandler 0078  
       EUSART2_SetErrorHandler@interruptHandler 0078                                        _PIE1bits 000F9D  
                                      _PIE3bits 000FA3                              i2___lomod@dividend 0001  
                                   ??i2_isdigit 0003                                i2_vfpfcnvrt$2122 004D  
                                   ??i2_isspace 0003                                        i2u330_40 2A1E  
                                      i2u410_40 170C                                        i2u330_41 2A1A  
                                      i2u410_41 1708                                        i2u403_40 3666  
                                      i2u323_40 22B6                                        i2u331_40 2A50  
                                      i2u411_40 173C                                        i2u403_41 3662  
                                      i2u323_41 22B2                                        i2u331_41 2A4C  
                                      i2u411_41 1738                                        i2u404_40 368C  
                                      i2u324_40 22E8                                        i2u332_40 2A8E  
                                      i2u420_40 1948                                        i2u412_40 1758  
                                      i2u340_40 34D2                                        i2u404_41 3688  
                                      i2u324_41 22E4                                        i2u332_41 2A8A  
                                      i2u420_41 1944                                        i2u412_41 1754  
                                      i2u340_41 34CE                                        i2u405_40 36AC  
                                      i2u333_40 2AB8                                        i2u413_40 1784  
                                      i2u341_40 34FC                                        i2u405_41 36A8  
                                      i2u325_41 2312                                        i2u333_41 2AB4  
                                      i2u413_41 1780                                        i2u421_41 25BA  
                                      i2u341_41 34F8                                        i2u406_40 36FA  
                                      i2u326_40 2336                                        i2u334_40 2AE6  
                                      i2u414_40 179A                                        i2u350_40 3FB4  
                                      i2u422_40 25DC                                        i2u342_40 352A  
                                      i2u430_40 1B8E                                        i2u406_41 36F6  
                                      i2u326_41 2332                                        i2u334_41 2AE2  
                                      i2u414_41 1796                                        i2u350_41 3FB0  
                                      i2u422_41 25D8                                        i2u342_41 3526  
                                      i2u430_41 1B8A                                        i2u503_40 3E6C  
                                      i2u511_40 3EFE                                        i2u407_40 370A  
                                      i2u327_40 2360                                        i2u335_40 2B2E  
                                      i2u343_40 396C                                        i2u415_40 18D6  
                                      i2u423_40 260E                                        i2u431_40 1BAA  
                                      i2u510_48 37C6                                        i2u503_41 3E68  
                                      i2u511_41 3EFA                                        i2u407_41 3706  
                                      i2u327_41 235C                                        i2u335_41 2B2A  
                                      i2u343_41 3968                                        i2u415_41 18D2  
                                      i2u423_41 260A                                        i2u431_41 1BA6  
                                      i2u510_49 37DC                                        i2u504_40 3E8E  
                                      i2u328_40 23A0                                        i2u344_40 398E  
                                      i2u416_40 18F4                                        i2u408_40 16F8  
                                      i2u424_40 262C                                        i2u432_40 1CF6  
                                      i2u440_40 2054                                        i2u504_41 3E8A  
                                      i2u328_41 239C                                        i2u344_41 398A  
                                      i2u416_41 18F0                                        i2u408_41 16F2  
                                      i2u424_41 2628                                        i2u336_41 313A  
                                      i2u432_41 1CF2                                        i2u440_45 2042  
                                      i2u512_48 3F04                                        i2u329_40 23EA  
                                      i2u345_40 39E4                                        i2u417_40 190E  
                                      i2u409_40 16FA                                        i2u425_40 2658  
                                      i2u337_40 315E                                        i2u433_40 1D14  
                                      i2u441_40 2096                                        i2u505_40 373E  
                                      i2u512_49 3F18                                        i2u329_41 23E6  
                                      i2u345_41 39E0                                        i2u417_41 190A  
                                      i2u425_41 2654                                        i2u337_41 315A  
                                      i2u433_41 1D10                                        i2u441_41 2092  
                                      i2u505_41 373A                                        _PIR1bits 000F9E  
                                      i2u282_40 4290                                        i2u290_40 3B24  
                                      i2u346_40 39F4                                        i2u418_40 1928  
                                      i2u426_40 2692                                        i2u450_40 332E  
                                      i2u338_40 3188                                        i2u434_40 1D2E  
                                      i2u442_40 20B4                                        i2u282_41 428C  
                                      i2u290_41 3B20                                        i2u346_41 39F0  
                                      i2u418_41 1924                                        i2u426_41 268E  
                                      i2u450_41 332A                                        i2u338_41 3184  
                                      i2u434_41 1D2A                                        i2u442_41 20B0  
                                      i2u347_40 3EB6                                        i2u419_40 1938  
                                      i2u427_40 26E2                                        i2u451_40 3364  
                                      i2u339_40 31C8                                        i2u435_40 1D48  
                                      i2u443_40 20CE                                        i2u507_40 3776  
                                      i2u506_48 3754                                        i2u347_41 3EB2  
                                      i2u419_41 1934                                        i2u427_41 26DE  
                                      i2u451_41 3360                                        i2u339_41 31C4  
                                      i2u435_41 1D44                                        i2u443_41 20CA  
                                      i2u507_41 3772                                        i2u506_49 3768  
                                      i2u348_40 3F68                                        i2u292_40 3E16  
                                      i2u428_40 26F2                                        i2u452_40 3380  
                                      i2u436_40 1D58                                        i2u444_40 20E8  
                                      i2u540_40 00CE                                        i2u348_41 3F64  
                                      i2u292_41 3E12                                        i2u428_41 26EE  
                                      i2u452_41 337C                                        i2u436_41 1D54  
                                      i2u444_41 20E4                                        i2u540_41 00CA  
                                      i2u349_40 3F8A                                        i2u429_40 272C  
                                      i2u453_40 3392                                        i2u445_40 20F8  
                                      i2u437_40 1F5A                                        i2u509_40 37C0  
                                      i2u508_48 378E                                        i2u541_40 00DC  
                                      i2u533_40 0048                                        i2u349_41 3F86  
                                      i2u429_41 2728                                        i2u453_41 338E  
                                      i2u445_41 20F4                                        i2u437_41 1F56  
                                      i2u509_41 37BC                                        i2u508_49 37A2  
                                      i2u541_41 00D8                                        i2u533_41 0044  
                                      _PIR3bits 000FA4                                        i2u446_40 2CF2  
                                      i2u454_40 33BC                                        i2u438_40 1F76  
                                      i2u470_40 0FDE                                        i2u526_40 2F64  
                                      i2u534_40 0056                                        i2u446_41 2CEE  
                                      i2u454_41 33B8                                        i2u438_41 1F72  
                                      i2u470_41 0FDA                                        i2u526_41 2F60  
                                      i2u534_41 0052                                        i2u447_40 2D22  
                                      i2u287_40 3AB4                                        i2u439_40 1FE0  
                                      i2u471_40 1024                                        i2u527_40 2F9C  
                                      i2u535_40 0064                                        i2u447_41 2D1E  
                                      i2u287_41 3AB0                                        i2u439_41 1FDC  
                                      i2u471_41 1020                                        i2u527_41 2F98  
                                      i2u535_41 0060                                        i2u448_40 2DD0  
                                      i2u288_40 3AC6                                        i2u480_40 1376  
                                      i2u472_40 1098                                        i2u528_40 2FBE  
                                      i2u448_41 2DCC                                        i2u288_41 3AC2  
                                      i2u480_41 1372                                        i2u472_41 1094  
                                      i2u528_41 2FBA                                        i2u481_40 40FA  
                                      i2u449_40 2DE2                                        i2u289_40 3AEE  
                                      i2u473_40 10BC                                        i2u529_40 2FD0  
                                      i2u537_40 0092                                        i2u536_48 006A  
                                      i2u481_41 40F6                                        i2u449_41 2DDE  
                                      i2u289_41 3AEA                                        i2u473_41 10B8  
                                      i2u529_41 2FCC                                        i2u537_41 008E  
                                      i2u536_49 0080                                        i2u490_40 2E8C  
                                      i2u474_40 112E                                        i2u538_40 00A0  
                                      i2u490_41 2E88                                        i2u474_41 112A  
                                      i2u538_41 009C                                        i2u483_40 41B2  
                                      i2u491_40 2EBE                                        i2u475_40 114A  
                                      i2u483_41 41AE                                        i2u491_41 2EBA  
                                      i2u475_41 1146                                        i2u492_40 2ECE  
                                      i2u476_40 11EC                                        i2u468_40 0F26  
                                      i2u484_40 3CA6                                        i2u539_48 00A6  
                                      i2u492_41 2ECA                                        i2u476_41 11E8  
                                      i2u468_41 0F22                                        i2u484_41 3CA2  
                                      i2u539_49 00BC                                        i2u477_40 1208  
                                      i2u469_40 0FBA                                        i2u477_41 1204  
                                      i2u469_41 0FB6                                        i2u478_40 131C  
                                      i2u478_41 1318                                        i2u479_40 1352  
                                      i2u479_41 134E                                        i2u488_40 2E1A  
                                      i2u488_41 2E16                                        i2u489_40 2E58  
                                      i2u489_41 2E54                                        _RCONbits 000FD0  
                                      _TMR1_ISR 3EDC                                        _PSTR2CON 000F63  
                                   ??i2_strncmp 0007                                       _vfpfcnvrt 09D4  
                                     _xtoa$2101 00A7                               ??_TMR1_Initialize 007A  
                             ___wmul@multiplier 0078                                        i2___wmul 41CC  
                                  _isspace$2159 007C                                        i2_printf 417C  
                                      i2pad@buf 0015                                        i2ctoa@fp 000C  
                 ??_EUSART2_DefaultErrorHandler 0001                                        i2dtoa@fp 001E  
                                      i2_strlen 3F8C                                      vfpfcnvrt@c 018F  
                                   _INTCON2bits 000FF1                                       copy_data0 3BCC  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                                      ?_txTMR1ISR 0001  
                       _EUSART2_SetErrorHandler 430E                               ??_TMR2_Initialize 0078  
                                     read8bit@i 01B0                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                     _EUSART2_OverrunErrorHandler 0122  
                                      i2utoa@fp 001E                                        i2xtoa@fp 001E  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 42FA  
                 _EUSART2_SetRxInterruptHandler 42F0                                _EPWM2_Initialize 4214  
                             i2_TMR1_WriteTimer 41A4                                      vfprintf@ap 00C6  
                                      __Lrparam 0000                                      vfprintf@fp 00C2  
                            ?i2_TMR1_WriteTimer 0001                         ??_OSCILLATOR_Initialize 0078  
                         i2___wmul@multiplicand 0003                                      ?_vfpfcnvrt 00B8  
                               ___aodiv@divisor 0080                        _TMR1_SetInterruptHandler 42DC  
                               ___aodiv@counter 0088                             ??i2_TMR1_WriteTimer 0003  
                            i2vfpfcnvrt@convarg 0050                           _TMR1_InterruptHandler 0118  
                     ??_EUSART1_SetErrorHandler 007A                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 42AA                            _EUSART2_ErrorHandler 0120  
                                      __ptext10 242C                                        __ptext11 3F1A  
                                      __ptext20 42CE                                        __ptext12 140E  
                                      __ptext21 4250                                        __ptext13 38AC  
                                    _T1GCONbits 000FCC                                        __ptext30 42BE  
                                      __ptext22 2B70                                        __ptext14 3CFE  
                                      __ptext31 407E                                        __ptext23 3D46  
                                      __ptext15 3E18                                        __ptext40 4304  
                                      __ptext32 42DC                                        __ptext24 4024  
                                      __ptext16 28A6                                        __ptext41 430E  
                                      __ptext33 40AA                                        __ptext25 4154  
                                      __ptext17 211A                                        __ptext50 3FC2  
                                      __ptext42 3D8E                                        __ptext34 4234  
                                      __ptext26 37E6                                        __ptext18 3584  
                                      __ptext43 4318                                        __ptext35 434C  
                                      __ptext27 4102                                        __ptext19 3A0A  
                                      __ptext60 3134                                        __ptext52 371E  
                                      __ptext44 4322                                        __ptext36 3B38  
                                      __ptext28 4052                                        __ptext61 3304  
                                      __ptext53 2F4E                                        __ptext45 432C  
                                      __ptext37 42E6                                        __ptext29 41F2  
                                      __ptext70 3652                                        __ptext62 25B0  
                                      __ptext54 417C                                        __ptext46 4214  
                                      __ptext38 42F0                                        __ptext71 3AA2  
                                      __ptext63 3F8C                                        __ptext55 3C62  
                                      __ptext47 4268                                        __ptext39 42FA  
                                      __ptext80 2E08                                        __ptext72 4336  
                                      __ptext64 16C8                                        __ptext56 0F02  
                                      __ptext48 3CB2                                        __ptext81 41A4  
                                      __ptext73 4280                                        __ptext65 395C  
                                      __ptext57 1F4A                                        __ptext49 4296  
                                      __ptext82 3FF4                                        __ptext74 2CBE  
                                      __ptext66 3DD4                                        __ptext58 1B7E  
                                      __ptext83 3E5A                                        __ptext75 3F54  
                                      __ptext67 3E9C                                        __ptext59 34B4  
                                      __ptext84 4340                                        __ptext76 4350  
                                      __ptext68 2A0C                                        __ptext85 4354  
                                      __ptext77 41CC                                        __ptext69 22A4  
                                      __ptext86 4346                                        __ptext78 3EDC  
                                      __ptext87 40D6                                        __ptext79 4352  
                                      __ptext88 0000                                        _read8bit 272E  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 4356  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 4354                                        _received 012A  
                                   _receiveBusy 00D9                       __end_ofi2_TMR1_WriteTimer 41CC  
                                     stoa@F1157 01C1  EUSART1_SetOverrunErrorHandler@interruptHandler 0078  
EUSART2_SetOverrunErrorHandler@interruptHandler 0078                                        isa$xinst 000000  
                                      int$flags 005F                                        _vfprintf 3C10  
            __end_of_INTERRUPT_InterruptManager 0118                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 40D6                                       printf@fmt 019E  
                             ??_TMR1_WriteTimer 007A                     _EUSART1_FramingErrorHandler 011E  
                              ___aomod@dividend 0078                ??_EUSART2_SetOverrunErrorHandler 007A  
               ?_EUSART2_SetOverrunErrorHandler 0078                                  _vfpfcnvrt$2122 0192  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 4280  
                                      isdigit@c 0078                          ??_INTERRUPT_Initialize 0078  
                     ??_EUSART2_SetErrorHandler 007A                                        intlevel2 0000  
                                   ??_txTMR1ISR 0005                    EPWM2_LoadDutyValue@dutyValue 0078  
                                      isspace@c 0078                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 4322                  _EUSART1_SetOverrunErrorHandler 4318  
                                    _RCSTA1bits 000FAB                                      _RCSTA2bits 000F71  
                                     strncmp@_l 0078                                       strncmp@_r 007A  
                                      printf@ap 00CA  EUSART1_SetFramingErrorHandler@interruptHandler 0078  
EUSART2_SetFramingErrorHandler@interruptHandler 0078                  ?_EUSART2_SetRxInterruptHandler 0078  
                               ___aomod@divisor 0080                                   ??i2_vfpfcnvrt 0047  
                                   ??_vfpfcnvrt 00BE                                        stoa@nuls 0088  
                               ___aomod@counter 0088                              _eusart1RxLastError 00DD  
                           _EUSART2_Receive_ISR 371E                                        strncmp@l 007F  
                                      strncmp@n 007C                                        strncmp@r 0081  
                                  ___aodiv@sign 0089                  __end_of_PIN_MANAGER_Initialize 40D6  
               ??_EUSART2_SetTxInterruptHandler 007A                              i2___aodiv@dividend 0001  
                          ?_EUSART2_Receive_ISR 0001                              _eusart2RxLastError 00DE  
                                  ___aomod@sign 0089                                 _TMR1_Initialize 407E  
             _EUSART2_RxDefaultInterruptHandler 0126  
