

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 26 17:26:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 06/04/2022 GMT
    58                           ; 
    59                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F25K22 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
    93   000000                     
    94 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
    95   000000                     
    96 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
    97   000000                     
    98 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    99   000000                     
   100 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   101   000000                     
   102 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   103   000000                     
   104                           	psect	idataBANK0
   105   0063A2                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for main@F6152
   109   0063A2  D055               	dw	53333
   110   0063A4  3415               	dw	13333
   111   0063A6  1A0A               	dw	6666
   112   0063A8  0682               	dw	1666
   113   0063AA  0341               	dw	833
   114   000000                     _ANSELA	set	3896
   115   000000                     _ANSELB	set	3897
   116   000000                     _ANSELC	set	3898
   117   000000                     _TXREG1	set	4013
   118   000000                     _RCREG1	set	4014
   119   000000                     _SPBRG1	set	4015
   120   000000                     _TXSTA1	set	4012
   121   000000                     _TXREG2	set	3955
   122   000000                     _RCREG2	set	3956
   123   000000                     _SPBRG2	set	3957
   124   000000                     _TXSTA2	set	3954
   125   000000                     _RCSTA2	set	3953
   126   000000                     _CCPTMRS0bits	set	3913
   127   000000                     _CCPR2L	set	3943
   128   000000                     _CCPR2H	set	3944
   129   000000                     _PSTR2CON	set	3939
   130   000000                     _PWM2CON	set	3941
   131   000000                     _ECCP2AS	set	3940
   132   000000                     _CCP2CON	set	3942
   133   000000                     _T1CON	set	4045
   134   000000                     _TMR1L	set	4046
   135   000000                     _TMR1H	set	4047
   136   000000                     _PIR1bits	set	3998
   137   000000                     _PR2	set	4027
   138   000000                     _TMR1	set	4046
   139   000000                     _RCSTA1bits	set	4011
   140   000000                     _TXSTA1bits	set	4012
   141   000000                     _RCSTA2bits	set	3953
   142   000000                     _TXSTA2bits	set	3954
   143   000000                     _T1GCONbits	set	4044
   144   000000                     _T1CONbits	set	4045
   145   000000                     _T2CONbits	set	4026
   146   000000                     _PLLRDY	set	32407
   147   000000                     _T1GCON	set	4044
   148   000000                     _TMR2	set	4028
   149   000000                     _PIR3bits	set	4004
   150   000000                     _T2CON	set	4026
   151   000000                     _OSCCON2	set	4050
   152   000000                     _OSCCON	set	4051
   153   000000                     _INTCON2bits	set	4081
   154   000000                     _BAUDCON2	set	3952
   155   000000                     _WPUB	set	3937
   156   000000                     _LATA	set	3977
   157   000000                     _SPBRGH2	set	3958
   158   000000                     _RCSTA1	set	4011
   159   000000                     _BAUDCON1	set	4024
   160   000000                     _SPBRGH1	set	4016
   161   000000                     _TRISA	set	3986
   162   000000                     _LATC	set	3979
   163   000000                     _LATB	set	3978
   164   000000                     _OSCTUNE	set	3995
   165   000000                     _TRISC	set	3988
   166   000000                     _TRISB	set	3987
   167   000000                     _INTCONbits	set	4082
   168                           
   169                           	psect	mediumconst
   170   007C9A                     __pmediumconst:
   171                           	callstack 0
   172   007C9A  00                 	db	0
   173   007C9B                     STR_20:
   174   007C9B  70                 	db	112	;'p'
   175   007C9C  3A                 	db	58	;':'
   176   007C9D  20                 	db	32
   177   007C9E  73                 	db	115	;'s'
   178   007C9F  65                 	db	101	;'e'
   179   007CA0  6E                 	db	110	;'n'
   180   007CA1  64                 	db	100	;'d'
   181   007CA2  20                 	db	32
   182   007CA3  31                 	db	49	;'1'
   183   007CA4  20                 	db	32
   184   007CA5  70                 	db	112	;'p'
   185   007CA6  75                 	db	117	;'u'
   186   007CA7  6C                 	db	108	;'l'
   187   007CA8  73                 	db	115	;'s'
   188   007CA9  65                 	db	101	;'e'
   189   007CAA  20                 	db	32
   190   007CAB  6F                 	db	111	;'o'
   191   007CAC  66                 	db	102	;'f'
   192   007CAD  20                 	db	32
   193   007CAE  33                 	db	51	;'3'
   194   007CAF  38                 	db	56	;'8'
   195   007CB0  6B                 	db	107	;'k'
   196   007CB1  48                 	db	72	;'H'
   197   007CB2  7A                 	db	122	;'z'
   198   007CB3  20                 	db	32
   199   007CB4  49                 	db	73	;'I'
   200   007CB5  52                 	db	82	;'R'
   201   007CB6  20                 	db	32
   202   007CB7  69                 	db	105	;'i'
   203   007CB8  6C                 	db	108	;'l'
   204   007CB9  6C                 	db	108	;'l'
   205   007CBA  75                 	db	117	;'u'
   206   007CBB  6D                 	db	109	;'m'
   207   007CBC  69                 	db	105	;'i'
   208   007CBD  6E                 	db	110	;'n'
   209   007CBE  61                 	db	97	;'a'
   210   007CBF  74                 	db	116	;'t'
   211   007CC0  69                 	db	105	;'i'
   212   007CC1  6F                 	db	111	;'o'
   213   007CC2  6E                 	db	110	;'n'
   214   007CC3  20                 	db	32
   215   007CC4  77                 	db	119	;'w'
   216   007CC5  69                 	db	105	;'i'
   217   007CC6  74                 	db	116	;'t'
   218   007CC7  68                 	db	104	;'h'
   219   007CC8  20                 	db	32
   220   007CC9  61                 	db	97	;'a'
   221   007CCA  20                 	db	32
   222   007CCB  64                 	db	100	;'d'
   223   007CCC  75                 	db	117	;'u'
   224   007CCD  72                 	db	114	;'r'
   225   007CCE  61                 	db	97	;'a'
   226   007CCF  74                 	db	116	;'t'
   227   007CD0  69                 	db	105	;'i'
   228   007CD1  6F                 	db	111	;'o'
   229   007CD2  6E                 	db	110	;'n'
   230   007CD3  20                 	db	32
   231   007CD4  6F                 	db	111	;'o'
   232   007CD5  66                 	db	102	;'f'
   233   007CD6  20                 	db	32
   234   007CD7  25                 	db	37
   235   007CD8  64                 	db	100	;'d'
   236   007CD9  20                 	db	32
   237   007CDA  31                 	db	49	;'1'
   238   007CDB  3A                 	db	58	;':'
   239   007CDC  31                 	db	49	;'1'
   240   007CDD  20                 	db	32
   241   007CDE  70                 	db	112	;'p'
   242   007CDF  72                 	db	114	;'r'
   243   007CE0  65                 	db	101	;'e'
   244   007CE1  73                 	db	115	;'s'
   245   007CE2  63                 	db	99	;'c'
   246   007CE3  61                 	db	97	;'a'
   247   007CE4  6C                 	db	108	;'l'
   248   007CE5  65                 	db	101	;'e'
   249   007CE6  64                 	db	100	;'d'
   250   007CE7  20                 	db	32
   251   007CE8  54                 	db	84	;'T'
   252   007CE9  4D                 	db	77	;'M'
   253   007CEA  52                 	db	82	;'R'
   254   007CEB  31                 	db	49	;'1'
   255   007CEC  20                 	db	32
   256   007CED  63                 	db	99	;'c'
   257   007CEE  6F                 	db	111	;'o'
   258   007CEF  75                 	db	117	;'u'
   259   007CF0  6E                 	db	110	;'n'
   260   007CF1  74                 	db	116	;'t'
   261   007CF2  73                 	db	115	;'s'
   262   007CF3  0D                 	db	13
   263   007CF4  0A                 	db	10
   264   007CF5  00                 	db	0
   265   007CF6                     STR_4:
   266   007CF6  49                 	db	73	;'I'
   267   007CF7  6E                 	db	110	;'n'
   268   007CF8  73                 	db	115	;'s'
   269   007CF9  74                 	db	116	;'t'
   270   007CFA  61                 	db	97	;'a'
   271   007CFB  6C                 	db	108	;'l'
   272   007CFC  6C                 	db	108	;'l'
   273   007CFD  20                 	db	32
   274   007CFE  61                 	db	97	;'a'
   275   007CFF  20                 	db	32
   276   007D00  6A                 	db	106	;'j'
   277   007D01  75                 	db	117	;'u'
   278   007D02  6D                 	db	109	;'m'
   279   007D03  70                 	db	112	;'p'
   280   007D04  65                 	db	101	;'e'
   281   007D05  72                 	db	114	;'r'
   282   007D06  20                 	db	32
   283   007D07  77                 	db	119	;'w'
   284   007D08  69                 	db	105	;'i'
   285   007D09  72                 	db	114	;'r'
   286   007D0A  65                 	db	101	;'e'
   287   007D0B  20                 	db	32
   288   007D0C  66                 	db	102	;'f'
   289   007D0D  72                 	db	114	;'r'
   290   007D0E  6F                 	db	111	;'o'
   291   007D0F  6D                 	db	109	;'m'
   292   007D10  20                 	db	32
   293   007D11  52                 	db	82	;'R'
   294   007D12  43                 	db	67	;'C'
   295   007D13  30                 	db	48	;'0'
   296   007D14  20                 	db	32
   297   007D15  74                 	db	116	;'t'
   298   007D16  6F                 	db	111	;'o'
   299   007D17  20                 	db	32
   300   007D18  52                 	db	82	;'R'
   301   007D19  42                 	db	66	;'B'
   302   007D1A  37                 	db	55	;'7'
   303   007D1B  20                 	db	32
   304   007D1C  4F                 	db	79	;'O'
   305   007D1D  4E                 	db	78	;'N'
   306   007D1E  4C                 	db	76	;'L'
   307   007D1F  59                 	db	89	;'Y'
   308   007D20  20                 	db	32
   309   007D21  41                 	db	65	;'A'
   310   007D22  46                 	db	70	;'F'
   311   007D23  54                 	db	84	;'T'
   312   007D24  45                 	db	69	;'E'
   313   007D25  52                 	db	82	;'R'
   314   007D26  20                 	db	32
   315   007D27  75                 	db	117	;'u'
   316   007D28  6E                 	db	110	;'n'
   317   007D29  70                 	db	112	;'p'
   318   007D2A  6C                 	db	108	;'l'
   319   007D2B  75                 	db	117	;'u'
   320   007D2C  67                 	db	103	;'g'
   321   007D2D  67                 	db	103	;'g'
   322   007D2E  69                 	db	105	;'i'
   323   007D2F  6E                 	db	110	;'n'
   324   007D30  67                 	db	103	;'g'
   325   007D31  20                 	db	32
   326   007D32  50                 	db	80	;'P'
   327   007D33  49                 	db	73	;'I'
   328   007D34  43                 	db	67	;'C'
   329   007D35  4B                 	db	75	;'K'
   330   007D36  69                 	db	105	;'i'
   331   007D37  74                 	db	116	;'t'
   332   007D38  33                 	db	51	;'3'
   333   007D39  0D                 	db	13
   334   007D3A  0A                 	db	10
   335   007D3B  00                 	db	0
   336   007D3C                     STR_7:
   337   007D3C  2D                 	db	45
   338   007D3D  2D                 	db	45
   339   007D3E  2D                 	db	45
   340   007D3F  2D                 	db	45
   341   007D40  2D                 	db	45
   342   007D41  2D                 	db	45
   343   007D42  2D                 	db	45
   344   007D43  2D                 	db	45
   345   007D44  2D                 	db	45
   346   007D45  2D                 	db	45
   347   007D46  2D                 	db	45
   348   007D47  2D                 	db	45
   349   007D48  2D                 	db	45
   350   007D49  2D                 	db	45
   351   007D4A  2D                 	db	45
   352   007D4B  2D                 	db	45
   353   007D4C  2D                 	db	45
   354   007D4D  2D                 	db	45
   355   007D4E  2D                 	db	45
   356   007D4F  2D                 	db	45
   357   007D50  2D                 	db	45
   358   007D51  2D                 	db	45
   359   007D52  2D                 	db	45
   360   007D53  2D                 	db	45
   361   007D54  2D                 	db	45
   362   007D55  2D                 	db	45
   363   007D56  2D                 	db	45
   364   007D57  2D                 	db	45
   365   007D58  2D                 	db	45
   366   007D59  2D                 	db	45
   367   007D5A  2D                 	db	45
   368   007D5B  2D                 	db	45
   369   007D5C  2D                 	db	45
   370   007D5D  2D                 	db	45
   371   007D5E  2D                 	db	45
   372   007D5F  2D                 	db	45
   373   007D60  2D                 	db	45
   374   007D61  2D                 	db	45
   375   007D62  2D                 	db	45
   376   007D63  2D                 	db	45
   377   007D64  2D                 	db	45
   378   007D65  2D                 	db	45
   379   007D66  2D                 	db	45
   380   007D67  2D                 	db	45
   381   007D68  2D                 	db	45
   382   007D69  2D                 	db	45
   383   007D6A  2D                 	db	45
   384   007D6B  2D                 	db	45
   385   007D6C  2D                 	db	45
   386   007D6D  0D                 	db	13
   387   007D6E  0A                 	db	10
   388   007D6F  00                 	db	0
   389   007D70                     STR_19:
   390   007D70  62                 	db	98	;'b'
   391   007D71  3A                 	db	58	;':'
   392   007D72  20                 	db	32
   393   007D73  73                 	db	115	;'s'
   394   007D74  65                 	db	101	;'e'
   395   007D75  74                 	db	116	;'t'
   396   007D76  20                 	db	32
   397   007D77  74                 	db	116	;'t'
   398   007D78  68                 	db	104	;'h'
   399   007D79  65                 	db	101	;'e'
   400   007D7A  20                 	db	32
   401   007D7B  42                 	db	66	;'B'
   402   007D7C  61                 	db	97	;'a'
   403   007D7D  75                 	db	117	;'u'
   404   007D7E  64                 	db	100	;'d'
   405   007D7F  20                 	db	32
   406   007D80  72                 	db	114	;'r'
   407   007D81  61                 	db	97	;'a'
   408   007D82  74                 	db	116	;'t'
   409   007D83  65                 	db	101	;'e'
   410   007D84  20                 	db	32
   411   007D85  6F                 	db	111	;'o'
   412   007D86  66                 	db	102	;'f'
   413   007D87  20                 	db	32
   414   007D88  74                 	db	116	;'t'
   415   007D89  68                 	db	104	;'h'
   416   007D8A  65                 	db	101	;'e'
   417   007D8B  20                 	db	32
   418   007D8C  73                 	db	115	;'s'
   419   007D8D  65                 	db	101	;'e'
   420   007D8E  6E                 	db	110	;'n'
   421   007D8F  74                 	db	116	;'t'
   422   007D90  20                 	db	32
   423   007D91  63                 	db	99	;'c'
   424   007D92  68                 	db	104	;'h'
   425   007D93  61                 	db	97	;'a'
   426   007D94  72                 	db	114	;'r'
   427   007D95  61                 	db	97	;'a'
   428   007D96  63                 	db	99	;'c'
   429   007D97  74                 	db	116	;'t'
   430   007D98  65                 	db	101	;'e'
   431   007D99  72                 	db	114	;'r'
   432   007D9A  73                 	db	115	;'s'
   433   007D9B  0D                 	db	13
   434   007D9C  0A                 	db	10
   435   007D9D  00                 	db	0
   436   007D9E                     STR_28:
   437   007D9E  43                 	db	67	;'C'
   438   007D9F  68                 	db	104	;'h'
   439   007DA0  6F                 	db	111	;'o'
   440   007DA1  6F                 	db	111	;'o'
   441   007DA2  73                 	db	115	;'s'
   442   007DA3  65                 	db	101	;'e'
   443   007DA4  20                 	db	32
   444   007DA5  74                 	db	116	;'t'
   445   007DA6  68                 	db	104	;'h'
   446   007DA7  65                 	db	101	;'e'
   447   007DA8  20                 	db	32
   448   007DA9  69                 	db	105	;'i'
   449   007DAA  6E                 	db	110	;'n'
   450   007DAB  64                 	db	100	;'d'
   451   007DAC  65                 	db	101	;'e'
   452   007DAD  78                 	db	120	;'x'
   453   007DAE  20                 	db	32
   454   007DAF  6F                 	db	111	;'o'
   455   007DB0  66                 	db	102	;'f'
   456   007DB1  20                 	db	32
   457   007DB2  74                 	db	116	;'t'
   458   007DB3  68                 	db	104	;'h'
   459   007DB4  65                 	db	101	;'e'
   460   007DB5  20                 	db	32
   461   007DB6  74                 	db	116	;'t'
   462   007DB7  61                 	db	97	;'a'
   463   007DB8  72                 	db	114	;'r'
   464   007DB9  67                 	db	103	;'g'
   465   007DBA  65                 	db	101	;'e'
   466   007DBB  74                 	db	116	;'t'
   467   007DBC  20                 	db	32
   468   007DBD  62                 	db	98	;'b'
   469   007DBE  61                 	db	97	;'a'
   470   007DBF  75                 	db	117	;'u'
   471   007DC0  64                 	db	100	;'d'
   472   007DC1  20                 	db	32
   473   007DC2  72                 	db	114	;'r'
   474   007DC3  61                 	db	97	;'a'
   475   007DC4  74                 	db	116	;'t'
   476   007DC5  65                 	db	101	;'e'
   477   007DC6  0D                 	db	13
   478   007DC7  0A                 	db	10
   479   007DC8  00                 	db	0
   480   007DC9                     STR_5:
   481   007DC9  49                 	db	73	;'I'
   482   007DCA  6E                 	db	110	;'n'
   483   007DCB  73                 	db	115	;'s'
   484   007DCC  74                 	db	116	;'t'
   485   007DCD  61                 	db	97	;'a'
   486   007DCE  6C                 	db	108	;'l'
   487   007DCF  6C                 	db	108	;'l'
   488   007DD0  20                 	db	32
   489   007DD1  61                 	db	97	;'a'
   490   007DD2  20                 	db	32
   491   007DD3  6A                 	db	106	;'j'
   492   007DD4  75                 	db	117	;'u'
   493   007DD5  6D                 	db	109	;'m'
   494   007DD6  70                 	db	112	;'p'
   495   007DD7  65                 	db	101	;'e'
   496   007DD8  72                 	db	114	;'r'
   497   007DD9  20                 	db	32
   498   007DDA  6F                 	db	111	;'o'
   499   007DDB  76                 	db	118	;'v'
   500   007DDC  65                 	db	101	;'e'
   501   007DDD  72                 	db	114	;'r'
   502   007DDE  20                 	db	32
   503   007DDF  49                 	db	73	;'I'
   504   007DE0  52                 	db	82	;'R'
   505   007DE1  5F                 	db	95	;'_'
   506   007DE2  54                 	db	84	;'T'
   507   007DE3  58                 	db	88	;'X'
   508   007DE4  20                 	db	32
   509   007DE5  68                 	db	104	;'h'
   510   007DE6  65                 	db	101	;'e'
   511   007DE7  61                 	db	97	;'a'
   512   007DE8  64                 	db	100	;'d'
   513   007DE9  65                 	db	101	;'e'
   514   007DEA  72                 	db	114	;'r'
   515   007DEB  20                 	db	32
   516   007DEC  70                 	db	112	;'p'
   517   007DED  69                 	db	105	;'i'
   518   007DEE  6E                 	db	110	;'n'
   519   007DEF  73                 	db	115	;'s'
   520   007DF0  0D                 	db	13
   521   007DF1  0A                 	db	10
   522   007DF2  00                 	db	0
   523   007DF3                     STR_22:
   524   007DF3  52                 	db	82	;'R'
   525   007DF4  3A                 	db	58	;':'
   526   007DF5  20                 	db	32
   527   007DF6  75                 	db	117	;'u'
   528   007DF7  73                 	db	115	;'s'
   529   007DF8  65                 	db	101	;'e'
   530   007DF9  20                 	db	32
   531   007DFA  45                 	db	69	;'E'
   532   007DFB  55                 	db	85	;'U'
   533   007DFC  53                 	db	83	;'S'
   534   007DFD  41                 	db	65	;'A'
   535   007DFE  52                 	db	82	;'R'
   536   007DFF  54                 	db	84	;'T'
   537   007E00  32                 	db	50	;'2'
   538   007E01  20                 	db	32
   539   007E02  74                 	db	116	;'t'
   540   007E03  6F                 	db	111	;'o'
   541   007E04  20                 	db	32
   542   007E05  64                 	db	100	;'d'
   543   007E06  65                 	db	101	;'e'
   544   007E07  63                 	db	99	;'c'
   545   007E08  6F                 	db	111	;'o'
   546   007E09  64                 	db	100	;'d'
   547   007E0A  65                 	db	101	;'e'
   548   007E0B  20                 	db	32
   549   007E0C  63                 	db	99	;'c'
   550   007E0D  68                 	db	104	;'h'
   551   007E0E  61                 	db	97	;'a'
   552   007E0F  72                 	db	114	;'r'
   553   007E10  61                 	db	97	;'a'
   554   007E11  63                 	db	99	;'c'
   555   007E12  74                 	db	116	;'t'
   556   007E13  65                 	db	101	;'e'
   557   007E14  72                 	db	114	;'r'
   558   007E15  0D                 	db	13
   559   007E16  0A                 	db	10
   560   007E17  00                 	db	0
   561   007E18                     STR_21:
   562   007E18  53                 	db	83	;'S'
   563   007E19  3A                 	db	58	;':'
   564   007E1A  20                 	db	32
   565   007E1B  53                 	db	83	;'S'
   566   007E1C  65                 	db	101	;'e'
   567   007E1D  6E                 	db	110	;'n'
   568   007E1E  64                 	db	100	;'d'
   569   007E1F  20                 	db	32
   570   007E20  25                 	db	37
   571   007E21  63                 	db	99	;'c'
   572   007E22  20                 	db	32
   573   007E23  75                 	db	117	;'u'
   574   007E24  73                 	db	115	;'s'
   575   007E25  69                 	db	105	;'i'
   576   007E26  6E                 	db	110	;'n'
   577   007E27  67                 	db	103	;'g'
   578   007E28  20                 	db	32
   579   007E29  49                 	db	73	;'I'
   580   007E2A  52                 	db	82	;'R'
   581   007E2B  20                 	db	32
   582   007E2C  74                 	db	116	;'t'
   583   007E2D  72                 	db	114	;'r'
   584   007E2E  61                 	db	97	;'a'
   585   007E2F  6E                 	db	110	;'n'
   586   007E30  73                 	db	115	;'s'
   587   007E31  6D                 	db	109	;'m'
   588   007E32  69                 	db	105	;'i'
   589   007E33  74                 	db	116	;'t'
   590   007E34  74                 	db	116	;'t'
   591   007E35  65                 	db	101	;'e'
   592   007E36  72                 	db	114	;'r'
   593   007E37  0D                 	db	13
   594   007E38  0A                 	db	10
   595   007E39  00                 	db	0
   596   007E3A                     STR_2:
   597   007E3A  52                 	db	82	;'R'
   598   007E3B  65                 	db	101	;'e'
   599   007E3C  63                 	db	99	;'c'
   600   007E3D  65                 	db	101	;'e'
   601   007E3E  69                 	db	105	;'i'
   602   007E3F  76                 	db	118	;'v'
   603   007E40  65                 	db	101	;'e'
   604   007E41  20                 	db	32
   605   007E42  61                 	db	97	;'a'
   606   007E43  6E                 	db	110	;'n'
   607   007E44  64                 	db	100	;'d'
   608   007E45  20                 	db	32
   609   007E46  64                 	db	100	;'d'
   610   007E47  65                 	db	101	;'e'
   611   007E48  63                 	db	99	;'c'
   612   007E49  6F                 	db	111	;'o'
   613   007E4A  64                 	db	100	;'d'
   614   007E4B  65                 	db	101	;'e'
   615   007E4C  20                 	db	32
   616   007E4D  61                 	db	97	;'a'
   617   007E4E  6E                 	db	110	;'n'
   618   007E4F  20                 	db	32
   619   007E50  49                 	db	73	;'I'
   620   007E51  52                 	db	82	;'R'
   621   007E52  20                 	db	32
   622   007E53  70                 	db	112	;'p'
   623   007E54  61                 	db	97	;'a'
   624   007E55  63                 	db	99	;'c'
   625   007E56  6B                 	db	107	;'k'
   626   007E57  65                 	db	101	;'e'
   627   007E58  74                 	db	116	;'t'
   628   007E59  0D                 	db	13
   629   007E5A  0A                 	db	10
   630   007E5B  00                 	db	0
   631   007E5C                     STR_37:
   632   007E5C  4E                 	db	78	;'N'
   633   007E5D  6F                 	db	111	;'o'
   634   007E5E  74                 	db	116	;'t'
   635   007E5F  68                 	db	104	;'h'
   636   007E60  69                 	db	105	;'i'
   637   007E61  6E                 	db	110	;'n'
   638   007E62  67                 	db	103	;'g'
   639   007E63  20                 	db	32
   640   007E64  72                 	db	114	;'r'
   641   007E65  65                 	db	101	;'e'
   642   007E66  63                 	db	99	;'c'
   643   007E67  65                 	db	101	;'e'
   644   007E68  69                 	db	105	;'i'
   645   007E69  76                 	db	118	;'v'
   646   007E6A  65                 	db	101	;'e'
   647   007E6B  64                 	db	100	;'d'
   648   007E6C  20                 	db	32
   649   007E6D  66                 	db	102	;'f'
   650   007E6E  72                 	db	114	;'r'
   651   007E6F  6F                 	db	111	;'o'
   652   007E70  6D                 	db	109	;'m'
   653   007E71  20                 	db	32
   654   007E72  45                 	db	69	;'E'
   655   007E73  55                 	db	85	;'U'
   656   007E74  53                 	db	83	;'S'
   657   007E75  41                 	db	65	;'A'
   658   007E76  52                 	db	82	;'R'
   659   007E77  54                 	db	84	;'T'
   660   007E78  32                 	db	50	;'2'
   661   007E79  0D                 	db	13
   662   007E7A  0A                 	db	10
   663   007E7B  00                 	db	0
   664   007E7C                     STR_36:
   665   007E7C  4A                 	db	74	;'J'
   666   007E7D  75                 	db	117	;'u'
   667   007E7E  73                 	db	115	;'s'
   668   007E7F  74                 	db	116	;'t'
   669   007E80  20                 	db	32
   670   007E81  72                 	db	114	;'r'
   671   007E82  65                 	db	101	;'e'
   672   007E83  61                 	db	97	;'a'
   673   007E84  64                 	db	100	;'d'
   674   007E85  20                 	db	32
   675   007E86  69                 	db	105	;'i'
   676   007E87  6E                 	db	110	;'n'
   677   007E88  20                 	db	32
   678   007E89  25                 	db	37
   679   007E8A  63                 	db	99	;'c'
   680   007E8B  20                 	db	32
   681   007E8C  66                 	db	102	;'f'
   682   007E8D  72                 	db	114	;'r'
   683   007E8E  6F                 	db	111	;'o'
   684   007E8F  6D                 	db	109	;'m'
   685   007E90  20                 	db	32
   686   007E91  45                 	db	69	;'E'
   687   007E92  55                 	db	85	;'U'
   688   007E93  53                 	db	83	;'S'
   689   007E94  41                 	db	65	;'A'
   690   007E95  52                 	db	82	;'R'
   691   007E96  54                 	db	84	;'T'
   692   007E97  32                 	db	50	;'2'
   693   007E98  0D                 	db	13
   694   007E99  0A                 	db	10
   695   007E9A  00                 	db	0
   696   007E9B                     STR_34:
   697   007E9B  42                 	db	66	;'B'
   698   007E9C  61                 	db	97	;'a'
   699   007E9D  75                 	db	117	;'u'
   700   007E9E  64                 	db	100	;'d'
   701   007E9F  20                 	db	32
   702   007EA0  72                 	db	114	;'r'
   703   007EA1  61                 	db	97	;'a'
   704   007EA2  74                 	db	116	;'t'
   705   007EA3  65                 	db	101	;'e'
   706   007EA4  20                 	db	32
   707   007EA5  61                 	db	97	;'a'
   708   007EA6  73                 	db	115	;'s'
   709   007EA7  73                 	db	115	;'s'
   710   007EA8  69                 	db	105	;'i'
   711   007EA9  67                 	db	103	;'g'
   712   007EAA  6E                 	db	110	;'n'
   713   007EAB  65                 	db	101	;'e'
   714   007EAC  64                 	db	100	;'d'
   715   007EAD  20                 	db	32
   716   007EAE  25                 	db	37
   717   007EAF  30                 	db	48	;'0'
   718   007EB0  32                 	db	50	;'2'
   719   007EB1  78                 	db	120	;'x'
   720   007EB2  3A                 	db	58	;':'
   721   007EB3  25                 	db	37
   722   007EB4  30                 	db	48	;'0'
   723   007EB5  32                 	db	50	;'2'
   724   007EB6  78                 	db	120	;'x'
   725   007EB7  0D                 	db	13
   726   007EB8  0A                 	db	10
   727   007EB9  00                 	db	0
   728   007EBA                     STR_18:
   729   007EBA  7A                 	db	122	;'z'
   730   007EBB  3A                 	db	58	;':'
   731   007EBC  20                 	db	32
   732   007EBD  43                 	db	67	;'C'
   733   007EBE  6C                 	db	108	;'l'
   734   007EBF  65                 	db	101	;'e'
   735   007EC0  61                 	db	97	;'a'
   736   007EC1  72                 	db	114	;'r'
   737   007EC2  20                 	db	32
   738   007EC3  74                 	db	116	;'t'
   739   007EC4  68                 	db	104	;'h'
   740   007EC5  65                 	db	101	;'e'
   741   007EC6  20                 	db	32
   742   007EC7  74                 	db	116	;'t'
   743   007EC8  65                 	db	101	;'e'
   744   007EC9  72                 	db	114	;'r'
   745   007ECA  6D                 	db	109	;'m'
   746   007ECB  69                 	db	105	;'i'
   747   007ECC  6E                 	db	110	;'n'
   748   007ECD  61                 	db	97	;'a'
   749   007ECE  6C                 	db	108	;'l'
   750   007ECF  0D                 	db	13
   751   007ED0  0A                 	db	10
   752   007ED1  00                 	db	0
   753   007ED2                     STR_3:
   754   007ED2  44                 	db	68	;'D'
   755   007ED3  65                 	db	101	;'e'
   756   007ED4  76                 	db	118	;'v'
   757   007ED5  27                 	db	39
   758   007ED6  32                 	db	50	;'2'
   759   007ED7  31                 	db	49	;'1'
   760   007ED8  20                 	db	32
   761   007ED9  42                 	db	66	;'B'
   762   007EDA  6F                 	db	111	;'o'
   763   007EDB  61                 	db	97	;'a'
   764   007EDC  72                 	db	114	;'r'
   765   007EDD  64                 	db	100	;'d'
   766   007EDE  20                 	db	32
   767   007EDF  77                 	db	119	;'w'
   768   007EE0  69                 	db	105	;'i'
   769   007EE1  72                 	db	114	;'r'
   770   007EE2  69                 	db	105	;'i'
   771   007EE3  6E                 	db	110	;'n'
   772   007EE4  67                 	db	103	;'g'
   773   007EE5  0D                 	db	13
   774   007EE6  0A                 	db	10
   775   007EE7  00                 	db	0
   776   007EE8                     STR_38:
   777   007EE8  4A                 	db	74	;'J'
   778   007EE9  75                 	db	117	;'u'
   779   007EEA  73                 	db	115	;'s'
   780   007EEB  74                 	db	116	;'t'
   781   007EEC  20                 	db	32
   782   007EED  72                 	db	114	;'r'
   783   007EEE  65                 	db	101	;'e'
   784   007EEF  73                 	db	115	;'s'
   785   007EF0  65                 	db	101	;'e'
   786   007EF1  74                 	db	116	;'t'
   787   007EF2  20                 	db	32
   788   007EF3  45                 	db	69	;'E'
   789   007EF4  55                 	db	85	;'U'
   790   007EF5  53                 	db	83	;'S'
   791   007EF6  41                 	db	65	;'A'
   792   007EF7  52                 	db	82	;'R'
   793   007EF8  54                 	db	84	;'T'
   794   007EF9  32                 	db	50	;'2'
   795   007EFA  0D                 	db	13
   796   007EFB  0A                 	db	10
   797   007EFC  00                 	db	0
   798   007EFD                     STR_17:
   799   007EFD  5A                 	db	90	;'Z'
   800   007EFE  3A                 	db	58	;':'
   801   007EFF  20                 	db	32
   802   007F00  52                 	db	82	;'R'
   803   007F01  65                 	db	101	;'e'
   804   007F02  73                 	db	115	;'s'
   805   007F03  65                 	db	101	;'e'
   806   007F04  74                 	db	116	;'t'
   807   007F05  20                 	db	32
   808   007F06  70                 	db	112	;'p'
   809   007F07  72                 	db	114	;'r'
   810   007F08  6F                 	db	111	;'o'
   811   007F09  63                 	db	99	;'c'
   812   007F0A  65                 	db	101	;'e'
   813   007F0B  73                 	db	115	;'s'
   814   007F0C  73                 	db	115	;'s'
   815   007F0D  6F                 	db	111	;'o'
   816   007F0E  72                 	db	114	;'r'
   817   007F0F  0D                 	db	13
   818   007F10  0A                 	db	10
   819   007F11  00                 	db	0
   820   007F12                     STR_35:
   821   007F12  6A                 	db	106	;'j'
   822   007F13  75                 	db	117	;'u'
   823   007F14  73                 	db	115	;'s'
   824   007F15  74                 	db	116	;'t'
   825   007F16  20                 	db	32
   826   007F17  73                 	db	115	;'s'
   827   007F18  65                 	db	101	;'e'
   828   007F19  6E                 	db	110	;'n'
   829   007F1A  74                 	db	116	;'t'
   830   007F1B  20                 	db	32
   831   007F1C  25                 	db	37
   832   007F1D  63                 	db	99	;'c'
   833   007F1E  20                 	db	32
   834   007F1F  20                 	db	32
   835   007F20  20                 	db	32
   836   007F21  20                 	db	32
   837   007F22  25                 	db	37
   838   007F23  78                 	db	120	;'x'
   839   007F24  0D                 	db	13
   840   007F25  0A                 	db	10
   841   007F26  00                 	db	0
   842   007F27                     STR_23:
   843   007F27  72                 	db	114	;'r'
   844   007F28  3A                 	db	58	;':'
   845   007F29  20                 	db	32
   846   007F2A  72                 	db	114	;'r'
   847   007F2B  65                 	db	101	;'e'
   848   007F2C  73                 	db	115	;'s'
   849   007F2D  65                 	db	101	;'e'
   850   007F2E  74                 	db	116	;'t'
   851   007F2F  20                 	db	32
   852   007F30  45                 	db	69	;'E'
   853   007F31  55                 	db	85	;'U'
   854   007F32  53                 	db	83	;'S'
   855   007F33  41                 	db	65	;'A'
   856   007F34  52                 	db	82	;'R'
   857   007F35  54                 	db	84	;'T'
   858   007F36  32                 	db	50	;'2'
   859   007F37  0D                 	db	13
   860   007F38  0A                 	db	10
   861   007F39  00                 	db	0
   862   007F3A                     STR_39:
   863   007F3A  55                 	db	85	;'U'
   864   007F3B  6E                 	db	110	;'n'
   865   007F3C  6B                 	db	107	;'k'
   866   007F3D  6E                 	db	110	;'n'
   867   007F3E  6F                 	db	111	;'o'
   868   007F3F  77                 	db	119	;'w'
   869   007F40  6E                 	db	110	;'n'
   870   007F41  20                 	db	32
   871   007F42  6B                 	db	107	;'k'
   872   007F43  65                 	db	101	;'e'
   873   007F44  79                 	db	121	;'y'
   874   007F45  20                 	db	32
   875   007F46  25                 	db	37
   876   007F47  63                 	db	99	;'c'
   877   007F48  0D                 	db	13
   878   007F49  0A                 	db	10
   879   007F4A  00                 	db	0
   880   007F4B                     STR_33:
   881   007F4B  34                 	db	52	;'4'
   882   007F4C  3A                 	db	58	;':'
   883   007F4D  20                 	db	32
   884   007F4E  31                 	db	49	;'1'
   885   007F4F  39                 	db	57	;'9'
   886   007F50  32                 	db	50	;'2'
   887   007F51  30                 	db	48	;'0'
   888   007F52  30                 	db	48	;'0'
   889   007F53  20                 	db	32
   890   007F54  62                 	db	98	;'b'
   891   007F55  61                 	db	97	;'a'
   892   007F56  75                 	db	117	;'u'
   893   007F57  64                 	db	100	;'d'
   894   007F58  0D                 	db	13
   895   007F59  0A                 	db	10
   896   007F5A  00                 	db	0
   897   007F5B                     STR_30:
   898   007F5B  31                 	db	49	;'1'
   899   007F5C  3A                 	db	58	;':'
   900   007F5D  20                 	db	32
   901   007F5E  31                 	db	49	;'1'
   902   007F5F  32                 	db	50	;'2'
   903   007F60  30                 	db	48	;'0'
   904   007F61  30                 	db	48	;'0'
   905   007F62  20                 	db	32
   906   007F63  62                 	db	98	;'b'
   907   007F64  61                 	db	97	;'a'
   908   007F65  75                 	db	117	;'u'
   909   007F66  64                 	db	100	;'d'
   910   007F67  0D                 	db	13
   911   007F68  0A                 	db	10
   912   007F69  00                 	db	0
   913   007F6A                     STR_31:
   914   007F6A  32                 	db	50	;'2'
   915   007F6B  3A                 	db	58	;':'
   916   007F6C  20                 	db	32
   917   007F6D  32                 	db	50	;'2'
   918   007F6E  34                 	db	52	;'4'
   919   007F6F  30                 	db	48	;'0'
   920   007F70  30                 	db	48	;'0'
   921   007F71  20                 	db	32
   922   007F72  62                 	db	98	;'b'
   923   007F73  61                 	db	97	;'a'
   924   007F74  75                 	db	117	;'u'
   925   007F75  64                 	db	100	;'d'
   926   007F76  0D                 	db	13
   927   007F77  0A                 	db	10
   928   007F78  00                 	db	0
   929   007F79                     STR_32:
   930   007F79  33                 	db	51	;'3'
   931   007F7A  3A                 	db	58	;':'
   932   007F7B  20                 	db	32
   933   007F7C  39                 	db	57	;'9'
   934   007F7D  36                 	db	54	;'6'
   935   007F7E  30                 	db	48	;'0'
   936   007F7F  30                 	db	48	;'0'
   937   007F80  20                 	db	32
   938   007F81  62                 	db	98	;'b'
   939   007F82  61                 	db	97	;'a'
   940   007F83  75                 	db	117	;'u'
   941   007F84  64                 	db	100	;'d'
   942   007F85  0D                 	db	13
   943   007F86  0A                 	db	10
   944   007F87  00                 	db	0
   945   007F88                     STR_15:
   946   007F88  3F                 	db	63	;'?'
   947   007F89  3A                 	db	58	;':'
   948   007F8A  20                 	db	32
   949   007F8B  68                 	db	104	;'h'
   950   007F8C  65                 	db	101	;'e'
   951   007F8D  6C                 	db	108	;'l'
   952   007F8E  70                 	db	112	;'p'
   953   007F8F  20                 	db	32
   954   007F90  6D                 	db	109	;'m'
   955   007F91  65                 	db	101	;'e'
   956   007F92  6E                 	db	110	;'n'
   957   007F93  75                 	db	117	;'u'
   958   007F94  0D                 	db	13
   959   007F95  0A                 	db	10
   960   007F96  00                 	db	0
   961   007F97                     STR_29:
   962   007F97  30                 	db	48	;'0'
   963   007F98  3A                 	db	58	;':'
   964   007F99  20                 	db	32
   965   007F9A  33                 	db	51	;'3'
   966   007F9B  30                 	db	48	;'0'
   967   007F9C  30                 	db	48	;'0'
   968   007F9D  20                 	db	32
   969   007F9E  62                 	db	98	;'b'
   970   007F9F  61                 	db	97	;'a'
   971   007FA0  75                 	db	117	;'u'
   972   007FA1  64                 	db	100	;'d'
   973   007FA2  0D                 	db	13
   974   007FA3  0A                 	db	10
   975   007FA4  00                 	db	0
   976   007FA5                     STR_12:
   977   007FA5  31                 	db	49	;'1'
   978   007FA6  39                 	db	57	;'9'
   979   007FA7  32                 	db	50	;'2'
   980   007FA8  30                 	db	48	;'0'
   981   007FA9  30                 	db	48	;'0'
   982   007FAA  20                 	db	32
   983   007FAB  42                 	db	66	;'B'
   984   007FAC  61                 	db	97	;'a'
   985   007FAD  75                 	db	117	;'u'
   986   007FAE  64                 	db	100	;'d'
   987   007FAF  0D                 	db	13
   988   007FB0  0A                 	db	10
   989   007FB1  00                 	db	0
   990   007FB2                     STR_9:
   991   007FB2  31                 	db	49	;'1'
   992   007FB3  32                 	db	50	;'2'
   993   007FB4  30                 	db	48	;'0'
   994   007FB5  30                 	db	48	;'0'
   995   007FB6  20                 	db	32
   996   007FB7  42                 	db	66	;'B'
   997   007FB8  61                 	db	97	;'a'
   998   007FB9  75                 	db	117	;'u'
   999   007FBA  64                 	db	100	;'d'
  1000   007FBB  0D                 	db	13
  1001   007FBC  0A                 	db	10
  1002   007FBD  00                 	db	0
  1003   007FBE                     STR_10:
  1004   007FBE  32                 	db	50	;'2'
  1005   007FBF  34                 	db	52	;'4'
  1006   007FC0  30                 	db	48	;'0'
  1007   007FC1  30                 	db	48	;'0'
  1008   007FC2  20                 	db	32
  1009   007FC3  42                 	db	66	;'B'
  1010   007FC4  61                 	db	97	;'a'
  1011   007FC5  75                 	db	117	;'u'
  1012   007FC6  64                 	db	100	;'d'
  1013   007FC7  0D                 	db	13
  1014   007FC8  0A                 	db	10
  1015   007FC9  00                 	db	0
  1016   007FCA                     STR_11:
  1017   007FCA  39                 	db	57	;'9'
  1018   007FCB  36                 	db	54	;'6'
  1019   007FCC  30                 	db	48	;'0'
  1020   007FCD  30                 	db	48	;'0'
  1021   007FCE  20                 	db	32
  1022   007FCF  42                 	db	66	;'B'
  1023   007FD0  61                 	db	97	;'a'
  1024   007FD1  75                 	db	117	;'u'
  1025   007FD2  64                 	db	100	;'d'
  1026   007FD3  0D                 	db	13
  1027   007FD4  0A                 	db	10
  1028   007FD5  00                 	db	0
  1029   007FD6                     STR_8:
  1030   007FD6  33                 	db	51	;'3'
  1031   007FD7  30                 	db	48	;'0'
  1032   007FD8  30                 	db	48	;'0'
  1033   007FD9  20                 	db	32
  1034   007FDA  42                 	db	66	;'B'
  1035   007FDB  61                 	db	97	;'a'
  1036   007FDC  75                 	db	117	;'u'
  1037   007FDD  64                 	db	100	;'d'
  1038   007FDE  0D                 	db	13
  1039   007FDF  0A                 	db	10
  1040   007FE0  00                 	db	0
  1041   007FE1                     STR_1:
  1042   007FE1  69                 	db	105	;'i'
  1043   007FE2  6E                 	db	110	;'n'
  1044   007FE3  4C                 	db	76	;'L'
  1045   007FE4  61                 	db	97	;'a'
  1046   007FE5  62                 	db	98	;'b'
  1047   007FE6  20                 	db	32
  1048   007FE7  36                 	db	54	;'6'
  1049   007FE8  0D                 	db	13
  1050   007FE9  0A                 	db	10
  1051   007FEA  00                 	db	0
  1052   007FEB                     STR_25:
  1053   007FEB  6F                 	db	111	;'o'
  1054   007FEC  3A                 	db	58	;':'
  1055   007FED  09                 	db	9
  1056   007FEE  6F                 	db	111	;'o'
  1057   007FEF  6B                 	db	107	;'k'
  1058   007FF0  0D                 	db	13
  1059   007FF1  0A                 	db	10
  1060   007FF2  00                 	db	0
  1061   007FF3                     STR_16:
  1062   007FF3  6F                 	db	111	;'o'
  1063   007FF4  3A                 	db	58	;':'
  1064   007FF5  20                 	db	32
  1065   007FF6  6B                 	db	107	;'k'
  1066   007FF7  0D                 	db	13
  1067   007FF8  0A                 	db	10
  1068   007FF9  00                 	db	0
  1069   007FFA                     STR_6:
  1070   007FFA  0D                 	db	13
  1071   007FFB  0A                 	db	10
  1072   007FFC  3E                 	db	62	;'>'
  1073   007FFD  20                 	db	32
  1074   007FFE  00                 	db	0
  1075   007FFF  00                 	db	0	; dummy byte at the end
  1076   000000                     
  1077                           ; #config settings
  1078                           
  1079                           	psect	cinit
  1080   0065D6                     __pcinit:
  1081                           	callstack 0
  1082   0065D6                     start_initialization:
  1083                           	callstack 0
  1084   0065D6                     __initialization:
  1085                           	callstack 0
  1086                           
  1087                           ; Initialize objects allocated to BANK0 (10 bytes)
  1088                           ; load TBLPTR registers with __pidataBANK0
  1089   0065D6  0EA2               	movlw	low __pidataBANK0
  1090   0065D8  6EF6               	movwf	tblptrl,c
  1091   0065DA  0E63               	movlw	high __pidataBANK0
  1092   0065DC  6EF7               	movwf	tblptrh,c
  1093   0065DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1094   0065E0  6EF8               	movwf	tblptru,c
  1095   0065E2  EE00  F0AE         	lfsr	0,__pdataBANK0
  1096   0065E6  EE10 F00A          	lfsr	1,10
  1097   0065EA                     copy_data0:
  1098   0065EA  0009               	tblrd		*+
  1099   0065EC  CFF5 FFEE          	movff	tablat,postinc0
  1100   0065F0  50E5               	movf	postdec1,w,c
  1101   0065F2  50E1               	movf	fsr1l,w,c
  1102   0065F4  E1FA               	bnz	copy_data0
  1103                           
  1104                           ; Clear objects allocated to BANK0 (53 bytes)
  1105   0065F6  EE00  F060         	lfsr	0,__pbssBANK0
  1106   0065FA  0E35               	movlw	53
  1107   0065FC                     clear_0:
  1108   0065FC  6AEE               	clrf	postinc0,c
  1109   0065FE  06E8               	decf	wreg,f,c
  1110   006600  E1FD               	bnz	clear_0
  1111   006602                     end_of_initialization:
  1112                           	callstack 0
  1113   006602                     __end_of__initialization:
  1114                           	callstack 0
  1115   006602  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1116   006604  6EF8               	movwf	tblptru,c
  1117   006606  0100               	movlb	0
  1118   006608  EF26  F03B         	goto	_main	;jump to C main() function
  1119                           
  1120                           	psect	bssBANK0
  1121   000060                     __pbssBANK0:
  1122                           	callstack 0
  1123   000060                     _width:
  1124                           	callstack 0
  1125   000060                     	ds	2
  1126   000062                     _prec:
  1127                           	callstack 0
  1128   000062                     	ds	2
  1129   000064                     _EUSART1_ErrorHandler:
  1130                           	callstack 0
  1131   000064                     	ds	2
  1132   000066                     _EUSART1_OverrunErrorHandler:
  1133                           	callstack 0
  1134   000066                     	ds	2
  1135   000068                     _EUSART1_FramingErrorHandler:
  1136                           	callstack 0
  1137   000068                     	ds	2
  1138   00006A                     _EUSART2_ErrorHandler:
  1139                           	callstack 0
  1140   00006A                     	ds	2
  1141   00006C                     _EUSART2_OverrunErrorHandler:
  1142                           	callstack 0
  1143   00006C                     	ds	2
  1144   00006E                     _EUSART2_FramingErrorHandler:
  1145                           	callstack 0
  1146   00006E                     	ds	2
  1147   000070                     _timer1ReloadVal:
  1148                           	callstack 0
  1149   000070                     	ds	2
  1150   000072                     _flags:
  1151                           	callstack 0
  1152   000072                     	ds	1
  1153   000073                     _eusart1RxLastError:
  1154                           	callstack 0
  1155   000073                     	ds	1
  1156   000074                     _eusart2RxLastError:
  1157                           	callstack 0
  1158   000074                     	ds	1
  1159   000075                     _dbuf:
  1160                           	callstack 0
  1161   000075                     	ds	32
  1162                           
  1163                           	psect	dataBANK0
  1164   0000AE                     __pdataBANK0:
  1165                           	callstack 0
  1166   0000AE                     main@F6152:
  1167                           	callstack 0
  1168   0000AE                     	ds	10
  1169                           
  1170                           	psect	cstackBANK0
  1171   000095                     __pcstackBANK0:
  1172                           	callstack 0
  1173   000095                     ?_printf:
  1174                           	callstack 0
  1175   000095                     printf@fmt:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x0
  1179   000095                     	ds	6
  1180   00009B                     printf@ap:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x6
  1184   00009B                     	ds	2
  1185   00009D                     ??_main:
  1186                           
  1187                           ; 1 bytes @ 0x8
  1188   00009D                     	ds	2
  1189   00009F                     main@bitPeriod:
  1190                           	callstack 0
  1191                           
  1192                           ; 10 bytes @ 0xA
  1193   00009F                     	ds	10
  1194   0000A9                     main@cmd:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x14
  1198   0000A9                     	ds	1
  1199   0000AA                     main@mask:
  1200                           	callstack 0
  1201                           
  1202                           ; 1 bytes @ 0x15
  1203   0000AA                     	ds	1
  1204   0000AB                     main@letter:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x16
  1208   0000AB                     	ds	1
  1209   0000AC                     main@i:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x17
  1213   0000AC                     	ds	1
  1214   0000AD                     main@baudRateSelected:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x18
  1218   0000AD                     	ds	1
  1219                           
  1220                           	psect	cstackCOMRAM
  1221   000001                     __pcstackCOMRAM:
  1222                           	callstack 0
  1223   000001                     ?_isdigit:
  1224                           	callstack 0
  1225   000001                     ?_isspace:
  1226                           	callstack 0
  1227   000001                     ?___wmul:
  1228                           	callstack 0
  1229   000001                     ?___aodiv:
  1230                           	callstack 0
  1231   000001                     ?___aomod:
  1232                           	callstack 0
  1233   000001                     EUSART1_Write@txData:
  1234                           	callstack 0
  1235   000001                     TMR1_WriteTimer@timerVal:
  1236                           	callstack 0
  1237   000001                     EPWM2_LoadDutyValue@dutyValue:
  1238                           	callstack 0
  1239   000001                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1240                           	callstack 0
  1241   000001                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1242                           	callstack 0
  1243   000001                     EUSART2_SetErrorHandler@interruptHandler:
  1244                           	callstack 0
  1245   000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1246                           	callstack 0
  1247   000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1248                           	callstack 0
  1249   000001                     EUSART1_SetErrorHandler@interruptHandler:
  1250                           	callstack 0
  1251   000001                     ___wmul@multiplier:
  1252                           	callstack 0
  1253   000001                     isdigit@c:
  1254                           	callstack 0
  1255   000001                     isspace@c:
  1256                           	callstack 0
  1257   000001                     ___aodiv@dividend:
  1258                           	callstack 0
  1259   000001                     ___aomod@dividend:
  1260                           	callstack 0
  1261                           
  1262                           ; 8 bytes @ 0x0
  1263   000001                     	ds	1
  1264   000002                     putch@txData:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x1
  1268   000002                     	ds	1
  1269   000003                     ??_isdigit:
  1270   000003                     ??_isspace:
  1271   000003                     ??_EPWM2_LoadDutyValue:
  1272   000003                     ___wmul@multiplicand:
  1273                           	callstack 0
  1274   000003                     fputc@c:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x2
  1278   000003                     	ds	2
  1279   000005                     _isspace$1658:
  1280                           	callstack 0
  1281   000005                     ___wmul@product:
  1282                           	callstack 0
  1283   000005                     fputc@fp:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x4
  1287   000005                     	ds	2
  1288   000007                     ??_fputc:
  1289   000007                     ?_atoi:
  1290                           	callstack 0
  1291   000007                     atoi@s:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x6
  1295   000007                     	ds	2
  1296   000009                     ??_atoi:
  1297   000009                     ___aodiv@divisor:
  1298                           	callstack 0
  1299   000009                     ___aomod@divisor:
  1300                           	callstack 0
  1301                           
  1302                           ; 8 bytes @ 0x8
  1303   000009                     	ds	3
  1304   00000C                     ctoa@fp:
  1305                           	callstack 0
  1306   00000C                     atoi@neg:
  1307                           	callstack 0
  1308   00000C                     fputs@s:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0xB
  1312   00000C                     	ds	2
  1313   00000E                     ctoa@c:
  1314                           	callstack 0
  1315   00000E                     atoi@n:
  1316                           	callstack 0
  1317   00000E                     fputs@fp:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0xD
  1321   00000E                     	ds	1
  1322   00000F                     ??_ctoa:
  1323                           
  1324                           ; 1 bytes @ 0xE
  1325   00000F                     	ds	1
  1326   000010                     fputs@c:
  1327                           	callstack 0
  1328   000010                     ctoa@l:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0xF
  1332   000010                     	ds	1
  1333   000011                     ___aodiv@counter:
  1334                           	callstack 0
  1335   000011                     ___aomod@counter:
  1336                           	callstack 0
  1337   000011                     fputs@i:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x10
  1341   000011                     	ds	1
  1342   000012                     ___aodiv@sign:
  1343                           	callstack 0
  1344   000012                     ___aomod@sign:
  1345                           	callstack 0
  1346   000012                     ctoa@w:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x11
  1350   000012                     	ds	1
  1351   000013                     ?_abs:
  1352                           	callstack 0
  1353   000013                     pad@fp:
  1354                           	callstack 0
  1355   000013                     abs@a:
  1356                           	callstack 0
  1357   000013                     ___aodiv@quotient:
  1358                           	callstack 0
  1359                           
  1360                           ; 8 bytes @ 0x12
  1361   000013                     	ds	2
  1362   000015                     ??_abs:
  1363   000015                     pad@buf:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x14
  1367   000015                     	ds	2
  1368   000017                     pad@p:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x16
  1372   000017                     	ds	2
  1373   000019                     ??_pad:
  1374                           
  1375                           ; 1 bytes @ 0x18
  1376   000019                     	ds	1
  1377   00001A                     pad@i:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x19
  1381   00001A                     	ds	2
  1382   00001C                     pad@w:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x1B
  1386   00001C                     	ds	2
  1387   00001E                     dtoa@fp:
  1388                           	callstack 0
  1389   00001E                     xtoa@fp:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x1D
  1393   00001E                     	ds	2
  1394   000020                     dtoa@d:
  1395                           	callstack 0
  1396   000020                     xtoa@d:
  1397                           	callstack 0
  1398                           
  1399                           ; 8 bytes @ 0x1F
  1400   000020                     	ds	8
  1401   000028                     ??_dtoa:
  1402   000028                     ??_xtoa:
  1403                           
  1404                           ; 1 bytes @ 0x27
  1405   000028                     	ds	8
  1406   000030                     _dtoa$1598:
  1407                           	callstack 0
  1408   000030                     _xtoa$1608:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x2F
  1412   000030                     	ds	2
  1413   000032                     dtoa@p:
  1414                           	callstack 0
  1415   000032                     xtoa@p:
  1416                           	callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x31
  1419   000032                     	ds	2
  1420   000034                     dtoa@w:
  1421                           	callstack 0
  1422   000034                     xtoa@w:
  1423                           	callstack 0
  1424                           
  1425                           ; 2 bytes @ 0x33
  1426   000034                     	ds	2
  1427   000036                     dtoa@n:
  1428                           	callstack 0
  1429   000036                     xtoa@n:
  1430                           	callstack 0
  1431                           
  1432                           ; 8 bytes @ 0x35
  1433   000036                     	ds	8
  1434   00003E                     dtoa@i:
  1435                           	callstack 0
  1436   00003E                     xtoa@i:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x3D
  1440   00003E                     	ds	2
  1441   000040                     dtoa@s:
  1442                           	callstack 0
  1443   000040                     xtoa@c:
  1444                           	callstack 0
  1445                           
  1446                           ; 1 bytes @ 0x3F
  1447   000040                     	ds	1
  1448   000041                     vfpfcnvrt@fp:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x40
  1452   000041                     	ds	2
  1453   000043                     vfpfcnvrt@fmt:
  1454                           	callstack 0
  1455                           
  1456                           ; 2 bytes @ 0x42
  1457   000043                     	ds	2
  1458   000045                     vfpfcnvrt@ap:
  1459                           	callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x44
  1462   000045                     	ds	2
  1463   000047                     ??_vfpfcnvrt:
  1464                           
  1465                           ; 1 bytes @ 0x46
  1466   000047                     	ds	4
  1467   00004B                     vfpfcnvrt@done:
  1468                           	callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x4A
  1471   00004B                     	ds	2
  1472   00004D                     vfpfcnvrt@c:
  1473                           	callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x4C
  1476   00004D                     	ds	1
  1477   00004E                     vfpfcnvrt@convarg:
  1478                           	callstack 0
  1479                           
  1480                           ; 8 bytes @ 0x4D
  1481   00004E                     	ds	8
  1482   000056                     vfpfcnvrt@cp:
  1483                           	callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x55
  1486   000056                     	ds	2
  1487   000058                     ?_vfprintf:
  1488                           	callstack 0
  1489   000058                     vfprintf@fp:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x57
  1493   000058                     	ds	2
  1494   00005A                     vfprintf@fmt:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x59
  1498   00005A                     	ds	2
  1499   00005C                     vfprintf@ap:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x5B
  1503   00005C                     	ds	2
  1504   00005E                     vfprintf@cfmt:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x5D
  1508   00005E                     	ds	2
  1509   000060                     
  1510                           ; 1 bytes @ 0x5F
  1511 ;;
  1512 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1513 ;;
  1514 ;; *************** function _main *****************
  1515 ;; Defined at:
  1516 ;;		line 33 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  bitPeriod      10   10[BANK0 ] unsigned short [5]
  1521 ;;  baudRateSele    1   24[BANK0 ] unsigned char 
  1522 ;;  i               1   23[BANK0 ] unsigned char 
  1523 ;;  letter          1   22[BANK0 ] unsigned char 
  1524 ;;  mask            1   21[BANK0 ] unsigned char 
  1525 ;;  cmd             1   20[BANK0 ] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1535 ;;      Params:         0       0       0       0       0       0       0
  1536 ;;      Locals:         0      15       0       0       0       0       0
  1537 ;;      Temps:          0       2       0       0       0       0       0
  1538 ;;      Totals:         0      17       0       0       0       0       0
  1539 ;;Total ram usage:       17 bytes
  1540 ;; Hardware stack levels required when called: 9
  1541 ;; This function calls:
  1542 ;;		_EPWM2_LoadDutyValue
  1543 ;;		_EUSART1_Read
  1544 ;;		_EUSART1_is_rx_ready
  1545 ;;		_EUSART2_Read
  1546 ;;		_EUSART2_is_rx_ready
  1547 ;;		_SYSTEM_Initialize
  1548 ;;		_TMR1_HasOverflowOccured
  1549 ;;		_TMR1_WriteTimer
  1550 ;;		_printf
  1551 ;; This function is called by:
  1552 ;;		Startup code after reset
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text0
  1557   00764C                     __ptext0:
  1558                           	callstack 0
  1559   00764C                     _main:
  1560                           	callstack 22
  1561   00764C  0E01               	movlw	1
  1562   00764E  0100               	movlb	0	; () banked
  1563   007650  6FAD               	movwf	main@baudRateSelected& (0+255),b
  1564   007652  0E30               	movlw	48
  1565   007654  6FAB               	movwf	main@letter& (0+255),b
  1566   007656                     
  1567                           ; BSR set to: 0
  1568   007656  EE20  F0AE         	lfsr	2,main@F6152
  1569   00765A  EE10  F09F         	lfsr	1,main@bitPeriod
  1570   00765E  0E09               	movlw	9
  1571   007660                     u1791:
  1572   007660  CFDB FFE3          	movff	plusw2,plusw1
  1573   007664  06E8               	decf	wreg,f,c
  1574   007666  E2FC               	bc	u1791
  1575   007668                     
  1576                           ; BSR set to: 0
  1577   007668  EC23  F032         	call	_SYSTEM_Initialize	;wreg free
  1578   00766C  0E00               	movlw	0
  1579   00766E  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1580   007670  0E00               	movlw	0
  1581   007672  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1582   007674  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  1583   007678  0E00               	movlw	0
  1584   00767A  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  1585   00767C  0E00               	movlw	0
  1586   00767E  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  1587   007680  EC55  F032         	call	_TMR1_WriteTimer	;wreg free
  1588   007684  909E               	bcf	158,0,c	;volatile
  1589   007686                     l2790:
  1590   007686  ECF2  F031         	call	_TMR1_HasOverflowOccured	;wreg free
  1591   00768A  0900               	iorlw	0
  1592   00768C  B4D8               	btfsc	status,2,c
  1593   00768E  EF4B  F03B         	goto	u1801
  1594   007692  EF4D  F03B         	goto	u1800
  1595   007696                     u1801:
  1596   007696  EF43  F03B         	goto	l2790
  1597   00769A                     u1800:
  1598   00769A  ECE8  F031         	call	_EUSART2_is_rx_ready	;wreg free
  1599   00769E  0900               	iorlw	0
  1600   0076A0  B4D8               	btfsc	status,2,c
  1601   0076A2  EF55  F03B         	goto	u1811
  1602   0076A6  EF57  F03B         	goto	u1810
  1603   0076AA                     u1811:
  1604   0076AA  EF59  F03B         	goto	l382
  1605   0076AE                     u1810:
  1606   0076AE  EC92  F032         	call	_EUSART2_Read	;wreg free
  1607   0076B2                     l382:
  1608   0076B2  ECE8  F031         	call	_EUSART2_is_rx_ready	;wreg free
  1609   0076B6  0900               	iorlw	0
  1610   0076B8  B4D8               	btfsc	status,2,c
  1611   0076BA  EF61  F03B         	goto	u1821
  1612   0076BE  EF63  F03B         	goto	u1820
  1613   0076C2                     u1821:
  1614   0076C2  EF65  F03B         	goto	l2798
  1615   0076C6                     u1820:
  1616   0076C6  EC92  F032         	call	_EUSART2_Read	;wreg free
  1617   0076CA                     l2798:
  1618                           
  1619                           ;main.c: 62:     printf("inLab 6\r\n");
  1620   0076CA  0EE1               	movlw	low STR_1
  1621   0076CC  0100               	movlb	0	; () banked
  1622   0076CE  6F95               	movwf	printf@fmt& (0+255),b
  1623   0076D0  0E7F               	movlw	high STR_1
  1624   0076D2  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1625   0076D4  EC69  F032         	call	_printf	;wreg free
  1626   0076D8                     
  1627                           ;main.c: 63:     printf("Receive and decode an IR packet\r\n");
  1628   0076D8  0E3A               	movlw	low STR_2
  1629   0076DA  0100               	movlb	0	; () banked
  1630   0076DC  6F95               	movwf	printf@fmt& (0+255),b
  1631   0076DE  0E7E               	movlw	high STR_2
  1632   0076E0  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1633   0076E2  EC69  F032         	call	_printf	;wreg free
  1634   0076E6                     
  1635                           ;main.c: 64:     printf("Dev'21 Board wiring\r\n");
  1636   0076E6  0ED2               	movlw	low STR_3
  1637   0076E8  0100               	movlb	0	; () banked
  1638   0076EA  6F95               	movwf	printf@fmt& (0+255),b
  1639   0076EC  0E7E               	movlw	high STR_3
  1640   0076EE  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1641   0076F0  EC69  F032         	call	_printf	;wreg free
  1642   0076F4                     
  1643                           ;main.c: 65:     printf("Install a jumper wire from RC0 to RB7 ONLY AFTER unplugging PIC
      +                          Kit3\r\n");
  1644   0076F4  0EF6               	movlw	low STR_4
  1645   0076F6  0100               	movlb	0	; () banked
  1646   0076F8  6F95               	movwf	printf@fmt& (0+255),b
  1647   0076FA  0E7C               	movlw	high STR_4
  1648   0076FC  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1649   0076FE  EC69  F032         	call	_printf	;wreg free
  1650   007702                     
  1651                           ;main.c: 66:     printf("Install a jumper over IR_TX header pins\r\n");
  1652   007702  0EC9               	movlw	low STR_5
  1653   007704  0100               	movlb	0	; () banked
  1654   007706  6F95               	movwf	printf@fmt& (0+255),b
  1655   007708  0E7D               	movlw	high STR_5
  1656   00770A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1657   00770C  EC69  F032         	call	_printf	;wreg free
  1658   007710                     
  1659                           ;main.c: 67:     printf("\r\n> ");
  1660   007710  0EFA               	movlw	low STR_6
  1661   007712  0100               	movlb	0	; () banked
  1662   007714  6F95               	movwf	printf@fmt& (0+255),b
  1663   007716  0E7F               	movlw	high STR_6
  1664   007718  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1665   00771A  EC69  F032         	call	_printf	;wreg free
  1666   00771E                     l384:
  1667                           
  1668                           ;main.c: 70:     {;main.c: 71:         if ((EUSART1_is_rx_ready()))
  1669   00771E  ECDE  F031         	call	_EUSART1_is_rx_ready	;wreg free
  1670   007722  0900               	iorlw	0
  1671   007724  B4D8               	btfsc	status,2,c
  1672   007726  EF97  F03B         	goto	u1831
  1673   00772A  EF99  F03B         	goto	u1830
  1674   00772E                     u1831:
  1675   00772E  EF8F  F03B         	goto	l384
  1676   007732                     u1830:
  1677   007732                     
  1678                           ;main.c: 72:         {;main.c: 73:             cmd = EUSART1_Read();
  1679   007732  EC7D  F032         	call	_EUSART1_Read	;wreg free
  1680   007736  0100               	movlb	0	; () banked
  1681   007738  6FA9               	movwf	main@cmd& (0+255),b
  1682                           
  1683                           ;main.c: 74:             switch (cmd)
  1684   00773A  EF1A  F03E         	goto	l2940
  1685   00773E                     l2812:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 77:                     printf("-----------------------------------------------
      +                          --\r\n");
  1689   00773E  0E3C               	movlw	low STR_7
  1690   007740  6F95               	movwf	printf@fmt& (0+255),b
  1691   007742  0E7D               	movlw	high STR_7
  1692   007744  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1693   007746  EC69  F032         	call	_printf	;wreg free
  1694                           
  1695                           ;main.c: 78:                     switch (baudRateSelected)
  1696   00774A  EFD7  F03B         	goto	l2828
  1697   00774E                     l2814:
  1698                           
  1699                           ; BSR set to: 0
  1700   00774E  0ED6               	movlw	low STR_8
  1701   007750  6F95               	movwf	printf@fmt& (0+255),b
  1702   007752  0E7F               	movlw	high STR_8
  1703   007754  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1704   007756  EC69  F032         	call	_printf	;wreg free
  1705                           
  1706                           ;main.c: 81:                             break;
  1707   00775A  EFF9  F03B         	goto	l2830
  1708   00775E                     l2816:
  1709                           
  1710                           ; BSR set to: 0
  1711   00775E  0EB2               	movlw	low STR_9
  1712   007760  6F95               	movwf	printf@fmt& (0+255),b
  1713   007762  0E7F               	movlw	high STR_9
  1714   007764  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1715   007766  EC69  F032         	call	_printf	;wreg free
  1716                           
  1717                           ;main.c: 83:                             break;
  1718   00776A  EFF9  F03B         	goto	l2830
  1719   00776E                     l2818:
  1720                           
  1721                           ; BSR set to: 0
  1722   00776E  0EBE               	movlw	low STR_10
  1723   007770  6F95               	movwf	printf@fmt& (0+255),b
  1724   007772  0E7F               	movlw	high STR_10
  1725   007774  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1726   007776  EC69  F032         	call	_printf	;wreg free
  1727                           
  1728                           ;main.c: 85:                             break;
  1729   00777A  EFF9  F03B         	goto	l2830
  1730   00777E                     l2820:
  1731                           
  1732                           ; BSR set to: 0
  1733   00777E  0ECA               	movlw	low STR_11
  1734   007780  6F95               	movwf	printf@fmt& (0+255),b
  1735   007782  0E7F               	movlw	high STR_11
  1736   007784  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1737   007786  EC69  F032         	call	_printf	;wreg free
  1738                           
  1739                           ;main.c: 87:                             break;
  1740   00778A  EFF9  F03B         	goto	l2830
  1741   00778E                     l2822:
  1742                           
  1743                           ; BSR set to: 0
  1744   00778E  0EA5               	movlw	low STR_12
  1745   007790  6F95               	movwf	printf@fmt& (0+255),b
  1746   007792  0E7F               	movlw	high STR_12
  1747   007794  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1748   007796  EC69  F032         	call	_printf	;wreg free
  1749                           
  1750                           ;main.c: 89:                             break;
  1751   00779A  EFF9  F03B         	goto	l2830
  1752   00779E                     l2824:
  1753                           
  1754                           ; BSR set to: 0
  1755   00779E  0EB2               	movlw	low STR_9
  1756   0077A0  6F95               	movwf	printf@fmt& (0+255),b
  1757   0077A2  0E7F               	movlw	high STR_9
  1758   0077A4  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1759   0077A6  EC69  F032         	call	_printf	;wreg free
  1760                           
  1761                           ;main.c: 91:                             break;
  1762   0077AA  EFF9  F03B         	goto	l2830
  1763   0077AE                     l2828:
  1764   0077AE  0100               	movlb	0	; () banked
  1765   0077B0  51AD               	movf	main@baudRateSelected& (0+255),w,b
  1766   0077B2  6F9D               	movwf	??_main& (0+255),b
  1767   0077B4  6B9E               	clrf	(??_main+1)& (0+255),b
  1768                           
  1769                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1770                           ; Switch size 1, requested type "simple"
  1771                           ; Number of cases is 1, Range of values is 0 to 0
  1772                           ; switch strategies available:
  1773                           ; Name         Instructions Cycles
  1774                           ; simple_byte            4     3 (average)
  1775                           ;	Chosen strategy is simple_byte
  1776   0077B6  519E               	movf	(??_main+1)& (0+255),w,b
  1777   0077B8  0A00               	xorlw	0	; case 0
  1778   0077BA  B4D8               	btfsc	status,2,c
  1779   0077BC  EFE2  F03B         	goto	l3110
  1780   0077C0  EFCF  F03B         	goto	l2824
  1781   0077C4                     l3110:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ; Switch size 1, requested type "simple"
  1785                           ; Number of cases is 5, Range of values is 0 to 4
  1786                           ; switch strategies available:
  1787                           ; Name         Instructions Cycles
  1788                           ; simple_byte           16     9 (average)
  1789                           ;	Chosen strategy is simple_byte
  1790   0077C4  519D               	movf	??_main& (0+255),w,b
  1791   0077C6  0A00               	xorlw	0	; case 0
  1792   0077C8  B4D8               	btfsc	status,2,c
  1793   0077CA  EFA7  F03B         	goto	l2814
  1794   0077CE  0A01               	xorlw	1	; case 1
  1795   0077D0  B4D8               	btfsc	status,2,c
  1796   0077D2  EFAF  F03B         	goto	l2816
  1797   0077D6  0A03               	xorlw	3	; case 2
  1798   0077D8  B4D8               	btfsc	status,2,c
  1799   0077DA  EFB7  F03B         	goto	l2818
  1800   0077DE  0A01               	xorlw	1	; case 3
  1801   0077E0  B4D8               	btfsc	status,2,c
  1802   0077E2  EFBF  F03B         	goto	l2820
  1803   0077E6  0A07               	xorlw	7	; case 4
  1804   0077E8  B4D8               	btfsc	status,2,c
  1805   0077EA  EFC7  F03B         	goto	l2822
  1806   0077EE  EFCF  F03B         	goto	l2824
  1807   0077F2                     l2830:
  1808                           
  1809                           ;main.c: 93:                     printf("-----------------------------------------------
      +                          --\r\n");
  1810   0077F2  0E3C               	movlw	low STR_7
  1811   0077F4  0100               	movlb	0	; () banked
  1812   0077F6  6F95               	movwf	printf@fmt& (0+255),b
  1813   0077F8  0E7D               	movlw	high STR_7
  1814   0077FA  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1815   0077FC  EC69  F032         	call	_printf	;wreg free
  1816                           
  1817                           ;main.c: 94:                     printf("?: help menu\r\n");
  1818   007800  0E88               	movlw	low STR_15
  1819   007802  0100               	movlb	0	; () banked
  1820   007804  6F95               	movwf	printf@fmt& (0+255),b
  1821   007806  0E7F               	movlw	high STR_15
  1822   007808  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1823   00780A  EC69  F032         	call	_printf	;wreg free
  1824                           
  1825                           ;main.c: 95:                     printf("o: k\r\n");
  1826   00780E  0EF3               	movlw	low STR_16
  1827   007810  0100               	movlb	0	; () banked
  1828   007812  6F95               	movwf	printf@fmt& (0+255),b
  1829   007814  0E7F               	movlw	high STR_16
  1830   007816  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1831   007818  EC69  F032         	call	_printf	;wreg free
  1832                           
  1833                           ;main.c: 96:                     printf("Z: Reset processor\r\n");
  1834   00781C  0EFD               	movlw	low STR_17
  1835   00781E  0100               	movlb	0	; () banked
  1836   007820  6F95               	movwf	printf@fmt& (0+255),b
  1837   007822  0E7E               	movlw	high STR_17
  1838   007824  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1839   007826  EC69  F032         	call	_printf	;wreg free
  1840                           
  1841                           ;main.c: 97:                     printf("z: Clear the terminal\r\n");
  1842   00782A  0EBA               	movlw	low STR_18
  1843   00782C  0100               	movlb	0	; () banked
  1844   00782E  6F95               	movwf	printf@fmt& (0+255),b
  1845   007830  0E7E               	movlw	high STR_18
  1846   007832  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1847   007834  EC69  F032         	call	_printf	;wreg free
  1848                           
  1849                           ;main.c: 98:                     printf("b: set the Baud rate of the sent characters\r\n
      +                          ");
  1850   007838  0E70               	movlw	low STR_19
  1851   00783A  0100               	movlb	0	; () banked
  1852   00783C  6F95               	movwf	printf@fmt& (0+255),b
  1853   00783E  0E7D               	movlw	high STR_19
  1854   007840  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1855   007842  EC69  F032         	call	_printf	;wreg free
  1856                           
  1857                           ;main.c: 99:                     printf("p: send 1 pulse of 38kHz IR illumination with a
      +                           duration of %d 1:1 prescaled TMR1 counts\r\n", bitPeriod[baudRateSelected]);
  1858   007846  0E9B               	movlw	low STR_20
  1859   007848  0100               	movlb	0	; () banked
  1860   00784A  6F95               	movwf	printf@fmt& (0+255),b
  1861   00784C  0E7C               	movlw	high STR_20
  1862   00784E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1863   007850  51AD               	movf	main@baudRateSelected& (0+255),w,b
  1864   007852  0D02               	mullw	2
  1865   007854  0E9F               	movlw	low main@bitPeriod
  1866   007856  24F3               	addwf	243,w,c
  1867   007858  6ED9               	movwf	fsr2l,c
  1868   00785A  0E00               	movlw	high main@bitPeriod
  1869   00785C  20F4               	addwfc	prodh,w,c
  1870   00785E  6EDA               	movwf	fsr2h,c
  1871   007860  CFDE F097          	movff	postinc2,?_printf+2
  1872   007864  CFDD F098          	movff	postdec2,?_printf+3
  1873   007868  EC69  F032         	call	_printf	;wreg free
  1874                           
  1875                           ;main.c: 100:                     printf("S: Send ""%c"" using IR transmitter\r\n", lett
      +                          er);
  1876   00786C  0E18               	movlw	low STR_21
  1877   00786E  0100               	movlb	0	; () banked
  1878   007870  6F95               	movwf	printf@fmt& (0+255),b
  1879   007872  0E7E               	movlw	high STR_21
  1880   007874  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1881   007876  C0AB  F097         	movff	main@letter,?_printf+2
  1882   00787A  6B98               	clrf	(?_printf+3)& (0+255),b
  1883   00787C  EC69  F032         	call	_printf	;wreg free
  1884                           
  1885                           ;main.c: 101:                     printf("R: use EUSART2 to decode character\r\n");
  1886   007880  0EF3               	movlw	low STR_22
  1887   007882  0100               	movlb	0	; () banked
  1888   007884  6F95               	movwf	printf@fmt& (0+255),b
  1889   007886  0E7D               	movlw	high STR_22
  1890   007888  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1891   00788A  EC69  F032         	call	_printf	;wreg free
  1892                           
  1893                           ;main.c: 102:                     printf("r: reset EUSART2\r\n");
  1894   00788E  0E27               	movlw	low STR_23
  1895   007890  0100               	movlb	0	; () banked
  1896   007892  6F95               	movwf	printf@fmt& (0+255),b
  1897   007894  0E7F               	movlw	high STR_23
  1898   007896  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1899   007898  EC69  F032         	call	_printf	;wreg free
  1900                           
  1901                           ;main.c: 103:                     printf("----------------------------------------------
      +                          ---\r\n");
  1902   00789C  0E3C               	movlw	low STR_7
  1903   00789E  0100               	movlb	0	; () banked
  1904   0078A0  6F95               	movwf	printf@fmt& (0+255),b
  1905   0078A2  0E7D               	movlw	high STR_7
  1906   0078A4  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1907   0078A6  EC69  F032         	call	_printf	;wreg free
  1908                           
  1909                           ;main.c: 104:                     break;
  1910   0078AA  EF8F  F03B         	goto	l384
  1911   0078AE                     l2832:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;main.c: 106:                     printf("o:	ok\r\n");
  1915   0078AE  0EEB               	movlw	low STR_25
  1916   0078B0  6F95               	movwf	printf@fmt& (0+255),b
  1917   0078B2  0E7F               	movlw	high STR_25
  1918   0078B4  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1919   0078B6  EC69  F032         	call	_printf	;wreg free
  1920                           
  1921                           ;main.c: 107:                     break;
  1922   0078BA  EF8F  F03B         	goto	l384
  1923   0078BE                     l2834:
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;main.c: 109:                     for (i = 0; i < 40; i++) printf("\n");
  1927   0078BE  0E00               	movlw	0
  1928   0078C0  6FAC               	movwf	main@i& (0+255),b
  1929   0078C2                     l2840:
  1930                           
  1931                           ; BSR set to: 0
  1932   0078C2  0E6E               	movlw	low (STR_7+50)
  1933   0078C4  6F95               	movwf	printf@fmt& (0+255),b
  1934   0078C6  0E7D               	movlw	high (STR_7+50)
  1935   0078C8  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1936   0078CA  EC69  F032         	call	_printf	;wreg free
  1937   0078CE  0100               	movlb	0	; () banked
  1938   0078D0  2BAC               	incf	main@i& (0+255),f,b
  1939   0078D2                     
  1940                           ; BSR set to: 0
  1941   0078D2  0E27               	movlw	39
  1942   0078D4  65AC               	cpfsgt	main@i& (0+255),b
  1943   0078D6  EF6F  F03C         	goto	u1841
  1944   0078DA  EF71  F03C         	goto	u1840
  1945   0078DE                     u1841:
  1946   0078DE  EF61  F03C         	goto	l2840
  1947   0078E2                     u1840:
  1948   0078E2                     
  1949                           ; BSR set to: 0
  1950   0078E2  00FF               	reset		;# 
  1951                           
  1952                           ;main.c: 111:                     break;
  1953   0078E4  EF8F  F03B         	goto	l384
  1954   0078E8                     l2846:
  1955                           
  1956                           ; BSR set to: 0
  1957                           ;main.c: 113:                     for (i = 0; i < 40; i++) printf("\n");
  1958   0078E8  0E00               	movlw	0
  1959   0078EA  6FAC               	movwf	main@i& (0+255),b
  1960   0078EC                     l2852:
  1961                           
  1962                           ; BSR set to: 0
  1963   0078EC  0E6E               	movlw	low (STR_7+50)
  1964   0078EE  6F95               	movwf	printf@fmt& (0+255),b
  1965   0078F0  0E7D               	movlw	high (STR_7+50)
  1966   0078F2  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1967   0078F4  EC69  F032         	call	_printf	;wreg free
  1968   0078F8  0100               	movlb	0	; () banked
  1969   0078FA  2BAC               	incf	main@i& (0+255),f,b
  1970   0078FC                     
  1971                           ; BSR set to: 0
  1972   0078FC  0E27               	movlw	39
  1973   0078FE  65AC               	cpfsgt	main@i& (0+255),b
  1974   007900  EF84  F03C         	goto	u1851
  1975   007904  EF86  F03C         	goto	u1850
  1976   007908                     u1851:
  1977   007908  EF76  F03C         	goto	l2852
  1978   00790C                     u1850:
  1979   00790C  EF8F  F03B         	goto	l384
  1980   007910                     l2858:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;main.c: 116:                     printf("Choose the index of the target baud rate\r\n")
      +                          ;
  1984   007910  0E9E               	movlw	low STR_28
  1985   007912  6F95               	movwf	printf@fmt& (0+255),b
  1986   007914  0E7D               	movlw	high STR_28
  1987   007916  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1988   007918  EC69  F032         	call	_printf	;wreg free
  1989                           
  1990                           ;main.c: 117:                     printf("0: 300 baud\r\n");
  1991   00791C  0E97               	movlw	low STR_29
  1992   00791E  0100               	movlb	0	; () banked
  1993   007920  6F95               	movwf	printf@fmt& (0+255),b
  1994   007922  0E7F               	movlw	high STR_29
  1995   007924  6F96               	movwf	(printf@fmt+1)& (0+255),b
  1996   007926  EC69  F032         	call	_printf	;wreg free
  1997                           
  1998                           ;main.c: 118:                     printf("1: 1200 baud\r\n");
  1999   00792A  0E5B               	movlw	low STR_30
  2000   00792C  0100               	movlb	0	; () banked
  2001   00792E  6F95               	movwf	printf@fmt& (0+255),b
  2002   007930  0E7F               	movlw	high STR_30
  2003   007932  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2004   007934  EC69  F032         	call	_printf	;wreg free
  2005                           
  2006                           ;main.c: 119:                     printf("2: 2400 baud\r\n");
  2007   007938  0E6A               	movlw	low STR_31
  2008   00793A  0100               	movlb	0	; () banked
  2009   00793C  6F95               	movwf	printf@fmt& (0+255),b
  2010   00793E  0E7F               	movlw	high STR_31
  2011   007940  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2012   007942  EC69  F032         	call	_printf	;wreg free
  2013                           
  2014                           ;main.c: 120:                     printf("3: 9600 baud\r\n");
  2015   007946  0E79               	movlw	low STR_32
  2016   007948  0100               	movlb	0	; () banked
  2017   00794A  6F95               	movwf	printf@fmt& (0+255),b
  2018   00794C  0E7F               	movlw	high STR_32
  2019   00794E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2020   007950  EC69  F032         	call	_printf	;wreg free
  2021                           
  2022                           ;main.c: 121:                     printf("4: 19200 baud\r\n");
  2023   007954  0E4B               	movlw	low STR_33
  2024   007956  0100               	movlb	0	; () banked
  2025   007958  6F95               	movwf	printf@fmt& (0+255),b
  2026   00795A  0E7F               	movlw	high STR_33
  2027   00795C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2028   00795E  EC69  F032         	call	_printf	;wreg free
  2029   007962                     l2860:
  2030   007962  ECDE  F031         	call	_EUSART1_is_rx_ready	;wreg free
  2031   007966  0900               	iorlw	0
  2032   007968  A4D8               	btfss	status,2,c
  2033   00796A  EFB9  F03C         	goto	u1861
  2034   00796E  EFBB  F03C         	goto	u1860
  2035   007972                     u1861:
  2036   007972  EFB1  F03C         	goto	l2860
  2037   007976                     u1860:
  2038   007976                     
  2039                           ;main.c: 123:                     baudRateSelected = EUSART1_Read() - '0';
  2040   007976  EC7D  F032         	call	_EUSART1_Read	;wreg free
  2041   00797A  0FD0               	addlw	208
  2042   00797C  0100               	movlb	0	; () banked
  2043   00797E  6FAD               	movwf	main@baudRateSelected& (0+255),b
  2044                           
  2045                           ;main.c: 124:                     switch (baudRateSelected)
  2046   007980  EFE0  F03C         	goto	l2878
  2047   007984                     l2864:
  2048                           
  2049                           ; BSR set to: 0
  2050   007984  0ED0               	movlw	208
  2051   007986  6E76               	movwf	118,c	;volatile
  2052                           
  2053                           ;main.c: 127:                             SPBRG2 = 0x54;
  2054   007988  0E54               	movlw	84
  2055   00798A  6E75               	movwf	117,c	;volatile
  2056                           
  2057                           ;main.c: 128:                             break;
  2058   00798C  EF01  F03D         	goto	l2880
  2059   007990                     l2866:
  2060                           
  2061                           ; BSR set to: 0
  2062   007990  0E34               	movlw	52
  2063   007992  6E76               	movwf	118,c	;volatile
  2064                           
  2065                           ;main.c: 130:                             SPBRG2 = 0x14;
  2066   007994  0E14               	movlw	20
  2067   007996  6E75               	movwf	117,c	;volatile
  2068                           
  2069                           ;main.c: 131:                             break;
  2070   007998  EF01  F03D         	goto	l2880
  2071   00799C                     l2868:
  2072                           
  2073                           ; BSR set to: 0
  2074   00799C  0E1A               	movlw	26
  2075   00799E  6E76               	movwf	118,c	;volatile
  2076                           
  2077                           ;main.c: 133:                             SPBRG2 = 0x0A;
  2078   0079A0  0E0A               	movlw	10
  2079   0079A2  6E75               	movwf	117,c	;volatile
  2080                           
  2081                           ;main.c: 134:                             break;
  2082   0079A4  EF01  F03D         	goto	l2880
  2083   0079A8                     l2870:
  2084                           
  2085                           ; BSR set to: 0
  2086   0079A8  0E06               	movlw	6
  2087   0079AA  6E76               	movwf	118,c	;volatile
  2088                           
  2089                           ;main.c: 136:                             SPBRG2 = 0x82;
  2090   0079AC  0E82               	movlw	130
  2091   0079AE  6E75               	movwf	117,c	;volatile
  2092                           
  2093                           ;main.c: 137:                             break;
  2094   0079B0  EF01  F03D         	goto	l2880
  2095   0079B4                     l2872:
  2096                           
  2097                           ; BSR set to: 0
  2098   0079B4  0E03               	movlw	3
  2099   0079B6  6E76               	movwf	118,c	;volatile
  2100                           
  2101                           ;main.c: 139:                             SPBRG2 = 0x40;
  2102   0079B8  0E40               	movlw	64
  2103   0079BA  6E75               	movwf	117,c	;volatile
  2104                           
  2105                           ;main.c: 140:                             break;
  2106   0079BC  EF01  F03D         	goto	l2880
  2107   0079C0                     l2878:
  2108                           
  2109                           ; BSR set to: 0
  2110   0079C0  51AD               	movf	main@baudRateSelected& (0+255),w,b
  2111   0079C2  6F9D               	movwf	??_main& (0+255),b
  2112   0079C4  6B9E               	clrf	(??_main+1)& (0+255),b
  2113                           
  2114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2115                           ; Switch size 1, requested type "simple"
  2116                           ; Number of cases is 1, Range of values is 0 to 0
  2117                           ; switch strategies available:
  2118                           ; Name         Instructions Cycles
  2119                           ; simple_byte            4     3 (average)
  2120                           ;	Chosen strategy is simple_byte
  2121   0079C6  519E               	movf	(??_main+1)& (0+255),w,b
  2122   0079C8  0A00               	xorlw	0	; case 0
  2123   0079CA  B4D8               	btfsc	status,2,c
  2124   0079CC  EFEA  F03C         	goto	l3112
  2125   0079D0  EFC8  F03C         	goto	l2866
  2126   0079D4                     l3112:
  2127                           
  2128                           ; BSR set to: 0
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 5, Range of values is 0 to 4
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte           16     9 (average)
  2134                           ;	Chosen strategy is simple_byte
  2135   0079D4  519D               	movf	??_main& (0+255),w,b
  2136   0079D6  0A00               	xorlw	0	; case 0
  2137   0079D8  B4D8               	btfsc	status,2,c
  2138   0079DA  EFC2  F03C         	goto	l2864
  2139   0079DE  0A01               	xorlw	1	; case 1
  2140   0079E0  B4D8               	btfsc	status,2,c
  2141   0079E2  EFC8  F03C         	goto	l2866
  2142   0079E6  0A03               	xorlw	3	; case 2
  2143   0079E8  B4D8               	btfsc	status,2,c
  2144   0079EA  EFCE  F03C         	goto	l2868
  2145   0079EE  0A01               	xorlw	1	; case 3
  2146   0079F0  B4D8               	btfsc	status,2,c
  2147   0079F2  EFD4  F03C         	goto	l2870
  2148   0079F6  0A07               	xorlw	7	; case 4
  2149   0079F8  B4D8               	btfsc	status,2,c
  2150   0079FA  EFDA  F03C         	goto	l2872
  2151   0079FE  EFC8  F03C         	goto	l2866
  2152   007A02                     l2880:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;main.c: 145:                     printf("Baud rate assigned %02x:%02x\r\n", SPBRGH2, SP
      +                          BRG2);
  2156   007A02  0E9B               	movlw	low STR_34
  2157   007A04  6F95               	movwf	printf@fmt& (0+255),b
  2158   007A06  0E7E               	movlw	high STR_34
  2159   007A08  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2160   007A0A  CF76 F097          	movff	3958,?_printf+2	;volatile
  2161   007A0E  6B98               	clrf	(?_printf+3)& (0+255),b
  2162   007A10  CF75 F099          	movff	3957,?_printf+4	;volatile
  2163   007A14  6B9A               	clrf	(?_printf+5)& (0+255),b
  2164   007A16  EC69  F032         	call	_printf	;wreg free
  2165                           
  2166                           ;main.c: 146:                     break;
  2167   007A1A  EF8F  F03B         	goto	l384
  2168   007A1E                     l2882:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ;main.c: 149:                     EPWM2_LoadDutyValue(25);
  2172   007A1E  0E00               	movlw	0
  2173   007A20  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2174   007A22  0E19               	movlw	25
  2175   007A24  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2176   007A26  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  2177   007A2A                     
  2178                           ;main.c: 150:                     TMR1_WriteTimer(0x10000 - bitPeriod[baudRateSelected])
      +                          ;
  2179   007A2A  0100               	movlb	0	; () banked
  2180   007A2C  51AD               	movf	main@baudRateSelected& (0+255),w,b
  2181   007A2E  0D02               	mullw	2
  2182   007A30  0E9F               	movlw	low main@bitPeriod
  2183   007A32  24F3               	addwf	243,w,c
  2184   007A34  6ED9               	movwf	fsr2l,c
  2185   007A36  0E00               	movlw	high main@bitPeriod
  2186   007A38  20F4               	addwfc	prodh,w,c
  2187   007A3A  6EDA               	movwf	fsr2h,c
  2188   007A3C  CFDE F09D          	movff	postinc2,??_main
  2189   007A40  CFDD F09E          	movff	postdec2,??_main+1
  2190   007A44  519D               	movf	??_main& (0+255),w,b
  2191   007A46  0800               	sublw	0
  2192   007A48  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  2193   007A4A  519E               	movf	(??_main+1)& (0+255),w,b
  2194   007A4C  A0D8               	btfss	status,0,c
  2195   007A4E  2AE8               	incf	wreg,f,c
  2196   007A50  0800               	sublw	0
  2197   007A52  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2198   007A54  EC55  F032         	call	_TMR1_WriteTimer	;wreg free
  2199   007A58                     
  2200                           ;main.c: 151:                     PIR1bits.TMR1IF = 0;
  2201   007A58  909E               	bcf	158,0,c	;volatile
  2202   007A5A                     l2888:
  2203   007A5A  ECF2  F031         	call	_TMR1_HasOverflowOccured	;wreg free
  2204   007A5E  0900               	iorlw	0
  2205   007A60  B4D8               	btfsc	status,2,c
  2206   007A62  EF35  F03D         	goto	u1871
  2207   007A66  EF37  F03D         	goto	u1870
  2208   007A6A                     u1871:
  2209   007A6A  EF2D  F03D         	goto	l2888
  2210   007A6E                     u1870:
  2211   007A6E                     
  2212                           ;main.c: 153:                     EPWM2_LoadDutyValue(0);
  2213   007A6E  0E00               	movlw	0
  2214   007A70  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2215   007A72  0E00               	movlw	0
  2216   007A74  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2217   007A76  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  2218                           
  2219                           ;main.c: 154:                     break;
  2220   007A7A  EF8F  F03B         	goto	l384
  2221   007A7E                     l2892:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;main.c: 157:                     EPWM2_LoadDutyValue(25);
  2225   007A7E  0E00               	movlw	0
  2226   007A80  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2227   007A82  0E19               	movlw	25
  2228   007A84  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2229   007A86  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  2230   007A8A                     
  2231                           ;main.c: 158:                     TMR1_WriteTimer(0x10000 - bitPeriod[baudRateSelected])
      +                          ;
  2232   007A8A  0100               	movlb	0	; () banked
  2233   007A8C  51AD               	movf	main@baudRateSelected& (0+255),w,b
  2234   007A8E  0D02               	mullw	2
  2235   007A90  0E9F               	movlw	low main@bitPeriod
  2236   007A92  24F3               	addwf	243,w,c
  2237   007A94  6ED9               	movwf	fsr2l,c
  2238   007A96  0E00               	movlw	high main@bitPeriod
  2239   007A98  20F4               	addwfc	prodh,w,c
  2240   007A9A  6EDA               	movwf	fsr2h,c
  2241   007A9C  CFDE F09D          	movff	postinc2,??_main
  2242   007AA0  CFDD F09E          	movff	postdec2,??_main+1
  2243   007AA4  519D               	movf	??_main& (0+255),w,b
  2244   007AA6  0800               	sublw	0
  2245   007AA8  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  2246   007AAA  519E               	movf	(??_main+1)& (0+255),w,b
  2247   007AAC  A0D8               	btfss	status,0,c
  2248   007AAE  2AE8               	incf	wreg,f,c
  2249   007AB0  0800               	sublw	0
  2250   007AB2  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2251   007AB4  EC55  F032         	call	_TMR1_WriteTimer	;wreg free
  2252   007AB8                     
  2253                           ;main.c: 159:                     PIR1bits.TMR1IF = 0;
  2254   007AB8  909E               	bcf	158,0,c	;volatile
  2255   007ABA                     l2898:
  2256   007ABA  ECF2  F031         	call	_TMR1_HasOverflowOccured	;wreg free
  2257   007ABE  0900               	iorlw	0
  2258   007AC0  B4D8               	btfsc	status,2,c
  2259   007AC2  EF65  F03D         	goto	u1881
  2260   007AC6  EF67  F03D         	goto	u1880
  2261   007ACA                     u1881:
  2262   007ACA  EF5D  F03D         	goto	l2898
  2263   007ACE                     u1880:
  2264   007ACE                     
  2265                           ;main.c: 162:                     mask = 0b00000001;
  2266   007ACE  0E01               	movlw	1
  2267   007AD0  0100               	movlb	0	; () banked
  2268   007AD2  6FAA               	movwf	main@mask& (0+255),b
  2269                           
  2270                           ;main.c: 163:                     while (mask != 0) {
  2271   007AD4  EFA9  F03D         	goto	l2916
  2272   007AD8                     l2902:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;main.c: 164:                         if ((letter & mask) != 0) EPWM2_LoadDutyValue(0);
  2276   007AD8  51AB               	movf	main@letter& (0+255),w,b
  2277   007ADA  15AA               	andwf	main@mask& (0+255),w,b
  2278   007ADC  0900               	iorlw	0
  2279   007ADE  B4D8               	btfsc	status,2,c
  2280   007AE0  EF74  F03D         	goto	u1891
  2281   007AE4  EF76  F03D         	goto	u1890
  2282   007AE8                     u1891:
  2283   007AE8  EF7E  F03D         	goto	l2906
  2284   007AEC                     u1890:
  2285   007AEC                     
  2286                           ; BSR set to: 0
  2287   007AEC  0E00               	movlw	0
  2288   007AEE  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2289   007AF0  0E00               	movlw	0
  2290   007AF2  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2291   007AF4  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  2292   007AF8  EF84  F03D         	goto	l2908
  2293   007AFC                     l2906:
  2294                           
  2295                           ; BSR set to: 0
  2296   007AFC  0E00               	movlw	0
  2297   007AFE  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2298   007B00  0E19               	movlw	25
  2299   007B02  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2300   007B04  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  2301   007B08                     l2908:
  2302                           
  2303                           ;main.c: 166:                         mask = mask << 1;
  2304   007B08  0100               	movlb	0	; () banked
  2305   007B0A  51AA               	movf	main@mask& (0+255),w,b
  2306   007B0C  25AA               	addwf	main@mask& (0+255),w,b
  2307   007B0E  6FAA               	movwf	main@mask& (0+255),b
  2308   007B10                     
  2309                           ; BSR set to: 0
  2310                           ;main.c: 167:                         TMR1_WriteTimer(0x10000 - bitPeriod[baudRateSelect
      +                          ed]);
  2311   007B10  51AD               	movf	main@baudRateSelected& (0+255),w,b
  2312   007B12  0D02               	mullw	2
  2313   007B14  0E9F               	movlw	low main@bitPeriod
  2314   007B16  24F3               	addwf	243,w,c
  2315   007B18  6ED9               	movwf	fsr2l,c
  2316   007B1A  0E00               	movlw	high main@bitPeriod
  2317   007B1C  20F4               	addwfc	prodh,w,c
  2318   007B1E  6EDA               	movwf	fsr2h,c
  2319   007B20  CFDE F09D          	movff	postinc2,??_main
  2320   007B24  CFDD F09E          	movff	postdec2,??_main+1
  2321   007B28  519D               	movf	??_main& (0+255),w,b
  2322   007B2A  0800               	sublw	0
  2323   007B2C  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  2324   007B2E  519E               	movf	(??_main+1)& (0+255),w,b
  2325   007B30  A0D8               	btfss	status,0,c
  2326   007B32  2AE8               	incf	wreg,f,c
  2327   007B34  0800               	sublw	0
  2328   007B36  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2329   007B38  EC55  F032         	call	_TMR1_WriteTimer	;wreg free
  2330   007B3C                     
  2331                           ;main.c: 168:                         PIR1bits.TMR1IF = 0;
  2332   007B3C  909E               	bcf	158,0,c	;volatile
  2333   007B3E                     l2914:
  2334   007B3E  ECF2  F031         	call	_TMR1_HasOverflowOccured	;wreg free
  2335   007B42  0900               	iorlw	0
  2336   007B44  B4D8               	btfsc	status,2,c
  2337   007B46  EFA7  F03D         	goto	u1901
  2338   007B4A  EFA9  F03D         	goto	u1900
  2339   007B4E                     u1901:
  2340   007B4E  EF9F  F03D         	goto	l2914
  2341   007B52                     u1900:
  2342   007B52                     l2916:
  2343                           
  2344                           ;main.c: 163:                     while (mask != 0) {
  2345   007B52  0100               	movlb	0	; () banked
  2346   007B54  51AA               	movf	main@mask& (0+255),w,b
  2347   007B56  A4D8               	btfss	status,2,c
  2348   007B58  EFB0  F03D         	goto	u1911
  2349   007B5C  EFB2  F03D         	goto	u1910
  2350   007B60                     u1911:
  2351   007B60  EF6C  F03D         	goto	l2902
  2352   007B64                     u1910:
  2353   007B64                     
  2354                           ; BSR set to: 0
  2355                           ;main.c: 172:                     EPWM2_LoadDutyValue(0);
  2356   007B64  0E00               	movlw	0
  2357   007B66  6E02               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2358   007B68  0E00               	movlw	0
  2359   007B6A  6E01               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2360   007B6C  ECD3  F032         	call	_EPWM2_LoadDutyValue	;wreg free
  2361   007B70                     
  2362                           ;main.c: 173:                     TMR1_WriteTimer(0x10000 - bitPeriod[baudRateSelected])
      +                          ;
  2363   007B70  0100               	movlb	0	; () banked
  2364   007B72  51AD               	movf	main@baudRateSelected& (0+255),w,b
  2365   007B74  0D02               	mullw	2
  2366   007B76  0E9F               	movlw	low main@bitPeriod
  2367   007B78  24F3               	addwf	243,w,c
  2368   007B7A  6ED9               	movwf	fsr2l,c
  2369   007B7C  0E00               	movlw	high main@bitPeriod
  2370   007B7E  20F4               	addwfc	prodh,w,c
  2371   007B80  6EDA               	movwf	fsr2h,c
  2372   007B82  CFDE F09D          	movff	postinc2,??_main
  2373   007B86  CFDD F09E          	movff	postdec2,??_main+1
  2374   007B8A  519D               	movf	??_main& (0+255),w,b
  2375   007B8C  0800               	sublw	0
  2376   007B8E  6E01               	movwf	TMR1_WriteTimer@timerVal^0,c
  2377   007B90  519E               	movf	(??_main+1)& (0+255),w,b
  2378   007B92  A0D8               	btfss	status,0,c
  2379   007B94  2AE8               	incf	wreg,f,c
  2380   007B96  0800               	sublw	0
  2381   007B98  6E02               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2382   007B9A  EC55  F032         	call	_TMR1_WriteTimer	;wreg free
  2383   007B9E                     
  2384                           ;main.c: 174:                     PIR1bits.TMR1IF = 0;
  2385   007B9E  909E               	bcf	158,0,c	;volatile
  2386   007BA0                     l2924:
  2387   007BA0  ECF2  F031         	call	_TMR1_HasOverflowOccured	;wreg free
  2388   007BA4  0900               	iorlw	0
  2389   007BA6  B4D8               	btfsc	status,2,c
  2390   007BA8  EFD8  F03D         	goto	u1921
  2391   007BAC  EFDA  F03D         	goto	u1920
  2392   007BB0                     u1921:
  2393   007BB0  EFD0  F03D         	goto	l2924
  2394   007BB4                     u1920:
  2395   007BB4                     
  2396                           ;main.c: 177:                     printf("just sent %c    %x\r\n", letter, letter);
  2397   007BB4  0E12               	movlw	low STR_35
  2398   007BB6  0100               	movlb	0	; () banked
  2399   007BB8  6F95               	movwf	printf@fmt& (0+255),b
  2400   007BBA  0E7F               	movlw	high STR_35
  2401   007BBC  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2402   007BBE  C0AB  F097         	movff	main@letter,?_printf+2
  2403   007BC2  6B98               	clrf	(?_printf+3)& (0+255),b
  2404   007BC4  C0AB  F099         	movff	main@letter,?_printf+4
  2405   007BC8  6B9A               	clrf	(?_printf+5)& (0+255),b
  2406   007BCA  EC69  F032         	call	_printf	;wreg free
  2407   007BCE                     
  2408                           ;main.c: 178:                     letter += 1;
  2409   007BCE  0100               	movlb	0	; () banked
  2410   007BD0  2BAB               	incf	main@letter& (0+255),f,b
  2411                           
  2412                           ;main.c: 179:                     break;
  2413   007BD2  EF8F  F03B         	goto	l384
  2414   007BD6                     l435:
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;main.c: 182:                     if (PIR3bits.RC2IF == 1)
  2418   007BD6  AAA4               	btfss	164,5,c	;volatile
  2419   007BD8  EFF0  F03D         	goto	u1931
  2420   007BDC  EFF2  F03D         	goto	u1930
  2421   007BE0                     u1931:
  2422   007BE0  EFFD  F03D         	goto	l2932
  2423   007BE4                     u1930:
  2424   007BE4                     
  2425                           ; BSR set to: 0
  2426                           ;main.c: 183:                         printf("Just read in %c from EUSART2\r\n", RCREG2)
      +                          ;
  2427   007BE4  0E7C               	movlw	low STR_36
  2428   007BE6  6F95               	movwf	printf@fmt& (0+255),b
  2429   007BE8  0E7E               	movlw	high STR_36
  2430   007BEA  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2431   007BEC  CF74 F097          	movff	3956,?_printf+2	;volatile
  2432   007BF0  6B98               	clrf	(?_printf+3)& (0+255),b
  2433   007BF2  EC69  F032         	call	_printf	;wreg free
  2434   007BF6  EF8F  F03B         	goto	l384
  2435   007BFA                     l2932:
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 185:                         printf("Nothing received from EUSART2\r\n");
  2439   007BFA  0E5C               	movlw	low STR_37
  2440   007BFC  6F95               	movwf	printf@fmt& (0+255),b
  2441   007BFE  0E7E               	movlw	high STR_37
  2442   007C00  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2443   007C02  EC69  F032         	call	_printf	;wreg free
  2444   007C06  EF8F  F03B         	goto	l384
  2445   007C0A                     l438:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;main.c: 188:                     RCSTA2bits.CREN = 0;
  2449   007C0A  9871               	bcf	113,4,c	;volatile
  2450                           
  2451                           ;main.c: 189:                     RCSTA2bits.CREN = 1;
  2452   007C0C  8871               	bsf	113,4,c	;volatile
  2453   007C0E                     
  2454                           ; BSR set to: 0
  2455                           ;main.c: 190:                     printf("Just reset EUSART2\r\n");
  2456   007C0E  0EE8               	movlw	low STR_38
  2457   007C10  6F95               	movwf	printf@fmt& (0+255),b
  2458   007C12  0E7E               	movlw	high STR_38
  2459   007C14  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2460   007C16  EC69  F032         	call	_printf	;wreg free
  2461                           
  2462                           ;main.c: 191:                     break;
  2463   007C1A  EF8F  F03B         	goto	l384
  2464   007C1E                     l2936:
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;main.c: 193:                     printf("Unknown key %c\r\n", cmd);
  2468   007C1E  0E3A               	movlw	low STR_39
  2469   007C20  6F95               	movwf	printf@fmt& (0+255),b
  2470   007C22  0E7F               	movlw	high STR_39
  2471   007C24  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2472   007C26  C0A9  F097         	movff	main@cmd,?_printf+2
  2473   007C2A  6B98               	clrf	(?_printf+3)& (0+255),b
  2474   007C2C  EC69  F032         	call	_printf	;wreg free
  2475                           
  2476                           ;main.c: 194:                     break;
  2477   007C30  EF8F  F03B         	goto	l384
  2478   007C34                     l2940:
  2479                           
  2480                           ; BSR set to: 0
  2481   007C34  51A9               	movf	main@cmd& (0+255),w,b
  2482   007C36  6F9D               	movwf	??_main& (0+255),b
  2483   007C38  6B9E               	clrf	(??_main+1)& (0+255),b
  2484                           
  2485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2486                           ; Switch size 1, requested type "simple"
  2487                           ; Number of cases is 1, Range of values is 0 to 0
  2488                           ; switch strategies available:
  2489                           ; Name         Instructions Cycles
  2490                           ; simple_byte            4     3 (average)
  2491                           ;	Chosen strategy is simple_byte
  2492   007C3A  519E               	movf	(??_main+1)& (0+255),w,b
  2493   007C3C  0A00               	xorlw	0	; case 0
  2494   007C3E  B4D8               	btfsc	status,2,c
  2495   007C40  EF24  F03E         	goto	l3114
  2496   007C44  EF0F  F03E         	goto	l2936
  2497   007C48                     l3114:
  2498                           
  2499                           ; BSR set to: 0
  2500                           ; Switch size 1, requested type "simple"
  2501                           ; Number of cases is 9, Range of values is 63 to 122
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte           28    15 (average)
  2505                           ;	Chosen strategy is simple_byte
  2506   007C48  519D               	movf	??_main& (0+255),w,b
  2507   007C4A  0A3F               	xorlw	63	; case 63
  2508   007C4C  B4D8               	btfsc	status,2,c
  2509   007C4E  EF9F  F03B         	goto	l2812
  2510   007C52  0A6D               	xorlw	109	; case 82
  2511   007C54  B4D8               	btfsc	status,2,c
  2512   007C56  EFEB  F03D         	goto	l435
  2513   007C5A  0A01               	xorlw	1	; case 83
  2514   007C5C  B4D8               	btfsc	status,2,c
  2515   007C5E  EF3F  F03D         	goto	l2892
  2516   007C62  0A09               	xorlw	9	; case 90
  2517   007C64  B4D8               	btfsc	status,2,c
  2518   007C66  EF5F  F03C         	goto	l2834
  2519   007C6A  0A38               	xorlw	56	; case 98
  2520   007C6C  B4D8               	btfsc	status,2,c
  2521   007C6E  EF88  F03C         	goto	l2858
  2522   007C72  0A0D               	xorlw	13	; case 111
  2523   007C74  B4D8               	btfsc	status,2,c
  2524   007C76  EF57  F03C         	goto	l2832
  2525   007C7A  0A1F               	xorlw	31	; case 112
  2526   007C7C  B4D8               	btfsc	status,2,c
  2527   007C7E  EF0F  F03D         	goto	l2882
  2528   007C82  0A02               	xorlw	2	; case 114
  2529   007C84  B4D8               	btfsc	status,2,c
  2530   007C86  EF05  F03E         	goto	l438
  2531   007C8A  0A08               	xorlw	8	; case 122
  2532   007C8C  B4D8               	btfsc	status,2,c
  2533   007C8E  EF74  F03C         	goto	l2846
  2534   007C92  EF0F  F03E         	goto	l2936
  2535   007C96  EF00  F000         	goto	start
  2536   007C9A                     __end_of_main:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _printf *****************
  2540 ;; Defined at:
  2541 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  2544 ;;		 -> STR_39(17), STR_38(21), STR_37(32), STR_36(31), 
  2545 ;;		 -> STR_35(21), STR_34(31), STR_33(16), STR_32(15), 
  2546 ;;		 -> STR_31(15), STR_30(15), STR_29(14), STR_28(43), 
  2547 ;;		 -> STR_27(2), STR_26(2), STR_25(8), STR_24(52), 
  2548 ;;		 -> STR_23(19), STR_22(37), STR_21(34), STR_20(91), 
  2549 ;;		 -> STR_19(46), STR_18(24), STR_17(21), STR_16(7), 
  2550 ;;		 -> STR_15(15), STR_14(52), STR_13(12), STR_12(13), 
  2551 ;;		 -> STR_11(12), STR_10(12), STR_9(12), STR_8(11), 
  2552 ;;		 -> STR_7(52), STR_6(5), STR_5(42), STR_4(70), 
  2553 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  ap              2    6[BANK0 ] PTR void [1]
  2556 ;;		 -> ?_printf(2), 
  2557 ;;  ret             2    0        int 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  2    0[BANK0 ] int 
  2560 ;; Registers used:
  2561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2567 ;;      Params:         0       6       0       0       0       0       0
  2568 ;;      Locals:         0       2       0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0
  2570 ;;      Totals:         0       8       0       0       0       0       0
  2571 ;;Total ram usage:        8 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 8
  2574 ;; This function calls:
  2575 ;;		_vfprintf
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text1
  2582   0064D2                     __ptext1:
  2583                           	callstack 0
  2584   0064D2                     _printf:
  2585                           	callstack 22
  2586   0064D2  0E97               	movlw	low (?_printf+2)
  2587   0064D4  0100               	movlb	0	; () banked
  2588   0064D6  6F9B               	movwf	printf@ap& (0+255),b
  2589   0064D8  0E00               	movlw	high (?_printf+2)
  2590   0064DA  6F9C               	movwf	(printf@ap+1)& (0+255),b
  2591   0064DC                     
  2592                           ; BSR set to: 0
  2593   0064DC  0E00               	movlw	0
  2594   0064DE  6E58               	movwf	vfprintf@fp^0,c
  2595   0064E0  0E00               	movlw	0
  2596   0064E2  6E59               	movwf	(vfprintf@fp+1)^0,c
  2597   0064E4  C095  F05A         	movff	printf@fmt,vfprintf@fmt
  2598   0064E8  C096  F05B         	movff	printf@fmt+1,vfprintf@fmt+1
  2599   0064EC  0E9B               	movlw	low printf@ap
  2600   0064EE  6E5C               	movwf	vfprintf@ap^0,c
  2601   0064F0  0E00               	movlw	high printf@ap
  2602   0064F2  6E5D               	movwf	(vfprintf@ap+1)^0,c
  2603   0064F4  ECAB  F033         	call	_vfprintf	;wreg free
  2604   0064F8  0012               	return		;funcret
  2605   0064FA                     __end_of_printf:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function _vfprintf *****************
  2609 ;; Defined at:
  2610 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  2613 ;;		 -> NULL(0), 
  2614 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  2615 ;;		 -> STR_39(17), STR_38(21), STR_37(32), STR_36(31), 
  2616 ;;		 -> STR_35(21), STR_34(31), STR_33(16), STR_32(15), 
  2617 ;;		 -> STR_31(15), STR_30(15), STR_29(14), STR_28(43), 
  2618 ;;		 -> STR_27(2), STR_26(2), STR_25(8), STR_24(52), 
  2619 ;;		 -> STR_23(19), STR_22(37), STR_21(34), STR_20(91), 
  2620 ;;		 -> STR_19(46), STR_18(24), STR_17(21), STR_16(7), 
  2621 ;;		 -> STR_15(15), STR_14(52), STR_13(12), STR_12(13), 
  2622 ;;		 -> STR_11(12), STR_10(12), STR_9(12), STR_8(11), 
  2623 ;;		 -> STR_7(52), STR_6(5), STR_5(42), STR_4(70), 
  2624 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  2625 ;;  ap              2   91[COMRAM] PTR PTR void 
  2626 ;;		 -> printf@ap(2), 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  2629 ;;		 -> STR_39(17), STR_38(21), STR_37(32), STR_36(31), 
  2630 ;;		 -> STR_35(21), STR_34(31), STR_33(16), STR_32(15), 
  2631 ;;		 -> STR_31(15), STR_30(15), STR_29(14), STR_28(43), 
  2632 ;;		 -> STR_27(2), STR_26(2), STR_25(8), STR_24(52), 
  2633 ;;		 -> STR_23(19), STR_22(37), STR_21(34), STR_20(91), 
  2634 ;;		 -> STR_19(46), STR_18(24), STR_17(21), STR_16(7), 
  2635 ;;		 -> STR_15(15), STR_14(52), STR_13(12), STR_12(13), 
  2636 ;;		 -> STR_11(12), STR_10(12), STR_9(12), STR_8(11), 
  2637 ;;		 -> STR_7(52), STR_6(5), STR_5(42), STR_4(70), 
  2638 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  2   87[COMRAM] int 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:         6       0       0       0       0       0       0
  2649 ;;      Locals:         2       0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0
  2651 ;;      Totals:         8       0       0       0       0       0       0
  2652 ;;Total ram usage:        8 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 7
  2655 ;; This function calls:
  2656 ;;		_vfpfcnvrt
  2657 ;; This function is called by:
  2658 ;;		_printf
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text2
  2663   006756                     __ptext2:
  2664                           	callstack 0
  2665   006756                     _vfprintf:
  2666                           	callstack 22
  2667   006756                     
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2669   006756  C05A  F05E         	movff	vfprintf@fmt,vfprintf@cfmt
  2670   00675A  C05B  F05F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2673   00675E  EFBF  F033         	goto	l2702
  2674   006762                     l2700:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2677   006762  C058  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  2678   006766  C059  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2679   00676A  0E5E               	movlw	low vfprintf@cfmt
  2680   00676C  6E43               	movwf	vfpfcnvrt@fmt^0,c
  2681   00676E  0E00               	movlw	high vfprintf@cfmt
  2682   006770  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2683   006772  C05C  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  2684   006776  C05D  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2685   00677A  EC37  F039         	call	_vfpfcnvrt	;wreg free
  2686   00677E                     l2702:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2689   00677E  C05E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2690   006782  C05F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2691   006786                     	if	0	;tblptru may be non-zero
  2692   006786                     	endif
  2693   006786                     	if	0	;tblptru may be non-zero
  2694   006786                     	endif
  2695   006786  0008               	tblrd		*
  2696   006788  50F5               	movf	tablat,w,c
  2697   00678A  0900               	iorlw	0
  2698   00678C  A4D8               	btfss	status,2,c
  2699   00678E  EFCB  F033         	goto	u1701
  2700   006792  EFCD  F033         	goto	u1700
  2701   006796                     u1701:
  2702   006796  EFB1  F033         	goto	l2700
  2703   00679A                     u1700:
  2704   00679A                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2706   00679A  0E00               	movlw	0
  2707   00679C  6E59               	movwf	(?_vfprintf+1)^0,c
  2708   00679E  0E00               	movlw	0
  2709   0067A0  6E58               	movwf	?_vfprintf^0,c
  2710   0067A2  0012               	return		;funcret
  2711   0067A4                     __end_of_vfprintf:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _vfpfcnvrt *****************
  2715 ;; Defined at:
  2716 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  2719 ;;		 -> NULL(0), 
  2720 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  2721 ;;		 -> vfprintf@cfmt(2), 
  2722 ;;  ap              2   68[COMRAM] PTR PTR void 
  2723 ;;		 -> printf@ap(2), 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  convarg         8   77[COMRAM] struct .
  2726 ;;  cp              2   85[COMRAM] PTR unsigned char 
  2727 ;;		 -> STR_39(17), STR_38(21), STR_37(32), STR_36(31), 
  2728 ;;		 -> STR_35(21), STR_34(31), STR_33(16), STR_32(15), 
  2729 ;;		 -> STR_31(15), STR_30(15), STR_29(14), STR_28(43), 
  2730 ;;		 -> STR_27(2), STR_26(2), STR_25(8), STR_24(52), 
  2731 ;;		 -> STR_23(19), STR_22(37), STR_21(34), STR_20(91), 
  2732 ;;		 -> STR_19(46), STR_18(24), STR_17(21), STR_16(7), 
  2733 ;;		 -> STR_15(15), STR_14(52), STR_13(12), STR_12(13), 
  2734 ;;		 -> STR_11(12), STR_10(12), STR_9(12), STR_8(11), 
  2735 ;;		 -> STR_7(52), STR_6(5), STR_5(42), STR_4(70), 
  2736 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  2737 ;;  done            2   74[COMRAM] int 
  2738 ;;  i               2    0        int 
  2739 ;;  c               1   76[COMRAM] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      void 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2749 ;;      Params:         6       0       0       0       0       0       0
  2750 ;;      Locals:        13       0       0       0       0       0       0
  2751 ;;      Temps:          4       0       0       0       0       0       0
  2752 ;;      Totals:        23       0       0       0       0       0       0
  2753 ;;Total ram usage:       23 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 6
  2756 ;; This function calls:
  2757 ;;		_atoi
  2758 ;;		_ctoa
  2759 ;;		_dtoa
  2760 ;;		_fputc
  2761 ;;		_isdigit
  2762 ;;		_xtoa
  2763 ;; This function is called by:
  2764 ;;		_vfprintf
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text3
  2769   00726E                     __ptext3:
  2770                           	callstack 0
  2771   00726E                     _vfpfcnvrt:
  2772                           	callstack 22
  2773   00726E                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2775   00726E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2776   007272  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2777   007276  CFDE FFF6          	movff	postinc2,tblptrl
  2778   00727A  CFDD FFF7          	movff	postdec2,tblptrh
  2779   00727E                     	if	0	;tblptru may be non-zero
  2780   00727E                     	endif
  2781   00727E                     	if	0	;tblptru may be non-zero
  2782   00727E                     	endif
  2783   00727E  0008               	tblrd		*
  2784   007280  50F5               	movf	tablat,w,c
  2785   007282  0A25               	xorlw	37
  2786   007284  A4D8               	btfss	status,2,c
  2787   007286  EF47  F039         	goto	u1601
  2788   00728A  EF49  F039         	goto	u1600
  2789   00728E                     u1601:
  2790   00728E  EF11  F03B         	goto	l2644
  2791   007292                     u1600:
  2792   007292                     
  2793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2794   007292  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2795   007296  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2796   00729A  2ADE               	incf	postinc2,f,c
  2797   00729C  0E00               	movlw	0
  2798   00729E  22DD               	addwfc	postdec2,f,c
  2799   0072A0                     
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2801   0072A0  0E00               	movlw	0
  2802   0072A2  0100               	movlb	0	; () banked
  2803   0072A4  6F61               	movwf	(_width+1)& (0+255),b
  2804   0072A6  0E00               	movlw	0
  2805   0072A8  6F60               	movwf	_width& (0+255),b
  2806   0072AA  C060  F072         	movff	_width,_flags
  2807   0072AE                     
  2808                           ; BSR set to: 0
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2810   0072AE  6962               	setf	_prec& (0+255),b
  2811   0072B0  6963               	setf	(_prec+1)& (0+255),b
  2812   0072B2                     
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2815   0072B2  0E00               	movlw	0
  2816   0072B4  6E4C               	movwf	(vfpfcnvrt@done+1)^0,c
  2817   0072B6  0E00               	movlw	0
  2818   0072B8  6E4B               	movwf	vfpfcnvrt@done^0,c
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2821   0072BA  EF8A  F039         	goto	l2590
  2822   0072BE                     l2580:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2825   0072BE  0100               	movlb	0	; () banked
  2826   0072C0  8372               	bsf	_flags& (0+255),1,b
  2827   0072C2                     
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2830   0072C2  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2831   0072C6  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2832   0072CA  2ADE               	incf	postinc2,f,c
  2833   0072CC  0E00               	movlw	0
  2834   0072CE  22DD               	addwfc	postdec2,f,c
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2837   0072D0  EF8A  F039         	goto	l2590
  2838   0072D4                     l2584:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2841   0072D4  0E00               	movlw	0
  2842   0072D6  6E4C               	movwf	(vfpfcnvrt@done+1)^0,c
  2843   0072D8  0E01               	movlw	1
  2844   0072DA  6E4B               	movwf	vfpfcnvrt@done^0,c
  2845                           
  2846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2847   0072DC  EF8A  F039         	goto	l2590
  2848   0072E0                     l2588:
  2849   0072E0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2850   0072E4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2851   0072E8  CFDE FFF6          	movff	postinc2,tblptrl
  2852   0072EC  CFDD FFF7          	movff	postdec2,tblptrh
  2853   0072F0                     	if	0	;tblptru may be non-zero
  2854   0072F0                     	endif
  2855   0072F0                     	if	0	;tblptru may be non-zero
  2856   0072F0                     	endif
  2857   0072F0  0008               	tblrd		*
  2858   0072F2  50F5               	movf	tablat,w,c
  2859   0072F4  6E47               	movwf	??_vfpfcnvrt^0,c
  2860   0072F6  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  2861                           
  2862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2863                           ; Switch size 1, requested type "simple"
  2864                           ; Number of cases is 1, Range of values is 0 to 0
  2865                           ; switch strategies available:
  2866                           ; Name         Instructions Cycles
  2867                           ; simple_byte            4     3 (average)
  2868                           ;	Chosen strategy is simple_byte
  2869   0072F8  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  2870   0072FA  0A00               	xorlw	0	; case 0
  2871   0072FC  B4D8               	btfsc	status,2,c
  2872   0072FE  EF83  F039         	goto	l3116
  2873   007302  EF6A  F039         	goto	l2584
  2874   007306                     l3116:
  2875                           
  2876                           ; Switch size 1, requested type "simple"
  2877                           ; Number of cases is 1, Range of values is 48 to 48
  2878                           ; switch strategies available:
  2879                           ; Name         Instructions Cycles
  2880                           ; simple_byte            4     3 (average)
  2881                           ;	Chosen strategy is simple_byte
  2882   007306  5047               	movf	??_vfpfcnvrt^0,w,c
  2883   007308  0A30               	xorlw	48	; case 48
  2884   00730A  B4D8               	btfsc	status,2,c
  2885   00730C  EF5F  F039         	goto	l2580
  2886   007310  EF6A  F039         	goto	l2584
  2887   007314                     l2590:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2890   007314  504B               	movf	vfpfcnvrt@done^0,w,c
  2891   007316  104C               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2892   007318  B4D8               	btfsc	status,2,c
  2893   00731A  EF91  F039         	goto	u1611
  2894   00731E  EF93  F039         	goto	u1610
  2895   007322                     u1611:
  2896   007322  EF70  F039         	goto	l2588
  2897   007326                     u1610:
  2898   007326                     
  2899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2900   007326  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2901   00732A  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2902   00732E  CFDE FFF6          	movff	postinc2,tblptrl
  2903   007332  CFDD FFF7          	movff	postdec2,tblptrh
  2904   007336                     	if	0	;tblptru may be non-zero
  2905   007336                     	endif
  2906   007336                     	if	0	;tblptru may be non-zero
  2907   007336                     	endif
  2908   007336  0008               	tblrd		*
  2909   007338  50F5               	movf	tablat,w,c
  2910   00733A  0A2A               	xorlw	42
  2911   00733C  A4D8               	btfss	status,2,c
  2912   00733E  EFA3  F039         	goto	u1621
  2913   007342  EFA5  F039         	goto	u1620
  2914   007346                     u1621:
  2915   007346  EFCF  F039         	goto	l2600
  2916   00734A                     u1620:
  2917   00734A                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2919   00734A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2920   00734E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2921   007352  2ADE               	incf	postinc2,f,c
  2922   007354  0E00               	movlw	0
  2923   007356  22DD               	addwfc	postdec2,f,c
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2926   007358  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2927   00735C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2928   007360  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2929   007364  0E02               	movlw	2
  2930   007366  26DE               	addwf	postinc2,f,c
  2931   007368  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2932   00736C  0E00               	movlw	0
  2933   00736E  22DD               	addwfc	postdec2,f,c
  2934   007370  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2935   007374  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2936   007378  CFDE F060          	movff	postinc2,_width
  2937   00737C  CFDD F061          	movff	postdec2,_width+1
  2938   007380                     
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2940   007380  0100               	movlb	0	; () banked
  2941   007382  BF61               	btfsc	(_width+1)& (0+255),7,b
  2942   007384  EFC8  F039         	goto	u1630
  2943   007388  EFC6  F039         	goto	u1631
  2944   00738C                     u1631:
  2945   00738C  EF02  F03A         	goto	l2608
  2946   007390                     u1630:
  2947   007390                     
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2950   007390  8172               	bsf	_flags& (0+255),0,b
  2951                           
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2953   007392  6D60               	negf	_width& (0+255),b
  2954   007394  1F61               	comf	(_width+1)& (0+255),f,b
  2955   007396  B0D8               	btfsc	status,0,c
  2956   007398  2B61               	incf	(_width+1)& (0+255),f,b
  2957   00739A  EF02  F03A         	goto	l2608
  2958   00739E                     l2600:
  2959                           
  2960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2961   00739E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2962   0073A2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2963   0073A6  CFDE F007          	movff	postinc2,atoi@s
  2964   0073AA  CFDD F008          	movff	postdec2,atoi@s+1
  2965   0073AE  ECDA  F034         	call	_atoi	;wreg free
  2966   0073B2  C007  F060         	movff	?_atoi,_width
  2967   0073B6  C008  F061         	movff	?_atoi+1,_width+1
  2968                           
  2969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2970   0073BA  EFE6  F039         	goto	l2606
  2971   0073BE                     l2602:
  2972                           
  2973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2974   0073BE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2975   0073C2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2976   0073C6  2ADE               	incf	postinc2,f,c
  2977   0073C8  0E00               	movlw	0
  2978   0073CA  22DD               	addwfc	postdec2,f,c
  2979   0073CC                     l2606:
  2980   0073CC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2981   0073D0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2982   0073D4  CFDE FFF6          	movff	postinc2,tblptrl
  2983   0073D8  CFDD FFF7          	movff	postdec2,tblptrh
  2984   0073DC                     	if	0	;tblptru may be non-zero
  2985   0073DC                     	endif
  2986   0073DC                     	if	0	;tblptru may be non-zero
  2987   0073DC                     	endif
  2988   0073DC  0008               	tblrd		*
  2989   0073DE  CFF5 F047          	movff	tablat,??_vfpfcnvrt
  2990   0073E2  0ED0               	movlw	208
  2991   0073E4  2447               	addwf	??_vfpfcnvrt^0,w,c
  2992   0073E6  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  2993   0073E8  6A49               	clrf	(??_vfpfcnvrt+2)^0,c
  2994   0073EA  0EFF               	movlw	255
  2995   0073EC  2249               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2996   0073EE  5049               	movf	(??_vfpfcnvrt+2)^0,w,c
  2997   0073F0  E109               	bnz	u1640
  2998   0073F2  0E0A               	movlw	10
  2999   0073F4  5C48               	subwf	(??_vfpfcnvrt+1)^0,w,c
  3000   0073F6  A0D8               	btfss	status,0,c
  3001   0073F8  EF00  F03A         	goto	u1641
  3002   0073FC  EF02  F03A         	goto	u1640
  3003   007400                     u1641:
  3004   007400  EFDF  F039         	goto	l2602
  3005   007404                     u1640:
  3006   007404                     l2608:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  3009   007404  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3010   007408  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3011   00740C  CFDE FFF6          	movff	postinc2,tblptrl
  3012   007410  CFDD FFF7          	movff	postdec2,tblptrh
  3013   007414                     	if	0	;tblptru may be non-zero
  3014   007414                     	endif
  3015   007414                     	if	0	;tblptru may be non-zero
  3016   007414                     	endif
  3017   007414  0008               	tblrd		*
  3018   007416  50F5               	movf	tablat,w,c
  3019   007418  0A63               	xorlw	99
  3020   00741A  A4D8               	btfss	status,2,c
  3021   00741C  EF12  F03A         	goto	u1651
  3022   007420  EF14  F03A         	goto	u1650
  3023   007424                     u1651:
  3024   007424  EF37  F03A         	goto	l2616
  3025   007428                     u1650:
  3026   007428                     
  3027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  3028   007428  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3029   00742C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3030   007430  2ADE               	incf	postinc2,f,c
  3031   007432  0E00               	movlw	0
  3032   007434  22DD               	addwfc	postdec2,f,c
  3033                           
  3034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3035   007436  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3036   00743A  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3037   00743E  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3038   007442  0E02               	movlw	2
  3039   007444  26DE               	addwf	postinc2,f,c
  3040   007446  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3041   00744A  0E00               	movlw	0
  3042   00744C  22DD               	addwfc	postdec2,f,c
  3043   00744E  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3044   007452  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3045   007456  50DF               	movf	indf2,w,c
  3046   007458  6E4D               	movwf	vfpfcnvrt@c^0,c
  3047   00745A                     
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  3049   00745A  C041  F00C         	movff	vfpfcnvrt@fp,ctoa@fp
  3050   00745E  C042  F00D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3051   007462  C04D  F00E         	movff	vfpfcnvrt@c,ctoa@c
  3052   007466  EC74  F034         	call	_ctoa	;wreg free
  3053   00746A  EF25  F03B         	goto	l1231
  3054   00746E                     l2616:
  3055                           
  3056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3057   00746E  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3058   007472  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3059   007476  CFDE F056          	movff	postinc2,vfpfcnvrt@cp
  3060   00747A  CFDD F057          	movff	postdec2,vfpfcnvrt@cp+1
  3061   00747E                     
  3062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3063   00747E  C056  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3064   007482  C057  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3065   007486                     	if	0	;tblptru may be non-zero
  3066   007486                     	endif
  3067   007486                     	if	0	;tblptru may be non-zero
  3068   007486                     	endif
  3069   007486  0008               	tblrd		*
  3070   007488  50F5               	movf	tablat,w,c
  3071   00748A  0A64               	xorlw	100
  3072   00748C  B4D8               	btfsc	status,2,c
  3073   00748E  EF4B  F03A         	goto	u1661
  3074   007492  EF4D  F03A         	goto	u1660
  3075   007496                     u1661:
  3076   007496  EF5B  F03A         	goto	l2622
  3077   00749A                     u1660:
  3078   00749A  C056  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3079   00749E  C057  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3080   0074A2                     	if	0	;tblptru may be non-zero
  3081   0074A2                     	endif
  3082   0074A2                     	if	0	;tblptru may be non-zero
  3083   0074A2                     	endif
  3084   0074A2  0008               	tblrd		*
  3085   0074A4  50F5               	movf	tablat,w,c
  3086   0074A6  0A69               	xorlw	105
  3087   0074A8  A4D8               	btfss	status,2,c
  3088   0074AA  EF59  F03A         	goto	u1671
  3089   0074AE  EF5B  F03A         	goto	u1670
  3090   0074B2                     u1671:
  3091   0074B2  EF9E  F03A         	goto	l2628
  3092   0074B6                     u1670:
  3093   0074B6                     l2622:
  3094                           
  3095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3096   0074B6  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3097   0074BA  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3098   0074BE  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3099   0074C2  0E02               	movlw	2
  3100   0074C4  26DE               	addwf	postinc2,f,c
  3101   0074C6  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3102   0074CA  0E00               	movlw	0
  3103   0074CC  22DD               	addwfc	postdec2,f,c
  3104   0074CE  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3105   0074D2  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3106   0074D6  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg
  3107   0074DA  CFDD F04F          	movff	postdec2,vfpfcnvrt@convarg+1
  3108   0074DE  0E00               	movlw	0
  3109   0074E0  BE4F               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3110   0074E2  0EFF               	movlw	-1
  3111   0074E4  6E50               	movwf	(vfpfcnvrt@convarg+2)^0,c
  3112   0074E6  6E51               	movwf	(vfpfcnvrt@convarg+3)^0,c
  3113   0074E8  6E52               	movwf	(vfpfcnvrt@convarg+4)^0,c
  3114   0074EA  6E53               	movwf	(vfpfcnvrt@convarg+5)^0,c
  3115   0074EC  6E54               	movwf	(vfpfcnvrt@convarg+6)^0,c
  3116   0074EE  6E55               	movwf	(vfpfcnvrt@convarg+7)^0,c
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3119   0074F0  0E01               	movlw	1
  3120   0074F2  2456               	addwf	vfpfcnvrt@cp^0,w,c
  3121   0074F4  6E47               	movwf	??_vfpfcnvrt^0,c
  3122   0074F6  0E00               	movlw	0
  3123   0074F8  2057               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3124   0074FA  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  3125   0074FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3126   007500  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3127   007504  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  3128   007508  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3129   00750C                     
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3131   00750C  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  3132   007510  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3133   007514  C04E  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  3134   007518  C04F  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3135   00751C  C050  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3136   007520  C051  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3137   007524  C052  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3138   007528  C053  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3139   00752C  C054  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3140   007530  C055  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3141   007534  ECDC  F037         	call	_dtoa	;wreg free
  3142   007538  EF25  F03B         	goto	l1231
  3143   00753C                     l2628:
  3144   00753C  C056  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3145   007540  C057  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3146   007544                     	if	0	;tblptru may be non-zero
  3147   007544                     	endif
  3148   007544                     	if	0	;tblptru may be non-zero
  3149   007544                     	endif
  3150   007544  0008               	tblrd		*
  3151   007546  50F5               	movf	tablat,w,c
  3152   007548  0A78               	xorlw	120
  3153   00754A  A4D8               	btfss	status,2,c
  3154   00754C  EFAA  F03A         	goto	u1681
  3155   007550  EFAC  F03A         	goto	u1680
  3156   007554                     u1681:
  3157   007554  EF08  F03B         	goto	l2640
  3158   007558                     u1680:
  3159   007558                     
  3160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3161   007558  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3162   00755C  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3163   007560  CFDF F047          	movff	indf2,??_vfpfcnvrt
  3164   007564  0E02               	movlw	2
  3165   007566  26DE               	addwf	postinc2,f,c
  3166   007568  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  3167   00756C  0E00               	movlw	0
  3168   00756E  22DD               	addwfc	postdec2,f,c
  3169   007570  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3170   007574  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3171   007578  CFDE F049          	movff	postinc2,??_vfpfcnvrt+2
  3172   00757C  CFDD F04A          	movff	postdec2,??_vfpfcnvrt+3
  3173   007580  C049  F04E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3174   007584  C04A  F04F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3175   007588  6A50               	clrf	(vfpfcnvrt@convarg+2)^0,c
  3176   00758A  6A51               	clrf	(vfpfcnvrt@convarg+3)^0,c
  3177   00758C  6A52               	clrf	(vfpfcnvrt@convarg+4)^0,c
  3178   00758E  6A53               	clrf	(vfpfcnvrt@convarg+5)^0,c
  3179   007590  6A54               	clrf	(vfpfcnvrt@convarg+6)^0,c
  3180   007592  6A55               	clrf	(vfpfcnvrt@convarg+7)^0,c
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  3183   007594  0E01               	movlw	1
  3184   007596  2456               	addwf	vfpfcnvrt@cp^0,w,c
  3185   007598  6E47               	movwf	??_vfpfcnvrt^0,c
  3186   00759A  0E00               	movlw	0
  3187   00759C  2057               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3188   00759E  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  3189   0075A0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3190   0075A4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3191   0075A8  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  3192   0075AC  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  3195   0075B0  EFF2  F03A         	goto	l2638
  3196   0075B4                     l2632:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  3199   0075B4  C041  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  3200   0075B8  C042  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3201   0075BC  C04E  F020         	movff	vfpfcnvrt@convarg,xtoa@d
  3202   0075C0  C04F  F021         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  3203   0075C4  C050  F022         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  3204   0075C8  C051  F023         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  3205   0075CC  C052  F024         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  3206   0075D0  C053  F025         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  3207   0075D4  C054  F026         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  3208   0075D8  C055  F027         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  3209   0075DC  ECF5  F036         	call	_xtoa	;wreg free
  3210   0075E0  EF25  F03B         	goto	l1231
  3211   0075E4                     l2638:
  3212   0075E4  C056  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3213   0075E8  C057  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3214   0075EC                     	if	0	;tblptru may be non-zero
  3215   0075EC                     	endif
  3216   0075EC                     	if	0	;tblptru may be non-zero
  3217   0075EC                     	endif
  3218   0075EC  0008               	tblrd		*
  3219   0075EE  50F5               	movf	tablat,w,c
  3220   0075F0  6E47               	movwf	??_vfpfcnvrt^0,c
  3221   0075F2  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  3222                           
  3223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 1, Range of values is 0 to 0
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            4     3 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230   0075F4  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  3231   0075F6  0A00               	xorlw	0	; case 0
  3232   0075F8  B4D8               	btfsc	status,2,c
  3233   0075FA  EF01  F03B         	goto	l3118
  3234   0075FE  EF08  F03B         	goto	l2640
  3235   007602                     l3118:
  3236                           
  3237                           ; Switch size 1, requested type "simple"
  3238                           ; Number of cases is 1, Range of values is 120 to 120
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            4     3 (average)
  3242                           ;	Chosen strategy is simple_byte
  3243   007602  5047               	movf	??_vfpfcnvrt^0,w,c
  3244   007604  0A78               	xorlw	120	; case 120
  3245   007606  B4D8               	btfsc	status,2,c
  3246   007608  EFDA  F03A         	goto	l2632
  3247   00760C  EF08  F03B         	goto	l2640
  3248   007610                     l2640:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3251   007610  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3252   007614  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3253   007618  2ADE               	incf	postinc2,f,c
  3254   00761A  0E00               	movlw	0
  3255   00761C  22DD               	addwfc	postdec2,f,c
  3256   00761E  EF25  F03B         	goto	l1231
  3257   007622                     l2644:
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3260   007622  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3261   007626  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3262   00762A  CFDE FFF6          	movff	postinc2,tblptrl
  3263   00762E  CFDD FFF7          	movff	postdec2,tblptrh
  3264   007632                     	if	0	;tblptru may be non-zero
  3265   007632                     	endif
  3266   007632                     	if	0	;tblptru may be non-zero
  3267   007632                     	endif
  3268   007632  0008               	tblrd		*
  3269   007634  50F5               	movf	tablat,w,c
  3270   007636  6E03               	movwf	fputc@c^0,c
  3271   007638  6A04               	clrf	(fputc@c+1)^0,c
  3272   00763A  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3273   00763E  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3274   007642  ECD2  F033         	call	_fputc	;wreg free
  3275   007646  EF08  F03B         	goto	l2640
  3276   00764A                     l1231:
  3277   00764A  0012               	return		;funcret
  3278   00764C                     __end_of_vfpfcnvrt:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _xtoa *****************
  3282 ;; Defined at:
  3283 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3286 ;;		 -> NULL(0), 
  3287 ;;  d               8   31[COMRAM] unsigned long long 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  n               8   53[COMRAM] unsigned long long 
  3290 ;;  i               2   61[COMRAM] int 
  3291 ;;  w               2   51[COMRAM] int 
  3292 ;;  p               2   49[COMRAM] int 
  3293 ;;  c               1   63[COMRAM] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3303 ;;      Params:        10       0       0       0       0       0       0
  3304 ;;      Locals:        17       0       0       0       0       0       0
  3305 ;;      Temps:          8       0       0       0       0       0       0
  3306 ;;      Totals:        35       0       0       0       0       0       0
  3307 ;;Total ram usage:       35 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 5
  3310 ;; This function calls:
  3311 ;;		_pad
  3312 ;; This function is called by:
  3313 ;;		_vfpfcnvrt
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text4
  3318   006DEA                     __ptext4:
  3319                           	callstack 0
  3320   006DEA                     _xtoa:
  3321                           	callstack 22
  3322   006DEA                     
  3323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  3324   006DEA  0100               	movlb	0	; () banked
  3325   006DEC  BF63               	btfsc	(_prec+1)& (0+255),7,b
  3326   006DEE  EFFB  F036         	goto	u1471
  3327   006DF2  EFFD  F036         	goto	u1470
  3328   006DF6                     u1471:
  3329   006DF6  EFFE  F036         	goto	l2484
  3330   006DFA                     u1470:
  3331   006DFA                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  3334   006DFA  9372               	bcf	_flags& (0+255),1,b
  3335   006DFC                     l2484:
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  3339   006DFC  BF63               	btfsc	(_prec+1)& (0+255),7,b
  3340   006DFE  EF0B  F037         	goto	u1480
  3341   006E02  5163               	movf	(_prec+1)& (0+255),w,b
  3342   006E04  E106               	bnz	u1481
  3343   006E06  0562               	decf	_prec& (0+255),w,b
  3344   006E08  B0D8               	btfsc	status,0,c
  3345   006E0A  EF09  F037         	goto	u1481
  3346   006E0E  EF0B  F037         	goto	u1480
  3347   006E12                     u1481:
  3348   006E12  EF11  F037         	goto	l1197
  3349   006E16                     u1480:
  3350   006E16                     
  3351                           ; BSR set to: 0
  3352   006E16  0E00               	movlw	0
  3353   006E18  6E33               	movwf	(xtoa@p+1)^0,c
  3354   006E1A  0E01               	movlw	1
  3355   006E1C  6E32               	movwf	xtoa@p^0,c
  3356   006E1E  EF15  F037         	goto	l1199
  3357   006E22                     l1197:
  3358                           
  3359                           ; BSR set to: 0
  3360   006E22  C062  F032         	movff	_prec,xtoa@p
  3361   006E26  C063  F033         	movff	_prec+1,xtoa@p+1
  3362   006E2A                     l1199:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  3366   006E2A  C060  F034         	movff	_width,xtoa@w
  3367   006E2E  C061  F035         	movff	_width+1,xtoa@w+1
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  3370   006E32  C020  F036         	movff	xtoa@d,xtoa@n
  3371   006E36  C021  F037         	movff	xtoa@d+1,xtoa@n+1
  3372   006E3A  C022  F038         	movff	xtoa@d+2,xtoa@n+2
  3373   006E3E  C023  F039         	movff	xtoa@d+3,xtoa@n+3
  3374   006E42  C024  F03A         	movff	xtoa@d+4,xtoa@n+4
  3375   006E46  C025  F03B         	movff	xtoa@d+5,xtoa@n+5
  3376   006E4A  C026  F03C         	movff	xtoa@d+6,xtoa@n+6
  3377   006E4E  C027  F03D         	movff	xtoa@d+7,xtoa@n+7
  3378   006E52                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  3381   006E52  0E00               	movlw	0
  3382   006E54  6E3F               	movwf	(xtoa@i+1)^0,c
  3383   006E56  0E1F               	movlw	31
  3384   006E58  6E3E               	movwf	xtoa@i^0,c
  3385   006E5A                     
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  3388   006E5A  0E00               	movlw	0
  3389   006E5C  6F94               	movwf	(_dbuf+31)& (0+255),b
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  3392   006E5E  EF8C  F037         	goto	l2512
  3393   006E62                     l2492:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  3396   006E62  063E               	decf	xtoa@i^0,f,c
  3397   006E64  A0D8               	btfss	status,0,c
  3398   006E66  063F               	decf	(xtoa@i+1)^0,f,c
  3399   006E68                     
  3400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  3401   006E68  5036               	movf	xtoa@n^0,w,c
  3402   006E6A  0B0F               	andlw	15
  3403   006E6C  6E40               	movwf	xtoa@c^0,c
  3404   006E6E                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3406   006E6E  0E09               	movlw	9
  3407   006E70  6440               	cpfsgt	xtoa@c^0,c
  3408   006E72  EF3D  F037         	goto	u1491
  3409   006E76  EF3F  F037         	goto	u1490
  3410   006E7A                     u1491:
  3411   006E7A  EF47  F037         	goto	l2500
  3412   006E7E                     u1490:
  3413   006E7E  0E57               	movlw	87
  3414   006E80  2440               	addwf	xtoa@c^0,w,c
  3415   006E82  6E30               	movwf	_xtoa$1608^0,c
  3416   006E84  6A31               	clrf	(_xtoa$1608+1)^0,c
  3417   006E86  0E00               	movlw	0
  3418   006E88  2231               	addwfc	(_xtoa$1608+1)^0,f,c
  3419   006E8A  EF4D  F037         	goto	l2502
  3420   006E8E                     l2500:
  3421   006E8E  0E30               	movlw	48
  3422   006E90  2440               	addwf	xtoa@c^0,w,c
  3423   006E92  6E30               	movwf	_xtoa$1608^0,c
  3424   006E94  6A31               	clrf	(_xtoa$1608+1)^0,c
  3425   006E96  0E00               	movlw	0
  3426   006E98  2231               	addwfc	(_xtoa$1608+1)^0,f,c
  3427   006E9A                     l2502:
  3428   006E9A  C030  F040         	movff	_xtoa$1608,xtoa@c
  3429   006E9E                     
  3430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  3431   006E9E  0E75               	movlw	low _dbuf
  3432   006EA0  243E               	addwf	xtoa@i^0,w,c
  3433   006EA2  6ED9               	movwf	fsr2l,c
  3434   006EA4  0E00               	movlw	high _dbuf
  3435   006EA6  203F               	addwfc	(xtoa@i+1)^0,w,c
  3436   006EA8  6EDA               	movwf	fsr2h,c
  3437   006EAA  C040  FFDF         	movff	xtoa@c,indf2
  3438   006EAE                     
  3439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  3440   006EAE  0632               	decf	xtoa@p^0,f,c
  3441   006EB0  A0D8               	btfss	status,0,c
  3442   006EB2  0633               	decf	(xtoa@p+1)^0,f,c
  3443   006EB4                     
  3444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  3445   006EB4  0634               	decf	xtoa@w^0,f,c
  3446   006EB6  A0D8               	btfss	status,0,c
  3447   006EB8  0635               	decf	(xtoa@w+1)^0,f,c
  3448   006EBA                     
  3449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  3450   006EBA  C036  F028         	movff	xtoa@n,??_xtoa
  3451   006EBE  C037  F029         	movff	xtoa@n+1,??_xtoa+1
  3452   006EC2  C038  F02A         	movff	xtoa@n+2,??_xtoa+2
  3453   006EC6  C039  F02B         	movff	xtoa@n+3,??_xtoa+3
  3454   006ECA  C03A  F02C         	movff	xtoa@n+4,??_xtoa+4
  3455   006ECE  C03B  F02D         	movff	xtoa@n+5,??_xtoa+5
  3456   006ED2  C03C  F02E         	movff	xtoa@n+6,??_xtoa+6
  3457   006ED6  C03D  F02F         	movff	xtoa@n+7,??_xtoa+7
  3458   006EDA  0E05               	movlw	5
  3459   006EDC  EF79  F037         	goto	u1500
  3460   006EE0                     u1505:
  3461   006EE0  90D8               	bcf	status,0,c
  3462   006EE2  322F               	rrcf	(??_xtoa+7)^0,f,c
  3463   006EE4  322E               	rrcf	(??_xtoa+6)^0,f,c
  3464   006EE6  322D               	rrcf	(??_xtoa+5)^0,f,c
  3465   006EE8  322C               	rrcf	(??_xtoa+4)^0,f,c
  3466   006EEA  322B               	rrcf	(??_xtoa+3)^0,f,c
  3467   006EEC  322A               	rrcf	(??_xtoa+2)^0,f,c
  3468   006EEE  3229               	rrcf	(??_xtoa+1)^0,f,c
  3469   006EF0  3228               	rrcf	??_xtoa^0,f,c
  3470   006EF2                     u1500:
  3471   006EF2  2EE8               	decfsz	wreg,f,c
  3472   006EF4  EF70  F037         	goto	u1505
  3473   006EF8  C028  F036         	movff	??_xtoa,xtoa@n
  3474   006EFC  C029  F037         	movff	??_xtoa+1,xtoa@n+1
  3475   006F00  C02A  F038         	movff	??_xtoa+2,xtoa@n+2
  3476   006F04  C02B  F039         	movff	??_xtoa+3,xtoa@n+3
  3477   006F08  C02C  F03A         	movff	??_xtoa+4,xtoa@n+4
  3478   006F0C  C02D  F03B         	movff	??_xtoa+5,xtoa@n+5
  3479   006F10  C02E  F03C         	movff	??_xtoa+6,xtoa@n+6
  3480   006F14  C02F  F03D         	movff	??_xtoa+7,xtoa@n+7
  3481   006F18                     l2512:
  3482                           
  3483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  3484   006F18  BE3F               	btfsc	(xtoa@i+1)^0,7,c
  3485   006F1A  EF98  F037         	goto	u1511
  3486   006F1E  503F               	movf	(xtoa@i+1)^0,w,c
  3487   006F20  E109               	bnz	u1510
  3488   006F22  0E02               	movlw	2
  3489   006F24  5C3E               	subwf	xtoa@i^0,w,c
  3490   006F26  A0D8               	btfss	status,0,c
  3491   006F28  EF98  F037         	goto	u1511
  3492   006F2C  EF9A  F037         	goto	u1510
  3493   006F30                     u1511:
  3494   006F30  EFCB  F037         	goto	l2522
  3495   006F34                     u1510:
  3496   006F34  5036               	movf	xtoa@n^0,w,c
  3497   006F36  1037               	iorwf	(xtoa@n+1)^0,w,c
  3498   006F38  1038               	iorwf	(xtoa@n+2)^0,w,c
  3499   006F3A  1039               	iorwf	(xtoa@n+3)^0,w,c
  3500   006F3C  103A               	iorwf	(xtoa@n+4)^0,w,c
  3501   006F3E  103B               	iorwf	(xtoa@n+5)^0,w,c
  3502   006F40  103C               	iorwf	(xtoa@n+6)^0,w,c
  3503   006F42  103D               	iorwf	(xtoa@n+7)^0,w,c
  3504   006F44  A4D8               	btfss	status,2,c
  3505   006F46  EFA7  F037         	goto	u1521
  3506   006F4A  EFA9  F037         	goto	u1520
  3507   006F4E                     u1521:
  3508   006F4E  EF31  F037         	goto	l2492
  3509   006F52                     u1520:
  3510   006F52  BE33               	btfsc	(xtoa@p+1)^0,7,c
  3511   006F54  EFB6  F037         	goto	u1530
  3512   006F58  5033               	movf	(xtoa@p+1)^0,w,c
  3513   006F5A  E106               	bnz	u1531
  3514   006F5C  0432               	decf	xtoa@p^0,w,c
  3515   006F5E  B0D8               	btfsc	status,0,c
  3516   006F60  EFB4  F037         	goto	u1531
  3517   006F64  EFB6  F037         	goto	u1530
  3518   006F68                     u1531:
  3519   006F68  EF31  F037         	goto	l2492
  3520   006F6C                     u1530:
  3521   006F6C  BE35               	btfsc	(xtoa@w+1)^0,7,c
  3522   006F6E  EFC1  F037         	goto	u1541
  3523   006F72  5035               	movf	(xtoa@w+1)^0,w,c
  3524   006F74  E108               	bnz	u1540
  3525   006F76  0434               	decf	xtoa@w^0,w,c
  3526   006F78  A0D8               	btfss	status,0,c
  3527   006F7A  EFC1  F037         	goto	u1541
  3528   006F7E  EFC3  F037         	goto	u1540
  3529   006F82                     u1541:
  3530   006F82  EFCB  F037         	goto	l2522
  3531   006F86                     u1540:
  3532   006F86  0100               	movlb	0	; () banked
  3533   006F88  B372               	btfsc	_flags& (0+255),1,b
  3534   006F8A  EFC9  F037         	goto	u1551
  3535   006F8E  EFCB  F037         	goto	u1550
  3536   006F92                     u1551:
  3537   006F92  EF31  F037         	goto	l2492
  3538   006F96                     u1550:
  3539   006F96                     l2522:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3542   006F96  C01E  F013         	movff	xtoa@fp,pad@fp
  3543   006F9A  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  3544   006F9E  0E75               	movlw	low _dbuf
  3545   006FA0  243E               	addwf	xtoa@i^0,w,c
  3546   006FA2  6E15               	movwf	pad@buf^0,c
  3547   006FA4  0E00               	movlw	high _dbuf
  3548   006FA6  203F               	addwfc	(xtoa@i+1)^0,w,c
  3549   006FA8  6E16               	movwf	(pad@buf+1)^0,c
  3550   006FAA  C034  F017         	movff	xtoa@w,pad@p
  3551   006FAE  C035  F018         	movff	xtoa@w+1,pad@p+1
  3552   006FB2  EC1D  F034         	call	_pad	;wreg free
  3553   006FB6  0012               	return		;funcret
  3554   006FB8                     __end_of_xtoa:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function _dtoa *****************
  3558 ;; Defined at:
  3559 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  3562 ;;		 -> NULL(0), 
  3563 ;;  d               8   31[COMRAM] long long 
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  n               8   53[COMRAM] long long 
  3566 ;;  i               2   61[COMRAM] int 
  3567 ;;  w               2   51[COMRAM] int 
  3568 ;;  p               2   49[COMRAM] int 
  3569 ;;  s               1   63[COMRAM] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3579 ;;      Params:        10       0       0       0       0       0       0
  3580 ;;      Locals:        17       0       0       0       0       0       0
  3581 ;;      Temps:          8       0       0       0       0       0       0
  3582 ;;      Totals:        35       0       0       0       0       0       0
  3583 ;;Total ram usage:       35 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 5
  3586 ;; This function calls:
  3587 ;;		___aodiv
  3588 ;;		___aomod
  3589 ;;		_abs
  3590 ;;		_pad
  3591 ;; This function is called by:
  3592 ;;		_vfpfcnvrt
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text5
  3597   006FB8                     __ptext5:
  3598                           	callstack 0
  3599   006FB8                     _dtoa:
  3600                           	callstack 22
  3601   006FB8                     
  3602                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3603   006FB8  C020  F036         	movff	dtoa@d,dtoa@n
  3604   006FBC  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  3605   006FC0  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  3606   006FC4  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  3607   006FC8  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  3608   006FCC  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  3609   006FD0  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  3610   006FD4  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  3611   006FD8                     
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3613   006FD8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3614   006FDA  EFF1  F037         	goto	u1341
  3615   006FDE  EFF4  F037         	goto	u1340
  3616   006FE2                     u1341:
  3617   006FE2  0E01               	movlw	1
  3618   006FE4  EFF5  F037         	goto	u1350
  3619   006FE8                     u1340:
  3620   006FE8  0E00               	movlw	0
  3621   006FEA                     u1350:
  3622   006FEA  6E40               	movwf	dtoa@s^0,c
  3623   006FEC                     
  3624                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3625   006FEC  5040               	movf	dtoa@s^0,w,c
  3626   006FEE  B4D8               	btfsc	status,2,c
  3627   006FF0  EFFC  F037         	goto	u1361
  3628   006FF4  EFFE  F037         	goto	u1360
  3629   006FF8                     u1361:
  3630   006FF8  EF0E  F038         	goto	l2428
  3631   006FFC                     u1360:
  3632   006FFC                     
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3634   006FFC  1E3D               	comf	(dtoa@n+7)^0,f,c
  3635   006FFE  1E3C               	comf	(dtoa@n+6)^0,f,c
  3636   007000  1E3B               	comf	(dtoa@n+5)^0,f,c
  3637   007002  1E3A               	comf	(dtoa@n+4)^0,f,c
  3638   007004  1E39               	comf	(dtoa@n+3)^0,f,c
  3639   007006  1E38               	comf	(dtoa@n+2)^0,f,c
  3640   007008  1E37               	comf	(dtoa@n+1)^0,f,c
  3641   00700A  6C36               	negf	dtoa@n^0,c
  3642   00700C  0E00               	movlw	0
  3643   00700E  2237               	addwfc	(dtoa@n+1)^0,f,c
  3644   007010  2238               	addwfc	(dtoa@n+2)^0,f,c
  3645   007012  2239               	addwfc	(dtoa@n+3)^0,f,c
  3646   007014  223A               	addwfc	(dtoa@n+4)^0,f,c
  3647   007016  223B               	addwfc	(dtoa@n+5)^0,f,c
  3648   007018  223C               	addwfc	(dtoa@n+6)^0,f,c
  3649   00701A  223D               	addwfc	(dtoa@n+7)^0,f,c
  3650   00701C                     l2428:
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  3653   00701C  0100               	movlb	0	; () banked
  3654   00701E  BF63               	btfsc	(_prec+1)& (0+255),7,b
  3655   007020  EF14  F038         	goto	u1371
  3656   007024  EF16  F038         	goto	u1370
  3657   007028                     u1371:
  3658   007028  EF17  F038         	goto	l2432
  3659   00702C                     u1370:
  3660   00702C                     
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  3663   00702C  9372               	bcf	_flags& (0+255),1,b
  3664   00702E                     l2432:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3668   00702E  BF63               	btfsc	(_prec+1)& (0+255),7,b
  3669   007030  EF24  F038         	goto	u1380
  3670   007034  5163               	movf	(_prec+1)& (0+255),w,b
  3671   007036  E106               	bnz	u1381
  3672   007038  0562               	decf	_prec& (0+255),w,b
  3673   00703A  B0D8               	btfsc	status,0,c
  3674   00703C  EF22  F038         	goto	u1381
  3675   007040  EF24  F038         	goto	u1380
  3676   007044                     u1381:
  3677   007044  EF2A  F038         	goto	l1176
  3678   007048                     u1380:
  3679   007048                     
  3680                           ; BSR set to: 0
  3681   007048  0E00               	movlw	0
  3682   00704A  6E33               	movwf	(dtoa@p+1)^0,c
  3683   00704C  0E01               	movlw	1
  3684   00704E  6E32               	movwf	dtoa@p^0,c
  3685   007050  EF2E  F038         	goto	l1178
  3686   007054                     l1176:
  3687                           
  3688                           ; BSR set to: 0
  3689   007054  C062  F032         	movff	_prec,dtoa@p
  3690   007058  C063  F033         	movff	_prec+1,dtoa@p+1
  3691   00705C                     l1178:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3695   00705C  C060  F034         	movff	_width,dtoa@w
  3696   007060  C061  F035         	movff	_width+1,dtoa@w+1
  3697   007064                     
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3700   007064  5040               	movf	dtoa@s^0,w,c
  3701   007066  B4D8               	btfsc	status,2,c
  3702   007068  EF38  F038         	goto	u1391
  3703   00706C  EF3A  F038         	goto	u1390
  3704   007070                     u1391:
  3705   007070  EF51  F038         	goto	l1179
  3706   007074                     u1390:
  3707   007074                     
  3708                           ; BSR set to: 0
  3709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3710   007074  0634               	decf	dtoa@w^0,f,c
  3711   007076  A0D8               	btfss	status,0,c
  3712   007078  0635               	decf	(dtoa@w+1)^0,f,c
  3713   00707A                     
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3716   00707A  5040               	movf	dtoa@s^0,w,c
  3717   00707C  A4D8               	btfss	status,2,c
  3718   00707E  EF43  F038         	goto	u1401
  3719   007082  EF45  F038         	goto	u1400
  3720   007086                     u1401:
  3721   007086  EF4B  F038         	goto	l2444
  3722   00708A                     u1400:
  3723   00708A                     
  3724                           ; BSR set to: 0
  3725   00708A  0E00               	movlw	0
  3726   00708C  6E31               	movwf	(_dtoa$1598+1)^0,c
  3727   00708E  0E2B               	movlw	43
  3728   007090  6E30               	movwf	_dtoa$1598^0,c
  3729   007092  EF4F  F038         	goto	l2446
  3730   007096                     l2444:
  3731                           
  3732                           ; BSR set to: 0
  3733   007096  0E00               	movlw	0
  3734   007098  6E31               	movwf	(_dtoa$1598+1)^0,c
  3735   00709A  0E2D               	movlw	45
  3736   00709C  6E30               	movwf	_dtoa$1598^0,c
  3737   00709E                     l2446:
  3738                           
  3739                           ; BSR set to: 0
  3740   00709E  C030  F040         	movff	_dtoa$1598,dtoa@s
  3741   0070A2                     l1179:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3745   0070A2  0E00               	movlw	0
  3746   0070A4  6E3F               	movwf	(dtoa@i+1)^0,c
  3747   0070A6  0E1F               	movlw	31
  3748   0070A8  6E3E               	movwf	dtoa@i^0,c
  3749   0070AA                     
  3750                           ; BSR set to: 0
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3752   0070AA  0E00               	movlw	0
  3753   0070AC  6F94               	movwf	(_dbuf+31)& (0+255),b
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3756   0070AE  EFD5  F038         	goto	l2460
  3757   0070B2                     l2450:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3760   0070B2  063E               	decf	dtoa@i^0,f,c
  3761   0070B4  A0D8               	btfss	status,0,c
  3762   0070B6  063F               	decf	(dtoa@i+1)^0,f,c
  3763   0070B8                     
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3765   0070B8  0E75               	movlw	low _dbuf
  3766   0070BA  243E               	addwf	dtoa@i^0,w,c
  3767   0070BC  6ED9               	movwf	fsr2l,c
  3768   0070BE  0E00               	movlw	high _dbuf
  3769   0070C0  203F               	addwfc	(dtoa@i+1)^0,w,c
  3770   0070C2  6EDA               	movwf	fsr2h,c
  3771   0070C4  C036  F001         	movff	dtoa@n,___aomod@dividend
  3772   0070C8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3773   0070CC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3774   0070D0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3775   0070D4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3776   0070D8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3777   0070DC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3778   0070E0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3779   0070E4  0E0A               	movlw	10
  3780   0070E6  6E09               	movwf	___aomod@divisor^0,c
  3781   0070E8  0E00               	movlw	0
  3782   0070EA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3783   0070EC  0E00               	movlw	0
  3784   0070EE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3785   0070F0  0E00               	movlw	0
  3786   0070F2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3787   0070F4  0E00               	movlw	0
  3788   0070F6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3789   0070F8  0E00               	movlw	0
  3790   0070FA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3791   0070FC  0E00               	movlw	0
  3792   0070FE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3793   007100  0E00               	movlw	0
  3794   007102  6E10               	movwf	(___aomod@divisor+7)^0,c
  3795   007104  EC7F  F035         	call	___aomod	;wreg free
  3796   007108  C001  F028         	movff	?___aomod,??_dtoa
  3797   00710C  C002  F029         	movff	?___aomod+1,??_dtoa+1
  3798   007110  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  3799   007114  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  3800   007118  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  3801   00711C  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  3802   007120  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  3803   007124  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  3804   007128  C028  F013         	movff	??_dtoa,abs@a
  3805   00712C  C029  F014         	movff	??_dtoa+1,abs@a+1
  3806   007130  EC46  F033         	call	_abs	;wreg free
  3807   007134  5013               	movf	?_abs^0,w,c
  3808   007136  0F30               	addlw	48
  3809   007138  6EDF               	movwf	indf2,c
  3810   00713A                     
  3811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3812   00713A  0632               	decf	dtoa@p^0,f,c
  3813   00713C  A0D8               	btfss	status,0,c
  3814   00713E  0633               	decf	(dtoa@p+1)^0,f,c
  3815   007140                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3817   007140  0634               	decf	dtoa@w^0,f,c
  3818   007142  A0D8               	btfss	status,0,c
  3819   007144  0635               	decf	(dtoa@w+1)^0,f,c
  3820   007146                     
  3821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3822   007146  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3823   00714A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3824   00714E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3825   007152  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3826   007156  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3827   00715A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3828   00715E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3829   007162  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3830   007166  0E0A               	movlw	10
  3831   007168  6E09               	movwf	___aodiv@divisor^0,c
  3832   00716A  0E00               	movlw	0
  3833   00716C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3834   00716E  0E00               	movlw	0
  3835   007170  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3836   007172  0E00               	movlw	0
  3837   007174  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3838   007176  0E00               	movlw	0
  3839   007178  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3840   00717A  0E00               	movlw	0
  3841   00717C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3842   00717E  0E00               	movlw	0
  3843   007180  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3844   007182  0E00               	movlw	0
  3845   007184  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3846   007186  EC31  F036         	call	___aodiv	;wreg free
  3847   00718A  C001  F036         	movff	?___aodiv,dtoa@n
  3848   00718E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3849   007192  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3850   007196  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3851   00719A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3852   00719E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3853   0071A2  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3854   0071A6  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3855   0071AA                     l2460:
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3858   0071AA  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3859   0071AC  EFE0  F038         	goto	u1411
  3860   0071B0  503F               	movf	(dtoa@i+1)^0,w,c
  3861   0071B2  E108               	bnz	u1410
  3862   0071B4  043E               	decf	dtoa@i^0,w,c
  3863   0071B6  A0D8               	btfss	status,0,c
  3864   0071B8  EFE0  F038         	goto	u1411
  3865   0071BC  EFE2  F038         	goto	u1410
  3866   0071C0                     u1411:
  3867   0071C0  EF13  F039         	goto	l2470
  3868   0071C4                     u1410:
  3869   0071C4  5036               	movf	dtoa@n^0,w,c
  3870   0071C6  1037               	iorwf	(dtoa@n+1)^0,w,c
  3871   0071C8  1038               	iorwf	(dtoa@n+2)^0,w,c
  3872   0071CA  1039               	iorwf	(dtoa@n+3)^0,w,c
  3873   0071CC  103A               	iorwf	(dtoa@n+4)^0,w,c
  3874   0071CE  103B               	iorwf	(dtoa@n+5)^0,w,c
  3875   0071D0  103C               	iorwf	(dtoa@n+6)^0,w,c
  3876   0071D2  103D               	iorwf	(dtoa@n+7)^0,w,c
  3877   0071D4  A4D8               	btfss	status,2,c
  3878   0071D6  EFEF  F038         	goto	u1421
  3879   0071DA  EFF1  F038         	goto	u1420
  3880   0071DE                     u1421:
  3881   0071DE  EF59  F038         	goto	l2450
  3882   0071E2                     u1420:
  3883   0071E2  BE33               	btfsc	(dtoa@p+1)^0,7,c
  3884   0071E4  EFFE  F038         	goto	u1430
  3885   0071E8  5033               	movf	(dtoa@p+1)^0,w,c
  3886   0071EA  E106               	bnz	u1431
  3887   0071EC  0432               	decf	dtoa@p^0,w,c
  3888   0071EE  B0D8               	btfsc	status,0,c
  3889   0071F0  EFFC  F038         	goto	u1431
  3890   0071F4  EFFE  F038         	goto	u1430
  3891   0071F8                     u1431:
  3892   0071F8  EF59  F038         	goto	l2450
  3893   0071FC                     u1430:
  3894   0071FC  BE35               	btfsc	(dtoa@w+1)^0,7,c
  3895   0071FE  EF09  F039         	goto	u1441
  3896   007202  5035               	movf	(dtoa@w+1)^0,w,c
  3897   007204  E108               	bnz	u1440
  3898   007206  0434               	decf	dtoa@w^0,w,c
  3899   007208  A0D8               	btfss	status,0,c
  3900   00720A  EF09  F039         	goto	u1441
  3901   00720E  EF0B  F039         	goto	u1440
  3902   007212                     u1441:
  3903   007212  EF13  F039         	goto	l2470
  3904   007216                     u1440:
  3905   007216  0100               	movlb	0	; () banked
  3906   007218  B372               	btfsc	_flags& (0+255),1,b
  3907   00721A  EF11  F039         	goto	u1451
  3908   00721E  EF13  F039         	goto	u1450
  3909   007222                     u1451:
  3910   007222  EF59  F038         	goto	l2450
  3911   007226                     u1450:
  3912   007226                     l2470:
  3913                           
  3914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3915   007226  5040               	movf	dtoa@s^0,w,c
  3916   007228  B4D8               	btfsc	status,2,c
  3917   00722A  EF19  F039         	goto	u1461
  3918   00722E  EF1B  F039         	goto	u1460
  3919   007232                     u1461:
  3920   007232  EF26  F039         	goto	l2476
  3921   007236                     u1460:
  3922   007236                     
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3924   007236  063E               	decf	dtoa@i^0,f,c
  3925   007238  A0D8               	btfss	status,0,c
  3926   00723A  063F               	decf	(dtoa@i+1)^0,f,c
  3927   00723C                     
  3928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3929   00723C  0E75               	movlw	low _dbuf
  3930   00723E  243E               	addwf	dtoa@i^0,w,c
  3931   007240  6ED9               	movwf	fsr2l,c
  3932   007242  0E00               	movlw	high _dbuf
  3933   007244  203F               	addwfc	(dtoa@i+1)^0,w,c
  3934   007246  6EDA               	movwf	fsr2h,c
  3935   007248  C040  FFDF         	movff	dtoa@s,indf2
  3936   00724C                     l2476:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3939   00724C  C01E  F013         	movff	dtoa@fp,pad@fp
  3940   007250  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  3941   007254  0E75               	movlw	low _dbuf
  3942   007256  243E               	addwf	dtoa@i^0,w,c
  3943   007258  6E15               	movwf	pad@buf^0,c
  3944   00725A  0E00               	movlw	high _dbuf
  3945   00725C  203F               	addwfc	(dtoa@i+1)^0,w,c
  3946   00725E  6E16               	movwf	(pad@buf+1)^0,c
  3947   007260  C034  F017         	movff	dtoa@w,pad@p
  3948   007264  C035  F018         	movff	dtoa@w+1,pad@p+1
  3949   007268  EC1D  F034         	call	_pad	;wreg free
  3950   00726C  0012               	return		;funcret
  3951   00726E                     __end_of_dtoa:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _pad *****************
  3955 ;; Defined at:
  3956 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3959 ;;		 -> NULL(0), 
  3960 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3961 ;;		 -> dbuf(32), 
  3962 ;;  p               2   22[COMRAM] int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;  w               2   27[COMRAM] int 
  3965 ;;  i               2   25[COMRAM] int 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      void 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3975 ;;      Params:         6       0       0       0       0       0       0
  3976 ;;      Locals:         4       0       0       0       0       0       0
  3977 ;;      Temps:          1       0       0       0       0       0       0
  3978 ;;      Totals:        11       0       0       0       0       0       0
  3979 ;;Total ram usage:       11 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 4
  3982 ;; This function calls:
  3983 ;;		_fputc
  3984 ;;		_fputs
  3985 ;; This function is called by:
  3986 ;;		_dtoa
  3987 ;;		_xtoa
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text6
  3992   00683A                     __ptext6:
  3993                           	callstack 0
  3994   00683A                     _pad:
  3995                           	callstack 22
  3996   00683A                     
  3997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3998   00683A  0100               	movlb	0	; () banked
  3999   00683C  A172               	btfss	_flags& (0+255),0,b
  4000   00683E  EF23  F034         	goto	u1201
  4001   006842  EF25  F034         	goto	u1200
  4002   006846                     u1201:
  4003   006846  EF2F  F034         	goto	l2362
  4004   00684A                     u1200:
  4005   00684A                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  4008   00684A  C015  F00C         	movff	pad@buf,fputs@s
  4009   00684E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4010   006852  C013  F00E         	movff	pad@fp,fputs@fp
  4011   006856  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4012   00685A  EC66  F033         	call	_fputs	;wreg free
  4013   00685E                     l2362:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  4016   00685E  BE18               	btfsc	(pad@p+1)^0,7,c
  4017   006860  EF34  F034         	goto	u1211
  4018   006864  EF36  F034         	goto	u1210
  4019   006868                     u1211:
  4020   006868  EF3C  F034         	goto	l2366
  4021   00686C                     u1210:
  4022   00686C  C017  F01C         	movff	pad@p,pad@w
  4023   006870  C018  F01D         	movff	pad@p+1,pad@w+1
  4024   006874  EF40  F034         	goto	l1149
  4025   006878                     l2366:
  4026   006878  0E00               	movlw	0
  4027   00687A  6E1D               	movwf	(pad@w+1)^0,c
  4028   00687C  0E00               	movlw	0
  4029   00687E  6E1C               	movwf	pad@w^0,c
  4030   006880                     l1149:
  4031                           
  4032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  4033   006880  0E00               	movlw	0
  4034   006882  6E1B               	movwf	(pad@i+1)^0,c
  4035   006884  0E00               	movlw	0
  4036   006886  6E1A               	movwf	pad@i^0,c
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4039   006888  EF52  F034         	goto	l2372
  4040   00688C                     l2368:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  4043   00688C  0E00               	movlw	0
  4044   00688E  6E04               	movwf	(fputc@c+1)^0,c
  4045   006890  0E20               	movlw	32
  4046   006892  6E03               	movwf	fputc@c^0,c
  4047   006894  C013  F005         	movff	pad@fp,fputc@fp
  4048   006898  C014  F006         	movff	pad@fp+1,fputc@fp+1
  4049   00689C  ECD2  F033         	call	_fputc	;wreg free
  4050   0068A0                     
  4051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  4052   0068A0  4A1A               	infsnz	pad@i^0,f,c
  4053   0068A2  2A1B               	incf	(pad@i+1)^0,f,c
  4054   0068A4                     l2372:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4057   0068A4  501C               	movf	pad@w^0,w,c
  4058   0068A6  5C1A               	subwf	pad@i^0,w,c
  4059   0068A8  501B               	movf	(pad@i+1)^0,w,c
  4060   0068AA  0A80               	xorlw	128
  4061   0068AC  6E19               	movwf	??_pad^0,c
  4062   0068AE  501D               	movf	(pad@w+1)^0,w,c
  4063   0068B0  0A80               	xorlw	128
  4064   0068B2  5819               	subwfb	??_pad^0,w,c
  4065   0068B4  A0D8               	btfss	status,0,c
  4066   0068B6  EF5F  F034         	goto	u1221
  4067   0068BA  EF61  F034         	goto	u1220
  4068   0068BE                     u1221:
  4069   0068BE  EF46  F034         	goto	l2368
  4070   0068C2                     u1220:
  4071   0068C2                     
  4072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  4073   0068C2  0100               	movlb	0	; () banked
  4074   0068C4  B172               	btfsc	_flags& (0+255),0,b
  4075   0068C6  EF67  F034         	goto	u1231
  4076   0068CA  EF69  F034         	goto	u1230
  4077   0068CE                     u1231:
  4078   0068CE  EF73  F034         	goto	l1154
  4079   0068D2                     u1230:
  4080   0068D2                     
  4081                           ; BSR set to: 0
  4082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  4083   0068D2  C015  F00C         	movff	pad@buf,fputs@s
  4084   0068D6  C016  F00D         	movff	pad@buf+1,fputs@s+1
  4085   0068DA  C013  F00E         	movff	pad@fp,fputs@fp
  4086   0068DE  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  4087   0068E2  EC66  F033         	call	_fputs	;wreg free
  4088   0068E6                     l1154:
  4089   0068E6  0012               	return		;funcret
  4090   0068E8                     __end_of_pad:
  4091                           	callstack 0
  4092                           
  4093 ;; *************** function _fputs *****************
  4094 ;; Defined at:
  4095 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4098 ;;		 -> dbuf(32), 
  4099 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4100 ;;		 -> NULL(0), 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  i               2   16[COMRAM] int 
  4103 ;;  c               1   15[COMRAM] unsigned char 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2   11[COMRAM] int 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4113 ;;      Params:         4       0       0       0       0       0       0
  4114 ;;      Locals:         3       0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0
  4116 ;;      Totals:         7       0       0       0       0       0       0
  4117 ;;Total ram usage:        7 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 3
  4120 ;; This function calls:
  4121 ;;		_fputc
  4122 ;; This function is called by:
  4123 ;;		_pad
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text7
  4128   0066CC                     __ptext7:
  4129                           	callstack 0
  4130   0066CC                     _fputs:
  4131                           	callstack 22
  4132   0066CC  0E00               	movlw	0
  4133   0066CE  6E12               	movwf	(fputs@i+1)^0,c
  4134   0066D0  0E00               	movlw	0
  4135   0066D2  6E11               	movwf	fputs@i^0,c
  4136   0066D4  EF77  F033         	goto	l2270
  4137   0066D8                     l2266:
  4138   0066D8  C010  F003         	movff	fputs@c,fputc@c
  4139   0066DC  6A04               	clrf	(fputc@c+1)^0,c
  4140   0066DE  C00E  F005         	movff	fputs@fp,fputc@fp
  4141   0066E2  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  4142   0066E6  ECD2  F033         	call	_fputc	;wreg free
  4143   0066EA  4A11               	infsnz	fputs@i^0,f,c
  4144   0066EC  2A12               	incf	(fputs@i+1)^0,f,c
  4145   0066EE                     l2270:
  4146   0066EE  5011               	movf	fputs@i^0,w,c
  4147   0066F0  240C               	addwf	fputs@s^0,w,c
  4148   0066F2  6ED9               	movwf	fsr2l,c
  4149   0066F4  5012               	movf	(fputs@i+1)^0,w,c
  4150   0066F6  200D               	addwfc	(fputs@s+1)^0,w,c
  4151   0066F8  6EDA               	movwf	fsr2h,c
  4152   0066FA  50DF               	movf	indf2,w,c
  4153   0066FC  6E10               	movwf	fputs@c^0,c
  4154   0066FE  5010               	movf	fputs@c^0,w,c
  4155   006700  A4D8               	btfss	status,2,c
  4156   006702  EF85  F033         	goto	u1061
  4157   006706  EF87  F033         	goto	u1060
  4158   00670A                     u1061:
  4159   00670A  EF6C  F033         	goto	l2266
  4160   00670E                     u1060:
  4161   00670E  0012               	return		;funcret
  4162   006710                     __end_of_fputs:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _abs *****************
  4166 ;; Defined at:
  4167 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  a               2   18[COMRAM] int 
  4170 ;; Auto vars:     Size  Location     Type
  4171 ;;		None
  4172 ;; Return value:  Size  Location     Type
  4173 ;;                  2   18[COMRAM] int 
  4174 ;; Registers used:
  4175 ;;		wreg, status,2, status,0
  4176 ;; Tracked objects:
  4177 ;;		On entry : 0/0
  4178 ;;		On exit  : 0/0
  4179 ;;		Unchanged: 0/0
  4180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4181 ;;      Params:         2       0       0       0       0       0       0
  4182 ;;      Locals:         0       0       0       0       0       0       0
  4183 ;;      Temps:          2       0       0       0       0       0       0
  4184 ;;      Totals:         4       0       0       0       0       0       0
  4185 ;;Total ram usage:        4 bytes
  4186 ;; Hardware stack levels used: 1
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_dtoa
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text8
  4195   00668C                     __ptext8:
  4196                           	callstack 0
  4197   00668C                     _abs:
  4198                           	callstack 26
  4199   00668C  BE14               	btfsc	(abs@a+1)^0,7,c
  4200   00668E  EF53  F033         	goto	u1240
  4201   006692  5014               	movf	(abs@a+1)^0,w,c
  4202   006694  E106               	bnz	u1241
  4203   006696  0413               	decf	abs@a^0,w,c
  4204   006698  B0D8               	btfsc	status,0,c
  4205   00669A  EF51  F033         	goto	u1241
  4206   00669E  EF53  F033         	goto	u1240
  4207   0066A2                     u1241:
  4208   0066A2  EF61  F033         	goto	l1250
  4209   0066A6                     u1240:
  4210   0066A6  C013  F015         	movff	abs@a,??_abs
  4211   0066AA  C014  F016         	movff	abs@a+1,??_abs+1
  4212   0066AE  1E15               	comf	??_abs^0,f,c
  4213   0066B0  1E16               	comf	(??_abs+1)^0,f,c
  4214   0066B2  4A15               	infsnz	??_abs^0,f,c
  4215   0066B4  2A16               	incf	(??_abs+1)^0,f,c
  4216   0066B6  C015  F013         	movff	??_abs,?_abs
  4217   0066BA  C016  F014         	movff	??_abs+1,?_abs+1
  4218   0066BE  EF65  F033         	goto	l1253
  4219   0066C2                     l1250:
  4220   0066C2  C013  F013         	movff	abs@a,?_abs
  4221   0066C6  C014  F014         	movff	abs@a+1,?_abs+1
  4222   0066CA                     l1253:
  4223   0066CA  0012               	return		;funcret
  4224   0066CC                     __end_of_abs:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function ___aomod *****************
  4228 ;; Defined at:
  4229 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  dividend        8    0[COMRAM] long long 
  4232 ;;  divisor         8    8[COMRAM] long long 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  sign            1   17[COMRAM] unsigned char 
  4235 ;;  counter         1   16[COMRAM] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  8    0[COMRAM] long long 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:        16       0       0       0       0       0       0
  4246 ;;      Locals:         2       0       0       0       0       0       0
  4247 ;;      Temps:          0       0       0       0       0       0       0
  4248 ;;      Totals:        18       0       0       0       0       0       0
  4249 ;;Total ram usage:       18 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_dtoa
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text9
  4259   006AFE                     __ptext9:
  4260                           	callstack 0
  4261   006AFE                     ___aomod:
  4262                           	callstack 26
  4263   006AFE  0E00               	movlw	0
  4264   006B00  6E12               	movwf	___aomod@sign^0,c
  4265   006B02  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4266   006B04  EF88  F035         	goto	u1140
  4267   006B08  EF86  F035         	goto	u1141
  4268   006B0C                     u1141:
  4269   006B0C  EF9A  F035         	goto	l2330
  4270   006B10                     u1140:
  4271   006B10  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4272   006B12  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4273   006B14  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4274   006B16  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4275   006B18  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4276   006B1A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4277   006B1C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4278   006B1E  6C01               	negf	___aomod@dividend^0,c
  4279   006B20  0E00               	movlw	0
  4280   006B22  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4281   006B24  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4282   006B26  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4283   006B28  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4284   006B2A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4285   006B2C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4286   006B2E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4287   006B30  0E01               	movlw	1
  4288   006B32  6E12               	movwf	___aomod@sign^0,c
  4289   006B34                     l2330:
  4290   006B34  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4291   006B36  EFA1  F035         	goto	u1150
  4292   006B3A  EF9F  F035         	goto	u1151
  4293   006B3E                     u1151:
  4294   006B3E  EFB1  F035         	goto	l2334
  4295   006B42                     u1150:
  4296   006B42  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4297   006B44  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4298   006B46  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4299   006B48  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4300   006B4A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4301   006B4C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4302   006B4E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4303   006B50  6C09               	negf	___aomod@divisor^0,c
  4304   006B52  0E00               	movlw	0
  4305   006B54  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4306   006B56  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4307   006B58  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4308   006B5A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4309   006B5C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4310   006B5E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4311   006B60  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4312   006B62                     l2334:
  4313   006B62  5009               	movf	___aomod@divisor^0,w,c
  4314   006B64  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4315   006B66  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4316   006B68  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4317   006B6A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4318   006B6C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4319   006B6E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4320   006B70  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4321   006B72  B4D8               	btfsc	status,2,c
  4322   006B74  EFBE  F035         	goto	u1161
  4323   006B78  EFC0  F035         	goto	u1160
  4324   006B7C                     u1161:
  4325   006B7C  EF08  F036         	goto	l2350
  4326   006B80                     u1160:
  4327   006B80  0E01               	movlw	1
  4328   006B82  6E11               	movwf	___aomod@counter^0,c
  4329   006B84  EFCE  F035         	goto	l2340
  4330   006B88                     l2338:
  4331   006B88  90D8               	bcf	status,0,c
  4332   006B8A  3609               	rlcf	___aomod@divisor^0,f,c
  4333   006B8C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4334   006B8E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4335   006B90  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4336   006B92  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4337   006B94  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4338   006B96  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4339   006B98  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4340   006B9A  2A11               	incf	___aomod@counter^0,f,c
  4341   006B9C                     l2340:
  4342   006B9C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4343   006B9E  EFD3  F035         	goto	u1171
  4344   006BA2  EFD5  F035         	goto	u1170
  4345   006BA6                     u1171:
  4346   006BA6  EFC4  F035         	goto	l2338
  4347   006BAA                     u1170:
  4348   006BAA                     l2342:
  4349   006BAA  5009               	movf	___aomod@divisor^0,w,c
  4350   006BAC  5C01               	subwf	___aomod@dividend^0,w,c
  4351   006BAE  500A               	movf	(___aomod@divisor+1)^0,w,c
  4352   006BB0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4353   006BB2  500B               	movf	(___aomod@divisor+2)^0,w,c
  4354   006BB4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4355   006BB6  500C               	movf	(___aomod@divisor+3)^0,w,c
  4356   006BB8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4357   006BBA  500D               	movf	(___aomod@divisor+4)^0,w,c
  4358   006BBC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4359   006BBE  500E               	movf	(___aomod@divisor+5)^0,w,c
  4360   006BC0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4361   006BC2  500F               	movf	(___aomod@divisor+6)^0,w,c
  4362   006BC4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4363   006BC6  5010               	movf	(___aomod@divisor+7)^0,w,c
  4364   006BC8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4365   006BCA  A0D8               	btfss	status,0,c
  4366   006BCC  EFEA  F035         	goto	u1181
  4367   006BD0  EFEC  F035         	goto	u1180
  4368   006BD4                     u1181:
  4369   006BD4  EFFC  F035         	goto	l2346
  4370   006BD8                     u1180:
  4371   006BD8  5009               	movf	___aomod@divisor^0,w,c
  4372   006BDA  5E01               	subwf	___aomod@dividend^0,f,c
  4373   006BDC  500A               	movf	(___aomod@divisor+1)^0,w,c
  4374   006BDE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4375   006BE0  500B               	movf	(___aomod@divisor+2)^0,w,c
  4376   006BE2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4377   006BE4  500C               	movf	(___aomod@divisor+3)^0,w,c
  4378   006BE6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4379   006BE8  500D               	movf	(___aomod@divisor+4)^0,w,c
  4380   006BEA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4381   006BEC  500E               	movf	(___aomod@divisor+5)^0,w,c
  4382   006BEE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4383   006BF0  500F               	movf	(___aomod@divisor+6)^0,w,c
  4384   006BF2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4385   006BF4  5010               	movf	(___aomod@divisor+7)^0,w,c
  4386   006BF6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4387   006BF8                     l2346:
  4388   006BF8  90D8               	bcf	status,0,c
  4389   006BFA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4390   006BFC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4391   006BFE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4392   006C00  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4393   006C02  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4394   006C04  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4395   006C06  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4396   006C08  3209               	rrcf	___aomod@divisor^0,f,c
  4397   006C0A  2E11               	decfsz	___aomod@counter^0,f,c
  4398   006C0C  EFD5  F035         	goto	l2342
  4399   006C10                     l2350:
  4400   006C10  5012               	movf	___aomod@sign^0,w,c
  4401   006C12  B4D8               	btfsc	status,2,c
  4402   006C14  EF0E  F036         	goto	u1191
  4403   006C18  EF10  F036         	goto	u1190
  4404   006C1C                     u1191:
  4405   006C1C  EF20  F036         	goto	l2354
  4406   006C20                     u1190:
  4407   006C20  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4408   006C22  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4409   006C24  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4410   006C26  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4411   006C28  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4412   006C2A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4413   006C2C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4414   006C2E  6C01               	negf	___aomod@dividend^0,c
  4415   006C30  0E00               	movlw	0
  4416   006C32  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4417   006C34  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4418   006C36  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4419   006C38  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4420   006C3A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4421   006C3C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4422   006C3E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4423   006C40                     l2354:
  4424   006C40  C001  F001         	movff	___aomod@dividend,?___aomod
  4425   006C44  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4426   006C48  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4427   006C4C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4428   006C50  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4429   006C54  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4430   006C58  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4431   006C5C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4432   006C60  0012               	return		;funcret
  4433   006C62                     __end_of___aomod:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function ___aodiv *****************
  4437 ;; Defined at:
  4438 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  dividend        8    0[COMRAM] long long 
  4441 ;;  divisor         8    8[COMRAM] long long 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  quotient        8   18[COMRAM] long long 
  4444 ;;  sign            1   17[COMRAM] unsigned char 
  4445 ;;  counter         1   16[COMRAM] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;                  8    0[COMRAM] long long 
  4448 ;; Registers used:
  4449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4455 ;;      Params:        16       0       0       0       0       0       0
  4456 ;;      Locals:        10       0       0       0       0       0       0
  4457 ;;      Temps:          0       0       0       0       0       0       0
  4458 ;;      Totals:        26       0       0       0       0       0       0
  4459 ;;Total ram usage:       26 bytes
  4460 ;; Hardware stack levels used: 1
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_dtoa
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text10
  4469   006C62                     __ptext10:
  4470                           	callstack 0
  4471   006C62                     ___aodiv:
  4472                           	callstack 26
  4473   006C62  0E00               	movlw	0
  4474   006C64  6E12               	movwf	___aodiv@sign^0,c
  4475   006C66  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4476   006C68  EF3A  F036         	goto	u1070
  4477   006C6C  EF38  F036         	goto	u1071
  4478   006C70                     u1071:
  4479   006C70  EF4C  F036         	goto	l2286
  4480   006C74                     u1070:
  4481   006C74  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4482   006C76  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4483   006C78  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4484   006C7A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4485   006C7C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4486   006C7E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4487   006C80  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4488   006C82  6C09               	negf	___aodiv@divisor^0,c
  4489   006C84  0E00               	movlw	0
  4490   006C86  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4491   006C88  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4492   006C8A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4493   006C8C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4494   006C8E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4495   006C90  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4496   006C92  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4497   006C94  0E01               	movlw	1
  4498   006C96  6E12               	movwf	___aodiv@sign^0,c
  4499   006C98                     l2286:
  4500   006C98  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4501   006C9A  EF53  F036         	goto	u1080
  4502   006C9E  EF51  F036         	goto	u1081
  4503   006CA2                     u1081:
  4504   006CA2  EF65  F036         	goto	l2292
  4505   006CA6                     u1080:
  4506   006CA6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4507   006CA8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4508   006CAA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4509   006CAC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4510   006CAE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4511   006CB0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4512   006CB2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4513   006CB4  6C01               	negf	___aodiv@dividend^0,c
  4514   006CB6  0E00               	movlw	0
  4515   006CB8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4516   006CBA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4517   006CBC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4518   006CBE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4519   006CC0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4520   006CC2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4521   006CC4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4522   006CC6  0E01               	movlw	1
  4523   006CC8  1A12               	xorwf	___aodiv@sign^0,f,c
  4524   006CCA                     l2292:
  4525   006CCA  EE20  F013         	lfsr	2,___aodiv@quotient
  4526   006CCE  0E07               	movlw	7
  4527   006CD0                     u1091:
  4528   006CD0  6ADE               	clrf	postinc2,c
  4529   006CD2  06E8               	decf	wreg,f,c
  4530   006CD4  E2FD               	bc	u1091
  4531   006CD6  5009               	movf	___aodiv@divisor^0,w,c
  4532   006CD8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4533   006CDA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4534   006CDC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4535   006CDE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4536   006CE0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4537   006CE2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4538   006CE4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4539   006CE6  B4D8               	btfsc	status,2,c
  4540   006CE8  EF78  F036         	goto	u1101
  4541   006CEC  EF7A  F036         	goto	u1100
  4542   006CF0                     u1101:
  4543   006CF0  EFCC  F036         	goto	l2314
  4544   006CF4                     u1100:
  4545   006CF4  0E01               	movlw	1
  4546   006CF6  6E11               	movwf	___aodiv@counter^0,c
  4547   006CF8  EF88  F036         	goto	l2300
  4548   006CFC                     l2298:
  4549   006CFC  90D8               	bcf	status,0,c
  4550   006CFE  3609               	rlcf	___aodiv@divisor^0,f,c
  4551   006D00  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4552   006D02  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4553   006D04  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4554   006D06  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4555   006D08  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4556   006D0A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4557   006D0C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4558   006D0E  2A11               	incf	___aodiv@counter^0,f,c
  4559   006D10                     l2300:
  4560   006D10  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4561   006D12  EF8D  F036         	goto	u1111
  4562   006D16  EF8F  F036         	goto	u1110
  4563   006D1A                     u1111:
  4564   006D1A  EF7E  F036         	goto	l2298
  4565   006D1E                     u1110:
  4566   006D1E                     l2302:
  4567   006D1E  90D8               	bcf	status,0,c
  4568   006D20  3613               	rlcf	___aodiv@quotient^0,f,c
  4569   006D22  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4570   006D24  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4571   006D26  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4572   006D28  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4573   006D2A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4574   006D2C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4575   006D2E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4576   006D30  5009               	movf	___aodiv@divisor^0,w,c
  4577   006D32  5C01               	subwf	___aodiv@dividend^0,w,c
  4578   006D34  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4579   006D36  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4580   006D38  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4581   006D3A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4582   006D3C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4583   006D3E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4584   006D40  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4585   006D42  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4586   006D44  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4587   006D46  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4588   006D48  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4589   006D4A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4590   006D4C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4591   006D4E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4592   006D50  A0D8               	btfss	status,0,c
  4593   006D52  EFAD  F036         	goto	u1121
  4594   006D56  EFAF  F036         	goto	u1120
  4595   006D5A                     u1121:
  4596   006D5A  EFC0  F036         	goto	l2310
  4597   006D5E                     u1120:
  4598   006D5E  5009               	movf	___aodiv@divisor^0,w,c
  4599   006D60  5E01               	subwf	___aodiv@dividend^0,f,c
  4600   006D62  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4601   006D64  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4602   006D66  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4603   006D68  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4604   006D6A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4605   006D6C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4606   006D6E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4607   006D70  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4608   006D72  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4609   006D74  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4610   006D76  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4611   006D78  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4612   006D7A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4613   006D7C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4614   006D7E  8013               	bsf	___aodiv@quotient^0,0,c
  4615   006D80                     l2310:
  4616   006D80  90D8               	bcf	status,0,c
  4617   006D82  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4618   006D84  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4619   006D86  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4620   006D88  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4621   006D8A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4622   006D8C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4623   006D8E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4624   006D90  3209               	rrcf	___aodiv@divisor^0,f,c
  4625   006D92  2E11               	decfsz	___aodiv@counter^0,f,c
  4626   006D94  EF8F  F036         	goto	l2302
  4627   006D98                     l2314:
  4628   006D98  5012               	movf	___aodiv@sign^0,w,c
  4629   006D9A  B4D8               	btfsc	status,2,c
  4630   006D9C  EFD2  F036         	goto	u1131
  4631   006DA0  EFD4  F036         	goto	u1130
  4632   006DA4                     u1131:
  4633   006DA4  EFE4  F036         	goto	l2318
  4634   006DA8                     u1130:
  4635   006DA8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4636   006DAA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4637   006DAC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4638   006DAE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4639   006DB0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4640   006DB2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4641   006DB4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4642   006DB6  6C13               	negf	___aodiv@quotient^0,c
  4643   006DB8  0E00               	movlw	0
  4644   006DBA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4645   006DBC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4646   006DBE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4647   006DC0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4648   006DC2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4649   006DC4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4650   006DC6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4651   006DC8                     l2318:
  4652   006DC8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4653   006DCC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4654   006DD0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4655   006DD4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4656   006DD8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4657   006DDC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4658   006DE0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4659   006DE4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4660   006DE8  0012               	return		;funcret
  4661   006DEA                     __end_of___aodiv:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _ctoa *****************
  4665 ;; Defined at:
  4666 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4669 ;;		 -> NULL(0), 
  4670 ;;  c               1   13[COMRAM] unsigned char 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  w               2   17[COMRAM] int 
  4673 ;;  l               2   15[COMRAM] int 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  1    wreg      void 
  4676 ;; Registers used:
  4677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4683 ;;      Params:         3       0       0       0       0       0       0
  4684 ;;      Locals:         4       0       0       0       0       0       0
  4685 ;;      Temps:          1       0       0       0       0       0       0
  4686 ;;      Totals:         8       0       0       0       0       0       0
  4687 ;;Total ram usage:        8 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 3
  4690 ;; This function calls:
  4691 ;;		_fputc
  4692 ;; This function is called by:
  4693 ;;		_vfpfcnvrt
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text11
  4698   0068E8                     __ptext11:
  4699                           	callstack 0
  4700   0068E8                     _ctoa:
  4701                           	callstack 24
  4702   0068E8                     
  4703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  4704   0068E8  0100               	movlb	0	; () banked
  4705   0068EA  5160               	movf	_width& (0+255),w,b
  4706   0068EC  1161               	iorwf	(_width+1)& (0+255),w,b
  4707   0068EE  A4D8               	btfss	status,2,c
  4708   0068F0  EF7C  F034         	goto	u1291
  4709   0068F4  EF7E  F034         	goto	u1290
  4710   0068F8                     u1291:
  4711   0068F8  EF84  F034         	goto	l2400
  4712   0068FC                     u1290:
  4713   0068FC                     
  4714                           ; BSR set to: 0
  4715   0068FC  C060  F012         	movff	_width,ctoa@w
  4716   006900  C061  F013         	movff	_width+1,ctoa@w+1
  4717   006904  EF8A  F034         	goto	l2402
  4718   006908                     l2400:
  4719                           
  4720                           ; BSR set to: 0
  4721   006908  0EFF               	movlw	255
  4722   00690A  2560               	addwf	_width& (0+255),w,b
  4723   00690C  6E12               	movwf	ctoa@w^0,c
  4724   00690E  0EFF               	movlw	255
  4725   006910  2161               	addwfc	(_width+1)& (0+255),w,b
  4726   006912  6E13               	movwf	(ctoa@w+1)^0,c
  4727   006914                     l2402:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  4731   006914  A172               	btfss	_flags& (0+255),0,b
  4732   006916  EF8F  F034         	goto	u1301
  4733   00691A  EF91  F034         	goto	u1300
  4734   00691E                     u1301:
  4735   00691E  EF9A  F034         	goto	l2406
  4736   006922                     u1300:
  4737   006922                     
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  4740   006922  C00E  F003         	movff	ctoa@c,fputc@c
  4741   006926  6A04               	clrf	(fputc@c+1)^0,c
  4742   006928  C00C  F005         	movff	ctoa@fp,fputc@fp
  4743   00692C  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  4744   006930  ECD2  F033         	call	_fputc	;wreg free
  4745   006934                     l2406:
  4746                           
  4747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  4748   006934  BE13               	btfsc	(ctoa@w+1)^0,7,c
  4749   006936  EF9F  F034         	goto	u1311
  4750   00693A  EFA1  F034         	goto	u1310
  4751   00693E                     u1311:
  4752   00693E  EFA3  F034         	goto	l2410
  4753   006942                     u1310:
  4754   006942  EFA7  F034         	goto	l1165
  4755   006946                     l2410:
  4756   006946  0E00               	movlw	0
  4757   006948  6E13               	movwf	(ctoa@w+1)^0,c
  4758   00694A  0E00               	movlw	0
  4759   00694C  6E12               	movwf	ctoa@w^0,c
  4760   00694E                     l1165:
  4761                           
  4762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  4763   00694E  0E00               	movlw	0
  4764   006950  6E11               	movwf	(ctoa@l+1)^0,c
  4765   006952  0E00               	movlw	0
  4766   006954  6E10               	movwf	ctoa@l^0,c
  4767                           
  4768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4769   006956  EFB9  F034         	goto	l2416
  4770   00695A                     l2412:
  4771                           
  4772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  4773   00695A  0E00               	movlw	0
  4774   00695C  6E04               	movwf	(fputc@c+1)^0,c
  4775   00695E  0E20               	movlw	32
  4776   006960  6E03               	movwf	fputc@c^0,c
  4777   006962  C00C  F005         	movff	ctoa@fp,fputc@fp
  4778   006966  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  4779   00696A  ECD2  F033         	call	_fputc	;wreg free
  4780   00696E                     
  4781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  4782   00696E  4A10               	infsnz	ctoa@l^0,f,c
  4783   006970  2A11               	incf	(ctoa@l+1)^0,f,c
  4784   006972                     l2416:
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4787   006972  5012               	movf	ctoa@w^0,w,c
  4788   006974  5C10               	subwf	ctoa@l^0,w,c
  4789   006976  5011               	movf	(ctoa@l+1)^0,w,c
  4790   006978  0A80               	xorlw	128
  4791   00697A  6E0F               	movwf	??_ctoa^0,c
  4792   00697C  5013               	movf	(ctoa@w+1)^0,w,c
  4793   00697E  0A80               	xorlw	128
  4794   006980  580F               	subwfb	??_ctoa^0,w,c
  4795   006982  A0D8               	btfss	status,0,c
  4796   006984  EFC6  F034         	goto	u1321
  4797   006988  EFC8  F034         	goto	u1320
  4798   00698C                     u1321:
  4799   00698C  EFAD  F034         	goto	l2412
  4800   006990                     u1320:
  4801   006990                     
  4802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  4803   006990  0100               	movlb	0	; () banked
  4804   006992  B172               	btfsc	_flags& (0+255),0,b
  4805   006994  EFCE  F034         	goto	u1331
  4806   006998  EFD0  F034         	goto	u1330
  4807   00699C                     u1331:
  4808   00699C  EFD9  F034         	goto	l1170
  4809   0069A0                     u1330:
  4810   0069A0                     
  4811                           ; BSR set to: 0
  4812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  4813   0069A0  C00E  F003         	movff	ctoa@c,fputc@c
  4814   0069A4  6A04               	clrf	(fputc@c+1)^0,c
  4815   0069A6  C00C  F005         	movff	ctoa@fp,fputc@fp
  4816   0069AA  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  4817   0069AE  ECD2  F033         	call	_fputc	;wreg free
  4818   0069B2                     l1170:
  4819   0069B2  0012               	return		;funcret
  4820   0069B4                     __end_of_ctoa:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _fputc *****************
  4824 ;; Defined at:
  4825 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  c               2    2[COMRAM] int 
  4828 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4829 ;;		 -> NULL(0), 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  2    2[COMRAM] int 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4841 ;;      Params:         4       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0
  4843 ;;      Temps:          5       0       0       0       0       0       0
  4844 ;;      Totals:         9       0       0       0       0       0       0
  4845 ;;Total ram usage:        9 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 2
  4848 ;; This function calls:
  4849 ;;		_putch
  4850 ;; This function is called by:
  4851 ;;		_pad
  4852 ;;		_ctoa
  4853 ;;		_vfpfcnvrt
  4854 ;;		_fputs
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text12
  4859   0067A4                     __ptext12:
  4860                           	callstack 0
  4861   0067A4                     _fputc:
  4862                           	callstack 22
  4863   0067A4  5005               	movf	fputc@fp^0,w,c
  4864   0067A6  1006               	iorwf	(fputc@fp+1)^0,w,c
  4865   0067A8  B4D8               	btfsc	status,2,c
  4866   0067AA  EFD9  F033         	goto	u1021
  4867   0067AE  EFDB  F033         	goto	u1020
  4868   0067B2                     u1021:
  4869   0067B2  EFE4  F033         	goto	l2254
  4870   0067B6                     u1020:
  4871   0067B6  5005               	movf	fputc@fp^0,w,c
  4872   0067B8  1006               	iorwf	(fputc@fp+1)^0,w,c
  4873   0067BA  A4D8               	btfss	status,2,c
  4874   0067BC  EFE2  F033         	goto	u1031
  4875   0067C0  EFE4  F033         	goto	u1030
  4876   0067C4                     u1031:
  4877   0067C4  EFE9  F033         	goto	l2256
  4878   0067C8                     u1030:
  4879   0067C8                     l2254:
  4880   0067C8  5003               	movf	fputc@c^0,w,c
  4881   0067CA  ECCC  F031         	call	_putch
  4882   0067CE  EF1C  F034         	goto	l1304
  4883   0067D2                     l2256:
  4884   0067D2  EE20 F009          	lfsr	2,9
  4885   0067D6  5005               	movf	fputc@fp^0,w,c
  4886   0067D8  26D9               	addwf	fsr2l,f,c
  4887   0067DA  5006               	movf	(fputc@fp+1)^0,w,c
  4888   0067DC  22DA               	addwfc	fsr2h,f,c
  4889   0067DE  50DE               	movf	postinc2,w,c
  4890   0067E0  10DE               	iorwf	postinc2,w,c
  4891   0067E2  B4D8               	btfsc	status,2,c
  4892   0067E4  EFF6  F033         	goto	u1041
  4893   0067E8  EFF8  F033         	goto	u1040
  4894   0067EC                     u1041:
  4895   0067EC  EF13  F034         	goto	l2260
  4896   0067F0                     u1040:
  4897   0067F0  EE20 F009          	lfsr	2,9
  4898   0067F4  5005               	movf	fputc@fp^0,w,c
  4899   0067F6  26D9               	addwf	fsr2l,f,c
  4900   0067F8  5006               	movf	(fputc@fp+1)^0,w,c
  4901   0067FA  22DA               	addwfc	fsr2h,f,c
  4902   0067FC  EE10 F003          	lfsr	1,3
  4903   006800  5005               	movf	fputc@fp^0,w,c
  4904   006802  26E1               	addwf	fsr1l,f,c
  4905   006804  5006               	movf	(fputc@fp+1)^0,w,c
  4906   006806  22E2               	addwfc	fsr1h,f,c
  4907   006808  50DE               	movf	postinc2,w,c
  4908   00680A  5CE6               	subwf	postinc1,w,c
  4909   00680C  50E6               	movf	postinc1,w,c
  4910   00680E  0A80               	xorlw	128
  4911   006810  6E0B               	movwf	(??_fputc+4)^0,c
  4912   006812  50DE               	movf	postinc2,w,c
  4913   006814  0A80               	xorlw	128
  4914   006816  580B               	subwfb	(??_fputc+4)^0,w,c
  4915   006818  B0D8               	btfsc	status,0,c
  4916   00681A  EF11  F034         	goto	u1051
  4917   00681E  EF13  F034         	goto	u1050
  4918   006822                     u1051:
  4919   006822  EF1C  F034         	goto	l1304
  4920   006826                     u1050:
  4921   006826                     l2260:
  4922   006826  EE20 F003          	lfsr	2,3
  4923   00682A  5005               	movf	fputc@fp^0,w,c
  4924   00682C  26D9               	addwf	fsr2l,f,c
  4925   00682E  5006               	movf	(fputc@fp+1)^0,w,c
  4926   006830  22DA               	addwfc	fsr2h,f,c
  4927   006832  2ADE               	incf	postinc2,f,c
  4928   006834  0E00               	movlw	0
  4929   006836  22DD               	addwfc	postdec2,f,c
  4930   006838                     l1304:
  4931   006838  0012               	return		;funcret
  4932   00683A                     __end_of_fputc:
  4933                           	callstack 0
  4934                           
  4935 ;; *************** function _putch *****************
  4936 ;; Defined at:
  4937 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  txData          1    wreg     unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  txData          1    1[COMRAM] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4951 ;;      Params:         0       0       0       0       0       0       0
  4952 ;;      Locals:         1       0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0
  4954 ;;      Totals:         1       0       0       0       0       0       0
  4955 ;;Total ram usage:        1 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 1
  4958 ;; This function calls:
  4959 ;;		_EUSART1_Write
  4960 ;; This function is called by:
  4961 ;;		_fputc
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text13
  4966   006398                     __ptext13:
  4967                           	callstack 0
  4968   006398                     _putch:
  4969                           	callstack 22
  4970                           
  4971                           ;incstack = 0
  4972                           ;putch@txData stored from wreg
  4973   006398  6E02               	movwf	putch@txData^0,c
  4974   00639A                     
  4975                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4976   00639A  5002               	movf	putch@txData^0,w,c
  4977   00639C  ECFC  F031         	call	_EUSART1_Write
  4978   0063A0  0012               	return		;funcret
  4979   0063A2                     __end_of_putch:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _EUSART1_Write *****************
  4983 ;; Defined at:
  4984 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  txData          1    wreg     unsigned char 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  txData          1    0[COMRAM] unsigned char 
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4998 ;;      Params:         0       0       0       0       0       0       0
  4999 ;;      Locals:         1       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0
  5001 ;;      Totals:         1       0       0       0       0       0       0
  5002 ;;Total ram usage:        1 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_putch
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text14
  5012   0063F8                     __ptext14:
  5013                           	callstack 0
  5014   0063F8                     _EUSART1_Write:
  5015                           	callstack 22
  5016                           
  5017                           ;incstack = 0
  5018                           ;EUSART1_Write@txData stored from wreg
  5019   0063F8  6E01               	movwf	EUSART1_Write@txData^0,c
  5020   0063FA                     l254:
  5021                           
  5022                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5023   0063FA  A89E               	btfss	158,4,c	;volatile
  5024   0063FC  EF02  F032         	goto	u1011
  5025   006400  EF04  F032         	goto	u1010
  5026   006404                     u1011:
  5027   006404  EFFD  F031         	goto	l254
  5028   006408                     u1010:
  5029   006408                     
  5030                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  5031   006408  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5032   00640C  0012               	return		;funcret
  5033   00640E                     __end_of_EUSART1_Write:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _atoi *****************
  5037 ;; Defined at:
  5038 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5041 ;;		 -> STR_39(17), STR_38(21), STR_37(32), STR_36(31), 
  5042 ;;		 -> STR_35(21), STR_34(31), STR_33(16), STR_32(15), 
  5043 ;;		 -> STR_31(15), STR_30(15), STR_29(14), STR_28(43), 
  5044 ;;		 -> STR_27(2), STR_26(2), STR_25(8), STR_24(52), 
  5045 ;;		 -> STR_23(19), STR_22(37), STR_21(34), STR_20(91), 
  5046 ;;		 -> STR_19(46), STR_18(24), STR_17(21), STR_16(7), 
  5047 ;;		 -> STR_15(15), STR_14(52), STR_13(12), STR_12(13), 
  5048 ;;		 -> STR_11(12), STR_10(12), STR_9(12), STR_8(11), 
  5049 ;;		 -> STR_7(52), STR_6(5), STR_5(42), STR_4(70), 
  5050 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  n               2   13[COMRAM] int 
  5053 ;;  neg             2   11[COMRAM] int 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  2    6[COMRAM] int 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5063 ;;      Params:         2       0       0       0       0       0       0
  5064 ;;      Locals:         4       0       0       0       0       0       0
  5065 ;;      Temps:          3       0       0       0       0       0       0
  5066 ;;      Totals:         9       0       0       0       0       0       0
  5067 ;;Total ram usage:        9 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 1
  5070 ;; This function calls:
  5071 ;;		___wmul
  5072 ;;		_isdigit
  5073 ;;		_isspace
  5074 ;; This function is called by:
  5075 ;;		_vfpfcnvrt
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text15
  5080   0069B4                     __ptext15:
  5081                           	callstack 0
  5082   0069B4                     _atoi:
  5083                           	callstack 26
  5084   0069B4  0E00               	movlw	0
  5085   0069B6  6E0F               	movwf	(atoi@n+1)^0,c
  5086   0069B8  0E00               	movlw	0
  5087   0069BA  6E0E               	movwf	atoi@n^0,c
  5088   0069BC  0E00               	movlw	0
  5089   0069BE  6E0D               	movwf	(atoi@neg+1)^0,c
  5090   0069C0  0E00               	movlw	0
  5091   0069C2  6E0C               	movwf	atoi@neg^0,c
  5092   0069C4  EFE6  F034         	goto	l2532
  5093   0069C8                     l2528:
  5094   0069C8  4A07               	infsnz	atoi@s^0,f,c
  5095   0069CA  2A08               	incf	(atoi@s+1)^0,f,c
  5096   0069CC                     l2532:
  5097   0069CC  C007  FFF6         	movff	atoi@s,tblptrl
  5098   0069D0  C008  FFF7         	movff	atoi@s+1,tblptrh
  5099   0069D4                     	if	0	;tblptru may be non-zero
  5100   0069D4                     	endif
  5101   0069D4                     	if	0	;tblptru may be non-zero
  5102   0069D4                     	endif
  5103   0069D4  0008               	tblrd		*
  5104   0069D6  50F5               	movf	tablat,w,c
  5105   0069D8  0A20               	xorlw	32
  5106   0069DA  B4D8               	btfsc	status,2,c
  5107   0069DC  EFF2  F034         	goto	u1561
  5108   0069E0  EFF4  F034         	goto	u1560
  5109   0069E4                     u1561:
  5110   0069E4  EFE4  F034         	goto	l2528
  5111   0069E8                     u1560:
  5112   0069E8  C007  FFF6         	movff	atoi@s,tblptrl
  5113   0069EC  C008  FFF7         	movff	atoi@s+1,tblptrh
  5114   0069F0                     	if	0	;tblptru may be non-zero
  5115   0069F0                     	endif
  5116   0069F0                     	if	0	;tblptru may be non-zero
  5117   0069F0                     	endif
  5118   0069F0  0008               	tblrd		*
  5119   0069F2  CFF5 F009          	movff	tablat,??_atoi
  5120   0069F6  0EF7               	movlw	247
  5121   0069F8  2409               	addwf	??_atoi^0,w,c
  5122   0069FA  6E0A               	movwf	(??_atoi+1)^0,c
  5123   0069FC  6A0B               	clrf	(??_atoi+2)^0,c
  5124   0069FE  0EFF               	movlw	255
  5125   006A00  220B               	addwfc	(??_atoi+2)^0,f,c
  5126   006A02  500B               	movf	(??_atoi+2)^0,w,c
  5127   006A04  E109               	bnz	u1570
  5128   006A06  0E05               	movlw	5
  5129   006A08  5C0A               	subwf	(??_atoi+1)^0,w,c
  5130   006A0A  A0D8               	btfss	status,0,c
  5131   006A0C  EF0A  F035         	goto	u1571
  5132   006A10  EF0C  F035         	goto	u1570
  5133   006A14                     u1571:
  5134   006A14  EFE4  F034         	goto	l2528
  5135   006A18                     u1570:
  5136   006A18  EF16  F035         	goto	l2540
  5137   006A1C                     l2536:
  5138   006A1C  0E00               	movlw	0
  5139   006A1E  6E0D               	movwf	(atoi@neg+1)^0,c
  5140   006A20  0E01               	movlw	1
  5141   006A22  6E0C               	movwf	atoi@neg^0,c
  5142   006A24                     l2538:
  5143   006A24  4A07               	infsnz	atoi@s^0,f,c
  5144   006A26  2A08               	incf	(atoi@s+1)^0,f,c
  5145   006A28  EF4B  F035         	goto	l2548
  5146   006A2C                     l2540:
  5147   006A2C  C007  FFF6         	movff	atoi@s,tblptrl
  5148   006A30  C008  FFF7         	movff	atoi@s+1,tblptrh
  5149   006A34                     	if	0	;tblptru may be non-zero
  5150   006A34                     	endif
  5151   006A34                     	if	0	;tblptru may be non-zero
  5152   006A34                     	endif
  5153   006A34  0008               	tblrd		*
  5154   006A36  50F5               	movf	tablat,w,c
  5155   006A38  6E09               	movwf	??_atoi^0,c
  5156   006A3A  6A0A               	clrf	(??_atoi+1)^0,c
  5157                           
  5158                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5159                           ; Switch size 1, requested type "simple"
  5160                           ; Number of cases is 1, Range of values is 0 to 0
  5161                           ; switch strategies available:
  5162                           ; Name         Instructions Cycles
  5163                           ; simple_byte            4     3 (average)
  5164                           ;	Chosen strategy is simple_byte
  5165   006A3C  500A               	movf	(??_atoi+1)^0,w,c
  5166   006A3E  0A00               	xorlw	0	; case 0
  5167   006A40  B4D8               	btfsc	status,2,c
  5168   006A42  EF25  F035         	goto	l3120
  5169   006A46  EF4B  F035         	goto	l2548
  5170   006A4A                     l3120:
  5171                           
  5172                           ; Switch size 1, requested type "simple"
  5173                           ; Number of cases is 2, Range of values is 43 to 45
  5174                           ; switch strategies available:
  5175                           ; Name         Instructions Cycles
  5176                           ; simple_byte            7     4 (average)
  5177                           ;	Chosen strategy is simple_byte
  5178   006A4A  5009               	movf	??_atoi^0,w,c
  5179   006A4C  0A2B               	xorlw	43	; case 43
  5180   006A4E  B4D8               	btfsc	status,2,c
  5181   006A50  EF12  F035         	goto	l2538
  5182   006A54  0A06               	xorlw	6	; case 45
  5183   006A56  B4D8               	btfsc	status,2,c
  5184   006A58  EF0E  F035         	goto	l2536
  5185   006A5C  EF4B  F035         	goto	l2548
  5186   006A60                     l2542:
  5187   006A60  C00E  F001         	movff	atoi@n,___wmul@multiplier
  5188   006A64  C00F  F002         	movff	atoi@n+1,___wmul@multiplier+1
  5189   006A68  0E00               	movlw	0
  5190   006A6A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5191   006A6C  0E0A               	movlw	10
  5192   006A6E  6E03               	movwf	___wmul@multiplicand^0,c
  5193   006A70  EC42  F032         	call	___wmul	;wreg free
  5194   006A74  C007  FFF6         	movff	atoi@s,tblptrl
  5195   006A78  C008  FFF7         	movff	atoi@s+1,tblptrh
  5196   006A7C                     	if	0	;tblptru may be non-zero
  5197   006A7C                     	endif
  5198   006A7C                     	if	0	;tblptru may be non-zero
  5199   006A7C                     	endif
  5200   006A7C  0008               	tblrd		*
  5201   006A7E  50F5               	movf	tablat,w,c
  5202   006A80  5E01               	subwf	?___wmul^0,f,c
  5203   006A82  0E00               	movlw	0
  5204   006A84  5A02               	subwfb	(?___wmul+1)^0,f,c
  5205   006A86  0E30               	movlw	48
  5206   006A88  2401               	addwf	?___wmul^0,w,c
  5207   006A8A  6E0E               	movwf	atoi@n^0,c
  5208   006A8C  0E00               	movlw	0
  5209   006A8E  2002               	addwfc	(?___wmul+1)^0,w,c
  5210   006A90  6E0F               	movwf	(atoi@n+1)^0,c
  5211   006A92  EF12  F035         	goto	l2538
  5212   006A96                     l2548:
  5213   006A96  C007  FFF6         	movff	atoi@s,tblptrl
  5214   006A9A  C008  FFF7         	movff	atoi@s+1,tblptrh
  5215   006A9E                     	if	0	;tblptru may be non-zero
  5216   006A9E                     	endif
  5217   006A9E                     	if	0	;tblptru may be non-zero
  5218   006A9E                     	endif
  5219   006A9E  0008               	tblrd		*
  5220   006AA0  CFF5 F009          	movff	tablat,??_atoi
  5221   006AA4  0ED0               	movlw	208
  5222   006AA6  2409               	addwf	??_atoi^0,w,c
  5223   006AA8  6E0A               	movwf	(??_atoi+1)^0,c
  5224   006AAA  6A0B               	clrf	(??_atoi+2)^0,c
  5225   006AAC  0EFF               	movlw	255
  5226   006AAE  220B               	addwfc	(??_atoi+2)^0,f,c
  5227   006AB0  500B               	movf	(??_atoi+2)^0,w,c
  5228   006AB2  E109               	bnz	u1580
  5229   006AB4  0E0A               	movlw	10
  5230   006AB6  5C0A               	subwf	(??_atoi+1)^0,w,c
  5231   006AB8  A0D8               	btfss	status,0,c
  5232   006ABA  EF61  F035         	goto	u1581
  5233   006ABE  EF63  F035         	goto	u1580
  5234   006AC2                     u1581:
  5235   006AC2  EF30  F035         	goto	l2542
  5236   006AC6                     u1580:
  5237   006AC6  500C               	movf	atoi@neg^0,w,c
  5238   006AC8  100D               	iorwf	(atoi@neg+1)^0,w,c
  5239   006ACA  A4D8               	btfss	status,2,c
  5240   006ACC  EF6A  F035         	goto	u1591
  5241   006AD0  EF6C  F035         	goto	u1590
  5242   006AD4                     u1591:
  5243   006AD4  EF7A  F035         	goto	l1275
  5244   006AD8                     u1590:
  5245   006AD8  C00E  F009         	movff	atoi@n,??_atoi
  5246   006ADC  C00F  F00A         	movff	atoi@n+1,??_atoi+1
  5247   006AE0  1E09               	comf	??_atoi^0,f,c
  5248   006AE2  1E0A               	comf	(??_atoi+1)^0,f,c
  5249   006AE4  4A09               	infsnz	??_atoi^0,f,c
  5250   006AE6  2A0A               	incf	(??_atoi+1)^0,f,c
  5251   006AE8  C009  F007         	movff	??_atoi,?_atoi
  5252   006AEC  C00A  F008         	movff	??_atoi+1,?_atoi+1
  5253   006AF0  EF7E  F035         	goto	l1278
  5254   006AF4                     l1275:
  5255   006AF4  C00E  F007         	movff	atoi@n,?_atoi
  5256   006AF8  C00F  F008         	movff	atoi@n+1,?_atoi+1
  5257   006AFC                     l1278:
  5258   006AFC  0012               	return		;funcret
  5259   006AFE                     __end_of_atoi:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function _isspace *****************
  5263 ;; Defined at:
  5264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  c               2    0[COMRAM] int 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2    0[COMRAM] int 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5278 ;;      Params:         2       0       0       0       0       0       0
  5279 ;;      Locals:         1       0       0       0       0       0       0
  5280 ;;      Temps:          2       0       0       0       0       0       0
  5281 ;;      Totals:         5       0       0       0       0       0       0
  5282 ;;Total ram usage:        5 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_atoi
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text16
  5292   006710                     __ptext16:
  5293                           	callstack 0
  5294   006710                     _isspace:
  5295                           	callstack 26
  5296   006710  0E01               	movlw	1
  5297   006712  6E05               	movwf	_isspace$1658^0,c
  5298   006714  0E20               	movlw	32
  5299   006716  1801               	xorwf	isspace@c^0,w,c
  5300   006718  1002               	iorwf	(isspace@c+1)^0,w,c
  5301   00671A  B4D8               	btfsc	status,2,c
  5302   00671C  EF92  F033         	goto	u1271
  5303   006720  EF94  F033         	goto	u1270
  5304   006724                     u1271:
  5305   006724  EFA7  F033         	goto	l2392
  5306   006728                     u1270:
  5307   006728  0EF7               	movlw	247
  5308   00672A  2401               	addwf	isspace@c^0,w,c
  5309   00672C  6E03               	movwf	??_isspace^0,c
  5310   00672E  0EFF               	movlw	255
  5311   006730  2002               	addwfc	(isspace@c+1)^0,w,c
  5312   006732  6E04               	movwf	(??_isspace+1)^0,c
  5313   006734  5004               	movf	(??_isspace+1)^0,w,c
  5314   006736  E109               	bnz	u1280
  5315   006738  0E05               	movlw	5
  5316   00673A  5C03               	subwf	??_isspace^0,w,c
  5317   00673C  A0D8               	btfss	status,0,c
  5318   00673E  EFA3  F033         	goto	u1281
  5319   006742  EFA5  F033         	goto	u1280
  5320   006746                     u1281:
  5321   006746  EFA7  F033         	goto	l2392
  5322   00674A                     u1280:
  5323   00674A  0E00               	movlw	0
  5324   00674C  6E05               	movwf	_isspace$1658^0,c
  5325   00674E                     l2392:
  5326   00674E  C005  F001         	movff	_isspace$1658,?_isspace
  5327   006752  6A02               	clrf	(?_isspace+1)^0,c
  5328   006754  0012               	return		;funcret
  5329   006756                     __end_of_isspace:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _isdigit *****************
  5333 ;; Defined at:
  5334 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  c               2    0[COMRAM] int 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  2    0[COMRAM] int 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5348 ;;      Params:         2       0       0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0
  5350 ;;      Temps:          2       0       0       0       0       0       0
  5351 ;;      Totals:         4       0       0       0       0       0       0
  5352 ;;Total ram usage:        4 bytes
  5353 ;; Hardware stack levels used: 1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_vfpfcnvrt
  5358 ;;		_atoi
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           	psect	text17
  5363   00657A                     __ptext17:
  5364                           	callstack 0
  5365   00657A                     _isdigit:
  5366                           	callstack 27
  5367   00657A  0ED0               	movlw	208
  5368   00657C  2401               	addwf	isdigit@c^0,w,c
  5369   00657E  6E03               	movwf	??_isdigit^0,c
  5370   006580  0EFF               	movlw	255
  5371   006582  2002               	addwfc	(isdigit@c+1)^0,w,c
  5372   006584  6E04               	movwf	(??_isdigit+1)^0,c
  5373   006586  5004               	movf	(??_isdigit+1)^0,w,c
  5374   006588  E10A               	bnz	u1250
  5375   00658A  0E0A               	movlw	10
  5376   00658C  5C03               	subwf	??_isdigit^0,w,c
  5377   00658E  A0D8               	btfss	status,0,c
  5378   006590  EFCC  F032         	goto	u1251
  5379   006594  EFCF  F032         	goto	u1250
  5380   006598                     u1251:
  5381   006598  0E01               	movlw	1
  5382   00659A  EFD0  F032         	goto	u1260
  5383   00659E                     u1250:
  5384   00659E  0E00               	movlw	0
  5385   0065A0                     u1260:
  5386   0065A0  6E01               	movwf	?_isdigit^0,c
  5387   0065A2  6A02               	clrf	(?_isdigit+1)^0,c
  5388   0065A4  0012               	return		;funcret
  5389   0065A6                     __end_of_isdigit:
  5390                           	callstack 0
  5391                           
  5392 ;; *************** function ___wmul *****************
  5393 ;; Defined at:
  5394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;  multiplier      2    0[COMRAM] unsigned int 
  5397 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  product         2    4[COMRAM] unsigned int 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2    0[COMRAM] unsigned int 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0, prodl, prodh
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5409 ;;      Params:         4       0       0       0       0       0       0
  5410 ;;      Locals:         2       0       0       0       0       0       0
  5411 ;;      Temps:          0       0       0       0       0       0       0
  5412 ;;      Totals:         6       0       0       0       0       0       0
  5413 ;;Total ram usage:        6 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_atoi
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text18
  5423   006484                     __ptext18:
  5424                           	callstack 0
  5425   006484                     ___wmul:
  5426                           	callstack 26
  5427   006484  5001               	movf	___wmul@multiplier^0,w,c
  5428   006486  0203               	mulwf	___wmul@multiplicand^0,c
  5429   006488  CFF3 F005          	movff	prodl,___wmul@product
  5430   00648C  CFF4 F006          	movff	prodh,___wmul@product+1
  5431   006490  5001               	movf	___wmul@multiplier^0,w,c
  5432   006492  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5433   006494  50F3               	movf	243,w,c
  5434   006496  2606               	addwf	(___wmul@product+1)^0,f,c
  5435   006498  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5436   00649A  0203               	mulwf	___wmul@multiplicand^0,c
  5437   00649C  50F3               	movf	243,w,c
  5438   00649E  2606               	addwf	(___wmul@product+1)^0,f,c
  5439   0064A0  C005  F001         	movff	___wmul@product,?___wmul
  5440   0064A4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5441   0064A8  0012               	return		;funcret
  5442   0064AA                     __end_of___wmul:
  5443                           	callstack 0
  5444                           
  5445 ;; *************** function _TMR1_WriteTimer *****************
  5446 ;; Defined at:
  5447 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;  timerVal        2    0[COMRAM] unsigned short 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5461 ;;      Params:         2       0       0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0
  5464 ;;      Totals:         2       0       0       0       0       0       0
  5465 ;;Total ram usage:        2 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_main
  5471 ;;		_TMR1_Reload
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text19
  5476   0064AA                     __ptext19:
  5477                           	callstack 0
  5478   0064AA                     _TMR1_WriteTimer:
  5479                           	callstack 30
  5480   0064AA                     
  5481                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  5482   0064AA  A4CD               	btfss	205,2,c	;volatile
  5483   0064AC  EF5A  F032         	goto	u1711
  5484   0064B0  EF5C  F032         	goto	u1710
  5485   0064B4                     u1711:
  5486   0064B4  EF64  F032         	goto	l2718
  5487   0064B8                     u1710:
  5488   0064B8                     
  5489                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  5490   0064B8  90CD               	bcf	205,0,c	;volatile
  5491   0064BA                     
  5492                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (uint8_t)(timerVal >> 8);
  5493   0064BA  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5494   0064BC  6ECF               	movwf	207,c	;volatile
  5495   0064BE                     
  5496                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t)timerVal;
  5497   0064BE  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5498   0064C2                     
  5499                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  5500   0064C2  80CD               	bsf	205,0,c	;volatile
  5501                           
  5502                           ;mcc_generated_files/tmr1.c: 127:     }
  5503   0064C4  EF68  F032         	goto	l67
  5504   0064C8                     l2718:
  5505                           
  5506                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  5507   0064C8  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  5508   0064CA  6ECF               	movwf	207,c	;volatile
  5509   0064CC                     
  5510                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  5511   0064CC  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  5512   0064D0                     l67:
  5513   0064D0  0012               	return		;funcret
  5514   0064D2                     __end_of_TMR1_WriteTimer:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _TMR1_HasOverflowOccured *****************
  5518 ;; Defined at:
  5519 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      _Bool 
  5526 ;; Registers used:
  5527 ;;		wreg
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5533 ;;      Params:         0       0       0       0       0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0
  5536 ;;      Totals:         0       0       0       0       0       0       0
  5537 ;;Total ram usage:        0 bytes
  5538 ;; Hardware stack levels used: 1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		_main
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text20
  5547   0063E4                     __ptext20:
  5548                           	callstack 0
  5549   0063E4                     _TMR1_HasOverflowOccured:
  5550                           	callstack 30
  5551   0063E4                     
  5552                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
  5553   0063E4  B09E               	btfsc	158,0,c	;volatile
  5554   0063E6  EFF7  F031         	goto	u1721
  5555   0063EA  EFFA  F031         	goto	u1720
  5556   0063EE                     u1721:
  5557   0063EE  0E01               	movlw	1
  5558   0063F0  EFFB  F031         	goto	u1726
  5559   0063F4                     u1720:
  5560   0063F4  0E00               	movlw	0
  5561   0063F6                     u1726:
  5562   0063F6  0012               	return		;funcret
  5563   0063F8                     __end_of_TMR1_HasOverflowOccured:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _SYSTEM_Initialize *****************
  5567 ;; Defined at:
  5568 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5582 ;;      Params:         0       0       0       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 2
  5589 ;; This function calls:
  5590 ;;		_EPWM2_Initialize
  5591 ;;		_EUSART1_Initialize
  5592 ;;		_EUSART2_Initialize
  5593 ;;		_OSCILLATOR_Initialize
  5594 ;;		_PIN_MANAGER_Initialize
  5595 ;;		_TMR1_Initialize
  5596 ;;		_TMR2_Initialize
  5597 ;; This function is called by:
  5598 ;;		_main
  5599 ;; This function uses a non-reentrant model
  5600 ;;
  5601                           
  5602                           	psect	text21
  5603   006446                     __ptext21:
  5604                           	callstack 0
  5605   006446                     _SYSTEM_Initialize:
  5606                           	callstack 28
  5607   006446                     
  5608                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5609   006446  ECA7  F032         	call	_PIN_MANAGER_Initialize	;wreg free
  5610                           
  5611                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5612   00644A  EC07  F032         	call	_OSCILLATOR_Initialize	;wreg free
  5613                           
  5614                           ;mcc_generated_files/mcc.c: 55:     EPWM2_Initialize();
  5615   00644E  EC32  F032         	call	_EPWM2_Initialize	;wreg free
  5616                           
  5617                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  5618   006452  ECD6  F031         	call	_TMR2_Initialize	;wreg free
  5619                           
  5620                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  5621   006456  EC15  F032         	call	_TMR1_Initialize	;wreg free
  5622   00645A                     
  5623                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  5624   00645A  EC06  F033         	call	_EUSART1_Initialize	;wreg free
  5625   00645E                     
  5626                           ;mcc_generated_files/mcc.c: 59:     EUSART2_Initialize();
  5627   00645E  EC26  F033         	call	_EUSART2_Initialize	;wreg free
  5628   006462  0012               	return		;funcret
  5629   006464                     __end_of_SYSTEM_Initialize:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function _TMR2_Initialize *****************
  5633 ;; Defined at:
  5634 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5648 ;;      Params:         0       0       0       0       0       0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_SYSTEM_Initialize
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text22
  5662   0063AC                     __ptext22:
  5663                           	callstack 0
  5664   0063AC                     _TMR2_Initialize:
  5665                           	callstack 29
  5666   0063AC                     
  5667                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x67;
  5668   0063AC  0E67               	movlw	103
  5669   0063AE  6EBB               	movwf	187,c	;volatile
  5670                           
  5671                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  5672   0063B0  0E00               	movlw	0
  5673   0063B2  6EBC               	movwf	188,c	;volatile
  5674   0063B4                     
  5675                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  5676   0063B4  929E               	bcf	158,1,c	;volatile
  5677                           
  5678                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  5679   0063B6  0E05               	movlw	5
  5680   0063B8  6EBA               	movwf	186,c	;volatile
  5681   0063BA  0012               	return		;funcret
  5682   0063BC                     __end_of_TMR2_Initialize:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function _TMR1_Initialize *****************
  5686 ;; Defined at:
  5687 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;		None
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5701 ;;      Params:         0       0       0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0
  5704 ;;      Totals:         0       0       0       0       0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_SYSTEM_Initialize
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text23
  5715   00642A                     __ptext23:
  5716                           	callstack 0
  5717   00642A                     _TMR1_Initialize:
  5718                           	callstack 29
  5719   00642A                     
  5720                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5721   00642A  0E00               	movlw	0
  5722   00642C  6ECC               	movwf	204,c	;volatile
  5723                           
  5724                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  5725   00642E  0E00               	movlw	0
  5726   006430  6ECF               	movwf	207,c	;volatile
  5727                           
  5728                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  5729   006432  0E00               	movlw	0
  5730   006434  6ECE               	movwf	206,c	;volatile
  5731   006436                     
  5732                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  5733   006436  CFCE F070          	movff	4046,_timer1ReloadVal	;volatile
  5734   00643A  CFCF F071          	movff	4047,_timer1ReloadVal+1	;volatile
  5735   00643E                     
  5736                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  5737   00643E  909E               	bcf	158,0,c	;volatile
  5738                           
  5739                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  5740   006440  0E01               	movlw	1
  5741   006442  6ECD               	movwf	205,c	;volatile
  5742   006444  0012               	return		;funcret
  5743   006446                     __end_of_TMR1_Initialize:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _PIN_MANAGER_Initialize *****************
  5747 ;; Defined at:
  5748 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      void 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5762 ;;      Params:         0       0       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; This function calls:
  5769 ;;		Nothing
  5770 ;; This function is called by:
  5771 ;;		_SYSTEM_Initialize
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text24
  5776   00654E                     __ptext24:
  5777                           	callstack 0
  5778   00654E                     _PIN_MANAGER_Initialize:
  5779                           	callstack 29
  5780   00654E                     
  5781                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5782   00654E  0E00               	movlw	0
  5783   006550  6E89               	movwf	137,c	;volatile
  5784                           
  5785                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5786   006552  0E00               	movlw	0
  5787   006554  6E8A               	movwf	138,c	;volatile
  5788                           
  5789                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5790   006556  0E00               	movlw	0
  5791   006558  6E8B               	movwf	139,c	;volatile
  5792   00655A                     
  5793                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5794   00655A  6892               	setf	146,c	;volatile
  5795                           
  5796                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  5797   00655C  0EBF               	movlw	191
  5798   00655E  6E93               	movwf	147,c	;volatile
  5799                           
  5800                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  5801   006560  0EBD               	movlw	189
  5802   006562  6E94               	movwf	148,c	;volatile
  5803                           
  5804                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5805   006564  0E3C               	movlw	60
  5806   006566  010F               	movlb	15	; () banked
  5807   006568  6F3A               	movwf	58,b	;volatile
  5808                           
  5809                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5810   00656A  0E3F               	movlw	63
  5811   00656C  6F39               	movwf	57,b	;volatile
  5812                           
  5813                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5814   00656E  0E2F               	movlw	47
  5815   006570  6F38               	movwf	56,b	;volatile
  5816                           
  5817                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5818   006572  0E00               	movlw	0
  5819   006574  6E61               	movwf	97,c	;volatile
  5820   006576                     
  5821                           ; BSR set to: 15
  5822                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5823   006576  8EF1               	bsf	241,7,c	;volatile
  5824   006578                     
  5825                           ; BSR set to: 15
  5826   006578  0012               	return		;funcret
  5827   00657A                     __end_of_PIN_MANAGER_Initialize:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function _OSCILLATOR_Initialize *****************
  5831 ;; Defined at:
  5832 ;;		line 62 in file "mcc_generated_files/mcc.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg, status,2
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5846 ;;      Params:         0       0       0       0       0       0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_SYSTEM_Initialize
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text25
  5860   00640E                     __ptext25:
  5861                           	callstack 0
  5862   00640E                     _OSCILLATOR_Initialize:
  5863                           	callstack 29
  5864   00640E                     
  5865                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  5866   00640E  0E70               	movlw	112
  5867   006410  6ED3               	movwf	211,c	;volatile
  5868                           
  5869                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  5870   006412  0E04               	movlw	4
  5871   006414  6ED2               	movwf	210,c	;volatile
  5872                           
  5873                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
  5874   006416  0E40               	movlw	64
  5875   006418  6E9B               	movwf	155,c	;volatile
  5876   00641A                     l339:
  5877                           
  5878                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  5879   00641A  AED2               	btfss	4050,7,c	;volatile
  5880   00641C  EF12  F032         	goto	u1691
  5881   006420  EF14  F032         	goto	u1690
  5882   006424                     u1691:
  5883   006424  EF0D  F032         	goto	l339
  5884   006428                     u1690:
  5885   006428  0012               	return		;funcret
  5886   00642A                     __end_of_OSCILLATOR_Initialize:
  5887                           	callstack 0
  5888                           
  5889 ;; *************** function _EUSART2_Initialize *****************
  5890 ;; Defined at:
  5891 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;		None
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;		None
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  1    wreg      void 
  5898 ;; Registers used:
  5899 ;;		wreg, status,2, status,0, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 0/0
  5902 ;;		On exit  : 0/0
  5903 ;;		Unchanged: 0/0
  5904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5905 ;;      Params:         0       0       0       0       0       0       0
  5906 ;;      Locals:         0       0       0       0       0       0       0
  5907 ;;      Temps:          0       0       0       0       0       0       0
  5908 ;;      Totals:         0       0       0       0       0       0       0
  5909 ;;Total ram usage:        0 bytes
  5910 ;; Hardware stack levels used: 1
  5911 ;; Hardware stack levels required when called: 1
  5912 ;; This function calls:
  5913 ;;		_EUSART2_SetErrorHandler
  5914 ;;		_EUSART2_SetFramingErrorHandler
  5915 ;;		_EUSART2_SetOverrunErrorHandler
  5916 ;; This function is called by:
  5917 ;;		_SYSTEM_Initialize
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text26
  5922   00664C                     __ptext26:
  5923                           	callstack 0
  5924   00664C                     _EUSART2_Initialize:
  5925                           	callstack 28
  5926   00664C                     
  5927                           ;mcc_generated_files/eusart2.c: 71:     BAUDCON2 = 0x08;
  5928   00664C  0E08               	movlw	8
  5929   00664E  6E70               	movwf	112,c	;volatile
  5930                           
  5931                           ;mcc_generated_files/eusart2.c: 74:     RCSTA2 = 0x90;
  5932   006650  0E90               	movlw	144
  5933   006652  6E71               	movwf	113,c	;volatile
  5934                           
  5935                           ;mcc_generated_files/eusart2.c: 77:     TXSTA2 = 0x24;
  5936   006654  0E24               	movlw	36
  5937   006656  6E72               	movwf	114,c	;volatile
  5938                           
  5939                           ;mcc_generated_files/eusart2.c: 80:     SPBRG2 = 0x14;
  5940   006658  0E14               	movlw	20
  5941   00665A  6E75               	movwf	117,c	;volatile
  5942                           
  5943                           ;mcc_generated_files/eusart2.c: 83:     SPBRGH2 = 0x34;
  5944   00665C  0E34               	movlw	52
  5945   00665E  6E76               	movwf	118,c	;volatile
  5946   006660                     
  5947                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  5948   006660  0E00               	movlw	0
  5949   006662  6E01               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  5950   006664  0E00               	movlw	0
  5951   006666  6E02               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  5952   006668  ECC2  F031         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  5953   00666C                     
  5954                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  5955   00666C  0E00               	movlw	0
  5956   00666E  6E01               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  5957   006670  0E00               	movlw	0
  5958   006672  6E02               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5959   006674  ECC7  F031         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  5960   006678                     
  5961                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  5962   006678  0E00               	movlw	0
  5963   00667A  6E01               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  5964   00667C  0E00               	movlw	0
  5965   00667E  6E02               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  5966   006680  ECBD  F031         	call	_EUSART2_SetErrorHandler	;wreg free
  5967   006684                     
  5968                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  5969   006684  0E00               	movlw	0
  5970   006686  0100               	movlb	0	; () banked
  5971   006688  6F74               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  5972   00668A                     
  5973                           ; BSR set to: 0
  5974   00668A  0012               	return		;funcret
  5975   00668C                     __end_of_EUSART2_Initialize:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  5979 ;; Defined at:
  5980 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  5983 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5995 ;;      Params:         2       0       0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0
  5998 ;;      Totals:         2       0       0       0       0       0       0
  5999 ;;Total ram usage:        2 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_EUSART2_Initialize
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text27
  6009   00638E                     __ptext27:
  6010                           	callstack 0
  6011   00638E                     _EUSART2_SetOverrunErrorHandler:
  6012                           	callstack 28
  6013   00638E                     
  6014                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  6015   00638E  C001  F06C         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  6016   006392  C002  F06D         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  6017   006396  0012               	return		;funcret
  6018   006398                     __end_of_EUSART2_SetOverrunErrorHandler:
  6019                           	callstack 0
  6020                           
  6021 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  6022 ;; Defined at:
  6023 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6026 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;		None
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		wreg, status,2, status,0
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6038 ;;      Params:         2       0       0       0       0       0       0
  6039 ;;      Locals:         0       0       0       0       0       0       0
  6040 ;;      Temps:          0       0       0       0       0       0       0
  6041 ;;      Totals:         2       0       0       0       0       0       0
  6042 ;;Total ram usage:        2 bytes
  6043 ;; Hardware stack levels used: 1
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		_EUSART2_Initialize
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text28
  6052   006384                     __ptext28:
  6053                           	callstack 0
  6054   006384                     _EUSART2_SetFramingErrorHandler:
  6055                           	callstack 28
  6056   006384                     
  6057                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  6058   006384  C001  F06E         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  6059   006388  C002  F06F         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  6060   00638C  0012               	return		;funcret
  6061   00638E                     __end_of_EUSART2_SetFramingErrorHandler:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _EUSART2_SetErrorHandler *****************
  6065 ;; Defined at:
  6066 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6069 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2, status,0
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6081 ;;      Params:         2       0       0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0
  6084 ;;      Totals:         2       0       0       0       0       0       0
  6085 ;;Total ram usage:        2 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_EUSART2_Initialize
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text29
  6095   00637A                     __ptext29:
  6096                           	callstack 0
  6097   00637A                     _EUSART2_SetErrorHandler:
  6098                           	callstack 28
  6099   00637A                     
  6100                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  6101   00637A  C001  F06A         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  6102   00637E  C002  F06B         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  6103   006382  0012               	return		;funcret
  6104   006384                     __end_of_EUSART2_SetErrorHandler:
  6105                           	callstack 0
  6106                           
  6107 ;; *************** function _EUSART1_Initialize *****************
  6108 ;; Defined at:
  6109 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;		None
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, cstack
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6123 ;;      Params:         0       0       0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0       0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0
  6126 ;;      Totals:         0       0       0       0       0       0       0
  6127 ;;Total ram usage:        0 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 1
  6130 ;; This function calls:
  6131 ;;		_EUSART1_SetErrorHandler
  6132 ;;		_EUSART1_SetFramingErrorHandler
  6133 ;;		_EUSART1_SetOverrunErrorHandler
  6134 ;; This function is called by:
  6135 ;;		_SYSTEM_Initialize
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text30
  6140   00660C                     __ptext30:
  6141                           	callstack 0
  6142   00660C                     _EUSART1_Initialize:
  6143                           	callstack 28
  6144   00660C                     
  6145                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6146   00660C  0E08               	movlw	8
  6147   00660E  6EB8               	movwf	184,c	;volatile
  6148                           
  6149                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6150   006610  0E90               	movlw	144
  6151   006612  6EAB               	movwf	171,c	;volatile
  6152                           
  6153                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6154   006614  0E24               	movlw	36
  6155   006616  6EAC               	movwf	172,c	;volatile
  6156                           
  6157                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  6158   006618  0E82               	movlw	130
  6159   00661A  6EAF               	movwf	175,c	;volatile
  6160                           
  6161                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  6162   00661C  0E06               	movlw	6
  6163   00661E  6EB0               	movwf	176,c	;volatile
  6164   006620                     
  6165                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6166   006620  0E00               	movlw	0
  6167   006622  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6168   006624  0E00               	movlw	0
  6169   006626  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6170   006628  ECB3  F031         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6171   00662C                     
  6172                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6173   00662C  0E00               	movlw	0
  6174   00662E  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6175   006630  0E00               	movlw	0
  6176   006632  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6177   006634  ECB8  F031         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6178   006638                     
  6179                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6180   006638  0E00               	movlw	0
  6181   00663A  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6182   00663C  0E00               	movlw	0
  6183   00663E  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6184   006640  ECAE  F031         	call	_EUSART1_SetErrorHandler	;wreg free
  6185   006644                     
  6186                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6187   006644  0E00               	movlw	0
  6188   006646  0100               	movlb	0	; () banked
  6189   006648  6F73               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6190   00664A                     
  6191                           ; BSR set to: 0
  6192   00664A  0012               	return		;funcret
  6193   00664C                     __end_of_EUSART1_Initialize:
  6194                           	callstack 0
  6195                           
  6196 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6197 ;; Defined at:
  6198 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6201 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6213 ;;      Params:         2       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0       0       0
  6216 ;;      Totals:         2       0       0       0       0       0       0
  6217 ;;Total ram usage:        2 bytes
  6218 ;; Hardware stack levels used: 1
  6219 ;; This function calls:
  6220 ;;		Nothing
  6221 ;; This function is called by:
  6222 ;;		_EUSART1_Initialize
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225                           
  6226                           	psect	text31
  6227   006370                     __ptext31:
  6228                           	callstack 0
  6229   006370                     _EUSART1_SetOverrunErrorHandler:
  6230                           	callstack 28
  6231   006370                     
  6232                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6233   006370  C001  F066         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6234   006374  C002  F067         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6235   006378  0012               	return		;funcret
  6236   00637A                     __end_of_EUSART1_SetOverrunErrorHandler:
  6237                           	callstack 0
  6238                           
  6239 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6240 ;; Defined at:
  6241 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6244 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6245 ;; Auto vars:     Size  Location     Type
  6246 ;;		None
  6247 ;; Return value:  Size  Location     Type
  6248 ;;                  1    wreg      void 
  6249 ;; Registers used:
  6250 ;;		wreg, status,2, status,0
  6251 ;; Tracked objects:
  6252 ;;		On entry : 0/0
  6253 ;;		On exit  : 0/0
  6254 ;;		Unchanged: 0/0
  6255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6256 ;;      Params:         2       0       0       0       0       0       0
  6257 ;;      Locals:         0       0       0       0       0       0       0
  6258 ;;      Temps:          0       0       0       0       0       0       0
  6259 ;;      Totals:         2       0       0       0       0       0       0
  6260 ;;Total ram usage:        2 bytes
  6261 ;; Hardware stack levels used: 1
  6262 ;; This function calls:
  6263 ;;		Nothing
  6264 ;; This function is called by:
  6265 ;;		_EUSART1_Initialize
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text32
  6270   006366                     __ptext32:
  6271                           	callstack 0
  6272   006366                     _EUSART1_SetFramingErrorHandler:
  6273                           	callstack 28
  6274   006366                     
  6275                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6276   006366  C001  F068         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6277   00636A  C002  F069         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6278   00636E  0012               	return		;funcret
  6279   006370                     __end_of_EUSART1_SetFramingErrorHandler:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _EUSART1_SetErrorHandler *****************
  6283 ;; Defined at:
  6284 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  6287 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;		None
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6299 ;;      Params:         2       0       0       0       0       0       0
  6300 ;;      Locals:         0       0       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0
  6302 ;;      Totals:         2       0       0       0       0       0       0
  6303 ;;Total ram usage:        2 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_EUSART1_Initialize
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text33
  6313   00635C                     __ptext33:
  6314                           	callstack 0
  6315   00635C                     _EUSART1_SetErrorHandler:
  6316                           	callstack 28
  6317   00635C                     
  6318                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  6319   00635C  C001  F064         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  6320   006360  C002  F065         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  6321   006364  0012               	return		;funcret
  6322   006366                     __end_of_EUSART1_SetErrorHandler:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _EPWM2_Initialize *****************
  6326 ;; Defined at:
  6327 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6341 ;;      Params:         0       0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_SYSTEM_Initialize
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text34
  6355   006464                     __ptext34:
  6356                           	callstack 0
  6357   006464                     _EPWM2_Initialize:
  6358                           	callstack 29
  6359   006464                     
  6360                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x0C;
  6361   006464  0E0C               	movlw	12
  6362   006466  6E66               	movwf	102,c	;volatile
  6363                           
  6364                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  6365   006468  0E00               	movlw	0
  6366   00646A  6E64               	movwf	100,c	;volatile
  6367                           
  6368                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  6369   00646C  0E80               	movlw	128
  6370   00646E  6E65               	movwf	101,c	;volatile
  6371                           
  6372                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  6373   006470  0E01               	movlw	1
  6374   006472  6E63               	movwf	99,c	;volatile
  6375                           
  6376                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  6377   006474  0E00               	movlw	0
  6378   006476  6E68               	movwf	104,c	;volatile
  6379                           
  6380                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x00;
  6381   006478  0E00               	movlw	0
  6382   00647A  6E67               	movwf	103,c	;volatile
  6383                           
  6384                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  6385   00647C  0EE7               	movlw	-25
  6386   00647E  010F               	movlb	15	; () banked
  6387   006480  1749               	andwf	73,f,b	;volatile
  6388   006482                     
  6389                           ; BSR set to: 15
  6390   006482  0012               	return		;funcret
  6391   006484                     __end_of_EPWM2_Initialize:
  6392                           	callstack 0
  6393                           
  6394 ;; *************** function _EUSART2_is_rx_ready *****************
  6395 ;; Defined at:
  6396 ;;		line 99 in file "mcc_generated_files/eusart2.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;		None
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      _Bool 
  6403 ;; Registers used:
  6404 ;;		wreg
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6410 ;;      Params:         0       0       0       0       0       0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0
  6413 ;;      Totals:         0       0       0       0       0       0       0
  6414 ;;Total ram usage:        0 bytes
  6415 ;; Hardware stack levels used: 1
  6416 ;; This function calls:
  6417 ;;		Nothing
  6418 ;; This function is called by:
  6419 ;;		_main
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text35
  6424   0063D0                     __ptext35:
  6425                           	callstack 0
  6426   0063D0                     _EUSART2_is_rx_ready:
  6427                           	callstack 30
  6428   0063D0                     
  6429                           ;mcc_generated_files/eusart2.c: 101:     return (_Bool)(PIR3bits.RC2IF);
  6430   0063D0  BAA4               	btfsc	164,5,c	;volatile
  6431   0063D2  EFED  F031         	goto	u1731
  6432   0063D6  EFF0  F031         	goto	u1730
  6433   0063DA                     u1731:
  6434   0063DA  0E01               	movlw	1
  6435   0063DC  EFF1  F031         	goto	u1736
  6436   0063E0                     u1730:
  6437   0063E0  0E00               	movlw	0
  6438   0063E2                     u1736:
  6439   0063E2  0012               	return		;funcret
  6440   0063E4                     __end_of_EUSART2_is_rx_ready:
  6441                           	callstack 0
  6442                           
  6443 ;; *************** function _EUSART2_Read *****************
  6444 ;; Defined at:
  6445 ;;		line 113 in file "mcc_generated_files/eusart2.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  1    wreg      unsigned char 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6459 ;;      Params:         0       0       0       0       0       0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0
  6462 ;;      Totals:         0       0       0       0       0       0       0
  6463 ;;Total ram usage:        0 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_main
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text36
  6473   006524                     __ptext36:
  6474                           	callstack 0
  6475   006524                     _EUSART2_Read:
  6476                           	callstack 30
  6477   006524                     l159:
  6478                           
  6479                           ;mcc_generated_files/eusart2.c: 115:     while(!PIR3bits.RC2IF)
  6480   006524  AAA4               	btfss	164,5,c	;volatile
  6481   006526  EF97  F032         	goto	u1741
  6482   00652A  EF99  F032         	goto	u1740
  6483   00652E                     u1741:
  6484   00652E  EF92  F032         	goto	l159
  6485   006532                     u1740:
  6486   006532                     
  6487                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  6488   006532  0E00               	movlw	0
  6489   006534  0100               	movlb	0	; () banked
  6490   006536  6F74               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  6491   006538                     
  6492                           ; BSR set to: 0
  6493                           ;mcc_generated_files/eusart2.c: 121:     if(1 == RCSTA2bits.OERR)
  6494   006538  A271               	btfss	113,1,c	;volatile
  6495   00653A  EFA1  F032         	goto	u1751
  6496   00653E  EFA3  F032         	goto	u1750
  6497   006542                     u1751:
  6498   006542  EFA5  F032         	goto	l2740
  6499   006546                     u1750:
  6500   006546                     
  6501                           ; BSR set to: 0
  6502                           ;mcc_generated_files/eusart2.c: 122:     {;mcc_generated_files/eusart2.c: 125:         R
      +                          CSTA2bits.CREN = 0;
  6503   006546  9871               	bcf	113,4,c	;volatile
  6504                           
  6505                           ;mcc_generated_files/eusart2.c: 126:         RCSTA2bits.CREN = 1;
  6506   006548  8871               	bsf	113,4,c	;volatile
  6507   00654A                     l2740:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;mcc_generated_files/eusart2.c: 129:     return RCREG2;;	Return value of _EUSART2_Read i
      +                          s never used
  6511   00654A  5074               	movf	116,w,c	;volatile
  6512   00654C                     
  6513                           ; BSR set to: 0
  6514   00654C  0012               	return		;funcret
  6515   00654E                     __end_of_EUSART2_Read:
  6516                           	callstack 0
  6517                           
  6518 ;; *************** function _EUSART1_is_rx_ready *****************
  6519 ;; Defined at:
  6520 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;		None
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;		None
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  1    wreg      _Bool 
  6527 ;; Registers used:
  6528 ;;		wreg
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6534 ;;      Params:         0       0       0       0       0       0       0
  6535 ;;      Locals:         0       0       0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0
  6537 ;;      Totals:         0       0       0       0       0       0       0
  6538 ;;Total ram usage:        0 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text37
  6548   0063BC                     __ptext37:
  6549                           	callstack 0
  6550   0063BC                     _EUSART1_is_rx_ready:
  6551                           	callstack 30
  6552   0063BC                     
  6553                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  6554   0063BC  BA9E               	btfsc	158,5,c	;volatile
  6555   0063BE  EFE3  F031         	goto	u1761
  6556   0063C2  EFE6  F031         	goto	u1760
  6557   0063C6                     u1761:
  6558   0063C6  0E01               	movlw	1
  6559   0063C8  EFE7  F031         	goto	u1766
  6560   0063CC                     u1760:
  6561   0063CC  0E00               	movlw	0
  6562   0063CE                     u1766:
  6563   0063CE  0012               	return		;funcret
  6564   0063D0                     __end_of_EUSART1_is_rx_ready:
  6565                           	callstack 0
  6566                           
  6567 ;; *************** function _EUSART1_Read *****************
  6568 ;; Defined at:
  6569 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;		None
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  1    wreg      unsigned char 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6583 ;;      Params:         0       0       0       0       0       0       0
  6584 ;;      Locals:         0       0       0       0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0
  6586 ;;      Totals:         0       0       0       0       0       0       0
  6587 ;;Total ram usage:        0 bytes
  6588 ;; Hardware stack levels used: 1
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_main
  6593 ;;		_getch
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text38
  6598   0064FA                     __ptext38:
  6599                           	callstack 0
  6600   0064FA                     _EUSART1_Read:
  6601                           	callstack 30
  6602   0064FA                     l247:
  6603                           
  6604                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  6605   0064FA  AA9E               	btfss	158,5,c	;volatile
  6606   0064FC  EF82  F032         	goto	u1771
  6607   006500  EF84  F032         	goto	u1770
  6608   006504                     u1771:
  6609   006504  EF7D  F032         	goto	l247
  6610   006508                     u1770:
  6611   006508                     
  6612                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  6613   006508  0E00               	movlw	0
  6614   00650A  0100               	movlb	0	; () banked
  6615   00650C  6F73               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6616   00650E                     
  6617                           ; BSR set to: 0
  6618                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  6619   00650E  A2AB               	btfss	171,1,c	;volatile
  6620   006510  EF8C  F032         	goto	u1781
  6621   006514  EF8E  F032         	goto	u1780
  6622   006518                     u1781:
  6623   006518  EF90  F032         	goto	l2756
  6624   00651C                     u1780:
  6625   00651C                     
  6626                           ; BSR set to: 0
  6627                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  6628   00651C  98AB               	bcf	171,4,c	;volatile
  6629                           
  6630                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  6631   00651E  88AB               	bsf	171,4,c	;volatile
  6632   006520                     l2756:
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  6636   006520  50AE               	movf	174,w,c	;volatile
  6637   006522                     
  6638                           ; BSR set to: 0
  6639   006522  0012               	return		;funcret
  6640   006524                     __end_of_EUSART1_Read:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _EPWM2_LoadDutyValue *****************
  6644 ;; Defined at:
  6645 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  dutyValue       2    0[COMRAM] unsigned short 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6659 ;;      Params:         2       0       0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0
  6661 ;;      Temps:          2       0       0       0       0       0       0
  6662 ;;      Totals:         4       0       0       0       0       0       0
  6663 ;;Total ram usage:        4 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; This function calls:
  6666 ;;		Nothing
  6667 ;; This function is called by:
  6668 ;;		_main
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text39
  6673   0065A6                     __ptext39:
  6674                           	callstack 0
  6675   0065A6                     _EPWM2_LoadDutyValue:
  6676                           	callstack 30
  6677   0065A6                     
  6678                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  6679   0065A6  C001  F003         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6680   0065AA  C002  F004         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  6681   0065AE  90D8               	bcf	status,0,c
  6682   0065B0  3204               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6683   0065B2  3203               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6684   0065B4  90D8               	bcf	status,0,c
  6685   0065B6  3204               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  6686   0065B8  3203               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  6687   0065BA  5003               	movf	??_EPWM2_LoadDutyValue^0,w,c
  6688   0065BC  6E67               	movwf	103,c	;volatile
  6689                           
  6690                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6691   0065BE  C001  F003         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  6692   0065C2  0E03               	movlw	3
  6693   0065C4  1603               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6694   0065C6  3A03               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  6695   0065C8  0EF0               	movlw	240
  6696   0065CA  1603               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  6697   0065CC  5066               	movf	102,w,c	;volatile
  6698   0065CE  0BCF               	andlw	207
  6699   0065D0  1003               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  6700   0065D2  6E66               	movwf	102,c	;volatile
  6701   0065D4  0012               	return		;funcret
  6702   0065D6                     __end_of_EPWM2_LoadDutyValue:
  6703                           	callstack 0
  6704                           
  6705                           	psect	rparam
  6706   000000                     
  6707                           	psect	idloc
  6708                           
  6709                           ;Config register IDLOC0 @ 0x200000
  6710                           ;	unspecified, using default values
  6711   200000                     	org	2097152
  6712   200000  FF                 	db	255
  6713                           
  6714                           ;Config register IDLOC1 @ 0x200001
  6715                           ;	unspecified, using default values
  6716   200001                     	org	2097153
  6717   200001  FF                 	db	255
  6718                           
  6719                           ;Config register IDLOC2 @ 0x200002
  6720                           ;	unspecified, using default values
  6721   200002                     	org	2097154
  6722   200002  FF                 	db	255
  6723                           
  6724                           ;Config register IDLOC3 @ 0x200003
  6725                           ;	unspecified, using default values
  6726   200003                     	org	2097155
  6727   200003  FF                 	db	255
  6728                           
  6729                           ;Config register IDLOC4 @ 0x200004
  6730                           ;	unspecified, using default values
  6731   200004                     	org	2097156
  6732   200004  FF                 	db	255
  6733                           
  6734                           ;Config register IDLOC5 @ 0x200005
  6735                           ;	unspecified, using default values
  6736   200005                     	org	2097157
  6737   200005  FF                 	db	255
  6738                           
  6739                           ;Config register IDLOC6 @ 0x200006
  6740                           ;	unspecified, using default values
  6741   200006                     	org	2097158
  6742   200006  FF                 	db	255
  6743                           
  6744                           ;Config register IDLOC7 @ 0x200007
  6745                           ;	unspecified, using default values
  6746   200007                     	org	2097159
  6747   200007  FF                 	db	255
  6748                           
  6749                           	psect	config
  6750                           
  6751                           ; Padding undefined space
  6752   300000                     	org	3145728
  6753   300000  FF                 	db	255
  6754                           
  6755                           ;Config register CONFIG1H @ 0x300001
  6756                           ;	Oscillator Selection bits
  6757                           ;	FOSC = INTIO67, Internal oscillator block
  6758                           ;	4X PLL Enable
  6759                           ;	PLLCFG = OFF, Oscillator used directly
  6760                           ;	Primary clock enable bit
  6761                           ;	PRICLKEN = ON, Primary clock enabled
  6762                           ;	Fail-Safe Clock Monitor Enable bit
  6763                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6764                           ;	Internal/External Oscillator Switchover bit
  6765                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6766   300001                     	org	3145729
  6767   300001  28                 	db	40
  6768                           
  6769                           ;Config register CONFIG2L @ 0x300002
  6770                           ;	Power-up Timer Enable bit
  6771                           ;	PWRTEN = OFF, Power up timer disabled
  6772                           ;	Brown-out Reset Enable bits
  6773                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6774                           ;	Brown Out Reset Voltage bits
  6775                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6776   300002                     	org	3145730
  6777   300002  1F                 	db	31
  6778                           
  6779                           ;Config register CONFIG2H @ 0x300003
  6780                           ;	Watchdog Timer Enable bits
  6781                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6782                           ;	Watchdog Timer Postscale Select bits
  6783                           ;	WDTPS = 32768, 1:32768
  6784   300003                     	org	3145731
  6785   300003  3C                 	db	60
  6786                           
  6787                           ; Padding undefined space
  6788   300004                     	org	3145732
  6789   300004  FF                 	db	255
  6790                           
  6791                           ;Config register CONFIG3H @ 0x300005
  6792                           ;	CCP2 MUX bit
  6793                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6794                           ;	PORTB A/D Enable bit
  6795                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6796                           ;	P3A/CCP3 Mux bit
  6797                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6798                           ;	HFINTOSC Fast Start-up
  6799                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6800                           ;	Timer3 Clock input mux bit
  6801                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6802                           ;	ECCP2 B output mux bit
  6803                           ;	P2BMX = PORTB5, P2B is on RB5
  6804                           ;	MCLR Pin Enable bit
  6805                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6806   300005                     	org	3145733
  6807   300005  BF                 	db	191
  6808                           
  6809                           ;Config register CONFIG4L @ 0x300006
  6810                           ;	Stack Full/Underflow Reset Enable bit
  6811                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6812                           ;	Single-Supply ICSP Enable bit
  6813                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6814                           ;	Extended Instruction Set Enable bit
  6815                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6816                           ;	Background Debug
  6817                           ;	DEBUG = OFF, Disabled
  6818   300006                     	org	3145734
  6819   300006  85                 	db	133
  6820                           
  6821                           ; Padding undefined space
  6822   300007                     	org	3145735
  6823   300007  FF                 	db	255
  6824                           
  6825                           ;Config register CONFIG5L @ 0x300008
  6826                           ;	Code Protection Block 0
  6827                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6828                           ;	Code Protection Block 1
  6829                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6830                           ;	Code Protection Block 2
  6831                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6832                           ;	Code Protection Block 3
  6833                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6834   300008                     	org	3145736
  6835   300008  0F                 	db	15
  6836                           
  6837                           ;Config register CONFIG5H @ 0x300009
  6838                           ;	Boot Block Code Protection bit
  6839                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6840                           ;	Data EEPROM Code Protection bit
  6841                           ;	CPD = OFF, Data EEPROM not code-protected
  6842   300009                     	org	3145737
  6843   300009  C0                 	db	192
  6844                           
  6845                           ;Config register CONFIG6L @ 0x30000A
  6846                           ;	Write Protection Block 0
  6847                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6848                           ;	Write Protection Block 1
  6849                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6850                           ;	Write Protection Block 2
  6851                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6852                           ;	Write Protection Block 3
  6853                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6854   30000A                     	org	3145738
  6855   30000A  0F                 	db	15
  6856                           
  6857                           ;Config register CONFIG6H @ 0x30000B
  6858                           ;	Configuration Register Write Protection bit
  6859                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6860                           ;	Boot Block Write Protection bit
  6861                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6862                           ;	Data EEPROM Write Protection bit
  6863                           ;	WRTD = OFF, Data EEPROM not write-protected
  6864   30000B                     	org	3145739
  6865   30000B  E0                 	db	224
  6866                           
  6867                           ;Config register CONFIG7L @ 0x30000C
  6868                           ;	Table Read Protection Block 0
  6869                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6870                           ;	Table Read Protection Block 1
  6871                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6872                           ;	Table Read Protection Block 2
  6873                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6874                           ;	Table Read Protection Block 3
  6875                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6876   30000C                     	org	3145740
  6877   30000C  0F                 	db	15
  6878                           
  6879                           ;Config register CONFIG7H @ 0x30000D
  6880                           ;	Boot Block Table Read Protection bit
  6881                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6882   30000D                     	org	3145741
  6883   30000D  40                 	db	64
  6884                           tosu	equ	0xFFF
  6885                           tosh	equ	0xFFE
  6886                           tosl	equ	0xFFD
  6887                           stkptr	equ	0xFFC
  6888                           pclatu	equ	0xFFB
  6889                           pclath	equ	0xFFA
  6890                           pcl	equ	0xFF9
  6891                           tblptru	equ	0xFF8
  6892                           tblptrh	equ	0xFF7
  6893                           tblptrl	equ	0xFF6
  6894                           tablat	equ	0xFF5
  6895                           prodh	equ	0xFF4
  6896                           prodl	equ	0xFF3
  6897                           indf0	equ	0xFEF
  6898                           postinc0	equ	0xFEE
  6899                           postdec0	equ	0xFED
  6900                           preinc0	equ	0xFEC
  6901                           plusw0	equ	0xFEB
  6902                           fsr0h	equ	0xFEA
  6903                           fsr0l	equ	0xFE9
  6904                           wreg	equ	0xFE8
  6905                           indf1	equ	0xFE7
  6906                           postinc1	equ	0xFE6
  6907                           postdec1	equ	0xFE5
  6908                           preinc1	equ	0xFE4
  6909                           plusw1	equ	0xFE3
  6910                           fsr1h	equ	0xFE2
  6911                           fsr1l	equ	0xFE1
  6912                           bsr	equ	0xFE0
  6913                           indf2	equ	0xFDF
  6914                           postinc2	equ	0xFDE
  6915                           postdec2	equ	0xFDD
  6916                           preinc2	equ	0xFDC
  6917                           plusw2	equ	0xFDB
  6918                           fsr2h	equ	0xFDA
  6919                           fsr2l	equ	0xFD9
  6920                           status	equ	0xFD8

Data Sizes:
    Strings     868
    Constant    0
    Data        10
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     25      88
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1515$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1515$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_39(CODE[17]), STR_38(CODE[21]), STR_37(CODE[32]), STR_36(CODE[31]), 
		 -> STR_35(CODE[21]), STR_34(CODE[31]), STR_33(CODE[16]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[14]), STR_28(CODE[43]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[8]), STR_24(CODE[52]), 
		 -> STR_23(CODE[19]), STR_22(CODE[37]), STR_21(CODE[34]), STR_20(CODE[91]), 
		 -> STR_19(CODE[46]), STR_18(CODE[24]), STR_17(CODE[21]), STR_16(CODE[7]), 
		 -> STR_15(CODE[15]), STR_14(CODE[52]), STR_13(CODE[12]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_39(CODE[17]), STR_38(CODE[21]), STR_37(CODE[32]), STR_36(CODE[31]), 
		 -> STR_35(CODE[21]), STR_34(CODE[31]), STR_33(CODE[16]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[14]), STR_28(CODE[43]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[8]), STR_24(CODE[52]), 
		 -> STR_23(CODE[19]), STR_22(CODE[37]), STR_21(CODE[34]), STR_20(CODE[91]), 
		 -> STR_19(CODE[46]), STR_18(CODE[24]), STR_17(CODE[21]), STR_16(CODE[7]), 
		 -> STR_15(CODE[15]), STR_14(CODE[52]), STR_13(CODE[12]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 91
		 -> STR_39(CODE[17]), STR_38(CODE[21]), STR_37(CODE[32]), STR_36(CODE[31]), 
		 -> STR_35(CODE[21]), STR_34(CODE[31]), STR_33(CODE[16]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[14]), STR_28(CODE[43]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[8]), STR_24(CODE[52]), 
		 -> STR_23(CODE[19]), STR_22(CODE[37]), STR_21(CODE[34]), STR_20(CODE[91]), 
		 -> STR_19(CODE[46]), STR_18(CODE[24]), STR_17(CODE[21]), STR_16(CODE[7]), 
		 -> STR_15(CODE[15]), STR_14(CODE[52]), STR_13(CODE[12]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 91
		 -> STR_39(CODE[17]), STR_38(CODE[21]), STR_37(CODE[32]), STR_36(CODE[31]), 
		 -> STR_35(CODE[21]), STR_34(CODE[31]), STR_33(CODE[16]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[14]), STR_28(CODE[43]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[8]), STR_24(CODE[52]), 
		 -> STR_23(CODE[19]), STR_22(CODE[37]), STR_21(CODE[34]), STR_20(CODE[91]), 
		 -> STR_19(CODE[46]), STR_18(CODE[24]), STR_17(CODE[21]), STR_16(CODE[7]), 
		 -> STR_15(CODE[15]), STR_14(CODE[52]), STR_13(CODE[12]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1555$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 91
		 -> STR_39(CODE[17]), STR_38(CODE[21]), STR_37(CODE[32]), STR_36(CODE[31]), 
		 -> STR_35(CODE[21]), STR_34(CODE[31]), STR_33(CODE[16]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[15]), STR_29(CODE[14]), STR_28(CODE[43]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[8]), STR_24(CODE[52]), 
		 -> STR_23(CODE[19]), STR_22(CODE[37]), STR_21(CODE[34]), STR_20(CODE[91]), 
		 -> STR_19(CODE[46]), STR_18(CODE[24]), STR_17(CODE[21]), STR_16(CODE[7]), 
		 -> STR_15(CODE[15]), STR_14(CODE[52]), STR_13(CODE[12]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_7(CODE[52]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   19412
                                              8 BANK0     17    17      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   17137
                                              0 BANK0      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   14113
                                             87 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   13747
                                             64 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    3830
                                             29 COMRAM    35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4963
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3291
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1517
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1449
                                             11 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1116
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1126
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     544
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     576
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_HasOverflowOccured
   _TMR1_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _isdigit
         _xtoa
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     19      58       4       55.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhlh      1D      0       0      16        0.0%
BITBIGSFRllllhl     17      0       0      29        0.0%
BITBIGSFRllhhhh     12      0       0      26        0.0%
BITBIGSFRhl          F      0       0      18        0.0%
BITBIGSFRlllllh      E      0       0      30        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRlhhlhh      7      0       0      20        0.0%
BITBIGSFRllhhl       7      0       0      27        0.0%
BITBIGSFRllhhhh      6      0       0      24        0.0%
BITBIGSFRllhhhh      6      0       0      25        0.0%
BITBIGSFRlhhll       6      0       0      21        0.0%
BITBIGSFRlhl         5      0       0      22        0.0%
BITBIGSFRllhhhh      2      0       0      23        0.0%
BITBIGSFRhhhll       2      0       0      17        0.0%
BITBIGSFRllllhh      1      0       0      28        0.0%
BITBIGSFRlhhh        1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7      31        0.0%
DATA                 0      0      B7      33        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 26 17:26:47 2023

                                            l13 63BA                                              l53 6444  
                                            l67 64D0                                              l79 63F6  
                                            l96 6482                                              l99 65D4  
                           ___wmul@multiplicand 0003                                             l150 63E2  
                                           l230 664A                                             l142 668A  
                                           l400 78E2                                             l251 6522  
                                           l163 654C                                             l308 6578  
                                           l181 638C                                             l238 63CE  
                                           l342 6428                                             l254 63FA  
                                           l247 64FA                                             l159 6524  
                                           l263 63A0                                             l184 6396  
                                           l336 6462                                             l281 6364  
                                           l257 640C                                             l275 636E  
                                           l187 6382                                             l339 641A  
                                           l435 7BD6                                             l444 64A8  
                                           l278 6378                                             l438 7C0A  
                                           l382 76B2                                             l384 771E  
                                           l571 6C60                                             l558 6DE8  
                                           _PR2 000FBB          __end_of_EUSART2_SetFramingErrorHandler 638E  
                _EUSART2_SetFramingErrorHandler 6384                                 _timer1ReloadVal 0070  
                                           _abs 668C                                             _pad 683A  
                               _TMR2_Initialize 63AC                                             prod 000FF3  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                    _TXSTA2bits 000F72                        __end_of_EPWM2_Initialize 6484  
                                          l1122 64F8                                            l1211 6FB6  
                                          ?_abs 0013                                            l1231 764A  
                                          l1304 6838                                            l1312 670E  
                                          l1152 68C2                                            l1170 69B2  
                                          l1250 66C2                                            l1154 68E6  
                                          l2300 6D10                                            l1165 694E  
                                          l1253 66CA                                            l1149 6880  
                                          l2310 6D80                                            l2302 6D1E  
                                          l1246 67A2                                            l3110 77C4  
                                          l3120 6A4A                                            l1168 6990  
                                          l2400 6908                                            l2312 6D92  
                                          l2304 6D30                                            l1192 726C  
                                          l1176 7054                                            l3112 79D4  
                                          l1281 65A4                                            l2250 67A4  
                                          l2410 6946                                            l2402 6914  
                                          l2306 6D5E                                            l2314 6D98  
                                          l2330 6B34                                            l2322 6AFE  
                                          l1178 705C                                            l3114 7C48  
                                          l1275 6AF4                                            l1179 70A2  
                                          l2244 63FA                                            l2260 6826  
                                          l2252 67B6                                            l2412 695A  
                                          l2404 6922                                            l2316 6DA8  
                                          l2308 6D7E                                            l2340 6B9C  
                                          l2332 6B42                                            l2324 6B02  
                                          l2420 6FB8                                            l2500 6E8E  
                                          l3116 7306                                            l1197 6E22  
                                          l1278 6AFC                                            l2246 6408  
                                          l2254 67C8                                            l2414 696E  
                                          l2406 6934                                            l2318 6DC8  
                                          l2342 6BAA                                            l2350 6C10  
                                          l2334 6B62                                            l2326 6B10  
                                          l2270 66EE                                            l2430 702C  
                                          l2422 6FD8                                            l2510 6EBA  
                                          l2502 6E9A                                            l3118 7602  
                                          l1199 6E2A                                            l2272 6484  
                                          l2248 639A                                            l2256 67D2  
                                          l2416 6972                                            l2280 6C66  
                                          l2352 6C20                                            l2344 6BD8  
                                          l2336 6B80                                            l2328 6B30  
                                          l2264 66CC                                            l2360 684A  
                                          l2440 707A                                            l2432 702E  
                                          l2424 6FEC                                            l2520 6F86  
                                          l2504 6E9E                                            l2512 6F18  
                                          l2600 739E                                            l1289 6754  
                                          l2274 64A0                                            l2258 67F0  
                                          l2418 69A0                                            l2290 6CC6  
                                          l2282 6C74                                            l2354 6C40  
                                          l2346 6BF8                                            l2338 6B88  
                                          l2266 66D8                                            l2370 68A0  
                                          l2362 685E                                            l2450 70B2  
                                          l2442 708A                                            l2434 7048  
                                          l2426 6FFC                                            l2514 6F34  
                                          l2522 6F96                                            l2506 6EAE  
                                          l2610 7428                                            l2602 73BE  
                                          l2380 657A                                            l2540 6A2C  
                                          l2532 69CC                                            l2292 6CCA  
                                          l2284 6C94                                            l2348 6C0A  
                                          l2268 66EA                                            l2372 68A4  
                                          l2364 686C                                            l2452 70B8  
                                          l2460 71AA                                            l2444 7096  
                                          l2436 7064                                            l2428 701C  
                                          l2516 6F52                                            l2508 6EB4  
                                          l2620 749A                                            l2612 745A  
                                          l2700 6762                                            l2710 64B8  
                                          l2390 674A                                            l2550 6AC6  
                                          l2542 6A60                                            l2534 69E8  
                                          l2526 69B4                                            l2294 6CD6  
                                          l2286 6C98                                            l2278 6C62  
                                          l2374 68D2                                            l2366 6878  
                                          l2358 683A                                            l2462 71C4  
                                          l2470 7226                                            l2454 713A  
                                          l2446 709E                                            l2438 7074  
                                          l2518 6F6C                                            l2630 7558  
                                          l2622 74B6                                            l2606 73CC  
                                          l2702 677E                                            l2560 638E  
                                          l2720 64CC                                            l2712 64BA  
                                          l2392 674E                                            l2384 6710  
                                          l2552 6AD8                                            l2536 6A1C  
                                          l2528 69C8                                            l2296 6CF4  
                                          l2288 6CA6                                            l2376 668C  
                                          l2368 688C                                            l2472 7236  
                                          l2464 71E2                                            l2456 7140  
                                          l2448 70AA                                            l2480 6DEA  
                                          l2632 75B4                                            l2640 7610  
                                          l2624 750C                                            l2616 746E  
                                          l2608 7404                                            l2704 679A  
                                          l2800 76D8                                            l2562 637A  
                                          l2722 63E4                                            l2714 64BE  
                                          l2386 6714                                            l2538 6A24  
                                          l2298 6CFC                                            l2378 66A6  
                                          l2474 723C                                            l2466 71FC  
                                          l2458 7146                                            l2490 6E5A  
                                          l2482 6DFA                                            l2618 747E  
                                          l2570 726E                                            l2810 7732  
                                          l2802 76E6                                            l2740 654A  
                                          l2732 6524                                            l2564 6366  
                                          l2660 63B4                                            l2716 64C2  
                                          l2708 64AA                                            l2388 6728  
                                          l2548 6A96                                            l2396 68E8  
                                          l2476 724C                                            l2468 7216  
                                          l2492 6E62                                            l2484 6DFC  
                                          l2628 753C                                            l2580 72BE  
                                          l2572 7292                                            l2644 7622  
                                          l2900 7ACE                                            l2820 777E  
                                          l2812 773E                                            l2804 76F4  
                                          l2726 65A6                                            l2750 6508  
                                          l2734 6532                                            l2566 6370  
                                          l2558 6384                                            l2670 664C  
                                          l2662 642A                                            l2718 64C8  
                                          l2398 68FC                                            l2494 6E68  
                                          l2486 6E16                                            l2638 75E4  
                                          l2582 72C2                                            l2590 7314  
                                          l2574 72A0                                            l2910 7B10  
                                          l2902 7AD8                                            l2822 778E  
                                          l2830 77F2                                            l2814 774E  
                                          l2806 7702                                            l2752 650E  
                                          l2744 63BC                                            l2736 6538  
                                          l2728 63D0                                            l2568 635C  
                                          l2680 660C                                            l2672 6660  
                                          l2664 6436                                            l2760 6446  
                                          l2496 6E6E                                            l2488 6E52  
                                          l2592 7326                                            l2584 72D4  
                                          l2576 72AE                                            l2920 7B70  
                                          l2912 7B3C                                            l2904 7AEC  
                                          l2840 78C2                                            l2832 78AE  
                                          l2824 779E                                            l2816 775E  
                                          l2808 7710                                            l2754 651C  
                                          l2738 6546                                            l2682 6620  
                                          l2674 666C                                            l2690 654E  
                                          l2666 643E                                            l2658 63AC  
                                          l2762 645A                                            l2498 6E7E  
                                          l2594 734A                                            l2578 72B2  
                                          l2930 7BE4                                            l2922 7B9E  
                                          l2914 7B3E                                            l2906 7AFC  
                                          l2842 78CE                                            l2834 78BE  
                                          l2818 776E                                            l2756 6520  
                                          l2748 64FA                                            l2668 6464  
                                          l2684 662C                                            l2676 6678  
                                          l2692 655A                                            l2764 645E  
                                          l2596 7380                                            l2588 72E0  
                                          l2932 7BFA                                            l2924 7BA0  
                                          l2908 7B08                                            l2916 7B52  
                                          l2860 7962                                            l2852 78EC  
                                          l2844 78D2                                            l2828 77AE  
                                          l2940 7C34                                            l2780 7656  
                                          l2686 6638                                            l2678 6684  
                                          l2694 6576                                            l2598 7390  
                                          l2766 64D2                                            l2934 7C0E  
                                          l2926 7BB4                                            l2918 7B64  
                                          l2870 79A8                                            l2862 7976  
                                          l2854 78F8                                            l2846 78E8  
                                          l2790 7686                                            l2782 7668  
                                          ?_pad 0013                                            l2688 6644  
                                          l2696 640E                                            l2768 64DC  
                                          l2936 7C1E                                            l2928 7BCE  
                                          l2872 79B4                                            l2880 7A02  
                                          l2864 7984                                            l2856 78FC  
                                          l2792 769A                                            l2784 766C  
                                          l2698 6756                                            l2890 7A6E  
                                          l2882 7A1E                                            l2866 7990  
                                          l2858 7910                                            l2794 76AE  
                                          l2786 7678                                            l2778 764C  
                                          l2892 7A7E                                            l2884 7A2A  
                                          l2868 799C                                            l2796 76C6  
                                          l2788 7684                                            l2894 7A8A  
                                          l2886 7A58                                            l2878 79C0  
                                          l2798 76CA                                            l2896 7AB8  
                                          l2888 7A5A                                            l2898 7ABA  
                                          STR_1 7FE1                                            STR_2 7E3A  
                                          STR_3 7ED2                                            STR_4 7CF6  
                                          STR_5 7DC9                                            STR_6 7FFA  
                                          STR_7 7D3C                                            STR_8 7FD6  
                                          STR_9 7FB2                                            u1010 6408  
                                          u1011 6404                                            u1020 67B6  
                                          u1100 6CF4                                            u1021 67B2  
                                          u1101 6CF0                                            u1030 67C8  
                                          u1110 6D1E                                            u1031 67C4  
                                          u1111 6D1A                                            u1040 67F0  
                                          u1120 6D5E                                            u1200 684A  
                                          u1041 67EC                                            u1121 6D5A  
                                          u1201 6846                                            u1050 6826  
                                          u1130 6DA8                                            u1210 686C  
                                          u1051 6822                                            u1131 6DA4  
                                          u1211 6868                                            u1300 6922  
                                          u1140 6B10                                            u1060 670E  
                                          u1220 68C2                                            u1301 691E  
                                          u1141 6B0C                                            u1061 670A  
                                          u1221 68BE                                            u1310 6942  
                                          u1070 6C74                                            u1150 6B42  
                                          u1230 68D2                                            u1311 693E  
                                          u1071 6C70                                            u1151 6B3E  
                                          u1231 68CE                                            u1320 6990  
                                          u1080 6CA6                                            u1160 6B80  
                                          u1240 66A6                                            u1400 708A  
                                          u1321 698C                                            u1081 6CA2  
                                          u1161 6B7C                                            u1241 66A2  
                                          u1401 7086                                            u1250 659E  
                                          u1330 69A0                                            u1170 6BAA  
                                          u1410 71C4                                            u1251 6598  
                                          u1331 699C                                            u1091 6CD0  
                                          u1171 6BA6                                            u1411 71C0  
                                          u1260 65A0                                            u1180 6BD8  
                                          u1420 71E2                                            u1340 6FE8  
                                          u1500 6EF2                                            u1181 6BD4  
                                          u1421 71DE                                            u1341 6FE2  
                                          _LATA 000F89                                            u1270 6728  
                                          u1190 6C20                                            u1430 71FC  
                                          u1350 6FEA                                            u1510 6F34  
                                          _LATB 000F8A                                            u1271 6724  
                                          u1191 6C1C                                            u1431 71F8  
                                          u1511 6F30                                            _LATC 000F8B  
                                          u1280 674A                                            u1440 7216  
                                          u1360 6FFC                                            u1520 6F52  
                                          u1600 7292                                            u1281 6746  
                                          u1441 7212                                            u1361 6FF8  
                                          u1521 6F4E                                            u1505 6EE0  
                                          u1601 728E                                            u1290 68FC  
                                          u1450 7226                                            u1370 702C  
                                          u1530 6F6C                                            u1610 7326  
                                          u1291 68F8                                            u1451 7222  
                                          u1371 7028                                            u1531 6F68  
                                          u1611 7322                                            u1460 7236  
                                          u1380 7048                                            u1540 6F86  
                                          u1620 734A                                            u1700 679A  
                                          u1461 7232                                            u1381 7044  
                                          u1541 6F82                                            u1621 7346  
                                          u1701 6796                                            u1710 64B8  
                                          u1390 7074                                            u1550 6F96  
                                          u1470 6DFA                                            u1630 7390  
                                          u1711 64B4                                            u1391 7070  
                                          u1551 6F92                                            u1471 6DF6  
                                          u1631 738C                                            u1720 63F4  
                                          u1560 69E8                                            u1480 6E16  
                                          u1640 7404                                            u1800 769A  
                                          u1721 63EE                                            u1561 69E4  
                                          u1481 6E12                                            u1641 7400  
                                          u1801 7696                                            u1730 63E0  
                                          u1570 6A18                                            u1490 6E7E  
                                          u1650 7428                                            u1810 76AE  
                                          u1731 63DA                                            u1571 6A14  
                                          u1491 6E7A                                            u1651 7424  
                                          u1811 76AA                                            u1740 6532  
                                          u1580 6AC6                                            u1660 749A  
                                          u1900 7B52                                            u1820 76C6  
                                          u1741 652E                                            u1581 6AC2  
                                          u1661 7496                                            u1901 7B4E  
                                          u1821 76C2                                            u1750 6546  
                                          u1726 63F6                                            u1590 6AD8  
                                          u1670 74B6                                            u1910 7B64  
                                          u1830 7732                                            u1751 6542  
                                          u1591 6AD4                                            u1671 74B2  
                                          u1911 7B60                                            u1831 772E  
                                          u1760 63CC                                            u1736 63E2  
                                          u1680 7558                                            u1920 7BB4  
                                          u1840 78E2                                            u1761 63C6  
                                          u1681 7554                                            u1921 7BB0  
                                          u1841 78DE                                            u1770 6508  
                                          u1690 6428                                            u1930 7BE4  
                                          u1850 790C                                            u1771 6504  
                                          u1691 6424                                            u1931 7BE0  
                                          u1851 7908                                            u1780 651C  
                                          u1860 7976                                            u1781 6518  
                                          u1861 7972                                            u1766 63CE  
                                          u1870 7A6E                                            u1871 7A6A  
                                          u1791 7660                                            u1880 7ACE  
                                          u1881 7ACA                                            u1890 7AEC  
                                          u1891 7AE8                         _TMR1_HasOverflowOccured 63E4  
                                          _TMR1 000FCE                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 63F8  
                                          abs@a 0013                                            _dbuf 0075  
                                          _atoi 69B4                                            _ctoa 68E8  
                                          _main 764C                                            _dtoa 6FB8  
                                 ?_EUSART1_Read 0001                                            _prec 0062  
                                 ?_EUSART2_Read 0001                                            pad@i 001A  
                                          pad@p 0017                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            _xtoa 6DEA  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0000                                    ___param_bank 000000  
                                         ??_abs 0015                                           ??_pad 0019  
                 __end_of_OSCILLATOR_Initialize 642A                                 __end_of___aodiv 6DEA  
                                         ?_atoi 0007                                           ?_ctoa 000C  
                                         ?_main 0001                                           ?_dtoa 001E  
                               __end_of___aomod 6C62                                           STR_10 7FBE  
                                         STR_11 7FCA                                           STR_12 7FA5  
                                         STR_20 7C9B                                           STR_13 7FB2  
                                         STR_21 7E18                                           STR_14 7D3C  
                                         STR_30 7F5B                                           STR_22 7DF3  
                                         STR_15 7F88                                           STR_31 7F6A  
                                         STR_23 7F27                                           STR_24 7D3C  
                                         STR_16 7FF3                                           STR_32 7F79  
                                         STR_25 7FEB                                           STR_33 7F4B  
                                         STR_17 7EFD                                           STR_26 7D6E  
                                         STR_18 7EBA                                           STR_34 7E9B  
                                         STR_27 7D6E                                           STR_35 7F12  
                                         STR_19 7D70                                           STR_36 7E7C  
                                         STR_28 7D9E                                           STR_29 7F97  
                                         STR_37 7E5C                                           STR_38 7EE8  
                                         STR_39 7F3A                                           ?_xtoa 001E  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                                  vfpfcnvrt@fmt 0043                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         _flags 0072                                           _fputc 67A4  
                                         _fputs 66CC                                 __end_of_isdigit 65A6  
                                         atoi@n 000E                                           pad@fp 0013  
                                         atoi@s 0007                                           _width 0060  
                                         ctoa@c 000E                                           _putch 6398  
                                         ctoa@l 0010                                           ctoa@w 0012  
                                         main@i 00AC                                           dtoa@d 0020  
                                         dtoa@i 003E                                           dtoa@n 0036  
                                         dtoa@p 0032                                           dtoa@s 0040  
                                         dtoa@w 0034                                 __end_of_isspace 6756  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 6446  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                ??_EUSART2_Read 0001                                           status 000FD8  
                                         xtoa@c 0040                                           xtoa@d 0020  
                                         xtoa@i 003E                                           xtoa@n 0036  
                                         xtoa@p 0032                                           xtoa@w 0034  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 64AA  
                               __initialization 65D6                                    __end_of_atoi 6AFE  
                                  __end_of_ctoa 69B4                      __end_of_EUSART1_Initialize 664C  
                                  __end_of_main 7C9A                                    __end_of_dtoa 726E  
                                  __end_of_xtoa 6FB8                                   main@bitPeriod 009F  
                       __end_of_TMR2_Initialize 63BC                                          ??_atoi 0009  
                                        ??_ctoa 000F                                          ??_main 009D  
                                        ??_dtoa 0028                                          ??_xtoa 0028  
                                 __activetblptr 000002                     _EUSART2_DefaultErrorHandler 000000  
                     ??_TMR1_HasOverflowOccured 0001                      __end_of_EUSART2_Initialize 668C  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _CCPR2H 000F68                                          _CCPR2L 000F67  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 0001  
                                        _RCREG1 000FAE                                          _RCREG2 000F74  
                                        _RCSTA1 000FAB                                          _RCSTA2 000F71  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 004B                                          _SPBRG1 000FAF  
                                        _SPBRG2 000F75                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                          _TXSTA1 000FAC  
                                        _TXSTA2 000F72                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 005E                                       ??___aodiv 0011  
                                     ??___aomod 0011                                          ___wmul 6484  
                      ?_EUSART1_SetErrorHandler 0001                                          clear_0 65FC  
                                        isa$std 000001                     _EUSART2_FramingErrorHandler 006E  
                                        _printf 64D2                                          pad@buf 0015  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        ctoa@fp 000C                                          dtoa@fp 001E  
                                        fputc@c 0003                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                     ??_isdigit 0003                                    __mediumconst 7C9A  
                                     ??_isspace 0003                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 67A4                                 ??_EUSART1_Write 0001  
                           _EPWM2_LoadDutyValue 65A6                         __end_of_TMR1_WriteTimer 64D2  
                                        xtoa@fp 001E                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 6446                                      __accesstop 0060  
                       __end_of__initialization 6602                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                          ?_EPWM2_LoadDutyValue 0001                                    __pidataBANK0 63A2  
                           ??_SYSTEM_Initialize 0003                                   __end_of_fputc 683A  
                                 __end_of_fputs 6710                                   __end_of_putch 63A2  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 6524  
                          __end_of_EUSART2_Read 654E                        ?_EUSART2_SetErrorHandler 0001  
                             ?_EPWM2_Initialize 0001                                         ??_fputc 0007  
                     __end_of_SYSTEM_Initialize 6464                                         ??_fputs 0010  
                            ??_EPWM2_Initialize 0001                                         ??_putch 0002  
                                    __pbssBANK0 0060                ??_EUSART2_SetFramingErrorHandler 0003  
               ?_EUSART2_SetFramingErrorHandler 0001                 __end_of_EUSART1_SetErrorHandler 6366  
                         ??_EPWM2_LoadDutyValue 0003                                         ?___wmul 0001  
                                       _CCP2CON 000F66                                         _ECCP2AS 000F64  
                                       ?_printf 0095          __end_of_EUSART1_SetFramingErrorHandler 6370  
                _EUSART1_SetFramingErrorHandler 6366                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _PWM2CON 000F65  
                                       _SPBRGH1 000FB0                                         _SPBRGH2 000F76  
                              ?_TMR1_WriteTimer 0001                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 6C62  
                                       ___aomod 6AFE                                       ?_vfprintf 0058  
                           _EUSART1_is_rx_ready 63BC                                         __pcinit 65D6  
               __end_of_EUSART2_SetErrorHandler 6384                                         __ramtop 0600  
                                       __ptext0 764C                                         __ptext1 64D2  
                                       __ptext2 6756                                         __ptext3 726E  
                                       __ptext4 6DEA                                         __ptext5 6FB8  
                                       __ptext6 683A                                         __ptext7 66CC  
                                       __ptext8 668C                                         __ptext9 6AFE  
                                     _T1CONbits 000FCD              _EUSART2_DefaultOverrunErrorHandler 000000  
                         _OSCILLATOR_Initialize 640E                                       _T2CONbits 000FBA  
                                       _isdigit 657A                              _EUSART1_Initialize 660C  
                      ??_PIN_MANAGER_Initialize 0001                                         _isspace 6710  
                                       atoi@neg 000C                                         main@cmd 00A9  
                          end_of_initialization 6602                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0005  
                                 __Lmediumconst 7C9A                     _EUSART1_OverrunErrorHandler 0066  
                                       fputs@fp 000E                              _EUSART2_Initialize 664C  
                             __end_of_vfpfcnvrt 764C                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 004E                                      ??_vfprintf 005E  
                          ??_EUSART1_Initialize 0003                             ?_EUSART2_Initialize 0001  
                           _EUSART2_is_rx_ready 63D0                             EUSART1_Write@txData 0001  
                         ??_EUSART1_is_rx_ready 0001                            ??_EUSART2_Initialize 0003  
                          ?_EUSART2_is_rx_ready 0001                                    _EUSART1_Read 64FA  
                                  _EUSART2_Read 6524                                      main@letter 00AB  
                                   vfpfcnvrt@ap 0045                                     vfpfcnvrt@cp 0056  
                                   vfpfcnvrt@fp 0041                                  __end_of___wmul 64AA  
                        ?_OSCILLATOR_Initialize 0001                        ?_TMR1_HasOverflowOccured 0001  
                                __end_of_printf 64FA                             start_initialization 65D6  
                                   __end_of_abs 66CC                                     __end_of_pad 68E8  
                                   putch@txData 0002                           ??_EUSART2_is_rx_ready 0001  
                         __end_of_EUSART1_Write 640E          __end_of_EUSART2_SetOverrunErrorHandler 6398  
                _EUSART2_SetOverrunErrorHandler 638E                                     vfprintf@fmt 005A  
                                      ??___wmul 0005                                     __pdataBANK0 00AE  
                                      ??_printf 0060                                   __pcstackBANK0 0095  
                              ___aodiv@dividend 0001                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                     __end_of_EPWM2_LoadDutyValue 65D6  
                        _PIN_MANAGER_Initialize 654E                                       _dtoa$1598 0030  
                                 __pmediumconst 7C9A                                        ?___aodiv 0001  
                                      ?___aomod 0001                                ___aodiv@quotient 0013  
               __end_of_TMR1_HasOverflowOccured 63F8                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 0001                            _EUSART1_ErrorHandler 0064  
                                      ?_isspace 0001                         _EUSART1_SetErrorHandler 635C  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
       EUSART2_SetErrorHandler@interruptHandler 0001                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                       main@F6152 00AE  
                                      _PSTR2CON 000F63                                       _vfpfcnvrt 726E  
                                     _xtoa$1608 0030                               ??_TMR1_Initialize 0001  
                             ___wmul@multiplier 0001                                    _isspace$1658 0005  
                                    vfpfcnvrt@c 004D                                     _INTCON2bits 000FF1  
                                     copy_data0 65EA                         _EUSART2_SetErrorHandler 637A  
                             ??_TMR2_Initialize 0001                     _EUSART2_OverrunErrorHandler 006C  
                                      __Hrparam 0000                                _EPWM2_Initialize 6464  
                                    vfprintf@ap 005C                                        __Lrparam 0000  
                                    vfprintf@fp 0058                         ??_OSCILLATOR_Initialize 0001  
                                    ?_vfpfcnvrt 0041                                 ___aodiv@divisor 0009  
                               ___aodiv@counter 0011                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 63D0  
                          _EUSART2_ErrorHandler 006A                                        __ptext10 6C62  
                                      __ptext11 68E8                                        __ptext20 63E4  
                                      __ptext12 67A4                                        __ptext21 6446  
                                      __ptext13 6398                                      _T1GCONbits 000FCC  
                                      __ptext30 660C                                        __ptext22 63AC  
                                      __ptext14 63F8                                        __ptext31 6370  
                                      __ptext23 642A                                        __ptext15 69B4  
                                      __ptext32 6366                                        __ptext24 654E  
                                      __ptext16 6710                                        __ptext33 635C  
                                      __ptext25 640E                                        __ptext17 657A  
                                      __ptext34 6464                                        __ptext26 664C  
                                      __ptext18 6484                                        __ptext35 63D0  
                                      __ptext27 638E                                        __ptext19 64AA  
                                      __ptext36 6524                                        __ptext28 6384  
                                      __ptext37 63BC                                        __ptext29 637A  
                                      __ptext38 64FA                                        __ptext39 65A6  
            _EUSART2_DefaultFramingErrorHandler 000000  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
EUSART2_SetOverrunErrorHandler@interruptHandler 0001                                        isa$xinst 000000  
                                      _vfprintf 6756                                       printf@fmt 0095  
                             ??_TMR1_WriteTimer 0003                                        main@mask 00AA  
                   _EUSART1_FramingErrorHandler 0068                                ___aomod@dividend 0001  
              ??_EUSART2_SetOverrunErrorHandler 0003                 ?_EUSART2_SetOverrunErrorHandler 0001  
                                    _INTCONbits 000FF2                     __end_of_EUSART2_is_rx_ready 63E4  
                                      isdigit@c 0001                       ??_EUSART2_SetErrorHandler 0003  
                  EPWM2_LoadDutyValue@dutyValue 0001                                        isspace@c 0001  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 637A  
                _EUSART1_SetOverrunErrorHandler 6370                                      _RCSTA1bits 000FAB  
                                    _RCSTA2bits 000F71                                        printf@ap 009B  
EUSART1_SetFramingErrorHandler@interruptHandler 0001  EUSART2_SetFramingErrorHandler@interruptHandler 0001  
                               ___aomod@divisor 0009                                     ??_vfpfcnvrt 0047  
                               ___aomod@counter 0011                              _eusart1RxLastError 0073  
                          main@baudRateSelected 00AD                                    ___aodiv@sign 0012  
                __end_of_PIN_MANAGER_Initialize 657A                              _eusart2RxLastError 0074  
                                  ___aomod@sign 0012                                 _TMR1_Initialize 642A  
