

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 15:19:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94   000000                     
    95                           ; Generated 06/04/2022 GMT
    96                           ; 
    97                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F25K22 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129   000000                     
   130 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   131   000000                     
   132 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   133   000000                     
   134 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   135   000000                     
   136                           	psect	idataBANK1
   137   002FF2                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for main@F6187
   141   002FF2  D055               	dw	53333
   142   002FF4  3415               	dw	13333
   143   002FF6  1A0A               	dw	6666
   144   002FF8  0682               	dw	1666
   145   002FFA  0341               	dw	833
   146                           
   147                           ;initializer for stoa@F1149
   148   002FFC  28                 	db	40
   149   002FFD  6E                 	db	110
   150   002FFE  75                 	db	117
   151   002FFF  6C                 	db	108
   152   003000  6C                 	db	108
   153   003001  29                 	db	41
   154   003002  00                 	db	0
   155   000000                     _ANSELA	set	3896
   156   000000                     _ANSELB	set	3897
   157   000000                     _ANSELC	set	3898
   158   000000                     _TXREG1	set	4013
   159   000000                     _RCREG1	set	4014
   160   000000                     _SPBRG1	set	4015
   161   000000                     _TXSTA1	set	4012
   162   000000                     _RCREG2	set	3956
   163   000000                     _TXREG2	set	3955
   164   000000                     _SPBRG2	set	3957
   165   000000                     _TXSTA2	set	3954
   166   000000                     _RCSTA2	set	3953
   167   000000                     _CCPTMRS0bits	set	3913
   168   000000                     _CCPR2L	set	3943
   169   000000                     _CCPR2H	set	3944
   170   000000                     _PSTR2CON	set	3939
   171   000000                     _PWM2CON	set	3941
   172   000000                     _ECCP2AS	set	3940
   173   000000                     _CCP2CON	set	3942
   174   000000                     _T1CON	set	4045
   175   000000                     _TMR1L	set	4046
   176   000000                     _TMR1H	set	4047
   177   000000                     _PIR1bits	set	3998
   178   000000                     _PR2	set	4027
   179   000000                     _TMR1	set	4046
   180   000000                     _RCSTA1bits	set	4011
   181   000000                     _TXSTA1bits	set	4012
   182   000000                     _RCSTA2bits	set	3953
   183   000000                     _TXSTA2bits	set	3954
   184   000000                     _T1GCONbits	set	4044
   185   000000                     _T1CONbits	set	4045
   186   000000                     _T2CONbits	set	4026
   187   000000                     _PLLRDY	set	32407
   188   000000                     _T1GCON	set	4044
   189   000000                     _TMR2	set	4028
   190   000000                     _PIE3bits	set	4003
   191   000000                     _T2CON	set	4026
   192   000000                     _RCONbits	set	4048
   193   000000                     _OSCCON2	set	4050
   194   000000                     _OSCCON	set	4051
   195   000000                     _INTCON2bits	set	4081
   196   000000                     _BAUDCON2	set	3952
   197   000000                     _WPUB	set	3937
   198   000000                     _PIR3bits	set	4004
   199   000000                     _RCSTA1	set	4011
   200   000000                     _BAUDCON1	set	4024
   201   000000                     _LATA	set	3977
   202   000000                     _SPBRGH2	set	3958
   203   000000                     _SPBRGH1	set	4016
   204   000000                     _TRISA	set	3986
   205   000000                     _LATC	set	3979
   206   000000                     _LATB	set	3978
   207   000000                     _OSCTUNE	set	3995
   208   000000                     _TRISC	set	3988
   209   000000                     _TRISB	set	3987
   210   000000                     _INTCONbits	set	4082
   211                           
   212                           	psect	mediumconst
   213   007C18                     __pmediumconst:
   214                           	callstack 0
   215   007C18  00                 	db	0
   216   007C19                     STR_4:
   217                           
   218                           ; BSR set to: 0
   219   007C19  49                 	db	73	;'I'
   220   007C1A  6E                 	db	110	;'n'
   221   007C1B  73                 	db	115	;'s'
   222   007C1C  74                 	db	116	;'t'
   223   007C1D  61                 	db	97	;'a'
   224   007C1E  6C                 	db	108	;'l'
   225   007C1F  6C                 	db	108	;'l'
   226   007C20  20                 	db	32
   227   007C21  61                 	db	97	;'a'
   228   007C22  20                 	db	32
   229   007C23  6A                 	db	106	;'j'
   230   007C24  75                 	db	117	;'u'
   231   007C25  6D                 	db	109	;'m'
   232   007C26  70                 	db	112	;'p'
   233   007C27  65                 	db	101	;'e'
   234   007C28  72                 	db	114	;'r'
   235   007C29  20                 	db	32
   236   007C2A  77                 	db	119	;'w'
   237   007C2B  69                 	db	105	;'i'
   238   007C2C  72                 	db	114	;'r'
   239   007C2D  65                 	db	101	;'e'
   240   007C2E  20                 	db	32
   241   007C2F  66                 	db	102	;'f'
   242   007C30  72                 	db	114	;'r'
   243   007C31  6F                 	db	111	;'o'
   244   007C32  6D                 	db	109	;'m'
   245   007C33  20                 	db	32
   246   007C34  52                 	db	82	;'R'
   247   007C35  43                 	db	67	;'C'
   248   007C36  30                 	db	48	;'0'
   249   007C37  20                 	db	32
   250   007C38  74                 	db	116	;'t'
   251   007C39  6F                 	db	111	;'o'
   252   007C3A  20                 	db	32
   253   007C3B  52                 	db	82	;'R'
   254   007C3C  42                 	db	66	;'B'
   255   007C3D  37                 	db	55	;'7'
   256   007C3E  20                 	db	32
   257   007C3F  4F                 	db	79	;'O'
   258   007C40  4E                 	db	78	;'N'
   259   007C41  4C                 	db	76	;'L'
   260   007C42  59                 	db	89	;'Y'
   261   007C43  20                 	db	32
   262   007C44  41                 	db	65	;'A'
   263   007C45  46                 	db	70	;'F'
   264   007C46  54                 	db	84	;'T'
   265   007C47  45                 	db	69	;'E'
   266   007C48  52                 	db	82	;'R'
   267   007C49  20                 	db	32
   268   007C4A  75                 	db	117	;'u'
   269   007C4B  6E                 	db	110	;'n'
   270   007C4C  70                 	db	112	;'p'
   271   007C4D  6C                 	db	108	;'l'
   272   007C4E  75                 	db	117	;'u'
   273   007C4F  67                 	db	103	;'g'
   274   007C50  67                 	db	103	;'g'
   275   007C51  69                 	db	105	;'i'
   276   007C52  6E                 	db	110	;'n'
   277   007C53  67                 	db	103	;'g'
   278   007C54  20                 	db	32
   279   007C55  50                 	db	80	;'P'
   280   007C56  49                 	db	73	;'I'
   281   007C57  43                 	db	67	;'C'
   282   007C58  4B                 	db	75	;'K'
   283   007C59  69                 	db	105	;'i'
   284   007C5A  74                 	db	116	;'t'
   285   007C5B  33                 	db	51	;'3'
   286   007C5C  0D                 	db	13
   287   007C5D  0A                 	db	10
   288   007C5E  00                 	db	0
   289   007C5F                     STR_40:
   290                           
   291                           ; BSR set to: 0
   292   007C5F  52                 	db	82	;'R'
   293   007C60  65                 	db	101	;'e'
   294   007C61  63                 	db	99	;'c'
   295   007C62  65                 	db	101	;'e'
   296   007C63  69                 	db	105	;'i'
   297   007C64  76                 	db	118	;'v'
   298   007C65  65                 	db	101	;'e'
   299   007C66  64                 	db	100	;'d'
   300   007C67  0A                 	db	10
   301   007C68  0D                 	db	13
   302   007C69  20                 	db	32
   303   007C6A  20                 	db	32
   304   007C6B  6D                 	db	109	;'m'
   305   007C6C  65                 	db	101	;'e'
   306   007C6D  73                 	db	115	;'s'
   307   007C6E  73                 	db	115	;'s'
   308   007C6F  61                 	db	97	;'a'
   309   007C70  67                 	db	103	;'g'
   310   007C71  65                 	db	101	;'e'
   311   007C72  3A                 	db	58	;':'
   312   007C73  20                 	db	32
   313   007C74  25                 	db	37
   314   007C75  73                 	db	115	;'s'
   315   007C76  0A                 	db	10
   316   007C77  0D                 	db	13
   317   007C78  20                 	db	32
   318   007C79  20                 	db	32
   319   007C7A  63                 	db	99	;'c'
   320   007C7B  68                 	db	104	;'h'
   321   007C7C  65                 	db	101	;'e'
   322   007C7D  63                 	db	99	;'c'
   323   007C7E  6B                 	db	107	;'k'
   324   007C7F  73                 	db	115	;'s'
   325   007C80  75                 	db	117	;'u'
   326   007C81  6D                 	db	109	;'m'
   327   007C82  3A                 	db	58	;':'
   328   007C83  20                 	db	32
   329   007C84  61                 	db	97	;'a'
   330   007C85  63                 	db	99	;'c'
   331   007C86  74                 	db	116	;'t'
   332   007C87  75                 	db	117	;'u'
   333   007C88  61                 	db	97	;'a'
   334   007C89  6C                 	db	108	;'l'
   335   007C8A  28                 	db	40
   336   007C8B  25                 	db	37
   337   007C8C  75                 	db	117	;'u'
   338   007C8D  29                 	db	41
   339   007C8E  2C                 	db	44
   340   007C8F  20                 	db	32
   341   007C90  65                 	db	101	;'e'
   342   007C91  78                 	db	120	;'x'
   343   007C92  70                 	db	112	;'p'
   344   007C93  65                 	db	101	;'e'
   345   007C94  63                 	db	99	;'c'
   346   007C95  74                 	db	116	;'t'
   347   007C96  65                 	db	101	;'e'
   348   007C97  64                 	db	100	;'d'
   349   007C98  28                 	db	40
   350   007C99  25                 	db	37
   351   007C9A  75                 	db	117	;'u'
   352   007C9B  29                 	db	41
   353   007C9C  0A                 	db	10
   354   007C9D  0D                 	db	13
   355   007C9E  00                 	db	0
   356   007C9F                     STR_23:
   357                           
   358                           ; BSR set to: 0
   359   007C9F  52                 	db	82	;'R'
   360   007CA0  3A                 	db	58	;':'
   361   007CA1  20                 	db	32
   362   007CA2  72                 	db	114	;'r'
   363   007CA3  65                 	db	101	;'e'
   364   007CA4  63                 	db	99	;'c'
   365   007CA5  69                 	db	105	;'i'
   366   007CA6  76                 	db	118	;'v'
   367   007CA7  65                 	db	101	;'e'
   368   007CA8  20                 	db	32
   369   007CA9  6D                 	db	109	;'m'
   370   007CAA  65                 	db	101	;'e'
   371   007CAB  73                 	db	115	;'s'
   372   007CAC  73                 	db	115	;'s'
   373   007CAD  61                 	db	97	;'a'
   374   007CAE  67                 	db	103	;'g'
   375   007CAF  65                 	db	101	;'e'
   376   007CB0  20                 	db	32
   377   007CB1  75                 	db	117	;'u'
   378   007CB2  73                 	db	115	;'s'
   379   007CB3  69                 	db	105	;'i'
   380   007CB4  6E                 	db	110	;'n'
   381   007CB5  67                 	db	103	;'g'
   382   007CB6  20                 	db	32
   383   007CB7  45                 	db	69	;'E'
   384   007CB8  55                 	db	85	;'U'
   385   007CB9  53                 	db	83	;'S'
   386   007CBA  41                 	db	65	;'A'
   387   007CBB  52                 	db	82	;'R'
   388   007CBC  54                 	db	84	;'T'
   389   007CBD  32                 	db	50	;'2'
   390   007CBE  20                 	db	32
   391   007CBF  69                 	db	105	;'i'
   392   007CC0  6E                 	db	110	;'n'
   393   007CC1  74                 	db	116	;'t'
   394   007CC2  65                 	db	101	;'e'
   395   007CC3  72                 	db	114	;'r'
   396   007CC4  72                 	db	114	;'r'
   397   007CC5  75                 	db	117	;'u'
   398   007CC6  70                 	db	112	;'p'
   399   007CC7  74                 	db	116	;'t'
   400   007CC8  73                 	db	115	;'s'
   401   007CC9  20                 	db	32
   402   007CCA  28                 	db	40
   403   007CCB  66                 	db	102	;'f'
   404   007CCC  72                 	db	114	;'r'
   405   007CCD  6F                 	db	111	;'o'
   406   007CCE  6D                 	db	109	;'m'
   407   007CCF  20                 	db	32
   408   007CD0  49                 	db	73	;'I'
   409   007CD1  52                 	db	82	;'R'
   410   007CD2  29                 	db	41
   411   007CD3  20                 	db	32
   412   007CD4  0A                 	db	10
   413   007CD5  0D                 	db	13
   414   007CD6  00                 	db	0
   415   007CD7                     STR_8:
   416                           
   417                           ; BSR set to: 0
   418   007CD7  2D                 	db	45
   419   007CD8  2D                 	db	45
   420   007CD9  2D                 	db	45
   421   007CDA  2D                 	db	45
   422   007CDB  2D                 	db	45
   423   007CDC  2D                 	db	45
   424   007CDD  2D                 	db	45
   425   007CDE  2D                 	db	45
   426   007CDF  2D                 	db	45
   427   007CE0  2D                 	db	45
   428   007CE1  2D                 	db	45
   429   007CE2  2D                 	db	45
   430   007CE3  2D                 	db	45
   431   007CE4  2D                 	db	45
   432   007CE5  2D                 	db	45
   433   007CE6  2D                 	db	45
   434   007CE7  2D                 	db	45
   435   007CE8  2D                 	db	45
   436   007CE9  2D                 	db	45
   437   007CEA  2D                 	db	45
   438   007CEB  2D                 	db	45
   439   007CEC  2D                 	db	45
   440   007CED  2D                 	db	45
   441   007CEE  2D                 	db	45
   442   007CEF  2D                 	db	45
   443   007CF0  2D                 	db	45
   444   007CF1  2D                 	db	45
   445   007CF2  2D                 	db	45
   446   007CF3  2D                 	db	45
   447   007CF4  2D                 	db	45
   448   007CF5  2D                 	db	45
   449   007CF6  2D                 	db	45
   450   007CF7  2D                 	db	45
   451   007CF8  2D                 	db	45
   452   007CF9  2D                 	db	45
   453   007CFA  2D                 	db	45
   454   007CFB  2D                 	db	45
   455   007CFC  2D                 	db	45
   456   007CFD  2D                 	db	45
   457   007CFE  2D                 	db	45
   458   007CFF  2D                 	db	45
   459   007D00  2D                 	db	45
   460   007D01  2D                 	db	45
   461   007D02  2D                 	db	45
   462   007D03  2D                 	db	45
   463   007D04  2D                 	db	45
   464   007D05  2D                 	db	45
   465   007D06  2D                 	db	45
   466   007D07  2D                 	db	45
   467   007D08  0D                 	db	13
   468   007D09  0A                 	db	10
   469   007D0A  00                 	db	0
   470   007D0B                     STR_20:
   471                           
   472                           ; BSR set to: 0
   473   007D0B  62                 	db	98	;'b'
   474   007D0C  3A                 	db	58	;':'
   475   007D0D  20                 	db	32
   476   007D0E  73                 	db	115	;'s'
   477   007D0F  65                 	db	101	;'e'
   478   007D10  74                 	db	116	;'t'
   479   007D11  20                 	db	32
   480   007D12  74                 	db	116	;'t'
   481   007D13  68                 	db	104	;'h'
   482   007D14  65                 	db	101	;'e'
   483   007D15  20                 	db	32
   484   007D16  42                 	db	66	;'B'
   485   007D17  61                 	db	97	;'a'
   486   007D18  75                 	db	117	;'u'
   487   007D19  64                 	db	100	;'d'
   488   007D1A  20                 	db	32
   489   007D1B  72                 	db	114	;'r'
   490   007D1C  61                 	db	97	;'a'
   491   007D1D  74                 	db	116	;'t'
   492   007D1E  65                 	db	101	;'e'
   493   007D1F  20                 	db	32
   494   007D20  6F                 	db	111	;'o'
   495   007D21  66                 	db	102	;'f'
   496   007D22  20                 	db	32
   497   007D23  74                 	db	116	;'t'
   498   007D24  68                 	db	104	;'h'
   499   007D25  65                 	db	101	;'e'
   500   007D26  20                 	db	32
   501   007D27  73                 	db	115	;'s'
   502   007D28  65                 	db	101	;'e'
   503   007D29  6E                 	db	110	;'n'
   504   007D2A  74                 	db	116	;'t'
   505   007D2B  20                 	db	32
   506   007D2C  63                 	db	99	;'c'
   507   007D2D  68                 	db	104	;'h'
   508   007D2E  61                 	db	97	;'a'
   509   007D2F  72                 	db	114	;'r'
   510   007D30  61                 	db	97	;'a'
   511   007D31  63                 	db	99	;'c'
   512   007D32  74                 	db	116	;'t'
   513   007D33  65                 	db	101	;'e'
   514   007D34  72                 	db	114	;'r'
   515   007D35  73                 	db	115	;'s'
   516   007D36  0D                 	db	13
   517   007D37  0A                 	db	10
   518   007D38  00                 	db	0
   519   007D39                     STR_39:
   520                           
   521                           ; BSR set to: 0
   522   007D39  54                 	db	84	;'T'
   523   007D3A  72                 	db	114	;'r'
   524   007D3B  61                 	db	97	;'a'
   525   007D3C  6E                 	db	110	;'n'
   526   007D3D  6D                 	db	109	;'m'
   527   007D3E  69                 	db	105	;'i'
   528   007D3F  74                 	db	116	;'t'
   529   007D40  74                 	db	116	;'t'
   530   007D41  65                 	db	101	;'e'
   531   007D42  64                 	db	100	;'d'
   532   007D43  0A                 	db	10
   533   007D44  0D                 	db	13
   534   007D45  20                 	db	32
   535   007D46  20                 	db	32
   536   007D47  6D                 	db	109	;'m'
   537   007D48  65                 	db	101	;'e'
   538   007D49  73                 	db	115	;'s'
   539   007D4A  73                 	db	115	;'s'
   540   007D4B  61                 	db	97	;'a'
   541   007D4C  67                 	db	103	;'g'
   542   007D4D  65                 	db	101	;'e'
   543   007D4E  3A                 	db	58	;':'
   544   007D4F  20                 	db	32
   545   007D50  25                 	db	37
   546   007D51  73                 	db	115	;'s'
   547   007D52  0A                 	db	10
   548   007D53  0D                 	db	13
   549   007D54  20                 	db	32
   550   007D55  20                 	db	32
   551   007D56  63                 	db	99	;'c'
   552   007D57  68                 	db	104	;'h'
   553   007D58  65                 	db	101	;'e'
   554   007D59  63                 	db	99	;'c'
   555   007D5A  6B                 	db	107	;'k'
   556   007D5B  73                 	db	115	;'s'
   557   007D5C  75                 	db	117	;'u'
   558   007D5D  6D                 	db	109	;'m'
   559   007D5E  3A                 	db	58	;':'
   560   007D5F  20                 	db	32
   561   007D60  25                 	db	37
   562   007D61  75                 	db	117	;'u'
   563   007D62  0A                 	db	10
   564   007D63  0D                 	db	13
   565   007D64  00                 	db	0
   566   007D65                     STR_29:
   567                           
   568                           ; BSR set to: 0
   569   007D65  43                 	db	67	;'C'
   570   007D66  68                 	db	104	;'h'
   571   007D67  6F                 	db	111	;'o'
   572   007D68  6F                 	db	111	;'o'
   573   007D69  73                 	db	115	;'s'
   574   007D6A  65                 	db	101	;'e'
   575   007D6B  20                 	db	32
   576   007D6C  74                 	db	116	;'t'
   577   007D6D  68                 	db	104	;'h'
   578   007D6E  65                 	db	101	;'e'
   579   007D6F  20                 	db	32
   580   007D70  69                 	db	105	;'i'
   581   007D71  6E                 	db	110	;'n'
   582   007D72  64                 	db	100	;'d'
   583   007D73  65                 	db	101	;'e'
   584   007D74  78                 	db	120	;'x'
   585   007D75  20                 	db	32
   586   007D76  6F                 	db	111	;'o'
   587   007D77  66                 	db	102	;'f'
   588   007D78  20                 	db	32
   589   007D79  74                 	db	116	;'t'
   590   007D7A  68                 	db	104	;'h'
   591   007D7B  65                 	db	101	;'e'
   592   007D7C  20                 	db	32
   593   007D7D  74                 	db	116	;'t'
   594   007D7E  61                 	db	97	;'a'
   595   007D7F  72                 	db	114	;'r'
   596   007D80  67                 	db	103	;'g'
   597   007D81  65                 	db	101	;'e'
   598   007D82  74                 	db	116	;'t'
   599   007D83  20                 	db	32
   600   007D84  62                 	db	98	;'b'
   601   007D85  61                 	db	97	;'a'
   602   007D86  75                 	db	117	;'u'
   603   007D87  64                 	db	100	;'d'
   604   007D88  20                 	db	32
   605   007D89  72                 	db	114	;'r'
   606   007D8A  61                 	db	97	;'a'
   607   007D8B  74                 	db	116	;'t'
   608   007D8C  65                 	db	101	;'e'
   609   007D8D  0D                 	db	13
   610   007D8E  0A                 	db	10
   611   007D8F  00                 	db	0
   612   007D90                     STR_38:
   613                           
   614                           ; BSR set to: 0
   615   007D90  0A                 	db	10
   616   007D91  0D                 	db	13
   617   007D92  43                 	db	67	;'C'
   618   007D93  72                 	db	114	;'r'
   619   007D94  65                 	db	101	;'e'
   620   007D95  61                 	db	97	;'a'
   621   007D96  74                 	db	116	;'t'
   622   007D97  65                 	db	101	;'e'
   623   007D98  64                 	db	100	;'d'
   624   007D99  0A                 	db	10
   625   007D9A  0D                 	db	13
   626   007D9B  20                 	db	32
   627   007D9C  20                 	db	32
   628   007D9D  6D                 	db	109	;'m'
   629   007D9E  65                 	db	101	;'e'
   630   007D9F  73                 	db	115	;'s'
   631   007DA0  73                 	db	115	;'s'
   632   007DA1  61                 	db	97	;'a'
   633   007DA2  67                 	db	103	;'g'
   634   007DA3  65                 	db	101	;'e'
   635   007DA4  3A                 	db	58	;':'
   636   007DA5  20                 	db	32
   637   007DA6  25                 	db	37
   638   007DA7  73                 	db	115	;'s'
   639   007DA8  0A                 	db	10
   640   007DA9  0D                 	db	13
   641   007DAA  20                 	db	32
   642   007DAB  20                 	db	32
   643   007DAC  63                 	db	99	;'c'
   644   007DAD  68                 	db	104	;'h'
   645   007DAE  65                 	db	101	;'e'
   646   007DAF  63                 	db	99	;'c'
   647   007DB0  6B                 	db	107	;'k'
   648   007DB1  73                 	db	115	;'s'
   649   007DB2  75                 	db	117	;'u'
   650   007DB3  6D                 	db	109	;'m'
   651   007DB4  3A                 	db	58	;':'
   652   007DB5  20                 	db	32
   653   007DB6  25                 	db	37
   654   007DB7  75                 	db	117	;'u'
   655   007DB8  0A                 	db	10
   656   007DB9  0D                 	db	13
   657   007DBA  00                 	db	0
   658   007DBB                     STR_5:
   659                           
   660                           ; BSR set to: 0
   661   007DBB  49                 	db	73	;'I'
   662   007DBC  6E                 	db	110	;'n'
   663   007DBD  73                 	db	115	;'s'
   664   007DBE  74                 	db	116	;'t'
   665   007DBF  61                 	db	97	;'a'
   666   007DC0  6C                 	db	108	;'l'
   667   007DC1  6C                 	db	108	;'l'
   668   007DC2  20                 	db	32
   669   007DC3  61                 	db	97	;'a'
   670   007DC4  20                 	db	32
   671   007DC5  6A                 	db	106	;'j'
   672   007DC6  75                 	db	117	;'u'
   673   007DC7  6D                 	db	109	;'m'
   674   007DC8  70                 	db	112	;'p'
   675   007DC9  65                 	db	101	;'e'
   676   007DCA  72                 	db	114	;'r'
   677   007DCB  20                 	db	32
   678   007DCC  6F                 	db	111	;'o'
   679   007DCD  76                 	db	118	;'v'
   680   007DCE  65                 	db	101	;'e'
   681   007DCF  72                 	db	114	;'r'
   682   007DD0  20                 	db	32
   683   007DD1  49                 	db	73	;'I'
   684   007DD2  52                 	db	82	;'R'
   685   007DD3  5F                 	db	95	;'_'
   686   007DD4  54                 	db	84	;'T'
   687   007DD5  58                 	db	88	;'X'
   688   007DD6  20                 	db	32
   689   007DD7  68                 	db	104	;'h'
   690   007DD8  65                 	db	101	;'e'
   691   007DD9  61                 	db	97	;'a'
   692   007DDA  64                 	db	100	;'d'
   693   007DDB  65                 	db	101	;'e'
   694   007DDC  72                 	db	114	;'r'
   695   007DDD  20                 	db	32
   696   007DDE  70                 	db	112	;'p'
   697   007DDF  69                 	db	105	;'i'
   698   007DE0  6E                 	db	110	;'n'
   699   007DE1  73                 	db	115	;'s'
   700   007DE2  0D                 	db	13
   701   007DE3  0A                 	db	10
   702   007DE4  00                 	db	0
   703   007DE5                     STR_36:
   704                           
   705                           ; BSR set to: 0
   706   007DE5  45                 	db	69	;'E'
   707   007DE6  6E                 	db	110	;'n'
   708   007DE7  74                 	db	116	;'t'
   709   007DE8  65                 	db	101	;'e'
   710   007DE9  72                 	db	114	;'r'
   711   007DEA  20                 	db	32
   712   007DEB  6D                 	db	109	;'m'
   713   007DEC  65                 	db	101	;'e'
   714   007DED  73                 	db	115	;'s'
   715   007DEE  73                 	db	115	;'s'
   716   007DEF  61                 	db	97	;'a'
   717   007DF0  67                 	db	103	;'g'
   718   007DF1  65                 	db	101	;'e'
   719   007DF2  2C                 	db	44
   720   007DF3  20                 	db	32
   721   007DF4  68                 	db	104	;'h'
   722   007DF5  69                 	db	105	;'i'
   723   007DF6  74                 	db	116	;'t'
   724   007DF7  20                 	db	32
   725   007DF8  72                 	db	114	;'r'
   726   007DF9  65                 	db	101	;'e'
   727   007DFA  74                 	db	116	;'t'
   728   007DFB  75                 	db	117	;'u'
   729   007DFC  72                 	db	114	;'r'
   730   007DFD  6E                 	db	110	;'n'
   731   007DFE  20                 	db	32
   732   007DFF  77                 	db	119	;'w'
   733   007E00  68                 	db	104	;'h'
   734   007E01  65                 	db	101	;'e'
   735   007E02  6E                 	db	110	;'n'
   736   007E03  20                 	db	32
   737   007E04  64                 	db	100	;'d'
   738   007E05  6F                 	db	111	;'o'
   739   007E06  6E                 	db	110	;'n'
   740   007E07  65                 	db	101	;'e'
   741   007E08  2E                 	db	46
   742   007E09  0A                 	db	10
   743   007E0A  0D                 	db	13
   744   007E0B  00                 	db	0
   745   007E0C                     STR_2:
   746                           
   747                           ; BSR set to: 0
   748   007E0C  52                 	db	82	;'R'
   749   007E0D  65                 	db	101	;'e'
   750   007E0E  63                 	db	99	;'c'
   751   007E0F  65                 	db	101	;'e'
   752   007E10  69                 	db	105	;'i'
   753   007E11  76                 	db	118	;'v'
   754   007E12  65                 	db	101	;'e'
   755   007E13  20                 	db	32
   756   007E14  61                 	db	97	;'a'
   757   007E15  6E                 	db	110	;'n'
   758   007E16  64                 	db	100	;'d'
   759   007E17  20                 	db	32
   760   007E18  64                 	db	100	;'d'
   761   007E19  65                 	db	101	;'e'
   762   007E1A  63                 	db	99	;'c'
   763   007E1B  6F                 	db	111	;'o'
   764   007E1C  64                 	db	100	;'d'
   765   007E1D  65                 	db	101	;'e'
   766   007E1E  20                 	db	32
   767   007E1F  61                 	db	97	;'a'
   768   007E20  6E                 	db	110	;'n'
   769   007E21  20                 	db	32
   770   007E22  49                 	db	73	;'I'
   771   007E23  52                 	db	82	;'R'
   772   007E24  20                 	db	32
   773   007E25  70                 	db	112	;'p'
   774   007E26  61                 	db	97	;'a'
   775   007E27  63                 	db	99	;'c'
   776   007E28  6B                 	db	107	;'k'
   777   007E29  65                 	db	101	;'e'
   778   007E2A  74                 	db	116	;'t'
   779   007E2B  0D                 	db	13
   780   007E2C  0A                 	db	10
   781   007E2D  00                 	db	0
   782   007E2E                     STR_22:
   783                           
   784                           ; BSR set to: 0
   785   007E2E  53                 	db	83	;'S'
   786   007E2F  3A                 	db	58	;':'
   787   007E30  20                 	db	32
   788   007E31  74                 	db	116	;'t'
   789   007E32  72                 	db	114	;'r'
   790   007E33  61                 	db	97	;'a'
   791   007E34  6E                 	db	110	;'n'
   792   007E35  73                 	db	115	;'s'
   793   007E36  6D                 	db	109	;'m'
   794   007E37  69                 	db	105	;'i'
   795   007E38  74                 	db	116	;'t'
   796   007E39  20                 	db	32
   797   007E3A  6D                 	db	109	;'m'
   798   007E3B  65                 	db	101	;'e'
   799   007E3C  73                 	db	115	;'s'
   800   007E3D  73                 	db	115	;'s'
   801   007E3E  61                 	db	97	;'a'
   802   007E3F  67                 	db	103	;'g'
   803   007E40  65                 	db	101	;'e'
   804   007E41  20                 	db	32
   805   007E42  75                 	db	117	;'u'
   806   007E43  73                 	db	115	;'s'
   807   007E44  69                 	db	105	;'i'
   808   007E45  6E                 	db	110	;'n'
   809   007E46  67                 	db	103	;'g'
   810   007E47  20                 	db	32
   811   007E48  49                 	db	73	;'I'
   812   007E49  52                 	db	82	;'R'
   813   007E4A  20                 	db	32
   814   007E4B  0A                 	db	10
   815   007E4C  0D                 	db	13
   816   007E4D  00                 	db	0
   817   007E4E                     STR_35:
   818                           
   819                           ; BSR set to: 0
   820   007E4E  42                 	db	66	;'B'
   821   007E4F  61                 	db	97	;'a'
   822   007E50  75                 	db	117	;'u'
   823   007E51  64                 	db	100	;'d'
   824   007E52  20                 	db	32
   825   007E53  72                 	db	114	;'r'
   826   007E54  61                 	db	97	;'a'
   827   007E55  74                 	db	116	;'t'
   828   007E56  65                 	db	101	;'e'
   829   007E57  20                 	db	32
   830   007E58  61                 	db	97	;'a'
   831   007E59  73                 	db	115	;'s'
   832   007E5A  73                 	db	115	;'s'
   833   007E5B  69                 	db	105	;'i'
   834   007E5C  67                 	db	103	;'g'
   835   007E5D  6E                 	db	110	;'n'
   836   007E5E  65                 	db	101	;'e'
   837   007E5F  64                 	db	100	;'d'
   838   007E60  20                 	db	32
   839   007E61  25                 	db	37
   840   007E62  30                 	db	48	;'0'
   841   007E63  32                 	db	50	;'2'
   842   007E64  78                 	db	120	;'x'
   843   007E65  3A                 	db	58	;':'
   844   007E66  25                 	db	37
   845   007E67  30                 	db	48	;'0'
   846   007E68  32                 	db	50	;'2'
   847   007E69  78                 	db	120	;'x'
   848   007E6A  0D                 	db	13
   849   007E6B  0A                 	db	10
   850   007E6C  00                 	db	0
   851   007E6D                     STR_19:
   852                           
   853                           ; BSR set to: 0
   854   007E6D  7A                 	db	122	;'z'
   855   007E6E  3A                 	db	58	;':'
   856   007E6F  20                 	db	32
   857   007E70  43                 	db	67	;'C'
   858   007E71  6C                 	db	108	;'l'
   859   007E72  65                 	db	101	;'e'
   860   007E73  61                 	db	97	;'a'
   861   007E74  72                 	db	114	;'r'
   862   007E75  20                 	db	32
   863   007E76  74                 	db	116	;'t'
   864   007E77  68                 	db	104	;'h'
   865   007E78  65                 	db	101	;'e'
   866   007E79  20                 	db	32
   867   007E7A  74                 	db	116	;'t'
   868   007E7B  65                 	db	101	;'e'
   869   007E7C  72                 	db	114	;'r'
   870   007E7D  6D                 	db	109	;'m'
   871   007E7E  69                 	db	105	;'i'
   872   007E7F  6E                 	db	110	;'n'
   873   007E80  61                 	db	97	;'a'
   874   007E81  6C                 	db	108	;'l'
   875   007E82  0D                 	db	13
   876   007E83  0A                 	db	10
   877   007E84  00                 	db	0
   878   007E85                     STR_3:
   879                           
   880                           ; BSR set to: 0
   881   007E85  44                 	db	68	;'D'
   882   007E86  65                 	db	101	;'e'
   883   007E87  76                 	db	118	;'v'
   884   007E88  27                 	db	39
   885   007E89  32                 	db	50	;'2'
   886   007E8A  31                 	db	49	;'1'
   887   007E8B  20                 	db	32
   888   007E8C  42                 	db	66	;'B'
   889   007E8D  6F                 	db	111	;'o'
   890   007E8E  61                 	db	97	;'a'
   891   007E8F  72                 	db	114	;'r'
   892   007E90  64                 	db	100	;'d'
   893   007E91  20                 	db	32
   894   007E92  77                 	db	119	;'w'
   895   007E93  69                 	db	105	;'i'
   896   007E94  72                 	db	114	;'r'
   897   007E95  69                 	db	105	;'i'
   898   007E96  6E                 	db	110	;'n'
   899   007E97  67                 	db	103	;'g'
   900   007E98  0D                 	db	13
   901   007E99  0A                 	db	10
   902   007E9A  00                 	db	0
   903   007E9B                     STR_41:
   904                           
   905                           ; BSR set to: 0
   906   007E9B  4E                 	db	78	;'N'
   907   007E9C  6F                 	db	111	;'o'
   908   007E9D  20                 	db	32
   909   007E9E  6D                 	db	109	;'m'
   910   007E9F  65                 	db	101	;'e'
   911   007EA0  73                 	db	115	;'s'
   912   007EA1  73                 	db	115	;'s'
   913   007EA2  61                 	db	97	;'a'
   914   007EA3  67                 	db	103	;'g'
   915   007EA4  65                 	db	101	;'e'
   916   007EA5  20                 	db	32
   917   007EA6  72                 	db	114	;'r'
   918   007EA7  65                 	db	101	;'e'
   919   007EA8  63                 	db	99	;'c'
   920   007EA9  65                 	db	101	;'e'
   921   007EAA  69                 	db	105	;'i'
   922   007EAB  76                 	db	118	;'v'
   923   007EAC  65                 	db	101	;'e'
   924   007EAD  64                 	db	100	;'d'
   925   007EAE  0A                 	db	10
   926   007EAF  0D                 	db	13
   927   007EB0  00                 	db	0
   928   007EB1                     STR_42:
   929                           
   930                           ; BSR set to: 0
   931   007EB1  4A                 	db	74	;'J'
   932   007EB2  75                 	db	117	;'u'
   933   007EB3  73                 	db	115	;'s'
   934   007EB4  74                 	db	116	;'t'
   935   007EB5  20                 	db	32
   936   007EB6  72                 	db	114	;'r'
   937   007EB7  65                 	db	101	;'e'
   938   007EB8  73                 	db	115	;'s'
   939   007EB9  65                 	db	101	;'e'
   940   007EBA  74                 	db	116	;'t'
   941   007EBB  20                 	db	32
   942   007EBC  45                 	db	69	;'E'
   943   007EBD  55                 	db	85	;'U'
   944   007EBE  53                 	db	83	;'S'
   945   007EBF  41                 	db	65	;'A'
   946   007EC0  52                 	db	82	;'R'
   947   007EC1  54                 	db	84	;'T'
   948   007EC2  32                 	db	50	;'2'
   949   007EC3  0D                 	db	13
   950   007EC4  0A                 	db	10
   951   007EC5  00                 	db	0
   952   007EC6                     STR_18:
   953                           
   954                           ; BSR set to: 0
   955   007EC6  5A                 	db	90	;'Z'
   956   007EC7  3A                 	db	58	;':'
   957   007EC8  20                 	db	32
   958   007EC9  52                 	db	82	;'R'
   959   007ECA  65                 	db	101	;'e'
   960   007ECB  73                 	db	115	;'s'
   961   007ECC  65                 	db	101	;'e'
   962   007ECD  74                 	db	116	;'t'
   963   007ECE  20                 	db	32
   964   007ECF  70                 	db	112	;'p'
   965   007ED0  72                 	db	114	;'r'
   966   007ED1  6F                 	db	111	;'o'
   967   007ED2  63                 	db	99	;'c'
   968   007ED3  65                 	db	101	;'e'
   969   007ED4  73                 	db	115	;'s'
   970   007ED5  73                 	db	115	;'s'
   971   007ED6  6F                 	db	111	;'o'
   972   007ED7  72                 	db	114	;'r'
   973   007ED8  0D                 	db	13
   974   007ED9  0A                 	db	10
   975   007EDA  00                 	db	0
   976   007EDB                     STR_24:
   977                           
   978                           ; BSR set to: 0
   979   007EDB  72                 	db	114	;'r'
   980   007EDC  3A                 	db	58	;':'
   981   007EDD  20                 	db	32
   982   007EDE  72                 	db	114	;'r'
   983   007EDF  65                 	db	101	;'e'
   984   007EE0  73                 	db	115	;'s'
   985   007EE1  65                 	db	101	;'e'
   986   007EE2  74                 	db	116	;'t'
   987   007EE3  20                 	db	32
   988   007EE4  45                 	db	69	;'E'
   989   007EE5  55                 	db	85	;'U'
   990   007EE6  53                 	db	83	;'S'
   991   007EE7  41                 	db	65	;'A'
   992   007EE8  52                 	db	82	;'R'
   993   007EE9  54                 	db	84	;'T'
   994   007EEA  32                 	db	50	;'2'
   995   007EEB  0D                 	db	13
   996   007EEC  0A                 	db	10
   997   007EED  00                 	db	0
   998   007EEE                     STR_21:
   999                           
  1000                           ; BSR set to: 0
  1001   007EEE  6D                 	db	109	;'m'
  1002   007EEF  3A                 	db	58	;':'
  1003   007EF0  20                 	db	32
  1004   007EF1  65                 	db	101	;'e'
  1005   007EF2  6E                 	db	110	;'n'
  1006   007EF3  74                 	db	116	;'t'
  1007   007EF4  65                 	db	101	;'e'
  1008   007EF5  72                 	db	114	;'r'
  1009   007EF6  20                 	db	32
  1010   007EF7  6D                 	db	109	;'m'
  1011   007EF8  65                 	db	101	;'e'
  1012   007EF9  73                 	db	115	;'s'
  1013   007EFA  73                 	db	115	;'s'
  1014   007EFB  61                 	db	97	;'a'
  1015   007EFC  67                 	db	103	;'g'
  1016   007EFD  65                 	db	101	;'e'
  1017   007EFE  0A                 	db	10
  1018   007EFF  0D                 	db	13
  1019   007F00  00                 	db	0
  1020   007F01                     STR_43:
  1021                           
  1022                           ; BSR set to: 0
  1023   007F01  55                 	db	85	;'U'
  1024   007F02  6E                 	db	110	;'n'
  1025   007F03  6B                 	db	107	;'k'
  1026   007F04  6E                 	db	110	;'n'
  1027   007F05  6F                 	db	111	;'o'
  1028   007F06  77                 	db	119	;'w'
  1029   007F07  6E                 	db	110	;'n'
  1030   007F08  20                 	db	32
  1031   007F09  6B                 	db	107	;'k'
  1032   007F0A  65                 	db	101	;'e'
  1033   007F0B  79                 	db	121	;'y'
  1034   007F0C  20                 	db	32
  1035   007F0D  25                 	db	37
  1036   007F0E  63                 	db	99	;'c'
  1037   007F0F  0D                 	db	13
  1038   007F10  0A                 	db	10
  1039   007F11  00                 	db	0
  1040   007F12                     STR_34:
  1041                           
  1042                           ; BSR set to: 0
  1043   007F12  34                 	db	52	;'4'
  1044   007F13  3A                 	db	58	;':'
  1045   007F14  20                 	db	32
  1046   007F15  31                 	db	49	;'1'
  1047   007F16  39                 	db	57	;'9'
  1048   007F17  32                 	db	50	;'2'
  1049   007F18  30                 	db	48	;'0'
  1050   007F19  30                 	db	48	;'0'
  1051   007F1A  20                 	db	32
  1052   007F1B  62                 	db	98	;'b'
  1053   007F1C  61                 	db	97	;'a'
  1054   007F1D  75                 	db	117	;'u'
  1055   007F1E  64                 	db	100	;'d'
  1056   007F1F  0D                 	db	13
  1057   007F20  0A                 	db	10
  1058   007F21  00                 	db	0
  1059   007F22                     STR_31:
  1060                           
  1061                           ; BSR set to: 0
  1062   007F22  31                 	db	49	;'1'
  1063   007F23  3A                 	db	58	;':'
  1064   007F24  20                 	db	32
  1065   007F25  31                 	db	49	;'1'
  1066   007F26  32                 	db	50	;'2'
  1067   007F27  30                 	db	48	;'0'
  1068   007F28  30                 	db	48	;'0'
  1069   007F29  20                 	db	32
  1070   007F2A  62                 	db	98	;'b'
  1071   007F2B  61                 	db	97	;'a'
  1072   007F2C  75                 	db	117	;'u'
  1073   007F2D  64                 	db	100	;'d'
  1074   007F2E  0D                 	db	13
  1075   007F2F  0A                 	db	10
  1076   007F30  00                 	db	0
  1077   007F31                     STR_32:
  1078                           
  1079                           ; BSR set to: 0
  1080   007F31  32                 	db	50	;'2'
  1081   007F32  3A                 	db	58	;':'
  1082   007F33  20                 	db	32
  1083   007F34  32                 	db	50	;'2'
  1084   007F35  34                 	db	52	;'4'
  1085   007F36  30                 	db	48	;'0'
  1086   007F37  30                 	db	48	;'0'
  1087   007F38  20                 	db	32
  1088   007F39  62                 	db	98	;'b'
  1089   007F3A  61                 	db	97	;'a'
  1090   007F3B  75                 	db	117	;'u'
  1091   007F3C  64                 	db	100	;'d'
  1092   007F3D  0D                 	db	13
  1093   007F3E  0A                 	db	10
  1094   007F3F  00                 	db	0
  1095   007F40                     STR_33:
  1096                           
  1097                           ; BSR set to: 0
  1098   007F40  33                 	db	51	;'3'
  1099   007F41  3A                 	db	58	;':'
  1100   007F42  20                 	db	32
  1101   007F43  39                 	db	57	;'9'
  1102   007F44  36                 	db	54	;'6'
  1103   007F45  30                 	db	48	;'0'
  1104   007F46  30                 	db	48	;'0'
  1105   007F47  20                 	db	32
  1106   007F48  62                 	db	98	;'b'
  1107   007F49  61                 	db	97	;'a'
  1108   007F4A  75                 	db	117	;'u'
  1109   007F4B  64                 	db	100	;'d'
  1110   007F4C  0D                 	db	13
  1111   007F4D  0A                 	db	10
  1112   007F4E  00                 	db	0
  1113   007F4F                     STR_16:
  1114                           
  1115                           ; BSR set to: 0
  1116   007F4F  3F                 	db	63	;'?'
  1117   007F50  3A                 	db	58	;':'
  1118   007F51  20                 	db	32
  1119   007F52  68                 	db	104	;'h'
  1120   007F53  65                 	db	101	;'e'
  1121   007F54  6C                 	db	108	;'l'
  1122   007F55  70                 	db	112	;'p'
  1123   007F56  20                 	db	32
  1124   007F57  6D                 	db	109	;'m'
  1125   007F58  65                 	db	101	;'e'
  1126   007F59  6E                 	db	110	;'n'
  1127   007F5A  75                 	db	117	;'u'
  1128   007F5B  0D                 	db	13
  1129   007F5C  0A                 	db	10
  1130   007F5D  00                 	db	0
  1131   007F5E                     STR_45:
  1132                           
  1133                           ; BSR set to: 0
  1134   007F5E  52                 	db	82	;'R'
  1135   007F5F  78                 	db	120	;'x'
  1136   007F60  45                 	db	69	;'E'
  1137   007F61  55                 	db	85	;'U'
  1138   007F62  53                 	db	83	;'S'
  1139   007F63  41                 	db	65	;'A'
  1140   007F64  52                 	db	82	;'R'
  1141   007F65  54                 	db	84	;'T'
  1142   007F66  32                 	db	50	;'2'
  1143   007F67  49                 	db	73	;'I'
  1144   007F68  53                 	db	83	;'S'
  1145   007F69  52                 	db	82	;'R'
  1146   007F6A  0A                 	db	10
  1147   007F6B  0D                 	db	13
  1148   007F6C  00                 	db	0
  1149   007F6D                     STR_46:
  1150                           
  1151                           ; BSR set to: 0
  1152   007F6D  20                 	db	32
  1153   007F6E  20                 	db	32
  1154   007F6F  52                 	db	82	;'R'
  1155   007F70  78                 	db	120	;'x'
  1156   007F71  44                 	db	68	;'D'
  1157   007F72  61                 	db	97	;'a'
  1158   007F73  74                 	db	116	;'t'
  1159   007F74  61                 	db	97	;'a'
  1160   007F75  3A                 	db	58	;':'
  1161   007F76  20                 	db	32
  1162   007F77  25                 	db	37
  1163   007F78  63                 	db	99	;'c'
  1164   007F79  0A                 	db	10
  1165   007F7A  0D                 	db	13
  1166   007F7B  00                 	db	0
  1167   007F7C                     STR_47:
  1168                           
  1169                           ; BSR set to: 0
  1170   007F7C  20                 	db	32
  1171   007F7D  20                 	db	32
  1172   007F7E  52                 	db	82	;'R'
  1173   007F7F  78                 	db	120	;'x'
  1174   007F80  43                 	db	67	;'C'
  1175   007F81  53                 	db	83	;'S'
  1176   007F82  75                 	db	117	;'u'
  1177   007F83  6D                 	db	109	;'m'
  1178   007F84  3A                 	db	58	;':'
  1179   007F85  20                 	db	32
  1180   007F86  25                 	db	37
  1181   007F87  75                 	db	117	;'u'
  1182   007F88  0A                 	db	10
  1183   007F89  0D                 	db	13
  1184   007F8A  00                 	db	0
  1185   007F8B                     STR_30:
  1186                           
  1187                           ; BSR set to: 0
  1188   007F8B  30                 	db	48	;'0'
  1189   007F8C  3A                 	db	58	;':'
  1190   007F8D  20                 	db	32
  1191   007F8E  33                 	db	51	;'3'
  1192   007F8F  30                 	db	48	;'0'
  1193   007F90  30                 	db	48	;'0'
  1194   007F91  20                 	db	32
  1195   007F92  62                 	db	98	;'b'
  1196   007F93  61                 	db	97	;'a'
  1197   007F94  75                 	db	117	;'u'
  1198   007F95  64                 	db	100	;'d'
  1199   007F96  0D                 	db	13
  1200   007F97  0A                 	db	10
  1201   007F98  00                 	db	0
  1202   007F99                     STR_13:
  1203                           
  1204                           ; BSR set to: 0
  1205   007F99  31                 	db	49	;'1'
  1206   007F9A  39                 	db	57	;'9'
  1207   007F9B  32                 	db	50	;'2'
  1208   007F9C  30                 	db	48	;'0'
  1209   007F9D  30                 	db	48	;'0'
  1210   007F9E  20                 	db	32
  1211   007F9F  42                 	db	66	;'B'
  1212   007FA0  61                 	db	97	;'a'
  1213   007FA1  75                 	db	117	;'u'
  1214   007FA2  64                 	db	100	;'d'
  1215   007FA3  0D                 	db	13
  1216   007FA4  0A                 	db	10
  1217   007FA5  00                 	db	0
  1218   007FA6                     STR_10:
  1219                           
  1220                           ; BSR set to: 0
  1221   007FA6  31                 	db	49	;'1'
  1222   007FA7  32                 	db	50	;'2'
  1223   007FA8  30                 	db	48	;'0'
  1224   007FA9  30                 	db	48	;'0'
  1225   007FAA  20                 	db	32
  1226   007FAB  42                 	db	66	;'B'
  1227   007FAC  61                 	db	97	;'a'
  1228   007FAD  75                 	db	117	;'u'
  1229   007FAE  64                 	db	100	;'d'
  1230   007FAF  0D                 	db	13
  1231   007FB0  0A                 	db	10
  1232   007FB1  00                 	db	0
  1233   007FB2                     STR_11:
  1234                           
  1235                           ; BSR set to: 0
  1236   007FB2  32                 	db	50	;'2'
  1237   007FB3  34                 	db	52	;'4'
  1238   007FB4  30                 	db	48	;'0'
  1239   007FB5  30                 	db	48	;'0'
  1240   007FB6  20                 	db	32
  1241   007FB7  42                 	db	66	;'B'
  1242   007FB8  61                 	db	97	;'a'
  1243   007FB9  75                 	db	117	;'u'
  1244   007FBA  64                 	db	100	;'d'
  1245   007FBB  0D                 	db	13
  1246   007FBC  0A                 	db	10
  1247   007FBD  00                 	db	0
  1248   007FBE                     STR_12:
  1249                           
  1250                           ; BSR set to: 0
  1251   007FBE  39                 	db	57	;'9'
  1252   007FBF  36                 	db	54	;'6'
  1253   007FC0  30                 	db	48	;'0'
  1254   007FC1  30                 	db	48	;'0'
  1255   007FC2  20                 	db	32
  1256   007FC3  42                 	db	66	;'B'
  1257   007FC4  61                 	db	97	;'a'
  1258   007FC5  75                 	db	117	;'u'
  1259   007FC6  64                 	db	100	;'d'
  1260   007FC7  0D                 	db	13
  1261   007FC8  0A                 	db	10
  1262   007FC9  00                 	db	0
  1263   007FCA                     STR_9:
  1264                           
  1265                           ; BSR set to: 0
  1266   007FCA  33                 	db	51	;'3'
  1267   007FCB  30                 	db	48	;'0'
  1268   007FCC  30                 	db	48	;'0'
  1269   007FCD  20                 	db	32
  1270   007FCE  42                 	db	66	;'B'
  1271   007FCF  61                 	db	97	;'a'
  1272   007FD0  75                 	db	117	;'u'
  1273   007FD1  64                 	db	100	;'d'
  1274   007FD2  0D                 	db	13
  1275   007FD3  0A                 	db	10
  1276   007FD4  00                 	db	0
  1277   007FD5                     STR_1:
  1278                           
  1279                           ; BSR set to: 0
  1280   007FD5  69                 	db	105	;'i'
  1281   007FD6  6E                 	db	110	;'n'
  1282   007FD7  4C                 	db	76	;'L'
  1283   007FD8  61                 	db	97	;'a'
  1284   007FD9  62                 	db	98	;'b'
  1285   007FDA  20                 	db	32
  1286   007FDB  36                 	db	54	;'6'
  1287   007FDC  0D                 	db	13
  1288   007FDD  0A                 	db	10
  1289   007FDE  00                 	db	0
  1290   007FDF                     STR_26:
  1291                           
  1292                           ; BSR set to: 0
  1293   007FDF  6F                 	db	111	;'o'
  1294   007FE0  3A                 	db	58	;':'
  1295   007FE1  20                 	db	32
  1296   007FE2  6F                 	db	111	;'o'
  1297   007FE3  6B                 	db	107	;'k'
  1298   007FE4  0D                 	db	13
  1299   007FE5  0A                 	db	10
  1300   007FE6  00                 	db	0
  1301   007FE7                     STR_17:
  1302                           
  1303                           ; BSR set to: 0
  1304   007FE7  6F                 	db	111	;'o'
  1305   007FE8  3A                 	db	58	;':'
  1306   007FE9  20                 	db	32
  1307   007FEA  6B                 	db	107	;'k'
  1308   007FEB  0D                 	db	13
  1309   007FEC  0A                 	db	10
  1310   007FED  00                 	db	0
  1311   007FEE                     STR_6:
  1312                           
  1313                           ; BSR set to: 0
  1314   007FEE  0D                 	db	13
  1315   007FEF  0A                 	db	10
  1316   007FF0  3E                 	db	62	;'>'
  1317   007FF1  20                 	db	32
  1318   007FF2  00                 	db	0
  1319   007FF3                     STR_44:
  1320                           
  1321                           ; BSR set to: 0
  1322   007FF3  0A                 	db	10
  1323   007FF4  0D                 	db	13
  1324   007FF5  3E                 	db	62	;'>'
  1325   007FF6  20                 	db	32
  1326   007FF7  00                 	db	0
  1327   007FF8                     STR_48:
  1328                           
  1329                           ; BSR set to: 0
  1330   007FF8  6C                 	db	108	;'l'
  1331   007FF9  6C                 	db	108	;'l'
  1332   007FFA  73                 	db	115	;'s'
  1333   007FFB  00                 	db	0
  1334   007FFC                     STR_37:
  1335                           
  1336                           ; BSR set to: 0
  1337   007FFC  25                 	db	37
  1338   007FFD  63                 	db	99	;'c'
  1339   007FFE  00                 	db	0
  1340   007FFF  00                 	db	0	; dummy byte at the end
  1341   000000                     
  1342                           ; #config settings
  1343                           
  1344                           	psect	cinit
  1345   002BA4                     __pcinit:
  1346                           	callstack 0
  1347   002BA4                     start_initialization:
  1348                           	callstack 0
  1349   002BA4                     __initialization:
  1350                           	callstack 0
  1351                           
  1352                           ; Initialize objects allocated to BANK1 (17 bytes)
  1353                           ; load TBLPTR registers with __pidataBANK1
  1354   002BA4  0EF2               	movlw	low __pidataBANK1
  1355   002BA6  6EF6               	movwf	tblptrl,c
  1356   002BA8  0E2F               	movlw	high __pidataBANK1
  1357   002BAA  6EF7               	movwf	tblptrh,c
  1358   002BAC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1359   002BAE  6EF8               	movwf	tblptru,c
  1360   002BB0  EE01  F0AC         	lfsr	0,__pdataBANK1
  1361   002BB4  EE10 F011          	lfsr	1,17
  1362   002BB8                     copy_data0:
  1363   002BB8  0009               	tblrd		*+
  1364   002BBA  CFF5 FFEE          	movff	tablat,postinc0
  1365   002BBE  50E5               	movf	postdec1,w,c
  1366   002BC0  50E1               	movf	fsr1l,w,c
  1367   002BC2  E1FA               	bnz	copy_data0
  1368                           
  1369                           ; Clear objects allocated to BANK1 (134 bytes)
  1370   002BC4  EE01  F000         	lfsr	0,__pbssBANK1
  1371   002BC8  0E86               	movlw	134
  1372   002BCA                     clear_0:
  1373   002BCA  6AEE               	clrf	postinc0,c
  1374   002BCC  06E8               	decf	wreg,f,c
  1375   002BCE  E1FD               	bnz	clear_0
  1376                           
  1377                           ; Clear objects allocated to BANK0 (26 bytes)
  1378   002BD0  EE00  F0CE         	lfsr	0,__pbssBANK0
  1379   002BD4  0E1A               	movlw	26
  1380   002BD6                     clear_1:
  1381   002BD6  6AEE               	clrf	postinc0,c
  1382   002BD8  06E8               	decf	wreg,f,c
  1383   002BDA  E1FD               	bnz	clear_1
  1384   002BDC                     end_of_initialization:
  1385                           	callstack 0
  1386   002BDC                     __end_of__initialization:
  1387                           	callstack 0
  1388   002BDC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1389   002BDE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1390   002BE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1391   002BE2  6EF8               	movwf	tblptru,c
  1392   002BE4  0100               	movlb	0
  1393   002BE6  EF7C  F000         	goto	_main	;jump to C main() function
  1394                           
  1395                           	psect	bssBANK0
  1396   0000CE                     __pbssBANK0:
  1397                           	callstack 0
  1398   0000CE                     _width:
  1399                           	callstack 0
  1400   0000CE                     	ds	2
  1401   0000D0                     _prec:
  1402                           	callstack 0
  1403   0000D0                     	ds	2
  1404   0000D2                     _EUSART2_FramingErrorHandler:
  1405                           	callstack 0
  1406   0000D2                     	ds	2
  1407   0000D4                     _EUSART2_RxDefaultInterruptHandler:
  1408                           	callstack 0
  1409   0000D4                     	ds	2
  1410   0000D6                     _EUSART2_TxDefaultInterruptHandler:
  1411                           	callstack 0
  1412   0000D6                     	ds	2
  1413   0000D8                     _timer1ReloadVal:
  1414                           	callstack 0
  1415   0000D8                     	ds	2
  1416   0000DA                     _flags:
  1417                           	callstack 0
  1418   0000DA                     	ds	1
  1419   0000DB                     rxEUSART2ISR@state:
  1420                           	callstack 0
  1421   0000DB                     	ds	1
  1422   0000DC                     rxEUSART2ISR@i:
  1423                           	callstack 0
  1424   0000DC                     	ds	1
  1425   0000DD                     _ti:
  1426                           	callstack 0
  1427   0000DD                     	ds	1
  1428   0000DE                     _ri:
  1429                           	callstack 0
  1430   0000DE                     	ds	1
  1431   0000DF                     _transmit:
  1432                           	callstack 0
  1433   0000DF                     	ds	1
  1434   0000E0                     _eusart1RxLastError:
  1435                           	callstack 0
  1436   0000E0                     	ds	1
  1437   0000E1                     _eusart2RxLastError:
  1438                           	callstack 0
  1439   0000E1                     	ds	1
  1440   0000E2                     _eusart2RxCount:
  1441                           	callstack 0
  1442   0000E2                     	ds	1
  1443   0000E3                     _eusart2RxTail:
  1444                           	callstack 0
  1445   0000E3                     	ds	1
  1446   0000E4                     _eusart2RxHead:
  1447                           	callstack 0
  1448   0000E4                     	ds	1
  1449   0000E5                     _eusart2TxBufferRemaining:
  1450                           	callstack 0
  1451   0000E5                     	ds	1
  1452   0000E6                     _eusart2TxTail:
  1453                           	callstack 0
  1454   0000E6                     	ds	1
  1455   0000E7                     _eusart2TxHead:
  1456                           	callstack 0
  1457   0000E7                     	ds	1
  1458                           
  1459                           	psect	bssBANK1
  1460   000100                     __pbssBANK1:
  1461                           	callstack 0
  1462   000100                     _eusart2RxStatusBuffer:
  1463                           	callstack 0
  1464   000100                     	ds	8
  1465   000108                     _eusart2RxBuffer:
  1466                           	callstack 0
  1467   000108                     	ds	8
  1468   000110                     _eusart2TxBuffer:
  1469                           	callstack 0
  1470   000110                     	ds	8
  1471   000118                     _EUSART1_ErrorHandler:
  1472                           	callstack 0
  1473   000118                     	ds	2
  1474   00011A                     _EUSART1_OverrunErrorHandler:
  1475                           	callstack 0
  1476   00011A                     	ds	2
  1477   00011C                     _EUSART1_FramingErrorHandler:
  1478                           	callstack 0
  1479   00011C                     	ds	2
  1480   00011E                     _EUSART2_ErrorHandler:
  1481                           	callstack 0
  1482   00011E                     	ds	2
  1483   000120                     _EUSART2_OverrunErrorHandler:
  1484                           	callstack 0
  1485   000120                     	ds	2
  1486   000122                     _rcsum:
  1487                           	callstack 0
  1488   000122                     	ds	1
  1489   000123                     _tsum:
  1490                           	callstack 0
  1491   000123                     	ds	1
  1492   000124                     _rsum:
  1493                           	callstack 0
  1494   000124                     	ds	1
  1495   000125                     _received:
  1496                           	callstack 0
  1497   000125                     	ds	1
  1498   000126                     _dbuf:
  1499                           	callstack 0
  1500   000126                     	ds	32
  1501   000146                     _transmitBuffer:
  1502                           	callstack 0
  1503   000146                     	ds	32
  1504   000166                     _receiveBuffer:
  1505                           	callstack 0
  1506   000166                     	ds	32
  1507                           
  1508                           	psect	dataBANK1
  1509   0001AC                     __pdataBANK1:
  1510                           	callstack 0
  1511   0001AC                     main@F6187:
  1512                           	callstack 0
  1513   0001AC                     	ds	10
  1514   0001B6                     stoa@F1149:
  1515                           	callstack 0
  1516   0001B6                     	ds	7
  1517                           
  1518                           	psect	cstackBANK1
  1519   000186                     __pcstackBANK1:
  1520                           	callstack 0
  1521   000186                     vfpfcnvrt@c:
  1522                           	callstack 0
  1523                           
  1524                           ; 1 bytes @ 0x0
  1525   000186                     	ds	1
  1526   000187                     vfpfcnvrt@done:
  1527                           	callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x1
  1530   000187                     	ds	2
  1531   000189                     _vfpfcnvrt$1976:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x3
  1535   000189                     	ds	2
  1536   00018B                     vfpfcnvrt@convarg:
  1537                           	callstack 0
  1538                           
  1539                           ; 8 bytes @ 0x5
  1540   00018B                     	ds	8
  1541   000193                     vfpfcnvrt@cp:
  1542                           	callstack 0
  1543                           
  1544                           ; 2 bytes @ 0xD
  1545   000193                     	ds	2
  1546   000195                     ?_printf:
  1547                           	callstack 0
  1548   000195                     printf@fmt:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0xF
  1552   000195                     	ds	8
  1553   00019D                     main@bitPeriod:
  1554                           	callstack 0
  1555                           
  1556                           ; 10 bytes @ 0x17
  1557   00019D                     	ds	10
  1558   0001A7                     main@cmd:
  1559                           	callstack 0
  1560                           
  1561                           ; 1 bytes @ 0x21
  1562   0001A7                     	ds	1
  1563   0001A8                     main@baudRateSelected:
  1564                           	callstack 0
  1565                           
  1566                           ; 1 bytes @ 0x22
  1567   0001A8                     	ds	1
  1568   0001A9                     main@letter:
  1569                           	callstack 0
  1570                           
  1571                           ; 1 bytes @ 0x23
  1572   0001A9                     	ds	1
  1573   0001AA                     main@i:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x24
  1577   0001AA                     	ds	2
  1578                           
  1579                           	psect	cstackBANK0
  1580   000060                     __pcstackBANK0:
  1581                           	callstack 0
  1582   000060                     ?i2_vfprintf:
  1583                           	callstack 0
  1584   000060                     i2vfprintf@fp:
  1585                           	callstack 0
  1586                           
  1587                           ; 2 bytes @ 0x0
  1588   000060                     	ds	2
  1589   000062                     i2vfprintf@fmt:
  1590                           	callstack 0
  1591                           
  1592                           ; 2 bytes @ 0x2
  1593   000062                     	ds	2
  1594   000064                     i2vfprintf@ap:
  1595                           	callstack 0
  1596                           
  1597                           ; 2 bytes @ 0x4
  1598   000064                     	ds	2
  1599   000066                     ?i2_printf:
  1600                           	callstack 0
  1601   000066                     i2printf@fmt:
  1602                           	callstack 0
  1603                           
  1604                           ; 2 bytes @ 0x6
  1605   000066                     	ds	4
  1606   00006A                     ??_rxEUSART2ISR:
  1607                           
  1608                           ; 1 bytes @ 0xA
  1609   00006A                     	ds	2
  1610   00006C                     ??_INTERRUPT_InterruptManager:
  1611                           
  1612                           ; 1 bytes @ 0xC
  1613   00006C                     	ds	12
  1614   000078                     ?_strlen:
  1615                           	callstack 0
  1616   000078                     ?_isdigit:
  1617                           	callstack 0
  1618   000078                     ?_strncmp:
  1619                           	callstack 0
  1620   000078                     ?_isspace:
  1621                           	callstack 0
  1622   000078                     ?___wmul:
  1623                           	callstack 0
  1624   000078                     ?___lodiv:
  1625                           	callstack 0
  1626   000078                     ?___lomod:
  1627                           	callstack 0
  1628   000078                     EUSART1_Write@txData:
  1629                           	callstack 0
  1630   000078                     TMR1_WriteTimer@timerVal:
  1631                           	callstack 0
  1632   000078                     EPWM2_LoadDutyValue@dutyValue:
  1633                           	callstack 0
  1634   000078                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1635                           	callstack 0
  1636   000078                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1637                           	callstack 0
  1638   000078                     EUSART2_SetErrorHandler@interruptHandler:
  1639                           	callstack 0
  1640   000078                     EUSART2_SetTxInterruptHandler@interruptHandler:
  1641                           	callstack 0
  1642   000078                     EUSART2_SetRxInterruptHandler@interruptHandler:
  1643                           	callstack 0
  1644   000078                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1645                           	callstack 0
  1646   000078                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1647                           	callstack 0
  1648   000078                     EUSART1_SetErrorHandler@interruptHandler:
  1649                           	callstack 0
  1650   000078                     ___wmul@multiplier:
  1651                           	callstack 0
  1652   000078                     isdigit@c:
  1653                           	callstack 0
  1654   000078                     isspace@c:
  1655                           	callstack 0
  1656   000078                     strlen@s:
  1657                           	callstack 0
  1658   000078                     strncmp@_l:
  1659                           	callstack 0
  1660   000078                     ___lodiv@dividend:
  1661                           	callstack 0
  1662   000078                     ___lomod@dividend:
  1663                           	callstack 0
  1664                           
  1665                           ; 8 bytes @ 0x18
  1666   000078                     	ds	1
  1667   000079                     putch@txData:
  1668                           	callstack 0
  1669                           
  1670                           ; 1 bytes @ 0x19
  1671   000079                     	ds	1
  1672   00007A                     ??_isdigit:
  1673   00007A                     ??_isspace:
  1674   00007A                     ??_EPWM2_LoadDutyValue:
  1675   00007A                     ___wmul@multiplicand:
  1676                           	callstack 0
  1677   00007A                     fputc@c:
  1678                           	callstack 0
  1679   00007A                     strlen@a:
  1680                           	callstack 0
  1681   00007A                     strncmp@_r:
  1682                           	callstack 0
  1683                           
  1684                           ; 2 bytes @ 0x1A
  1685   00007A                     	ds	2
  1686   00007C                     _isspace$2011:
  1687                           	callstack 0
  1688   00007C                     transmitCharacterOverIR@baudRate:
  1689                           	callstack 0
  1690   00007C                     ___wmul@product:
  1691                           	callstack 0
  1692   00007C                     fputc@fp:
  1693                           	callstack 0
  1694   00007C                     strncmp@n:
  1695                           	callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x1C
  1698   00007C                     	ds	2
  1699   00007E                     ??_fputc:
  1700   00007E                     ??_strncmp:
  1701   00007E                     ?_atoi:
  1702                           	callstack 0
  1703   00007E                     transmitCharacterOverIR@letter:
  1704                           	callstack 0
  1705   00007E                     atoi@s:
  1706                           	callstack 0
  1707                           
  1708                           ; 2 bytes @ 0x1E
  1709   00007E                     	ds	1
  1710   00007F                     transmitCharacterOverIR@mask:
  1711                           	callstack 0
  1712   00007F                     strncmp@l:
  1713                           	callstack 0
  1714                           
  1715                           ; 2 bytes @ 0x1F
  1716   00007F                     	ds	1
  1717   000080                     ??_atoi:
  1718   000080                     ___lodiv@divisor:
  1719                           	callstack 0
  1720   000080                     ___lomod@divisor:
  1721                           	callstack 0
  1722                           
  1723                           ; 8 bytes @ 0x20
  1724   000080                     	ds	1
  1725   000081                     strncmp@r:
  1726                           	callstack 0
  1727                           
  1728                           ; 2 bytes @ 0x21
  1729   000081                     	ds	2
  1730   000083                     ctoa@fp:
  1731                           	callstack 0
  1732   000083                     stoa@fp:
  1733                           	callstack 0
  1734   000083                     atoi@neg:
  1735                           	callstack 0
  1736   000083                     fputs@s:
  1737                           	callstack 0
  1738                           
  1739                           ; 2 bytes @ 0x23
  1740   000083                     	ds	2
  1741   000085                     ctoa@c:
  1742                           	callstack 0
  1743   000085                     stoa@s:
  1744                           	callstack 0
  1745   000085                     atoi@n:
  1746                           	callstack 0
  1747   000085                     fputs@fp:
  1748                           	callstack 0
  1749                           
  1750                           ; 2 bytes @ 0x25
  1751   000085                     	ds	1
  1752   000086                     ??_ctoa:
  1753                           
  1754                           ; 1 bytes @ 0x26
  1755   000086                     	ds	1
  1756   000087                     ??_stoa:
  1757   000087                     fputs@c:
  1758                           	callstack 0
  1759   000087                     ctoa@l:
  1760                           	callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x27
  1763   000087                     	ds	1
  1764   000088                     ___lomod@counter:
  1765                           	callstack 0
  1766   000088                     fputs@i:
  1767                           	callstack 0
  1768   000088                     stoa@nuls:
  1769                           	callstack 0
  1770   000088                     ___lodiv@quotient:
  1771                           	callstack 0
  1772                           
  1773                           ; 8 bytes @ 0x28
  1774   000088                     	ds	1
  1775   000089                     ctoa@w:
  1776                           	callstack 0
  1777                           
  1778                           ; 2 bytes @ 0x29
  1779   000089                     	ds	1
  1780   00008A                     pad@fp:
  1781                           	callstack 0
  1782                           
  1783                           ; 2 bytes @ 0x2A
  1784   00008A                     	ds	2
  1785   00008C                     pad@buf:
  1786                           	callstack 0
  1787                           
  1788                           ; 2 bytes @ 0x2C
  1789   00008C                     	ds	2
  1790   00008E                     pad@p:
  1791                           	callstack 0
  1792                           
  1793                           ; 2 bytes @ 0x2E
  1794   00008E                     	ds	1
  1795   00008F                     stoa@i:
  1796                           	callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x2F
  1799   00008F                     	ds	1
  1800   000090                     ??_pad:
  1801   000090                     ___lodiv@counter:
  1802                           	callstack 0
  1803                           
  1804                           ; 1 bytes @ 0x30
  1805   000090                     	ds	1
  1806   000091                     pad@i:
  1807                           	callstack 0
  1808   000091                     stoa@w:
  1809                           	callstack 0
  1810                           
  1811                           ; 2 bytes @ 0x31
  1812   000091                     	ds	2
  1813   000093                     pad@w:
  1814                           	callstack 0
  1815   000093                     stoa@cp:
  1816                           	callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x33
  1819   000093                     	ds	2
  1820   000095                     stoa@p:
  1821                           	callstack 0
  1822   000095                     utoa@fp:
  1823                           	callstack 0
  1824   000095                     xtoa@fp:
  1825                           	callstack 0
  1826                           
  1827                           ; 2 bytes @ 0x35
  1828   000095                     	ds	2
  1829   000097                     stoa@l:
  1830                           	callstack 0
  1831   000097                     utoa@d:
  1832                           	callstack 0
  1833   000097                     xtoa@d:
  1834                           	callstack 0
  1835                           
  1836                           ; 8 bytes @ 0x37
  1837   000097                     	ds	8
  1838   00009F                     ??_utoa:
  1839   00009F                     ??_xtoa:
  1840                           
  1841                           ; 1 bytes @ 0x3F
  1842   00009F                     	ds	8
  1843   0000A7                     utoa@p:
  1844                           	callstack 0
  1845   0000A7                     _xtoa$1956:
  1846                           	callstack 0
  1847                           
  1848                           ; 2 bytes @ 0x47
  1849   0000A7                     	ds	2
  1850   0000A9                     utoa@w:
  1851                           	callstack 0
  1852   0000A9                     xtoa@p:
  1853                           	callstack 0
  1854                           
  1855                           ; 2 bytes @ 0x49
  1856   0000A9                     	ds	2
  1857   0000AB                     xtoa@w:
  1858                           	callstack 0
  1859   0000AB                     utoa@n:
  1860                           	callstack 0
  1861                           
  1862                           ; 8 bytes @ 0x4B
  1863   0000AB                     	ds	2
  1864   0000AD                     xtoa@n:
  1865                           	callstack 0
  1866                           
  1867                           ; 8 bytes @ 0x4D
  1868   0000AD                     	ds	6
  1869   0000B3                     utoa@i:
  1870                           	callstack 0
  1871                           
  1872                           ; 2 bytes @ 0x53
  1873   0000B3                     	ds	2
  1874   0000B5                     xtoa@i:
  1875                           	callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x55
  1878   0000B5                     	ds	2
  1879   0000B7                     xtoa@c:
  1880                           	callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x57
  1883   0000B7                     	ds	1
  1884   0000B8                     vfpfcnvrt@fp:
  1885                           	callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x58
  1888   0000B8                     	ds	2
  1889   0000BA                     vfpfcnvrt@fmt:
  1890                           	callstack 0
  1891                           
  1892                           ; 2 bytes @ 0x5A
  1893   0000BA                     	ds	2
  1894   0000BC                     vfpfcnvrt@ap:
  1895                           	callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x5C
  1898   0000BC                     	ds	2
  1899   0000BE                     ??_vfpfcnvrt:
  1900                           
  1901                           ; 1 bytes @ 0x5E
  1902   0000BE                     	ds	4
  1903   0000C2                     ?_vfprintf:
  1904                           	callstack 0
  1905   0000C2                     vfprintf@fp:
  1906                           	callstack 0
  1907                           
  1908                           ; 2 bytes @ 0x62
  1909   0000C2                     	ds	2
  1910   0000C4                     vfprintf@fmt:
  1911                           	callstack 0
  1912                           
  1913                           ; 2 bytes @ 0x64
  1914   0000C4                     	ds	2
  1915   0000C6                     vfprintf@ap:
  1916                           	callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x66
  1919   0000C6                     	ds	2
  1920   0000C8                     vfprintf@cfmt:
  1921                           	callstack 0
  1922                           
  1923                           ; 2 bytes @ 0x68
  1924   0000C8                     	ds	2
  1925   0000CA                     printf@ap:
  1926                           	callstack 0
  1927                           
  1928                           ; 2 bytes @ 0x6A
  1929   0000CA                     	ds	2
  1930   0000CC                     ??_main:
  1931                           
  1932                           ; 1 bytes @ 0x6C
  1933   0000CC                     	ds	2
  1934                           
  1935                           	psect	cstackCOMRAM
  1936   000001                     __pcstackCOMRAM:
  1937                           	callstack 0
  1938   000001                     ?i2___wmul:
  1939                           	callstack 0
  1940   000001                     ?i2_strlen:
  1941                           	callstack 0
  1942   000001                     ?i2_strncmp:
  1943                           	callstack 0
  1944   000001                     ?i2___lodiv:
  1945                           	callstack 0
  1946   000001                     ?i2___lomod:
  1947                           	callstack 0
  1948   000001                     i2EUSART1_Write@txData:
  1949                           	callstack 0
  1950   000001                     i2___wmul@multiplier:
  1951                           	callstack 0
  1952   000001                     i2isdigit@c:
  1953                           	callstack 0
  1954   000001                     i2isspace@c:
  1955                           	callstack 0
  1956   000001                     i2strlen@s:
  1957                           	callstack 0
  1958   000001                     i2strncmp@_l:
  1959                           	callstack 0
  1960   000001                     i2___lodiv@dividend:
  1961                           	callstack 0
  1962   000001                     i2___lomod@dividend:
  1963                           	callstack 0
  1964                           
  1965                           ; 8 bytes @ 0x0
  1966   000001                     	ds	1
  1967   000002                     i2putch@txData:
  1968                           	callstack 0
  1969                           
  1970                           ; 1 bytes @ 0x1
  1971   000002                     	ds	1
  1972   000003                     ??i2_isspace:
  1973   000003                     i2___wmul@multiplicand:
  1974                           	callstack 0
  1975   000003                     i2fputc@c:
  1976                           	callstack 0
  1977   000003                     i2strlen@a:
  1978                           	callstack 0
  1979   000003                     i2strncmp@_r:
  1980                           	callstack 0
  1981                           
  1982                           ; 2 bytes @ 0x2
  1983   000003                     	ds	2
  1984   000005                     i2___wmul@product:
  1985                           	callstack 0
  1986   000005                     i2fputc@fp:
  1987                           	callstack 0
  1988   000005                     i2strncmp@n:
  1989                           	callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x4
  1992   000005                     	ds	2
  1993   000007                     ??i2_fputc:
  1994   000007                     ??i2_strncmp:
  1995   000007                     ?i2_atoi:
  1996                           	callstack 0
  1997   000007                     i2atoi@s:
  1998                           	callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x6
  2001   000007                     	ds	1
  2002   000008                     i2strncmp@l:
  2003                           	callstack 0
  2004                           
  2005                           ; 2 bytes @ 0x7
  2006   000008                     	ds	1
  2007   000009                     ??i2_atoi:
  2008   000009                     i2___lodiv@divisor:
  2009                           	callstack 0
  2010   000009                     i2___lomod@divisor:
  2011                           	callstack 0
  2012                           
  2013                           ; 8 bytes @ 0x8
  2014   000009                     	ds	1
  2015   00000A                     i2strncmp@r:
  2016                           	callstack 0
  2017                           
  2018                           ; 2 bytes @ 0x9
  2019   00000A                     	ds	2
  2020   00000C                     i2ctoa@fp:
  2021                           	callstack 0
  2022   00000C                     i2stoa@fp:
  2023                           	callstack 0
  2024   00000C                     i2atoi@neg:
  2025                           	callstack 0
  2026   00000C                     i2fputs@s:
  2027                           	callstack 0
  2028                           
  2029                           ; 2 bytes @ 0xB
  2030   00000C                     	ds	2
  2031   00000E                     i2ctoa@c:
  2032                           	callstack 0
  2033   00000E                     i2stoa@s:
  2034                           	callstack 0
  2035   00000E                     i2atoi@n:
  2036                           	callstack 0
  2037   00000E                     i2fputs@fp:
  2038                           	callstack 0
  2039                           
  2040                           ; 2 bytes @ 0xD
  2041   00000E                     	ds	1
  2042   00000F                     ??i2_ctoa:
  2043                           
  2044                           ; 1 bytes @ 0xE
  2045   00000F                     	ds	1
  2046   000010                     ??i2_stoa:
  2047   000010                     i2fputs@c:
  2048                           	callstack 0
  2049   000010                     i2ctoa@l:
  2050                           	callstack 0
  2051                           
  2052                           ; 2 bytes @ 0xF
  2053   000010                     	ds	1
  2054   000011                     i2___lomod@counter:
  2055                           	callstack 0
  2056   000011                     i2fputs@i:
  2057                           	callstack 0
  2058   000011                     i2stoa@nuls:
  2059                           	callstack 0
  2060   000011                     i2___lodiv@quotient:
  2061                           	callstack 0
  2062                           
  2063                           ; 8 bytes @ 0x10
  2064   000011                     	ds	1
  2065   000012                     i2ctoa@w:
  2066                           	callstack 0
  2067                           
  2068                           ; 2 bytes @ 0x11
  2069   000012                     	ds	1
  2070   000013                     i2pad@fp:
  2071                           	callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x12
  2074   000013                     	ds	2
  2075   000015                     i2pad@buf:
  2076                           	callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x14
  2079   000015                     	ds	2
  2080   000017                     i2pad@p:
  2081                           	callstack 0
  2082                           
  2083                           ; 2 bytes @ 0x16
  2084   000017                     	ds	1
  2085   000018                     i2stoa@i:
  2086                           	callstack 0
  2087                           
  2088                           ; 2 bytes @ 0x17
  2089   000018                     	ds	1
  2090   000019                     ??i2_pad:
  2091   000019                     i2___lodiv@counter:
  2092                           	callstack 0
  2093                           
  2094                           ; 1 bytes @ 0x18
  2095   000019                     	ds	1
  2096   00001A                     i2pad@i:
  2097                           	callstack 0
  2098   00001A                     i2stoa@w:
  2099                           	callstack 0
  2100                           
  2101                           ; 2 bytes @ 0x19
  2102   00001A                     	ds	2
  2103   00001C                     i2pad@w:
  2104                           	callstack 0
  2105   00001C                     i2stoa@cp:
  2106                           	callstack 0
  2107                           
  2108                           ; 2 bytes @ 0x1B
  2109   00001C                     	ds	2
  2110   00001E                     i2stoa@p:
  2111                           	callstack 0
  2112   00001E                     i2utoa@fp:
  2113                           	callstack 0
  2114   00001E                     i2xtoa@fp:
  2115                           	callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x1D
  2118   00001E                     	ds	2
  2119   000020                     i2stoa@l:
  2120                           	callstack 0
  2121   000020                     i2utoa@d:
  2122                           	callstack 0
  2123   000020                     i2xtoa@d:
  2124                           	callstack 0
  2125                           
  2126                           ; 8 bytes @ 0x1F
  2127   000020                     	ds	8
  2128   000028                     ??i2_utoa:
  2129   000028                     ??i2_xtoa:
  2130                           
  2131                           ; 1 bytes @ 0x27
  2132   000028                     	ds	8
  2133   000030                     i2utoa@p:
  2134                           	callstack 0
  2135   000030                     i2_xtoa$1956:
  2136                           	callstack 0
  2137                           
  2138                           ; 2 bytes @ 0x2F
  2139   000030                     	ds	2
  2140   000032                     i2utoa@w:
  2141                           	callstack 0
  2142   000032                     i2xtoa@p:
  2143                           	callstack 0
  2144                           
  2145                           ; 2 bytes @ 0x31
  2146   000032                     	ds	2
  2147   000034                     i2xtoa@w:
  2148                           	callstack 0
  2149   000034                     i2utoa@n:
  2150                           	callstack 0
  2151                           
  2152                           ; 8 bytes @ 0x33
  2153   000034                     	ds	2
  2154   000036                     i2xtoa@n:
  2155                           	callstack 0
  2156                           
  2157                           ; 8 bytes @ 0x35
  2158   000036                     	ds	6
  2159   00003C                     i2utoa@i:
  2160                           	callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x3B
  2163   00003C                     	ds	2
  2164   00003E                     i2xtoa@i:
  2165                           	callstack 0
  2166                           
  2167                           ; 2 bytes @ 0x3D
  2168   00003E                     	ds	2
  2169   000040                     i2xtoa@c:
  2170                           	callstack 0
  2171                           
  2172                           ; 1 bytes @ 0x3F
  2173   000040                     	ds	1
  2174   000041                     i2vfpfcnvrt@fp:
  2175                           	callstack 0
  2176                           
  2177                           ; 2 bytes @ 0x40
  2178   000041                     	ds	2
  2179   000043                     i2vfpfcnvrt@fmt:
  2180                           	callstack 0
  2181                           
  2182                           ; 2 bytes @ 0x42
  2183   000043                     	ds	2
  2184   000045                     i2vfpfcnvrt@ap:
  2185                           	callstack 0
  2186                           
  2187                           ; 2 bytes @ 0x44
  2188   000045                     	ds	2
  2189   000047                     ??i2_vfpfcnvrt:
  2190                           
  2191                           ; 1 bytes @ 0x46
  2192   000047                     	ds	4
  2193   00004B                     i2vfpfcnvrt@done:
  2194                           	callstack 0
  2195                           
  2196                           ; 2 bytes @ 0x4A
  2197   00004B                     	ds	2
  2198   00004D                     i2_vfpfcnvrt$1976:
  2199                           	callstack 0
  2200                           
  2201                           ; 2 bytes @ 0x4C
  2202   00004D                     	ds	2
  2203   00004F                     i2vfpfcnvrt@c:
  2204                           	callstack 0
  2205                           
  2206                           ; 1 bytes @ 0x4E
  2207   00004F                     	ds	1
  2208   000050                     i2vfpfcnvrt@convarg:
  2209                           	callstack 0
  2210                           
  2211                           ; 8 bytes @ 0x4F
  2212   000050                     	ds	8
  2213   000058                     i2vfpfcnvrt@cp:
  2214                           	callstack 0
  2215                           
  2216                           ; 2 bytes @ 0x57
  2217   000058                     	ds	2
  2218   00005A                     i2vfprintf@cfmt:
  2219                           	callstack 0
  2220                           
  2221                           ; 2 bytes @ 0x59
  2222   00005A                     	ds	2
  2223   00005C                     i2printf@ap:
  2224                           	callstack 0
  2225                           
  2226                           ; 2 bytes @ 0x5B
  2227   00005C                     	ds	2
  2228   00005E                     rxEUSART2ISR@character:
  2229                           	callstack 0
  2230                           
  2231                           ; 1 bytes @ 0x5D
  2232   00005E                     	ds	1
  2233                           
  2234 ;;
  2235 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2236 ;;
  2237 ;; *************** function _main *****************
  2238 ;; Defined at:
  2239 ;;		line 53 in file "main.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;		None
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  bitPeriod      10   23[BANK1 ] unsigned short [5]
  2244 ;;  i               2   36[BANK1 ] unsigned short 
  2245 ;;  letter          1   35[BANK1 ] unsigned char 
  2246 ;;  baudRateSele    1   34[BANK1 ] unsigned char 
  2247 ;;  cmd             1   33[BANK1 ] unsigned char 
  2248 ;;  mask            1    0        unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2258 ;;      Params:         0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0      15       0       0       0       0
  2260 ;;      Temps:          0       2       0       0       0       0       0
  2261 ;;      Totals:         0       2      15       0       0       0       0
  2262 ;;Total ram usage:       17 bytes
  2263 ;; Hardware stack levels required when called: 20
  2264 ;; This function calls:
  2265 ;;		_EPWM2_LoadDutyValue
  2266 ;;		_EUSART1_Read
  2267 ;;		_EUSART1_is_rx_ready
  2268 ;;		_EUSART2_Read
  2269 ;;		_EUSART2_SetRxInterruptHandler
  2270 ;;		_EUSART2_is_rx_ready
  2271 ;;		_SYSTEM_Initialize
  2272 ;;		_TMR1_HasOverflowOccured
  2273 ;;		_TMR1_WriteTimer
  2274 ;;		_printf
  2275 ;;		_transmitCharacterOverIR
  2276 ;; This function is called by:
  2277 ;;		Startup code after reset
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text0
  2282   0000F8                     __ptext0:
  2283                           	callstack 0
  2284   0000F8                     _main:
  2285                           	callstack 11
  2286   0000F8                     
  2287                           ;main.c: 56:     printf("Install a jumper wire from RC0 to RB7 ONLY AFTER unplugging PIC
      +                          Kit3\r\n");;main.c: 57:     printf("Install a jumper over IR_TX header pins\r\n");;main.
      +                          c: 58:     printf("\r\n> ");
  2288   0000F8  0E01               	movlw	1
  2289   0000FA  0101               	movlb	1	; () banked
  2290   0000FC  6FA8               	movwf	main@baudRateSelected& (0+255),b
  2291   0000FE                     
  2292                           ; BSR set to: 1
  2293                           ;main.c: 61:     {
  2294   0000FE  EE21  F0AC         	lfsr	2,main@F6187
  2295   000102  EE11  F09D         	lfsr	1,main@bitPeriod
  2296   000106  0E09               	movlw	9
  2297   000108                     u4661:
  2298   000108  CFDB FFE3          	movff	plusw2,plusw1
  2299   00010C  06E8               	decf	wreg,f,c
  2300   00010E  E2FC               	bc	u4661
  2301   000110                     
  2302                           ; BSR set to: 1
  2303                           ;main.c: 63:         {
  2304   000110  EC85  F017         	call	_SYSTEM_Initialize	;wreg free
  2305   000114                     
  2306                           ;main.c: 64:             cmd = EUSART1_Read();
  2307   000114  0E00               	movlw	0
  2308   000116  0100               	movlb	0	; () banked
  2309   000118  6F79               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  2310   00011A  0E00               	movlw	0
  2311   00011C  6F78               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  2312   00011E  ECAF  F016         	call	_EPWM2_LoadDutyValue	;wreg free
  2313   000122                     
  2314                           ;main.c: 67:             {
  2315   000122  0E00               	movlw	0
  2316   000124  0100               	movlb	0	; () banked
  2317   000126  6F79               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  2318   000128  0E00               	movlw	0
  2319   00012A  6F78               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  2320   00012C  ECDF  F016         	call	_TMR1_WriteTimer	;wreg free
  2321   000130                     
  2322                           ;main.c: 68:                 case '?':
  2323   000130  909E               	bcf	158,0,c	;volatile
  2324   000132                     l5225:
  2325   000132  ECE5  F017         	call	_TMR1_HasOverflowOccured	;wreg free
  2326   000136  0900               	iorlw	0
  2327   000138  B4D8               	btfsc	status,2,c
  2328   00013A  EFA1  F000         	goto	u4671
  2329   00013E  EFA3  F000         	goto	u4670
  2330   000142                     u4671:
  2331   000142  EF99  F000         	goto	l5225
  2332   000146                     u4670:
  2333   000146                     
  2334                           ;main.c: 72:                         case 0: printf("300 Baud\r\n");
  2335   000146  ECCE  F017         	call	_EUSART2_is_rx_ready	;wreg free
  2336   00014A  0900               	iorlw	0
  2337   00014C  B4D8               	btfsc	status,2,c
  2338   00014E  EFAB  F000         	goto	u4681
  2339   000152  EFAD  F000         	goto	u4680
  2340   000156                     u4681:
  2341   000156  EFAF  F000         	goto	l5231
  2342   00015A                     u4680:
  2343   00015A  EC64  F015         	call	_EUSART2_Read	;wreg free
  2344   00015E                     l5231:
  2345                           
  2346                           ;main.c: 73:                             break;
  2347   00015E  ECCE  F017         	call	_EUSART2_is_rx_ready	;wreg free
  2348   000162  0900               	iorlw	0
  2349   000164  B4D8               	btfsc	status,2,c
  2350   000166  EFB7  F000         	goto	u4691
  2351   00016A  EFB9  F000         	goto	u4690
  2352   00016E                     u4691:
  2353   00016E  EFBB  F000         	goto	l5235
  2354   000172                     u4690:
  2355   000172  EC64  F015         	call	_EUSART2_Read	;wreg free
  2356   000176                     l5235:
  2357                           
  2358                           ;main.c: 75:                             break;
  2359   000176  9AA3               	bcf	163,5,c	;volatile
  2360   000178                     
  2361                           ;main.c: 76:                         case 2: printf("2400 Baud\r\n");
  2362   000178  0E76               	movlw	low _rxEUSART2ISR
  2363   00017A  0100               	movlb	0	; () banked
  2364   00017C  6F78               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  2365   00017E  0E1F               	movlw	high _rxEUSART2ISR
  2366   000180  6F79               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  2367   000182  EC16  F018         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  2368   000186                     
  2369                           ;main.c: 77:                             break;
  2370   000186  8AA3               	bsf	163,5,c	;volatile
  2371   000188                     
  2372                           ;main.c: 78:                         case 3: printf("9600 Baud\r\n");
  2373   000188  8CF2               	bsf	242,6,c	;volatile
  2374   00018A                     
  2375                           ;main.c: 79:                             break;
  2376   00018A  8EF2               	bsf	242,7,c	;volatile
  2377   00018C                     
  2378                           ;main.c: 81:                             break;
  2379   00018C  0ED5               	movlw	low STR_1
  2380   00018E  0101               	movlb	1	; () banked
  2381   000190  6F95               	movwf	printf@fmt& (0+255),b
  2382   000192  0E7F               	movlw	high STR_1
  2383   000194  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2384   000196  EC36  F017         	call	_printf	;wreg free
  2385   00019A                     
  2386                           ;main.c: 82:                         default: printf("1200 Baud\r\n");
  2387   00019A  0E0C               	movlw	low STR_2
  2388   00019C  0101               	movlb	1	; () banked
  2389   00019E  6F95               	movwf	printf@fmt& (0+255),b
  2390   0001A0  0E7E               	movlw	high STR_2
  2391   0001A2  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2392   0001A4  EC36  F017         	call	_printf	;wreg free
  2393   0001A8                     
  2394                           ;main.c: 83:                             break;
  2395   0001A8  0E85               	movlw	low STR_3
  2396   0001AA  0101               	movlb	1	; () banked
  2397   0001AC  6F95               	movwf	printf@fmt& (0+255),b
  2398   0001AE  0E7E               	movlw	high STR_3
  2399   0001B0  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2400   0001B2  EC36  F017         	call	_printf	;wreg free
  2401   0001B6                     
  2402                           ;main.c: 84:                     }
  2403   0001B6  0E19               	movlw	low STR_4
  2404   0001B8  0101               	movlb	1	; () banked
  2405   0001BA  6F95               	movwf	printf@fmt& (0+255),b
  2406   0001BC  0E7C               	movlw	high STR_4
  2407   0001BE  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2408   0001C0  EC36  F017         	call	_printf	;wreg free
  2409   0001C4                     
  2410                           ;main.c: 85:                     printf("-----------------------------------------------
      +                          --\r\n");
  2411   0001C4  0EBB               	movlw	low STR_5
  2412   0001C6  0101               	movlb	1	; () banked
  2413   0001C8  6F95               	movwf	printf@fmt& (0+255),b
  2414   0001CA  0E7D               	movlw	high STR_5
  2415   0001CC  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2416   0001CE  EC36  F017         	call	_printf	;wreg free
  2417   0001D2                     
  2418                           ;main.c: 86:                     printf("?: help menu\r\n");
  2419   0001D2  0EEE               	movlw	low STR_6
  2420   0001D4  0101               	movlb	1	; () banked
  2421   0001D6  6F95               	movwf	printf@fmt& (0+255),b
  2422   0001D8  0E7F               	movlw	high STR_6
  2423   0001DA  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2424   0001DC  EC36  F017         	call	_printf	;wreg free
  2425   0001E0                     l5257:
  2426                           
  2427                           ;main.c: 89:                     printf("z: Clear the terminal\r\n");;main.c: 90:       
      +                                        printf("b: set the Baud rate of the sent characters\r\n");
  2428   0001E0  ECEF  F017         	call	_EUSART1_is_rx_ready	;wreg free
  2429   0001E4  0900               	iorlw	0
  2430   0001E6  B4D8               	btfsc	status,2,c
  2431   0001E8  EFF8  F000         	goto	u4701
  2432   0001EC  EFFA  F000         	goto	u4700
  2433   0001F0                     u4701:
  2434   0001F0  EFF0  F000         	goto	l5257
  2435   0001F4                     u4700:
  2436   0001F4                     
  2437                           ;main.c: 91:                     printf("m: enter message\n\r");;main.c: 92:            
      +                                   printf("S: transmit message using IR \n\r");
  2438   0001F4  EC21  F017         	call	_EUSART1_Read	;wreg free
  2439   0001F8  0101               	movlb	1	; () banked
  2440   0001FA  6FA7               	movwf	main@cmd& (0+255),b
  2441   0001FC                     
  2442                           ; BSR set to: 1
  2443                           ;main.c: 93:                     printf("R: recive message using EUSART2 interrupts (fro
      +                          m IR) \n\r");
  2444   0001FC  0E77               	movlw	low (STR_46+10)
  2445   0001FE  6F95               	movwf	printf@fmt& (0+255),b
  2446   000200  0E7F               	movlw	high (STR_46+10)
  2447   000202  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2448   000204  C1A7  F197         	movff	main@cmd,?_printf+2
  2449   000208  6B98               	clrf	(?_printf+3)& (0+255),b
  2450   00020A  EC36  F017         	call	_printf	;wreg free
  2451                           
  2452                           ;main.c: 94:                     printf("r: reset EUSART2\r\n");
  2453   00020E  EF94  F003         	goto	l5395
  2454   000212                     l5263:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;main.c: 97:                 case 'o':
  2458   000212  0ED7               	movlw	low STR_8
  2459   000214  0101               	movlb	1	; () banked
  2460   000216  6F95               	movwf	printf@fmt& (0+255),b
  2461   000218  0E7C               	movlw	high STR_8
  2462   00021A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2463   00021C  EC36  F017         	call	_printf	;wreg free
  2464                           
  2465                           ;main.c: 98:                     printf("o: ok\r\n");
  2466   000220  EF48  F001         	goto	l5279
  2467   000224                     l5265:
  2468                           
  2469                           ; BSR set to: 0
  2470   000224  0ECA               	movlw	low STR_9
  2471   000226  0101               	movlb	1	; () banked
  2472   000228  6F95               	movwf	printf@fmt& (0+255),b
  2473   00022A  0E7F               	movlw	high STR_9
  2474   00022C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2475   00022E  EC36  F017         	call	_printf	;wreg free
  2476                           
  2477                           ;main.c: 101:                     for (i = 0; i < 40; i++) printf("\n");
  2478   000232  EF6B  F001         	goto	l5281
  2479   000236                     l5267:
  2480                           
  2481                           ; BSR set to: 0
  2482   000236  0EA6               	movlw	low STR_10
  2483   000238  0101               	movlb	1	; () banked
  2484   00023A  6F95               	movwf	printf@fmt& (0+255),b
  2485   00023C  0E7F               	movlw	high STR_10
  2486   00023E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2487   000240  EC36  F017         	call	_printf	;wreg free
  2488                           
  2489                           ;main.c: 103:                     break;
  2490   000244  EF6B  F001         	goto	l5281
  2491   000248                     l5269:
  2492                           
  2493                           ; BSR set to: 0
  2494   000248  0EB2               	movlw	low STR_11
  2495   00024A  0101               	movlb	1	; () banked
  2496   00024C  6F95               	movwf	printf@fmt& (0+255),b
  2497   00024E  0E7F               	movlw	high STR_11
  2498   000250  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2499   000252  EC36  F017         	call	_printf	;wreg free
  2500                           
  2501                           ;main.c: 105:                     for (i = 0; i < 40; i++) printf("\n");
  2502   000256  EF6B  F001         	goto	l5281
  2503   00025A                     l5271:
  2504                           
  2505                           ; BSR set to: 0
  2506   00025A  0EBE               	movlw	low STR_12
  2507   00025C  0101               	movlb	1	; () banked
  2508   00025E  6F95               	movwf	printf@fmt& (0+255),b
  2509   000260  0E7F               	movlw	high STR_12
  2510   000262  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2511   000264  EC36  F017         	call	_printf	;wreg free
  2512                           
  2513                           ;main.c: 107:                 case 'b':
  2514   000268  EF6B  F001         	goto	l5281
  2515   00026C                     l5273:
  2516                           
  2517                           ; BSR set to: 0
  2518   00026C  0E99               	movlw	low STR_13
  2519   00026E  0101               	movlb	1	; () banked
  2520   000270  6F95               	movwf	printf@fmt& (0+255),b
  2521   000272  0E7F               	movlw	high STR_13
  2522   000274  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2523   000276  EC36  F017         	call	_printf	;wreg free
  2524                           
  2525                           ;main.c: 109:                     printf("0: 300 baud\r\n");
  2526   00027A  EF6B  F001         	goto	l5281
  2527   00027E                     l5275:
  2528                           
  2529                           ; BSR set to: 0
  2530   00027E  0EA6               	movlw	low STR_10
  2531   000280  0101               	movlb	1	; () banked
  2532   000282  6F95               	movwf	printf@fmt& (0+255),b
  2533   000284  0E7F               	movlw	high STR_10
  2534   000286  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2535   000288  EC36  F017         	call	_printf	;wreg free
  2536                           
  2537                           ;main.c: 111:                     printf("2: 2400 baud\r\n");
  2538   00028C  EF6B  F001         	goto	l5281
  2539   000290                     l5279:
  2540   000290  0101               	movlb	1	; () banked
  2541   000292  51A8               	movf	main@baudRateSelected& (0+255),w,b
  2542   000294  0100               	movlb	0	; () banked
  2543   000296  6FCC               	movwf	??_main& (0+255),b
  2544   000298  6BCD               	clrf	(??_main+1)& (0+255),b
  2545                           
  2546                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2547                           ; Switch size 1, requested type "simple"
  2548                           ; Number of cases is 1, Range of values is 0 to 0
  2549                           ; switch strategies available:
  2550                           ; Name         Instructions Cycles
  2551                           ; simple_byte            4     3 (average)
  2552                           ;	Chosen strategy is simple_byte
  2553   00029A  51CD               	movf	(??_main+1)& (0+255),w,b
  2554   00029C  0A00               	xorlw	0	; case 0
  2555   00029E  B4D8               	btfsc	status,2,c
  2556   0002A0  EF54  F001         	goto	l5667
  2557   0002A4  EF3F  F001         	goto	l5275
  2558   0002A8                     l5667:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ; Switch size 1, requested type "simple"
  2562                           ; Number of cases is 5, Range of values is 0 to 4
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte           16     9 (average)
  2566                           ;	Chosen strategy is simple_byte
  2567   0002A8  51CC               	movf	??_main& (0+255),w,b
  2568   0002AA  0A00               	xorlw	0	; case 0
  2569   0002AC  B4D8               	btfsc	status,2,c
  2570   0002AE  EF12  F001         	goto	l5265
  2571   0002B2  0A01               	xorlw	1	; case 1
  2572   0002B4  B4D8               	btfsc	status,2,c
  2573   0002B6  EF1B  F001         	goto	l5267
  2574   0002BA  0A03               	xorlw	3	; case 2
  2575   0002BC  B4D8               	btfsc	status,2,c
  2576   0002BE  EF24  F001         	goto	l5269
  2577   0002C2  0A01               	xorlw	1	; case 3
  2578   0002C4  B4D8               	btfsc	status,2,c
  2579   0002C6  EF2D  F001         	goto	l5271
  2580   0002CA  0A07               	xorlw	7	; case 4
  2581   0002CC  B4D8               	btfsc	status,2,c
  2582   0002CE  EF36  F001         	goto	l5273
  2583   0002D2  EF3F  F001         	goto	l5275
  2584   0002D6                     l5281:
  2585                           
  2586                           ;main.c: 113:                     printf("4: 19200 baud\r\n");
  2587   0002D6  0ED7               	movlw	low STR_8
  2588   0002D8  0101               	movlb	1	; () banked
  2589   0002DA  6F95               	movwf	printf@fmt& (0+255),b
  2590   0002DC  0E7C               	movlw	high STR_8
  2591   0002DE  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2592   0002E0  EC36  F017         	call	_printf	;wreg free
  2593                           
  2594                           ;main.c: 114:                     while ((EUSART1_is_rx_ready()));
  2595   0002E4  0E4F               	movlw	low STR_16
  2596   0002E6  0101               	movlb	1	; () banked
  2597   0002E8  6F95               	movwf	printf@fmt& (0+255),b
  2598   0002EA  0E7F               	movlw	high STR_16
  2599   0002EC  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2600   0002EE  EC36  F017         	call	_printf	;wreg free
  2601                           
  2602                           ;main.c: 115:                     baudRateSelected = EUSART1_Read() - '0';
  2603   0002F2  0EE7               	movlw	low STR_17
  2604   0002F4  0101               	movlb	1	; () banked
  2605   0002F6  6F95               	movwf	printf@fmt& (0+255),b
  2606   0002F8  0E7F               	movlw	high STR_17
  2607   0002FA  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2608   0002FC  EC36  F017         	call	_printf	;wreg free
  2609                           
  2610                           ;main.c: 116:                     switch (baudRateSelected)
  2611   000300  0EC6               	movlw	low STR_18
  2612   000302  0101               	movlb	1	; () banked
  2613   000304  6F95               	movwf	printf@fmt& (0+255),b
  2614   000306  0E7E               	movlw	high STR_18
  2615   000308  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2616   00030A  EC36  F017         	call	_printf	;wreg free
  2617                           
  2618                           ;main.c: 117:                     {
  2619   00030E  0E6D               	movlw	low STR_19
  2620   000310  0101               	movlb	1	; () banked
  2621   000312  6F95               	movwf	printf@fmt& (0+255),b
  2622   000314  0E7E               	movlw	high STR_19
  2623   000316  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2624   000318  EC36  F017         	call	_printf	;wreg free
  2625                           
  2626                           ;main.c: 118:                         case 0: SPBRGH2 = 0xD0;
  2627   00031C  0E0B               	movlw	low STR_20
  2628   00031E  0101               	movlb	1	; () banked
  2629   000320  6F95               	movwf	printf@fmt& (0+255),b
  2630   000322  0E7D               	movlw	high STR_20
  2631   000324  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2632   000326  EC36  F017         	call	_printf	;wreg free
  2633                           
  2634                           ;main.c: 119:                             SPBRG2 = 0x54;
  2635   00032A  0EEE               	movlw	low STR_21
  2636   00032C  0101               	movlb	1	; () banked
  2637   00032E  6F95               	movwf	printf@fmt& (0+255),b
  2638   000330  0E7E               	movlw	high STR_21
  2639   000332  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2640   000334  EC36  F017         	call	_printf	;wreg free
  2641                           
  2642                           ;main.c: 120:                             break;
  2643   000338  0E2E               	movlw	low STR_22
  2644   00033A  0101               	movlb	1	; () banked
  2645   00033C  6F95               	movwf	printf@fmt& (0+255),b
  2646   00033E  0E7E               	movlw	high STR_22
  2647   000340  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2648   000342  EC36  F017         	call	_printf	;wreg free
  2649                           
  2650                           ;main.c: 121:                         case 1: SPBRGH2 = 0x34;
  2651   000346  0E9F               	movlw	low STR_23
  2652   000348  0101               	movlb	1	; () banked
  2653   00034A  6F95               	movwf	printf@fmt& (0+255),b
  2654   00034C  0E7C               	movlw	high STR_23
  2655   00034E  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2656   000350  EC36  F017         	call	_printf	;wreg free
  2657                           
  2658                           ;main.c: 122:                             SPBRG2 = 0x14;
  2659   000354  0EDB               	movlw	low STR_24
  2660   000356  0101               	movlb	1	; () banked
  2661   000358  6F95               	movwf	printf@fmt& (0+255),b
  2662   00035A  0E7E               	movlw	high STR_24
  2663   00035C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2664   00035E  EC36  F017         	call	_printf	;wreg free
  2665                           
  2666                           ;main.c: 123:                             break;
  2667   000362  0ED7               	movlw	low STR_8
  2668   000364  0101               	movlb	1	; () banked
  2669   000366  6F95               	movwf	printf@fmt& (0+255),b
  2670   000368  0E7C               	movlw	high STR_8
  2671   00036A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2672   00036C  EC36  F017         	call	_printf	;wreg free
  2673                           
  2674                           ;main.c: 124:                         case 2: SPBRGH2 = 0x1A;
  2675   000370  EFC7  F003         	goto	l5397
  2676   000374                     l5283:
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;main.c: 126:                             break;
  2680   000374  0EDF               	movlw	low STR_26
  2681   000376  0101               	movlb	1	; () banked
  2682   000378  6F95               	movwf	printf@fmt& (0+255),b
  2683   00037A  0E7F               	movlw	high STR_26
  2684   00037C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2685   00037E  EC36  F017         	call	_printf	;wreg free
  2686                           
  2687                           ;main.c: 127:                         case 3: SPBRGH2 = 0x06;
  2688   000382  EFC7  F003         	goto	l5397
  2689   000386                     l5285:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;main.c: 129:                             break;
  2693   000386  0E00               	movlw	0
  2694   000388  0101               	movlb	1	; () banked
  2695   00038A  6FAB               	movwf	(main@i+1)& (0+255),b
  2696   00038C  0E00               	movlw	0
  2697   00038E  6FAA               	movwf	main@i& (0+255),b
  2698   000390                     l5291:
  2699                           
  2700                           ; BSR set to: 1
  2701   000390  0E09               	movlw	low (STR_8+50)
  2702   000392  6F95               	movwf	printf@fmt& (0+255),b
  2703   000394  0E7D               	movlw	high (STR_8+50)
  2704   000396  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2705   000398  EC36  F017         	call	_printf	;wreg free
  2706   00039C  0101               	movlb	1	; () banked
  2707   00039E  4BAA               	infsnz	main@i& (0+255),f,b
  2708   0003A0  2BAB               	incf	(main@i+1)& (0+255),f,b
  2709   0003A2                     
  2710                           ; BSR set to: 1
  2711   0003A2  51AB               	movf	(main@i+1)& (0+255),w,b
  2712   0003A4  E109               	bnz	u4710
  2713   0003A6  0E28               	movlw	40
  2714   0003A8  5DAA               	subwf	main@i& (0+255),w,b
  2715   0003AA  A0D8               	btfss	status,0,c
  2716   0003AC  EFDA  F001         	goto	u4711
  2717   0003B0  EFDC  F001         	goto	u4710
  2718   0003B4                     u4711:
  2719   0003B4  EFC8  F001         	goto	l5291
  2720   0003B8                     u4710:
  2721   0003B8                     
  2722                           ; BSR set to: 1
  2723   0003B8  00FF               	reset		;# 
  2724                           
  2725                           ;main.c: 131:                             SPBRG2 = 0x40;
  2726   0003BA  EFC7  F003         	goto	l5397
  2727   0003BE                     l5297:
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;main.c: 133:                         default: SPBRGH2 = 0x34;
  2731   0003BE  0E00               	movlw	0
  2732   0003C0  0101               	movlb	1	; () banked
  2733   0003C2  6FAB               	movwf	(main@i+1)& (0+255),b
  2734   0003C4  0E00               	movlw	0
  2735   0003C6  6FAA               	movwf	main@i& (0+255),b
  2736   0003C8                     l5303:
  2737                           
  2738                           ; BSR set to: 1
  2739   0003C8  0E09               	movlw	low (STR_8+50)
  2740   0003CA  6F95               	movwf	printf@fmt& (0+255),b
  2741   0003CC  0E7D               	movlw	high (STR_8+50)
  2742   0003CE  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2743   0003D0  EC36  F017         	call	_printf	;wreg free
  2744   0003D4  0101               	movlb	1	; () banked
  2745   0003D6  4BAA               	infsnz	main@i& (0+255),f,b
  2746   0003D8  2BAB               	incf	(main@i+1)& (0+255),f,b
  2747   0003DA                     
  2748                           ; BSR set to: 1
  2749   0003DA  51AB               	movf	(main@i+1)& (0+255),w,b
  2750   0003DC  E109               	bnz	u4720
  2751   0003DE  0E28               	movlw	40
  2752   0003E0  5DAA               	subwf	main@i& (0+255),w,b
  2753   0003E2  A0D8               	btfss	status,0,c
  2754   0003E4  EFF6  F001         	goto	u4721
  2755   0003E8  EFF8  F001         	goto	u4720
  2756   0003EC                     u4721:
  2757   0003EC  EFE4  F001         	goto	l5303
  2758   0003F0                     u4720:
  2759   0003F0  EFC7  F003         	goto	l5397
  2760   0003F4                     l5309:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;main.c: 136:                     }
  2764   0003F4  0E65               	movlw	low STR_29
  2765   0003F6  0101               	movlb	1	; () banked
  2766   0003F8  6F95               	movwf	printf@fmt& (0+255),b
  2767   0003FA  0E7D               	movlw	high STR_29
  2768   0003FC  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2769   0003FE  EC36  F017         	call	_printf	;wreg free
  2770                           
  2771                           ;main.c: 137:                     printf("Baud rate assigned %02x:%02x\r\n", SPBRGH2, SP
      +                          BRG2);
  2772   000402  0E8B               	movlw	low STR_30
  2773   000404  0101               	movlb	1	; () banked
  2774   000406  6F95               	movwf	printf@fmt& (0+255),b
  2775   000408  0E7F               	movlw	high STR_30
  2776   00040A  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2777   00040C  EC36  F017         	call	_printf	;wreg free
  2778                           
  2779                           ;main.c: 138:                     break;
  2780   000410  0E22               	movlw	low STR_31
  2781   000412  0101               	movlb	1	; () banked
  2782   000414  6F95               	movwf	printf@fmt& (0+255),b
  2783   000416  0E7F               	movlw	high STR_31
  2784   000418  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2785   00041A  EC36  F017         	call	_printf	;wreg free
  2786                           
  2787                           ;main.c: 139:                 case 'm':
  2788   00041E  0E31               	movlw	low STR_32
  2789   000420  0101               	movlb	1	; () banked
  2790   000422  6F95               	movwf	printf@fmt& (0+255),b
  2791   000424  0E7F               	movlw	high STR_32
  2792   000426  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2793   000428  EC36  F017         	call	_printf	;wreg free
  2794                           
  2795                           ;main.c: 140:                     i = 0;
  2796   00042C  0E40               	movlw	low STR_33
  2797   00042E  0101               	movlb	1	; () banked
  2798   000430  6F95               	movwf	printf@fmt& (0+255),b
  2799   000432  0E7F               	movlw	high STR_33
  2800   000434  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2801   000436  EC36  F017         	call	_printf	;wreg free
  2802                           
  2803                           ;main.c: 141:                     tsum = 0;
  2804   00043A  0E12               	movlw	low STR_34
  2805   00043C  0101               	movlb	1	; () banked
  2806   00043E  6F95               	movwf	printf@fmt& (0+255),b
  2807   000440  0E7F               	movlw	high STR_34
  2808   000442  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2809   000444  EC36  F017         	call	_printf	;wreg free
  2810   000448                     l5311:
  2811   000448  ECEF  F017         	call	_EUSART1_is_rx_ready	;wreg free
  2812   00044C  0900               	iorlw	0
  2813   00044E  A4D8               	btfss	status,2,c
  2814   000450  EF2C  F002         	goto	u4731
  2815   000454  EF2E  F002         	goto	u4730
  2816   000458                     u4731:
  2817   000458  EF24  F002         	goto	l5311
  2818   00045C                     u4730:
  2819   00045C                     
  2820                           ;main.c: 143:                     letter = EUSART1_Read();
  2821   00045C  EC21  F017         	call	_EUSART1_Read	;wreg free
  2822   000460  0FD0               	addlw	208
  2823   000462  0101               	movlb	1	; () banked
  2824   000464  6FA8               	movwf	main@baudRateSelected& (0+255),b
  2825                           
  2826                           ;main.c: 144:                     while(letter != '\r')
  2827   000466  EF53  F002         	goto	l5329
  2828   00046A                     l5315:
  2829                           
  2830                           ; BSR set to: 0
  2831   00046A  0ED0               	movlw	208
  2832   00046C  6E76               	movwf	118,c	;volatile
  2833                           
  2834                           ;main.c: 147:                         {
  2835   00046E  0E54               	movlw	84
  2836   000470  6E75               	movwf	117,c	;volatile
  2837                           
  2838                           ;main.c: 148:                             i--;
  2839   000472  EF75  F002         	goto	l5331
  2840   000476                     l5317:
  2841                           
  2842                           ; BSR set to: 0
  2843   000476  0E34               	movlw	52
  2844   000478  6E76               	movwf	118,c	;volatile
  2845                           
  2846                           ;main.c: 150:                         }
  2847   00047A  0E14               	movlw	20
  2848   00047C  6E75               	movwf	117,c	;volatile
  2849                           
  2850                           ;main.c: 151:                         else
  2851   00047E  EF75  F002         	goto	l5331
  2852   000482                     l5319:
  2853                           
  2854                           ; BSR set to: 0
  2855   000482  0E1A               	movlw	26
  2856   000484  6E76               	movwf	118,c	;volatile
  2857                           
  2858                           ;main.c: 153:                             if(i > 32 -2) break;
  2859   000486  0E0A               	movlw	10
  2860   000488  6E75               	movwf	117,c	;volatile
  2861                           
  2862                           ;main.c: 154:                             transmitBuffer[i] = letter;
  2863   00048A  EF75  F002         	goto	l5331
  2864   00048E                     l5321:
  2865                           
  2866                           ; BSR set to: 0
  2867   00048E  0E06               	movlw	6
  2868   000490  6E76               	movwf	118,c	;volatile
  2869                           
  2870                           ;main.c: 156:                             i++;
  2871   000492  0E82               	movlw	130
  2872   000494  6E75               	movwf	117,c	;volatile
  2873                           
  2874                           ;main.c: 157:                         }
  2875   000496  EF75  F002         	goto	l5331
  2876   00049A                     l5323:
  2877                           
  2878                           ; BSR set to: 0
  2879   00049A  0E03               	movlw	3
  2880   00049C  6E76               	movwf	118,c	;volatile
  2881                           
  2882                           ;main.c: 159:                         letter = EUSART1_Read();
  2883   00049E  0E40               	movlw	64
  2884   0004A0  6E75               	movwf	117,c	;volatile
  2885                           
  2886                           ;main.c: 160:                     }
  2887   0004A2  EF75  F002         	goto	l5331
  2888   0004A6                     l5329:
  2889                           
  2890                           ; BSR set to: 1
  2891   0004A6  51A8               	movf	main@baudRateSelected& (0+255),w,b
  2892   0004A8  0100               	movlb	0	; () banked
  2893   0004AA  6FCC               	movwf	??_main& (0+255),b
  2894   0004AC  6BCD               	clrf	(??_main+1)& (0+255),b
  2895                           
  2896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2897                           ; Switch size 1, requested type "simple"
  2898                           ; Number of cases is 1, Range of values is 0 to 0
  2899                           ; switch strategies available:
  2900                           ; Name         Instructions Cycles
  2901                           ; simple_byte            4     3 (average)
  2902                           ;	Chosen strategy is simple_byte
  2903   0004AE  51CD               	movf	(??_main+1)& (0+255),w,b
  2904   0004B0  0A00               	xorlw	0	; case 0
  2905   0004B2  B4D8               	btfsc	status,2,c
  2906   0004B4  EF5E  F002         	goto	l5669
  2907   0004B8  EF3B  F002         	goto	l5317
  2908   0004BC                     l5669:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ; Switch size 1, requested type "simple"
  2912                           ; Number of cases is 5, Range of values is 0 to 4
  2913                           ; switch strategies available:
  2914                           ; Name         Instructions Cycles
  2915                           ; simple_byte           16     9 (average)
  2916                           ;	Chosen strategy is simple_byte
  2917   0004BC  51CC               	movf	??_main& (0+255),w,b
  2918   0004BE  0A00               	xorlw	0	; case 0
  2919   0004C0  B4D8               	btfsc	status,2,c
  2920   0004C2  EF35  F002         	goto	l5315
  2921   0004C6  0A01               	xorlw	1	; case 1
  2922   0004C8  B4D8               	btfsc	status,2,c
  2923   0004CA  EF3B  F002         	goto	l5317
  2924   0004CE  0A03               	xorlw	3	; case 2
  2925   0004D0  B4D8               	btfsc	status,2,c
  2926   0004D2  EF41  F002         	goto	l5319
  2927   0004D6  0A01               	xorlw	1	; case 3
  2928   0004D8  B4D8               	btfsc	status,2,c
  2929   0004DA  EF47  F002         	goto	l5321
  2930   0004DE  0A07               	xorlw	7	; case 4
  2931   0004E0  B4D8               	btfsc	status,2,c
  2932   0004E2  EF4D  F002         	goto	l5323
  2933   0004E6  EF3B  F002         	goto	l5317
  2934   0004EA                     l5331:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;main.c: 165:                     break;
  2938   0004EA  0E4E               	movlw	low STR_35
  2939   0004EC  0101               	movlb	1	; () banked
  2940   0004EE  6F95               	movwf	printf@fmt& (0+255),b
  2941   0004F0  0E7E               	movlw	high STR_35
  2942   0004F2  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2943   0004F4  CF76 F197          	movff	3958,?_printf+2	;volatile
  2944   0004F8  6B98               	clrf	(?_printf+3)& (0+255),b
  2945   0004FA  CF75 F199          	movff	3957,?_printf+4	;volatile
  2946   0004FE  6B9A               	clrf	(?_printf+5)& (0+255),b
  2947   000500  EC36  F017         	call	_printf	;wreg free
  2948                           
  2949                           ;main.c: 166:                 case 'S':
  2950   000504  EFC7  F003         	goto	l5397
  2951   000508                     l5333:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;main.c: 168:                     while(transmitBuffer[i] != '\0')
  2955   000508  0E00               	movlw	0
  2956   00050A  0101               	movlb	1	; () banked
  2957   00050C  6FAB               	movwf	(main@i+1)& (0+255),b
  2958   00050E  0E00               	movlw	0
  2959   000510  6FAA               	movwf	main@i& (0+255),b
  2960                           
  2961                           ;main.c: 169:                     {
  2962   000512  0E00               	movlw	0
  2963   000514  6F23               	movwf	_tsum& (0+255),b
  2964   000516                     
  2965                           ; BSR set to: 1
  2966                           ;main.c: 170:                         transmitCharacterOverIR(transmitBuffer[i], bitPeri
      +                          od[baudRateSelected]);
  2967   000516  0EE5               	movlw	low STR_36
  2968   000518  6F95               	movwf	printf@fmt& (0+255),b
  2969   00051A  0E7D               	movlw	high STR_36
  2970   00051C  6F96               	movwf	(printf@fmt+1)& (0+255),b
  2971   00051E  EC36  F017         	call	_printf	;wreg free
  2972   000522                     l5337:
  2973                           
  2974                           ;main.c: 171:                         i++;
  2975   000522  EC21  F017         	call	_EUSART1_Read	;wreg free
  2976   000526  0101               	movlb	1	; () banked
  2977   000528  6FA9               	movwf	main@letter& (0+255),b
  2978                           
  2979                           ;main.c: 172:                     }
  2980   00052A  EFD1  F002         	goto	l5359
  2981   00052E                     l5339:
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;main.c: 173:                     transmitCharacterOverIR('\0', bitPeriod[baudRateSelect
      +                          ed]);;main.c: 174:                     transmitCharacterOverIR(tsum, bitPeriod[baudRateS
      +                          elected]);
  2985   00052E  0E08               	movlw	8
  2986   000530  19A9               	xorwf	main@letter& (0+255),w,b
  2987   000532  A4D8               	btfss	status,2,c
  2988   000534  EF9E  F002         	goto	u4741
  2989   000538  EFA0  F002         	goto	u4740
  2990   00053C                     u4741:
  2991   00053C  EFAD  F002         	goto	l5345
  2992   000540                     u4740:
  2993   000540                     
  2994                           ; BSR set to: 1
  2995                           ;main.c: 175:                     printf("Tranmitted\n\r  message: %s\n\r  checksum: %u\
      +                          n\r", transmitBuffer, tsum);;main.c: 176:                     break;
  2996   000540  07AA               	decf	main@i& (0+255),f,b
  2997   000542  A0D8               	btfss	status,0,c
  2998   000544  07AB               	decf	(main@i+1)& (0+255),f,b
  2999   000546                     
  3000                           ; BSR set to: 1
  3001                           ;main.c: 177:                 case 'R':
  3002   000546  0E46               	movlw	low _transmitBuffer
  3003   000548  25AA               	addwf	main@i& (0+255),w,b
  3004   00054A  6ED9               	movwf	fsr2l,c
  3005   00054C  0E01               	movlw	high _transmitBuffer
  3006   00054E  21AB               	addwfc	(main@i+1)& (0+255),w,b
  3007   000550  6EDA               	movwf	fsr2h,c
  3008   000552  50DF               	movf	indf2,w,c
  3009   000554  5F23               	subwf	_tsum& (0+255),f,b
  3010                           
  3011                           ;main.c: 178:                     if(received == 1)
  3012   000556  EFC6  F002         	goto	l5355
  3013   00055A                     l5345:
  3014                           
  3015                           ; BSR set to: 1
  3016                           ;main.c: 180:                         printf("Received\n\r  message: %s\n\r  checksum: a
      +                          ctual(%u), expected(%u)\n\r", receiveBuffer, rsum, rcsum);;main.c: 181:                 
      +                                  received = 0;
  3017   00055A  51AB               	movf	(main@i+1)& (0+255),w,b
  3018   00055C  E109               	bnz	u4750
  3019   00055E  0E1F               	movlw	31
  3020   000560  5DAA               	subwf	main@i& (0+255),w,b
  3021   000562  A0D8               	btfss	status,0,c
  3022   000564  EFB6  F002         	goto	u4751
  3023   000568  EFB8  F002         	goto	u4750
  3024   00056C                     u4751:
  3025   00056C  EFBA  F002         	goto	l5349
  3026   000570                     u4750:
  3027   000570  EFDA  F002         	goto	l5361
  3028   000574                     l5349:
  3029                           
  3030                           ; BSR set to: 1
  3031                           ;main.c: 182:                     }
  3032   000574  0E46               	movlw	low _transmitBuffer
  3033   000576  25AA               	addwf	main@i& (0+255),w,b
  3034   000578  6ED9               	movwf	fsr2l,c
  3035   00057A  0E01               	movlw	high _transmitBuffer
  3036   00057C  21AB               	addwfc	(main@i+1)& (0+255),w,b
  3037   00057E  6EDA               	movwf	fsr2h,c
  3038   000580  C1A9  FFDF         	movff	main@letter,indf2
  3039   000584                     
  3040                           ; BSR set to: 1
  3041                           ;main.c: 183:                     else printf("No message received\n\r");
  3042   000584  51A9               	movf	main@letter& (0+255),w,b
  3043   000586  2723               	addwf	_tsum& (0+255),f,b
  3044   000588                     
  3045                           ; BSR set to: 1
  3046                           ;main.c: 184:                     break;
  3047   000588  4BAA               	infsnz	main@i& (0+255),f,b
  3048   00058A  2BAB               	incf	(main@i+1)& (0+255),f,b
  3049   00058C                     l5355:
  3050                           
  3051                           ; BSR set to: 1
  3052                           ;main.c: 186:                     RCSTA2bits.CREN = 0;
  3053   00058C  0EFC               	movlw	low STR_37
  3054   00058E  6F95               	movwf	printf@fmt& (0+255),b
  3055   000590  0E7F               	movlw	high STR_37
  3056   000592  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3057   000594  C1A9  F197         	movff	main@letter,?_printf+2
  3058   000598  6B98               	clrf	(?_printf+3)& (0+255),b
  3059   00059A  EC36  F017         	call	_printf	;wreg free
  3060   00059E  EF91  F002         	goto	l5337
  3061   0005A2                     l5359:
  3062                           
  3063                           ; BSR set to: 1
  3064                           ;main.c: 172:                     }
  3065   0005A2  0E0D               	movlw	13
  3066   0005A4  19A9               	xorwf	main@letter& (0+255),w,b
  3067   0005A6  A4D8               	btfss	status,2,c
  3068   0005A8  EFD8  F002         	goto	u4761
  3069   0005AC  EFDA  F002         	goto	u4760
  3070   0005B0                     u4761:
  3071   0005B0  EF97  F002         	goto	l5339
  3072   0005B4                     u4760:
  3073   0005B4                     l5361:
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;main.c: 189:                     break;
  3077   0005B4  0E46               	movlw	low _transmitBuffer
  3078   0005B6  25AA               	addwf	main@i& (0+255),w,b
  3079   0005B8  6ED9               	movwf	fsr2l,c
  3080   0005BA  0E01               	movlw	high _transmitBuffer
  3081   0005BC  21AB               	addwfc	(main@i+1)& (0+255),w,b
  3082   0005BE  6EDA               	movwf	fsr2h,c
  3083   0005C0  0E00               	movlw	0
  3084   0005C2  6EDF               	movwf	indf2,c
  3085   0005C4                     
  3086                           ; BSR set to: 1
  3087                           ;main.c: 190:                 default:
  3088   0005C4  4BAA               	infsnz	main@i& (0+255),f,b
  3089   0005C6  2BAB               	incf	(main@i+1)& (0+255),f,b
  3090   0005C8                     
  3091                           ; BSR set to: 1
  3092                           ;main.c: 191:                     printf("Unknown key %c\r\n", cmd);
  3093   0005C8  0E46               	movlw	low _transmitBuffer
  3094   0005CA  25AA               	addwf	main@i& (0+255),w,b
  3095   0005CC  6ED9               	movwf	fsr2l,c
  3096   0005CE  0E01               	movlw	high _transmitBuffer
  3097   0005D0  21AB               	addwfc	(main@i+1)& (0+255),w,b
  3098   0005D2  6EDA               	movwf	fsr2h,c
  3099   0005D4  C123  FFDF         	movff	_tsum,indf2
  3100   0005D8                     
  3101                           ; BSR set to: 1
  3102                           ;main.c: 192:                     break;
  3103   0005D8  0E90               	movlw	low STR_38
  3104   0005DA  6F95               	movwf	printf@fmt& (0+255),b
  3105   0005DC  0E7D               	movlw	high STR_38
  3106   0005DE  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3107   0005E0  0E46               	movlw	low _transmitBuffer
  3108   0005E2  6F97               	movwf	(?_printf+2)& (0+255),b
  3109   0005E4  0E01               	movlw	high _transmitBuffer
  3110   0005E6  6F98               	movwf	(?_printf+3)& (0+255),b
  3111   0005E8  C123  F199         	movff	_tsum,?_printf+4
  3112   0005EC  6B9A               	clrf	(?_printf+5)& (0+255),b
  3113   0005EE  EC36  F017         	call	_printf	;wreg free
  3114                           
  3115                           ;main.c: 193:             }
  3116   0005F2  EFC7  F003         	goto	l5397
  3117   0005F6                     l5369:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;main.c: 195:         }
  3121   0005F6  0E00               	movlw	0
  3122   0005F8  0101               	movlb	1	; () banked
  3123   0005FA  6FAB               	movwf	(main@i+1)& (0+255),b
  3124   0005FC  0E00               	movlw	0
  3125   0005FE  6FAA               	movwf	main@i& (0+255),b
  3126                           
  3127                           ;main.c: 196:     }
  3128   000600  EF1A  F003         	goto	l5375
  3129   000604                     l5371:
  3130                           
  3131                           ; BSR set to: 1
  3132                           ;main.c: 197: };main.c: 198: 
  3133   000604  51A8               	movf	main@baudRateSelected& (0+255),w,b
  3134   000606  0D02               	mullw	2
  3135   000608  0E9D               	movlw	low main@bitPeriod
  3136   00060A  24F3               	addwf	243,w,c
  3137   00060C  6ED9               	movwf	fsr2l,c
  3138   00060E  0E01               	movlw	high main@bitPeriod
  3139   000610  20F4               	addwfc	prodh,w,c
  3140   000612  6EDA               	movwf	fsr2h,c
  3141   000614  CFDE F07C          	movff	postinc2,transmitCharacterOverIR@baudRate
  3142   000618  CFDD F07D          	movff	postdec2,transmitCharacterOverIR@baudRate+1
  3143   00061C  0E46               	movlw	low _transmitBuffer
  3144   00061E  25AA               	addwf	main@i& (0+255),w,b
  3145   000620  6ED9               	movwf	fsr2l,c
  3146   000622  0E01               	movlw	high _transmitBuffer
  3147   000624  21AB               	addwfc	(main@i+1)& (0+255),w,b
  3148   000626  6EDA               	movwf	fsr2h,c
  3149   000628  50DF               	movf	indf2,w,c
  3150   00062A  ECC7  F00E         	call	_transmitCharacterOverIR
  3151   00062E                     
  3152                           ;main.c: 199: 
  3153   00062E  0101               	movlb	1	; () banked
  3154   000630  4BAA               	infsnz	main@i& (0+255),f,b
  3155   000632  2BAB               	incf	(main@i+1)& (0+255),f,b
  3156   000634                     l5375:
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;main.c: 196:     }
  3160   000634  0E46               	movlw	low _transmitBuffer
  3161   000636  25AA               	addwf	main@i& (0+255),w,b
  3162   000638  6ED9               	movwf	fsr2l,c
  3163   00063A  0E01               	movlw	high _transmitBuffer
  3164   00063C  21AB               	addwfc	(main@i+1)& (0+255),w,b
  3165   00063E  6EDA               	movwf	fsr2h,c
  3166   000640  50DF               	movf	indf2,w,c
  3167   000642  A4D8               	btfss	status,2,c
  3168   000644  EF26  F003         	goto	u4771
  3169   000648  EF28  F003         	goto	u4770
  3170   00064C                     u4771:
  3171   00064C  EF02  F003         	goto	l5371
  3172   000650                     u4770:
  3173   000650                     
  3174                           ; BSR set to: 1
  3175                           ;main.c: 201: {
  3176   000650  51A8               	movf	main@baudRateSelected& (0+255),w,b
  3177   000652  0D02               	mullw	2
  3178   000654  0E9D               	movlw	low main@bitPeriod
  3179   000656  24F3               	addwf	243,w,c
  3180   000658  6ED9               	movwf	fsr2l,c
  3181   00065A  0E01               	movlw	high main@bitPeriod
  3182   00065C  20F4               	addwfc	prodh,w,c
  3183   00065E  6EDA               	movwf	fsr2h,c
  3184   000660  CFDE F07C          	movff	postinc2,transmitCharacterOverIR@baudRate
  3185   000664  CFDD F07D          	movff	postdec2,transmitCharacterOverIR@baudRate+1
  3186   000668  0E00               	movlw	0
  3187   00066A  ECC7  F00E         	call	_transmitCharacterOverIR
  3188                           
  3189                           ;main.c: 202:     printf("RxEUSART2ISR\n\r");
  3190   00066E  0101               	movlb	1	; () banked
  3191   000670  51A8               	movf	main@baudRateSelected& (0+255),w,b
  3192   000672  0D02               	mullw	2
  3193   000674  0E9D               	movlw	low main@bitPeriod
  3194   000676  24F3               	addwf	243,w,c
  3195   000678  6ED9               	movwf	fsr2l,c
  3196   00067A  0E01               	movlw	high main@bitPeriod
  3197   00067C  20F4               	addwfc	prodh,w,c
  3198   00067E  6EDA               	movwf	fsr2h,c
  3199   000680  CFDE F07C          	movff	postinc2,transmitCharacterOverIR@baudRate
  3200   000684  CFDD F07D          	movff	postdec2,transmitCharacterOverIR@baudRate+1
  3201   000688  5123               	movf	_tsum& (0+255),w,b
  3202   00068A  ECC7  F00E         	call	_transmitCharacterOverIR
  3203   00068E                     
  3204                           ;main.c: 203: 
  3205   00068E  0E39               	movlw	low STR_39
  3206   000690  0101               	movlb	1	; () banked
  3207   000692  6F95               	movwf	printf@fmt& (0+255),b
  3208   000694  0E7D               	movlw	high STR_39
  3209   000696  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3210   000698  0E46               	movlw	low _transmitBuffer
  3211   00069A  6F97               	movwf	(?_printf+2)& (0+255),b
  3212   00069C  0E01               	movlw	high _transmitBuffer
  3213   00069E  6F98               	movwf	(?_printf+3)& (0+255),b
  3214   0006A0  C123  F199         	movff	_tsum,?_printf+4
  3215   0006A4  6B9A               	clrf	(?_printf+5)& (0+255),b
  3216   0006A6  EC36  F017         	call	_printf	;wreg free
  3217                           
  3218                           ;main.c: 204:     static uint8_t i = 0;
  3219   0006AA  EFC7  F003         	goto	l5397
  3220   0006AE                     l5381:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;main.c: 206:     static rxState_t state = RXDATA;
  3224   0006AE  0101               	movlb	1	; () banked
  3225   0006B0  0525               	decf	_received& (0+255),w,b
  3226   0006B2  A4D8               	btfss	status,2,c
  3227   0006B4  EF5E  F003         	goto	u4781
  3228   0006B8  EF60  F003         	goto	u4780
  3229   0006BC                     u4781:
  3230   0006BC  EF75  F003         	goto	l5387
  3231   0006C0                     u4780:
  3232   0006C0                     
  3233                           ; BSR set to: 1
  3234                           ;main.c: 207: ;main.c: 208:     character = RCREG2;
  3235   0006C0  0E5F               	movlw	low STR_40
  3236   0006C2  6F95               	movwf	printf@fmt& (0+255),b
  3237   0006C4  0E7C               	movlw	high STR_40
  3238   0006C6  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3239   0006C8  0E66               	movlw	low _receiveBuffer
  3240   0006CA  6F97               	movwf	(?_printf+2)& (0+255),b
  3241   0006CC  0E01               	movlw	high _receiveBuffer
  3242   0006CE  6F98               	movwf	(?_printf+3)& (0+255),b
  3243   0006D0  C124  F199         	movff	_rsum,?_printf+4
  3244   0006D4  6B9A               	clrf	(?_printf+5)& (0+255),b
  3245   0006D6  C122  F19B         	movff	_rcsum,?_printf+6
  3246   0006DA  6B9C               	clrf	(?_printf+7)& (0+255),b
  3247   0006DC  EC36  F017         	call	_printf	;wreg free
  3248   0006E0                     
  3249                           ;main.c: 209:     if(received == 0)
  3250   0006E0  0E00               	movlw	0
  3251   0006E2  0101               	movlb	1	; () banked
  3252   0006E4  6F25               	movwf	_received& (0+255),b
  3253                           
  3254                           ;main.c: 210:     {
  3255   0006E6  EFC7  F003         	goto	l5397
  3256   0006EA                     l5387:
  3257                           
  3258                           ; BSR set to: 1
  3259   0006EA  0E9B               	movlw	low STR_41
  3260   0006EC  6F95               	movwf	printf@fmt& (0+255),b
  3261   0006EE  0E7E               	movlw	high STR_41
  3262   0006F0  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3263   0006F2  EC36  F017         	call	_printf	;wreg free
  3264   0006F6  EFC7  F003         	goto	l5397
  3265   0006FA                     l514:
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;main.c: 214:                 printf("  RxData: %c\n\r", character);
  3269   0006FA  9871               	bcf	113,4,c	;volatile
  3270                           
  3271                           ;main.c: 215:                 receiveBuffer[i] = character;
  3272   0006FC  8871               	bsf	113,4,c	;volatile
  3273   0006FE                     
  3274                           ; BSR set to: 0
  3275                           ;main.c: 216:                 if(i == 0) rsum = character;
  3276   0006FE  0EB1               	movlw	low STR_42
  3277   000700  0101               	movlb	1	; () banked
  3278   000702  6F95               	movwf	printf@fmt& (0+255),b
  3279   000704  0E7E               	movlw	high STR_42
  3280   000706  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3281   000708  EC36  F017         	call	_printf	;wreg free
  3282                           
  3283                           ;main.c: 217:                 else rsum += character;
  3284   00070C  EFC7  F003         	goto	l5397
  3285   000710                     l5391:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;main.c: 219:                 if(character == '\0') state = RXCSUM;
  3289   000710  0E01               	movlw	low STR_43
  3290   000712  0101               	movlb	1	; () banked
  3291   000714  6F95               	movwf	printf@fmt& (0+255),b
  3292   000716  0E7F               	movlw	high STR_43
  3293   000718  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3294   00071A  C1A7  F197         	movff	main@cmd,?_printf+2
  3295   00071E  6B98               	clrf	(?_printf+3)& (0+255),b
  3296   000720  EC36  F017         	call	_printf	;wreg free
  3297                           
  3298                           ;main.c: 220:                 break;
  3299   000724  EFC7  F003         	goto	l5397
  3300   000728                     l5395:
  3301   000728  0101               	movlb	1	; () banked
  3302   00072A  51A7               	movf	main@cmd& (0+255),w,b
  3303   00072C  0100               	movlb	0	; () banked
  3304   00072E  6FCC               	movwf	??_main& (0+255),b
  3305   000730  6BCD               	clrf	(??_main+1)& (0+255),b
  3306                           
  3307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3308                           ; Switch size 1, requested type "simple"
  3309                           ; Number of cases is 1, Range of values is 0 to 0
  3310                           ; switch strategies available:
  3311                           ; Name         Instructions Cycles
  3312                           ; simple_byte            4     3 (average)
  3313                           ;	Chosen strategy is simple_byte
  3314   000732  51CD               	movf	(??_main+1)& (0+255),w,b
  3315   000734  0A00               	xorlw	0	; case 0
  3316   000736  B4D8               	btfsc	status,2,c
  3317   000738  EFA0  F003         	goto	l5671
  3318   00073C  EF88  F003         	goto	l5391
  3319   000740                     l5671:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ; Switch size 1, requested type "simple"
  3323                           ; Number of cases is 9, Range of values is 63 to 122
  3324                           ; switch strategies available:
  3325                           ; Name         Instructions Cycles
  3326                           ; simple_byte           28    15 (average)
  3327                           ;	Chosen strategy is simple_byte
  3328   000740  51CC               	movf	??_main& (0+255),w,b
  3329   000742  0A3F               	xorlw	63	; case 63
  3330   000744  B4D8               	btfsc	status,2,c
  3331   000746  EF09  F001         	goto	l5263
  3332   00074A  0A6D               	xorlw	109	; case 82
  3333   00074C  B4D8               	btfsc	status,2,c
  3334   00074E  EF57  F003         	goto	l5381
  3335   000752  0A01               	xorlw	1	; case 83
  3336   000754  B4D8               	btfsc	status,2,c
  3337   000756  EFFB  F002         	goto	l5369
  3338   00075A  0A09               	xorlw	9	; case 90
  3339   00075C  B4D8               	btfsc	status,2,c
  3340   00075E  EFC3  F001         	goto	l5285
  3341   000762  0A38               	xorlw	56	; case 98
  3342   000764  B4D8               	btfsc	status,2,c
  3343   000766  EFFA  F001         	goto	l5309
  3344   00076A  0A0F               	xorlw	15	; case 109
  3345   00076C  B4D8               	btfsc	status,2,c
  3346   00076E  EF84  F002         	goto	l5333
  3347   000772  0A02               	xorlw	2	; case 111
  3348   000774  B4D8               	btfsc	status,2,c
  3349   000776  EFBA  F001         	goto	l5283
  3350   00077A  0A1D               	xorlw	29	; case 114
  3351   00077C  B4D8               	btfsc	status,2,c
  3352   00077E  EF7D  F003         	goto	l514
  3353   000782  0A08               	xorlw	8	; case 122
  3354   000784  B4D8               	btfsc	status,2,c
  3355   000786  EFDF  F001         	goto	l5297
  3356   00078A  EF88  F003         	goto	l5391
  3357   00078E                     l5397:
  3358                           
  3359                           ;main.c: 222:                 printf("  RxCSum: %u\n\r", character);
  3360   00078E  0EF3               	movlw	low STR_44
  3361   000790  0101               	movlb	1	; () banked
  3362   000792  6F95               	movwf	printf@fmt& (0+255),b
  3363   000794  0E7F               	movlw	high STR_44
  3364   000796  6F96               	movwf	(printf@fmt+1)& (0+255),b
  3365   000798  EC36  F017         	call	_printf	;wreg free
  3366   00079C  EFF0  F000         	goto	l5257
  3367   0007A0  EF7A  F000         	goto	start
  3368   0007A4                     __end_of_main:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _transmitCharacterOverIR *****************
  3372 ;; Defined at:
  3373 ;;		line 262 in file "main.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  letter          1    wreg     unsigned char 
  3376 ;;  baudRate        2   28[BANK0 ] unsigned short 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  letter          1   30[BANK0 ] unsigned char 
  3379 ;;  mask            1   31[BANK0 ] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3389 ;;      Params:         0       2       0       0       0       0       0
  3390 ;;      Locals:         0       2       0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0
  3392 ;;      Totals:         0       4       0       0       0       0       0
  3393 ;;Total ram usage:        4 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 12
  3396 ;; This function calls:
  3397 ;;		_EPWM2_LoadDutyValue
  3398 ;;		_TMR1_HasOverflowOccured
  3399 ;;		_TMR1_WriteTimer
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text1
  3406   001D8E                     __ptext1:
  3407                           	callstack 0
  3408   001D8E                     _transmitCharacterOverIR:
  3409                           	callstack 18
  3410                           
  3411                           ;incstack = 0
  3412                           ;transmitCharacterOverIR@letter stored from wreg
  3413   001D8E  0100               	movlb	0	; () banked
  3414   001D90  6F7E               	movwf	transmitCharacterOverIR@letter& (0+255),b
  3415   001D92  0E00               	movlw	0
  3416   001D94  0100               	movlb	0	; () banked
  3417   001D96  6F79               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3418   001D98  0E19               	movlw	25
  3419   001D9A  6F78               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3420   001D9C  ECAF  F016         	call	_EPWM2_LoadDutyValue	;wreg free
  3421   001DA0  0100               	movlb	0	; () banked
  3422   001DA2  517C               	movf	transmitCharacterOverIR@baudRate& (0+255),w,b
  3423   001DA4  0800               	sublw	0
  3424   001DA6  6F78               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  3425   001DA8  517D               	movf	(transmitCharacterOverIR@baudRate+1)& (0+255),w,b
  3426   001DAA  A0D8               	btfss	status,0,c
  3427   001DAC  2AE8               	incf	wreg,f,c
  3428   001DAE  0800               	sublw	0
  3429   001DB0  6F79               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  3430   001DB2  ECDF  F016         	call	_TMR1_WriteTimer	;wreg free
  3431   001DB6  909E               	bcf	158,0,c	;volatile
  3432   001DB8                     l4217:
  3433   001DB8  ECE5  F017         	call	_TMR1_HasOverflowOccured	;wreg free
  3434   001DBC  0900               	iorlw	0
  3435   001DBE  B4D8               	btfsc	status,2,c
  3436   001DC0  EFE4  F00E         	goto	u3621
  3437   001DC4  EFE6  F00E         	goto	u3620
  3438   001DC8                     u3621:
  3439   001DC8  EFDC  F00E         	goto	l4217
  3440   001DCC                     u3620:
  3441   001DCC  0E01               	movlw	1
  3442   001DCE  0100               	movlb	0	; () banked
  3443   001DD0  6F7F               	movwf	transmitCharacterOverIR@mask& (0+255),b
  3444   001DD2  EF1C  F00F         	goto	l4235
  3445   001DD6                     l4221:
  3446                           
  3447                           ; BSR set to: 0
  3448   001DD6  517E               	movf	transmitCharacterOverIR@letter& (0+255),w,b
  3449   001DD8  157F               	andwf	transmitCharacterOverIR@mask& (0+255),w,b
  3450   001DDA  0900               	iorlw	0
  3451   001DDC  B4D8               	btfsc	status,2,c
  3452   001DDE  EFF3  F00E         	goto	u3631
  3453   001DE2  EFF5  F00E         	goto	u3630
  3454   001DE6                     u3631:
  3455   001DE6  EFFD  F00E         	goto	l4225
  3456   001DEA                     u3630:
  3457   001DEA                     
  3458                           ; BSR set to: 0
  3459   001DEA  0E00               	movlw	0
  3460   001DEC  6F79               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3461   001DEE  0E00               	movlw	0
  3462   001DF0  6F78               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3463   001DF2  ECAF  F016         	call	_EPWM2_LoadDutyValue	;wreg free
  3464   001DF6  EF03  F00F         	goto	l4227
  3465   001DFA                     l4225:
  3466                           
  3467                           ; BSR set to: 0
  3468   001DFA  0E00               	movlw	0
  3469   001DFC  6F79               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3470   001DFE  0E19               	movlw	25
  3471   001E00  6F78               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3472   001E02  ECAF  F016         	call	_EPWM2_LoadDutyValue	;wreg free
  3473   001E06                     l4227:
  3474   001E06  0100               	movlb	0	; () banked
  3475   001E08  517F               	movf	transmitCharacterOverIR@mask& (0+255),w,b
  3476   001E0A  257F               	addwf	transmitCharacterOverIR@mask& (0+255),w,b
  3477   001E0C  6F7F               	movwf	transmitCharacterOverIR@mask& (0+255),b
  3478   001E0E                     
  3479                           ; BSR set to: 0
  3480   001E0E  517C               	movf	transmitCharacterOverIR@baudRate& (0+255),w,b
  3481   001E10  0800               	sublw	0
  3482   001E12  6F78               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  3483   001E14  517D               	movf	(transmitCharacterOverIR@baudRate+1)& (0+255),w,b
  3484   001E16  A0D8               	btfss	status,0,c
  3485   001E18  2AE8               	incf	wreg,f,c
  3486   001E1A  0800               	sublw	0
  3487   001E1C  6F79               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  3488   001E1E  ECDF  F016         	call	_TMR1_WriteTimer	;wreg free
  3489   001E22  909E               	bcf	158,0,c	;volatile
  3490   001E24                     l4233:
  3491   001E24  ECE5  F017         	call	_TMR1_HasOverflowOccured	;wreg free
  3492   001E28  0900               	iorlw	0
  3493   001E2A  B4D8               	btfsc	status,2,c
  3494   001E2C  EF1A  F00F         	goto	u3641
  3495   001E30  EF1C  F00F         	goto	u3640
  3496   001E34                     u3641:
  3497   001E34  EF12  F00F         	goto	l4233
  3498   001E38                     u3640:
  3499   001E38                     l4235:
  3500   001E38  0100               	movlb	0	; () banked
  3501   001E3A  517F               	movf	transmitCharacterOverIR@mask& (0+255),w,b
  3502   001E3C  A4D8               	btfss	status,2,c
  3503   001E3E  EF23  F00F         	goto	u3651
  3504   001E42  EF25  F00F         	goto	u3650
  3505   001E46                     u3651:
  3506   001E46  EFEB  F00E         	goto	l4221
  3507   001E4A                     u3650:
  3508   001E4A                     
  3509                           ; BSR set to: 0
  3510   001E4A  0E00               	movlw	0
  3511   001E4C  6F79               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)& (0+255),b
  3512   001E4E  0E00               	movlw	0
  3513   001E50  6F78               	movwf	EPWM2_LoadDutyValue@dutyValue& (0+255),b
  3514   001E52  ECAF  F016         	call	_EPWM2_LoadDutyValue	;wreg free
  3515   001E56  0100               	movlb	0	; () banked
  3516   001E58  517C               	movf	transmitCharacterOverIR@baudRate& (0+255),w,b
  3517   001E5A  0800               	sublw	0
  3518   001E5C  6F78               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  3519   001E5E  517D               	movf	(transmitCharacterOverIR@baudRate+1)& (0+255),w,b
  3520   001E60  A0D8               	btfss	status,0,c
  3521   001E62  2AE8               	incf	wreg,f,c
  3522   001E64  0800               	sublw	0
  3523   001E66  6F79               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  3524   001E68  ECDF  F016         	call	_TMR1_WriteTimer	;wreg free
  3525   001E6C  909E               	bcf	158,0,c	;volatile
  3526   001E6E                     l4241:
  3527   001E6E  ECE5  F017         	call	_TMR1_HasOverflowOccured	;wreg free
  3528   001E72  0900               	iorlw	0
  3529   001E74  B4D8               	btfsc	status,2,c
  3530   001E76  EF3F  F00F         	goto	u3661
  3531   001E7A  EF41  F00F         	goto	u3660
  3532   001E7E                     u3661:
  3533   001E7E  EF37  F00F         	goto	l4241
  3534   001E82                     u3660:
  3535   001E82  0012               	return		;funcret
  3536   001E84                     __end_of_transmitCharacterOverIR:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _TMR1_WriteTimer *****************
  3540 ;; Defined at:
  3541 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  timerVal        2   24[BANK0 ] unsigned short 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3555 ;;      Params:         0       2       0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0
  3558 ;;      Totals:         0       2       0       0       0       0       0
  3559 ;;Total ram usage:        2 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 11
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;;		_transmitCharacterOverIR
  3567 ;;		_TMR1_Reload
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text2
  3572   002DBE                     __ptext2:
  3573                           	callstack 0
  3574   002DBE                     _TMR1_WriteTimer:
  3575                           	callstack 18
  3576   002DBE                     
  3577                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  3578   002DBE  A4CD               	btfss	205,2,c	;volatile
  3579   002DC0  EFE4  F016         	goto	u3431
  3580   002DC4  EFE6  F016         	goto	u3430
  3581   002DC8                     u3431:
  3582   002DC8  EFEF  F016         	goto	l4043
  3583   002DCC                     u3430:
  3584   002DCC                     
  3585                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  3586   002DCC  90CD               	bcf	205,0,c	;volatile
  3587   002DCE                     
  3588                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (uint8_t)(timerVal >> 8);
  3589   002DCE  0100               	movlb	0	; () banked
  3590   002DD0  5179               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  3591   002DD2  6ECF               	movwf	207,c	;volatile
  3592   002DD4                     
  3593                           ; BSR set to: 0
  3594                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t)timerVal;
  3595   002DD4  C078  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3596   002DD8                     
  3597                           ; BSR set to: 0
  3598                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  3599   002DD8  80CD               	bsf	205,0,c	;volatile
  3600                           
  3601                           ;mcc_generated_files/tmr1.c: 127:     }
  3602   002DDA  EFF4  F016         	goto	l67
  3603   002DDE                     l4043:
  3604                           
  3605                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  3606   002DDE  0100               	movlb	0	; () banked
  3607   002DE0  5179               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  3608   002DE2  6ECF               	movwf	207,c	;volatile
  3609   002DE4                     
  3610                           ; BSR set to: 0
  3611                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  3612   002DE4  C078  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  3613   002DE8                     l67:
  3614                           
  3615                           ; BSR set to: 0
  3616   002DE8  0012               	return		;funcret
  3617   002DEA                     __end_of_TMR1_WriteTimer:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function _TMR1_HasOverflowOccured *****************
  3621 ;; Defined at:
  3622 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      _Bool 
  3629 ;; Registers used:
  3630 ;;		wreg
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3636 ;;      Params:         0       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 11
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;;		_transmitCharacterOverIR
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text3
  3652   002FCA                     __ptext3:
  3653                           	callstack 0
  3654   002FCA                     _TMR1_HasOverflowOccured:
  3655                           	callstack 18
  3656   002FCA                     
  3657                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
  3658   002FCA  B09E               	btfsc	158,0,c	;volatile
  3659   002FCC  EFEA  F017         	goto	u3441
  3660   002FD0  EFED  F017         	goto	u3440
  3661   002FD4                     u3441:
  3662   002FD4  0E01               	movlw	1
  3663   002FD6  EFEE  F017         	goto	u3446
  3664   002FDA                     u3440:
  3665   002FDA  0E00               	movlw	0
  3666   002FDC                     u3446:
  3667   002FDC  0012               	return		;funcret
  3668   002FDE                     __end_of_TMR1_HasOverflowOccured:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _EPWM2_LoadDutyValue *****************
  3672 ;; Defined at:
  3673 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  dutyValue       2   24[BANK0 ] unsigned short 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3687 ;;      Params:         0       2       0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0
  3689 ;;      Temps:          0       2       0       0       0       0       0
  3690 ;;      Totals:         0       4       0       0       0       0       0
  3691 ;;Total ram usage:        4 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 11
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;;		_transmitCharacterOverIR
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text4
  3703   002D5E                     __ptext4:
  3704                           	callstack 0
  3705   002D5E                     _EPWM2_LoadDutyValue:
  3706                           	callstack 18
  3707   002D5E                     
  3708                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  3709   002D5E  C078  F07A         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3710   002D62  C079  F07B         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  3711   002D66  0100               	movlb	0	; () banked
  3712   002D68  90D8               	bcf	status,0,c
  3713   002D6A  337B               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  3714   002D6C  337A               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3715   002D6E  90D8               	bcf	status,0,c
  3716   002D70  337B               	rrcf	(??_EPWM2_LoadDutyValue+1)& (0+255),f,b
  3717   002D72  337A               	rrcf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3718   002D74  517A               	movf	??_EPWM2_LoadDutyValue& (0+255),w,b
  3719   002D76  6E67               	movwf	103,c	;volatile
  3720                           
  3721                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  3722   002D78  C078  F07A         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  3723   002D7C  0E03               	movlw	3
  3724   002D7E  177A               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3725   002D80  3B7A               	swapf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3726   002D82  0EF0               	movlw	240
  3727   002D84  177A               	andwf	??_EPWM2_LoadDutyValue& (0+255),f,b
  3728   002D86  5066               	movf	102,w,c	;volatile
  3729   002D88  0BCF               	andlw	207
  3730   002D8A  117A               	iorwf	??_EPWM2_LoadDutyValue& (0+255),w,b
  3731   002D8C  6E66               	movwf	102,c	;volatile
  3732   002D8E                     
  3733                           ; BSR set to: 0
  3734   002D8E  0012               	return		;funcret
  3735   002D90                     __end_of_EPWM2_LoadDutyValue:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _printf *****************
  3739 ;; Defined at:
  3740 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  fmt             2   15[BANK1 ] PTR const unsigned char 
  3743 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  3744 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  3745 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  3746 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  3747 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  3748 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  3749 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  3750 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  3751 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  3752 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  3753 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  3754 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;  ap              2  106[BANK0 ] PTR void [1]
  3757 ;;		 -> ?_printf(2), 
  3758 ;;  ret             2    0        int 
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  2   15[BANK1 ] int 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3768 ;;      Params:         0       0       8       0       0       0       0
  3769 ;;      Locals:         0       2       0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0       0       0
  3771 ;;      Totals:         0       2       8       0       0       0       0
  3772 ;;Total ram usage:       10 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 19
  3775 ;; This function calls:
  3776 ;;		_vfprintf
  3777 ;; This function is called by:
  3778 ;;		_main
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text5
  3783   002E6C                     __ptext5:
  3784                           	callstack 0
  3785   002E6C                     _printf:
  3786                           	callstack 11
  3787   002E6C  0E97               	movlw	low (?_printf+2)
  3788   002E6E  0100               	movlb	0	; () banked
  3789   002E70  6FCA               	movwf	printf@ap& (0+255),b
  3790   002E72  0E01               	movlw	high (?_printf+2)
  3791   002E74  6FCB               	movwf	(printf@ap+1)& (0+255),b
  3792   002E76                     
  3793                           ; BSR set to: 0
  3794   002E76  0E00               	movlw	0
  3795   002E78  6FC2               	movwf	vfprintf@fp& (0+255),b
  3796   002E7A  0E00               	movlw	0
  3797   002E7C  6FC3               	movwf	(vfprintf@fp+1)& (0+255),b
  3798   002E7E  C195  F0C4         	movff	printf@fmt,vfprintf@fmt
  3799   002E82  C196  F0C5         	movff	printf@fmt+1,vfprintf@fmt+1
  3800   002E86  0ECA               	movlw	low printf@ap
  3801   002E88  6FC6               	movwf	vfprintf@ap& (0+255),b
  3802   002E8A  0E00               	movlw	high printf@ap
  3803   002E8C  6FC7               	movwf	(vfprintf@ap+1)& (0+255),b
  3804   002E8E  EC13  F015         	call	_vfprintf	;wreg free
  3805   002E92  0012               	return		;funcret
  3806   002E94                     __end_of_printf:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _vfprintf *****************
  3810 ;; Defined at:
  3811 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  fp              2   98[BANK0 ] PTR struct _IO_FILE
  3814 ;;		 -> NULL(0), 
  3815 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  3816 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  3817 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  3818 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  3819 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  3820 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  3821 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  3822 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  3823 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  3824 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  3825 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  3826 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  3827 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  3828 ;;  ap              2  102[BANK0 ] PTR PTR void 
  3829 ;;		 -> printf@ap(2), 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  cfmt            2  104[BANK0 ] PTR unsigned char 
  3832 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  3833 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  3834 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  3835 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  3836 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  3837 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  3838 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  3839 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  3840 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  3841 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  3842 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  3843 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  2   98[BANK0 ] int 
  3846 ;; Registers used:
  3847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3853 ;;      Params:         0       6       0       0       0       0       0
  3854 ;;      Locals:         0       2       0       0       0       0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0
  3856 ;;      Totals:         0       8       0       0       0       0       0
  3857 ;;Total ram usage:        8 bytes
  3858 ;; Hardware stack levels used: 1
  3859 ;; Hardware stack levels required when called: 18
  3860 ;; This function calls:
  3861 ;;		_vfpfcnvrt
  3862 ;; This function is called by:
  3863 ;;		_printf
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text6
  3868   002A26                     __ptext6:
  3869                           	callstack 0
  3870   002A26                     _vfprintf:
  3871                           	callstack 11
  3872   002A26                     
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3874   002A26  C0C4  F0C8         	movff	vfprintf@fmt,vfprintf@cfmt
  3875   002A2A  C0C5  F0C9         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3878   002A2E  EF28  F015         	goto	l5201
  3879   002A32                     l5199:
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3882   002A32  C0C2  F0B8         	movff	vfprintf@fp,vfpfcnvrt@fp
  3883   002A36  C0C3  F0B9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3884   002A3A  0EC8               	movlw	low vfprintf@cfmt
  3885   002A3C  0100               	movlb	0	; () banked
  3886   002A3E  6FBA               	movwf	vfpfcnvrt@fmt& (0+255),b
  3887   002A40  0E00               	movlw	high vfprintf@cfmt
  3888   002A42  6FBB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3889   002A44  C0C6  F0BC         	movff	vfprintf@ap,vfpfcnvrt@ap
  3890   002A48  C0C7  F0BD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3891   002A4C  ECD2  F003         	call	_vfpfcnvrt	;wreg free
  3892   002A50                     l5201:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3895   002A50  C0C8  FFF6         	movff	vfprintf@cfmt,tblptrl
  3896   002A54  C0C9  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3897   002A58                     	if	0	;tblptru may be non-zero
  3898   002A58                     	endif
  3899   002A58                     	if	0	;tblptru may be non-zero
  3900   002A58                     	endif
  3901   002A58  0008               	tblrd		*
  3902   002A5A  50F5               	movf	tablat,w,c
  3903   002A5C  0900               	iorlw	0
  3904   002A5E  A4D8               	btfss	status,2,c
  3905   002A60  EF34  F015         	goto	u4651
  3906   002A64  EF36  F015         	goto	u4650
  3907   002A68                     u4651:
  3908   002A68  EF19  F015         	goto	l5199
  3909   002A6C                     u4650:
  3910   002A6C                     
  3911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3912   002A6C  0E00               	movlw	0
  3913   002A6E  0100               	movlb	0	; () banked
  3914   002A70  6FC3               	movwf	(?_vfprintf+1)& (0+255),b
  3915   002A72  0E00               	movlw	0
  3916   002A74  6FC2               	movwf	?_vfprintf& (0+255),b
  3917   002A76                     
  3918                           ; BSR set to: 0
  3919   002A76  0012               	return		;funcret
  3920   002A78                     __end_of_vfprintf:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _vfpfcnvrt *****************
  3924 ;; Defined at:
  3925 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  fp              2   88[BANK0 ] PTR struct _IO_FILE
  3928 ;;		 -> NULL(0), 
  3929 ;;  fmt             2   90[BANK0 ] PTR PTR unsigned char 
  3930 ;;		 -> vfprintf@cfmt(2), 
  3931 ;;  ap              2   92[BANK0 ] PTR PTR void 
  3932 ;;		 -> printf@ap(2), 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  convarg         8    5[BANK1 ] struct .
  3935 ;;  cp              2   13[BANK1 ] PTR unsigned char 
  3936 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  3937 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  3938 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  3939 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  3940 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  3941 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  3942 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  3943 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  3944 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  3945 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  3946 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  3947 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  3948 ;;  done            2    1[BANK1 ] int 
  3949 ;;  i               2    0        int 
  3950 ;;  c               1    0[BANK1 ] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3960 ;;      Params:         0       6       0       0       0       0       0
  3961 ;;      Locals:         0       0      15       0       0       0       0
  3962 ;;      Temps:          0       4       0       0       0       0       0
  3963 ;;      Totals:         0      10      15       0       0       0       0
  3964 ;;Total ram usage:       25 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 17
  3967 ;; This function calls:
  3968 ;;		_atoi
  3969 ;;		_ctoa
  3970 ;;		_fputc
  3971 ;;		_isdigit
  3972 ;;		_stoa
  3973 ;;		_strncmp
  3974 ;;		_utoa
  3975 ;;		_xtoa
  3976 ;; This function is called by:
  3977 ;;		_vfprintf
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text7
  3982   0007A4                     __ptext7:
  3983                           	callstack 0
  3984   0007A4                     _vfpfcnvrt:
  3985                           	callstack 11
  3986   0007A4                     
  3987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3988   0007A4  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3989   0007A8  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3990   0007AC  CFDE FFF6          	movff	postinc2,tblptrl
  3991   0007B0  CFDD FFF7          	movff	postdec2,tblptrh
  3992   0007B4                     	if	0	;tblptru may be non-zero
  3993   0007B4                     	endif
  3994   0007B4                     	if	0	;tblptru may be non-zero
  3995   0007B4                     	endif
  3996   0007B4  0008               	tblrd		*
  3997   0007B6  50F5               	movf	tablat,w,c
  3998   0007B8  0A25               	xorlw	37
  3999   0007BA  A4D8               	btfss	status,2,c
  4000   0007BC  EFE2  F003         	goto	u4541
  4001   0007C0  EFE4  F003         	goto	u4540
  4002   0007C4                     u4541:
  4003   0007C4  EFF0  F005         	goto	l5179
  4004   0007C8                     u4540:
  4005   0007C8                     
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4007   0007C8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4008   0007CC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4009   0007D0  2ADE               	incf	postinc2,f,c
  4010   0007D2  0E00               	movlw	0
  4011   0007D4  22DD               	addwfc	postdec2,f,c
  4012   0007D6                     
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4014   0007D6  0E00               	movlw	0
  4015   0007D8  0100               	movlb	0	; () banked
  4016   0007DA  6FCF               	movwf	(_width+1)& (0+255),b
  4017   0007DC  0E00               	movlw	0
  4018   0007DE  6FCE               	movwf	_width& (0+255),b
  4019   0007E0  C0CE  F0DA         	movff	_width,_flags
  4020   0007E4                     
  4021                           ; BSR set to: 0
  4022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4023   0007E4  69D0               	setf	_prec& (0+255),b
  4024   0007E6  69D1               	setf	(_prec+1)& (0+255),b
  4025   0007E8                     
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4028   0007E8  0E00               	movlw	0
  4029   0007EA  0101               	movlb	1	; () banked
  4030   0007EC  6F88               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4031   0007EE  0E00               	movlw	0
  4032   0007F0  6F87               	movwf	vfpfcnvrt@done& (0+255),b
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4035   0007F2  EF27  F004         	goto	l5113
  4036   0007F6                     l5103:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  4040   0007F6  83DA               	bsf	_flags& (0+255),1,b
  4041   0007F8                     
  4042                           ; BSR set to: 0
  4043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  4044   0007F8  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4045   0007FC  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4046   000800  2ADE               	incf	postinc2,f,c
  4047   000802  0E00               	movlw	0
  4048   000804  22DD               	addwfc	postdec2,f,c
  4049                           
  4050                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  4051   000806  EF27  F004         	goto	l5113
  4052   00080A                     l5107:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  4056   00080A  0E00               	movlw	0
  4057   00080C  0101               	movlb	1	; () banked
  4058   00080E  6F88               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4059   000810  0E01               	movlw	1
  4060   000812  6F87               	movwf	vfpfcnvrt@done& (0+255),b
  4061                           
  4062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  4063   000814  EF27  F004         	goto	l5113
  4064   000818                     l5111:
  4065                           
  4066                           ; BSR set to: 1
  4067   000818  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4068   00081C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4069   000820  CFDE FFF6          	movff	postinc2,tblptrl
  4070   000824  CFDD FFF7          	movff	postdec2,tblptrh
  4071   000828                     	if	0	;tblptru may be non-zero
  4072   000828                     	endif
  4073   000828                     	if	0	;tblptru may be non-zero
  4074   000828                     	endif
  4075   000828  0008               	tblrd		*
  4076   00082A  50F5               	movf	tablat,w,c
  4077   00082C  0100               	movlb	0	; () banked
  4078   00082E  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4079   000830  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4080                           
  4081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4082                           ; Switch size 1, requested type "simple"
  4083                           ; Number of cases is 1, Range of values is 0 to 0
  4084                           ; switch strategies available:
  4085                           ; Name         Instructions Cycles
  4086                           ; simple_byte            4     3 (average)
  4087                           ;	Chosen strategy is simple_byte
  4088   000832  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4089   000834  0A00               	xorlw	0	; case 0
  4090   000836  B4D8               	btfsc	status,2,c
  4091   000838  EF20  F004         	goto	l5673
  4092   00083C  EF05  F004         	goto	l5107
  4093   000840                     l5673:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ; Switch size 1, requested type "simple"
  4097                           ; Number of cases is 1, Range of values is 48 to 48
  4098                           ; switch strategies available:
  4099                           ; Name         Instructions Cycles
  4100                           ; simple_byte            4     3 (average)
  4101                           ;	Chosen strategy is simple_byte
  4102   000840  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4103   000842  0A30               	xorlw	48	; case 48
  4104   000844  B4D8               	btfsc	status,2,c
  4105   000846  EFFB  F003         	goto	l5103
  4106   00084A  EF05  F004         	goto	l5107
  4107   00084E                     l5113:
  4108                           
  4109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4110   00084E  0101               	movlb	1	; () banked
  4111   000850  5187               	movf	vfpfcnvrt@done& (0+255),w,b
  4112   000852  1188               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  4113   000854  B4D8               	btfsc	status,2,c
  4114   000856  EF2F  F004         	goto	u4551
  4115   00085A  EF31  F004         	goto	u4550
  4116   00085E                     u4551:
  4117   00085E  EF0C  F004         	goto	l5111
  4118   000862                     u4550:
  4119   000862                     
  4120                           ; BSR set to: 1
  4121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  4122   000862  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4123   000866  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4124   00086A  CFDE FFF6          	movff	postinc2,tblptrl
  4125   00086E  CFDD FFF7          	movff	postdec2,tblptrh
  4126   000872                     	if	0	;tblptru may be non-zero
  4127   000872                     	endif
  4128   000872                     	if	0	;tblptru may be non-zero
  4129   000872                     	endif
  4130   000872  0008               	tblrd		*
  4131   000874  50F5               	movf	tablat,w,c
  4132   000876  0A2A               	xorlw	42
  4133   000878  A4D8               	btfss	status,2,c
  4134   00087A  EF41  F004         	goto	u4561
  4135   00087E  EF43  F004         	goto	u4560
  4136   000882                     u4561:
  4137   000882  EF6D  F004         	goto	l5123
  4138   000886                     u4560:
  4139   000886                     
  4140                           ; BSR set to: 1
  4141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  4142   000886  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4143   00088A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4144   00088E  2ADE               	incf	postinc2,f,c
  4145   000890  0E00               	movlw	0
  4146   000892  22DD               	addwfc	postdec2,f,c
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4149   000894  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4150   000898  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4151   00089C  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4152   0008A0  0E02               	movlw	2
  4153   0008A2  26DE               	addwf	postinc2,f,c
  4154   0008A4  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4155   0008A8  0E00               	movlw	0
  4156   0008AA  22DD               	addwfc	postdec2,f,c
  4157   0008AC  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4158   0008B0  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4159   0008B4  CFDE F0CE          	movff	postinc2,_width
  4160   0008B8  CFDD F0CF          	movff	postdec2,_width+1
  4161   0008BC                     
  4162                           ; BSR set to: 1
  4163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  4164   0008BC  0100               	movlb	0	; () banked
  4165   0008BE  BFCF               	btfsc	(_width+1)& (0+255),7,b
  4166   0008C0  EF66  F004         	goto	u4570
  4167   0008C4  EF64  F004         	goto	u4571
  4168   0008C8                     u4571:
  4169   0008C8  EFA1  F004         	goto	l5131
  4170   0008CC                     u4570:
  4171   0008CC                     
  4172                           ; BSR set to: 0
  4173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  4174   0008CC  81DA               	bsf	_flags& (0+255),0,b
  4175                           
  4176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  4177   0008CE  6DCE               	negf	_width& (0+255),b
  4178   0008D0  1FCF               	comf	(_width+1)& (0+255),f,b
  4179   0008D2  B0D8               	btfsc	status,0,c
  4180   0008D4  2BCF               	incf	(_width+1)& (0+255),f,b
  4181   0008D6  EFA1  F004         	goto	l5131
  4182   0008DA                     l5123:
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  4186   0008DA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4187   0008DE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4188   0008E2  CFDE F07E          	movff	postinc2,atoi@s
  4189   0008E6  CFDD F07F          	movff	postdec2,atoi@s+1
  4190   0008EA  EC7B  F00D         	call	_atoi	;wreg free
  4191   0008EE  C07E  F0CE         	movff	?_atoi,_width
  4192   0008F2  C07F  F0CF         	movff	?_atoi+1,_width+1
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  4195   0008F6  EF84  F004         	goto	l5129
  4196   0008FA                     l5125:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  4200   0008FA  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4201   0008FE  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4202   000902  2ADE               	incf	postinc2,f,c
  4203   000904  0E00               	movlw	0
  4204   000906  22DD               	addwfc	postdec2,f,c
  4205   000908                     l5129:
  4206   000908  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4207   00090C  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4208   000910  CFDE FFF6          	movff	postinc2,tblptrl
  4209   000914  CFDD FFF7          	movff	postdec2,tblptrh
  4210   000918                     	if	0	;tblptru may be non-zero
  4211   000918                     	endif
  4212   000918                     	if	0	;tblptru may be non-zero
  4213   000918                     	endif
  4214   000918  0008               	tblrd		*
  4215   00091A  CFF5 F0BE          	movff	tablat,??_vfpfcnvrt
  4216   00091E  0ED0               	movlw	208
  4217   000920  0100               	movlb	0	; () banked
  4218   000922  25BE               	addwf	??_vfpfcnvrt& (0+255),w,b
  4219   000924  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4220   000926  6BC0               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  4221   000928  0EFF               	movlw	255
  4222   00092A  23C0               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  4223   00092C  51C0               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  4224   00092E  E109               	bnz	u4580
  4225   000930  0E0A               	movlw	10
  4226   000932  5DBF               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  4227   000934  A0D8               	btfss	status,0,c
  4228   000936  EF9F  F004         	goto	u4581
  4229   00093A  EFA1  F004         	goto	u4580
  4230   00093E                     u4581:
  4231   00093E  EF7D  F004         	goto	l5125
  4232   000942                     u4580:
  4233   000942                     l5131:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  4237   000942  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4238   000946  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4239   00094A  CFDE FFF6          	movff	postinc2,tblptrl
  4240   00094E  CFDD FFF7          	movff	postdec2,tblptrh
  4241   000952                     	if	0	;tblptru may be non-zero
  4242   000952                     	endif
  4243   000952                     	if	0	;tblptru may be non-zero
  4244   000952                     	endif
  4245   000952  0008               	tblrd		*
  4246   000954  50F5               	movf	tablat,w,c
  4247   000956  0A63               	xorlw	99
  4248   000958  A4D8               	btfss	status,2,c
  4249   00095A  EFB1  F004         	goto	u4591
  4250   00095E  EFB3  F004         	goto	u4590
  4251   000962                     u4591:
  4252   000962  EFD7  F004         	goto	l5139
  4253   000966                     u4590:
  4254   000966                     
  4255                           ; BSR set to: 0
  4256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  4257   000966  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4258   00096A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4259   00096E  2ADE               	incf	postinc2,f,c
  4260   000970  0E00               	movlw	0
  4261   000972  22DD               	addwfc	postdec2,f,c
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4264   000974  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4265   000978  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4266   00097C  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4267   000980  0E02               	movlw	2
  4268   000982  26DE               	addwf	postinc2,f,c
  4269   000984  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4270   000988  0E00               	movlw	0
  4271   00098A  22DD               	addwfc	postdec2,f,c
  4272   00098C  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4273   000990  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4274   000994  50DF               	movf	indf2,w,c
  4275   000996  0101               	movlb	1	; () banked
  4276   000998  6F86               	movwf	vfpfcnvrt@c& (0+255),b
  4277   00099A                     
  4278                           ; BSR set to: 1
  4279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  4280   00099A  C0B8  F083         	movff	vfpfcnvrt@fp,ctoa@fp
  4281   00099E  C0B9  F084         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  4282   0009A2  C186  F085         	movff	vfpfcnvrt@c,ctoa@c
  4283   0009A6  EC5B  F012         	call	_ctoa	;wreg free
  4284   0009AA  EF05  F006         	goto	l1383
  4285   0009AE                     l5139:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  4289   0009AE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4290   0009B2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4291   0009B6  CFDE F193          	movff	postinc2,vfpfcnvrt@cp
  4292   0009BA  CFDD F194          	movff	postdec2,vfpfcnvrt@cp+1
  4293   0009BE                     
  4294                           ; BSR set to: 0
  4295   0009BE  C193  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4296   0009C2  C194  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4297   0009C6                     	if	0	;tblptru may be non-zero
  4298   0009C6                     	endif
  4299   0009C6                     	if	0	;tblptru may be non-zero
  4300   0009C6                     	endif
  4301   0009C6  0008               	tblrd		*
  4302   0009C8  50F5               	movf	tablat,w,c
  4303   0009CA  0A78               	xorlw	120
  4304   0009CC  B4D8               	btfsc	status,2,c
  4305   0009CE  EFEB  F004         	goto	u4601
  4306   0009D2  EFED  F004         	goto	u4600
  4307   0009D6                     u4601:
  4308   0009D6  EFFB  F004         	goto	l5145
  4309   0009DA                     u4600:
  4310   0009DA                     
  4311                           ; BSR set to: 0
  4312   0009DA  C193  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4313   0009DE  C194  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4314   0009E2                     	if	0	;tblptru may be non-zero
  4315   0009E2                     	endif
  4316   0009E2                     	if	0	;tblptru may be non-zero
  4317   0009E2                     	endif
  4318   0009E2  0008               	tblrd		*
  4319   0009E4  50F5               	movf	tablat,w,c
  4320   0009E6  0A75               	xorlw	117
  4321   0009E8  A4D8               	btfss	status,2,c
  4322   0009EA  EFF9  F004         	goto	u4611
  4323   0009EE  EFFB  F004         	goto	u4610
  4324   0009F2                     u4611:
  4325   0009F2  EF77  F005         	goto	l5159
  4326   0009F6                     u4610:
  4327   0009F6                     l5145:
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  4331   0009F6  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4332   0009FA  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4333   0009FE  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4334   000A02  0E02               	movlw	2
  4335   000A04  26DE               	addwf	postinc2,f,c
  4336   000A06  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4337   000A0A  0E00               	movlw	0
  4338   000A0C  22DD               	addwfc	postdec2,f,c
  4339   000A0E  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4340   000A12  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4341   000A16  CFDE F0C0          	movff	postinc2,??_vfpfcnvrt+2
  4342   000A1A  CFDD F0C1          	movff	postdec2,??_vfpfcnvrt+3
  4343   000A1E  C0C0  F18B         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  4344   000A22  C0C1  F18C         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  4345   000A26  0101               	movlb	1	; () banked
  4346   000A28  6B8D               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  4347   000A2A  6B8E               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  4348   000A2C  6B8F               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  4349   000A2E  6B90               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  4350   000A30  6B91               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  4351   000A32  6B92               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  4354   000A34  0E01               	movlw	1
  4355   000A36  2593               	addwf	vfpfcnvrt@cp& (0+255),w,b
  4356   000A38  0100               	movlb	0	; () banked
  4357   000A3A  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4358   000A3C  0E00               	movlw	0
  4359   000A3E  0101               	movlb	1	; () banked
  4360   000A40  2194               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  4361   000A42  0100               	movlb	0	; () banked
  4362   000A44  6FBF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4363   000A46  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4364   000A4A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4365   000A4E  C0BE  FFDE         	movff	??_vfpfcnvrt,postinc2
  4366   000A52  C0BF  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4367                           
  4368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  4369   000A56  EF5D  F005         	goto	l5157
  4370   000A5A                     l5147:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  4374   000A5A  C0B8  F095         	movff	vfpfcnvrt@fp,utoa@fp
  4375   000A5E  C0B9  F096         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4376   000A62  C18B  F097         	movff	vfpfcnvrt@convarg,utoa@d
  4377   000A66  C18C  F098         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  4378   000A6A  C18D  F099         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  4379   000A6E  C18E  F09A         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  4380   000A72  C18F  F09B         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  4381   000A76  C190  F09C         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  4382   000A7A  C191  F09D         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  4383   000A7E  C192  F09E         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  4384   000A82  EC2D  F008         	call	_utoa	;wreg free
  4385   000A86  EF05  F006         	goto	l1383
  4386   000A8A                     l5151:
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  4390   000A8A  C0B8  F095         	movff	vfpfcnvrt@fp,xtoa@fp
  4391   000A8E  C0B9  F096         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4392   000A92  C18B  F097         	movff	vfpfcnvrt@convarg,xtoa@d
  4393   000A96  C18C  F098         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  4394   000A9A  C18D  F099         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  4395   000A9E  C18E  F09A         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  4396   000AA2  C18F  F09B         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  4397   000AA6  C190  F09C         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  4398   000AAA  C191  F09D         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  4399   000AAE  C192  F09E         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  4400   000AB2  EC2A  F00A         	call	_xtoa	;wreg free
  4401   000AB6  EF05  F006         	goto	l1383
  4402   000ABA                     l5157:
  4403                           
  4404                           ; BSR set to: 0
  4405   000ABA  C193  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4406   000ABE  C194  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4407   000AC2                     	if	0	;tblptru may be non-zero
  4408   000AC2                     	endif
  4409   000AC2                     	if	0	;tblptru may be non-zero
  4410   000AC2                     	endif
  4411   000AC2  0008               	tblrd		*
  4412   000AC4  50F5               	movf	tablat,w,c
  4413   000AC6  6FBE               	movwf	??_vfpfcnvrt& (0+255),b
  4414   000AC8  6BBF               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  4415                           
  4416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4417                           ; Switch size 1, requested type "simple"
  4418                           ; Number of cases is 1, Range of values is 0 to 0
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte            4     3 (average)
  4422                           ;	Chosen strategy is simple_byte
  4423   000ACA  51BF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4424   000ACC  0A00               	xorlw	0	; case 0
  4425   000ACE  B4D8               	btfsc	status,2,c
  4426   000AD0  EF6C  F005         	goto	l5675
  4427   000AD4  EF77  F005         	goto	l5159
  4428   000AD8                     l5675:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ; Switch size 1, requested type "simple"
  4432                           ; Number of cases is 2, Range of values is 117 to 120
  4433                           ; switch strategies available:
  4434                           ; Name         Instructions Cycles
  4435                           ; simple_byte            7     4 (average)
  4436                           ;	Chosen strategy is simple_byte
  4437   000AD8  51BE               	movf	??_vfpfcnvrt& (0+255),w,b
  4438   000ADA  0A75               	xorlw	117	; case 117
  4439   000ADC  B4D8               	btfsc	status,2,c
  4440   000ADE  EF2D  F005         	goto	l5147
  4441   000AE2  0A0D               	xorlw	13	; case 120
  4442   000AE4  B4D8               	btfsc	status,2,c
  4443   000AE6  EF45  F005         	goto	l5151
  4444   000AEA  EF77  F005         	goto	l5159
  4445   000AEE                     l5159:
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  4449   000AEE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4450   000AF2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4451   000AF6  CFDE FFF6          	movff	postinc2,tblptrl
  4452   000AFA  CFDD FFF7          	movff	postdec2,tblptrh
  4453   000AFE                     	if	0	;tblptru may be non-zero
  4454   000AFE                     	endif
  4455   000AFE                     	if	0	;tblptru may be non-zero
  4456   000AFE                     	endif
  4457   000AFE  0008               	tblrd		*
  4458   000B00  50F5               	movf	tablat,w,c
  4459   000B02  0A73               	xorlw	115
  4460   000B04  B4D8               	btfsc	status,2,c
  4461   000B06  EF87  F005         	goto	u4621
  4462   000B0A  EF89  F005         	goto	u4620
  4463   000B0E                     u4621:
  4464   000B0E  EFA5  F005         	goto	l5163
  4465   000B12                     u4620:
  4466   000B12                     
  4467                           ; BSR set to: 0
  4468   000B12  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4469   000B16  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4470   000B1A  CFDE F078          	movff	postinc2,strncmp@_l
  4471   000B1E  CFDD F079          	movff	postdec2,strncmp@_l+1
  4472   000B22  0EF8               	movlw	low STR_48
  4473   000B24  6F7A               	movwf	strncmp@_r& (0+255),b
  4474   000B26  0E7F               	movlw	high STR_48
  4475   000B28  6F7B               	movwf	(strncmp@_r+1)& (0+255),b
  4476   000B2A  0E00               	movlw	0
  4477   000B2C  6F7D               	movwf	(strncmp@n+1)& (0+255),b
  4478   000B2E  0E03               	movlw	3
  4479   000B30  6F7C               	movwf	strncmp@n& (0+255),b
  4480   000B32  ECAB  F010         	call	_strncmp	;wreg free
  4481   000B36  0100               	movlb	0	; () banked
  4482   000B38  5178               	movf	?_strncmp& (0+255),w,b
  4483   000B3A  1179               	iorwf	(?_strncmp+1)& (0+255),w,b
  4484   000B3C  A4D8               	btfss	status,2,c
  4485   000B3E  EFA3  F005         	goto	u4631
  4486   000B42  EFA5  F005         	goto	u4630
  4487   000B46                     u4631:
  4488   000B46  EFE7  F005         	goto	l5175
  4489   000B4A                     u4630:
  4490   000B4A                     l5163:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  4494   000B4A  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4495   000B4E  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4496   000B52  CFDE FFF6          	movff	postinc2,tblptrl
  4497   000B56  CFDD FFF7          	movff	postdec2,tblptrh
  4498   000B5A                     	if	0	;tblptru may be non-zero
  4499   000B5A                     	endif
  4500   000B5A                     	if	0	;tblptru may be non-zero
  4501   000B5A                     	endif
  4502   000B5A  0008               	tblrd		*
  4503   000B5C  50F5               	movf	tablat,w,c
  4504   000B5E  0A73               	xorlw	115
  4505   000B60  B4D8               	btfsc	status,2,c
  4506   000B62  EFB5  F005         	goto	u4641
  4507   000B66  EFB7  F005         	goto	u4640
  4508   000B6A                     u4641:
  4509   000B6A  EFBE  F005         	goto	l5167
  4510   000B6E                     u4640:
  4511   000B6E                     
  4512                           ; BSR set to: 0
  4513   000B6E  0E00               	movlw	0
  4514   000B70  0101               	movlb	1	; () banked
  4515   000B72  6F8A               	movwf	(_vfpfcnvrt$1976+1)& (0+255),b
  4516   000B74  0E03               	movlw	3
  4517   000B76  6F89               	movwf	_vfpfcnvrt$1976& (0+255),b
  4518   000B78  EFC3  F005         	goto	l5169
  4519   000B7C                     l5167:
  4520                           
  4521                           ; BSR set to: 0
  4522   000B7C  0E00               	movlw	0
  4523   000B7E  0101               	movlb	1	; () banked
  4524   000B80  6F8A               	movwf	(_vfpfcnvrt$1976+1)& (0+255),b
  4525   000B82  0E01               	movlw	1
  4526   000B84  6F89               	movwf	_vfpfcnvrt$1976& (0+255),b
  4527   000B86                     l5169:
  4528                           
  4529                           ; BSR set to: 1
  4530   000B86  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4531   000B8A  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4532   000B8E  5189               	movf	_vfpfcnvrt$1976& (0+255),w,b
  4533   000B90  26DE               	addwf	postinc2,f,c
  4534   000B92  518A               	movf	(_vfpfcnvrt$1976+1)& (0+255),w,b
  4535   000B94  22DD               	addwfc	postdec2,f,c
  4536   000B96                     
  4537                           ; BSR set to: 1
  4538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  4539   000B96  C0B8  F083         	movff	vfpfcnvrt@fp,stoa@fp
  4540   000B9A  C0B9  F084         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  4541   000B9E  C0BC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4542   000BA2  C0BD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4543   000BA6  CFDF F0BE          	movff	indf2,??_vfpfcnvrt
  4544   000BAA  0E02               	movlw	2
  4545   000BAC  26DE               	addwf	postinc2,f,c
  4546   000BAE  CFDF F0BF          	movff	indf2,??_vfpfcnvrt+1
  4547   000BB2  0E00               	movlw	0
  4548   000BB4  22DD               	addwfc	postdec2,f,c
  4549   000BB6  C0BE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4550   000BBA  C0BF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4551   000BBE  CFDE F085          	movff	postinc2,stoa@s
  4552   000BC2  CFDD F086          	movff	postdec2,stoa@s+1
  4553   000BC6  ECFA  F00B         	call	_stoa	;wreg free
  4554   000BCA  EF05  F006         	goto	l1383
  4555   000BCE                     l5175:
  4556                           
  4557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  4558   000BCE  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4559   000BD2  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4560   000BD6  2ADE               	incf	postinc2,f,c
  4561   000BD8  0E00               	movlw	0
  4562   000BDA  22DD               	addwfc	postdec2,f,c
  4563   000BDC  EF05  F006         	goto	l1383
  4564   000BE0                     l5179:
  4565                           
  4566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  4567   000BE0  C0BA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4568   000BE4  C0BB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4569   000BE8  CFDE FFF6          	movff	postinc2,tblptrl
  4570   000BEC  CFDD FFF7          	movff	postdec2,tblptrh
  4571   000BF0                     	if	0	;tblptru may be non-zero
  4572   000BF0                     	endif
  4573   000BF0                     	if	0	;tblptru may be non-zero
  4574   000BF0                     	endif
  4575   000BF0  0008               	tblrd		*
  4576   000BF2  50F5               	movf	tablat,w,c
  4577   000BF4  0100               	movlb	0	; () banked
  4578   000BF6  6F7A               	movwf	fputc@c& (0+255),b
  4579   000BF8  6B7B               	clrf	(fputc@c+1)& (0+255),b
  4580   000BFA  C0B8  F07C         	movff	vfpfcnvrt@fp,fputc@fp
  4581   000BFE  C0B9  F07D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4582   000C02  EC3C  F014         	call	_fputc	;wreg free
  4583   000C06  EFE7  F005         	goto	l5175
  4584   000C0A                     l1383:
  4585   000C0A  0012               	return		;funcret
  4586   000C0C                     __end_of_vfpfcnvrt:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _xtoa *****************
  4590 ;; Defined at:
  4591 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  4594 ;;		 -> NULL(0), 
  4595 ;;  d               8   55[BANK0 ] unsigned long long 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  n               8   77[BANK0 ] unsigned long long 
  4598 ;;  i               2   85[BANK0 ] int 
  4599 ;;  w               2   75[BANK0 ] int 
  4600 ;;  p               2   73[BANK0 ] int 
  4601 ;;  c               1   87[BANK0 ] unsigned char 
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4611 ;;      Params:         0      10       0       0       0       0       0
  4612 ;;      Locals:         0      17       0       0       0       0       0
  4613 ;;      Temps:          0       8       0       0       0       0       0
  4614 ;;      Totals:         0      35       0       0       0       0       0
  4615 ;;Total ram usage:       35 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 16
  4618 ;; This function calls:
  4619 ;;		_pad
  4620 ;; This function is called by:
  4621 ;;		_vfpfcnvrt
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text8
  4626   001454                     __ptext8:
  4627                           	callstack 0
  4628   001454                     _xtoa:
  4629                           	callstack 11
  4630   001454                     
  4631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  4632   001454  0100               	movlb	0	; () banked
  4633   001456  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  4634   001458  EF30  F00A         	goto	u4361
  4635   00145C  EF32  F00A         	goto	u4360
  4636   001460                     u4361:
  4637   001460  EF33  F00A         	goto	l4999
  4638   001464                     u4360:
  4639   001464                     
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  4642   001464  93DA               	bcf	_flags& (0+255),1,b
  4643   001466                     l4999:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  4647   001466  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  4648   001468  EF40  F00A         	goto	u4370
  4649   00146C  51D1               	movf	(_prec+1)& (0+255),w,b
  4650   00146E  E106               	bnz	u4371
  4651   001470  05D0               	decf	_prec& (0+255),w,b
  4652   001472  B0D8               	btfsc	status,0,c
  4653   001474  EF3E  F00A         	goto	u4371
  4654   001478  EF40  F00A         	goto	u4370
  4655   00147C                     u4371:
  4656   00147C  EF46  F00A         	goto	l1349
  4657   001480                     u4370:
  4658   001480                     
  4659                           ; BSR set to: 0
  4660   001480  0E00               	movlw	0
  4661   001482  6FAA               	movwf	(xtoa@p+1)& (0+255),b
  4662   001484  0E01               	movlw	1
  4663   001486  6FA9               	movwf	xtoa@p& (0+255),b
  4664   001488  EF4A  F00A         	goto	l1351
  4665   00148C                     l1349:
  4666                           
  4667                           ; BSR set to: 0
  4668   00148C  C0D0  F0A9         	movff	_prec,xtoa@p
  4669   001490  C0D1  F0AA         	movff	_prec+1,xtoa@p+1
  4670   001494                     l1351:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  4674   001494  C0CE  F0AB         	movff	_width,xtoa@w
  4675   001498  C0CF  F0AC         	movff	_width+1,xtoa@w+1
  4676                           
  4677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  4678   00149C  C097  F0AD         	movff	xtoa@d,xtoa@n
  4679   0014A0  C098  F0AE         	movff	xtoa@d+1,xtoa@n+1
  4680   0014A4  C099  F0AF         	movff	xtoa@d+2,xtoa@n+2
  4681   0014A8  C09A  F0B0         	movff	xtoa@d+3,xtoa@n+3
  4682   0014AC  C09B  F0B1         	movff	xtoa@d+4,xtoa@n+4
  4683   0014B0  C09C  F0B2         	movff	xtoa@d+5,xtoa@n+5
  4684   0014B4  C09D  F0B3         	movff	xtoa@d+6,xtoa@n+6
  4685   0014B8  C09E  F0B4         	movff	xtoa@d+7,xtoa@n+7
  4686   0014BC                     
  4687                           ; BSR set to: 0
  4688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  4689   0014BC  0E00               	movlw	0
  4690   0014BE  6FB6               	movwf	(xtoa@i+1)& (0+255),b
  4691   0014C0  0E1F               	movlw	31
  4692   0014C2  6FB5               	movwf	xtoa@i& (0+255),b
  4693   0014C4                     
  4694                           ; BSR set to: 0
  4695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  4696   0014C4  0E00               	movlw	0
  4697   0014C6  0101               	movlb	1	; () banked
  4698   0014C8  6F45               	movwf	(_dbuf+31)& (0+255),b
  4699                           
  4700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  4701   0014CA  EFC2  F00A         	goto	l5027
  4702   0014CE                     l5007:
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  4706   0014CE  07B5               	decf	xtoa@i& (0+255),f,b
  4707   0014D0  A0D8               	btfss	status,0,c
  4708   0014D2  07B6               	decf	(xtoa@i+1)& (0+255),f,b
  4709   0014D4                     
  4710                           ; BSR set to: 0
  4711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  4712   0014D4  51AD               	movf	xtoa@n& (0+255),w,b
  4713   0014D6  0B0F               	andlw	15
  4714   0014D8  6FB7               	movwf	xtoa@c& (0+255),b
  4715   0014DA                     
  4716                           ; BSR set to: 0
  4717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4718   0014DA  0E09               	movlw	9
  4719   0014DC  65B7               	cpfsgt	xtoa@c& (0+255),b
  4720   0014DE  EF73  F00A         	goto	u4381
  4721   0014E2  EF75  F00A         	goto	u4380
  4722   0014E6                     u4381:
  4723   0014E6  EF7D  F00A         	goto	l5015
  4724   0014EA                     u4380:
  4725   0014EA                     
  4726                           ; BSR set to: 0
  4727   0014EA  0E57               	movlw	87
  4728   0014EC  25B7               	addwf	xtoa@c& (0+255),w,b
  4729   0014EE  6FA7               	movwf	_xtoa$1956& (0+255),b
  4730   0014F0  6BA8               	clrf	(_xtoa$1956+1)& (0+255),b
  4731   0014F2  0E00               	movlw	0
  4732   0014F4  23A8               	addwfc	(_xtoa$1956+1)& (0+255),f,b
  4733   0014F6  EF83  F00A         	goto	l5017
  4734   0014FA                     l5015:
  4735                           
  4736                           ; BSR set to: 0
  4737   0014FA  0E30               	movlw	48
  4738   0014FC  25B7               	addwf	xtoa@c& (0+255),w,b
  4739   0014FE  6FA7               	movwf	_xtoa$1956& (0+255),b
  4740   001500  6BA8               	clrf	(_xtoa$1956+1)& (0+255),b
  4741   001502  0E00               	movlw	0
  4742   001504  23A8               	addwfc	(_xtoa$1956+1)& (0+255),f,b
  4743   001506                     l5017:
  4744                           
  4745                           ; BSR set to: 0
  4746   001506  C0A7  F0B7         	movff	_xtoa$1956,xtoa@c
  4747   00150A                     
  4748                           ; BSR set to: 0
  4749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  4750   00150A  0E26               	movlw	low _dbuf
  4751   00150C  25B5               	addwf	xtoa@i& (0+255),w,b
  4752   00150E  6ED9               	movwf	fsr2l,c
  4753   001510  0E01               	movlw	high _dbuf
  4754   001512  21B6               	addwfc	(xtoa@i+1)& (0+255),w,b
  4755   001514  6EDA               	movwf	fsr2h,c
  4756   001516  C0B7  FFDF         	movff	xtoa@c,indf2
  4757   00151A                     
  4758                           ; BSR set to: 0
  4759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  4760   00151A  07A9               	decf	xtoa@p& (0+255),f,b
  4761   00151C  A0D8               	btfss	status,0,c
  4762   00151E  07AA               	decf	(xtoa@p+1)& (0+255),f,b
  4763   001520                     
  4764                           ; BSR set to: 0
  4765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  4766   001520  07AB               	decf	xtoa@w& (0+255),f,b
  4767   001522  A0D8               	btfss	status,0,c
  4768   001524  07AC               	decf	(xtoa@w+1)& (0+255),f,b
  4769   001526                     
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  4772   001526  C0AD  F09F         	movff	xtoa@n,??_xtoa
  4773   00152A  C0AE  F0A0         	movff	xtoa@n+1,??_xtoa+1
  4774   00152E  C0AF  F0A1         	movff	xtoa@n+2,??_xtoa+2
  4775   001532  C0B0  F0A2         	movff	xtoa@n+3,??_xtoa+3
  4776   001536  C0B1  F0A3         	movff	xtoa@n+4,??_xtoa+4
  4777   00153A  C0B2  F0A4         	movff	xtoa@n+5,??_xtoa+5
  4778   00153E  C0B3  F0A5         	movff	xtoa@n+6,??_xtoa+6
  4779   001542  C0B4  F0A6         	movff	xtoa@n+7,??_xtoa+7
  4780   001546  0E05               	movlw	5
  4781   001548  EFAF  F00A         	goto	u4390
  4782   00154C                     u4395:
  4783   00154C  90D8               	bcf	status,0,c
  4784   00154E  33A6               	rrcf	(??_xtoa+7)& (0+255),f,b
  4785   001550  33A5               	rrcf	(??_xtoa+6)& (0+255),f,b
  4786   001552  33A4               	rrcf	(??_xtoa+5)& (0+255),f,b
  4787   001554  33A3               	rrcf	(??_xtoa+4)& (0+255),f,b
  4788   001556  33A2               	rrcf	(??_xtoa+3)& (0+255),f,b
  4789   001558  33A1               	rrcf	(??_xtoa+2)& (0+255),f,b
  4790   00155A  33A0               	rrcf	(??_xtoa+1)& (0+255),f,b
  4791   00155C  339F               	rrcf	??_xtoa& (0+255),f,b
  4792   00155E                     u4390:
  4793   00155E  2EE8               	decfsz	wreg,f,c
  4794   001560  EFA6  F00A         	goto	u4395
  4795   001564  C09F  F0AD         	movff	??_xtoa,xtoa@n
  4796   001568  C0A0  F0AE         	movff	??_xtoa+1,xtoa@n+1
  4797   00156C  C0A1  F0AF         	movff	??_xtoa+2,xtoa@n+2
  4798   001570  C0A2  F0B0         	movff	??_xtoa+3,xtoa@n+3
  4799   001574  C0A3  F0B1         	movff	??_xtoa+4,xtoa@n+4
  4800   001578  C0A4  F0B2         	movff	??_xtoa+5,xtoa@n+5
  4801   00157C  C0A5  F0B3         	movff	??_xtoa+6,xtoa@n+6
  4802   001580  C0A6  F0B4         	movff	??_xtoa+7,xtoa@n+7
  4803   001584                     l5027:
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  4806   001584  0100               	movlb	0	; () banked
  4807   001586  BFB6               	btfsc	(xtoa@i+1)& (0+255),7,b
  4808   001588  EFCF  F00A         	goto	u4401
  4809   00158C  51B6               	movf	(xtoa@i+1)& (0+255),w,b
  4810   00158E  E109               	bnz	u4400
  4811   001590  0E02               	movlw	2
  4812   001592  5DB5               	subwf	xtoa@i& (0+255),w,b
  4813   001594  A0D8               	btfss	status,0,c
  4814   001596  EFCF  F00A         	goto	u4401
  4815   00159A  EFD1  F00A         	goto	u4400
  4816   00159E                     u4401:
  4817   00159E  EF01  F00B         	goto	l5037
  4818   0015A2                     u4400:
  4819   0015A2                     
  4820                           ; BSR set to: 0
  4821   0015A2  51AD               	movf	xtoa@n& (0+255),w,b
  4822   0015A4  11AE               	iorwf	(xtoa@n+1)& (0+255),w,b
  4823   0015A6  11AF               	iorwf	(xtoa@n+2)& (0+255),w,b
  4824   0015A8  11B0               	iorwf	(xtoa@n+3)& (0+255),w,b
  4825   0015AA  11B1               	iorwf	(xtoa@n+4)& (0+255),w,b
  4826   0015AC  11B2               	iorwf	(xtoa@n+5)& (0+255),w,b
  4827   0015AE  11B3               	iorwf	(xtoa@n+6)& (0+255),w,b
  4828   0015B0  11B4               	iorwf	(xtoa@n+7)& (0+255),w,b
  4829   0015B2  A4D8               	btfss	status,2,c
  4830   0015B4  EFDE  F00A         	goto	u4411
  4831   0015B8  EFE0  F00A         	goto	u4410
  4832   0015BC                     u4411:
  4833   0015BC  EF67  F00A         	goto	l5007
  4834   0015C0                     u4410:
  4835   0015C0                     
  4836                           ; BSR set to: 0
  4837   0015C0  BFAA               	btfsc	(xtoa@p+1)& (0+255),7,b
  4838   0015C2  EFED  F00A         	goto	u4420
  4839   0015C6  51AA               	movf	(xtoa@p+1)& (0+255),w,b
  4840   0015C8  E106               	bnz	u4421
  4841   0015CA  05A9               	decf	xtoa@p& (0+255),w,b
  4842   0015CC  B0D8               	btfsc	status,0,c
  4843   0015CE  EFEB  F00A         	goto	u4421
  4844   0015D2  EFED  F00A         	goto	u4420
  4845   0015D6                     u4421:
  4846   0015D6  EF67  F00A         	goto	l5007
  4847   0015DA                     u4420:
  4848   0015DA                     
  4849                           ; BSR set to: 0
  4850   0015DA  BFAC               	btfsc	(xtoa@w+1)& (0+255),7,b
  4851   0015DC  EFF8  F00A         	goto	u4431
  4852   0015E0  51AC               	movf	(xtoa@w+1)& (0+255),w,b
  4853   0015E2  E108               	bnz	u4430
  4854   0015E4  05AB               	decf	xtoa@w& (0+255),w,b
  4855   0015E6  A0D8               	btfss	status,0,c
  4856   0015E8  EFF8  F00A         	goto	u4431
  4857   0015EC  EFFA  F00A         	goto	u4430
  4858   0015F0                     u4431:
  4859   0015F0  EF01  F00B         	goto	l5037
  4860   0015F4                     u4430:
  4861   0015F4                     
  4862                           ; BSR set to: 0
  4863   0015F4  B3DA               	btfsc	_flags& (0+255),1,b
  4864   0015F6  EFFF  F00A         	goto	u4441
  4865   0015FA  EF01  F00B         	goto	u4440
  4866   0015FE                     u4441:
  4867   0015FE  EF67  F00A         	goto	l5007
  4868   001602                     u4440:
  4869   001602                     l5037:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  4873   001602  C095  F08A         	movff	xtoa@fp,pad@fp
  4874   001606  C096  F08B         	movff	xtoa@fp+1,pad@fp+1
  4875   00160A  0E26               	movlw	low _dbuf
  4876   00160C  25B5               	addwf	xtoa@i& (0+255),w,b
  4877   00160E  6F8C               	movwf	pad@buf& (0+255),b
  4878   001610  0E01               	movlw	high _dbuf
  4879   001612  21B6               	addwfc	(xtoa@i+1)& (0+255),w,b
  4880   001614  6F8D               	movwf	(pad@buf+1)& (0+255),b
  4881   001616  C0AB  F08E         	movff	xtoa@w,pad@p
  4882   00161A  C0AC  F08F         	movff	xtoa@w+1,pad@p+1
  4883   00161E  EC8D  F013         	call	_pad	;wreg free
  4884   001622  0012               	return		;funcret
  4885   001624                     __end_of_xtoa:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _utoa *****************
  4889 ;; Defined at:
  4890 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  4893 ;;		 -> NULL(0), 
  4894 ;;  d               8   55[BANK0 ] unsigned long long 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  n               8   75[BANK0 ] unsigned long long 
  4897 ;;  i               2   83[BANK0 ] int 
  4898 ;;  w               2   73[BANK0 ] int 
  4899 ;;  p               2   71[BANK0 ] int 
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1    wreg      void 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4909 ;;      Params:         0      10       0       0       0       0       0
  4910 ;;      Locals:         0      14       0       0       0       0       0
  4911 ;;      Temps:          0       8       0       0       0       0       0
  4912 ;;      Totals:         0      32       0       0       0       0       0
  4913 ;;Total ram usage:       32 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 16
  4916 ;; This function calls:
  4917 ;;		___lodiv
  4918 ;;		___lomod
  4919 ;;		_pad
  4920 ;; This function is called by:
  4921 ;;		_vfpfcnvrt
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text9
  4926   00105A                     __ptext9:
  4927                           	callstack 0
  4928   00105A                     _utoa:
  4929                           	callstack 11
  4930   00105A                     
  4931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  4932   00105A  0100               	movlb	0	; () banked
  4933   00105C  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  4934   00105E  EF33  F008         	goto	u4291
  4935   001062  EF35  F008         	goto	u4290
  4936   001066                     u4291:
  4937   001066  EF36  F008         	goto	l4963
  4938   00106A                     u4290:
  4939   00106A                     
  4940                           ; BSR set to: 0
  4941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  4942   00106A  93DA               	bcf	_flags& (0+255),1,b
  4943   00106C                     l4963:
  4944                           
  4945                           ; BSR set to: 0
  4946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  4947   00106C  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  4948   00106E  EF43  F008         	goto	u4300
  4949   001072  51D1               	movf	(_prec+1)& (0+255),w,b
  4950   001074  E106               	bnz	u4301
  4951   001076  05D0               	decf	_prec& (0+255),w,b
  4952   001078  B0D8               	btfsc	status,0,c
  4953   00107A  EF41  F008         	goto	u4301
  4954   00107E  EF43  F008         	goto	u4300
  4955   001082                     u4301:
  4956   001082  EF49  F008         	goto	l1334
  4957   001086                     u4300:
  4958   001086                     
  4959                           ; BSR set to: 0
  4960   001086  0E00               	movlw	0
  4961   001088  6FA8               	movwf	(utoa@p+1)& (0+255),b
  4962   00108A  0E01               	movlw	1
  4963   00108C  6FA7               	movwf	utoa@p& (0+255),b
  4964   00108E  EF4D  F008         	goto	l1336
  4965   001092                     l1334:
  4966                           
  4967                           ; BSR set to: 0
  4968   001092  C0D0  F0A7         	movff	_prec,utoa@p
  4969   001096  C0D1  F0A8         	movff	_prec+1,utoa@p+1
  4970   00109A                     l1336:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  4974   00109A  C0CE  F0A9         	movff	_width,utoa@w
  4975   00109E  C0CF  F0AA         	movff	_width+1,utoa@w+1
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  4978   0010A2  C097  F0AB         	movff	utoa@d,utoa@n
  4979   0010A6  C098  F0AC         	movff	utoa@d+1,utoa@n+1
  4980   0010AA  C099  F0AD         	movff	utoa@d+2,utoa@n+2
  4981   0010AE  C09A  F0AE         	movff	utoa@d+3,utoa@n+3
  4982   0010B2  C09B  F0AF         	movff	utoa@d+4,utoa@n+4
  4983   0010B6  C09C  F0B0         	movff	utoa@d+5,utoa@n+5
  4984   0010BA  C09D  F0B1         	movff	utoa@d+6,utoa@n+6
  4985   0010BE  C09E  F0B2         	movff	utoa@d+7,utoa@n+7
  4986   0010C2                     
  4987                           ; BSR set to: 0
  4988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  4989   0010C2  0E00               	movlw	0
  4990   0010C4  6FB4               	movwf	(utoa@i+1)& (0+255),b
  4991   0010C6  0E1F               	movlw	31
  4992   0010C8  6FB3               	movwf	utoa@i& (0+255),b
  4993   0010CA                     
  4994                           ; BSR set to: 0
  4995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  4996   0010CA  0E00               	movlw	0
  4997   0010CC  0101               	movlb	1	; () banked
  4998   0010CE  6F45               	movwf	(_dbuf+31)& (0+255),b
  4999                           
  5000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5001   0010D0  EFE1  F008         	goto	l4981
  5002   0010D4                     l4971:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  5006   0010D4  07B3               	decf	utoa@i& (0+255),f,b
  5007   0010D6  A0D8               	btfss	status,0,c
  5008   0010D8  07B4               	decf	(utoa@i+1)& (0+255),f,b
  5009   0010DA                     
  5010                           ; BSR set to: 0
  5011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  5012   0010DA  0E26               	movlw	low _dbuf
  5013   0010DC  25B3               	addwf	utoa@i& (0+255),w,b
  5014   0010DE  6ED9               	movwf	fsr2l,c
  5015   0010E0  0E01               	movlw	high _dbuf
  5016   0010E2  21B4               	addwfc	(utoa@i+1)& (0+255),w,b
  5017   0010E4  6EDA               	movwf	fsr2h,c
  5018   0010E6  C0AB  F078         	movff	utoa@n,___lomod@dividend
  5019   0010EA  C0AC  F079         	movff	utoa@n+1,___lomod@dividend+1
  5020   0010EE  C0AD  F07A         	movff	utoa@n+2,___lomod@dividend+2
  5021   0010F2  C0AE  F07B         	movff	utoa@n+3,___lomod@dividend+3
  5022   0010F6  C0AF  F07C         	movff	utoa@n+4,___lomod@dividend+4
  5023   0010FA  C0B0  F07D         	movff	utoa@n+5,___lomod@dividend+5
  5024   0010FE  C0B1  F07E         	movff	utoa@n+6,___lomod@dividend+6
  5025   001102  C0B2  F07F         	movff	utoa@n+7,___lomod@dividend+7
  5026   001106  0E0A               	movlw	10
  5027   001108  6F80               	movwf	___lomod@divisor& (0+255),b
  5028   00110A  0E00               	movlw	0
  5029   00110C  6F81               	movwf	(___lomod@divisor+1)& (0+255),b
  5030   00110E  0E00               	movlw	0
  5031   001110  6F82               	movwf	(___lomod@divisor+2)& (0+255),b
  5032   001112  0E00               	movlw	0
  5033   001114  6F83               	movwf	(___lomod@divisor+3)& (0+255),b
  5034   001116  0E00               	movlw	0
  5035   001118  6F84               	movwf	(___lomod@divisor+4)& (0+255),b
  5036   00111A  0E00               	movlw	0
  5037   00111C  6F85               	movwf	(___lomod@divisor+5)& (0+255),b
  5038   00111E  0E00               	movlw	0
  5039   001120  6F86               	movwf	(___lomod@divisor+6)& (0+255),b
  5040   001122  0E00               	movlw	0
  5041   001124  6F87               	movwf	(___lomod@divisor+7)& (0+255),b
  5042   001126  EC8A  F011         	call	___lomod	;wreg free
  5043   00112A  C078  F09F         	movff	?___lomod,??_utoa
  5044   00112E  C079  F0A0         	movff	?___lomod+1,??_utoa+1
  5045   001132  C07A  F0A1         	movff	?___lomod+2,??_utoa+2
  5046   001136  C07B  F0A2         	movff	?___lomod+3,??_utoa+3
  5047   00113A  C07C  F0A3         	movff	?___lomod+4,??_utoa+4
  5048   00113E  C07D  F0A4         	movff	?___lomod+5,??_utoa+5
  5049   001142  C07E  F0A5         	movff	?___lomod+6,??_utoa+6
  5050   001146  C07F  F0A6         	movff	?___lomod+7,??_utoa+7
  5051   00114A  0100               	movlb	0	; () banked
  5052   00114C  519F               	movf	??_utoa& (0+255),w,b
  5053   00114E  0F30               	addlw	48
  5054   001150  6EDF               	movwf	indf2,c
  5055   001152                     
  5056                           ; BSR set to: 0
  5057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  5058   001152  07A7               	decf	utoa@p& (0+255),f,b
  5059   001154  A0D8               	btfss	status,0,c
  5060   001156  07A8               	decf	(utoa@p+1)& (0+255),f,b
  5061   001158                     
  5062                           ; BSR set to: 0
  5063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  5064   001158  07A9               	decf	utoa@w& (0+255),f,b
  5065   00115A  A0D8               	btfss	status,0,c
  5066   00115C  07AA               	decf	(utoa@w+1)& (0+255),f,b
  5067   00115E                     
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  5070   00115E  C0AB  F078         	movff	utoa@n,___lodiv@dividend
  5071   001162  C0AC  F079         	movff	utoa@n+1,___lodiv@dividend+1
  5072   001166  C0AD  F07A         	movff	utoa@n+2,___lodiv@dividend+2
  5073   00116A  C0AE  F07B         	movff	utoa@n+3,___lodiv@dividend+3
  5074   00116E  C0AF  F07C         	movff	utoa@n+4,___lodiv@dividend+4
  5075   001172  C0B0  F07D         	movff	utoa@n+5,___lodiv@dividend+5
  5076   001176  C0B1  F07E         	movff	utoa@n+6,___lodiv@dividend+6
  5077   00117A  C0B2  F07F         	movff	utoa@n+7,___lodiv@dividend+7
  5078   00117E  0E0A               	movlw	10
  5079   001180  6F80               	movwf	___lodiv@divisor& (0+255),b
  5080   001182  0E00               	movlw	0
  5081   001184  6F81               	movwf	(___lodiv@divisor+1)& (0+255),b
  5082   001186  0E00               	movlw	0
  5083   001188  6F82               	movwf	(___lodiv@divisor+2)& (0+255),b
  5084   00118A  0E00               	movlw	0
  5085   00118C  6F83               	movwf	(___lodiv@divisor+3)& (0+255),b
  5086   00118E  0E00               	movlw	0
  5087   001190  6F84               	movwf	(___lodiv@divisor+4)& (0+255),b
  5088   001192  0E00               	movlw	0
  5089   001194  6F85               	movwf	(___lodiv@divisor+5)& (0+255),b
  5090   001196  0E00               	movlw	0
  5091   001198  6F86               	movwf	(___lodiv@divisor+6)& (0+255),b
  5092   00119A  0E00               	movlw	0
  5093   00119C  6F87               	movwf	(___lodiv@divisor+7)& (0+255),b
  5094   00119E  EC42  F00F         	call	___lodiv	;wreg free
  5095   0011A2  C078  F0AB         	movff	?___lodiv,utoa@n
  5096   0011A6  C079  F0AC         	movff	?___lodiv+1,utoa@n+1
  5097   0011AA  C07A  F0AD         	movff	?___lodiv+2,utoa@n+2
  5098   0011AE  C07B  F0AE         	movff	?___lodiv+3,utoa@n+3
  5099   0011B2  C07C  F0AF         	movff	?___lodiv+4,utoa@n+4
  5100   0011B6  C07D  F0B0         	movff	?___lodiv+5,utoa@n+5
  5101   0011BA  C07E  F0B1         	movff	?___lodiv+6,utoa@n+6
  5102   0011BE  C07F  F0B2         	movff	?___lodiv+7,utoa@n+7
  5103   0011C2                     l4981:
  5104                           
  5105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  5106   0011C2  0100               	movlb	0	; () banked
  5107   0011C4  51B3               	movf	utoa@i& (0+255),w,b
  5108   0011C6  11B4               	iorwf	(utoa@i+1)& (0+255),w,b
  5109   0011C8  B4D8               	btfsc	status,2,c
  5110   0011CA  EFE9  F008         	goto	u4311
  5111   0011CE  EFEB  F008         	goto	u4310
  5112   0011D2                     u4311:
  5113   0011D2  EF1B  F009         	goto	l4991
  5114   0011D6                     u4310:
  5115   0011D6                     
  5116                           ; BSR set to: 0
  5117   0011D6  51AB               	movf	utoa@n& (0+255),w,b
  5118   0011D8  11AC               	iorwf	(utoa@n+1)& (0+255),w,b
  5119   0011DA  11AD               	iorwf	(utoa@n+2)& (0+255),w,b
  5120   0011DC  11AE               	iorwf	(utoa@n+3)& (0+255),w,b
  5121   0011DE  11AF               	iorwf	(utoa@n+4)& (0+255),w,b
  5122   0011E0  11B0               	iorwf	(utoa@n+5)& (0+255),w,b
  5123   0011E2  11B1               	iorwf	(utoa@n+6)& (0+255),w,b
  5124   0011E4  11B2               	iorwf	(utoa@n+7)& (0+255),w,b
  5125   0011E6  A4D8               	btfss	status,2,c
  5126   0011E8  EFF8  F008         	goto	u4321
  5127   0011EC  EFFA  F008         	goto	u4320
  5128   0011F0                     u4321:
  5129   0011F0  EF6A  F008         	goto	l4971
  5130   0011F4                     u4320:
  5131   0011F4                     
  5132                           ; BSR set to: 0
  5133   0011F4  BFA8               	btfsc	(utoa@p+1)& (0+255),7,b
  5134   0011F6  EF07  F009         	goto	u4330
  5135   0011FA  51A8               	movf	(utoa@p+1)& (0+255),w,b
  5136   0011FC  E106               	bnz	u4331
  5137   0011FE  05A7               	decf	utoa@p& (0+255),w,b
  5138   001200  B0D8               	btfsc	status,0,c
  5139   001202  EF05  F009         	goto	u4331
  5140   001206  EF07  F009         	goto	u4330
  5141   00120A                     u4331:
  5142   00120A  EF6A  F008         	goto	l4971
  5143   00120E                     u4330:
  5144   00120E                     
  5145                           ; BSR set to: 0
  5146   00120E  BFAA               	btfsc	(utoa@w+1)& (0+255),7,b
  5147   001210  EF12  F009         	goto	u4341
  5148   001214  51AA               	movf	(utoa@w+1)& (0+255),w,b
  5149   001216  E108               	bnz	u4340
  5150   001218  05A9               	decf	utoa@w& (0+255),w,b
  5151   00121A  A0D8               	btfss	status,0,c
  5152   00121C  EF12  F009         	goto	u4341
  5153   001220  EF14  F009         	goto	u4340
  5154   001224                     u4341:
  5155   001224  EF1B  F009         	goto	l4991
  5156   001228                     u4340:
  5157   001228                     
  5158                           ; BSR set to: 0
  5159   001228  B3DA               	btfsc	_flags& (0+255),1,b
  5160   00122A  EF19  F009         	goto	u4351
  5161   00122E  EF1B  F009         	goto	u4350
  5162   001232                     u4351:
  5163   001232  EF6A  F008         	goto	l4971
  5164   001236                     u4350:
  5165   001236                     l4991:
  5166                           
  5167                           ; BSR set to: 0
  5168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5169   001236  C095  F08A         	movff	utoa@fp,pad@fp
  5170   00123A  C096  F08B         	movff	utoa@fp+1,pad@fp+1
  5171   00123E  0E26               	movlw	low _dbuf
  5172   001240  25B3               	addwf	utoa@i& (0+255),w,b
  5173   001242  6F8C               	movwf	pad@buf& (0+255),b
  5174   001244  0E01               	movlw	high _dbuf
  5175   001246  21B4               	addwfc	(utoa@i+1)& (0+255),w,b
  5176   001248  6F8D               	movwf	(pad@buf+1)& (0+255),b
  5177   00124A  C0A9  F08E         	movff	utoa@w,pad@p
  5178   00124E  C0AA  F08F         	movff	utoa@w+1,pad@p+1
  5179   001252  EC8D  F013         	call	_pad	;wreg free
  5180   001256  0012               	return		;funcret
  5181   001258                     __end_of_utoa:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function _pad *****************
  5185 ;; Defined at:
  5186 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  fp              2   42[BANK0 ] PTR struct _IO_FILE
  5189 ;;		 -> NULL(0), 
  5190 ;;  buf             2   44[BANK0 ] PTR unsigned char 
  5191 ;;		 -> dbuf(32), 
  5192 ;;  p               2   46[BANK0 ] int 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  w               2   51[BANK0 ] int 
  5195 ;;  i               2   49[BANK0 ] int 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5205 ;;      Params:         0       6       0       0       0       0       0
  5206 ;;      Locals:         0       4       0       0       0       0       0
  5207 ;;      Temps:          0       1       0       0       0       0       0
  5208 ;;      Totals:         0      11       0       0       0       0       0
  5209 ;;Total ram usage:       11 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 15
  5212 ;; This function calls:
  5213 ;;		_fputc
  5214 ;;		_fputs
  5215 ;; This function is called by:
  5216 ;;		_utoa
  5217 ;;		_xtoa
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           	psect	text10
  5222   00271A                     __ptext10:
  5223                           	callstack 0
  5224   00271A                     _pad:
  5225                           	callstack 11
  5226   00271A                     
  5227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  5228   00271A  0100               	movlb	0	; () banked
  5229   00271C  A1DA               	btfss	_flags& (0+255),0,b
  5230   00271E  EF93  F013         	goto	u4061
  5231   002722  EF95  F013         	goto	u4060
  5232   002726                     u4061:
  5233   002726  EF9F  F013         	goto	l4853
  5234   00272A                     u4060:
  5235   00272A                     
  5236                           ; BSR set to: 0
  5237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  5238   00272A  C08C  F083         	movff	pad@buf,fputs@s
  5239   00272E  C08D  F084         	movff	pad@buf+1,fputs@s+1
  5240   002732  C08A  F085         	movff	pad@fp,fputs@fp
  5241   002736  C08B  F086         	movff	pad@fp+1,fputs@fp+1
  5242   00273A  EC8A  F015         	call	_fputs	;wreg free
  5243   00273E                     l4853:
  5244                           
  5245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  5246   00273E  0100               	movlb	0	; () banked
  5247   002740  BF8F               	btfsc	(pad@p+1)& (0+255),7,b
  5248   002742  EFA5  F013         	goto	u4071
  5249   002746  EFA7  F013         	goto	u4070
  5250   00274A                     u4071:
  5251   00274A  EFAD  F013         	goto	l4857
  5252   00274E                     u4070:
  5253   00274E                     
  5254                           ; BSR set to: 0
  5255   00274E  C08E  F093         	movff	pad@p,pad@w
  5256   002752  C08F  F094         	movff	pad@p+1,pad@w+1
  5257   002756  EFB1  F013         	goto	l1285
  5258   00275A                     l4857:
  5259                           
  5260                           ; BSR set to: 0
  5261   00275A  0E00               	movlw	0
  5262   00275C  6F94               	movwf	(pad@w+1)& (0+255),b
  5263   00275E  0E00               	movlw	0
  5264   002760  6F93               	movwf	pad@w& (0+255),b
  5265   002762                     l1285:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5269   002762  0E00               	movlw	0
  5270   002764  6F92               	movwf	(pad@i+1)& (0+255),b
  5271   002766  0E00               	movlw	0
  5272   002768  6F91               	movwf	pad@i& (0+255),b
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5275   00276A  EFC4  F013         	goto	l4863
  5276   00276E                     l4859:
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5280   00276E  0E00               	movlw	0
  5281   002770  6F7B               	movwf	(fputc@c+1)& (0+255),b
  5282   002772  0E20               	movlw	32
  5283   002774  6F7A               	movwf	fputc@c& (0+255),b
  5284   002776  C08A  F07C         	movff	pad@fp,fputc@fp
  5285   00277A  C08B  F07D         	movff	pad@fp+1,fputc@fp+1
  5286   00277E  EC3C  F014         	call	_fputc	;wreg free
  5287   002782                     
  5288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5289   002782  0100               	movlb	0	; () banked
  5290   002784  4B91               	infsnz	pad@i& (0+255),f,b
  5291   002786  2B92               	incf	(pad@i+1)& (0+255),f,b
  5292   002788                     l4863:
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5296   002788  5193               	movf	pad@w& (0+255),w,b
  5297   00278A  5D91               	subwf	pad@i& (0+255),w,b
  5298   00278C  5192               	movf	(pad@i+1)& (0+255),w,b
  5299   00278E  0A80               	xorlw	128
  5300   002790  6F90               	movwf	??_pad& (0+255),b
  5301   002792  5194               	movf	(pad@w+1)& (0+255),w,b
  5302   002794  0A80               	xorlw	128
  5303   002796  5990               	subwfb	??_pad& (0+255),w,b
  5304   002798  A0D8               	btfss	status,0,c
  5305   00279A  EFD1  F013         	goto	u4081
  5306   00279E  EFD3  F013         	goto	u4080
  5307   0027A2                     u4081:
  5308   0027A2  EFB7  F013         	goto	l4859
  5309   0027A6                     u4080:
  5310   0027A6                     
  5311                           ; BSR set to: 0
  5312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  5313   0027A6  B1DA               	btfsc	_flags& (0+255),0,b
  5314   0027A8  EFD8  F013         	goto	u4091
  5315   0027AC  EFDA  F013         	goto	u4090
  5316   0027B0                     u4091:
  5317   0027B0  EFE4  F013         	goto	l1290
  5318   0027B4                     u4090:
  5319   0027B4                     
  5320                           ; BSR set to: 0
  5321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5322   0027B4  C08C  F083         	movff	pad@buf,fputs@s
  5323   0027B8  C08D  F084         	movff	pad@buf+1,fputs@s+1
  5324   0027BC  C08A  F085         	movff	pad@fp,fputs@fp
  5325   0027C0  C08B  F086         	movff	pad@fp+1,fputs@fp+1
  5326   0027C4  EC8A  F015         	call	_fputs	;wreg free
  5327   0027C8                     l1290:
  5328   0027C8  0012               	return		;funcret
  5329   0027CA                     __end_of_pad:
  5330                           	callstack 0
  5331                           
  5332 ;; *************** function _fputs *****************
  5333 ;; Defined at:
  5334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  s               2   35[BANK0 ] PTR const unsigned char 
  5337 ;;		 -> dbuf(32), 
  5338 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  5339 ;;		 -> NULL(0), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  i               2   40[BANK0 ] int 
  5342 ;;  c               1   39[BANK0 ] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  2   35[BANK0 ] int 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5352 ;;      Params:         0       4       0       0       0       0       0
  5353 ;;      Locals:         0       3       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0
  5355 ;;      Totals:         0       7       0       0       0       0       0
  5356 ;;Total ram usage:        7 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 14
  5359 ;; This function calls:
  5360 ;;		_fputc
  5361 ;; This function is called by:
  5362 ;;		_pad
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text11
  5367   002B14                     __ptext11:
  5368                           	callstack 0
  5369   002B14                     _fputs:
  5370                           	callstack 11
  5371   002B14  0E00               	movlw	0
  5372   002B16  0100               	movlb	0	; () banked
  5373   002B18  6F89               	movwf	(fputs@i+1)& (0+255),b
  5374   002B1A  0E00               	movlw	0
  5375   002B1C  6F88               	movwf	fputs@i& (0+255),b
  5376   002B1E  EF9D  F015         	goto	l4803
  5377   002B22                     l4799:
  5378                           
  5379                           ; BSR set to: 0
  5380   002B22  C087  F07A         	movff	fputs@c,fputc@c
  5381   002B26  6B7B               	clrf	(fputc@c+1)& (0+255),b
  5382   002B28  C085  F07C         	movff	fputs@fp,fputc@fp
  5383   002B2C  C086  F07D         	movff	fputs@fp+1,fputc@fp+1
  5384   002B30  EC3C  F014         	call	_fputc	;wreg free
  5385   002B34  0100               	movlb	0	; () banked
  5386   002B36  4B88               	infsnz	fputs@i& (0+255),f,b
  5387   002B38  2B89               	incf	(fputs@i+1)& (0+255),f,b
  5388   002B3A                     l4803:
  5389                           
  5390                           ; BSR set to: 0
  5391   002B3A  5188               	movf	fputs@i& (0+255),w,b
  5392   002B3C  2583               	addwf	fputs@s& (0+255),w,b
  5393   002B3E  6ED9               	movwf	fsr2l,c
  5394   002B40  5189               	movf	(fputs@i+1)& (0+255),w,b
  5395   002B42  2184               	addwfc	(fputs@s+1)& (0+255),w,b
  5396   002B44  6EDA               	movwf	fsr2h,c
  5397   002B46  50DF               	movf	indf2,w,c
  5398   002B48  6F87               	movwf	fputs@c& (0+255),b
  5399   002B4A  5187               	movf	fputs@c& (0+255),w,b
  5400   002B4C  A4D8               	btfss	status,2,c
  5401   002B4E  EFAB  F015         	goto	u3981
  5402   002B52  EFAD  F015         	goto	u3980
  5403   002B56                     u3981:
  5404   002B56  EF91  F015         	goto	l4799
  5405   002B5A                     u3980:
  5406   002B5A                     
  5407                           ; BSR set to: 0
  5408   002B5A  0012               	return		;funcret
  5409   002B5C                     __end_of_fputs:
  5410                           	callstack 0
  5411                           
  5412 ;; *************** function ___lomod *****************
  5413 ;; Defined at:
  5414 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;  dividend        8   24[BANK0 ] unsigned long long 
  5417 ;;  divisor         8   32[BANK0 ] unsigned long long 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  counter         1   40[BANK0 ] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  8   24[BANK0 ] unsigned long long 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5429 ;;      Params:         0      16       0       0       0       0       0
  5430 ;;      Locals:         0       1       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0
  5432 ;;      Totals:         0      17       0       0       0       0       0
  5433 ;;Total ram usage:       17 bytes
  5434 ;; Hardware stack levels used: 1
  5435 ;; Hardware stack levels required when called: 11
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_utoa
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           	psect	text12
  5444   002314                     __ptext12:
  5445                           	callstack 0
  5446   002314                     ___lomod:
  5447                           	callstack 15
  5448   002314  0100               	movlb	0	; () banked
  5449   002316  5180               	movf	___lomod@divisor& (0+255),w,b
  5450   002318  1181               	iorwf	(___lomod@divisor+1)& (0+255),w,b
  5451   00231A  1182               	iorwf	(___lomod@divisor+2)& (0+255),w,b
  5452   00231C  1183               	iorwf	(___lomod@divisor+3)& (0+255),w,b
  5453   00231E  1184               	iorwf	(___lomod@divisor+4)& (0+255),w,b
  5454   002320  1185               	iorwf	(___lomod@divisor+5)& (0+255),w,b
  5455   002322  1186               	iorwf	(___lomod@divisor+6)& (0+255),w,b
  5456   002324  1187               	iorwf	(___lomod@divisor+7)& (0+255),w,b
  5457   002326  B4D8               	btfsc	status,2,c
  5458   002328  EF98  F011         	goto	u4031
  5459   00232C  EF9A  F011         	goto	u4030
  5460   002330                     u4031:
  5461   002330  EFE2  F011         	goto	l1026
  5462   002334                     u4030:
  5463   002334                     
  5464                           ; BSR set to: 0
  5465   002334  0E01               	movlw	1
  5466   002336  6F88               	movwf	___lomod@counter& (0+255),b
  5467   002338  EFA8  F011         	goto	l4839
  5468   00233C                     l4837:
  5469                           
  5470                           ; BSR set to: 0
  5471   00233C  90D8               	bcf	status,0,c
  5472   00233E  3780               	rlcf	___lomod@divisor& (0+255),f,b
  5473   002340  3781               	rlcf	(___lomod@divisor+1)& (0+255),f,b
  5474   002342  3782               	rlcf	(___lomod@divisor+2)& (0+255),f,b
  5475   002344  3783               	rlcf	(___lomod@divisor+3)& (0+255),f,b
  5476   002346  3784               	rlcf	(___lomod@divisor+4)& (0+255),f,b
  5477   002348  3785               	rlcf	(___lomod@divisor+5)& (0+255),f,b
  5478   00234A  3786               	rlcf	(___lomod@divisor+6)& (0+255),f,b
  5479   00234C  3787               	rlcf	(___lomod@divisor+7)& (0+255),f,b
  5480   00234E  2B88               	incf	___lomod@counter& (0+255),f,b
  5481   002350                     l4839:
  5482                           
  5483                           ; BSR set to: 0
  5484   002350  AF87               	btfss	(___lomod@divisor+7)& (0+255),7,b
  5485   002352  EFAD  F011         	goto	u4041
  5486   002356  EFAF  F011         	goto	u4040
  5487   00235A                     u4041:
  5488   00235A  EF9E  F011         	goto	l4837
  5489   00235E                     u4040:
  5490   00235E                     l4841:
  5491                           
  5492                           ; BSR set to: 0
  5493   00235E  5180               	movf	___lomod@divisor& (0+255),w,b
  5494   002360  5D78               	subwf	___lomod@dividend& (0+255),w,b
  5495   002362  5181               	movf	(___lomod@divisor+1)& (0+255),w,b
  5496   002364  5979               	subwfb	(___lomod@dividend+1)& (0+255),w,b
  5497   002366  5182               	movf	(___lomod@divisor+2)& (0+255),w,b
  5498   002368  597A               	subwfb	(___lomod@dividend+2)& (0+255),w,b
  5499   00236A  5183               	movf	(___lomod@divisor+3)& (0+255),w,b
  5500   00236C  597B               	subwfb	(___lomod@dividend+3)& (0+255),w,b
  5501   00236E  5184               	movf	(___lomod@divisor+4)& (0+255),w,b
  5502   002370  597C               	subwfb	(___lomod@dividend+4)& (0+255),w,b
  5503   002372  5185               	movf	(___lomod@divisor+5)& (0+255),w,b
  5504   002374  597D               	subwfb	(___lomod@dividend+5)& (0+255),w,b
  5505   002376  5186               	movf	(___lomod@divisor+6)& (0+255),w,b
  5506   002378  597E               	subwfb	(___lomod@dividend+6)& (0+255),w,b
  5507   00237A  5187               	movf	(___lomod@divisor+7)& (0+255),w,b
  5508   00237C  597F               	subwfb	(___lomod@dividend+7)& (0+255),w,b
  5509   00237E  A0D8               	btfss	status,0,c
  5510   002380  EFC4  F011         	goto	u4051
  5511   002384  EFC6  F011         	goto	u4050
  5512   002388                     u4051:
  5513   002388  EFD6  F011         	goto	l4845
  5514   00238C                     u4050:
  5515   00238C                     
  5516                           ; BSR set to: 0
  5517   00238C  5180               	movf	___lomod@divisor& (0+255),w,b
  5518   00238E  5F78               	subwf	___lomod@dividend& (0+255),f,b
  5519   002390  5181               	movf	(___lomod@divisor+1)& (0+255),w,b
  5520   002392  5B79               	subwfb	(___lomod@dividend+1)& (0+255),f,b
  5521   002394  5182               	movf	(___lomod@divisor+2)& (0+255),w,b
  5522   002396  5B7A               	subwfb	(___lomod@dividend+2)& (0+255),f,b
  5523   002398  5183               	movf	(___lomod@divisor+3)& (0+255),w,b
  5524   00239A  5B7B               	subwfb	(___lomod@dividend+3)& (0+255),f,b
  5525   00239C  5184               	movf	(___lomod@divisor+4)& (0+255),w,b
  5526   00239E  5B7C               	subwfb	(___lomod@dividend+4)& (0+255),f,b
  5527   0023A0  5185               	movf	(___lomod@divisor+5)& (0+255),w,b
  5528   0023A2  5B7D               	subwfb	(___lomod@dividend+5)& (0+255),f,b
  5529   0023A4  5186               	movf	(___lomod@divisor+6)& (0+255),w,b
  5530   0023A6  5B7E               	subwfb	(___lomod@dividend+6)& (0+255),f,b
  5531   0023A8  5187               	movf	(___lomod@divisor+7)& (0+255),w,b
  5532   0023AA  5B7F               	subwfb	(___lomod@dividend+7)& (0+255),f,b
  5533   0023AC                     l4845:
  5534                           
  5535                           ; BSR set to: 0
  5536   0023AC  90D8               	bcf	status,0,c
  5537   0023AE  3387               	rrcf	(___lomod@divisor+7)& (0+255),f,b
  5538   0023B0  3386               	rrcf	(___lomod@divisor+6)& (0+255),f,b
  5539   0023B2  3385               	rrcf	(___lomod@divisor+5)& (0+255),f,b
  5540   0023B4  3384               	rrcf	(___lomod@divisor+4)& (0+255),f,b
  5541   0023B6  3383               	rrcf	(___lomod@divisor+3)& (0+255),f,b
  5542   0023B8  3382               	rrcf	(___lomod@divisor+2)& (0+255),f,b
  5543   0023BA  3381               	rrcf	(___lomod@divisor+1)& (0+255),f,b
  5544   0023BC  3380               	rrcf	___lomod@divisor& (0+255),f,b
  5545   0023BE                     
  5546                           ; BSR set to: 0
  5547   0023BE  2F88               	decfsz	___lomod@counter& (0+255),f,b
  5548   0023C0  EFAF  F011         	goto	l4841
  5549   0023C4                     l1026:
  5550                           
  5551                           ; BSR set to: 0
  5552   0023C4  C078  F078         	movff	___lomod@dividend,?___lomod
  5553   0023C8  C079  F079         	movff	___lomod@dividend+1,?___lomod+1
  5554   0023CC  C07A  F07A         	movff	___lomod@dividend+2,?___lomod+2
  5555   0023D0  C07B  F07B         	movff	___lomod@dividend+3,?___lomod+3
  5556   0023D4  C07C  F07C         	movff	___lomod@dividend+4,?___lomod+4
  5557   0023D8  C07D  F07D         	movff	___lomod@dividend+5,?___lomod+5
  5558   0023DC  C07E  F07E         	movff	___lomod@dividend+6,?___lomod+6
  5559   0023E0  C07F  F07F         	movff	___lomod@dividend+7,?___lomod+7
  5560   0023E4                     
  5561                           ; BSR set to: 0
  5562   0023E4  0012               	return		;funcret
  5563   0023E6                     __end_of___lomod:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function ___lodiv *****************
  5567 ;; Defined at:
  5568 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  dividend        8   24[BANK0 ] unsigned long long 
  5571 ;;  divisor         8   32[BANK0 ] unsigned long long 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  quotient        8   40[BANK0 ] unsigned long long 
  5574 ;;  counter         1   48[BANK0 ] unsigned char 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  8   24[BANK0 ] unsigned long long 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5584 ;;      Params:         0      16       0       0       0       0       0
  5585 ;;      Locals:         0       9       0       0       0       0       0
  5586 ;;      Temps:          0       0       0       0       0       0       0
  5587 ;;      Totals:         0      25       0       0       0       0       0
  5588 ;;Total ram usage:       25 bytes
  5589 ;; Hardware stack levels used: 1
  5590 ;; Hardware stack levels required when called: 11
  5591 ;; This function calls:
  5592 ;;		Nothing
  5593 ;; This function is called by:
  5594 ;;		_utoa
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text13
  5599   001E84                     __ptext13:
  5600                           	callstack 0
  5601   001E84                     ___lodiv:
  5602                           	callstack 15
  5603   001E84  EE20  F088         	lfsr	2,___lodiv@quotient
  5604   001E88  0E07               	movlw	7
  5605   001E8A                     u3991:
  5606   001E8A  6ADE               	clrf	postinc2,c
  5607   001E8C  06E8               	decf	wreg,f,c
  5608   001E8E  E2FD               	bc	u3991
  5609   001E90  0100               	movlb	0	; () banked
  5610   001E92  5180               	movf	___lodiv@divisor& (0+255),w,b
  5611   001E94  1181               	iorwf	(___lodiv@divisor+1)& (0+255),w,b
  5612   001E96  1182               	iorwf	(___lodiv@divisor+2)& (0+255),w,b
  5613   001E98  1183               	iorwf	(___lodiv@divisor+3)& (0+255),w,b
  5614   001E9A  1184               	iorwf	(___lodiv@divisor+4)& (0+255),w,b
  5615   001E9C  1185               	iorwf	(___lodiv@divisor+5)& (0+255),w,b
  5616   001E9E  1186               	iorwf	(___lodiv@divisor+6)& (0+255),w,b
  5617   001EA0  1187               	iorwf	(___lodiv@divisor+7)& (0+255),w,b
  5618   001EA2  B4D8               	btfsc	status,2,c
  5619   001EA4  EF56  F00F         	goto	u4001
  5620   001EA8  EF58  F00F         	goto	u4000
  5621   001EAC                     u4001:
  5622   001EAC  EFAA  F00F         	goto	l1016
  5623   001EB0                     u4000:
  5624   001EB0                     
  5625                           ; BSR set to: 0
  5626   001EB0  0E01               	movlw	1
  5627   001EB2  6F90               	movwf	___lodiv@counter& (0+255),b
  5628   001EB4  EF66  F00F         	goto	l4819
  5629   001EB8                     l4817:
  5630                           
  5631                           ; BSR set to: 0
  5632   001EB8  90D8               	bcf	status,0,c
  5633   001EBA  3780               	rlcf	___lodiv@divisor& (0+255),f,b
  5634   001EBC  3781               	rlcf	(___lodiv@divisor+1)& (0+255),f,b
  5635   001EBE  3782               	rlcf	(___lodiv@divisor+2)& (0+255),f,b
  5636   001EC0  3783               	rlcf	(___lodiv@divisor+3)& (0+255),f,b
  5637   001EC2  3784               	rlcf	(___lodiv@divisor+4)& (0+255),f,b
  5638   001EC4  3785               	rlcf	(___lodiv@divisor+5)& (0+255),f,b
  5639   001EC6  3786               	rlcf	(___lodiv@divisor+6)& (0+255),f,b
  5640   001EC8  3787               	rlcf	(___lodiv@divisor+7)& (0+255),f,b
  5641   001ECA  2B90               	incf	___lodiv@counter& (0+255),f,b
  5642   001ECC                     l4819:
  5643                           
  5644                           ; BSR set to: 0
  5645   001ECC  AF87               	btfss	(___lodiv@divisor+7)& (0+255),7,b
  5646   001ECE  EF6B  F00F         	goto	u4011
  5647   001ED2  EF6D  F00F         	goto	u4010
  5648   001ED6                     u4011:
  5649   001ED6  EF5C  F00F         	goto	l4817
  5650   001EDA                     u4010:
  5651   001EDA                     l4821:
  5652                           
  5653                           ; BSR set to: 0
  5654   001EDA  90D8               	bcf	status,0,c
  5655   001EDC  3788               	rlcf	___lodiv@quotient& (0+255),f,b
  5656   001EDE  3789               	rlcf	(___lodiv@quotient+1)& (0+255),f,b
  5657   001EE0  378A               	rlcf	(___lodiv@quotient+2)& (0+255),f,b
  5658   001EE2  378B               	rlcf	(___lodiv@quotient+3)& (0+255),f,b
  5659   001EE4  378C               	rlcf	(___lodiv@quotient+4)& (0+255),f,b
  5660   001EE6  378D               	rlcf	(___lodiv@quotient+5)& (0+255),f,b
  5661   001EE8  378E               	rlcf	(___lodiv@quotient+6)& (0+255),f,b
  5662   001EEA  378F               	rlcf	(___lodiv@quotient+7)& (0+255),f,b
  5663   001EEC                     
  5664                           ; BSR set to: 0
  5665   001EEC  5180               	movf	___lodiv@divisor& (0+255),w,b
  5666   001EEE  5D78               	subwf	___lodiv@dividend& (0+255),w,b
  5667   001EF0  5181               	movf	(___lodiv@divisor+1)& (0+255),w,b
  5668   001EF2  5979               	subwfb	(___lodiv@dividend+1)& (0+255),w,b
  5669   001EF4  5182               	movf	(___lodiv@divisor+2)& (0+255),w,b
  5670   001EF6  597A               	subwfb	(___lodiv@dividend+2)& (0+255),w,b
  5671   001EF8  5183               	movf	(___lodiv@divisor+3)& (0+255),w,b
  5672   001EFA  597B               	subwfb	(___lodiv@dividend+3)& (0+255),w,b
  5673   001EFC  5184               	movf	(___lodiv@divisor+4)& (0+255),w,b
  5674   001EFE  597C               	subwfb	(___lodiv@dividend+4)& (0+255),w,b
  5675   001F00  5185               	movf	(___lodiv@divisor+5)& (0+255),w,b
  5676   001F02  597D               	subwfb	(___lodiv@dividend+5)& (0+255),w,b
  5677   001F04  5186               	movf	(___lodiv@divisor+6)& (0+255),w,b
  5678   001F06  597E               	subwfb	(___lodiv@dividend+6)& (0+255),w,b
  5679   001F08  5187               	movf	(___lodiv@divisor+7)& (0+255),w,b
  5680   001F0A  597F               	subwfb	(___lodiv@dividend+7)& (0+255),w,b
  5681   001F0C  A0D8               	btfss	status,0,c
  5682   001F0E  EF8B  F00F         	goto	u4021
  5683   001F12  EF8D  F00F         	goto	u4020
  5684   001F16                     u4021:
  5685   001F16  EF9E  F00F         	goto	l4829
  5686   001F1A                     u4020:
  5687   001F1A                     
  5688                           ; BSR set to: 0
  5689   001F1A  5180               	movf	___lodiv@divisor& (0+255),w,b
  5690   001F1C  5F78               	subwf	___lodiv@dividend& (0+255),f,b
  5691   001F1E  5181               	movf	(___lodiv@divisor+1)& (0+255),w,b
  5692   001F20  5B79               	subwfb	(___lodiv@dividend+1)& (0+255),f,b
  5693   001F22  5182               	movf	(___lodiv@divisor+2)& (0+255),w,b
  5694   001F24  5B7A               	subwfb	(___lodiv@dividend+2)& (0+255),f,b
  5695   001F26  5183               	movf	(___lodiv@divisor+3)& (0+255),w,b
  5696   001F28  5B7B               	subwfb	(___lodiv@dividend+3)& (0+255),f,b
  5697   001F2A  5184               	movf	(___lodiv@divisor+4)& (0+255),w,b
  5698   001F2C  5B7C               	subwfb	(___lodiv@dividend+4)& (0+255),f,b
  5699   001F2E  5185               	movf	(___lodiv@divisor+5)& (0+255),w,b
  5700   001F30  5B7D               	subwfb	(___lodiv@dividend+5)& (0+255),f,b
  5701   001F32  5186               	movf	(___lodiv@divisor+6)& (0+255),w,b
  5702   001F34  5B7E               	subwfb	(___lodiv@dividend+6)& (0+255),f,b
  5703   001F36  5187               	movf	(___lodiv@divisor+7)& (0+255),w,b
  5704   001F38  5B7F               	subwfb	(___lodiv@dividend+7)& (0+255),f,b
  5705   001F3A                     
  5706                           ; BSR set to: 0
  5707   001F3A  8188               	bsf	___lodiv@quotient& (0+255),0,b
  5708   001F3C                     l4829:
  5709                           
  5710                           ; BSR set to: 0
  5711   001F3C  90D8               	bcf	status,0,c
  5712   001F3E  3387               	rrcf	(___lodiv@divisor+7)& (0+255),f,b
  5713   001F40  3386               	rrcf	(___lodiv@divisor+6)& (0+255),f,b
  5714   001F42  3385               	rrcf	(___lodiv@divisor+5)& (0+255),f,b
  5715   001F44  3384               	rrcf	(___lodiv@divisor+4)& (0+255),f,b
  5716   001F46  3383               	rrcf	(___lodiv@divisor+3)& (0+255),f,b
  5717   001F48  3382               	rrcf	(___lodiv@divisor+2)& (0+255),f,b
  5718   001F4A  3381               	rrcf	(___lodiv@divisor+1)& (0+255),f,b
  5719   001F4C  3380               	rrcf	___lodiv@divisor& (0+255),f,b
  5720   001F4E                     
  5721                           ; BSR set to: 0
  5722   001F4E  2F90               	decfsz	___lodiv@counter& (0+255),f,b
  5723   001F50  EF6D  F00F         	goto	l4821
  5724   001F54                     l1016:
  5725                           
  5726                           ; BSR set to: 0
  5727   001F54  C088  F078         	movff	___lodiv@quotient,?___lodiv
  5728   001F58  C089  F079         	movff	___lodiv@quotient+1,?___lodiv+1
  5729   001F5C  C08A  F07A         	movff	___lodiv@quotient+2,?___lodiv+2
  5730   001F60  C08B  F07B         	movff	___lodiv@quotient+3,?___lodiv+3
  5731   001F64  C08C  F07C         	movff	___lodiv@quotient+4,?___lodiv+4
  5732   001F68  C08D  F07D         	movff	___lodiv@quotient+5,?___lodiv+5
  5733   001F6C  C08E  F07E         	movff	___lodiv@quotient+6,?___lodiv+6
  5734   001F70  C08F  F07F         	movff	___lodiv@quotient+7,?___lodiv+7
  5735   001F74                     
  5736                           ; BSR set to: 0
  5737   001F74  0012               	return		;funcret
  5738   001F76                     __end_of___lodiv:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _strncmp *****************
  5742 ;; Defined at:
  5743 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  _l              2   24[BANK0 ] PTR const unsigned char 
  5746 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  5747 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  5748 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  5749 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  5750 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  5751 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  5752 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  5753 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  5754 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  5755 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  5756 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  5757 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  5758 ;;  _r              2   26[BANK0 ] PTR const unsigned char 
  5759 ;;		 -> STR_50(4), 
  5760 ;;  n               2   28[BANK0 ] unsigned int 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  r               2   33[BANK0 ] PTR const unsigned char 
  5763 ;;		 -> STR_50(4), 
  5764 ;;  l               2   31[BANK0 ] PTR const unsigned char 
  5765 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  5766 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  5767 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  5768 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  5769 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  5770 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  5771 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  5772 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  5773 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  5774 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  5775 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  5776 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  2   24[BANK0 ] int 
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5786 ;;      Params:         0       6       0       0       0       0       0
  5787 ;;      Locals:         0       4       0       0       0       0       0
  5788 ;;      Temps:          0       1       0       0       0       0       0
  5789 ;;      Totals:         0      11       0       0       0       0       0
  5790 ;;Total ram usage:       11 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 11
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_vfpfcnvrt
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text14
  5801   002156                     __ptext14:
  5802                           	callstack 0
  5803   002156                     _strncmp:
  5804                           	callstack 16
  5805   002156  C078  F07F         	movff	strncmp@_l,strncmp@l
  5806   00215A  C079  F080         	movff	strncmp@_l+1,strncmp@l+1
  5807   00215E  C07A  F081         	movff	strncmp@_r,strncmp@r
  5808   002162  C07B  F082         	movff	strncmp@_r+1,strncmp@r+1
  5809   002166  0100               	movlb	0	; () banked
  5810   002168  077C               	decf	strncmp@n& (0+255),f,b
  5811   00216A  A0D8               	btfss	status,0,c
  5812   00216C  077D               	decf	(strncmp@n+1)& (0+255),f,b
  5813   00216E  297C               	incf	strncmp@n& (0+255),w,b
  5814   002170  E106               	bnz	u4491
  5815   002172  297D               	incf	(strncmp@n+1)& (0+255),w,b
  5816   002174  A4D8               	btfss	status,2,c
  5817   002176  EFBF  F010         	goto	u4491
  5818   00217A  EFC1  F010         	goto	u4490
  5819   00217E                     u4491:
  5820   00217E  EFCE  F010         	goto	l5081
  5821   002182                     u4490:
  5822   002182                     
  5823                           ; BSR set to: 0
  5824   002182  0E00               	movlw	0
  5825   002184  6F79               	movwf	(?_strncmp+1)& (0+255),b
  5826   002186  0E00               	movlw	0
  5827   002188  6F78               	movwf	?_strncmp& (0+255),b
  5828   00218A  EF1A  F011         	goto	l1472
  5829   00218E                     l5079:
  5830                           
  5831                           ; BSR set to: 0
  5832   00218E  4B7F               	infsnz	strncmp@l& (0+255),f,b
  5833   002190  2B80               	incf	(strncmp@l+1)& (0+255),f,b
  5834   002192  4B81               	infsnz	strncmp@r& (0+255),f,b
  5835   002194  2B82               	incf	(strncmp@r+1)& (0+255),f,b
  5836   002196  077C               	decf	strncmp@n& (0+255),f,b
  5837   002198  A0D8               	btfss	status,0,c
  5838   00219A  077D               	decf	(strncmp@n+1)& (0+255),f,b
  5839   00219C                     l5081:
  5840                           
  5841                           ; BSR set to: 0
  5842   00219C  C07F  FFF6         	movff	strncmp@l,tblptrl
  5843   0021A0  C080  FFF7         	movff	strncmp@l+1,tblptrh
  5844   0021A4                     	if	0	;tblptru may be non-zero
  5845   0021A4                     	endif
  5846   0021A4                     	if	0	;tblptru may be non-zero
  5847   0021A4                     	endif
  5848   0021A4  0008               	tblrd		*
  5849   0021A6  50F5               	movf	tablat,w,c
  5850   0021A8  0900               	iorlw	0
  5851   0021AA  B4D8               	btfsc	status,2,c
  5852   0021AC  EFDA  F010         	goto	u4501
  5853   0021B0  EFDC  F010         	goto	u4500
  5854   0021B4                     u4501:
  5855   0021B4  EF08  F011         	goto	l5089
  5856   0021B8                     u4500:
  5857   0021B8                     
  5858                           ; BSR set to: 0
  5859   0021B8  C081  FFF6         	movff	strncmp@r,tblptrl
  5860   0021BC  C082  FFF7         	movff	strncmp@r+1,tblptrh
  5861   0021C0                     	if	0	;tblptru may be non-zero
  5862   0021C0                     	endif
  5863   0021C0                     	if	0	;tblptru may be non-zero
  5864   0021C0                     	endif
  5865   0021C0  0008               	tblrd		*
  5866   0021C2  50F5               	movf	tablat,w,c
  5867   0021C4  0900               	iorlw	0
  5868   0021C6  B4D8               	btfsc	status,2,c
  5869   0021C8  EFE8  F010         	goto	u4511
  5870   0021CC  EFEA  F010         	goto	u4510
  5871   0021D0                     u4511:
  5872   0021D0  EF08  F011         	goto	l5089
  5873   0021D4                     u4510:
  5874   0021D4                     
  5875                           ; BSR set to: 0
  5876   0021D4  517C               	movf	strncmp@n& (0+255),w,b
  5877   0021D6  117D               	iorwf	(strncmp@n+1)& (0+255),w,b
  5878   0021D8  B4D8               	btfsc	status,2,c
  5879   0021DA  EFF1  F010         	goto	u4521
  5880   0021DE  EFF3  F010         	goto	u4520
  5881   0021E2                     u4521:
  5882   0021E2  EF08  F011         	goto	l5089
  5883   0021E6                     u4520:
  5884   0021E6                     
  5885                           ; BSR set to: 0
  5886   0021E6  C07F  FFF6         	movff	strncmp@l,tblptrl
  5887   0021EA  C080  FFF7         	movff	strncmp@l+1,tblptrh
  5888   0021EE                     	if	0	;tblptru may be non-zero
  5889   0021EE                     	endif
  5890   0021EE                     	if	0	;tblptru may be non-zero
  5891   0021EE                     	endif
  5892   0021EE  0008               	tblrd		*
  5893   0021F0  CFF5 F07E          	movff	tablat,??_strncmp
  5894   0021F4  C081  FFF6         	movff	strncmp@r,tblptrl
  5895   0021F8  C082  FFF7         	movff	strncmp@r+1,tblptrh
  5896   0021FC                     	if	0	;tblptru may be non-zero
  5897   0021FC                     	endif
  5898   0021FC                     	if	0	;tblptru may be non-zero
  5899   0021FC                     	endif
  5900   0021FC  0008               	tblrd		*
  5901   0021FE  50F5               	movf	tablat,w,c
  5902   002200  197E               	xorwf	??_strncmp& (0+255),w,b
  5903   002202  B4D8               	btfsc	status,2,c
  5904   002204  EF06  F011         	goto	u4531
  5905   002208  EF08  F011         	goto	u4530
  5906   00220C                     u4531:
  5907   00220C  EFC7  F010         	goto	l5079
  5908   002210                     u4530:
  5909   002210                     l5089:
  5910                           
  5911                           ; BSR set to: 0
  5912   002210  C07F  FFF6         	movff	strncmp@l,tblptrl
  5913   002214  C080  FFF7         	movff	strncmp@l+1,tblptrh
  5914   002218                     	if	0	;tblptru may be non-zero
  5915   002218                     	endif
  5916   002218                     	if	0	;tblptru may be non-zero
  5917   002218                     	endif
  5918   002218  0008               	tblrd		*
  5919   00221A  CFF5 F07E          	movff	tablat,??_strncmp
  5920   00221E  C081  FFF6         	movff	strncmp@r,tblptrl
  5921   002222  C082  FFF7         	movff	strncmp@r+1,tblptrh
  5922   002226                     	if	0	;tblptru may be non-zero
  5923   002226                     	endif
  5924   002226                     	if	0	;tblptru may be non-zero
  5925   002226                     	endif
  5926   002226  0008               	tblrd		*
  5927   002228  50F5               	movf	tablat,w,c
  5928   00222A  5D7E               	subwf	??_strncmp& (0+255),w,b
  5929   00222C  6F78               	movwf	?_strncmp& (0+255),b
  5930   00222E  6B79               	clrf	(?_strncmp+1)& (0+255),b
  5931   002230  A0D8               	btfss	status,0,c
  5932   002232  0779               	decf	(?_strncmp+1)& (0+255),f,b
  5933   002234                     l1472:
  5934                           
  5935                           ; BSR set to: 0
  5936   002234  0012               	return		;funcret
  5937   002236                     __end_of_strncmp:
  5938                           	callstack 0
  5939                           
  5940 ;; *************** function _stoa *****************
  5941 ;; Defined at:
  5942 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  5945 ;;		 -> NULL(0), 
  5946 ;;  s               2   37[BANK0 ] PTR unsigned char 
  5947 ;;		 -> ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  nuls            7   40[BANK0 ] unsigned char [7]
  5950 ;;  l               2   55[BANK0 ] int 
  5951 ;;  p               2   53[BANK0 ] int 
  5952 ;;  cp              2   51[BANK0 ] PTR unsigned char 
  5953 ;;		 -> stoa@nuls(7), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  5954 ;;  w               2   49[BANK0 ] int 
  5955 ;;  i               2   47[BANK0 ] int 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5965 ;;      Params:         0       4       0       0       0       0       0
  5966 ;;      Locals:         0      17       0       0       0       0       0
  5967 ;;      Temps:          0       1       0       0       0       0       0
  5968 ;;      Totals:         0      22       0       0       0       0       0
  5969 ;;Total ram usage:       22 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; Hardware stack levels required when called: 14
  5972 ;; This function calls:
  5973 ;;		_fputc
  5974 ;;		_strlen
  5975 ;; This function is called by:
  5976 ;;		_vfpfcnvrt
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           	psect	text15
  5981   0017F4                     __ptext15:
  5982                           	callstack 0
  5983   0017F4                     _stoa:
  5984                           	callstack 13
  5985   0017F4                     
  5986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  5987   0017F4  EE21  F0B6         	lfsr	2,stoa@F1149
  5988   0017F8  EE10  F088         	lfsr	1,stoa@nuls
  5989   0017FC  0E06               	movlw	6
  5990   0017FE                     u4201:
  5991   0017FE  CFDB FFE3          	movff	plusw2,plusw1
  5992   001802  06E8               	decf	wreg,f,c
  5993   001804  E2FC               	bc	u4201
  5994   001806                     
  5995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  5996   001806  C085  F093         	movff	stoa@s,stoa@cp
  5997   00180A  C086  F094         	movff	stoa@s+1,stoa@cp+1
  5998   00180E                     
  5999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  6000   00180E  0100               	movlb	0	; () banked
  6001   001810  5193               	movf	stoa@cp& (0+255),w,b
  6002   001812  1194               	iorwf	(stoa@cp+1)& (0+255),w,b
  6003   001814  A4D8               	btfss	status,2,c
  6004   001816  EF0F  F00C         	goto	u4211
  6005   00181A  EF11  F00C         	goto	u4210
  6006   00181E                     u4211:
  6007   00181E  EF15  F00C         	goto	l4925
  6008   001822                     u4210:
  6009   001822                     
  6010                           ; BSR set to: 0
  6011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  6012   001822  0E88               	movlw	low stoa@nuls
  6013   001824  6F93               	movwf	stoa@cp& (0+255),b
  6014   001826  0E00               	movlw	high stoa@nuls
  6015   001828  6F94               	movwf	(stoa@cp+1)& (0+255),b
  6016   00182A                     l4925:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  6020   00182A  C093  F078         	movff	stoa@cp,strlen@s
  6021   00182E  C094  F079         	movff	stoa@cp+1,strlen@s+1
  6022   001832  EC5B  F016         	call	_strlen	;wreg free
  6023   001836  C078  F097         	movff	?_strlen,stoa@l
  6024   00183A  C079  F098         	movff	?_strlen+1,stoa@l+1
  6025   00183E                     
  6026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  6027   00183E  C0D0  F095         	movff	_prec,stoa@p
  6028   001842  C0D1  F096         	movff	_prec+1,stoa@p+1
  6029   001846                     
  6030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  6031   001846  0100               	movlb	0	; () banked
  6032   001848  BF96               	btfsc	(stoa@p+1)& (0+255),7,b
  6033   00184A  EF29  F00C         	goto	u4221
  6034   00184E  EF2B  F00C         	goto	u4220
  6035   001852                     u4221:
  6036   001852  EF40  F00C         	goto	l1315
  6037   001856                     u4220:
  6038   001856                     
  6039                           ; BSR set to: 0
  6040   001856  5197               	movf	stoa@l& (0+255),w,b
  6041   001858  5D95               	subwf	stoa@p& (0+255),w,b
  6042   00185A  5196               	movf	(stoa@p+1)& (0+255),w,b
  6043   00185C  0A80               	xorlw	128
  6044   00185E  6F87               	movwf	??_stoa& (0+255),b
  6045   001860  5198               	movf	(stoa@l+1)& (0+255),w,b
  6046   001862  0A80               	xorlw	128
  6047   001864  5987               	subwfb	??_stoa& (0+255),w,b
  6048   001866  A0D8               	btfss	status,0,c
  6049   001868  EF38  F00C         	goto	u4231
  6050   00186C  EF3A  F00C         	goto	u4230
  6051   001870                     u4231:
  6052   001870  EF3C  F00C         	goto	l1313
  6053   001874                     u4230:
  6054   001874  EF40  F00C         	goto	l1315
  6055   001878                     l1313:
  6056                           
  6057                           ; BSR set to: 0
  6058   001878  C095  F097         	movff	stoa@p,stoa@l
  6059   00187C  C096  F098         	movff	stoa@p+1,stoa@l+1
  6060   001880                     l1315:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  6064   001880  C097  F095         	movff	stoa@l,stoa@p
  6065   001884  C098  F096         	movff	stoa@l+1,stoa@p+1
  6066                           
  6067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  6068   001888  C0CE  F091         	movff	_width,stoa@w
  6069   00188C  C0CF  F092         	movff	_width+1,stoa@w+1
  6070                           
  6071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 859:     if (!(fl
      +                          ags & (1 << 0))) {
  6072   001890  B1DA               	btfsc	_flags& (0+255),0,b
  6073   001892  EF4D  F00C         	goto	u4241
  6074   001896  EF4F  F00C         	goto	u4240
  6075   00189A                     u4241:
  6076   00189A  EF6D  F00C         	goto	l4941
  6077   00189E                     u4240:
  6078   00189E  EF5E  F00C         	goto	l4939
  6079   0018A2                     l4935:
  6080                           
  6081                           ; BSR set to: 0
  6082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  6083   0018A2  0E00               	movlw	0
  6084   0018A4  6F7B               	movwf	(fputc@c+1)& (0+255),b
  6085   0018A6  0E20               	movlw	32
  6086   0018A8  6F7A               	movwf	fputc@c& (0+255),b
  6087   0018AA  C083  F07C         	movff	stoa@fp,fputc@fp
  6088   0018AE  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  6089   0018B2  EC3C  F014         	call	_fputc	;wreg free
  6090   0018B6                     
  6091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  6092   0018B6  0100               	movlb	0	; () banked
  6093   0018B8  4B97               	infsnz	stoa@l& (0+255),f,b
  6094   0018BA  2B98               	incf	(stoa@l+1)& (0+255),f,b
  6095   0018BC                     l4939:
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  6099   0018BC  5191               	movf	stoa@w& (0+255),w,b
  6100   0018BE  5D97               	subwf	stoa@l& (0+255),w,b
  6101   0018C0  5198               	movf	(stoa@l+1)& (0+255),w,b
  6102   0018C2  0A80               	xorlw	128
  6103   0018C4  6F87               	movwf	??_stoa& (0+255),b
  6104   0018C6  5192               	movf	(stoa@w+1)& (0+255),w,b
  6105   0018C8  0A80               	xorlw	128
  6106   0018CA  5987               	subwfb	??_stoa& (0+255),w,b
  6107   0018CC  A0D8               	btfss	status,0,c
  6108   0018CE  EF6B  F00C         	goto	u4251
  6109   0018D2  EF6D  F00C         	goto	u4250
  6110   0018D6                     u4251:
  6111   0018D6  EF51  F00C         	goto	l4935
  6112   0018DA                     u4250:
  6113   0018DA                     l4941:
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  6117   0018DA  0E00               	movlw	0
  6118   0018DC  6F90               	movwf	(stoa@i+1)& (0+255),b
  6119   0018DE  0E00               	movlw	0
  6120   0018E0  6F8F               	movwf	stoa@i& (0+255),b
  6121                           
  6122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  6123   0018E2  EF87  F00C         	goto	l4949
  6124   0018E6                     l4943:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  6128   0018E6  C093  FFD9         	movff	stoa@cp,fsr2l
  6129   0018EA  C094  FFDA         	movff	stoa@cp+1,fsr2h
  6130   0018EE  50DF               	movf	indf2,w,c
  6131   0018F0  6F87               	movwf	??_stoa& (0+255),b
  6132   0018F2  5187               	movf	??_stoa& (0+255),w,b
  6133   0018F4  6F7A               	movwf	fputc@c& (0+255),b
  6134   0018F6  6B7B               	clrf	(fputc@c+1)& (0+255),b
  6135   0018F8  C083  F07C         	movff	stoa@fp,fputc@fp
  6136   0018FC  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  6137   001900  EC3C  F014         	call	_fputc	;wreg free
  6138   001904                     
  6139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  6140   001904  0100               	movlb	0	; () banked
  6141   001906  4B93               	infsnz	stoa@cp& (0+255),f,b
  6142   001908  2B94               	incf	(stoa@cp+1)& (0+255),f,b
  6143   00190A                     
  6144                           ; BSR set to: 0
  6145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  6146   00190A  4B8F               	infsnz	stoa@i& (0+255),f,b
  6147   00190C  2B90               	incf	(stoa@i+1)& (0+255),f,b
  6148   00190E                     l4949:
  6149                           
  6150                           ; BSR set to: 0
  6151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  6152   00190E  5195               	movf	stoa@p& (0+255),w,b
  6153   001910  5D8F               	subwf	stoa@i& (0+255),w,b
  6154   001912  5190               	movf	(stoa@i+1)& (0+255),w,b
  6155   001914  0A80               	xorlw	128
  6156   001916  6F87               	movwf	??_stoa& (0+255),b
  6157   001918  5196               	movf	(stoa@p+1)& (0+255),w,b
  6158   00191A  0A80               	xorlw	128
  6159   00191C  5987               	subwfb	??_stoa& (0+255),w,b
  6160   00191E  A0D8               	btfss	status,0,c
  6161   001920  EF94  F00C         	goto	u4261
  6162   001924  EF96  F00C         	goto	u4260
  6163   001928                     u4261:
  6164   001928  EF73  F00C         	goto	l4943
  6165   00192C                     u4260:
  6166   00192C                     
  6167                           ; BSR set to: 0
  6168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 879:     if (flag
      +                          s & (1 << 0)) {
  6169   00192C  A1DA               	btfss	_flags& (0+255),0,b
  6170   00192E  EF9B  F00C         	goto	u4271
  6171   001932  EF9D  F00C         	goto	u4270
  6172   001936                     u4271:
  6173   001936  EFBB  F00C         	goto	l1329
  6174   00193A                     u4270:
  6175   00193A  EFAC  F00C         	goto	l4957
  6176   00193E                     l4953:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 881:             
      +                          fputc(' ', fp);
  6180   00193E  0E00               	movlw	0
  6181   001940  6F7B               	movwf	(fputc@c+1)& (0+255),b
  6182   001942  0E20               	movlw	32
  6183   001944  6F7A               	movwf	fputc@c& (0+255),b
  6184   001946  C083  F07C         	movff	stoa@fp,fputc@fp
  6185   00194A  C084  F07D         	movff	stoa@fp+1,fputc@fp+1
  6186   00194E  EC3C  F014         	call	_fputc	;wreg free
  6187   001952                     
  6188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 882:             
      +                          ++l;
  6189   001952  0100               	movlb	0	; () banked
  6190   001954  4B97               	infsnz	stoa@l& (0+255),f,b
  6191   001956  2B98               	incf	(stoa@l+1)& (0+255),f,b
  6192   001958                     l4957:
  6193                           
  6194                           ; BSR set to: 0
  6195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 880:         whil
      +                          e (l < w) {
  6196   001958  5191               	movf	stoa@w& (0+255),w,b
  6197   00195A  5D97               	subwf	stoa@l& (0+255),w,b
  6198   00195C  5198               	movf	(stoa@l+1)& (0+255),w,b
  6199   00195E  0A80               	xorlw	128
  6200   001960  6F87               	movwf	??_stoa& (0+255),b
  6201   001962  5192               	movf	(stoa@w+1)& (0+255),w,b
  6202   001964  0A80               	xorlw	128
  6203   001966  5987               	subwfb	??_stoa& (0+255),w,b
  6204   001968  A0D8               	btfss	status,0,c
  6205   00196A  EFB9  F00C         	goto	u4281
  6206   00196E  EFBB  F00C         	goto	u4280
  6207   001972                     u4281:
  6208   001972  EF9F  F00C         	goto	l4953
  6209   001976                     u4280:
  6210   001976                     l1329:
  6211                           
  6212                           ; BSR set to: 0
  6213   001976  0012               	return		;funcret
  6214   001978                     __end_of_stoa:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _strlen *****************
  6218 ;; Defined at:
  6219 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  s               2   24[BANK0 ] PTR const unsigned char 
  6222 ;;		 -> stoa@nuls(7), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  a               2   26[BANK0 ] PTR const unsigned char 
  6225 ;;		 -> stoa@nuls(7), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
  6226 ;; Return value:  Size  Location     Type
  6227 ;;                  2   24[BANK0 ] unsigned int 
  6228 ;; Registers used:
  6229 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6230 ;; Tracked objects:
  6231 ;;		On entry : 0/0
  6232 ;;		On exit  : 0/0
  6233 ;;		Unchanged: 0/0
  6234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6235 ;;      Params:         0       2       0       0       0       0       0
  6236 ;;      Locals:         0       2       0       0       0       0       0
  6237 ;;      Temps:          0       0       0       0       0       0       0
  6238 ;;      Totals:         0       4       0       0       0       0       0
  6239 ;;Total ram usage:        4 bytes
  6240 ;; Hardware stack levels used: 1
  6241 ;; Hardware stack levels required when called: 11
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		_stoa
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	text16
  6250   002CB6                     __ptext16:
  6251                           	callstack 0
  6252   002CB6                     _strlen:
  6253                           	callstack 15
  6254   002CB6  C078  F07A         	movff	strlen@s,strlen@a
  6255   002CBA  C079  F07B         	movff	strlen@s+1,strlen@a+1
  6256   002CBE  EF64  F016         	goto	l4871
  6257   002CC2                     l4869:
  6258   002CC2  0100               	movlb	0	; () banked
  6259   002CC4  4B78               	infsnz	strlen@s& (0+255),f,b
  6260   002CC6  2B79               	incf	(strlen@s+1)& (0+255),f,b
  6261   002CC8                     l4871:
  6262   002CC8  C078  FFD9         	movff	strlen@s,fsr2l
  6263   002CCC  C079  FFDA         	movff	strlen@s+1,fsr2h
  6264   002CD0  50DF               	movf	indf2,w,c
  6265   002CD2  A4D8               	btfss	status,2,c
  6266   002CD4  EF6E  F016         	goto	u4101
  6267   002CD8  EF70  F016         	goto	u4100
  6268   002CDC                     u4101:
  6269   002CDC  EF61  F016         	goto	l4869
  6270   002CE0                     u4100:
  6271   002CE0  0100               	movlb	0	; () banked
  6272   002CE2  517A               	movf	strlen@a& (0+255),w,b
  6273   002CE4  5D78               	subwf	strlen@s& (0+255),w,b
  6274   002CE6  6F78               	movwf	?_strlen& (0+255),b
  6275   002CE8  517B               	movf	(strlen@a+1)& (0+255),w,b
  6276   002CEA  5979               	subwfb	(strlen@s+1)& (0+255),w,b
  6277   002CEC  6F79               	movwf	(?_strlen+1)& (0+255),b
  6278   002CEE                     
  6279                           ; BSR set to: 0
  6280   002CEE  0012               	return		;funcret
  6281   002CF0                     __end_of_strlen:
  6282                           	callstack 0
  6283                           
  6284 ;; *************** function _ctoa *****************
  6285 ;; Defined at:
  6286 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  6289 ;;		 -> NULL(0), 
  6290 ;;  c               1   37[BANK0 ] unsigned char 
  6291 ;; Auto vars:     Size  Location     Type
  6292 ;;  w               2   41[BANK0 ] int 
  6293 ;;  l               2   39[BANK0 ] int 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  1    wreg      void 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6303 ;;      Params:         0       3       0       0       0       0       0
  6304 ;;      Locals:         0       4       0       0       0       0       0
  6305 ;;      Temps:          0       1       0       0       0       0       0
  6306 ;;      Totals:         0       8       0       0       0       0       0
  6307 ;;Total ram usage:        8 bytes
  6308 ;; Hardware stack levels used: 1
  6309 ;; Hardware stack levels required when called: 14
  6310 ;; This function calls:
  6311 ;;		_fputc
  6312 ;; This function is called by:
  6313 ;;		_vfpfcnvrt
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text17
  6318   0024B6                     __ptext17:
  6319                           	callstack 0
  6320   0024B6                     _ctoa:
  6321                           	callstack 13
  6322   0024B6                     
  6323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  6324   0024B6  0100               	movlb	0	; () banked
  6325   0024B8  51CE               	movf	_width& (0+255),w,b
  6326   0024BA  11CF               	iorwf	(_width+1)& (0+255),w,b
  6327   0024BC  A4D8               	btfss	status,2,c
  6328   0024BE  EF63  F012         	goto	u4151
  6329   0024C2  EF65  F012         	goto	u4150
  6330   0024C6                     u4151:
  6331   0024C6  EF6B  F012         	goto	l4897
  6332   0024CA                     u4150:
  6333   0024CA                     
  6334                           ; BSR set to: 0
  6335   0024CA  C0CE  F089         	movff	_width,ctoa@w
  6336   0024CE  C0CF  F08A         	movff	_width+1,ctoa@w+1
  6337   0024D2  EF71  F012         	goto	l4899
  6338   0024D6                     l4897:
  6339                           
  6340                           ; BSR set to: 0
  6341   0024D6  0EFF               	movlw	255
  6342   0024D8  25CE               	addwf	_width& (0+255),w,b
  6343   0024DA  6F89               	movwf	ctoa@w& (0+255),b
  6344   0024DC  0EFF               	movlw	255
  6345   0024DE  21CF               	addwfc	(_width+1)& (0+255),w,b
  6346   0024E0  6F8A               	movwf	(ctoa@w+1)& (0+255),b
  6347   0024E2                     l4899:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  6351   0024E2  A1DA               	btfss	_flags& (0+255),0,b
  6352   0024E4  EF76  F012         	goto	u4161
  6353   0024E8  EF78  F012         	goto	u4160
  6354   0024EC                     u4161:
  6355   0024EC  EF81  F012         	goto	l4903
  6356   0024F0                     u4160:
  6357   0024F0                     
  6358                           ; BSR set to: 0
  6359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  6360   0024F0  C085  F07A         	movff	ctoa@c,fputc@c
  6361   0024F4  6B7B               	clrf	(fputc@c+1)& (0+255),b
  6362   0024F6  C083  F07C         	movff	ctoa@fp,fputc@fp
  6363   0024FA  C084  F07D         	movff	ctoa@fp+1,fputc@fp+1
  6364   0024FE  EC3C  F014         	call	_fputc	;wreg free
  6365   002502                     l4903:
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  6368   002502  0100               	movlb	0	; () banked
  6369   002504  BF8A               	btfsc	(ctoa@w+1)& (0+255),7,b
  6370   002506  EF87  F012         	goto	u4171
  6371   00250A  EF89  F012         	goto	u4170
  6372   00250E                     u4171:
  6373   00250E  EF8B  F012         	goto	l4907
  6374   002512                     u4170:
  6375   002512  EF8F  F012         	goto	l1301
  6376   002516                     l4907:
  6377                           
  6378                           ; BSR set to: 0
  6379   002516  0E00               	movlw	0
  6380   002518  6F8A               	movwf	(ctoa@w+1)& (0+255),b
  6381   00251A  0E00               	movlw	0
  6382   00251C  6F89               	movwf	ctoa@w& (0+255),b
  6383   00251E                     l1301:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  6387   00251E  0E00               	movlw	0
  6388   002520  6F88               	movwf	(ctoa@l+1)& (0+255),b
  6389   002522  0E00               	movlw	0
  6390   002524  6F87               	movwf	ctoa@l& (0+255),b
  6391                           
  6392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  6393   002526  EFA2  F012         	goto	l4913
  6394   00252A                     l4909:
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  6398   00252A  0E00               	movlw	0
  6399   00252C  6F7B               	movwf	(fputc@c+1)& (0+255),b
  6400   00252E  0E20               	movlw	32
  6401   002530  6F7A               	movwf	fputc@c& (0+255),b
  6402   002532  C083  F07C         	movff	ctoa@fp,fputc@fp
  6403   002536  C084  F07D         	movff	ctoa@fp+1,fputc@fp+1
  6404   00253A  EC3C  F014         	call	_fputc	;wreg free
  6405   00253E                     
  6406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  6407   00253E  0100               	movlb	0	; () banked
  6408   002540  4B87               	infsnz	ctoa@l& (0+255),f,b
  6409   002542  2B88               	incf	(ctoa@l+1)& (0+255),f,b
  6410   002544                     l4913:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  6414   002544  5189               	movf	ctoa@w& (0+255),w,b
  6415   002546  5D87               	subwf	ctoa@l& (0+255),w,b
  6416   002548  5188               	movf	(ctoa@l+1)& (0+255),w,b
  6417   00254A  0A80               	xorlw	128
  6418   00254C  6F86               	movwf	??_ctoa& (0+255),b
  6419   00254E  518A               	movf	(ctoa@w+1)& (0+255),w,b
  6420   002550  0A80               	xorlw	128
  6421   002552  5986               	subwfb	??_ctoa& (0+255),w,b
  6422   002554  A0D8               	btfss	status,0,c
  6423   002556  EFAF  F012         	goto	u4181
  6424   00255A  EFB1  F012         	goto	u4180
  6425   00255E                     u4181:
  6426   00255E  EF95  F012         	goto	l4909
  6427   002562                     u4180:
  6428   002562                     
  6429                           ; BSR set to: 0
  6430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  6431   002562  B1DA               	btfsc	_flags& (0+255),0,b
  6432   002564  EFB6  F012         	goto	u4191
  6433   002568  EFB8  F012         	goto	u4190
  6434   00256C                     u4191:
  6435   00256C  EFC1  F012         	goto	l1306
  6436   002570                     u4190:
  6437   002570                     
  6438                           ; BSR set to: 0
  6439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  6440   002570  C085  F07A         	movff	ctoa@c,fputc@c
  6441   002574  6B7B               	clrf	(fputc@c+1)& (0+255),b
  6442   002576  C083  F07C         	movff	ctoa@fp,fputc@fp
  6443   00257A  C084  F07D         	movff	ctoa@fp+1,fputc@fp+1
  6444   00257E  EC3C  F014         	call	_fputc	;wreg free
  6445   002582                     l1306:
  6446   002582  0012               	return		;funcret
  6447   002584                     __end_of_ctoa:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function _fputc *****************
  6451 ;; Defined at:
  6452 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  c               2   26[BANK0 ] int 
  6455 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  6456 ;;		 -> NULL(0), 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2   26[BANK0 ] int 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6468 ;;      Params:         0       4       0       0       0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0
  6470 ;;      Temps:          0       5       0       0       0       0       0
  6471 ;;      Totals:         0       9       0       0       0       0       0
  6472 ;;Total ram usage:        9 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 13
  6475 ;; This function calls:
  6476 ;;		_putch
  6477 ;; This function is called by:
  6478 ;;		_pad
  6479 ;;		_ctoa
  6480 ;;		_stoa
  6481 ;;		_vfpfcnvrt
  6482 ;;		_fputs
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text18
  6487   002878                     __ptext18:
  6488                           	callstack 0
  6489   002878                     _fputc:
  6490                           	callstack 11
  6491   002878  0100               	movlb	0	; () banked
  6492   00287A  517C               	movf	fputc@fp& (0+255),w,b
  6493   00287C  117D               	iorwf	(fputc@fp+1)& (0+255),w,b
  6494   00287E  B4D8               	btfsc	status,2,c
  6495   002880  EF44  F014         	goto	u3941
  6496   002884  EF46  F014         	goto	u3940
  6497   002888                     u3941:
  6498   002888  EF4F  F014         	goto	l4787
  6499   00288C                     u3940:
  6500   00288C                     
  6501                           ; BSR set to: 0
  6502   00288C  517C               	movf	fputc@fp& (0+255),w,b
  6503   00288E  117D               	iorwf	(fputc@fp+1)& (0+255),w,b
  6504   002890  A4D8               	btfss	status,2,c
  6505   002892  EF4D  F014         	goto	u3951
  6506   002896  EF4F  F014         	goto	u3950
  6507   00289A                     u3951:
  6508   00289A  EF54  F014         	goto	l4789
  6509   00289E                     u3950:
  6510   00289E                     l4787:
  6511                           
  6512                           ; BSR set to: 0
  6513   00289E  517A               	movf	fputc@c& (0+255),w,b
  6514   0028A0  EC0A  F018         	call	_putch
  6515   0028A4  EF87  F014         	goto	l1454
  6516   0028A8                     l4789:
  6517                           
  6518                           ; BSR set to: 0
  6519   0028A8  EE20 F009          	lfsr	2,9
  6520   0028AC  517C               	movf	fputc@fp& (0+255),w,b
  6521   0028AE  26D9               	addwf	fsr2l,f,c
  6522   0028B0  517D               	movf	(fputc@fp+1)& (0+255),w,b
  6523   0028B2  22DA               	addwfc	fsr2h,f,c
  6524   0028B4  50DE               	movf	postinc2,w,c
  6525   0028B6  10DE               	iorwf	postinc2,w,c
  6526   0028B8  B4D8               	btfsc	status,2,c
  6527   0028BA  EF61  F014         	goto	u3961
  6528   0028BE  EF63  F014         	goto	u3960
  6529   0028C2                     u3961:
  6530   0028C2  EF7E  F014         	goto	l4793
  6531   0028C6                     u3960:
  6532   0028C6                     
  6533                           ; BSR set to: 0
  6534   0028C6  EE20 F009          	lfsr	2,9
  6535   0028CA  517C               	movf	fputc@fp& (0+255),w,b
  6536   0028CC  26D9               	addwf	fsr2l,f,c
  6537   0028CE  517D               	movf	(fputc@fp+1)& (0+255),w,b
  6538   0028D0  22DA               	addwfc	fsr2h,f,c
  6539   0028D2  EE10 F003          	lfsr	1,3
  6540   0028D6  517C               	movf	fputc@fp& (0+255),w,b
  6541   0028D8  26E1               	addwf	fsr1l,f,c
  6542   0028DA  517D               	movf	(fputc@fp+1)& (0+255),w,b
  6543   0028DC  22E2               	addwfc	fsr1h,f,c
  6544   0028DE  50DE               	movf	postinc2,w,c
  6545   0028E0  5CE6               	subwf	postinc1,w,c
  6546   0028E2  50E6               	movf	postinc1,w,c
  6547   0028E4  0A80               	xorlw	128
  6548   0028E6  6F82               	movwf	(??_fputc+4)& (0+255),b
  6549   0028E8  50DE               	movf	postinc2,w,c
  6550   0028EA  0A80               	xorlw	128
  6551   0028EC  5982               	subwfb	(??_fputc+4)& (0+255),w,b
  6552   0028EE  B0D8               	btfsc	status,0,c
  6553   0028F0  EF7C  F014         	goto	u3971
  6554   0028F4  EF7E  F014         	goto	u3970
  6555   0028F8                     u3971:
  6556   0028F8  EF87  F014         	goto	l1454
  6557   0028FC                     u3970:
  6558   0028FC                     l4793:
  6559                           
  6560                           ; BSR set to: 0
  6561   0028FC  EE20 F003          	lfsr	2,3
  6562   002900  517C               	movf	fputc@fp& (0+255),w,b
  6563   002902  26D9               	addwf	fsr2l,f,c
  6564   002904  517D               	movf	(fputc@fp+1)& (0+255),w,b
  6565   002906  22DA               	addwfc	fsr2h,f,c
  6566   002908  2ADE               	incf	postinc2,f,c
  6567   00290A  0E00               	movlw	0
  6568   00290C  22DD               	addwfc	postdec2,f,c
  6569   00290E                     l1454:
  6570   00290E  0012               	return		;funcret
  6571   002910                     __end_of_fputc:
  6572                           	callstack 0
  6573                           
  6574 ;; *************** function _putch *****************
  6575 ;; Defined at:
  6576 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  txData          1    wreg     unsigned char 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  txData          1   25[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6590 ;;      Params:         0       0       0       0       0       0       0
  6591 ;;      Locals:         0       1       0       0       0       0       0
  6592 ;;      Temps:          0       0       0       0       0       0       0
  6593 ;;      Totals:         0       1       0       0       0       0       0
  6594 ;;Total ram usage:        1 bytes
  6595 ;; Hardware stack levels used: 1
  6596 ;; Hardware stack levels required when called: 12
  6597 ;; This function calls:
  6598 ;;		_EUSART1_Write
  6599 ;; This function is called by:
  6600 ;;		_fputc
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text19
  6605   003014                     __ptext19:
  6606                           	callstack 0
  6607   003014                     _putch:
  6608                           	callstack 11
  6609                           
  6610                           ;incstack = 0
  6611                           ;putch@txData stored from wreg
  6612   003014  0100               	movlb	0	; () banked
  6613   003016  6F79               	movwf	putch@txData& (0+255),b
  6614   003018                     
  6615                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6616   003018  0100               	movlb	0	; () banked
  6617   00301A  5179               	movf	putch@txData& (0+255),w,b
  6618   00301C  ECC2  F017         	call	_EUSART1_Write
  6619   003020  0012               	return		;funcret
  6620   003022                     __end_of_putch:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _EUSART1_Write *****************
  6624 ;; Defined at:
  6625 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  txData          1    wreg     unsigned char 
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;  txData          1   24[BANK0 ] unsigned char 
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6639 ;;      Params:         0       0       0       0       0       0       0
  6640 ;;      Locals:         0       1       0       0       0       0       0
  6641 ;;      Temps:          0       0       0       0       0       0       0
  6642 ;;      Totals:         0       1       0       0       0       0       0
  6643 ;;Total ram usage:        1 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 11
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_putch
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text20
  6654   002F84                     __ptext20:
  6655                           	callstack 0
  6656   002F84                     _EUSART1_Write:
  6657                           	callstack 11
  6658                           
  6659                           ;incstack = 0
  6660                           ;EUSART1_Write@txData stored from wreg
  6661   002F84  0100               	movlb	0	; () banked
  6662   002F86  6F78               	movwf	EUSART1_Write@txData& (0+255),b
  6663   002F88                     l310:
  6664                           
  6665                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6666   002F88  A89E               	btfss	158,4,c	;volatile
  6667   002F8A  EFC9  F017         	goto	u3931
  6668   002F8E  EFCB  F017         	goto	u3930
  6669   002F92                     u3931:
  6670   002F92  EFC4  F017         	goto	l310
  6671   002F96                     u3930:
  6672   002F96                     
  6673                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6674   002F96  C078  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6675   002F9A  0012               	return		;funcret
  6676   002F9C                     __end_of_EUSART1_Write:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _atoi *****************
  6680 ;; Defined at:
  6681 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  6684 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  6685 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  6686 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  6687 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  6688 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  6689 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  6690 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  6691 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  6692 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  6693 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  6694 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  6695 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  n               2   37[BANK0 ] int 
  6698 ;;  neg             2   35[BANK0 ] int 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  2   30[BANK0 ] int 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6708 ;;      Params:         0       2       0       0       0       0       0
  6709 ;;      Locals:         0       4       0       0       0       0       0
  6710 ;;      Temps:          0       3       0       0       0       0       0
  6711 ;;      Totals:         0       9       0       0       0       0       0
  6712 ;;Total ram usage:        9 bytes
  6713 ;; Hardware stack levels used: 1
  6714 ;; Hardware stack levels required when called: 12
  6715 ;; This function calls:
  6716 ;;		___wmul
  6717 ;;		_isdigit
  6718 ;;		_isspace
  6719 ;; This function is called by:
  6720 ;;		_vfpfcnvrt
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text21
  6725   001AF6                     __ptext21:
  6726                           	callstack 0
  6727   001AF6                     _atoi:
  6728                           	callstack 15
  6729   001AF6  0E00               	movlw	0
  6730   001AF8  0100               	movlb	0	; () banked
  6731   001AFA  6F86               	movwf	(atoi@n+1)& (0+255),b
  6732   001AFC  0E00               	movlw	0
  6733   001AFE  6F85               	movwf	atoi@n& (0+255),b
  6734   001B00  0E00               	movlw	0
  6735   001B02  6F84               	movwf	(atoi@neg+1)& (0+255),b
  6736   001B04  0E00               	movlw	0
  6737   001B06  6F83               	movwf	atoi@neg& (0+255),b
  6738   001B08  EF88  F00D         	goto	l5047
  6739   001B0C                     l5043:
  6740                           
  6741                           ; BSR set to: 0
  6742   001B0C  4B7E               	infsnz	atoi@s& (0+255),f,b
  6743   001B0E  2B7F               	incf	(atoi@s+1)& (0+255),f,b
  6744   001B10                     l5047:
  6745                           
  6746                           ; BSR set to: 0
  6747   001B10  C07E  FFF6         	movff	atoi@s,tblptrl
  6748   001B14  C07F  FFF7         	movff	atoi@s+1,tblptrh
  6749   001B18                     	if	0	;tblptru may be non-zero
  6750   001B18                     	endif
  6751   001B18                     	if	0	;tblptru may be non-zero
  6752   001B18                     	endif
  6753   001B18  0008               	tblrd		*
  6754   001B1A  50F5               	movf	tablat,w,c
  6755   001B1C  0A20               	xorlw	32
  6756   001B1E  B4D8               	btfsc	status,2,c
  6757   001B20  EF94  F00D         	goto	u4451
  6758   001B24  EF96  F00D         	goto	u4450
  6759   001B28                     u4451:
  6760   001B28  EF86  F00D         	goto	l5043
  6761   001B2C                     u4450:
  6762   001B2C                     
  6763                           ; BSR set to: 0
  6764   001B2C  C07E  FFF6         	movff	atoi@s,tblptrl
  6765   001B30  C07F  FFF7         	movff	atoi@s+1,tblptrh
  6766   001B34                     	if	0	;tblptru may be non-zero
  6767   001B34                     	endif
  6768   001B34                     	if	0	;tblptru may be non-zero
  6769   001B34                     	endif
  6770   001B34  0008               	tblrd		*
  6771   001B36  CFF5 F080          	movff	tablat,??_atoi
  6772   001B3A  0EF7               	movlw	247
  6773   001B3C  2580               	addwf	??_atoi& (0+255),w,b
  6774   001B3E  6F81               	movwf	(??_atoi+1)& (0+255),b
  6775   001B40  6B82               	clrf	(??_atoi+2)& (0+255),b
  6776   001B42  0EFF               	movlw	255
  6777   001B44  2382               	addwfc	(??_atoi+2)& (0+255),f,b
  6778   001B46  5182               	movf	(??_atoi+2)& (0+255),w,b
  6779   001B48  E109               	bnz	u4460
  6780   001B4A  0E05               	movlw	5
  6781   001B4C  5D81               	subwf	(??_atoi+1)& (0+255),w,b
  6782   001B4E  A0D8               	btfss	status,0,c
  6783   001B50  EFAC  F00D         	goto	u4461
  6784   001B54  EFAE  F00D         	goto	u4460
  6785   001B58                     u4461:
  6786   001B58  EF86  F00D         	goto	l5043
  6787   001B5C                     u4460:
  6788   001B5C  EFB8  F00D         	goto	l5055
  6789   001B60                     l5051:
  6790                           
  6791                           ; BSR set to: 0
  6792   001B60  0E00               	movlw	0
  6793   001B62  6F84               	movwf	(atoi@neg+1)& (0+255),b
  6794   001B64  0E01               	movlw	1
  6795   001B66  6F83               	movwf	atoi@neg& (0+255),b
  6796   001B68                     l5053:
  6797                           
  6798                           ; BSR set to: 0
  6799   001B68  4B7E               	infsnz	atoi@s& (0+255),f,b
  6800   001B6A  2B7F               	incf	(atoi@s+1)& (0+255),f,b
  6801   001B6C  EFEE  F00D         	goto	l5063
  6802   001B70                     l5055:
  6803                           
  6804                           ; BSR set to: 0
  6805   001B70  C07E  FFF6         	movff	atoi@s,tblptrl
  6806   001B74  C07F  FFF7         	movff	atoi@s+1,tblptrh
  6807   001B78                     	if	0	;tblptru may be non-zero
  6808   001B78                     	endif
  6809   001B78                     	if	0	;tblptru may be non-zero
  6810   001B78                     	endif
  6811   001B78  0008               	tblrd		*
  6812   001B7A  50F5               	movf	tablat,w,c
  6813   001B7C  6F80               	movwf	??_atoi& (0+255),b
  6814   001B7E  6B81               	clrf	(??_atoi+1)& (0+255),b
  6815                           
  6816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6817                           ; Switch size 1, requested type "simple"
  6818                           ; Number of cases is 1, Range of values is 0 to 0
  6819                           ; switch strategies available:
  6820                           ; Name         Instructions Cycles
  6821                           ; simple_byte            4     3 (average)
  6822                           ;	Chosen strategy is simple_byte
  6823   001B80  5181               	movf	(??_atoi+1)& (0+255),w,b
  6824   001B82  0A00               	xorlw	0	; case 0
  6825   001B84  B4D8               	btfsc	status,2,c
  6826   001B86  EFC7  F00D         	goto	l5677
  6827   001B8A  EFEE  F00D         	goto	l5063
  6828   001B8E                     l5677:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ; Switch size 1, requested type "simple"
  6832                           ; Number of cases is 2, Range of values is 43 to 45
  6833                           ; switch strategies available:
  6834                           ; Name         Instructions Cycles
  6835                           ; simple_byte            7     4 (average)
  6836                           ;	Chosen strategy is simple_byte
  6837   001B8E  5180               	movf	??_atoi& (0+255),w,b
  6838   001B90  0A2B               	xorlw	43	; case 43
  6839   001B92  B4D8               	btfsc	status,2,c
  6840   001B94  EFB4  F00D         	goto	l5053
  6841   001B98  0A06               	xorlw	6	; case 45
  6842   001B9A  B4D8               	btfsc	status,2,c
  6843   001B9C  EFB0  F00D         	goto	l5051
  6844   001BA0  EFEE  F00D         	goto	l5063
  6845   001BA4                     l5057:
  6846                           
  6847                           ; BSR set to: 0
  6848   001BA4  C085  F078         	movff	atoi@n,___wmul@multiplier
  6849   001BA8  C086  F079         	movff	atoi@n+1,___wmul@multiplier+1
  6850   001BAC  0E00               	movlw	0
  6851   001BAE  6F7B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6852   001BB0  0E0A               	movlw	10
  6853   001BB2  6F7A               	movwf	___wmul@multiplicand& (0+255),b
  6854   001BB4  EC4A  F017         	call	___wmul	;wreg free
  6855   001BB8  C07E  FFF6         	movff	atoi@s,tblptrl
  6856   001BBC  C07F  FFF7         	movff	atoi@s+1,tblptrh
  6857   001BC0                     	if	0	;tblptru may be non-zero
  6858   001BC0                     	endif
  6859   001BC0                     	if	0	;tblptru may be non-zero
  6860   001BC0                     	endif
  6861   001BC0  0008               	tblrd		*
  6862   001BC2  50F5               	movf	tablat,w,c
  6863   001BC4  0100               	movlb	0	; () banked
  6864   001BC6  5F78               	subwf	?___wmul& (0+255),f,b
  6865   001BC8  0E00               	movlw	0
  6866   001BCA  5B79               	subwfb	(?___wmul+1)& (0+255),f,b
  6867   001BCC  0E30               	movlw	48
  6868   001BCE  2578               	addwf	?___wmul& (0+255),w,b
  6869   001BD0  6F85               	movwf	atoi@n& (0+255),b
  6870   001BD2  0E00               	movlw	0
  6871   001BD4  2179               	addwfc	(?___wmul+1)& (0+255),w,b
  6872   001BD6  6F86               	movwf	(atoi@n+1)& (0+255),b
  6873   001BD8  EFB4  F00D         	goto	l5053
  6874   001BDC                     l5063:
  6875                           
  6876                           ; BSR set to: 0
  6877   001BDC  C07E  FFF6         	movff	atoi@s,tblptrl
  6878   001BE0  C07F  FFF7         	movff	atoi@s+1,tblptrh
  6879   001BE4                     	if	0	;tblptru may be non-zero
  6880   001BE4                     	endif
  6881   001BE4                     	if	0	;tblptru may be non-zero
  6882   001BE4                     	endif
  6883   001BE4  0008               	tblrd		*
  6884   001BE6  CFF5 F080          	movff	tablat,??_atoi
  6885   001BEA  0ED0               	movlw	208
  6886   001BEC  2580               	addwf	??_atoi& (0+255),w,b
  6887   001BEE  6F81               	movwf	(??_atoi+1)& (0+255),b
  6888   001BF0  6B82               	clrf	(??_atoi+2)& (0+255),b
  6889   001BF2  0EFF               	movlw	255
  6890   001BF4  2382               	addwfc	(??_atoi+2)& (0+255),f,b
  6891   001BF6  5182               	movf	(??_atoi+2)& (0+255),w,b
  6892   001BF8  E109               	bnz	u4470
  6893   001BFA  0E0A               	movlw	10
  6894   001BFC  5D81               	subwf	(??_atoi+1)& (0+255),w,b
  6895   001BFE  A0D8               	btfss	status,0,c
  6896   001C00  EF04  F00E         	goto	u4471
  6897   001C04  EF06  F00E         	goto	u4470
  6898   001C08                     u4471:
  6899   001C08  EFD2  F00D         	goto	l5057
  6900   001C0C                     u4470:
  6901   001C0C                     
  6902                           ; BSR set to: 0
  6903   001C0C  5183               	movf	atoi@neg& (0+255),w,b
  6904   001C0E  1184               	iorwf	(atoi@neg+1)& (0+255),w,b
  6905   001C10  A4D8               	btfss	status,2,c
  6906   001C12  EF0D  F00E         	goto	u4481
  6907   001C16  EF0F  F00E         	goto	u4480
  6908   001C1A                     u4481:
  6909   001C1A  EF1D  F00E         	goto	l1425
  6910   001C1E                     u4480:
  6911   001C1E                     
  6912                           ; BSR set to: 0
  6913   001C1E  C085  F080         	movff	atoi@n,??_atoi
  6914   001C22  C086  F081         	movff	atoi@n+1,??_atoi+1
  6915   001C26  1F80               	comf	??_atoi& (0+255),f,b
  6916   001C28  1F81               	comf	(??_atoi+1)& (0+255),f,b
  6917   001C2A  4B80               	infsnz	??_atoi& (0+255),f,b
  6918   001C2C  2B81               	incf	(??_atoi+1)& (0+255),f,b
  6919   001C2E  C080  F07E         	movff	??_atoi,?_atoi
  6920   001C32  C081  F07F         	movff	??_atoi+1,?_atoi+1
  6921   001C36  EF21  F00E         	goto	l1428
  6922   001C3A                     l1425:
  6923                           
  6924                           ; BSR set to: 0
  6925   001C3A  C085  F07E         	movff	atoi@n,?_atoi
  6926   001C3E  C086  F07F         	movff	atoi@n+1,?_atoi+1
  6927   001C42                     l1428:
  6928                           
  6929                           ; BSR set to: 0
  6930   001C42  0012               	return		;funcret
  6931   001C44                     __end_of_atoi:
  6932                           	callstack 0
  6933                           
  6934 ;; *************** function _isspace *****************
  6935 ;; Defined at:
  6936 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  c               2   24[BANK0 ] int 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;		None
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  2   24[BANK0 ] int 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6950 ;;      Params:         0       2       0       0       0       0       0
  6951 ;;      Locals:         0       1       0       0       0       0       0
  6952 ;;      Temps:          0       2       0       0       0       0       0
  6953 ;;      Totals:         0       5       0       0       0       0       0
  6954 ;;Total ram usage:        5 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 11
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_atoi
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text22
  6965   002B5C                     __ptext22:
  6966                           	callstack 0
  6967   002B5C                     _isspace:
  6968                           	callstack 15
  6969   002B5C  0E01               	movlw	1
  6970   002B5E  0100               	movlb	0	; () banked
  6971   002B60  6F7C               	movwf	_isspace$2011& (0+255),b
  6972   002B62                     
  6973                           ; BSR set to: 0
  6974   002B62  0E20               	movlw	32
  6975   002B64  1978               	xorwf	isspace@c& (0+255),w,b
  6976   002B66  1179               	iorwf	(isspace@c+1)& (0+255),w,b
  6977   002B68  B4D8               	btfsc	status,2,c
  6978   002B6A  EFB9  F015         	goto	u4131
  6979   002B6E  EFBB  F015         	goto	u4130
  6980   002B72                     u4131:
  6981   002B72  EFCE  F015         	goto	l4889
  6982   002B76                     u4130:
  6983   002B76                     
  6984                           ; BSR set to: 0
  6985   002B76  0EF7               	movlw	247
  6986   002B78  2578               	addwf	isspace@c& (0+255),w,b
  6987   002B7A  6F7A               	movwf	??_isspace& (0+255),b
  6988   002B7C  0EFF               	movlw	255
  6989   002B7E  2179               	addwfc	(isspace@c+1)& (0+255),w,b
  6990   002B80  6F7B               	movwf	(??_isspace+1)& (0+255),b
  6991   002B82  517B               	movf	(??_isspace+1)& (0+255),w,b
  6992   002B84  E109               	bnz	u4140
  6993   002B86  0E05               	movlw	5
  6994   002B88  5D7A               	subwf	??_isspace& (0+255),w,b
  6995   002B8A  A0D8               	btfss	status,0,c
  6996   002B8C  EFCA  F015         	goto	u4141
  6997   002B90  EFCC  F015         	goto	u4140
  6998   002B94                     u4141:
  6999   002B94  EFCE  F015         	goto	l4889
  7000   002B98                     u4140:
  7001   002B98                     
  7002                           ; BSR set to: 0
  7003   002B98  0E00               	movlw	0
  7004   002B9A  6F7C               	movwf	_isspace$2011& (0+255),b
  7005   002B9C                     l4889:
  7006                           
  7007                           ; BSR set to: 0
  7008   002B9C  C07C  F078         	movff	_isspace$2011,?_isspace
  7009   002BA0  6B79               	clrf	(?_isspace+1)& (0+255),b
  7010   002BA2                     
  7011                           ; BSR set to: 0
  7012   002BA2  0012               	return		;funcret
  7013   002BA4                     __end_of_isspace:
  7014                           	callstack 0
  7015                           
  7016 ;; *************** function _isdigit *****************
  7017 ;; Defined at:
  7018 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  c               2   24[BANK0 ] int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  2   24[BANK0 ] int 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7032 ;;      Params:         0       2       0       0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0
  7034 ;;      Temps:          0       2       0       0       0       0       0
  7035 ;;      Totals:         0       4       0       0       0       0       0
  7036 ;;Total ram usage:        4 bytes
  7037 ;; Hardware stack levels used: 1
  7038 ;; Hardware stack levels required when called: 11
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_vfpfcnvrt
  7043 ;;		_atoi
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text23
  7048   002D90                     __ptext23:
  7049                           	callstack 0
  7050   002D90                     _isdigit:
  7051                           	callstack 16
  7052   002D90  0ED0               	movlw	208
  7053   002D92  0100               	movlb	0	; () banked
  7054   002D94  2578               	addwf	isdigit@c& (0+255),w,b
  7055   002D96  6F7A               	movwf	??_isdigit& (0+255),b
  7056   002D98  0EFF               	movlw	255
  7057   002D9A  2179               	addwfc	(isdigit@c+1)& (0+255),w,b
  7058   002D9C  6F7B               	movwf	(??_isdigit+1)& (0+255),b
  7059   002D9E  517B               	movf	(??_isdigit+1)& (0+255),w,b
  7060   002DA0  E10A               	bnz	u4110
  7061   002DA2  0E0A               	movlw	10
  7062   002DA4  5D7A               	subwf	??_isdigit& (0+255),w,b
  7063   002DA6  A0D8               	btfss	status,0,c
  7064   002DA8  EFD8  F016         	goto	u4111
  7065   002DAC  EFDB  F016         	goto	u4110
  7066   002DB0                     u4111:
  7067   002DB0  0E01               	movlw	1
  7068   002DB2  EFDC  F016         	goto	u4120
  7069   002DB6                     u4110:
  7070   002DB6  0E00               	movlw	0
  7071   002DB8                     u4120:
  7072   002DB8  6F78               	movwf	?_isdigit& (0+255),b
  7073   002DBA  6B79               	clrf	(?_isdigit+1)& (0+255),b
  7074   002DBC                     
  7075                           ; BSR set to: 0
  7076   002DBC  0012               	return		;funcret
  7077   002DBE                     __end_of_isdigit:
  7078                           	callstack 0
  7079                           
  7080 ;; *************** function ___wmul *****************
  7081 ;; Defined at:
  7082 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  multiplier      2   24[BANK0 ] unsigned int 
  7085 ;;  multiplicand    2   26[BANK0 ] unsigned int 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  product         2   28[BANK0 ] unsigned int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2   24[BANK0 ] unsigned int 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0, prodl, prodh
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7097 ;;      Params:         0       4       0       0       0       0       0
  7098 ;;      Locals:         0       2       0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0
  7100 ;;      Totals:         0       6       0       0       0       0       0
  7101 ;;Total ram usage:        6 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; Hardware stack levels required when called: 11
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_atoi
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text24
  7112   002E94                     __ptext24:
  7113                           	callstack 0
  7114   002E94                     ___wmul:
  7115                           	callstack 15
  7116   002E94  0100               	movlb	0	; () banked
  7117   002E96  5178               	movf	___wmul@multiplier& (0+255),w,b
  7118   002E98  037A               	mulwf	___wmul@multiplicand& (0+255),b
  7119   002E9A  CFF3 F07C          	movff	prodl,___wmul@product
  7120   002E9E  CFF4 F07D          	movff	prodh,___wmul@product+1
  7121   002EA2  5178               	movf	___wmul@multiplier& (0+255),w,b
  7122   002EA4  037B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7123   002EA6  50F3               	movf	243,w,c
  7124   002EA8  277D               	addwf	(___wmul@product+1)& (0+255),f,b
  7125   002EAA  5179               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7126   002EAC  037A               	mulwf	___wmul@multiplicand& (0+255),b
  7127   002EAE  50F3               	movf	243,w,c
  7128   002EB0  277D               	addwf	(___wmul@product+1)& (0+255),f,b
  7129   002EB2                     
  7130                           ; BSR set to: 0
  7131   002EB2  C07C  F078         	movff	___wmul@product,?___wmul
  7132   002EB6  C07D  F079         	movff	___wmul@product+1,?___wmul+1
  7133   002EBA                     
  7134                           ; BSR set to: 0
  7135   002EBA  0012               	return		;funcret
  7136   002EBC                     __end_of___wmul:
  7137                           	callstack 0
  7138                           
  7139 ;; *************** function _SYSTEM_Initialize *****************
  7140 ;; Defined at:
  7141 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;		None
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  1    wreg      void 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0, cstack
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7155 ;;      Params:         0       0       0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0
  7158 ;;      Totals:         0       0       0       0       0       0       0
  7159 ;;Total ram usage:        0 bytes
  7160 ;; Hardware stack levels used: 1
  7161 ;; Hardware stack levels required when called: 13
  7162 ;; This function calls:
  7163 ;;		_EPWM2_Initialize
  7164 ;;		_EUSART1_Initialize
  7165 ;;		_EUSART2_Initialize
  7166 ;;		_INTERRUPT_Initialize
  7167 ;;		_OSCILLATOR_Initialize
  7168 ;;		_PIN_MANAGER_Initialize
  7169 ;;		_TMR1_Initialize
  7170 ;;		_TMR2_Initialize
  7171 ;; This function is called by:
  7172 ;;		_main
  7173 ;; This function uses a non-reentrant model
  7174 ;;
  7175                           
  7176                           	psect	text25
  7177   002F0A                     __ptext25:
  7178                           	callstack 0
  7179   002F0A                     _SYSTEM_Initialize:
  7180                           	callstack 17
  7181   002F0A                     
  7182                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7183   002F0A  EC44  F018         	call	_INTERRUPT_Initialize	;wreg free
  7184   002F0E                     
  7185                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  7186   002F0E  ECF5  F016         	call	_PIN_MANAGER_Initialize	;wreg free
  7187   002F12                     
  7188                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  7189   002F12  ECB4  F017         	call	_OSCILLATOR_Initialize	;wreg free
  7190   002F16                     
  7191                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  7192   002F16  EC96  F017         	call	_EPWM2_Initialize	;wreg free
  7193   002F1A                     
  7194                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7195   002F1A  EC02  F018         	call	_TMR2_Initialize	;wreg free
  7196   002F1E                     
  7197                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  7198   002F1E  ECA6  F017         	call	_TMR1_Initialize	;wreg free
  7199   002F22                     
  7200                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  7201   002F22  ECF5  F015         	call	_EUSART1_Initialize	;wreg free
  7202   002F26                     
  7203                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  7204   002F26  ECD3  F014         	call	_EUSART2_Initialize	;wreg free
  7205   002F2A  0012               	return		;funcret
  7206   002F2C                     __end_of_SYSTEM_Initialize:
  7207                           	callstack 0
  7208                           
  7209 ;; *************** function _TMR2_Initialize *****************
  7210 ;; Defined at:
  7211 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;		None
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      void 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7225 ;;      Params:         0       0       0       0       0       0       0
  7226 ;;      Locals:         0       0       0       0       0       0       0
  7227 ;;      Temps:          0       0       0       0       0       0       0
  7228 ;;      Totals:         0       0       0       0       0       0       0
  7229 ;;Total ram usage:        0 bytes
  7230 ;; Hardware stack levels used: 1
  7231 ;; Hardware stack levels required when called: 11
  7232 ;; This function calls:
  7233 ;;		Nothing
  7234 ;; This function is called by:
  7235 ;;		_SYSTEM_Initialize
  7236 ;; This function uses a non-reentrant model
  7237 ;;
  7238                           
  7239                           	psect	text26
  7240   003004                     __ptext26:
  7241                           	callstack 0
  7242   003004                     _TMR2_Initialize:
  7243                           	callstack 18
  7244   003004                     
  7245                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x67;
  7246   003004  0E67               	movlw	103
  7247   003006  6EBB               	movwf	187,c	;volatile
  7248                           
  7249                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7250   003008  0E00               	movlw	0
  7251   00300A  6EBC               	movwf	188,c	;volatile
  7252   00300C                     
  7253                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7254   00300C  929E               	bcf	158,1,c	;volatile
  7255                           
  7256                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  7257   00300E  0E05               	movlw	5
  7258   003010  6EBA               	movwf	186,c	;volatile
  7259   003012  0012               	return		;funcret
  7260   003014                     __end_of_TMR2_Initialize:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function _TMR1_Initialize *****************
  7264 ;; Defined at:
  7265 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;		None
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  1    wreg      void 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7279 ;;      Params:         0       0       0       0       0       0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0
  7282 ;;      Totals:         0       0       0       0       0       0       0
  7283 ;;Total ram usage:        0 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 11
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_SYSTEM_Initialize
  7290 ;; This function uses a non-reentrant model
  7291 ;;
  7292                           
  7293                           	psect	text27
  7294   002F4C                     __ptext27:
  7295                           	callstack 0
  7296   002F4C                     _TMR1_Initialize:
  7297                           	callstack 18
  7298   002F4C                     
  7299                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  7300   002F4C  0E00               	movlw	0
  7301   002F4E  6ECC               	movwf	204,c	;volatile
  7302                           
  7303                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x00;
  7304   002F50  0E00               	movlw	0
  7305   002F52  6ECF               	movwf	207,c	;volatile
  7306                           
  7307                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  7308   002F54  0E00               	movlw	0
  7309   002F56  6ECE               	movwf	206,c	;volatile
  7310   002F58                     
  7311                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  7312   002F58  CFCE F0D8          	movff	4046,_timer1ReloadVal	;volatile
  7313   002F5C  CFCF F0D9          	movff	4047,_timer1ReloadVal+1	;volatile
  7314   002F60                     
  7315                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  7316   002F60  909E               	bcf	158,0,c	;volatile
  7317                           
  7318                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x01;
  7319   002F62  0E01               	movlw	1
  7320   002F64  6ECD               	movwf	205,c	;volatile
  7321   002F66  0012               	return		;funcret
  7322   002F68                     __end_of_TMR1_Initialize:
  7323                           	callstack 0
  7324                           
  7325 ;; *************** function _PIN_MANAGER_Initialize *****************
  7326 ;; Defined at:
  7327 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;		None
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      void 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7341 ;;      Params:         0       0       0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0
  7344 ;;      Totals:         0       0       0       0       0       0       0
  7345 ;;Total ram usage:        0 bytes
  7346 ;; Hardware stack levels used: 1
  7347 ;; Hardware stack levels required when called: 11
  7348 ;; This function calls:
  7349 ;;		Nothing
  7350 ;; This function is called by:
  7351 ;;		_SYSTEM_Initialize
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text28
  7356   002DEA                     __ptext28:
  7357                           	callstack 0
  7358   002DEA                     _PIN_MANAGER_Initialize:
  7359                           	callstack 18
  7360   002DEA                     
  7361                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7362   002DEA  0E00               	movlw	0
  7363   002DEC  6E89               	movwf	137,c	;volatile
  7364                           
  7365                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7366   002DEE  0E00               	movlw	0
  7367   002DF0  6E8A               	movwf	138,c	;volatile
  7368                           
  7369                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7370   002DF2  0E00               	movlw	0
  7371   002DF4  6E8B               	movwf	139,c	;volatile
  7372   002DF6                     
  7373                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7374   002DF6  6892               	setf	146,c	;volatile
  7375                           
  7376                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xBF;
  7377   002DF8  0EBF               	movlw	191
  7378   002DFA  6E93               	movwf	147,c	;volatile
  7379                           
  7380                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBD;
  7381   002DFC  0EBD               	movlw	189
  7382   002DFE  6E94               	movwf	148,c	;volatile
  7383                           
  7384                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7385   002E00  0E3C               	movlw	60
  7386   002E02  010F               	movlb	15	; () banked
  7387   002E04  6F3A               	movwf	58,b	;volatile
  7388                           
  7389                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  7390   002E06  0E3F               	movlw	63
  7391   002E08  6F39               	movwf	57,b	;volatile
  7392                           
  7393                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  7394   002E0A  0E2F               	movlw	47
  7395   002E0C  6F38               	movwf	56,b	;volatile
  7396                           
  7397                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7398   002E0E  0E00               	movlw	0
  7399   002E10  6E61               	movwf	97,c	;volatile
  7400   002E12                     
  7401                           ; BSR set to: 15
  7402                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  7403   002E12  8EF1               	bsf	241,7,c	;volatile
  7404   002E14                     
  7405                           ; BSR set to: 15
  7406   002E14  0012               	return		;funcret
  7407   002E16                     __end_of_PIN_MANAGER_Initialize:
  7408                           	callstack 0
  7409                           
  7410 ;; *************** function _OSCILLATOR_Initialize *****************
  7411 ;; Defined at:
  7412 ;;		line 63 in file "mcc_generated_files/mcc.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;		None
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7426 ;;      Params:         0       0       0       0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0
  7429 ;;      Totals:         0       0       0       0       0       0       0
  7430 ;;Total ram usage:        0 bytes
  7431 ;; Hardware stack levels used: 1
  7432 ;; Hardware stack levels required when called: 11
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_SYSTEM_Initialize
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text29
  7441   002F68                     __ptext29:
  7442                           	callstack 0
  7443   002F68                     _OSCILLATOR_Initialize:
  7444                           	callstack 18
  7445   002F68                     
  7446                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  7447   002F68  0E70               	movlw	112
  7448   002F6A  6ED3               	movwf	211,c	;volatile
  7449                           
  7450                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  7451   002F6C  0E04               	movlw	4
  7452   002F6E  6ED2               	movwf	210,c	;volatile
  7453                           
  7454                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  7455   002F70  0E40               	movlw	64
  7456   002F72  6E9B               	movwf	155,c	;volatile
  7457   002F74                     l397:
  7458                           
  7459                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  7460   002F74  AED2               	btfss	4050,7,c	;volatile
  7461   002F76  EFBF  F017         	goto	u3451
  7462   002F7A  EFC1  F017         	goto	u3450
  7463   002F7E                     u3451:
  7464   002F7E  EFBA  F017         	goto	l397
  7465   002F82                     u3450:
  7466   002F82  0012               	return		;funcret
  7467   002F84                     __end_of_OSCILLATOR_Initialize:
  7468                           	callstack 0
  7469                           
  7470 ;; *************** function _INTERRUPT_Initialize *****************
  7471 ;; Defined at:
  7472 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  1    wreg      void 
  7479 ;; Registers used:
  7480 ;;		None
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7486 ;;      Params:         0       0       0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; Hardware stack levels required when called: 11
  7493 ;; This function calls:
  7494 ;;		Nothing
  7495 ;; This function is called by:
  7496 ;;		_SYSTEM_Initialize
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text30
  7501   003088                     __ptext30:
  7502                           	callstack 0
  7503   003088                     _INTERRUPT_Initialize:
  7504                           	callstack 18
  7505   003088                     
  7506                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7507   003088  9ED0               	bcf	208,7,c	;volatile
  7508   00308A  0012               	return		;funcret
  7509   00308C                     __end_of_INTERRUPT_Initialize:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _EUSART2_Initialize *****************
  7513 ;; Defined at:
  7514 ;;		line 88 in file "mcc_generated_files/eusart2.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7528 ;;      Params:         0       0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 12
  7535 ;; This function calls:
  7536 ;;		_EUSART2_SetErrorHandler
  7537 ;;		_EUSART2_SetFramingErrorHandler
  7538 ;;		_EUSART2_SetOverrunErrorHandler
  7539 ;;		_EUSART2_SetRxInterruptHandler
  7540 ;;		_EUSART2_SetTxInterruptHandler
  7541 ;; This function is called by:
  7542 ;;		_SYSTEM_Initialize
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text31
  7547   0029A6                     __ptext31:
  7548                           	callstack 0
  7549   0029A6                     _EUSART2_Initialize:
  7550                           	callstack 17
  7551   0029A6                     
  7552                           ;mcc_generated_files/eusart2.c: 91:     PIE3bits.RC2IE = 0;
  7553   0029A6  9AA3               	bcf	163,5,c	;volatile
  7554   0029A8                     
  7555                           ;mcc_generated_files/eusart2.c: 92:     EUSART2_SetRxInterruptHandler(EUSART2_Receive_IS
      +                          R);
  7556   0029A8  0E50               	movlw	low _EUSART2_Receive_ISR
  7557   0029AA  0100               	movlb	0	; () banked
  7558   0029AC  6F78               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
  7559   0029AE  0E26               	movlw	high _EUSART2_Receive_ISR
  7560   0029B0  6F79               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  7561   0029B2  EC16  F018         	call	_EUSART2_SetRxInterruptHandler	;wreg free
  7562   0029B6                     
  7563                           ;mcc_generated_files/eusart2.c: 93:     PIE3bits.TX2IE = 0;
  7564   0029B6  98A3               	bcf	163,4,c	;volatile
  7565                           
  7566                           ;mcc_generated_files/eusart2.c: 94:     EUSART2_SetTxInterruptHandler(EUSART2_Transmit_I
      +                          SR);
  7567   0029B8  0E74               	movlw	low _EUSART2_Transmit_ISR
  7568   0029BA  0100               	movlb	0	; () banked
  7569   0029BC  6F78               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
  7570   0029BE  0E2C               	movlw	high _EUSART2_Transmit_ISR
  7571   0029C0  6F79               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
  7572   0029C2  EC11  F018         	call	_EUSART2_SetTxInterruptHandler	;wreg free
  7573   0029C6                     
  7574                           ;mcc_generated_files/eusart2.c: 98:     BAUDCON2 = 0x08;
  7575   0029C6  0E08               	movlw	8
  7576   0029C8  6E70               	movwf	112,c	;volatile
  7577   0029CA                     
  7578                           ;mcc_generated_files/eusart2.c: 101:     RCSTA2 = 0x90;
  7579   0029CA  0E90               	movlw	144
  7580   0029CC  6E71               	movwf	113,c	;volatile
  7581   0029CE                     
  7582                           ;mcc_generated_files/eusart2.c: 104:     TXSTA2 = 0x24;
  7583   0029CE  0E24               	movlw	36
  7584   0029D0  6E72               	movwf	114,c	;volatile
  7585   0029D2                     
  7586                           ;mcc_generated_files/eusart2.c: 107:     SPBRG2 = 0x14;
  7587   0029D2  0E14               	movlw	20
  7588   0029D4  6E75               	movwf	117,c	;volatile
  7589   0029D6                     
  7590                           ;mcc_generated_files/eusart2.c: 110:     SPBRGH2 = 0x34;
  7591   0029D6  0E34               	movlw	52
  7592   0029D8  6E76               	movwf	118,c	;volatile
  7593   0029DA                     
  7594                           ;mcc_generated_files/eusart2.c: 113:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultF
      +                          ramingErrorHandler);
  7595   0029DA  0E8E               	movlw	low _EUSART2_DefaultFramingErrorHandler
  7596   0029DC  0100               	movlb	0	; () banked
  7597   0029DE  6F78               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler& (0+255),b
  7598   0029E0  0E30               	movlw	high _EUSART2_DefaultFramingErrorHandler
  7599   0029E2  6F79               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  7600   0029E4  EC20  F018         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  7601   0029E8                     
  7602                           ;mcc_generated_files/eusart2.c: 114:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultO
      +                          verrunErrorHandler);
  7603   0029E8  0E7C               	movlw	low _EUSART2_DefaultOverrunErrorHandler
  7604   0029EA  0100               	movlb	0	; () banked
  7605   0029EC  6F78               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler& (0+255),b
  7606   0029EE  0E30               	movlw	high _EUSART2_DefaultOverrunErrorHandler
  7607   0029F0  6F79               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  7608   0029F2  EC1B  F018         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  7609   0029F6                     
  7610                           ;mcc_generated_files/eusart2.c: 115:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHan
      +                          dler);
  7611   0029F6  0E82               	movlw	low _EUSART2_DefaultErrorHandler
  7612   0029F8  0100               	movlb	0	; () banked
  7613   0029FA  6F78               	movwf	EUSART2_SetErrorHandler@interruptHandler& (0+255),b
  7614   0029FC  0E30               	movlw	high _EUSART2_DefaultErrorHandler
  7615   0029FE  6F79               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)& (0+255),b
  7616   002A00  EC25  F018         	call	_EUSART2_SetErrorHandler	;wreg free
  7617                           
  7618                           ;mcc_generated_files/eusart2.c: 117:     eusart2RxLastError.status = 0;
  7619   002A04  0E00               	movlw	0
  7620   002A06  0100               	movlb	0	; () banked
  7621   002A08  6FE1               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  7622                           
  7623                           ;mcc_generated_files/eusart2.c: 120:     eusart2TxHead = 0;
  7624   002A0A  0E00               	movlw	0
  7625   002A0C  6FE7               	movwf	_eusart2TxHead& (0+255),b	;volatile
  7626                           
  7627                           ;mcc_generated_files/eusart2.c: 121:     eusart2TxTail = 0;
  7628   002A0E  0E00               	movlw	0
  7629   002A10  6FE6               	movwf	_eusart2TxTail& (0+255),b	;volatile
  7630                           
  7631                           ;mcc_generated_files/eusart2.c: 122:     eusart2TxBufferRemaining = sizeof(eusart2TxBuff
      +                          er);
  7632   002A12  0E08               	movlw	8
  7633   002A14  6FE5               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
  7634                           
  7635                           ;mcc_generated_files/eusart2.c: 124:     eusart2RxHead = 0;
  7636   002A16  0E00               	movlw	0
  7637   002A18  6FE4               	movwf	_eusart2RxHead& (0+255),b	;volatile
  7638                           
  7639                           ;mcc_generated_files/eusart2.c: 125:     eusart2RxTail = 0;
  7640   002A1A  0E00               	movlw	0
  7641   002A1C  6FE3               	movwf	_eusart2RxTail& (0+255),b	;volatile
  7642                           
  7643                           ;mcc_generated_files/eusart2.c: 126:     eusart2RxCount = 0;
  7644   002A1E  0E00               	movlw	0
  7645   002A20  6FE2               	movwf	_eusart2RxCount& (0+255),b	;volatile
  7646   002A22                     
  7647                           ; BSR set to: 0
  7648                           ;mcc_generated_files/eusart2.c: 129:     PIE3bits.RC2IE = 1;
  7649   002A22  8AA3               	bsf	163,5,c	;volatile
  7650   002A24                     
  7651                           ; BSR set to: 0
  7652   002A24  0012               	return		;funcret
  7653   002A26                     __end_of_EUSART2_Initialize:
  7654                           	callstack 0
  7655                           
  7656 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
  7657 ;; Defined at:
  7658 ;;		line 276 in file "mcc_generated_files/eusart2.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  7661 ;;		 -> EUSART2_Transmit_ISR(1), 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;		None
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, status,2, status,0
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7673 ;;      Params:         0       2       0       0       0       0       0
  7674 ;;      Locals:         0       0       0       0       0       0       0
  7675 ;;      Temps:          0       0       0       0       0       0       0
  7676 ;;      Totals:         0       2       0       0       0       0       0
  7677 ;;Total ram usage:        2 bytes
  7678 ;; Hardware stack levels used: 1
  7679 ;; Hardware stack levels required when called: 11
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_EUSART2_Initialize
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           	psect	text32
  7688   003022                     __ptext32:
  7689                           	callstack 0
  7690   003022                     _EUSART2_SetTxInterruptHandler:
  7691                           	callstack 17
  7692   003022                     
  7693                           ;mcc_generated_files/eusart2.c: 277:     EUSART2_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7694   003022  C078  F0D6         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
  7695   003026  C079  F0D7         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
  7696   00302A  0012               	return		;funcret
  7697   00302C                     __end_of_EUSART2_SetTxInterruptHandler:
  7698                           	callstack 0
  7699                           
  7700 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
  7701 ;; Defined at:
  7702 ;;		line 280 in file "mcc_generated_files/eusart2.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  7705 ;;		 -> rxEUSART2ISR(1), EUSART2_Receive_ISR(1), 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      void 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0
  7712 ;; Tracked objects:
  7713 ;;		On entry : 0/0
  7714 ;;		On exit  : 0/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7717 ;;      Params:         0       2       0       0       0       0       0
  7718 ;;      Locals:         0       0       0       0       0       0       0
  7719 ;;      Temps:          0       0       0       0       0       0       0
  7720 ;;      Totals:         0       2       0       0       0       0       0
  7721 ;;Total ram usage:        2 bytes
  7722 ;; Hardware stack levels used: 1
  7723 ;; Hardware stack levels required when called: 11
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_EUSART2_Initialize
  7728 ;;		_main
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731                           
  7732                           	psect	text33
  7733   00302C                     __ptext33:
  7734                           	callstack 0
  7735   00302C                     _EUSART2_SetRxInterruptHandler:
  7736                           	callstack 17
  7737   00302C                     
  7738                           ;mcc_generated_files/eusart2.c: 281:     EUSART2_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  7739   00302C  C078  F0D4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
  7740   003030  C079  F0D5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
  7741   003034  0012               	return		;funcret
  7742   003036                     __end_of_EUSART2_SetRxInterruptHandler:
  7743                           	callstack 0
  7744                           
  7745 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  7746 ;; Defined at:
  7747 ;;		line 268 in file "mcc_generated_files/eusart2.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  7750 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;		None
  7753 ;; Return value:  Size  Location     Type
  7754 ;;                  1    wreg      void 
  7755 ;; Registers used:
  7756 ;;		wreg, status,2, status,0
  7757 ;; Tracked objects:
  7758 ;;		On entry : 0/0
  7759 ;;		On exit  : 0/0
  7760 ;;		Unchanged: 0/0
  7761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7762 ;;      Params:         0       2       0       0       0       0       0
  7763 ;;      Locals:         0       0       0       0       0       0       0
  7764 ;;      Temps:          0       0       0       0       0       0       0
  7765 ;;      Totals:         0       2       0       0       0       0       0
  7766 ;;Total ram usage:        2 bytes
  7767 ;; Hardware stack levels used: 1
  7768 ;; Hardware stack levels required when called: 11
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_EUSART2_Initialize
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           	psect	text34
  7777   003036                     __ptext34:
  7778                           	callstack 0
  7779   003036                     _EUSART2_SetOverrunErrorHandler:
  7780                           	callstack 17
  7781   003036                     
  7782                           ;mcc_generated_files/eusart2.c: 269:     EUSART2_OverrunErrorHandler = interruptHandler;
  7783   003036  C078  F120         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  7784   00303A  C079  F121         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  7785   00303E  0012               	return		;funcret
  7786   003040                     __end_of_EUSART2_SetOverrunErrorHandler:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  7790 ;; Defined at:
  7791 ;;		line 264 in file "mcc_generated_files/eusart2.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  7794 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;		None
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      void 
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7806 ;;      Params:         0       2       0       0       0       0       0
  7807 ;;      Locals:         0       0       0       0       0       0       0
  7808 ;;      Temps:          0       0       0       0       0       0       0
  7809 ;;      Totals:         0       2       0       0       0       0       0
  7810 ;;Total ram usage:        2 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 11
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_EUSART2_Initialize
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text35
  7821   003040                     __ptext35:
  7822                           	callstack 0
  7823   003040                     _EUSART2_SetFramingErrorHandler:
  7824                           	callstack 17
  7825   003040                     
  7826                           ;mcc_generated_files/eusart2.c: 265:     EUSART2_FramingErrorHandler = interruptHandler;
  7827   003040  C078  F0D2         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  7828   003044  C079  F0D3         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  7829   003048  0012               	return		;funcret
  7830   00304A                     __end_of_EUSART2_SetFramingErrorHandler:
  7831                           	callstack 0
  7832                           
  7833 ;; *************** function _EUSART2_SetErrorHandler *****************
  7834 ;; Defined at:
  7835 ;;		line 272 in file "mcc_generated_files/eusart2.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  7838 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;		None
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, status,2, status,0
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7850 ;;      Params:         0       2       0       0       0       0       0
  7851 ;;      Locals:         0       0       0       0       0       0       0
  7852 ;;      Temps:          0       0       0       0       0       0       0
  7853 ;;      Totals:         0       2       0       0       0       0       0
  7854 ;;Total ram usage:        2 bytes
  7855 ;; Hardware stack levels used: 1
  7856 ;; Hardware stack levels required when called: 11
  7857 ;; This function calls:
  7858 ;;		Nothing
  7859 ;; This function is called by:
  7860 ;;		_EUSART2_Initialize
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           	psect	text36
  7865   00304A                     __ptext36:
  7866                           	callstack 0
  7867   00304A                     _EUSART2_SetErrorHandler:
  7868                           	callstack 17
  7869   00304A                     
  7870                           ;mcc_generated_files/eusart2.c: 273:     EUSART2_ErrorHandler = interruptHandler;
  7871   00304A  C078  F11E         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  7872   00304E  C079  F11F         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  7873   003052  0012               	return		;funcret
  7874   003054                     __end_of_EUSART2_SetErrorHandler:
  7875                           	callstack 0
  7876                           
  7877 ;; *************** function _EUSART1_Initialize *****************
  7878 ;; Defined at:
  7879 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7893 ;;      Params:         0       0       0       0       0       0       0
  7894 ;;      Locals:         0       0       0       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0
  7896 ;;      Totals:         0       0       0       0       0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 12
  7900 ;; This function calls:
  7901 ;;		_EUSART1_SetErrorHandler
  7902 ;;		_EUSART1_SetFramingErrorHandler
  7903 ;;		_EUSART1_SetOverrunErrorHandler
  7904 ;; This function is called by:
  7905 ;;		_SYSTEM_Initialize
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text37
  7910   002BEA                     __ptext37:
  7911                           	callstack 0
  7912   002BEA                     _EUSART1_Initialize:
  7913                           	callstack 17
  7914   002BEA                     
  7915                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  7916   002BEA  0E08               	movlw	8
  7917   002BEC  6EB8               	movwf	184,c	;volatile
  7918                           
  7919                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  7920   002BEE  0E90               	movlw	144
  7921   002BF0  6EAB               	movwf	171,c	;volatile
  7922                           
  7923                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  7924   002BF2  0E24               	movlw	36
  7925   002BF4  6EAC               	movwf	172,c	;volatile
  7926                           
  7927                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  7928   002BF6  0E82               	movlw	130
  7929   002BF8  6EAF               	movwf	175,c	;volatile
  7930                           
  7931                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  7932   002BFA  0E06               	movlw	6
  7933   002BFC  6EB0               	movwf	176,c	;volatile
  7934   002BFE                     
  7935                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  7936   002BFE  0E00               	movlw	0
  7937   002C00  0100               	movlb	0	; () banked
  7938   002C02  6F78               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  7939   002C04  0E00               	movlw	0
  7940   002C06  6F79               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  7941   002C08  EC2F  F018         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7942   002C0C                     
  7943                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  7944   002C0C  0E00               	movlw	0
  7945   002C0E  0100               	movlb	0	; () banked
  7946   002C10  6F78               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  7947   002C12  0E00               	movlw	0
  7948   002C14  6F79               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  7949   002C16  EC2A  F018         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7950   002C1A                     
  7951                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  7952   002C1A  0E00               	movlw	0
  7953   002C1C  0100               	movlb	0	; () banked
  7954   002C1E  6F78               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  7955   002C20  0E00               	movlw	0
  7956   002C22  6F79               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  7957   002C24  EC34  F018         	call	_EUSART1_SetErrorHandler	;wreg free
  7958   002C28                     
  7959                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  7960   002C28  0E00               	movlw	0
  7961   002C2A  0100               	movlb	0	; () banked
  7962   002C2C  6FE0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7963   002C2E                     
  7964                           ; BSR set to: 0
  7965   002C2E  0012               	return		;funcret
  7966   002C30                     __end_of_EUSART1_Initialize:
  7967                           	callstack 0
  7968                           
  7969 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7970 ;; Defined at:
  7971 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  7972 ;; Parameters:    Size  Location     Type
  7973 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  7974 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2, status,0
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7986 ;;      Params:         0       2       0       0       0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0
  7989 ;;      Totals:         0       2       0       0       0       0       0
  7990 ;;Total ram usage:        2 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 11
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_EUSART1_Initialize
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text38
  8001   003054                     __ptext38:
  8002                           	callstack 0
  8003   003054                     _EUSART1_SetOverrunErrorHandler:
  8004                           	callstack 17
  8005   003054                     
  8006                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8007   003054  C078  F11A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8008   003058  C079  F11B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8009   00305C  0012               	return		;funcret
  8010   00305E                     __end_of_EUSART1_SetOverrunErrorHandler:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8014 ;; Defined at:
  8015 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  8018 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;		None
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		wreg, status,2, status,0
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8030 ;;      Params:         0       2       0       0       0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0
  8033 ;;      Totals:         0       2       0       0       0       0       0
  8034 ;;Total ram usage:        2 bytes
  8035 ;; Hardware stack levels used: 1
  8036 ;; Hardware stack levels required when called: 11
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_EUSART1_Initialize
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text39
  8045   00305E                     __ptext39:
  8046                           	callstack 0
  8047   00305E                     _EUSART1_SetFramingErrorHandler:
  8048                           	callstack 17
  8049   00305E                     
  8050                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8051   00305E  C078  F11C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8052   003062  C079  F11D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8053   003066  0012               	return		;funcret
  8054   003068                     __end_of_EUSART1_SetFramingErrorHandler:
  8055                           	callstack 0
  8056                           
  8057 ;; *************** function _EUSART1_SetErrorHandler *****************
  8058 ;; Defined at:
  8059 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  interruptHan    2   24[BANK0 ] PTR FTN()void 
  8062 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  1    wreg      void 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8074 ;;      Params:         0       2       0       0       0       0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0
  8077 ;;      Totals:         0       2       0       0       0       0       0
  8078 ;;Total ram usage:        2 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; Hardware stack levels required when called: 11
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_EUSART1_Initialize
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text40
  8089   003068                     __ptext40:
  8090                           	callstack 0
  8091   003068                     _EUSART1_SetErrorHandler:
  8092                           	callstack 17
  8093   003068                     
  8094                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8095   003068  C078  F118         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8096   00306C  C079  F119         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8097   003070  0012               	return		;funcret
  8098   003072                     __end_of_EUSART1_SetErrorHandler:
  8099                           	callstack 0
  8100                           
  8101 ;; *************** function _EPWM2_Initialize *****************
  8102 ;; Defined at:
  8103 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  8104 ;; Parameters:    Size  Location     Type
  8105 ;;		None
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  1    wreg      void 
  8110 ;; Registers used:
  8111 ;;		wreg, status,2
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8117 ;;      Params:         0       0       0       0       0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0
  8119 ;;      Temps:          0       0       0       0       0       0       0
  8120 ;;      Totals:         0       0       0       0       0       0       0
  8121 ;;Total ram usage:        0 bytes
  8122 ;; Hardware stack levels used: 1
  8123 ;; Hardware stack levels required when called: 11
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_SYSTEM_Initialize
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text41
  8132   002F2C                     __ptext41:
  8133                           	callstack 0
  8134   002F2C                     _EPWM2_Initialize:
  8135                           	callstack 18
  8136   002F2C                     
  8137                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x0C;
  8138   002F2C  0E0C               	movlw	12
  8139   002F2E  6E66               	movwf	102,c	;volatile
  8140                           
  8141                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  8142   002F30  0E00               	movlw	0
  8143   002F32  6E64               	movwf	100,c	;volatile
  8144                           
  8145                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  8146   002F34  0E80               	movlw	128
  8147   002F36  6E65               	movwf	101,c	;volatile
  8148                           
  8149                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  8150   002F38  0E01               	movlw	1
  8151   002F3A  6E63               	movwf	99,c	;volatile
  8152                           
  8153                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  8154   002F3C  0E00               	movlw	0
  8155   002F3E  6E68               	movwf	104,c	;volatile
  8156                           
  8157                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x00;
  8158   002F40  0E00               	movlw	0
  8159   002F42  6E67               	movwf	103,c	;volatile
  8160                           
  8161                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  8162   002F44  0EE7               	movlw	-25
  8163   002F46  010F               	movlb	15	; () banked
  8164   002F48  1749               	andwf	73,f,b	;volatile
  8165   002F4A                     
  8166                           ; BSR set to: 15
  8167   002F4A  0012               	return		;funcret
  8168   002F4C                     __end_of_EPWM2_Initialize:
  8169                           	callstack 0
  8170                           
  8171 ;; *************** function _EUSART2_is_rx_ready *****************
  8172 ;; Defined at:
  8173 ;;		line 137 in file "mcc_generated_files/eusart2.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  1    wreg      _Bool 
  8180 ;; Registers used:
  8181 ;;		wreg, status,2
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8187 ;;      Params:         0       0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0
  8189 ;;      Temps:          0       0       0       0       0       0       0
  8190 ;;      Totals:         0       0       0       0       0       0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels used: 1
  8193 ;; Hardware stack levels required when called: 11
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           	psect	text42
  8202   002F9C                     __ptext42:
  8203                           	callstack 0
  8204   002F9C                     _EUSART2_is_rx_ready:
  8205                           	callstack 19
  8206   002F9C                     
  8207                           ;mcc_generated_files/eusart2.c: 139:     return (eusart2RxCount ? 1 : 0);
  8208   002F9C  0100               	movlb	0	; () banked
  8209   002F9E  51E2               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8210   002FA0  A4D8               	btfss	status,2,c
  8211   002FA2  EFD5  F017         	goto	u3471
  8212   002FA6  EFD8  F017         	goto	u3470
  8213   002FAA                     u3471:
  8214   002FAA  0E01               	movlw	1
  8215   002FAC  EFD9  F017         	goto	u3480
  8216   002FB0                     u3470:
  8217   002FB0  0E00               	movlw	0
  8218   002FB2                     u3480:
  8219   002FB2                     
  8220                           ; BSR set to: 0
  8221   002FB2  0012               	return		;funcret
  8222   002FB4                     __end_of_EUSART2_is_rx_ready:
  8223                           	callstack 0
  8224                           
  8225 ;; *************** function _EUSART2_Read *****************
  8226 ;; Defined at:
  8227 ;;		line 151 in file "mcc_generated_files/eusart2.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;		None
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  readValue       1    0        unsigned char 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  1    wreg      unsigned char 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8241 ;;      Params:         0       0       0       0       0       0       0
  8242 ;;      Locals:         0       0       0       0       0       0       0
  8243 ;;      Temps:          0       0       0       0       0       0       0
  8244 ;;      Totals:         0       0       0       0       0       0       0
  8245 ;;Total ram usage:        0 bytes
  8246 ;; Hardware stack levels used: 1
  8247 ;; Hardware stack levels required when called: 11
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_main
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text43
  8256   002AC8                     __ptext43:
  8257                           	callstack 0
  8258   002AC8                     _EUSART2_Read:
  8259                           	callstack 19
  8260   002AC8                     l4125:
  8261                           
  8262                           ;mcc_generated_files/eusart2.c: 155:     while(0 == eusart2RxCount)
  8263   002AC8  0100               	movlb	0	; () banked
  8264   002ACA  51E2               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8265   002ACC  B4D8               	btfsc	status,2,c
  8266   002ACE  EF6B  F015         	goto	u3491
  8267   002AD2  EF6D  F015         	goto	u3490
  8268   002AD6                     u3491:
  8269   002AD6  EF64  F015         	goto	l4125
  8270   002ADA                     u3490:
  8271   002ADA                     
  8272                           ; BSR set to: 0
  8273                           ;mcc_generated_files/eusart2.c: 159:     eusart2RxLastError = eusart2RxStatusBuffer[eusa
      +                          rt2RxTail];
  8274   002ADA  0E00               	movlw	low _eusart2RxStatusBuffer
  8275   002ADC  25E3               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  8276   002ADE  6ED9               	movwf	fsr2l,c
  8277   002AE0  6ADA               	clrf	fsr2h,c
  8278   002AE2  0E01               	movlw	high _eusart2RxStatusBuffer
  8279   002AE4  22DA               	addwfc	fsr2h,f,c
  8280   002AE6  50DF               	movf	indf2,w,c
  8281   002AE8  6FE1               	movwf	_eusart2RxLastError& (0+255),b	;volatile
  8282   002AEA  0E08               	movlw	low _eusart2RxBuffer
  8283   002AEC  25E3               	addwf	_eusart2RxTail& (0+255),w,b	;volatile
  8284   002AEE  6ED9               	movwf	fsr2l,c
  8285   002AF0  6ADA               	clrf	fsr2h,c
  8286   002AF2  0E01               	movlw	high _eusart2RxBuffer
  8287   002AF4  22DA               	addwfc	fsr2h,f,c
  8288   002AF6                     
  8289                           ; BSR set to: 0
  8290   002AF6  2BE3               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  8291   002AF8                     
  8292                           ; BSR set to: 0
  8293                           ;mcc_generated_files/eusart2.c: 162:     if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  8294   002AF8  0E07               	movlw	7
  8295   002AFA  65E3               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  8296   002AFC  EF82  F015         	goto	u3501
  8297   002B00  EF84  F015         	goto	u3500
  8298   002B04                     u3501:
  8299   002B04  EF86  F015         	goto	l4135
  8300   002B08                     u3500:
  8301   002B08                     
  8302                           ; BSR set to: 0
  8303                           ;mcc_generated_files/eusart2.c: 163:     {;mcc_generated_files/eusart2.c: 164:         e
      +                          usart2RxTail = 0;
  8304   002B08  0E00               	movlw	0
  8305   002B0A  6FE3               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8306   002B0C                     l4135:
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;mcc_generated_files/eusart2.c: 166:     PIE3bits.RC2IE = 0;
  8310   002B0C  9AA3               	bcf	163,5,c	;volatile
  8311   002B0E                     
  8312                           ; BSR set to: 0
  8313                           ;mcc_generated_files/eusart2.c: 167:     eusart2RxCount--;
  8314   002B0E  07E2               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  8315   002B10                     
  8316                           ; BSR set to: 0
  8317                           ;mcc_generated_files/eusart2.c: 168:     PIE3bits.RC2IE = 1;
  8318   002B10  8AA3               	bsf	163,5,c	;volatile
  8319   002B12                     
  8320                           ; BSR set to: 0
  8321   002B12  0012               	return		;funcret
  8322   002B14                     __end_of_EUSART2_Read:
  8323                           	callstack 0
  8324                           
  8325 ;; *************** function _EUSART1_is_rx_ready *****************
  8326 ;; Defined at:
  8327 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;		None
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;		None
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  1    wreg      _Bool 
  8334 ;; Registers used:
  8335 ;;		wreg
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8341 ;;      Params:         0       0       0       0       0       0       0
  8342 ;;      Locals:         0       0       0       0       0       0       0
  8343 ;;      Temps:          0       0       0       0       0       0       0
  8344 ;;      Totals:         0       0       0       0       0       0       0
  8345 ;;Total ram usage:        0 bytes
  8346 ;; Hardware stack levels used: 1
  8347 ;; Hardware stack levels required when called: 11
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_main
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text44
  8356   002FDE                     __ptext44:
  8357                           	callstack 0
  8358   002FDE                     _EUSART1_is_rx_ready:
  8359                           	callstack 19
  8360   002FDE                     
  8361                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  8362   002FDE  BA9E               	btfsc	158,5,c	;volatile
  8363   002FE0  EFF4  F017         	goto	u3591
  8364   002FE4  EFF7  F017         	goto	u3590
  8365   002FE8                     u3591:
  8366   002FE8  0E01               	movlw	1
  8367   002FEA  EFF8  F017         	goto	u3596
  8368   002FEE                     u3590:
  8369   002FEE  0E00               	movlw	0
  8370   002FF0                     u3596:
  8371   002FF0  0012               	return		;funcret
  8372   002FF2                     __end_of_EUSART1_is_rx_ready:
  8373                           	callstack 0
  8374                           
  8375 ;; *************** function _EUSART1_Read *****************
  8376 ;; Defined at:
  8377 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;		None
  8380 ;; Auto vars:     Size  Location     Type
  8381 ;;		None
  8382 ;; Return value:  Size  Location     Type
  8383 ;;                  1    wreg      unsigned char 
  8384 ;; Registers used:
  8385 ;;		wreg, status,2
  8386 ;; Tracked objects:
  8387 ;;		On entry : 0/0
  8388 ;;		On exit  : 0/0
  8389 ;;		Unchanged: 0/0
  8390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8391 ;;      Params:         0       0       0       0       0       0       0
  8392 ;;      Locals:         0       0       0       0       0       0       0
  8393 ;;      Temps:          0       0       0       0       0       0       0
  8394 ;;      Totals:         0       0       0       0       0       0       0
  8395 ;;Total ram usage:        0 bytes
  8396 ;; Hardware stack levels used: 1
  8397 ;; Hardware stack levels required when called: 11
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;;		_getch
  8403 ;; This function uses a non-reentrant model
  8404 ;;
  8405                           
  8406                           	psect	text45
  8407   002E42                     __ptext45:
  8408                           	callstack 0
  8409   002E42                     _EUSART1_Read:
  8410                           	callstack 19
  8411   002E42                     l303:
  8412                           
  8413                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  8414   002E42  AA9E               	btfss	158,5,c	;volatile
  8415   002E44  EF26  F017         	goto	u3601
  8416   002E48  EF28  F017         	goto	u3600
  8417   002E4C                     u3601:
  8418   002E4C  EF21  F017         	goto	l303
  8419   002E50                     u3600:
  8420   002E50                     
  8421                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  8422   002E50  0E00               	movlw	0
  8423   002E52  0100               	movlb	0	; () banked
  8424   002E54  6FE0               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  8425   002E56                     
  8426                           ; BSR set to: 0
  8427                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  8428   002E56  A2AB               	btfss	171,1,c	;volatile
  8429   002E58  EF30  F017         	goto	u3611
  8430   002E5C  EF32  F017         	goto	u3610
  8431   002E60                     u3611:
  8432   002E60  EF34  F017         	goto	l4187
  8433   002E64                     u3610:
  8434   002E64                     
  8435                           ; BSR set to: 0
  8436                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  8437   002E64  98AB               	bcf	171,4,c	;volatile
  8438                           
  8439                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  8440   002E66  88AB               	bsf	171,4,c	;volatile
  8441   002E68                     l4187:
  8442                           
  8443                           ; BSR set to: 0
  8444                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  8445   002E68  50AE               	movf	174,w,c	;volatile
  8446   002E6A                     
  8447                           ; BSR set to: 0
  8448   002E6A  0012               	return		;funcret
  8449   002E6C                     __end_of_EUSART1_Read:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _INTERRUPT_InterruptManager *****************
  8453 ;; Defined at:
  8454 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8468 ;;      Params:         0       0       0       0       0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0
  8470 ;;      Temps:          0      12       0       0       0       0       0
  8471 ;;      Totals:         0      12       0       0       0       0       0
  8472 ;;Total ram usage:       12 bytes
  8473 ;; Hardware stack levels used: 1
  8474 ;; Hardware stack levels required when called: 10
  8475 ;; This function calls:
  8476 ;;		Absolute function
  8477 ;;		_EUSART2_Receive_ISR
  8478 ;;		_EUSART2_Transmit_ISR
  8479 ;;		_rxEUSART2ISR
  8480 ;; This function is called by:
  8481 ;;		Interrupt level 2
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	intcode
  8486   000008                     __pintcode:
  8487                           	callstack 0
  8488   000008                     _INTERRUPT_InterruptManager:
  8489                           	callstack 11
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;incstack = 0
  8493   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8494   00000A  CFFA F06C          	movff	pclath,??_INTERRUPT_InterruptManager
  8495   00000E  CFFB F06D          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8496   000012  CFE1 F06E          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  8497   000016  CFE2 F06F          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  8498   00001A  CFD9 F070          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  8499   00001E  CFDA F071          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  8500   000022  CFF3 F072          	movff	prodl,??_INTERRUPT_InterruptManager+6
  8501   000026  CFF4 F073          	movff	prodh,??_INTERRUPT_InterruptManager+7
  8502   00002A  CFF6 F074          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
  8503   00002E  CFF7 F075          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
  8504   000032  CFF8 F076          	movff	tblptru,??_INTERRUPT_InterruptManager+10
  8505   000036  CFF5 F077          	movff	tablat,??_INTERRUPT_InterruptManager+11
  8506   00003A                     
  8507                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  8508   00003A  ACF2               	btfss	242,6,c	;volatile
  8509   00003C  EF22  F000         	goto	i2u386_41
  8510   000040  EF24  F000         	goto	i2u386_40
  8511   000044                     i2u386_41:
  8512   000044  EF60  F000         	goto	i2l575
  8513   000048                     i2u386_40:
  8514   000048                     
  8515                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
  8516   000048  A8A3               	btfss	163,4,c	;volatile
  8517   00004A  EF29  F000         	goto	i2u387_41
  8518   00004E  EF2B  F000         	goto	i2u387_40
  8519   000052                     i2u387_41:
  8520   000052  EF42  F000         	goto	i2l570
  8521   000056                     i2u387_40:
  8522   000056  A8A4               	btfss	164,4,c	;volatile
  8523   000058  EF30  F000         	goto	i2u388_41
  8524   00005C  EF32  F000         	goto	i2u388_40
  8525   000060                     i2u388_41:
  8526   000060  EF42  F000         	goto	i2l570
  8527   000064                     i2u388_40:
  8528   000064                     
  8529                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART2_TxDefaultInterruptHandler();
  8530   000064  D802               	call	i2u389_48
  8531   000066  EF40  F000         	goto	i2u389_49
  8532   00006A                     i2u389_48:
  8533   00006A  0005               	push	
  8534   00006C  0100               	movlb	0	; () banked
  8535   00006E  6EFA               	movwf	pclath,c
  8536   000070  51D6               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
  8537   000072  6EFD               	movwf	tosl,c
  8538   000074  51D7               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
  8539   000076  6EFE               	movwf	tosh,c
  8540   000078  50F8               	movf	tblptru,w,c
  8541   00007A  6EFF               	movwf	tosu,c
  8542   00007C  50FA               	movf	pclath,w,c
  8543   00007E  0012               	return		;indir
  8544   000080                     i2u389_49:
  8545                           
  8546                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  8547   000080  EF60  F000         	goto	i2l575
  8548   000084                     i2l570:
  8549   000084  AAA3               	btfss	163,5,c	;volatile
  8550   000086  EF47  F000         	goto	i2u390_41
  8551   00008A  EF49  F000         	goto	i2u390_40
  8552   00008E                     i2u390_41:
  8553   00008E  EF60  F000         	goto	i2l571
  8554   000092                     i2u390_40:
  8555   000092  AAA4               	btfss	164,5,c	;volatile
  8556   000094  EF4E  F000         	goto	i2u391_41
  8557   000098  EF50  F000         	goto	i2u391_40
  8558   00009C                     i2u391_41:
  8559   00009C  EF60  F000         	goto	i2l571
  8560   0000A0                     i2u391_40:
  8561   0000A0                     
  8562                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART2_RxDefaultInterruptHandler();
  8563   0000A0  D802               	call	i2u392_48
  8564   0000A2  EF5E  F000         	goto	i2u392_49
  8565   0000A6                     i2u392_48:
  8566   0000A6  0005               	push	
  8567   0000A8  0100               	movlb	0	; () banked
  8568   0000AA  6EFA               	movwf	pclath,c
  8569   0000AC  51D4               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
  8570   0000AE  6EFD               	movwf	tosl,c
  8571   0000B0  51D5               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
  8572   0000B2  6EFE               	movwf	tosh,c
  8573   0000B4  50F8               	movf	tblptru,w,c
  8574   0000B6  6EFF               	movwf	tosu,c
  8575   0000B8  50FA               	movf	pclath,w,c
  8576   0000BA  0012               	return		;indir
  8577   0000BC                     i2u392_49:
  8578                           
  8579                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  8580   0000BC  EF60  F000         	goto	i2l575
  8581   0000C0                     i2l571:
  8582   0000C0                     i2l575:
  8583   0000C0  C077  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
  8584   0000C4  C076  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
  8585   0000C8  C075  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
  8586   0000CC  C074  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
  8587   0000D0  C073  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  8588   0000D4  C072  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  8589   0000D8  C071  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  8590   0000DC  C070  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  8591   0000E0  C06F  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  8592   0000E4  C06E  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  8593   0000E8  C06D  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8594   0000EC  C06C  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8595   0000F0  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8596   0000F2  0011               	retfie		f
  8597   0000F4                     __end_of_INTERRUPT_InterruptManager:
  8598                           	callstack 0
  8599                           
  8600 ;; *************** function _EUSART2_Receive_ISR *****************
  8601 ;; Defined at:
  8602 ;;		line 216 in file "mcc_generated_files/eusart2.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;		None
  8605 ;; Auto vars:     Size  Location     Type
  8606 ;;		None
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  1    wreg      void 
  8609 ;; Registers used:
  8610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8616 ;;      Params:         0       0       0       0       0       0       0
  8617 ;;      Locals:         0       0       0       0       0       0       0
  8618 ;;      Temps:          0       0       0       0       0       0       0
  8619 ;;      Totals:         0       0       0       0       0       0       0
  8620 ;;Total ram usage:        0 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 2
  8623 ;; This function calls:
  8624 ;;		Absolute function
  8625 ;;		_EUSART2_DefaultErrorHandler
  8626 ;;		_EUSART2_DefaultFramingErrorHandler
  8627 ;;		_EUSART2_DefaultOverrunErrorHandler
  8628 ;;		_EUSART2_RxDataHandler
  8629 ;; This function is called by:
  8630 ;;		_EUSART2_Initialize
  8631 ;;		_INTERRUPT_InterruptManager
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text47
  8636   002650                     __ptext47:
  8637                           	callstack 0
  8638   002650                     _EUSART2_Receive_ISR:
  8639                           	callstack 18
  8640   002650                     
  8641                           ;mcc_generated_files/eusart2.c: 219:     eusart2RxStatusBuffer[eusart2RxHead].status = 0
      +                          ;
  8642   002650  0E00               	movlw	low _eusart2RxStatusBuffer
  8643   002652  0100               	movlb	0	; () banked
  8644   002654  25E4               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  8645   002656  6ED9               	movwf	fsr2l,c
  8646   002658  6ADA               	clrf	fsr2h,c
  8647   00265A  0E01               	movlw	high _eusart2RxStatusBuffer
  8648   00265C  22DA               	addwfc	fsr2h,f,c
  8649   00265E  0E00               	movlw	0
  8650   002660  6EDF               	movwf	indf2,c
  8651   002662                     
  8652                           ; BSR set to: 0
  8653                           ;mcc_generated_files/eusart2.c: 221:     if(RCSTA2bits.FERR){
  8654   002662  A471               	btfss	113,2,c	;volatile
  8655   002664  EF36  F013         	goto	i2u353_41
  8656   002668  EF38  F013         	goto	i2u353_40
  8657   00266C                     i2u353_41:
  8658   00266C  EF4E  F013         	goto	i2l4163
  8659   002670                     i2u353_40:
  8660   002670                     
  8661                           ; BSR set to: 0
  8662                           ;mcc_generated_files/eusart2.c: 222:         eusart2RxStatusBuffer[eusart2RxHead].ferr =
      +                           1;
  8663   002670  0E00               	movlw	low _eusart2RxStatusBuffer
  8664   002672  25E4               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  8665   002674  6ED9               	movwf	fsr2l,c
  8666   002676  6ADA               	clrf	fsr2h,c
  8667   002678  0E01               	movlw	high _eusart2RxStatusBuffer
  8668   00267A  22DA               	addwfc	fsr2h,f,c
  8669   00267C  0101               	movlb	1	; () banked
  8670   00267E  82DF               	bsf	indf2,1,c
  8671   002680                     
  8672                           ; BSR set to: 1
  8673                           ;mcc_generated_files/eusart2.c: 223:         EUSART2_FramingErrorHandler();
  8674   002680  D802               	call	i2u354_48
  8675   002682  EF4E  F013         	goto	i2u354_49
  8676   002686                     i2u354_48:
  8677   002686  0005               	push	
  8678   002688  0100               	movlb	0	; () banked
  8679   00268A  6EFA               	movwf	pclath,c
  8680   00268C  51D2               	movf	_EUSART2_FramingErrorHandler& (0+255),w,b
  8681   00268E  6EFD               	movwf	tosl,c
  8682   002690  51D3               	movf	(_EUSART2_FramingErrorHandler+1)& (0+255),w,b
  8683   002692  6EFE               	movwf	tosh,c
  8684   002694  50F8               	movf	tblptru,w,c
  8685   002696  6EFF               	movwf	tosu,c
  8686   002698  50FA               	movf	pclath,w,c
  8687   00269A  0012               	return		;indir
  8688   00269C                     i2u354_49:
  8689   00269C                     i2l4163:
  8690                           
  8691                           ;mcc_generated_files/eusart2.c: 226:     if(RCSTA2bits.OERR){
  8692   00269C  A271               	btfss	113,1,c	;volatile
  8693   00269E  EF53  F013         	goto	i2u355_41
  8694   0026A2  EF55  F013         	goto	i2u355_40
  8695   0026A6                     i2u355_41:
  8696   0026A6  EF6B  F013         	goto	i2l4169
  8697   0026AA                     i2u355_40:
  8698   0026AA                     
  8699                           ;mcc_generated_files/eusart2.c: 227:         eusart2RxStatusBuffer[eusart2RxHead].oerr =
      +                           1;
  8700   0026AA  0E00               	movlw	low _eusart2RxStatusBuffer
  8701   0026AC  0100               	movlb	0	; () banked
  8702   0026AE  25E4               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  8703   0026B0  6ED9               	movwf	fsr2l,c
  8704   0026B2  6ADA               	clrf	fsr2h,c
  8705   0026B4  0E01               	movlw	high _eusart2RxStatusBuffer
  8706   0026B6  22DA               	addwfc	fsr2h,f,c
  8707   0026B8  0101               	movlb	1	; () banked
  8708   0026BA  84DF               	bsf	indf2,2,c
  8709   0026BC                     
  8710                           ; BSR set to: 1
  8711                           ;mcc_generated_files/eusart2.c: 228:         EUSART2_OverrunErrorHandler();
  8712   0026BC  D802               	call	i2u356_48
  8713   0026BE  EF6B  F013         	goto	i2u356_49
  8714   0026C2                     i2u356_48:
  8715   0026C2  0005               	push	
  8716   0026C4  6EFA               	movwf	pclath,c
  8717   0026C6  5120               	movf	_EUSART2_OverrunErrorHandler& (0+255),w,b
  8718   0026C8  6EFD               	movwf	tosl,c
  8719   0026CA  5121               	movf	(_EUSART2_OverrunErrorHandler+1)& (0+255),w,b
  8720   0026CC  6EFE               	movwf	tosh,c
  8721   0026CE  50F8               	movf	tblptru,w,c
  8722   0026D0  6EFF               	movwf	tosu,c
  8723   0026D2  50FA               	movf	pclath,w,c
  8724   0026D4  0012               	return		;indir
  8725   0026D6                     i2u356_49:
  8726   0026D6                     i2l4169:
  8727                           
  8728                           ;mcc_generated_files/eusart2.c: 231:     if(eusart2RxStatusBuffer[eusart2RxHead].status)
      +                          {
  8729   0026D6  0E00               	movlw	low _eusart2RxStatusBuffer
  8730   0026D8  0100               	movlb	0	; () banked
  8731   0026DA  25E4               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
  8732   0026DC  6ED9               	movwf	fsr2l,c
  8733   0026DE  6ADA               	clrf	fsr2h,c
  8734   0026E0  0E01               	movlw	high _eusart2RxStatusBuffer
  8735   0026E2  22DA               	addwfc	fsr2h,f,c
  8736   0026E4  50DF               	movf	indf2,w,c
  8737   0026E6  B4D8               	btfsc	status,2,c
  8738   0026E8  EF78  F013         	goto	i2u357_41
  8739   0026EC  EF7A  F013         	goto	i2u357_40
  8740   0026F0                     i2u357_41:
  8741   0026F0  EF8A  F013         	goto	i2l4173
  8742   0026F4                     i2u357_40:
  8743   0026F4                     
  8744                           ; BSR set to: 0
  8745                           ;mcc_generated_files/eusart2.c: 232:         EUSART2_ErrorHandler();
  8746   0026F4  D802               	call	i2u358_48
  8747   0026F6  EF88  F013         	goto	i2u358_49
  8748   0026FA                     i2u358_48:
  8749   0026FA  0005               	push	
  8750   0026FC  0101               	movlb	1	; () banked
  8751   0026FE  6EFA               	movwf	pclath,c
  8752   002700  511E               	movf	_EUSART2_ErrorHandler& (0+255),w,b
  8753   002702  6EFD               	movwf	tosl,c
  8754   002704  511F               	movf	(_EUSART2_ErrorHandler+1)& (0+255),w,b
  8755   002706  6EFE               	movwf	tosh,c
  8756   002708  50F8               	movf	tblptru,w,c
  8757   00270A  6EFF               	movwf	tosu,c
  8758   00270C  50FA               	movf	pclath,w,c
  8759   00270E  0012               	return		;indir
  8760   002710                     i2u358_49:
  8761                           
  8762                           ;mcc_generated_files/eusart2.c: 233:     } else {
  8763   002710  EF8C  F013         	goto	i2l215
  8764   002714                     i2l4173:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;mcc_generated_files/eusart2.c: 234:         EUSART2_RxDataHandler();
  8768   002714  EC0B  F017         	call	_EUSART2_RxDataHandler	;wreg free
  8769   002718                     i2l215:
  8770   002718  0012               	return		;funcret
  8771   00271A                     __end_of_EUSART2_Receive_ISR:
  8772                           	callstack 0
  8773                           
  8774 ;; *************** function _rxEUSART2ISR *****************
  8775 ;; Defined at:
  8776 ;;		line 228 in file "main.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;		None
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  character       1   93[COMRAM] unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8790 ;;      Params:         0       0       0       0       0       0       0
  8791 ;;      Locals:         1       0       0       0       0       0       0
  8792 ;;      Temps:          0       2       0       0       0       0       0
  8793 ;;      Totals:         1       2       0       0       0       0       0
  8794 ;;Total ram usage:        3 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; Hardware stack levels required when called: 9
  8797 ;; This function calls:
  8798 ;;		i2_printf
  8799 ;; This function is called by:
  8800 ;;		_main
  8801 ;;		_INTERRUPT_InterruptManager
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text48
  8806   001F76                     __ptext48:
  8807                           	callstack 0
  8808   001F76                     _rxEUSART2ISR:
  8809                           	callstack 11
  8810   001F76                     
  8811                           ;main.c: 230:     }
  8812   001F76  0E5E               	movlw	low STR_45
  8813   001F78  0100               	movlb	0	; () banked
  8814   001F7A  6F66               	movwf	i2printf@fmt& (0+255),b
  8815   001F7C  0E7F               	movlw	high STR_45
  8816   001F7E  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  8817   001F80  EC5E  F017         	call	i2_printf	;wreg free
  8818   001F84                     
  8819                           ;main.c: 232: ;main.c: 233: ;main.c: 234: void transmitCharacterOverIR(char letter, uint
      +                          16_t baudRate);main.c: 236: 
  8820   001F84  CF74 F05E          	movff	3956,rxEUSART2ISR@character	;volatile
  8821   001F88                     
  8822                           ;main.c: 237: 
  8823   001F88  0101               	movlb	1	; () banked
  8824   001F8A  5125               	movf	_received& (0+255),w,b
  8825   001F8C  A4D8               	btfss	status,2,c
  8826   001F8E  EFCB  F00F         	goto	i2u367_41
  8827   001F92  EFCD  F00F         	goto	i2u367_40
  8828   001F96                     i2u367_41:
  8829   001F96  EF32  F010         	goto	i2l532
  8830   001F9A                     i2u367_40:
  8831   001F9A  EF1C  F010         	goto	i2l4281
  8832   001F9E                     i2l4251:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;main.c: 242: 
  8836   001F9E  0E6D               	movlw	low STR_46
  8837   001FA0  6F66               	movwf	i2printf@fmt& (0+255),b
  8838   001FA2  0E7F               	movlw	high STR_46
  8839   001FA4  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  8840   001FA6  C05E  F068         	movff	rxEUSART2ISR@character,?i2_printf+2
  8841   001FAA  6B69               	clrf	(?i2_printf+3)& (0+255),b
  8842   001FAC  EC5E  F017         	call	i2_printf	;wreg free
  8843   001FB0                     
  8844                           ;main.c: 243:     uint8_t mask = 0b00000001;
  8845   001FB0  0E66               	movlw	low _receiveBuffer
  8846   001FB2  0100               	movlb	0	; () banked
  8847   001FB4  25DC               	addwf	rxEUSART2ISR@i& (0+255),w,b
  8848   001FB6  6ED9               	movwf	fsr2l,c
  8849   001FB8  6ADA               	clrf	fsr2h,c
  8850   001FBA  0E01               	movlw	high _receiveBuffer
  8851   001FBC  22DA               	addwfc	fsr2h,f,c
  8852   001FBE  C05E  FFDF         	movff	rxEUSART2ISR@character,indf2
  8853   001FC2                     
  8854                           ; BSR set to: 0
  8855                           ;main.c: 244:     while (mask != 0)
  8856   001FC2  51DC               	movf	rxEUSART2ISR@i& (0+255),w,b
  8857   001FC4  A4D8               	btfss	status,2,c
  8858   001FC6  EFE7  F00F         	goto	i2u368_41
  8859   001FCA  EFE9  F00F         	goto	i2u368_40
  8860   001FCE                     i2u368_41:
  8861   001FCE  EFED  F00F         	goto	i2l4259
  8862   001FD2                     i2u368_40:
  8863   001FD2                     
  8864                           ; BSR set to: 0
  8865   001FD2  C05E  F124         	movff	rxEUSART2ISR@character,_rsum
  8866   001FD6  EFF0  F00F         	goto	i2l4261
  8867   001FDA                     i2l4259:
  8868                           
  8869                           ; BSR set to: 0
  8870   001FDA  505E               	movf	rxEUSART2ISR@character^0,w,c
  8871   001FDC  0101               	movlb	1	; () banked
  8872   001FDE  2724               	addwf	_rsum& (0+255),f,b
  8873   001FE0                     i2l4261:
  8874                           
  8875                           ;main.c: 246:         if ((letter & mask) != 0) EPWM2_LoadDutyValue(0);
  8876   001FE0  0100               	movlb	0	; () banked
  8877   001FE2  2BDC               	incf	rxEUSART2ISR@i& (0+255),f,b
  8878   001FE4                     
  8879                           ; BSR set to: 0
  8880                           ;main.c: 247:         else EPWM2_LoadDutyValue(25);
  8881   001FE4  505E               	movf	rxEUSART2ISR@character^0,w,c
  8882   001FE6  A4D8               	btfss	status,2,c
  8883   001FE8  EFF8  F00F         	goto	i2u369_41
  8884   001FEC  EFFA  F00F         	goto	i2u369_40
  8885   001FF0                     i2u369_41:
  8886   001FF0  EF32  F010         	goto	i2l532
  8887   001FF4                     i2u369_40:
  8888   001FF4                     
  8889                           ; BSR set to: 0
  8890   001FF4  0E01               	movlw	1
  8891   001FF6  6FDB               	movwf	rxEUSART2ISR@state& (0+255),b
  8892   001FF8  EF32  F010         	goto	i2l532
  8893   001FFC                     i2l4267:
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;main.c: 250:         PIR1bits.TMR1IF = 0;
  8897   001FFC  0E7C               	movlw	low STR_47
  8898   001FFE  6F66               	movwf	i2printf@fmt& (0+255),b
  8899   002000  0E7F               	movlw	high STR_47
  8900   002002  6F67               	movwf	(i2printf@fmt+1)& (0+255),b
  8901   002004  C05E  F068         	movff	rxEUSART2ISR@character,?i2_printf+2
  8902   002008  6B69               	clrf	(?i2_printf+3)& (0+255),b
  8903   00200A  EC5E  F017         	call	i2_printf	;wreg free
  8904   00200E                     
  8905                           ;main.c: 251:         while (TMR1_HasOverflowOccured() == 0);
  8906   00200E  0E66               	movlw	low _receiveBuffer
  8907   002010  0100               	movlb	0	; () banked
  8908   002012  25DC               	addwf	rxEUSART2ISR@i& (0+255),w,b
  8909   002014  6ED9               	movwf	fsr2l,c
  8910   002016  6ADA               	clrf	fsr2h,c
  8911   002018  0E01               	movlw	high _receiveBuffer
  8912   00201A  22DA               	addwfc	fsr2h,f,c
  8913   00201C  C05E  FFDF         	movff	rxEUSART2ISR@character,indf2
  8914   002020                     
  8915                           ; BSR set to: 0
  8916                           ;main.c: 252:     }
  8917   002020  C05E  F122         	movff	rxEUSART2ISR@character,_rcsum
  8918   002024                     
  8919                           ; BSR set to: 0
  8920                           ;main.c: 253: 
  8921   002024  0E00               	movlw	0
  8922   002026  6FDC               	movwf	rxEUSART2ISR@i& (0+255),b
  8923   002028                     
  8924                           ; BSR set to: 0
  8925                           ;main.c: 254: 
  8926   002028  0E01               	movlw	1
  8927   00202A  0101               	movlb	1	; () banked
  8928   00202C  6F25               	movwf	_received& (0+255),b
  8929   00202E                     
  8930                           ; BSR set to: 1
  8931                           ;main.c: 255:     EPWM2_LoadDutyValue(0);
  8932   00202E  0E00               	movlw	0
  8933   002030  0100               	movlb	0	; () banked
  8934   002032  6FDB               	movwf	rxEUSART2ISR@state& (0+255),b
  8935                           
  8936                           ;main.c: 256:     TMR1_WriteTimer(0x10000 - baudRate);
  8937   002034  EF32  F010         	goto	i2l532
  8938   002038                     i2l4281:
  8939                           
  8940                           ; BSR set to: 1
  8941   002038  0100               	movlb	0	; () banked
  8942   00203A  51DB               	movf	rxEUSART2ISR@state& (0+255),w,b
  8943   00203C  6F6A               	movwf	??_rxEUSART2ISR& (0+255),b
  8944   00203E  6B6B               	clrf	(??_rxEUSART2ISR+1)& (0+255),b
  8945                           
  8946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8947                           ; Switch size 1, requested type "simple"
  8948                           ; Number of cases is 1, Range of values is 0 to 0
  8949                           ; switch strategies available:
  8950                           ; Name         Instructions Cycles
  8951                           ; simple_byte            4     3 (average)
  8952                           ;	Chosen strategy is simple_byte
  8953   002040  516B               	movf	(??_rxEUSART2ISR+1)& (0+255),w,b
  8954   002042  0A00               	xorlw	0	; case 0
  8955   002044  B4D8               	btfsc	status,2,c
  8956   002046  EF27  F010         	goto	i2l5679
  8957   00204A  EF32  F010         	goto	i2l532
  8958   00204E                     i2l5679:
  8959                           
  8960                           ; BSR set to: 0
  8961                           ; Switch size 1, requested type "simple"
  8962                           ; Number of cases is 2, Range of values is 0 to 1
  8963                           ; switch strategies available:
  8964                           ; Name         Instructions Cycles
  8965                           ; simple_byte            7     4 (average)
  8966                           ;	Chosen strategy is simple_byte
  8967   00204E  516A               	movf	??_rxEUSART2ISR& (0+255),w,b
  8968   002050  0A00               	xorlw	0	; case 0
  8969   002052  B4D8               	btfsc	status,2,c
  8970   002054  EFCF  F00F         	goto	i2l4251
  8971   002058  0A01               	xorlw	1	; case 1
  8972   00205A  B4D8               	btfsc	status,2,c
  8973   00205C  EFFE  F00F         	goto	i2l4267
  8974   002060  EF32  F010         	goto	i2l532
  8975   002064                     i2l532:
  8976   002064  0012               	return		;funcret
  8977   002066                     __end_of_rxEUSART2ISR:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function i2_printf *****************
  8981 ;; Defined at:
  8982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  fmt             2    6[BANK0 ] PTR const unsigned char 
  8985 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  8986 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  8987 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  8988 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  8989 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  8990 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  8991 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  8992 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  8993 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  8994 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  8995 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  8996 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;  ap              2   91[COMRAM] PTR void [1]
  8999 ;;		 -> ?i2_printf(2), ?_printf(2), 
  9000 ;;  ret             2    0        int 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2    6[BANK0 ] int 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9010 ;;      Params:         0       4       0       0       0       0       0
  9011 ;;      Locals:         2       0       0       0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0
  9013 ;;      Totals:         2       4       0       0       0       0       0
  9014 ;;Total ram usage:        6 bytes
  9015 ;; Hardware stack levels used: 1
  9016 ;; Hardware stack levels required when called: 8
  9017 ;; This function calls:
  9018 ;;		i2_vfprintf
  9019 ;; This function is called by:
  9020 ;;		_rxEUSART2ISR
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text49
  9025   002EBC                     __ptext49:
  9026                           	callstack 0
  9027   002EBC                     i2_printf:
  9028                           	callstack 11
  9029   002EBC  0E68               	movlw	low (?i2_printf+2)
  9030   002EBE  6E5C               	movwf	i2printf@ap^0,c
  9031   002EC0  0E00               	movlw	high (?i2_printf+2)
  9032   002EC2  6E5D               	movwf	(i2printf@ap+1)^0,c
  9033   002EC4  0E00               	movlw	0
  9034   002EC6  0100               	movlb	0	; () banked
  9035   002EC8  6F60               	movwf	i2vfprintf@fp& (0+255),b
  9036   002ECA  0E00               	movlw	0
  9037   002ECC  6F61               	movwf	(i2vfprintf@fp+1)& (0+255),b
  9038   002ECE  C066  F062         	movff	i2printf@fmt,i2vfprintf@fmt
  9039   002ED2  C067  F063         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  9040   002ED6  0E5C               	movlw	low i2printf@ap
  9041   002ED8  6F64               	movwf	i2vfprintf@ap& (0+255),b
  9042   002EDA  0E00               	movlw	high i2printf@ap
  9043   002EDC  6F65               	movwf	(i2vfprintf@ap+1)& (0+255),b
  9044   002EDE  EC3C  F015         	call	i2_vfprintf	;wreg free
  9045   002EE2  0012               	return		;funcret
  9046   002EE4                     __end_ofi2_printf:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function i2_vfprintf *****************
  9050 ;; Defined at:
  9051 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9054 ;;		 -> NULL(0), 
  9055 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  9056 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  9057 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  9058 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  9059 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  9060 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  9061 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  9062 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  9063 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  9064 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  9065 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  9066 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  9067 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  9068 ;;  ap              2    4[BANK0 ] PTR PTR void 
  9069 ;;		 -> i2printf@ap(2), printf@ap(2), 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  9072 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  9073 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  9074 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  9075 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  9076 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  9077 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  9078 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  9079 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  9080 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  9081 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  9082 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  9083 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  9084 ;; Return value:  Size  Location     Type
  9085 ;;                  2    0[BANK0 ] int 
  9086 ;; Registers used:
  9087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9093 ;;      Params:         0       6       0       0       0       0       0
  9094 ;;      Locals:         2       0       0       0       0       0       0
  9095 ;;      Temps:          0       0       0       0       0       0       0
  9096 ;;      Totals:         2       6       0       0       0       0       0
  9097 ;;Total ram usage:        8 bytes
  9098 ;; Hardware stack levels used: 1
  9099 ;; Hardware stack levels required when called: 7
  9100 ;; This function calls:
  9101 ;;		i2_vfpfcnvrt
  9102 ;; This function is called by:
  9103 ;;		i2_printf
  9104 ;; This function uses a non-reentrant model
  9105 ;;
  9106                           
  9107                           	psect	text50
  9108   002A78                     __ptext50:
  9109                           	callstack 0
  9110   002A78                     i2_vfprintf:
  9111                           	callstack 11
  9112   002A78                     
  9113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  9114   002A78  C062  F05A         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  9115   002A7C  C063  F05B         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  9116                           
  9117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9118   002A80  EF50  F015         	goto	i2l4017
  9119   002A84                     i2l4015:
  9120                           
  9121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  9122   002A84  C060  F041         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  9123   002A88  C061  F042         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  9124   002A8C  0E5A               	movlw	low i2vfprintf@cfmt
  9125   002A8E  6E43               	movwf	i2vfpfcnvrt@fmt^0,c
  9126   002A90  0E00               	movlw	high i2vfprintf@cfmt
  9127   002A92  6E44               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  9128   002A94  C064  F045         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  9129   002A98  C065  F046         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  9130   002A9C  EC06  F006         	call	i2_vfpfcnvrt	;wreg free
  9131   002AA0                     i2l4017:
  9132                           
  9133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  9134   002AA0  C05A  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  9135   002AA4  C05B  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  9136   002AA8                     	if	0	;tblptru may be non-zero
  9137   002AA8                     	endif
  9138   002AA8                     	if	0	;tblptru may be non-zero
  9139   002AA8                     	endif
  9140   002AA8  0008               	tblrd		*
  9141   002AAA  50F5               	movf	tablat,w,c
  9142   002AAC  0900               	iorlw	0
  9143   002AAE  A4D8               	btfss	status,2,c
  9144   002AB0  EF5C  F015         	goto	i2u342_41
  9145   002AB4  EF5E  F015         	goto	i2u342_40
  9146   002AB8                     i2u342_41:
  9147   002AB8  EF42  F015         	goto	i2l4015
  9148   002ABC                     i2u342_40:
  9149   002ABC                     
  9150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  9151   002ABC  0E00               	movlw	0
  9152   002ABE  0100               	movlb	0	; () banked
  9153   002AC0  6F61               	movwf	(?i2_vfprintf+1)& (0+255),b
  9154   002AC2  0E00               	movlw	0
  9155   002AC4  6F60               	movwf	?i2_vfprintf& (0+255),b
  9156   002AC6                     
  9157                           ; BSR set to: 0
  9158   002AC6  0012               	return		;funcret
  9159   002AC8                     __end_ofi2_vfprintf:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function i2_vfpfcnvrt *****************
  9163 ;; Defined at:
  9164 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  9167 ;;		 -> NULL(0), 
  9168 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  9169 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  9170 ;;  ap              2   68[COMRAM] PTR PTR void 
  9171 ;;		 -> i2printf@ap(2), printf@ap(2), 
  9172 ;; Auto vars:     Size  Location     Type
  9173 ;;  convarg         8   79[COMRAM] struct .
  9174 ;;  cp              2   87[COMRAM] PTR unsigned char 
  9175 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
  9176 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
  9177 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
  9178 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
  9179 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
  9180 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
  9181 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
  9182 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  9183 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
  9184 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
  9185 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
  9186 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
  9187 ;;  done            2   74[COMRAM] int 
  9188 ;;  i               2    0        int 
  9189 ;;  c               1   78[COMRAM] unsigned char 
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9199 ;;      Params:         6       0       0       0       0       0       0
  9200 ;;      Locals:        15       0       0       0       0       0       0
  9201 ;;      Temps:          4       0       0       0       0       0       0
  9202 ;;      Totals:        25       0       0       0       0       0       0
  9203 ;;Total ram usage:       25 bytes
  9204 ;; Hardware stack levels used: 1
  9205 ;; Hardware stack levels required when called: 6
  9206 ;; This function calls:
  9207 ;;		i2_atoi
  9208 ;;		i2_ctoa
  9209 ;;		i2_fputc
  9210 ;;		i2_isdigit
  9211 ;;		i2_stoa
  9212 ;;		i2_strncmp
  9213 ;;		i2_utoa
  9214 ;;		i2_xtoa
  9215 ;; This function is called by:
  9216 ;;		i2_vfprintf
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text51
  9221   000C0C                     __ptext51:
  9222                           	callstack 0
  9223   000C0C                     i2_vfpfcnvrt:
  9224                           	callstack 11
  9225   000C0C                     
  9226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  9227   000C0C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9228   000C10  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9229   000C14  CFDE FFF6          	movff	postinc2,tblptrl
  9230   000C18  CFDD FFF7          	movff	postdec2,tblptrh
  9231   000C1C                     	if	0	;tblptru may be non-zero
  9232   000C1C                     	endif
  9233   000C1C                     	if	0	;tblptru may be non-zero
  9234   000C1C                     	endif
  9235   000C1C  0008               	tblrd		*
  9236   000C1E  50F5               	movf	tablat,w,c
  9237   000C20  0A25               	xorlw	37
  9238   000C22  A4D8               	btfss	status,2,c
  9239   000C24  EF16  F006         	goto	i2u319_41
  9240   000C28  EF18  F006         	goto	i2u319_40
  9241   000C2C                     i2u319_41:
  9242   000C2C  EF18  F008         	goto	i2l3869
  9243   000C30                     i2u319_40:
  9244   000C30                     
  9245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  9246   000C30  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9247   000C34  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9248   000C38  2ADE               	incf	postinc2,f,c
  9249   000C3A  0E00               	movlw	0
  9250   000C3C  22DD               	addwfc	postdec2,f,c
  9251   000C3E                     
  9252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  9253   000C3E  0E00               	movlw	0
  9254   000C40  0100               	movlb	0	; () banked
  9255   000C42  6FCF               	movwf	(_width+1)& (0+255),b
  9256   000C44  0E00               	movlw	0
  9257   000C46  6FCE               	movwf	_width& (0+255),b
  9258   000C48  C0CE  F0DA         	movff	_width,_flags
  9259   000C4C                     
  9260                           ; BSR set to: 0
  9261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  9262   000C4C  69D0               	setf	_prec& (0+255),b
  9263   000C4E  69D1               	setf	(_prec+1)& (0+255),b
  9264   000C50                     
  9265                           ; BSR set to: 0
  9266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  9267   000C50  0E00               	movlw	0
  9268   000C52  6E4C               	movwf	(i2vfpfcnvrt@done+1)^0,c
  9269   000C54  0E00               	movlw	0
  9270   000C56  6E4B               	movwf	i2vfpfcnvrt@done^0,c
  9271                           
  9272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  9273   000C58  EF59  F006         	goto	i2l3803
  9274   000C5C                     i2l3793:
  9275                           
  9276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  9277   000C5C  0100               	movlb	0	; () banked
  9278   000C5E  83DA               	bsf	_flags& (0+255),1,b
  9279   000C60                     
  9280                           ; BSR set to: 0
  9281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  9282   000C60  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9283   000C64  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9284   000C68  2ADE               	incf	postinc2,f,c
  9285   000C6A  0E00               	movlw	0
  9286   000C6C  22DD               	addwfc	postdec2,f,c
  9287                           
  9288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  9289   000C6E  EF59  F006         	goto	i2l3803
  9290   000C72                     i2l3797:
  9291                           
  9292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  9293   000C72  0E00               	movlw	0
  9294   000C74  6E4C               	movwf	(i2vfpfcnvrt@done+1)^0,c
  9295   000C76  0E01               	movlw	1
  9296   000C78  6E4B               	movwf	i2vfpfcnvrt@done^0,c
  9297                           
  9298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  9299   000C7A  EF59  F006         	goto	i2l3803
  9300   000C7E                     i2l3801:
  9301   000C7E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9302   000C82  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9303   000C86  CFDE FFF6          	movff	postinc2,tblptrl
  9304   000C8A  CFDD FFF7          	movff	postdec2,tblptrh
  9305   000C8E                     	if	0	;tblptru may be non-zero
  9306   000C8E                     	endif
  9307   000C8E                     	if	0	;tblptru may be non-zero
  9308   000C8E                     	endif
  9309   000C8E  0008               	tblrd		*
  9310   000C90  50F5               	movf	tablat,w,c
  9311   000C92  6E47               	movwf	??i2_vfpfcnvrt^0,c
  9312   000C94  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
  9313                           
  9314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9315                           ; Switch size 1, requested type "simple"
  9316                           ; Number of cases is 1, Range of values is 0 to 0
  9317                           ; switch strategies available:
  9318                           ; Name         Instructions Cycles
  9319                           ; simple_byte            4     3 (average)
  9320                           ;	Chosen strategy is simple_byte
  9321   000C96  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  9322   000C98  0A00               	xorlw	0	; case 0
  9323   000C9A  B4D8               	btfsc	status,2,c
  9324   000C9C  EF52  F006         	goto	i2l5681
  9325   000CA0  EF39  F006         	goto	i2l3797
  9326   000CA4                     i2l5681:
  9327                           
  9328                           ; Switch size 1, requested type "simple"
  9329                           ; Number of cases is 1, Range of values is 48 to 48
  9330                           ; switch strategies available:
  9331                           ; Name         Instructions Cycles
  9332                           ; simple_byte            4     3 (average)
  9333                           ;	Chosen strategy is simple_byte
  9334   000CA4  5047               	movf	??i2_vfpfcnvrt^0,w,c
  9335   000CA6  0A30               	xorlw	48	; case 48
  9336   000CA8  B4D8               	btfsc	status,2,c
  9337   000CAA  EF2E  F006         	goto	i2l3793
  9338   000CAE  EF39  F006         	goto	i2l3797
  9339   000CB2                     i2l3803:
  9340                           
  9341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  9342   000CB2  504B               	movf	i2vfpfcnvrt@done^0,w,c
  9343   000CB4  104C               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  9344   000CB6  B4D8               	btfsc	status,2,c
  9345   000CB8  EF60  F006         	goto	i2u320_41
  9346   000CBC  EF62  F006         	goto	i2u320_40
  9347   000CC0                     i2u320_41:
  9348   000CC0  EF3F  F006         	goto	i2l3801
  9349   000CC4                     i2u320_40:
  9350   000CC4                     
  9351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  9352   000CC4  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9353   000CC8  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9354   000CCC  CFDE FFF6          	movff	postinc2,tblptrl
  9355   000CD0  CFDD FFF7          	movff	postdec2,tblptrh
  9356   000CD4                     	if	0	;tblptru may be non-zero
  9357   000CD4                     	endif
  9358   000CD4                     	if	0	;tblptru may be non-zero
  9359   000CD4                     	endif
  9360   000CD4  0008               	tblrd		*
  9361   000CD6  50F5               	movf	tablat,w,c
  9362   000CD8  0A2A               	xorlw	42
  9363   000CDA  A4D8               	btfss	status,2,c
  9364   000CDC  EF72  F006         	goto	i2u321_41
  9365   000CE0  EF74  F006         	goto	i2u321_40
  9366   000CE4                     i2u321_41:
  9367   000CE4  EF9E  F006         	goto	i2l3813
  9368   000CE8                     i2u321_40:
  9369   000CE8                     
  9370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  9371   000CE8  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9372   000CEC  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9373   000CF0  2ADE               	incf	postinc2,f,c
  9374   000CF2  0E00               	movlw	0
  9375   000CF4  22DD               	addwfc	postdec2,f,c
  9376                           
  9377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9378   000CF6  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  9379   000CFA  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  9380   000CFE  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  9381   000D02  0E02               	movlw	2
  9382   000D04  26DE               	addwf	postinc2,f,c
  9383   000D06  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  9384   000D0A  0E00               	movlw	0
  9385   000D0C  22DD               	addwfc	postdec2,f,c
  9386   000D0E  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  9387   000D12  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  9388   000D16  CFDE F0CE          	movff	postinc2,_width
  9389   000D1A  CFDD F0CF          	movff	postdec2,_width+1
  9390   000D1E                     
  9391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  9392   000D1E  0100               	movlb	0	; () banked
  9393   000D20  BFCF               	btfsc	(_width+1)& (0+255),7,b
  9394   000D22  EF97  F006         	goto	i2u322_40
  9395   000D26  EF95  F006         	goto	i2u322_41
  9396   000D2A                     i2u322_41:
  9397   000D2A  EFD1  F006         	goto	i2l3821
  9398   000D2E                     i2u322_40:
  9399   000D2E                     
  9400                           ; BSR set to: 0
  9401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  9402   000D2E  81DA               	bsf	_flags& (0+255),0,b
  9403                           
  9404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  9405   000D30  6DCE               	negf	_width& (0+255),b
  9406   000D32  1FCF               	comf	(_width+1)& (0+255),f,b
  9407   000D34  B0D8               	btfsc	status,0,c
  9408   000D36  2BCF               	incf	(_width+1)& (0+255),f,b
  9409   000D38  EFD1  F006         	goto	i2l3821
  9410   000D3C                     i2l3813:
  9411                           
  9412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  9413   000D3C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9414   000D40  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9415   000D44  CFDE F007          	movff	postinc2,i2atoi@s
  9416   000D48  CFDD F008          	movff	postdec2,i2atoi@s+1
  9417   000D4C  EC22  F00E         	call	i2_atoi	;wreg free
  9418   000D50  C007  F0CE         	movff	?i2_atoi,_width
  9419   000D54  C008  F0CF         	movff	?i2_atoi+1,_width+1
  9420                           
  9421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  9422   000D58  EFB5  F006         	goto	i2l3819
  9423   000D5C                     i2l3815:
  9424                           
  9425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  9426   000D5C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9427   000D60  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9428   000D64  2ADE               	incf	postinc2,f,c
  9429   000D66  0E00               	movlw	0
  9430   000D68  22DD               	addwfc	postdec2,f,c
  9431   000D6A                     i2l3819:
  9432   000D6A  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9433   000D6E  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9434   000D72  CFDE FFF6          	movff	postinc2,tblptrl
  9435   000D76  CFDD FFF7          	movff	postdec2,tblptrh
  9436   000D7A                     	if	0	;tblptru may be non-zero
  9437   000D7A                     	endif
  9438   000D7A                     	if	0	;tblptru may be non-zero
  9439   000D7A                     	endif
  9440   000D7A  0008               	tblrd		*
  9441   000D7C  CFF5 F047          	movff	tablat,??i2_vfpfcnvrt
  9442   000D80  0ED0               	movlw	208
  9443   000D82  2447               	addwf	??i2_vfpfcnvrt^0,w,c
  9444   000D84  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
  9445   000D86  6A49               	clrf	(??i2_vfpfcnvrt+2)^0,c
  9446   000D88  0EFF               	movlw	255
  9447   000D8A  2249               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
  9448   000D8C  5049               	movf	(??i2_vfpfcnvrt+2)^0,w,c
  9449   000D8E  E109               	bnz	i2u323_40
  9450   000D90  0E0A               	movlw	10
  9451   000D92  5C48               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
  9452   000D94  A0D8               	btfss	status,0,c
  9453   000D96  EFCF  F006         	goto	i2u323_41
  9454   000D9A  EFD1  F006         	goto	i2u323_40
  9455   000D9E                     i2u323_41:
  9456   000D9E  EFAE  F006         	goto	i2l3815
  9457   000DA2                     i2u323_40:
  9458   000DA2                     i2l3821:
  9459                           
  9460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  9461   000DA2  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9462   000DA6  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9463   000DAA  CFDE FFF6          	movff	postinc2,tblptrl
  9464   000DAE  CFDD FFF7          	movff	postdec2,tblptrh
  9465   000DB2                     	if	0	;tblptru may be non-zero
  9466   000DB2                     	endif
  9467   000DB2                     	if	0	;tblptru may be non-zero
  9468   000DB2                     	endif
  9469   000DB2  0008               	tblrd		*
  9470   000DB4  50F5               	movf	tablat,w,c
  9471   000DB6  0A63               	xorlw	99
  9472   000DB8  A4D8               	btfss	status,2,c
  9473   000DBA  EFE1  F006         	goto	i2u324_41
  9474   000DBE  EFE3  F006         	goto	i2u324_40
  9475   000DC2                     i2u324_41:
  9476   000DC2  EF06  F007         	goto	i2l3829
  9477   000DC6                     i2u324_40:
  9478   000DC6                     
  9479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  9480   000DC6  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9481   000DCA  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9482   000DCE  2ADE               	incf	postinc2,f,c
  9483   000DD0  0E00               	movlw	0
  9484   000DD2  22DD               	addwfc	postdec2,f,c
  9485                           
  9486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9487   000DD4  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  9488   000DD8  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  9489   000DDC  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  9490   000DE0  0E02               	movlw	2
  9491   000DE2  26DE               	addwf	postinc2,f,c
  9492   000DE4  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  9493   000DE8  0E00               	movlw	0
  9494   000DEA  22DD               	addwfc	postdec2,f,c
  9495   000DEC  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  9496   000DF0  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  9497   000DF4  50DF               	movf	indf2,w,c
  9498   000DF6  6E4F               	movwf	i2vfpfcnvrt@c^0,c
  9499   000DF8                     
  9500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of i2_vfpfcnvrt is never used
  9501   000DF8  C041  F00C         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
  9502   000DFC  C042  F00D         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
  9503   000E00  C04F  F00E         	movff	i2vfpfcnvrt@c,i2ctoa@c
  9504   000E04  ECC2  F012         	call	i2_ctoa	;wreg free
  9505   000E08  EF2C  F008         	goto	i2l1383
  9506   000E0C                     i2l3829:
  9507                           
  9508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  9509   000E0C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9510   000E10  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9511   000E14  CFDE F058          	movff	postinc2,i2vfpfcnvrt@cp
  9512   000E18  CFDD F059          	movff	postdec2,i2vfpfcnvrt@cp+1
  9513   000E1C  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  9514   000E20  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  9515   000E24                     	if	0	;tblptru may be non-zero
  9516   000E24                     	endif
  9517   000E24                     	if	0	;tblptru may be non-zero
  9518   000E24                     	endif
  9519   000E24  0008               	tblrd		*
  9520   000E26  50F5               	movf	tablat,w,c
  9521   000E28  0A78               	xorlw	120
  9522   000E2A  B4D8               	btfsc	status,2,c
  9523   000E2C  EF1A  F007         	goto	i2u325_41
  9524   000E30  EF1C  F007         	goto	i2u325_40
  9525   000E34                     i2u325_41:
  9526   000E34  EF2A  F007         	goto	i2l3835
  9527   000E38                     i2u325_40:
  9528   000E38  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  9529   000E3C  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  9530   000E40                     	if	0	;tblptru may be non-zero
  9531   000E40                     	endif
  9532   000E40                     	if	0	;tblptru may be non-zero
  9533   000E40                     	endif
  9534   000E40  0008               	tblrd		*
  9535   000E42  50F5               	movf	tablat,w,c
  9536   000E44  0A75               	xorlw	117
  9537   000E46  A4D8               	btfss	status,2,c
  9538   000E48  EF28  F007         	goto	i2u326_41
  9539   000E4C  EF2A  F007         	goto	i2u326_40
  9540   000E50                     i2u326_41:
  9541   000E50  EFA2  F007         	goto	i2l3849
  9542   000E54                     i2u326_40:
  9543   000E54                     i2l3835:
  9544                           
  9545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  9546   000E54  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  9547   000E58  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  9548   000E5C  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  9549   000E60  0E02               	movlw	2
  9550   000E62  26DE               	addwf	postinc2,f,c
  9551   000E64  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  9552   000E68  0E00               	movlw	0
  9553   000E6A  22DD               	addwfc	postdec2,f,c
  9554   000E6C  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  9555   000E70  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  9556   000E74  CFDE F049          	movff	postinc2,??i2_vfpfcnvrt+2
  9557   000E78  CFDD F04A          	movff	postdec2,??i2_vfpfcnvrt+3
  9558   000E7C  C049  F050         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@convarg
  9559   000E80  C04A  F051         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@convarg+1
  9560   000E84  6A52               	clrf	(i2vfpfcnvrt@convarg+2)^0,c
  9561   000E86  6A53               	clrf	(i2vfpfcnvrt@convarg+3)^0,c
  9562   000E88  6A54               	clrf	(i2vfpfcnvrt@convarg+4)^0,c
  9563   000E8A  6A55               	clrf	(i2vfpfcnvrt@convarg+5)^0,c
  9564   000E8C  6A56               	clrf	(i2vfpfcnvrt@convarg+6)^0,c
  9565   000E8E  6A57               	clrf	(i2vfpfcnvrt@convarg+7)^0,c
  9566                           
  9567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  9568   000E90  0E01               	movlw	1
  9569   000E92  2458               	addwf	i2vfpfcnvrt@cp^0,w,c
  9570   000E94  6E47               	movwf	??i2_vfpfcnvrt^0,c
  9571   000E96  0E00               	movlw	0
  9572   000E98  2059               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  9573   000E9A  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
  9574   000E9C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9575   000EA0  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9576   000EA4  C047  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  9577   000EA8  C048  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  9578                           
  9579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  9580   000EAC  EF88  F007         	goto	i2l3847
  9581   000EB0                     i2l3837:
  9582                           
  9583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of i2_vfpfcnvrt is never used
  9584   000EB0  C041  F01E         	movff	i2vfpfcnvrt@fp,i2utoa@fp
  9585   000EB4  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2utoa@fp+1
  9586   000EB8  C050  F020         	movff	i2vfpfcnvrt@convarg,i2utoa@d
  9587   000EBC  C051  F021         	movff	i2vfpfcnvrt@convarg+1,i2utoa@d+1
  9588   000EC0  C052  F022         	movff	i2vfpfcnvrt@convarg+2,i2utoa@d+2
  9589   000EC4  C053  F023         	movff	i2vfpfcnvrt@convarg+3,i2utoa@d+3
  9590   000EC8  C054  F024         	movff	i2vfpfcnvrt@convarg+4,i2utoa@d+4
  9591   000ECC  C055  F025         	movff	i2vfpfcnvrt@convarg+5,i2utoa@d+5
  9592   000ED0  C056  F026         	movff	i2vfpfcnvrt@convarg+6,i2utoa@d+6
  9593   000ED4  C057  F027         	movff	i2vfpfcnvrt@convarg+7,i2utoa@d+7
  9594   000ED8  EC2C  F009         	call	i2_utoa	;wreg free
  9595   000EDC  EF2C  F008         	goto	i2l1383
  9596   000EE0                     i2l3841:
  9597                           
  9598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of i2_vfpfcnvrt is never used
  9599   000EE0  C041  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
  9600   000EE4  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
  9601   000EE8  C050  F020         	movff	i2vfpfcnvrt@convarg,i2xtoa@d
  9602   000EEC  C051  F021         	movff	i2vfpfcnvrt@convarg+1,i2xtoa@d+1
  9603   000EF0  C052  F022         	movff	i2vfpfcnvrt@convarg+2,i2xtoa@d+2
  9604   000EF4  C053  F023         	movff	i2vfpfcnvrt@convarg+3,i2xtoa@d+3
  9605   000EF8  C054  F024         	movff	i2vfpfcnvrt@convarg+4,i2xtoa@d+4
  9606   000EFC  C055  F025         	movff	i2vfpfcnvrt@convarg+5,i2xtoa@d+5
  9607   000F00  C056  F026         	movff	i2vfpfcnvrt@convarg+6,i2xtoa@d+6
  9608   000F04  C057  F027         	movff	i2vfpfcnvrt@convarg+7,i2xtoa@d+7
  9609   000F08  EC12  F00B         	call	i2_xtoa	;wreg free
  9610   000F0C  EF2C  F008         	goto	i2l1383
  9611   000F10                     i2l3847:
  9612   000F10  C058  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  9613   000F14  C059  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  9614   000F18                     	if	0	;tblptru may be non-zero
  9615   000F18                     	endif
  9616   000F18                     	if	0	;tblptru may be non-zero
  9617   000F18                     	endif
  9618   000F18  0008               	tblrd		*
  9619   000F1A  50F5               	movf	tablat,w,c
  9620   000F1C  6E47               	movwf	??i2_vfpfcnvrt^0,c
  9621   000F1E  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
  9622                           
  9623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9624                           ; Switch size 1, requested type "simple"
  9625                           ; Number of cases is 1, Range of values is 0 to 0
  9626                           ; switch strategies available:
  9627                           ; Name         Instructions Cycles
  9628                           ; simple_byte            4     3 (average)
  9629                           ;	Chosen strategy is simple_byte
  9630   000F20  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  9631   000F22  0A00               	xorlw	0	; case 0
  9632   000F24  B4D8               	btfsc	status,2,c
  9633   000F26  EF97  F007         	goto	i2l5683
  9634   000F2A  EFA2  F007         	goto	i2l3849
  9635   000F2E                     i2l5683:
  9636                           
  9637                           ; Switch size 1, requested type "simple"
  9638                           ; Number of cases is 2, Range of values is 117 to 120
  9639                           ; switch strategies available:
  9640                           ; Name         Instructions Cycles
  9641                           ; simple_byte            7     4 (average)
  9642                           ;	Chosen strategy is simple_byte
  9643   000F2E  5047               	movf	??i2_vfpfcnvrt^0,w,c
  9644   000F30  0A75               	xorlw	117	; case 117
  9645   000F32  B4D8               	btfsc	status,2,c
  9646   000F34  EF58  F007         	goto	i2l3837
  9647   000F38  0A0D               	xorlw	13	; case 120
  9648   000F3A  B4D8               	btfsc	status,2,c
  9649   000F3C  EF70  F007         	goto	i2l3841
  9650   000F40  EFA2  F007         	goto	i2l3849
  9651   000F44                     i2l3849:
  9652                           
  9653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  9654   000F44  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9655   000F48  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9656   000F4C  CFDE FFF6          	movff	postinc2,tblptrl
  9657   000F50  CFDD FFF7          	movff	postdec2,tblptrh
  9658   000F54                     	if	0	;tblptru may be non-zero
  9659   000F54                     	endif
  9660   000F54                     	if	0	;tblptru may be non-zero
  9661   000F54                     	endif
  9662   000F54  0008               	tblrd		*
  9663   000F56  50F5               	movf	tablat,w,c
  9664   000F58  0A73               	xorlw	115
  9665   000F5A  B4D8               	btfsc	status,2,c
  9666   000F5C  EFB2  F007         	goto	i2u327_41
  9667   000F60  EFB4  F007         	goto	i2u327_40
  9668   000F64                     i2u327_41:
  9669   000F64  EFCF  F007         	goto	i2l3853
  9670   000F68                     i2u327_40:
  9671   000F68  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9672   000F6C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9673   000F70  CFDE F001          	movff	postinc2,i2strncmp@_l
  9674   000F74  CFDD F002          	movff	postdec2,i2strncmp@_l+1
  9675   000F78  0EF8               	movlw	low STR_48
  9676   000F7A  6E03               	movwf	i2strncmp@_r^0,c
  9677   000F7C  0E7F               	movlw	high STR_48
  9678   000F7E  6E04               	movwf	(i2strncmp@_r+1)^0,c
  9679   000F80  0E00               	movlw	0
  9680   000F82  6E06               	movwf	(i2strncmp@n+1)^0,c
  9681   000F84  0E03               	movlw	3
  9682   000F86  6E05               	movwf	i2strncmp@n^0,c
  9683   000F88  EC1B  F011         	call	i2_strncmp	;wreg free
  9684   000F8C  5001               	movf	?i2_strncmp^0,w,c
  9685   000F8E  1002               	iorwf	(?i2_strncmp+1)^0,w,c
  9686   000F90  A4D8               	btfss	status,2,c
  9687   000F92  EFCD  F007         	goto	i2u328_41
  9688   000F96  EFCF  F007         	goto	i2u328_40
  9689   000F9A                     i2u328_41:
  9690   000F9A  EF0F  F008         	goto	i2l3865
  9691   000F9E                     i2u328_40:
  9692   000F9E                     i2l3853:
  9693                           
  9694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  9695   000F9E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9696   000FA2  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9697   000FA6  CFDE FFF6          	movff	postinc2,tblptrl
  9698   000FAA  CFDD FFF7          	movff	postdec2,tblptrh
  9699   000FAE                     	if	0	;tblptru may be non-zero
  9700   000FAE                     	endif
  9701   000FAE                     	if	0	;tblptru may be non-zero
  9702   000FAE                     	endif
  9703   000FAE  0008               	tblrd		*
  9704   000FB0  50F5               	movf	tablat,w,c
  9705   000FB2  0A73               	xorlw	115
  9706   000FB4  B4D8               	btfsc	status,2,c
  9707   000FB6  EFDF  F007         	goto	i2u329_41
  9708   000FBA  EFE1  F007         	goto	i2u329_40
  9709   000FBE                     i2u329_41:
  9710   000FBE  EFE7  F007         	goto	i2l3857
  9711   000FC2                     i2u329_40:
  9712   000FC2  0E00               	movlw	0
  9713   000FC4  6E4E               	movwf	(i2_vfpfcnvrt$1976+1)^0,c
  9714   000FC6  0E03               	movlw	3
  9715   000FC8  6E4D               	movwf	i2_vfpfcnvrt$1976^0,c
  9716   000FCA  EFEB  F007         	goto	i2l3859
  9717   000FCE                     i2l3857:
  9718   000FCE  0E00               	movlw	0
  9719   000FD0  6E4E               	movwf	(i2_vfpfcnvrt$1976+1)^0,c
  9720   000FD2  0E01               	movlw	1
  9721   000FD4  6E4D               	movwf	i2_vfpfcnvrt$1976^0,c
  9722   000FD6                     i2l3859:
  9723   000FD6  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9724   000FDA  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9725   000FDE  504D               	movf	i2_vfpfcnvrt$1976^0,w,c
  9726   000FE0  26DE               	addwf	postinc2,f,c
  9727   000FE2  504E               	movf	(i2_vfpfcnvrt$1976+1)^0,w,c
  9728   000FE4  22DD               	addwfc	postdec2,f,c
  9729   000FE6                     
  9730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of i2_vfpfcnvrt is never used
  9731   000FE6  C041  F00C         	movff	i2vfpfcnvrt@fp,i2stoa@fp
  9732   000FEA  C042  F00D         	movff	i2vfpfcnvrt@fp+1,i2stoa@fp+1
  9733   000FEE  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  9734   000FF2  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  9735   000FF6  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  9736   000FFA  0E02               	movlw	2
  9737   000FFC  26DE               	addwf	postinc2,f,c
  9738   000FFE  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  9739   001002  0E00               	movlw	0
  9740   001004  22DD               	addwfc	postdec2,f,c
  9741   001006  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  9742   00100A  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  9743   00100E  CFDE F00E          	movff	postinc2,i2stoa@s
  9744   001012  CFDD F00F          	movff	postdec2,i2stoa@s+1
  9745   001016  ECBC  F00C         	call	i2_stoa	;wreg free
  9746   00101A  EF2C  F008         	goto	i2l1383
  9747   00101E                     i2l3865:
  9748                           
  9749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  9750   00101E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9751   001022  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9752   001026  2ADE               	incf	postinc2,f,c
  9753   001028  0E00               	movlw	0
  9754   00102A  22DD               	addwfc	postdec2,f,c
  9755   00102C  EF2C  F008         	goto	i2l1383
  9756   001030                     i2l3869:
  9757                           
  9758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  9759   001030  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  9760   001034  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  9761   001038  CFDE FFF6          	movff	postinc2,tblptrl
  9762   00103C  CFDD FFF7          	movff	postdec2,tblptrh
  9763   001040                     	if	0	;tblptru may be non-zero
  9764   001040                     	endif
  9765   001040                     	if	0	;tblptru may be non-zero
  9766   001040                     	endif
  9767   001040  0008               	tblrd		*
  9768   001042  50F5               	movf	tablat,w,c
  9769   001044  6E03               	movwf	i2fputc@c^0,c
  9770   001046  6A04               	clrf	(i2fputc@c+1)^0,c
  9771   001048  C041  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  9772   00104C  C042  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  9773   001050  EC88  F014         	call	i2_fputc	;wreg free
  9774   001054  EF0F  F008         	goto	i2l3865
  9775   001058                     i2l1383:
  9776   001058  0012               	return		;funcret
  9777   00105A                     __end_ofi2_vfpfcnvrt:
  9778                           	callstack 0
  9779                           
  9780 ;; *************** function i2_xtoa *****************
  9781 ;; Defined at:
  9782 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  9785 ;;		 -> NULL(0), 
  9786 ;;  d               8   31[COMRAM] unsigned long long 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  n               8   53[COMRAM] unsigned long long 
  9789 ;;  i               2   61[COMRAM] int 
  9790 ;;  w               2   51[COMRAM] int 
  9791 ;;  p               2   49[COMRAM] int 
  9792 ;;  c               1   63[COMRAM] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9802 ;;      Params:        10       0       0       0       0       0       0
  9803 ;;      Locals:        17       0       0       0       0       0       0
  9804 ;;      Temps:          8       0       0       0       0       0       0
  9805 ;;      Totals:        35       0       0       0       0       0       0
  9806 ;;Total ram usage:       35 bytes
  9807 ;; Hardware stack levels used: 1
  9808 ;; Hardware stack levels required when called: 5
  9809 ;; This function calls:
  9810 ;;		i2_pad
  9811 ;; This function is called by:
  9812 ;;		i2_vfpfcnvrt
  9813 ;; This function uses a non-reentrant model
  9814 ;;
  9815                           
  9816                           	psect	text52
  9817   001624                     __ptext52:
  9818                           	callstack 0
  9819   001624                     i2_xtoa:
  9820                           	callstack 11
  9821   001624                     
  9822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  9823   001624  0100               	movlb	0	; () banked
  9824   001626  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  9825   001628  EF18  F00B         	goto	i2u262_41
  9826   00162C  EF1A  F00B         	goto	i2u262_40
  9827   001630                     i2u262_41:
  9828   001630  EF1B  F00B         	goto	i2l3489
  9829   001634                     i2u262_40:
  9830   001634                     
  9831                           ; BSR set to: 0
  9832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  9833   001634  93DA               	bcf	_flags& (0+255),1,b
  9834   001636                     i2l3489:
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  9838   001636  BFD1               	btfsc	(_prec+1)& (0+255),7,b
  9839   001638  EF28  F00B         	goto	i2u263_40
  9840   00163C  51D1               	movf	(_prec+1)& (0+255),w,b
  9841   00163E  E106               	bnz	i2u263_41
  9842   001640  05D0               	decf	_prec& (0+255),w,b
  9843   001642  B0D8               	btfsc	status,0,c
  9844   001644  EF26  F00B         	goto	i2u263_41
  9845   001648  EF28  F00B         	goto	i2u263_40
  9846   00164C                     i2u263_41:
  9847   00164C  EF2E  F00B         	goto	i2l1349
  9848   001650                     i2u263_40:
  9849   001650                     
  9850                           ; BSR set to: 0
  9851   001650  0E00               	movlw	0
  9852   001652  6E33               	movwf	(i2xtoa@p+1)^0,c
  9853   001654  0E01               	movlw	1
  9854   001656  6E32               	movwf	i2xtoa@p^0,c
  9855   001658  EF32  F00B         	goto	i2l1351
  9856   00165C                     i2l1349:
  9857                           
  9858                           ; BSR set to: 0
  9859   00165C  C0D0  F032         	movff	_prec,i2xtoa@p
  9860   001660  C0D1  F033         	movff	_prec+1,i2xtoa@p+1
  9861   001664                     i2l1351:
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  9865   001664  C0CE  F034         	movff	_width,i2xtoa@w
  9866   001668  C0CF  F035         	movff	_width+1,i2xtoa@w+1
  9867                           
  9868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  9869   00166C  C020  F036         	movff	i2xtoa@d,i2xtoa@n
  9870   001670  C021  F037         	movff	i2xtoa@d+1,i2xtoa@n+1
  9871   001674  C022  F038         	movff	i2xtoa@d+2,i2xtoa@n+2
  9872   001678  C023  F039         	movff	i2xtoa@d+3,i2xtoa@n+3
  9873   00167C  C024  F03A         	movff	i2xtoa@d+4,i2xtoa@n+4
  9874   001680  C025  F03B         	movff	i2xtoa@d+5,i2xtoa@n+5
  9875   001684  C026  F03C         	movff	i2xtoa@d+6,i2xtoa@n+6
  9876   001688  C027  F03D         	movff	i2xtoa@d+7,i2xtoa@n+7
  9877   00168C                     
  9878                           ; BSR set to: 0
  9879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  9880   00168C  0E00               	movlw	0
  9881   00168E  6E3F               	movwf	(i2xtoa@i+1)^0,c
  9882   001690  0E1F               	movlw	31
  9883   001692  6E3E               	movwf	i2xtoa@i^0,c
  9884   001694                     
  9885                           ; BSR set to: 0
  9886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  9887   001694  0E00               	movlw	0
  9888   001696  0101               	movlb	1	; () banked
  9889   001698  6F45               	movwf	(_dbuf+31)& (0+255),b
  9890                           
  9891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  9892   00169A  EFAA  F00B         	goto	i2l3517
  9893   00169E                     i2l3497:
  9894                           
  9895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  9896   00169E  063E               	decf	i2xtoa@i^0,f,c
  9897   0016A0  A0D8               	btfss	status,0,c
  9898   0016A2  063F               	decf	(i2xtoa@i+1)^0,f,c
  9899   0016A4                     
  9900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  9901   0016A4  5036               	movf	i2xtoa@n^0,w,c
  9902   0016A6  0B0F               	andlw	15
  9903   0016A8  6E40               	movwf	i2xtoa@c^0,c
  9904   0016AA                     
  9905                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  9906   0016AA  0E09               	movlw	9
  9907   0016AC  6440               	cpfsgt	i2xtoa@c^0,c
  9908   0016AE  EF5B  F00B         	goto	i2u264_41
  9909   0016B2  EF5D  F00B         	goto	i2u264_40
  9910   0016B6                     i2u264_41:
  9911   0016B6  EF65  F00B         	goto	i2l3505
  9912   0016BA                     i2u264_40:
  9913   0016BA  0E57               	movlw	87
  9914   0016BC  2440               	addwf	i2xtoa@c^0,w,c
  9915   0016BE  6E30               	movwf	i2_xtoa$1956^0,c
  9916   0016C0  6A31               	clrf	(i2_xtoa$1956+1)^0,c
  9917   0016C2  0E00               	movlw	0
  9918   0016C4  2231               	addwfc	(i2_xtoa$1956+1)^0,f,c
  9919   0016C6  EF6B  F00B         	goto	i2l3507
  9920   0016CA                     i2l3505:
  9921   0016CA  0E30               	movlw	48
  9922   0016CC  2440               	addwf	i2xtoa@c^0,w,c
  9923   0016CE  6E30               	movwf	i2_xtoa$1956^0,c
  9924   0016D0  6A31               	clrf	(i2_xtoa$1956+1)^0,c
  9925   0016D2  0E00               	movlw	0
  9926   0016D4  2231               	addwfc	(i2_xtoa$1956+1)^0,f,c
  9927   0016D6                     i2l3507:
  9928   0016D6  C030  F040         	movff	i2_xtoa$1956,i2xtoa@c
  9929   0016DA                     
  9930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  9931   0016DA  0E26               	movlw	low _dbuf
  9932   0016DC  243E               	addwf	i2xtoa@i^0,w,c
  9933   0016DE  6ED9               	movwf	fsr2l,c
  9934   0016E0  0E01               	movlw	high _dbuf
  9935   0016E2  203F               	addwfc	(i2xtoa@i+1)^0,w,c
  9936   0016E4  6EDA               	movwf	fsr2h,c
  9937   0016E6  C040  FFDF         	movff	i2xtoa@c,indf2
  9938   0016EA                     
  9939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  9940   0016EA  0632               	decf	i2xtoa@p^0,f,c
  9941   0016EC  A0D8               	btfss	status,0,c
  9942   0016EE  0633               	decf	(i2xtoa@p+1)^0,f,c
  9943   0016F0                     
  9944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  9945   0016F0  0634               	decf	i2xtoa@w^0,f,c
  9946   0016F2  A0D8               	btfss	status,0,c
  9947   0016F4  0635               	decf	(i2xtoa@w+1)^0,f,c
  9948   0016F6                     
  9949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  9950   0016F6  C036  F028         	movff	i2xtoa@n,??i2_xtoa
  9951   0016FA  C037  F029         	movff	i2xtoa@n+1,??i2_xtoa+1
  9952   0016FE  C038  F02A         	movff	i2xtoa@n+2,??i2_xtoa+2
  9953   001702  C039  F02B         	movff	i2xtoa@n+3,??i2_xtoa+3
  9954   001706  C03A  F02C         	movff	i2xtoa@n+4,??i2_xtoa+4
  9955   00170A  C03B  F02D         	movff	i2xtoa@n+5,??i2_xtoa+5
  9956   00170E  C03C  F02E         	movff	i2xtoa@n+6,??i2_xtoa+6
  9957   001712  C03D  F02F         	movff	i2xtoa@n+7,??i2_xtoa+7
  9958   001716  0E05               	movlw	5
  9959   001718  EF97  F00B         	goto	i2u265_40
  9960   00171C                     i2u265_45:
  9961   00171C  90D8               	bcf	status,0,c
  9962   00171E  322F               	rrcf	(??i2_xtoa+7)^0,f,c
  9963   001720  322E               	rrcf	(??i2_xtoa+6)^0,f,c
  9964   001722  322D               	rrcf	(??i2_xtoa+5)^0,f,c
  9965   001724  322C               	rrcf	(??i2_xtoa+4)^0,f,c
  9966   001726  322B               	rrcf	(??i2_xtoa+3)^0,f,c
  9967   001728  322A               	rrcf	(??i2_xtoa+2)^0,f,c
  9968   00172A  3229               	rrcf	(??i2_xtoa+1)^0,f,c
  9969   00172C  3228               	rrcf	??i2_xtoa^0,f,c
  9970   00172E                     i2u265_40:
  9971   00172E  2EE8               	decfsz	wreg,f,c
  9972   001730  EF8E  F00B         	goto	i2u265_45
  9973   001734  C028  F036         	movff	??i2_xtoa,i2xtoa@n
  9974   001738  C029  F037         	movff	??i2_xtoa+1,i2xtoa@n+1
  9975   00173C  C02A  F038         	movff	??i2_xtoa+2,i2xtoa@n+2
  9976   001740  C02B  F039         	movff	??i2_xtoa+3,i2xtoa@n+3
  9977   001744  C02C  F03A         	movff	??i2_xtoa+4,i2xtoa@n+4
  9978   001748  C02D  F03B         	movff	??i2_xtoa+5,i2xtoa@n+5
  9979   00174C  C02E  F03C         	movff	??i2_xtoa+6,i2xtoa@n+6
  9980   001750  C02F  F03D         	movff	??i2_xtoa+7,i2xtoa@n+7
  9981   001754                     i2l3517:
  9982                           
  9983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  9984   001754  BE3F               	btfsc	(i2xtoa@i+1)^0,7,c
  9985   001756  EFB6  F00B         	goto	i2u266_41
  9986   00175A  503F               	movf	(i2xtoa@i+1)^0,w,c
  9987   00175C  E109               	bnz	i2u266_40
  9988   00175E  0E02               	movlw	2
  9989   001760  5C3E               	subwf	i2xtoa@i^0,w,c
  9990   001762  A0D8               	btfss	status,0,c
  9991   001764  EFB6  F00B         	goto	i2u266_41
  9992   001768  EFB8  F00B         	goto	i2u266_40
  9993   00176C                     i2u266_41:
  9994   00176C  EFE9  F00B         	goto	i2l3527
  9995   001770                     i2u266_40:
  9996   001770  5036               	movf	i2xtoa@n^0,w,c
  9997   001772  1037               	iorwf	(i2xtoa@n+1)^0,w,c
  9998   001774  1038               	iorwf	(i2xtoa@n+2)^0,w,c
  9999   001776  1039               	iorwf	(i2xtoa@n+3)^0,w,c
 10000   001778  103A               	iorwf	(i2xtoa@n+4)^0,w,c
 10001   00177A  103B               	iorwf	(i2xtoa@n+5)^0,w,c
 10002   00177C  103C               	iorwf	(i2xtoa@n+6)^0,w,c
 10003   00177E  103D               	iorwf	(i2xtoa@n+7)^0,w,c
 10004   001780  A4D8               	btfss	status,2,c
 10005   001782  EFC5  F00B         	goto	i2u267_41
 10006   001786  EFC7  F00B         	goto	i2u267_40
 10007   00178A                     i2u267_41:
 10008   00178A  EF4F  F00B         	goto	i2l3497
 10009   00178E                     i2u267_40:
 10010   00178E  BE33               	btfsc	(i2xtoa@p+1)^0,7,c
 10011   001790  EFD4  F00B         	goto	i2u268_40
 10012   001794  5033               	movf	(i2xtoa@p+1)^0,w,c
 10013   001796  E106               	bnz	i2u268_41
 10014   001798  0432               	decf	i2xtoa@p^0,w,c
 10015   00179A  B0D8               	btfsc	status,0,c
 10016   00179C  EFD2  F00B         	goto	i2u268_41
 10017   0017A0  EFD4  F00B         	goto	i2u268_40
 10018   0017A4                     i2u268_41:
 10019   0017A4  EF4F  F00B         	goto	i2l3497
 10020   0017A8                     i2u268_40:
 10021   0017A8  BE35               	btfsc	(i2xtoa@w+1)^0,7,c
 10022   0017AA  EFDF  F00B         	goto	i2u269_41
 10023   0017AE  5035               	movf	(i2xtoa@w+1)^0,w,c
 10024   0017B0  E108               	bnz	i2u269_40
 10025   0017B2  0434               	decf	i2xtoa@w^0,w,c
 10026   0017B4  A0D8               	btfss	status,0,c
 10027   0017B6  EFDF  F00B         	goto	i2u269_41
 10028   0017BA  EFE1  F00B         	goto	i2u269_40
 10029   0017BE                     i2u269_41:
 10030   0017BE  EFE9  F00B         	goto	i2l3527
 10031   0017C2                     i2u269_40:
 10032   0017C2  0100               	movlb	0	; () banked
 10033   0017C4  B3DA               	btfsc	_flags& (0+255),1,b
 10034   0017C6  EFE7  F00B         	goto	i2u270_41
 10035   0017CA  EFE9  F00B         	goto	i2u270_40
 10036   0017CE                     i2u270_41:
 10037   0017CE  EF4F  F00B         	goto	i2l3497
 10038   0017D2                     i2u270_40:
 10039   0017D2                     i2l3527:
 10040                           
 10041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
 10042   0017D2  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
 10043   0017D6  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
 10044   0017DA  0E26               	movlw	low _dbuf
 10045   0017DC  243E               	addwf	i2xtoa@i^0,w,c
 10046   0017DE  6E15               	movwf	i2pad@buf^0,c
 10047   0017E0  0E01               	movlw	high _dbuf
 10048   0017E2  203F               	addwfc	(i2xtoa@i+1)^0,w,c
 10049   0017E4  6E16               	movwf	(i2pad@buf+1)^0,c
 10050   0017E6  C034  F017         	movff	i2xtoa@w,i2pad@p
 10051   0017EA  C035  F018         	movff	i2xtoa@w+1,i2pad@p+1
 10052   0017EE  ECE5  F013         	call	i2_pad	;wreg free
 10053   0017F2  0012               	return		;funcret
 10054   0017F4                     __end_ofi2_xtoa:
 10055                           	callstack 0
 10056                           
 10057 ;; *************** function i2_utoa *****************
 10058 ;; Defined at:
 10059 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 10060 ;; Parameters:    Size  Location     Type
 10061 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 10062 ;;		 -> NULL(0), 
 10063 ;;  d               8   31[COMRAM] unsigned long long 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  n               8   51[COMRAM] unsigned long long 
 10066 ;;  i               2   59[COMRAM] int 
 10067 ;;  w               2   49[COMRAM] int 
 10068 ;;  p               2   47[COMRAM] int 
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      void 
 10071 ;; Registers used:
 10072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10078 ;;      Params:        10       0       0       0       0       0       0
 10079 ;;      Locals:        14       0       0       0       0       0       0
 10080 ;;      Temps:          8       0       0       0       0       0       0
 10081 ;;      Totals:        32       0       0       0       0       0       0
 10082 ;;Total ram usage:       32 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; Hardware stack levels required when called: 5
 10085 ;; This function calls:
 10086 ;;		i2___lodiv
 10087 ;;		i2___lomod
 10088 ;;		i2_pad
 10089 ;; This function is called by:
 10090 ;;		i2_vfpfcnvrt
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text53
 10095   001258                     __ptext53:
 10096                           	callstack 0
 10097   001258                     i2_utoa:
 10098                           	callstack 11
 10099   001258                     
 10100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
 10101   001258  0100               	movlb	0	; () banked
 10102   00125A  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 10103   00125C  EF32  F009         	goto	i2u255_41
 10104   001260  EF34  F009         	goto	i2u255_40
 10105   001264                     i2u255_41:
 10106   001264  EF35  F009         	goto	i2l3453
 10107   001268                     i2u255_40:
 10108   001268                     
 10109                           ; BSR set to: 0
 10110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
 10111   001268  93DA               	bcf	_flags& (0+255),1,b
 10112   00126A                     i2l3453:
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
 10116   00126A  BFD1               	btfsc	(_prec+1)& (0+255),7,b
 10117   00126C  EF42  F009         	goto	i2u256_40
 10118   001270  51D1               	movf	(_prec+1)& (0+255),w,b
 10119   001272  E106               	bnz	i2u256_41
 10120   001274  05D0               	decf	_prec& (0+255),w,b
 10121   001276  B0D8               	btfsc	status,0,c
 10122   001278  EF40  F009         	goto	i2u256_41
 10123   00127C  EF42  F009         	goto	i2u256_40
 10124   001280                     i2u256_41:
 10125   001280  EF48  F009         	goto	i2l1334
 10126   001284                     i2u256_40:
 10127   001284                     
 10128                           ; BSR set to: 0
 10129   001284  0E00               	movlw	0
 10130   001286  6E31               	movwf	(i2utoa@p+1)^0,c
 10131   001288  0E01               	movlw	1
 10132   00128A  6E30               	movwf	i2utoa@p^0,c
 10133   00128C  EF4C  F009         	goto	i2l1336
 10134   001290                     i2l1334:
 10135                           
 10136                           ; BSR set to: 0
 10137   001290  C0D0  F030         	movff	_prec,i2utoa@p
 10138   001294  C0D1  F031         	movff	_prec+1,i2utoa@p+1
 10139   001298                     i2l1336:
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
 10143   001298  C0CE  F032         	movff	_width,i2utoa@w
 10144   00129C  C0CF  F033         	movff	_width+1,i2utoa@w+1
 10145                           
 10146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
 10147   0012A0  C020  F034         	movff	i2utoa@d,i2utoa@n
 10148   0012A4  C021  F035         	movff	i2utoa@d+1,i2utoa@n+1
 10149   0012A8  C022  F036         	movff	i2utoa@d+2,i2utoa@n+2
 10150   0012AC  C023  F037         	movff	i2utoa@d+3,i2utoa@n+3
 10151   0012B0  C024  F038         	movff	i2utoa@d+4,i2utoa@n+4
 10152   0012B4  C025  F039         	movff	i2utoa@d+5,i2utoa@n+5
 10153   0012B8  C026  F03A         	movff	i2utoa@d+6,i2utoa@n+6
 10154   0012BC  C027  F03B         	movff	i2utoa@d+7,i2utoa@n+7
 10155   0012C0                     
 10156                           ; BSR set to: 0
 10157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
 10158   0012C0  0E00               	movlw	0
 10159   0012C2  6E3D               	movwf	(i2utoa@i+1)^0,c
 10160   0012C4  0E1F               	movlw	31
 10161   0012C6  6E3C               	movwf	i2utoa@i^0,c
 10162   0012C8                     
 10163                           ; BSR set to: 0
 10164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
 10165   0012C8  0E00               	movlw	0
 10166   0012CA  0101               	movlb	1	; () banked
 10167   0012CC  6F45               	movwf	(_dbuf+31)& (0+255),b
 10168                           
 10169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
 10170   0012CE  EFDF  F009         	goto	i2l3471
 10171   0012D2                     i2l3461:
 10172                           
 10173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
 10174   0012D2  063C               	decf	i2utoa@i^0,f,c
 10175   0012D4  A0D8               	btfss	status,0,c
 10176   0012D6  063D               	decf	(i2utoa@i+1)^0,f,c
 10177   0012D8                     
 10178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
 10179   0012D8  0E26               	movlw	low _dbuf
 10180   0012DA  243C               	addwf	i2utoa@i^0,w,c
 10181   0012DC  6ED9               	movwf	fsr2l,c
 10182   0012DE  0E01               	movlw	high _dbuf
 10183   0012E0  203D               	addwfc	(i2utoa@i+1)^0,w,c
 10184   0012E2  6EDA               	movwf	fsr2h,c
 10185   0012E4  C034  F001         	movff	i2utoa@n,i2___lomod@dividend
 10186   0012E8  C035  F002         	movff	i2utoa@n+1,i2___lomod@dividend+1
 10187   0012EC  C036  F003         	movff	i2utoa@n+2,i2___lomod@dividend+2
 10188   0012F0  C037  F004         	movff	i2utoa@n+3,i2___lomod@dividend+3
 10189   0012F4  C038  F005         	movff	i2utoa@n+4,i2___lomod@dividend+4
 10190   0012F8  C039  F006         	movff	i2utoa@n+5,i2___lomod@dividend+5
 10191   0012FC  C03A  F007         	movff	i2utoa@n+6,i2___lomod@dividend+6
 10192   001300  C03B  F008         	movff	i2utoa@n+7,i2___lomod@dividend+7
 10193   001304  0E0A               	movlw	10
 10194   001306  6E09               	movwf	i2___lomod@divisor^0,c
 10195   001308  0E00               	movlw	0
 10196   00130A  6E0A               	movwf	(i2___lomod@divisor+1)^0,c
 10197   00130C  0E00               	movlw	0
 10198   00130E  6E0B               	movwf	(i2___lomod@divisor+2)^0,c
 10199   001310  0E00               	movlw	0
 10200   001312  6E0C               	movwf	(i2___lomod@divisor+3)^0,c
 10201   001314  0E00               	movlw	0
 10202   001316  6E0D               	movwf	(i2___lomod@divisor+4)^0,c
 10203   001318  0E00               	movlw	0
 10204   00131A  6E0E               	movwf	(i2___lomod@divisor+5)^0,c
 10205   00131C  0E00               	movlw	0
 10206   00131E  6E0F               	movwf	(i2___lomod@divisor+6)^0,c
 10207   001320  0E00               	movlw	0
 10208   001322  6E10               	movwf	(i2___lomod@divisor+7)^0,c
 10209   001324  ECF3  F011         	call	i2___lomod	;wreg free
 10210   001328  C001  F028         	movff	?i2___lomod,??i2_utoa
 10211   00132C  C002  F029         	movff	?i2___lomod+1,??i2_utoa+1
 10212   001330  C003  F02A         	movff	?i2___lomod+2,??i2_utoa+2
 10213   001334  C004  F02B         	movff	?i2___lomod+3,??i2_utoa+3
 10214   001338  C005  F02C         	movff	?i2___lomod+4,??i2_utoa+4
 10215   00133C  C006  F02D         	movff	?i2___lomod+5,??i2_utoa+5
 10216   001340  C007  F02E         	movff	?i2___lomod+6,??i2_utoa+6
 10217   001344  C008  F02F         	movff	?i2___lomod+7,??i2_utoa+7
 10218   001348  5028               	movf	??i2_utoa^0,w,c
 10219   00134A  0F30               	addlw	48
 10220   00134C  6EDF               	movwf	indf2,c
 10221   00134E                     
 10222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
 10223   00134E  0630               	decf	i2utoa@p^0,f,c
 10224   001350  A0D8               	btfss	status,0,c
 10225   001352  0631               	decf	(i2utoa@p+1)^0,f,c
 10226   001354                     
 10227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
 10228   001354  0632               	decf	i2utoa@w^0,f,c
 10229   001356  A0D8               	btfss	status,0,c
 10230   001358  0633               	decf	(i2utoa@w+1)^0,f,c
 10231   00135A                     
 10232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
 10233   00135A  C034  F001         	movff	i2utoa@n,i2___lodiv@dividend
 10234   00135E  C035  F002         	movff	i2utoa@n+1,i2___lodiv@dividend+1
 10235   001362  C036  F003         	movff	i2utoa@n+2,i2___lodiv@dividend+2
 10236   001366  C037  F004         	movff	i2utoa@n+3,i2___lodiv@dividend+3
 10237   00136A  C038  F005         	movff	i2utoa@n+4,i2___lodiv@dividend+4
 10238   00136E  C039  F006         	movff	i2utoa@n+5,i2___lodiv@dividend+5
 10239   001372  C03A  F007         	movff	i2utoa@n+6,i2___lodiv@dividend+6
 10240   001376  C03B  F008         	movff	i2utoa@n+7,i2___lodiv@dividend+7
 10241   00137A  0E0A               	movlw	10
 10242   00137C  6E09               	movwf	i2___lodiv@divisor^0,c
 10243   00137E  0E00               	movlw	0
 10244   001380  6E0A               	movwf	(i2___lodiv@divisor+1)^0,c
 10245   001382  0E00               	movlw	0
 10246   001384  6E0B               	movwf	(i2___lodiv@divisor+2)^0,c
 10247   001386  0E00               	movlw	0
 10248   001388  6E0C               	movwf	(i2___lodiv@divisor+3)^0,c
 10249   00138A  0E00               	movlw	0
 10250   00138C  6E0D               	movwf	(i2___lodiv@divisor+4)^0,c
 10251   00138E  0E00               	movlw	0
 10252   001390  6E0E               	movwf	(i2___lodiv@divisor+5)^0,c
 10253   001392  0E00               	movlw	0
 10254   001394  6E0F               	movwf	(i2___lodiv@divisor+6)^0,c
 10255   001396  0E00               	movlw	0
 10256   001398  6E10               	movwf	(i2___lodiv@divisor+7)^0,c
 10257   00139A  EC33  F010         	call	i2___lodiv	;wreg free
 10258   00139E  C001  F034         	movff	?i2___lodiv,i2utoa@n
 10259   0013A2  C002  F035         	movff	?i2___lodiv+1,i2utoa@n+1
 10260   0013A6  C003  F036         	movff	?i2___lodiv+2,i2utoa@n+2
 10261   0013AA  C004  F037         	movff	?i2___lodiv+3,i2utoa@n+3
 10262   0013AE  C005  F038         	movff	?i2___lodiv+4,i2utoa@n+4
 10263   0013B2  C006  F039         	movff	?i2___lodiv+5,i2utoa@n+5
 10264   0013B6  C007  F03A         	movff	?i2___lodiv+6,i2utoa@n+6
 10265   0013BA  C008  F03B         	movff	?i2___lodiv+7,i2utoa@n+7
 10266   0013BE                     i2l3471:
 10267                           
 10268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
 10269   0013BE  503C               	movf	i2utoa@i^0,w,c
 10270   0013C0  103D               	iorwf	(i2utoa@i+1)^0,w,c
 10271   0013C2  B4D8               	btfsc	status,2,c
 10272   0013C4  EFE6  F009         	goto	i2u257_41
 10273   0013C8  EFE8  F009         	goto	i2u257_40
 10274   0013CC                     i2u257_41:
 10275   0013CC  EF19  F00A         	goto	i2l3481
 10276   0013D0                     i2u257_40:
 10277   0013D0  5034               	movf	i2utoa@n^0,w,c
 10278   0013D2  1035               	iorwf	(i2utoa@n+1)^0,w,c
 10279   0013D4  1036               	iorwf	(i2utoa@n+2)^0,w,c
 10280   0013D6  1037               	iorwf	(i2utoa@n+3)^0,w,c
 10281   0013D8  1038               	iorwf	(i2utoa@n+4)^0,w,c
 10282   0013DA  1039               	iorwf	(i2utoa@n+5)^0,w,c
 10283   0013DC  103A               	iorwf	(i2utoa@n+6)^0,w,c
 10284   0013DE  103B               	iorwf	(i2utoa@n+7)^0,w,c
 10285   0013E0  A4D8               	btfss	status,2,c
 10286   0013E2  EFF5  F009         	goto	i2u258_41
 10287   0013E6  EFF7  F009         	goto	i2u258_40
 10288   0013EA                     i2u258_41:
 10289   0013EA  EF69  F009         	goto	i2l3461
 10290   0013EE                     i2u258_40:
 10291   0013EE  BE31               	btfsc	(i2utoa@p+1)^0,7,c
 10292   0013F0  EF04  F00A         	goto	i2u259_40
 10293   0013F4  5031               	movf	(i2utoa@p+1)^0,w,c
 10294   0013F6  E106               	bnz	i2u259_41
 10295   0013F8  0430               	decf	i2utoa@p^0,w,c
 10296   0013FA  B0D8               	btfsc	status,0,c
 10297   0013FC  EF02  F00A         	goto	i2u259_41
 10298   001400  EF04  F00A         	goto	i2u259_40
 10299   001404                     i2u259_41:
 10300   001404  EF69  F009         	goto	i2l3461
 10301   001408                     i2u259_40:
 10302   001408  BE33               	btfsc	(i2utoa@w+1)^0,7,c
 10303   00140A  EF0F  F00A         	goto	i2u260_41
 10304   00140E  5033               	movf	(i2utoa@w+1)^0,w,c
 10305   001410  E108               	bnz	i2u260_40
 10306   001412  0432               	decf	i2utoa@w^0,w,c
 10307   001414  A0D8               	btfss	status,0,c
 10308   001416  EF0F  F00A         	goto	i2u260_41
 10309   00141A  EF11  F00A         	goto	i2u260_40
 10310   00141E                     i2u260_41:
 10311   00141E  EF19  F00A         	goto	i2l3481
 10312   001422                     i2u260_40:
 10313   001422  0100               	movlb	0	; () banked
 10314   001424  B3DA               	btfsc	_flags& (0+255),1,b
 10315   001426  EF17  F00A         	goto	i2u261_41
 10316   00142A  EF19  F00A         	goto	i2u261_40
 10317   00142E                     i2u261_41:
 10318   00142E  EF69  F009         	goto	i2l3461
 10319   001432                     i2u261_40:
 10320   001432                     i2l3481:
 10321                           
 10322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
 10323   001432  C01E  F013         	movff	i2utoa@fp,i2pad@fp
 10324   001436  C01F  F014         	movff	i2utoa@fp+1,i2pad@fp+1
 10325   00143A  0E26               	movlw	low _dbuf
 10326   00143C  243C               	addwf	i2utoa@i^0,w,c
 10327   00143E  6E15               	movwf	i2pad@buf^0,c
 10328   001440  0E01               	movlw	high _dbuf
 10329   001442  203D               	addwfc	(i2utoa@i+1)^0,w,c
 10330   001444  6E16               	movwf	(i2pad@buf+1)^0,c
 10331   001446  C032  F017         	movff	i2utoa@w,i2pad@p
 10332   00144A  C033  F018         	movff	i2utoa@w+1,i2pad@p+1
 10333   00144E  ECE5  F013         	call	i2_pad	;wreg free
 10334   001452  0012               	return		;funcret
 10335   001454                     __end_ofi2_utoa:
 10336                           	callstack 0
 10337                           
 10338 ;; *************** function i2_pad *****************
 10339 ;; Defined at:
 10340 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
 10343 ;;		 -> NULL(0), 
 10344 ;;  buf             2   20[COMRAM] PTR unsigned char 
 10345 ;;		 -> dbuf(32), 
 10346 ;;  p               2   22[COMRAM] int 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  w               2   27[COMRAM] int 
 10349 ;;  i               2   25[COMRAM] int 
 10350 ;; Return value:  Size  Location     Type
 10351 ;;                  1    wreg      void 
 10352 ;; Registers used:
 10353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10354 ;; Tracked objects:
 10355 ;;		On entry : 0/0
 10356 ;;		On exit  : 0/0
 10357 ;;		Unchanged: 0/0
 10358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10359 ;;      Params:         6       0       0       0       0       0       0
 10360 ;;      Locals:         4       0       0       0       0       0       0
 10361 ;;      Temps:          1       0       0       0       0       0       0
 10362 ;;      Totals:        11       0       0       0       0       0       0
 10363 ;;Total ram usage:       11 bytes
 10364 ;; Hardware stack levels used: 1
 10365 ;; Hardware stack levels required when called: 4
 10366 ;; This function calls:
 10367 ;;		i2_fputc
 10368 ;;		i2_fputs
 10369 ;; This function is called by:
 10370 ;;		i2_utoa
 10371 ;;		i2_xtoa
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text54
 10376   0027CA                     __ptext54:
 10377                           	callstack 0
 10378   0027CA                     i2_pad:
 10379                           	callstack 11
 10380   0027CA                     
 10381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
 10382   0027CA  0100               	movlb	0	; () banked
 10383   0027CC  A1DA               	btfss	_flags& (0+255),0,b
 10384   0027CE  EFEB  F013         	goto	i2u218_41
 10385   0027D2  EFED  F013         	goto	i2u218_40
 10386   0027D6                     i2u218_41:
 10387   0027D6  EFF7  F013         	goto	i2l3259
 10388   0027DA                     i2u218_40:
 10389   0027DA                     
 10390                           ; BSR set to: 0
 10391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
 10392   0027DA  C015  F00C         	movff	i2pad@buf,i2fputs@s
 10393   0027DE  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 10394   0027E2  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 10395   0027E6  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 10396   0027EA  EC18  F016         	call	i2_fputs	;wreg free
 10397   0027EE                     i2l3259:
 10398                           
 10399                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
 10400   0027EE  BE18               	btfsc	(i2pad@p+1)^0,7,c
 10401   0027F0  EFFC  F013         	goto	i2u219_41
 10402   0027F4  EFFE  F013         	goto	i2u219_40
 10403   0027F8                     i2u219_41:
 10404   0027F8  EF04  F014         	goto	i2l3263
 10405   0027FC                     i2u219_40:
 10406   0027FC  C017  F01C         	movff	i2pad@p,i2pad@w
 10407   002800  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
 10408   002804  EF08  F014         	goto	i2l1285
 10409   002808                     i2l3263:
 10410   002808  0E00               	movlw	0
 10411   00280A  6E1D               	movwf	(i2pad@w+1)^0,c
 10412   00280C  0E00               	movlw	0
 10413   00280E  6E1C               	movwf	i2pad@w^0,c
 10414   002810                     i2l1285:
 10415                           
 10416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
 10417   002810  0E00               	movlw	0
 10418   002812  6E1B               	movwf	(i2pad@i+1)^0,c
 10419   002814  0E00               	movlw	0
 10420   002816  6E1A               	movwf	i2pad@i^0,c
 10421                           
 10422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
 10423   002818  EF1A  F014         	goto	i2l3269
 10424   00281C                     i2l3265:
 10425                           
 10426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
 10427   00281C  0E00               	movlw	0
 10428   00281E  6E04               	movwf	(i2fputc@c+1)^0,c
 10429   002820  0E20               	movlw	32
 10430   002822  6E03               	movwf	i2fputc@c^0,c
 10431   002824  C013  F005         	movff	i2pad@fp,i2fputc@fp
 10432   002828  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
 10433   00282C  EC88  F014         	call	i2_fputc	;wreg free
 10434   002830                     
 10435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
 10436   002830  4A1A               	infsnz	i2pad@i^0,f,c
 10437   002832  2A1B               	incf	(i2pad@i+1)^0,f,c
 10438   002834                     i2l3269:
 10439                           
 10440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
 10441   002834  501C               	movf	i2pad@w^0,w,c
 10442   002836  5C1A               	subwf	i2pad@i^0,w,c
 10443   002838  501B               	movf	(i2pad@i+1)^0,w,c
 10444   00283A  0A80               	xorlw	128
 10445   00283C  6E19               	movwf	??i2_pad^0,c
 10446   00283E  501D               	movf	(i2pad@w+1)^0,w,c
 10447   002840  0A80               	xorlw	128
 10448   002842  5819               	subwfb	??i2_pad^0,w,c
 10449   002844  A0D8               	btfss	status,0,c
 10450   002846  EF27  F014         	goto	i2u220_41
 10451   00284A  EF29  F014         	goto	i2u220_40
 10452   00284E                     i2u220_41:
 10453   00284E  EF0E  F014         	goto	i2l3265
 10454   002852                     i2u220_40:
 10455   002852                     
 10456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
 10457   002852  0100               	movlb	0	; () banked
 10458   002854  B1DA               	btfsc	_flags& (0+255),0,b
 10459   002856  EF2F  F014         	goto	i2u221_41
 10460   00285A  EF31  F014         	goto	i2u221_40
 10461   00285E                     i2u221_41:
 10462   00285E  EF3B  F014         	goto	i2l1290
 10463   002862                     i2u221_40:
 10464   002862                     
 10465                           ; BSR set to: 0
 10466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
 10467   002862  C015  F00C         	movff	i2pad@buf,i2fputs@s
 10468   002866  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
 10469   00286A  C013  F00E         	movff	i2pad@fp,i2fputs@fp
 10470   00286E  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
 10471   002872  EC18  F016         	call	i2_fputs	;wreg free
 10472   002876                     i2l1290:
 10473   002876  0012               	return		;funcret
 10474   002878                     __end_ofi2_pad:
 10475                           	callstack 0
 10476                           
 10477 ;; *************** function i2_fputs *****************
 10478 ;; Defined at:
 10479 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  s               2   11[COMRAM] PTR const unsigned char 
 10482 ;;		 -> dbuf(32), 
 10483 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
 10484 ;;		 -> NULL(0), 
 10485 ;; Auto vars:     Size  Location     Type
 10486 ;;  i               2   16[COMRAM] int 
 10487 ;;  c               1   15[COMRAM] unsigned char 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  2   11[COMRAM] int 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10497 ;;      Params:         4       0       0       0       0       0       0
 10498 ;;      Locals:         3       0       0       0       0       0       0
 10499 ;;      Temps:          0       0       0       0       0       0       0
 10500 ;;      Totals:         7       0       0       0       0       0       0
 10501 ;;Total ram usage:        7 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 3
 10504 ;; This function calls:
 10505 ;;		i2_fputc
 10506 ;; This function is called by:
 10507 ;;		i2_pad
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           	psect	text55
 10512   002C30                     __ptext55:
 10513                           	callstack 0
 10514   002C30                     i2_fputs:
 10515                           	callstack 11
 10516   002C30  0E00               	movlw	0
 10517   002C32  6E12               	movwf	(i2fputs@i+1)^0,c
 10518   002C34  0E00               	movlw	0
 10519   002C36  6E11               	movwf	i2fputs@i^0,c
 10520   002C38  EF29  F016         	goto	i2l3201
 10521   002C3C                     i2l3197:
 10522   002C3C  C010  F003         	movff	i2fputs@c,i2fputc@c
 10523   002C40  6A04               	clrf	(i2fputc@c+1)^0,c
 10524   002C42  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
 10525   002C46  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
 10526   002C4A  EC88  F014         	call	i2_fputc	;wreg free
 10527   002C4E  4A11               	infsnz	i2fputs@i^0,f,c
 10528   002C50  2A12               	incf	(i2fputs@i+1)^0,f,c
 10529   002C52                     i2l3201:
 10530   002C52  5011               	movf	i2fputs@i^0,w,c
 10531   002C54  240C               	addwf	i2fputs@s^0,w,c
 10532   002C56  6ED9               	movwf	fsr2l,c
 10533   002C58  5012               	movf	(i2fputs@i+1)^0,w,c
 10534   002C5A  200D               	addwfc	(i2fputs@s+1)^0,w,c
 10535   002C5C  6EDA               	movwf	fsr2h,c
 10536   002C5E  50DF               	movf	indf2,w,c
 10537   002C60  6E10               	movwf	i2fputs@c^0,c
 10538   002C62  5010               	movf	i2fputs@c^0,w,c
 10539   002C64  A4D8               	btfss	status,2,c
 10540   002C66  EF37  F016         	goto	i2u209_41
 10541   002C6A  EF39  F016         	goto	i2u209_40
 10542   002C6E                     i2u209_41:
 10543   002C6E  EF1E  F016         	goto	i2l3197
 10544   002C72                     i2u209_40:
 10545   002C72  0012               	return		;funcret
 10546   002C74                     __end_ofi2_fputs:
 10547                           	callstack 0
 10548                           
 10549 ;; *************** function i2___lomod *****************
 10550 ;; Defined at:
 10551 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  dividend        8    0[COMRAM] unsigned long long 
 10554 ;;  divisor         8    8[COMRAM] unsigned long long 
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;  counter         1   16[COMRAM] unsigned char 
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  8    0[COMRAM] unsigned long long 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10566 ;;      Params:        16       0       0       0       0       0       0
 10567 ;;      Locals:         1       0       0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0
 10569 ;;      Totals:        17       0       0       0       0       0       0
 10570 ;;Total ram usage:       17 bytes
 10571 ;; Hardware stack levels used: 1
 10572 ;; This function calls:
 10573 ;;		Nothing
 10574 ;; This function is called by:
 10575 ;;		i2_utoa
 10576 ;; This function uses a non-reentrant model
 10577 ;;
 10578                           
 10579                           	psect	text56
 10580   0023E6                     __ptext56:
 10581                           	callstack 0
 10582   0023E6                     i2___lomod:
 10583                           	callstack 15
 10584   0023E6  5009               	movf	i2___lomod@divisor^0,w,c
 10585   0023E8  100A               	iorwf	(i2___lomod@divisor+1)^0,w,c
 10586   0023EA  100B               	iorwf	(i2___lomod@divisor+2)^0,w,c
 10587   0023EC  100C               	iorwf	(i2___lomod@divisor+3)^0,w,c
 10588   0023EE  100D               	iorwf	(i2___lomod@divisor+4)^0,w,c
 10589   0023F0  100E               	iorwf	(i2___lomod@divisor+5)^0,w,c
 10590   0023F2  100F               	iorwf	(i2___lomod@divisor+6)^0,w,c
 10591   0023F4  1010               	iorwf	(i2___lomod@divisor+7)^0,w,c
 10592   0023F6  B4D8               	btfsc	status,2,c
 10593   0023F8  EF00  F012         	goto	i2u215_41
 10594   0023FC  EF02  F012         	goto	i2u215_40
 10595   002400                     i2u215_41:
 10596   002400  EF4A  F012         	goto	i2l1026
 10597   002404                     i2u215_40:
 10598   002404  0E01               	movlw	1
 10599   002406  6E11               	movwf	i2___lomod@counter^0,c
 10600   002408  EF10  F012         	goto	i2l3245
 10601   00240C                     i2l3243:
 10602   00240C  90D8               	bcf	status,0,c
 10603   00240E  3609               	rlcf	i2___lomod@divisor^0,f,c
 10604   002410  360A               	rlcf	(i2___lomod@divisor+1)^0,f,c
 10605   002412  360B               	rlcf	(i2___lomod@divisor+2)^0,f,c
 10606   002414  360C               	rlcf	(i2___lomod@divisor+3)^0,f,c
 10607   002416  360D               	rlcf	(i2___lomod@divisor+4)^0,f,c
 10608   002418  360E               	rlcf	(i2___lomod@divisor+5)^0,f,c
 10609   00241A  360F               	rlcf	(i2___lomod@divisor+6)^0,f,c
 10610   00241C  3610               	rlcf	(i2___lomod@divisor+7)^0,f,c
 10611   00241E  2A11               	incf	i2___lomod@counter^0,f,c
 10612   002420                     i2l3245:
 10613   002420  AE10               	btfss	(i2___lomod@divisor+7)^0,7,c
 10614   002422  EF15  F012         	goto	i2u216_41
 10615   002426  EF17  F012         	goto	i2u216_40
 10616   00242A                     i2u216_41:
 10617   00242A  EF06  F012         	goto	i2l3243
 10618   00242E                     i2u216_40:
 10619   00242E                     i2l3247:
 10620   00242E  5009               	movf	i2___lomod@divisor^0,w,c
 10621   002430  5C01               	subwf	i2___lomod@dividend^0,w,c
 10622   002432  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 10623   002434  5802               	subwfb	(i2___lomod@dividend+1)^0,w,c
 10624   002436  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 10625   002438  5803               	subwfb	(i2___lomod@dividend+2)^0,w,c
 10626   00243A  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 10627   00243C  5804               	subwfb	(i2___lomod@dividend+3)^0,w,c
 10628   00243E  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 10629   002440  5805               	subwfb	(i2___lomod@dividend+4)^0,w,c
 10630   002442  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 10631   002444  5806               	subwfb	(i2___lomod@dividend+5)^0,w,c
 10632   002446  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 10633   002448  5807               	subwfb	(i2___lomod@dividend+6)^0,w,c
 10634   00244A  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 10635   00244C  5808               	subwfb	(i2___lomod@dividend+7)^0,w,c
 10636   00244E  A0D8               	btfss	status,0,c
 10637   002450  EF2C  F012         	goto	i2u217_41
 10638   002454  EF2E  F012         	goto	i2u217_40
 10639   002458                     i2u217_41:
 10640   002458  EF3E  F012         	goto	i2l3251
 10641   00245C                     i2u217_40:
 10642   00245C  5009               	movf	i2___lomod@divisor^0,w,c
 10643   00245E  5E01               	subwf	i2___lomod@dividend^0,f,c
 10644   002460  500A               	movf	(i2___lomod@divisor+1)^0,w,c
 10645   002462  5A02               	subwfb	(i2___lomod@dividend+1)^0,f,c
 10646   002464  500B               	movf	(i2___lomod@divisor+2)^0,w,c
 10647   002466  5A03               	subwfb	(i2___lomod@dividend+2)^0,f,c
 10648   002468  500C               	movf	(i2___lomod@divisor+3)^0,w,c
 10649   00246A  5A04               	subwfb	(i2___lomod@dividend+3)^0,f,c
 10650   00246C  500D               	movf	(i2___lomod@divisor+4)^0,w,c
 10651   00246E  5A05               	subwfb	(i2___lomod@dividend+4)^0,f,c
 10652   002470  500E               	movf	(i2___lomod@divisor+5)^0,w,c
 10653   002472  5A06               	subwfb	(i2___lomod@dividend+5)^0,f,c
 10654   002474  500F               	movf	(i2___lomod@divisor+6)^0,w,c
 10655   002476  5A07               	subwfb	(i2___lomod@dividend+6)^0,f,c
 10656   002478  5010               	movf	(i2___lomod@divisor+7)^0,w,c
 10657   00247A  5A08               	subwfb	(i2___lomod@dividend+7)^0,f,c
 10658   00247C                     i2l3251:
 10659   00247C  90D8               	bcf	status,0,c
 10660   00247E  3210               	rrcf	(i2___lomod@divisor+7)^0,f,c
 10661   002480  320F               	rrcf	(i2___lomod@divisor+6)^0,f,c
 10662   002482  320E               	rrcf	(i2___lomod@divisor+5)^0,f,c
 10663   002484  320D               	rrcf	(i2___lomod@divisor+4)^0,f,c
 10664   002486  320C               	rrcf	(i2___lomod@divisor+3)^0,f,c
 10665   002488  320B               	rrcf	(i2___lomod@divisor+2)^0,f,c
 10666   00248A  320A               	rrcf	(i2___lomod@divisor+1)^0,f,c
 10667   00248C  3209               	rrcf	i2___lomod@divisor^0,f,c
 10668   00248E  2E11               	decfsz	i2___lomod@counter^0,f,c
 10669   002490  EF17  F012         	goto	i2l3247
 10670   002494                     i2l1026:
 10671   002494  C001  F001         	movff	i2___lomod@dividend,?i2___lomod
 10672   002498  C002  F002         	movff	i2___lomod@dividend+1,?i2___lomod+1
 10673   00249C  C003  F003         	movff	i2___lomod@dividend+2,?i2___lomod+2
 10674   0024A0  C004  F004         	movff	i2___lomod@dividend+3,?i2___lomod+3
 10675   0024A4  C005  F005         	movff	i2___lomod@dividend+4,?i2___lomod+4
 10676   0024A8  C006  F006         	movff	i2___lomod@dividend+5,?i2___lomod+5
 10677   0024AC  C007  F007         	movff	i2___lomod@dividend+6,?i2___lomod+6
 10678   0024B0  C008  F008         	movff	i2___lomod@dividend+7,?i2___lomod+7
 10679   0024B4  0012               	return		;funcret
 10680   0024B6                     __end_ofi2___lomod:
 10681                           	callstack 0
 10682                           
 10683 ;; *************** function i2___lodiv *****************
 10684 ;; Defined at:
 10685 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
 10686 ;; Parameters:    Size  Location     Type
 10687 ;;  dividend        8    0[COMRAM] unsigned long long 
 10688 ;;  divisor         8    8[COMRAM] unsigned long long 
 10689 ;; Auto vars:     Size  Location     Type
 10690 ;;  quotient        8   16[COMRAM] unsigned long long 
 10691 ;;  counter         1   24[COMRAM] unsigned char 
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  8    0[COMRAM] unsigned long long 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10701 ;;      Params:        16       0       0       0       0       0       0
 10702 ;;      Locals:         9       0       0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0
 10704 ;;      Totals:        25       0       0       0       0       0       0
 10705 ;;Total ram usage:       25 bytes
 10706 ;; Hardware stack levels used: 1
 10707 ;; This function calls:
 10708 ;;		Nothing
 10709 ;; This function is called by:
 10710 ;;		i2_utoa
 10711 ;; This function uses a non-reentrant model
 10712 ;;
 10713                           
 10714                           	psect	text57
 10715   002066                     __ptext57:
 10716                           	callstack 0
 10717   002066                     i2___lodiv:
 10718                           	callstack 15
 10719   002066  EE20  F011         	lfsr	2,i2___lodiv@quotient
 10720   00206A  0E07               	movlw	7
 10721   00206C                     i2u211_41:
 10722   00206C  6ADE               	clrf	postinc2,c
 10723   00206E  06E8               	decf	wreg,f,c
 10724   002070  E2FD               	bc	i2u211_41
 10725   002072  5009               	movf	i2___lodiv@divisor^0,w,c
 10726   002074  100A               	iorwf	(i2___lodiv@divisor+1)^0,w,c
 10727   002076  100B               	iorwf	(i2___lodiv@divisor+2)^0,w,c
 10728   002078  100C               	iorwf	(i2___lodiv@divisor+3)^0,w,c
 10729   00207A  100D               	iorwf	(i2___lodiv@divisor+4)^0,w,c
 10730   00207C  100E               	iorwf	(i2___lodiv@divisor+5)^0,w,c
 10731   00207E  100F               	iorwf	(i2___lodiv@divisor+6)^0,w,c
 10732   002080  1010               	iorwf	(i2___lodiv@divisor+7)^0,w,c
 10733   002082  B4D8               	btfsc	status,2,c
 10734   002084  EF46  F010         	goto	i2u212_41
 10735   002088  EF48  F010         	goto	i2u212_40
 10736   00208C                     i2u212_41:
 10737   00208C  EF9A  F010         	goto	i2l1016
 10738   002090                     i2u212_40:
 10739   002090  0E01               	movlw	1
 10740   002092  6E19               	movwf	i2___lodiv@counter^0,c
 10741   002094  EF56  F010         	goto	i2l3225
 10742   002098                     i2l3223:
 10743   002098  90D8               	bcf	status,0,c
 10744   00209A  3609               	rlcf	i2___lodiv@divisor^0,f,c
 10745   00209C  360A               	rlcf	(i2___lodiv@divisor+1)^0,f,c
 10746   00209E  360B               	rlcf	(i2___lodiv@divisor+2)^0,f,c
 10747   0020A0  360C               	rlcf	(i2___lodiv@divisor+3)^0,f,c
 10748   0020A2  360D               	rlcf	(i2___lodiv@divisor+4)^0,f,c
 10749   0020A4  360E               	rlcf	(i2___lodiv@divisor+5)^0,f,c
 10750   0020A6  360F               	rlcf	(i2___lodiv@divisor+6)^0,f,c
 10751   0020A8  3610               	rlcf	(i2___lodiv@divisor+7)^0,f,c
 10752   0020AA  2A19               	incf	i2___lodiv@counter^0,f,c
 10753   0020AC                     i2l3225:
 10754   0020AC  AE10               	btfss	(i2___lodiv@divisor+7)^0,7,c
 10755   0020AE  EF5B  F010         	goto	i2u213_41
 10756   0020B2  EF5D  F010         	goto	i2u213_40
 10757   0020B6                     i2u213_41:
 10758   0020B6  EF4C  F010         	goto	i2l3223
 10759   0020BA                     i2u213_40:
 10760   0020BA                     i2l3227:
 10761   0020BA  90D8               	bcf	status,0,c
 10762   0020BC  3611               	rlcf	i2___lodiv@quotient^0,f,c
 10763   0020BE  3612               	rlcf	(i2___lodiv@quotient+1)^0,f,c
 10764   0020C0  3613               	rlcf	(i2___lodiv@quotient+2)^0,f,c
 10765   0020C2  3614               	rlcf	(i2___lodiv@quotient+3)^0,f,c
 10766   0020C4  3615               	rlcf	(i2___lodiv@quotient+4)^0,f,c
 10767   0020C6  3616               	rlcf	(i2___lodiv@quotient+5)^0,f,c
 10768   0020C8  3617               	rlcf	(i2___lodiv@quotient+6)^0,f,c
 10769   0020CA  3618               	rlcf	(i2___lodiv@quotient+7)^0,f,c
 10770   0020CC  5009               	movf	i2___lodiv@divisor^0,w,c
 10771   0020CE  5C01               	subwf	i2___lodiv@dividend^0,w,c
 10772   0020D0  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 10773   0020D2  5802               	subwfb	(i2___lodiv@dividend+1)^0,w,c
 10774   0020D4  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 10775   0020D6  5803               	subwfb	(i2___lodiv@dividend+2)^0,w,c
 10776   0020D8  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 10777   0020DA  5804               	subwfb	(i2___lodiv@dividend+3)^0,w,c
 10778   0020DC  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 10779   0020DE  5805               	subwfb	(i2___lodiv@dividend+4)^0,w,c
 10780   0020E0  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 10781   0020E2  5806               	subwfb	(i2___lodiv@dividend+5)^0,w,c
 10782   0020E4  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 10783   0020E6  5807               	subwfb	(i2___lodiv@dividend+6)^0,w,c
 10784   0020E8  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 10785   0020EA  5808               	subwfb	(i2___lodiv@dividend+7)^0,w,c
 10786   0020EC  A0D8               	btfss	status,0,c
 10787   0020EE  EF7B  F010         	goto	i2u214_41
 10788   0020F2  EF7D  F010         	goto	i2u214_40
 10789   0020F6                     i2u214_41:
 10790   0020F6  EF8E  F010         	goto	i2l3235
 10791   0020FA                     i2u214_40:
 10792   0020FA  5009               	movf	i2___lodiv@divisor^0,w,c
 10793   0020FC  5E01               	subwf	i2___lodiv@dividend^0,f,c
 10794   0020FE  500A               	movf	(i2___lodiv@divisor+1)^0,w,c
 10795   002100  5A02               	subwfb	(i2___lodiv@dividend+1)^0,f,c
 10796   002102  500B               	movf	(i2___lodiv@divisor+2)^0,w,c
 10797   002104  5A03               	subwfb	(i2___lodiv@dividend+2)^0,f,c
 10798   002106  500C               	movf	(i2___lodiv@divisor+3)^0,w,c
 10799   002108  5A04               	subwfb	(i2___lodiv@dividend+3)^0,f,c
 10800   00210A  500D               	movf	(i2___lodiv@divisor+4)^0,w,c
 10801   00210C  5A05               	subwfb	(i2___lodiv@dividend+4)^0,f,c
 10802   00210E  500E               	movf	(i2___lodiv@divisor+5)^0,w,c
 10803   002110  5A06               	subwfb	(i2___lodiv@dividend+5)^0,f,c
 10804   002112  500F               	movf	(i2___lodiv@divisor+6)^0,w,c
 10805   002114  5A07               	subwfb	(i2___lodiv@dividend+6)^0,f,c
 10806   002116  5010               	movf	(i2___lodiv@divisor+7)^0,w,c
 10807   002118  5A08               	subwfb	(i2___lodiv@dividend+7)^0,f,c
 10808   00211A  8011               	bsf	i2___lodiv@quotient^0,0,c
 10809   00211C                     i2l3235:
 10810   00211C  90D8               	bcf	status,0,c
 10811   00211E  3210               	rrcf	(i2___lodiv@divisor+7)^0,f,c
 10812   002120  320F               	rrcf	(i2___lodiv@divisor+6)^0,f,c
 10813   002122  320E               	rrcf	(i2___lodiv@divisor+5)^0,f,c
 10814   002124  320D               	rrcf	(i2___lodiv@divisor+4)^0,f,c
 10815   002126  320C               	rrcf	(i2___lodiv@divisor+3)^0,f,c
 10816   002128  320B               	rrcf	(i2___lodiv@divisor+2)^0,f,c
 10817   00212A  320A               	rrcf	(i2___lodiv@divisor+1)^0,f,c
 10818   00212C  3209               	rrcf	i2___lodiv@divisor^0,f,c
 10819   00212E  2E19               	decfsz	i2___lodiv@counter^0,f,c
 10820   002130  EF5D  F010         	goto	i2l3227
 10821   002134                     i2l1016:
 10822   002134  C011  F001         	movff	i2___lodiv@quotient,?i2___lodiv
 10823   002138  C012  F002         	movff	i2___lodiv@quotient+1,?i2___lodiv+1
 10824   00213C  C013  F003         	movff	i2___lodiv@quotient+2,?i2___lodiv+2
 10825   002140  C014  F004         	movff	i2___lodiv@quotient+3,?i2___lodiv+3
 10826   002144  C015  F005         	movff	i2___lodiv@quotient+4,?i2___lodiv+4
 10827   002148  C016  F006         	movff	i2___lodiv@quotient+5,?i2___lodiv+5
 10828   00214C  C017  F007         	movff	i2___lodiv@quotient+6,?i2___lodiv+6
 10829   002150  C018  F008         	movff	i2___lodiv@quotient+7,?i2___lodiv+7
 10830   002154  0012               	return		;funcret
 10831   002156                     __end_ofi2___lodiv:
 10832                           	callstack 0
 10833                           
 10834 ;; *************** function i2_strncmp *****************
 10835 ;; Defined at:
 10836 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  _l              2    0[COMRAM] PTR const unsigned char 
 10839 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
 10840 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
 10841 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
 10842 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
 10843 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
 10844 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
 10845 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
 10846 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
 10847 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
 10848 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
 10849 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
 10850 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
 10851 ;;  _r              2    2[COMRAM] PTR const unsigned char 
 10852 ;;		 -> STR_50(4), 
 10853 ;;  n               2    4[COMRAM] unsigned int 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  r               2    9[COMRAM] PTR const unsigned char 
 10856 ;;		 -> STR_50(4), 
 10857 ;;  l               2    7[COMRAM] PTR const unsigned char 
 10858 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
 10859 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
 10860 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
 10861 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
 10862 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
 10863 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
 10864 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
 10865 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
 10866 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
 10867 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
 10868 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
 10869 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  2    0[COMRAM] int 
 10872 ;; Registers used:
 10873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10879 ;;      Params:         6       0       0       0       0       0       0
 10880 ;;      Locals:         4       0       0       0       0       0       0
 10881 ;;      Temps:          1       0       0       0       0       0       0
 10882 ;;      Totals:        11       0       0       0       0       0       0
 10883 ;;Total ram usage:       11 bytes
 10884 ;; Hardware stack levels used: 1
 10885 ;; This function calls:
 10886 ;;		Nothing
 10887 ;; This function is called by:
 10888 ;;		i2_vfpfcnvrt
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text58
 10893   002236                     __ptext58:
 10894                           	callstack 0
 10895   002236                     i2_strncmp:
 10896                           	callstack 16
 10897   002236  C001  F008         	movff	i2strncmp@_l,i2strncmp@l
 10898   00223A  C002  F009         	movff	i2strncmp@_l+1,i2strncmp@l+1
 10899   00223E  C003  F00A         	movff	i2strncmp@_r,i2strncmp@r
 10900   002242  C004  F00B         	movff	i2strncmp@_r+1,i2strncmp@r+1
 10901   002246  0605               	decf	i2strncmp@n^0,f,c
 10902   002248  A0D8               	btfss	status,0,c
 10903   00224A  0606               	decf	(i2strncmp@n+1)^0,f,c
 10904   00224C  2805               	incf	i2strncmp@n^0,w,c
 10905   00224E  E106               	bnz	i2u275_41
 10906   002250  2806               	incf	(i2strncmp@n+1)^0,w,c
 10907   002252  A4D8               	btfss	status,2,c
 10908   002254  EF2E  F011         	goto	i2u275_41
 10909   002258  EF30  F011         	goto	i2u275_40
 10910   00225C                     i2u275_41:
 10911   00225C  EF3D  F011         	goto	i2l3571
 10912   002260                     i2u275_40:
 10913   002260  0E00               	movlw	0
 10914   002262  6E02               	movwf	(?i2_strncmp+1)^0,c
 10915   002264  0E00               	movlw	0
 10916   002266  6E01               	movwf	?i2_strncmp^0,c
 10917   002268  EF89  F011         	goto	i2l1472
 10918   00226C                     i2l3569:
 10919   00226C  4A08               	infsnz	i2strncmp@l^0,f,c
 10920   00226E  2A09               	incf	(i2strncmp@l+1)^0,f,c
 10921   002270  4A0A               	infsnz	i2strncmp@r^0,f,c
 10922   002272  2A0B               	incf	(i2strncmp@r+1)^0,f,c
 10923   002274  0605               	decf	i2strncmp@n^0,f,c
 10924   002276  A0D8               	btfss	status,0,c
 10925   002278  0606               	decf	(i2strncmp@n+1)^0,f,c
 10926   00227A                     i2l3571:
 10927   00227A  C008  FFF6         	movff	i2strncmp@l,tblptrl
 10928   00227E  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 10929   002282                     	if	0	;tblptru may be non-zero
 10930   002282                     	endif
 10931   002282                     	if	0	;tblptru may be non-zero
 10932   002282                     	endif
 10933   002282  0008               	tblrd		*
 10934   002284  50F5               	movf	tablat,w,c
 10935   002286  0900               	iorlw	0
 10936   002288  B4D8               	btfsc	status,2,c
 10937   00228A  EF49  F011         	goto	i2u276_41
 10938   00228E  EF4B  F011         	goto	i2u276_40
 10939   002292                     i2u276_41:
 10940   002292  EF77  F011         	goto	i2l3579
 10941   002296                     i2u276_40:
 10942   002296  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 10943   00229A  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 10944   00229E                     	if	0	;tblptru may be non-zero
 10945   00229E                     	endif
 10946   00229E                     	if	0	;tblptru may be non-zero
 10947   00229E                     	endif
 10948   00229E  0008               	tblrd		*
 10949   0022A0  50F5               	movf	tablat,w,c
 10950   0022A2  0900               	iorlw	0
 10951   0022A4  B4D8               	btfsc	status,2,c
 10952   0022A6  EF57  F011         	goto	i2u277_41
 10953   0022AA  EF59  F011         	goto	i2u277_40
 10954   0022AE                     i2u277_41:
 10955   0022AE  EF77  F011         	goto	i2l3579
 10956   0022B2                     i2u277_40:
 10957   0022B2  5005               	movf	i2strncmp@n^0,w,c
 10958   0022B4  1006               	iorwf	(i2strncmp@n+1)^0,w,c
 10959   0022B6  B4D8               	btfsc	status,2,c
 10960   0022B8  EF60  F011         	goto	i2u278_41
 10961   0022BC  EF62  F011         	goto	i2u278_40
 10962   0022C0                     i2u278_41:
 10963   0022C0  EF77  F011         	goto	i2l3579
 10964   0022C4                     i2u278_40:
 10965   0022C4  C008  FFF6         	movff	i2strncmp@l,tblptrl
 10966   0022C8  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 10967   0022CC                     	if	0	;tblptru may be non-zero
 10968   0022CC                     	endif
 10969   0022CC                     	if	0	;tblptru may be non-zero
 10970   0022CC                     	endif
 10971   0022CC  0008               	tblrd		*
 10972   0022CE  CFF5 F007          	movff	tablat,??i2_strncmp
 10973   0022D2  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 10974   0022D6  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 10975   0022DA                     	if	0	;tblptru may be non-zero
 10976   0022DA                     	endif
 10977   0022DA                     	if	0	;tblptru may be non-zero
 10978   0022DA                     	endif
 10979   0022DA  0008               	tblrd		*
 10980   0022DC  50F5               	movf	tablat,w,c
 10981   0022DE  1807               	xorwf	??i2_strncmp^0,w,c
 10982   0022E0  B4D8               	btfsc	status,2,c
 10983   0022E2  EF75  F011         	goto	i2u279_41
 10984   0022E6  EF77  F011         	goto	i2u279_40
 10985   0022EA                     i2u279_41:
 10986   0022EA  EF36  F011         	goto	i2l3569
 10987   0022EE                     i2u279_40:
 10988   0022EE                     i2l3579:
 10989   0022EE  C008  FFF6         	movff	i2strncmp@l,tblptrl
 10990   0022F2  C009  FFF7         	movff	i2strncmp@l+1,tblptrh
 10991   0022F6                     	if	0	;tblptru may be non-zero
 10992   0022F6                     	endif
 10993   0022F6                     	if	0	;tblptru may be non-zero
 10994   0022F6                     	endif
 10995   0022F6  0008               	tblrd		*
 10996   0022F8  CFF5 F007          	movff	tablat,??i2_strncmp
 10997   0022FC  C00A  FFF6         	movff	i2strncmp@r,tblptrl
 10998   002300  C00B  FFF7         	movff	i2strncmp@r+1,tblptrh
 10999   002304                     	if	0	;tblptru may be non-zero
 11000   002304                     	endif
 11001   002304                     	if	0	;tblptru may be non-zero
 11002   002304                     	endif
 11003   002304  0008               	tblrd		*
 11004   002306  50F5               	movf	tablat,w,c
 11005   002308  5C07               	subwf	??i2_strncmp^0,w,c
 11006   00230A  6E01               	movwf	?i2_strncmp^0,c
 11007   00230C  6A02               	clrf	(?i2_strncmp+1)^0,c
 11008   00230E  A0D8               	btfss	status,0,c
 11009   002310  0602               	decf	(?i2_strncmp+1)^0,f,c
 11010   002312                     i2l1472:
 11011   002312  0012               	return		;funcret
 11012   002314                     __end_ofi2_strncmp:
 11013                           	callstack 0
 11014                           
 11015 ;; *************** function i2_stoa *****************
 11016 ;; Defined at:
 11017 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11020 ;;		 -> NULL(0), 
 11021 ;;  s               2   13[COMRAM] PTR unsigned char 
 11022 ;;		 -> ?i2_printf(2), ?_printf(2), receiveBuffer(32), transmitBuffer(32), 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  nuls            7   16[COMRAM] unsigned char [7]
 11025 ;;  l               2   31[COMRAM] int 
 11026 ;;  p               2   29[COMRAM] int 
 11027 ;;  cp              2   27[COMRAM] PTR unsigned char 
 11028 ;;		 -> ?i2_printf(2), i2stoa@nuls(7), stoa@nuls(7), ?_printf(2), 
 11029 ;;		 -> receiveBuffer(32), transmitBuffer(32), 
 11030 ;;  w               2   25[COMRAM] int 
 11031 ;;  i               2   23[COMRAM] int 
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  1    wreg      void 
 11034 ;; Registers used:
 11035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11041 ;;      Params:         4       0       0       0       0       0       0
 11042 ;;      Locals:        17       0       0       0       0       0       0
 11043 ;;      Temps:          1       0       0       0       0       0       0
 11044 ;;      Totals:        22       0       0       0       0       0       0
 11045 ;;Total ram usage:       22 bytes
 11046 ;; Hardware stack levels used: 1
 11047 ;; Hardware stack levels required when called: 3
 11048 ;; This function calls:
 11049 ;;		i2_fputc
 11050 ;;		i2_strlen
 11051 ;; This function is called by:
 11052 ;;		i2_vfpfcnvrt
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text59
 11057   001978                     __ptext59:
 11058                           	callstack 0
 11059   001978                     i2_stoa:
 11060                           	callstack 13
 11061   001978                     
 11062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
 11063   001978  EE21  F0B6         	lfsr	2,stoa@F1149
 11064   00197C  EE10  F011         	lfsr	1,i2stoa@nuls
 11065   001980  0E06               	movlw	6
 11066   001982                     i2u246_41:
 11067   001982  CFDB FFE3          	movff	plusw2,plusw1
 11068   001986  06E8               	decf	wreg,f,c
 11069   001988  E2FC               	bc	i2u246_41
 11070   00198A                     
 11071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
 11072   00198A  C00E  F01C         	movff	i2stoa@s,i2stoa@cp
 11073   00198E  C00F  F01D         	movff	i2stoa@s+1,i2stoa@cp+1
 11074   001992                     
 11075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
 11076   001992  501C               	movf	i2stoa@cp^0,w,c
 11077   001994  101D               	iorwf	(i2stoa@cp+1)^0,w,c
 11078   001996  A4D8               	btfss	status,2,c
 11079   001998  EFD0  F00C         	goto	i2u247_41
 11080   00199C  EFD2  F00C         	goto	i2u247_40
 11081   0019A0                     i2u247_41:
 11082   0019A0  EFD6  F00C         	goto	i2l3415
 11083   0019A4                     i2u247_40:
 11084   0019A4                     
 11085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
 11086   0019A4  0E11               	movlw	low i2stoa@nuls
 11087   0019A6  6E1C               	movwf	i2stoa@cp^0,c
 11088   0019A8  0E00               	movlw	high i2stoa@nuls
 11089   0019AA  6E1D               	movwf	(i2stoa@cp+1)^0,c
 11090   0019AC                     i2l3415:
 11091                           
 11092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
 11093   0019AC  C01C  F001         	movff	i2stoa@cp,i2strlen@s
 11094   0019B0  C01D  F002         	movff	i2stoa@cp+1,i2strlen@s+1
 11095   0019B4  EC94  F016         	call	i2_strlen	;wreg free
 11096   0019B8  C001  F020         	movff	?i2_strlen,i2stoa@l
 11097   0019BC  C002  F021         	movff	?i2_strlen+1,i2stoa@l+1
 11098   0019C0                     
 11099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
 11100   0019C0  C0D0  F01E         	movff	_prec,i2stoa@p
 11101   0019C4  C0D1  F01F         	movff	_prec+1,i2stoa@p+1
 11102   0019C8                     
 11103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
 11104   0019C8  BE1F               	btfsc	(i2stoa@p+1)^0,7,c
 11105   0019CA  EFE9  F00C         	goto	i2u248_41
 11106   0019CE  EFEB  F00C         	goto	i2u248_40
 11107   0019D2                     i2u248_41:
 11108   0019D2  EF00  F00D         	goto	i2l1315
 11109   0019D6                     i2u248_40:
 11110   0019D6  5020               	movf	i2stoa@l^0,w,c
 11111   0019D8  5C1E               	subwf	i2stoa@p^0,w,c
 11112   0019DA  501F               	movf	(i2stoa@p+1)^0,w,c
 11113   0019DC  0A80               	xorlw	128
 11114   0019DE  6E10               	movwf	??i2_stoa^0,c
 11115   0019E0  5021               	movf	(i2stoa@l+1)^0,w,c
 11116   0019E2  0A80               	xorlw	128
 11117   0019E4  5810               	subwfb	??i2_stoa^0,w,c
 11118   0019E6  A0D8               	btfss	status,0,c
 11119   0019E8  EFF8  F00C         	goto	i2u249_41
 11120   0019EC  EFFA  F00C         	goto	i2u249_40
 11121   0019F0                     i2u249_41:
 11122   0019F0  EFFC  F00C         	goto	i2l1313
 11123   0019F4                     i2u249_40:
 11124   0019F4  EF00  F00D         	goto	i2l1315
 11125   0019F8                     i2l1313:
 11126   0019F8  C01E  F020         	movff	i2stoa@p,i2stoa@l
 11127   0019FC  C01F  F021         	movff	i2stoa@p+1,i2stoa@l+1
 11128   001A00                     i2l1315:
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
 11131   001A00  C020  F01E         	movff	i2stoa@l,i2stoa@p
 11132   001A04  C021  F01F         	movff	i2stoa@l+1,i2stoa@p+1
 11133                           
 11134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
 11135   001A08  C0CE  F01A         	movff	_width,i2stoa@w
 11136   001A0C  C0CF  F01B         	movff	_width+1,i2stoa@w+1
 11137                           
 11138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 859:     if (!(fl
      +                          ags & (1 << 0))) {
 11139   001A10  0100               	movlb	0	; () banked
 11140   001A12  B1DA               	btfsc	_flags& (0+255),0,b
 11141   001A14  EF0E  F00D         	goto	i2u250_41
 11142   001A18  EF10  F00D         	goto	i2u250_40
 11143   001A1C                     i2u250_41:
 11144   001A1C  EF2D  F00D         	goto	i2l3431
 11145   001A20                     i2u250_40:
 11146   001A20  EF1E  F00D         	goto	i2l3429
 11147   001A24                     i2l3425:
 11148                           
 11149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
 11150   001A24  0E00               	movlw	0
 11151   001A26  6E04               	movwf	(i2fputc@c+1)^0,c
 11152   001A28  0E20               	movlw	32
 11153   001A2A  6E03               	movwf	i2fputc@c^0,c
 11154   001A2C  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 11155   001A30  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 11156   001A34  EC88  F014         	call	i2_fputc	;wreg free
 11157   001A38                     
 11158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
 11159   001A38  4A20               	infsnz	i2stoa@l^0,f,c
 11160   001A3A  2A21               	incf	(i2stoa@l+1)^0,f,c
 11161   001A3C                     i2l3429:
 11162                           
 11163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
 11164   001A3C  501A               	movf	i2stoa@w^0,w,c
 11165   001A3E  5C20               	subwf	i2stoa@l^0,w,c
 11166   001A40  5021               	movf	(i2stoa@l+1)^0,w,c
 11167   001A42  0A80               	xorlw	128
 11168   001A44  6E10               	movwf	??i2_stoa^0,c
 11169   001A46  501B               	movf	(i2stoa@w+1)^0,w,c
 11170   001A48  0A80               	xorlw	128
 11171   001A4A  5810               	subwfb	??i2_stoa^0,w,c
 11172   001A4C  A0D8               	btfss	status,0,c
 11173   001A4E  EF2B  F00D         	goto	i2u251_41
 11174   001A52  EF2D  F00D         	goto	i2u251_40
 11175   001A56                     i2u251_41:
 11176   001A56  EF12  F00D         	goto	i2l3425
 11177   001A5A                     i2u251_40:
 11178   001A5A                     i2l3431:
 11179                           
 11180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
 11181   001A5A  0E00               	movlw	0
 11182   001A5C  6E19               	movwf	(i2stoa@i+1)^0,c
 11183   001A5E  0E00               	movlw	0
 11184   001A60  6E18               	movwf	i2stoa@i^0,c
 11185                           
 11186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 11187   001A62  EF46  F00D         	goto	i2l3439
 11188   001A66                     i2l3433:
 11189                           
 11190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
 11191   001A66  C01C  FFD9         	movff	i2stoa@cp,fsr2l
 11192   001A6A  C01D  FFDA         	movff	i2stoa@cp+1,fsr2h
 11193   001A6E  50DF               	movf	indf2,w,c
 11194   001A70  6E10               	movwf	??i2_stoa^0,c
 11195   001A72  5010               	movf	??i2_stoa^0,w,c
 11196   001A74  6E03               	movwf	i2fputc@c^0,c
 11197   001A76  6A04               	clrf	(i2fputc@c+1)^0,c
 11198   001A78  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 11199   001A7C  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 11200   001A80  EC88  F014         	call	i2_fputc	;wreg free
 11201   001A84                     
 11202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
 11203   001A84  4A1C               	infsnz	i2stoa@cp^0,f,c
 11204   001A86  2A1D               	incf	(i2stoa@cp+1)^0,f,c
 11205   001A88                     
 11206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
 11207   001A88  4A18               	infsnz	i2stoa@i^0,f,c
 11208   001A8A  2A19               	incf	(i2stoa@i+1)^0,f,c
 11209   001A8C                     i2l3439:
 11210                           
 11211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
 11212   001A8C  501E               	movf	i2stoa@p^0,w,c
 11213   001A8E  5C18               	subwf	i2stoa@i^0,w,c
 11214   001A90  5019               	movf	(i2stoa@i+1)^0,w,c
 11215   001A92  0A80               	xorlw	128
 11216   001A94  6E10               	movwf	??i2_stoa^0,c
 11217   001A96  501F               	movf	(i2stoa@p+1)^0,w,c
 11218   001A98  0A80               	xorlw	128
 11219   001A9A  5810               	subwfb	??i2_stoa^0,w,c
 11220   001A9C  A0D8               	btfss	status,0,c
 11221   001A9E  EF53  F00D         	goto	i2u252_41
 11222   001AA2  EF55  F00D         	goto	i2u252_40
 11223   001AA6                     i2u252_41:
 11224   001AA6  EF33  F00D         	goto	i2l3433
 11225   001AAA                     i2u252_40:
 11226   001AAA                     
 11227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 879:     if (flag
      +                          s & (1 << 0)) {
 11228   001AAA  0100               	movlb	0	; () banked
 11229   001AAC  A1DA               	btfss	_flags& (0+255),0,b
 11230   001AAE  EF5B  F00D         	goto	i2u253_41
 11231   001AB2  EF5D  F00D         	goto	i2u253_40
 11232   001AB6                     i2u253_41:
 11233   001AB6  EF7A  F00D         	goto	i2l1329
 11234   001ABA                     i2u253_40:
 11235   001ABA  EF6B  F00D         	goto	i2l3447
 11236   001ABE                     i2l3443:
 11237                           
 11238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 881:             
      +                          fputc(' ', fp);
 11239   001ABE  0E00               	movlw	0
 11240   001AC0  6E04               	movwf	(i2fputc@c+1)^0,c
 11241   001AC2  0E20               	movlw	32
 11242   001AC4  6E03               	movwf	i2fputc@c^0,c
 11243   001AC6  C00C  F005         	movff	i2stoa@fp,i2fputc@fp
 11244   001ACA  C00D  F006         	movff	i2stoa@fp+1,i2fputc@fp+1
 11245   001ACE  EC88  F014         	call	i2_fputc	;wreg free
 11246   001AD2                     
 11247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 882:             
      +                          ++l;
 11248   001AD2  4A20               	infsnz	i2stoa@l^0,f,c
 11249   001AD4  2A21               	incf	(i2stoa@l+1)^0,f,c
 11250   001AD6                     i2l3447:
 11251                           
 11252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 880:         whil
      +                          e (l < w) {
 11253   001AD6  501A               	movf	i2stoa@w^0,w,c
 11254   001AD8  5C20               	subwf	i2stoa@l^0,w,c
 11255   001ADA  5021               	movf	(i2stoa@l+1)^0,w,c
 11256   001ADC  0A80               	xorlw	128
 11257   001ADE  6E10               	movwf	??i2_stoa^0,c
 11258   001AE0  501B               	movf	(i2stoa@w+1)^0,w,c
 11259   001AE2  0A80               	xorlw	128
 11260   001AE4  5810               	subwfb	??i2_stoa^0,w,c
 11261   001AE6  A0D8               	btfss	status,0,c
 11262   001AE8  EF78  F00D         	goto	i2u254_41
 11263   001AEC  EF7A  F00D         	goto	i2u254_40
 11264   001AF0                     i2u254_41:
 11265   001AF0  EF5F  F00D         	goto	i2l3443
 11266   001AF4                     i2u254_40:
 11267   001AF4                     i2l1329:
 11268   001AF4  0012               	return		;funcret
 11269   001AF6                     __end_ofi2_stoa:
 11270                           	callstack 0
 11271                           
 11272 ;; *************** function i2_strlen *****************
 11273 ;; Defined at:
 11274 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11277 ;;		 -> ?i2_printf(2), i2stoa@nuls(7), stoa@nuls(7), ?_printf(2), 
 11278 ;;		 -> receiveBuffer(32), transmitBuffer(32), 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;  a               2    2[COMRAM] PTR const unsigned char 
 11281 ;;		 -> ?i2_printf(2), i2stoa@nuls(7), stoa@nuls(7), ?_printf(2), 
 11282 ;;		 -> receiveBuffer(32), transmitBuffer(32), 
 11283 ;; Return value:  Size  Location     Type
 11284 ;;                  2    0[COMRAM] unsigned int 
 11285 ;; Registers used:
 11286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11287 ;; Tracked objects:
 11288 ;;		On entry : 0/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11292 ;;      Params:         2       0       0       0       0       0       0
 11293 ;;      Locals:         2       0       0       0       0       0       0
 11294 ;;      Temps:          0       0       0       0       0       0       0
 11295 ;;      Totals:         4       0       0       0       0       0       0
 11296 ;;Total ram usage:        4 bytes
 11297 ;; Hardware stack levels used: 1
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		i2_stoa
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text60
 11306   002D28                     __ptext60:
 11307                           	callstack 0
 11308   002D28                     i2_strlen:
 11309                           	callstack 15
 11310   002D28  C001  F003         	movff	i2strlen@s,i2strlen@a
 11311   002D2C  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
 11312   002D30  EF9C  F016         	goto	i2l3289
 11313   002D34                     i2l3287:
 11314   002D34  4A01               	infsnz	i2strlen@s^0,f,c
 11315   002D36  2A02               	incf	(i2strlen@s+1)^0,f,c
 11316   002D38                     i2l3289:
 11317   002D38  C001  FFD9         	movff	i2strlen@s,fsr2l
 11318   002D3C  C002  FFDA         	movff	i2strlen@s+1,fsr2h
 11319   002D40  50DF               	movf	indf2,w,c
 11320   002D42  A4D8               	btfss	status,2,c
 11321   002D44  EFA6  F016         	goto	i2u224_41
 11322   002D48  EFA8  F016         	goto	i2u224_40
 11323   002D4C                     i2u224_41:
 11324   002D4C  EF9A  F016         	goto	i2l3287
 11325   002D50                     i2u224_40:
 11326   002D50  5003               	movf	i2strlen@a^0,w,c
 11327   002D52  5C01               	subwf	i2strlen@s^0,w,c
 11328   002D54  6E01               	movwf	?i2_strlen^0,c
 11329   002D56  5004               	movf	(i2strlen@a+1)^0,w,c
 11330   002D58  5802               	subwfb	(i2strlen@s+1)^0,w,c
 11331   002D5A  6E02               	movwf	(?i2_strlen+1)^0,c
 11332   002D5C  0012               	return		;funcret
 11333   002D5E                     __end_ofi2_strlen:
 11334                           	callstack 0
 11335                           
 11336 ;; *************** function i2_ctoa *****************
 11337 ;; Defined at:
 11338 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11341 ;;		 -> NULL(0), 
 11342 ;;  c               1   13[COMRAM] unsigned char 
 11343 ;; Auto vars:     Size  Location     Type
 11344 ;;  w               2   17[COMRAM] int 
 11345 ;;  l               2   15[COMRAM] int 
 11346 ;; Return value:  Size  Location     Type
 11347 ;;                  1    wreg      void 
 11348 ;; Registers used:
 11349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11355 ;;      Params:         3       0       0       0       0       0       0
 11356 ;;      Locals:         4       0       0       0       0       0       0
 11357 ;;      Temps:          1       0       0       0       0       0       0
 11358 ;;      Totals:         8       0       0       0       0       0       0
 11359 ;;Total ram usage:        8 bytes
 11360 ;; Hardware stack levels used: 1
 11361 ;; Hardware stack levels required when called: 3
 11362 ;; This function calls:
 11363 ;;		i2_fputc
 11364 ;; This function is called by:
 11365 ;;		i2_vfpfcnvrt
 11366 ;; This function uses a non-reentrant model
 11367 ;;
 11368                           
 11369                           	psect	text61
 11370   002584                     __ptext61:
 11371                           	callstack 0
 11372   002584                     i2_ctoa:
 11373                           	callstack 13
 11374   002584                     
 11375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
 11376   002584  0100               	movlb	0	; () banked
 11377   002586  51CE               	movf	_width& (0+255),w,b
 11378   002588  11CF               	iorwf	(_width+1)& (0+255),w,b
 11379   00258A  A4D8               	btfss	status,2,c
 11380   00258C  EFCA  F012         	goto	i2u241_41
 11381   002590  EFCC  F012         	goto	i2u241_40
 11382   002594                     i2u241_41:
 11383   002594  EFD2  F012         	goto	i2l3387
 11384   002598                     i2u241_40:
 11385   002598                     
 11386                           ; BSR set to: 0
 11387   002598  C0CE  F012         	movff	_width,i2ctoa@w
 11388   00259C  C0CF  F013         	movff	_width+1,i2ctoa@w+1
 11389   0025A0  EFD8  F012         	goto	i2l3389
 11390   0025A4                     i2l3387:
 11391                           
 11392                           ; BSR set to: 0
 11393   0025A4  0EFF               	movlw	255
 11394   0025A6  25CE               	addwf	_width& (0+255),w,b
 11395   0025A8  6E12               	movwf	i2ctoa@w^0,c
 11396   0025AA  0EFF               	movlw	255
 11397   0025AC  21CF               	addwfc	(_width+1)& (0+255),w,b
 11398   0025AE  6E13               	movwf	(i2ctoa@w+1)^0,c
 11399   0025B0                     i2l3389:
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
 11403   0025B0  A1DA               	btfss	_flags& (0+255),0,b
 11404   0025B2  EFDD  F012         	goto	i2u242_41
 11405   0025B6  EFDF  F012         	goto	i2u242_40
 11406   0025BA                     i2u242_41:
 11407   0025BA  EFE8  F012         	goto	i2l3393
 11408   0025BE                     i2u242_40:
 11409   0025BE                     
 11410                           ; BSR set to: 0
 11411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
 11412   0025BE  C00E  F003         	movff	i2ctoa@c,i2fputc@c
 11413   0025C2  6A04               	clrf	(i2fputc@c+1)^0,c
 11414   0025C4  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
 11415   0025C8  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
 11416   0025CC  EC88  F014         	call	i2_fputc	;wreg free
 11417   0025D0                     i2l3393:
 11418                           
 11419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
 11420   0025D0  BE13               	btfsc	(i2ctoa@w+1)^0,7,c
 11421   0025D2  EFED  F012         	goto	i2u243_41
 11422   0025D6  EFEF  F012         	goto	i2u243_40
 11423   0025DA                     i2u243_41:
 11424   0025DA  EFF1  F012         	goto	i2l3397
 11425   0025DE                     i2u243_40:
 11426   0025DE  EFF5  F012         	goto	i2l1301
 11427   0025E2                     i2l3397:
 11428   0025E2  0E00               	movlw	0
 11429   0025E4  6E13               	movwf	(i2ctoa@w+1)^0,c
 11430   0025E6  0E00               	movlw	0
 11431   0025E8  6E12               	movwf	i2ctoa@w^0,c
 11432   0025EA                     i2l1301:
 11433                           
 11434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
 11435   0025EA  0E00               	movlw	0
 11436   0025EC  6E11               	movwf	(i2ctoa@l+1)^0,c
 11437   0025EE  0E00               	movlw	0
 11438   0025F0  6E10               	movwf	i2ctoa@l^0,c
 11439                           
 11440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
 11441   0025F2  EF07  F013         	goto	i2l3403
 11442   0025F6                     i2l3399:
 11443                           
 11444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
 11445   0025F6  0E00               	movlw	0
 11446   0025F8  6E04               	movwf	(i2fputc@c+1)^0,c
 11447   0025FA  0E20               	movlw	32
 11448   0025FC  6E03               	movwf	i2fputc@c^0,c
 11449   0025FE  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
 11450   002602  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
 11451   002606  EC88  F014         	call	i2_fputc	;wreg free
 11452   00260A                     
 11453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
 11454   00260A  4A10               	infsnz	i2ctoa@l^0,f,c
 11455   00260C  2A11               	incf	(i2ctoa@l+1)^0,f,c
 11456   00260E                     i2l3403:
 11457                           
 11458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
 11459   00260E  5012               	movf	i2ctoa@w^0,w,c
 11460   002610  5C10               	subwf	i2ctoa@l^0,w,c
 11461   002612  5011               	movf	(i2ctoa@l+1)^0,w,c
 11462   002614  0A80               	xorlw	128
 11463   002616  6E0F               	movwf	??i2_ctoa^0,c
 11464   002618  5013               	movf	(i2ctoa@w+1)^0,w,c
 11465   00261A  0A80               	xorlw	128
 11466   00261C  580F               	subwfb	??i2_ctoa^0,w,c
 11467   00261E  A0D8               	btfss	status,0,c
 11468   002620  EF14  F013         	goto	i2u244_41
 11469   002624  EF16  F013         	goto	i2u244_40
 11470   002628                     i2u244_41:
 11471   002628  EFFB  F012         	goto	i2l3399
 11472   00262C                     i2u244_40:
 11473   00262C                     
 11474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
 11475   00262C  0100               	movlb	0	; () banked
 11476   00262E  B1DA               	btfsc	_flags& (0+255),0,b
 11477   002630  EF1C  F013         	goto	i2u245_41
 11478   002634  EF1E  F013         	goto	i2u245_40
 11479   002638                     i2u245_41:
 11480   002638  EF27  F013         	goto	i2l1306
 11481   00263C                     i2u245_40:
 11482   00263C                     
 11483                           ; BSR set to: 0
 11484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
 11485   00263C  C00E  F003         	movff	i2ctoa@c,i2fputc@c
 11486   002640  6A04               	clrf	(i2fputc@c+1)^0,c
 11487   002642  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
 11488   002646  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
 11489   00264A  EC88  F014         	call	i2_fputc	;wreg free
 11490   00264E                     i2l1306:
 11491   00264E  0012               	return		;funcret
 11492   002650                     __end_ofi2_ctoa:
 11493                           	callstack 0
 11494                           
 11495 ;; *************** function i2_fputc *****************
 11496 ;; Defined at:
 11497 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  c               2    2[COMRAM] int 
 11500 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
 11501 ;;		 -> NULL(0), 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;		None
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  2    2[COMRAM] int 
 11506 ;; Registers used:
 11507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11513 ;;      Params:         4       0       0       0       0       0       0
 11514 ;;      Locals:         0       0       0       0       0       0       0
 11515 ;;      Temps:          5       0       0       0       0       0       0
 11516 ;;      Totals:         9       0       0       0       0       0       0
 11517 ;;Total ram usage:        9 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; Hardware stack levels required when called: 2
 11520 ;; This function calls:
 11521 ;;		i2_putch
 11522 ;; This function is called by:
 11523 ;;		i2_pad
 11524 ;;		i2_ctoa
 11525 ;;		i2_stoa
 11526 ;;		i2_vfpfcnvrt
 11527 ;;		i2_fputs
 11528 ;; This function uses a non-reentrant model
 11529 ;;
 11530                           
 11531                           	psect	text62
 11532   002910                     __ptext62:
 11533                           	callstack 0
 11534   002910                     i2_fputc:
 11535                           	callstack 11
 11536   002910  5005               	movf	i2fputc@fp^0,w,c
 11537   002912  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 11538   002914  B4D8               	btfsc	status,2,c
 11539   002916  EF8F  F014         	goto	i2u201_41
 11540   00291A  EF91  F014         	goto	i2u201_40
 11541   00291E                     i2u201_41:
 11542   00291E  EF9A  F014         	goto	i2l3171
 11543   002922                     i2u201_40:
 11544   002922  5005               	movf	i2fputc@fp^0,w,c
 11545   002924  1006               	iorwf	(i2fputc@fp+1)^0,w,c
 11546   002926  A4D8               	btfss	status,2,c
 11547   002928  EF98  F014         	goto	i2u202_41
 11548   00292C  EF9A  F014         	goto	i2u202_40
 11549   002930                     i2u202_41:
 11550   002930  EF9F  F014         	goto	i2l3173
 11551   002934                     i2u202_40:
 11552   002934                     i2l3171:
 11553   002934  5003               	movf	i2fputc@c^0,w,c
 11554   002936  EC39  F018         	call	i2_putch
 11555   00293A  EFD2  F014         	goto	i2l1454
 11556   00293E                     i2l3173:
 11557   00293E  EE20 F009          	lfsr	2,9
 11558   002942  5005               	movf	i2fputc@fp^0,w,c
 11559   002944  26D9               	addwf	fsr2l,f,c
 11560   002946  5006               	movf	(i2fputc@fp+1)^0,w,c
 11561   002948  22DA               	addwfc	fsr2h,f,c
 11562   00294A  50DE               	movf	postinc2,w,c
 11563   00294C  10DE               	iorwf	postinc2,w,c
 11564   00294E  B4D8               	btfsc	status,2,c
 11565   002950  EFAC  F014         	goto	i2u203_41
 11566   002954  EFAE  F014         	goto	i2u203_40
 11567   002958                     i2u203_41:
 11568   002958  EFC9  F014         	goto	i2l3177
 11569   00295C                     i2u203_40:
 11570   00295C  EE20 F009          	lfsr	2,9
 11571   002960  5005               	movf	i2fputc@fp^0,w,c
 11572   002962  26D9               	addwf	fsr2l,f,c
 11573   002964  5006               	movf	(i2fputc@fp+1)^0,w,c
 11574   002966  22DA               	addwfc	fsr2h,f,c
 11575   002968  EE10 F003          	lfsr	1,3
 11576   00296C  5005               	movf	i2fputc@fp^0,w,c
 11577   00296E  26E1               	addwf	fsr1l,f,c
 11578   002970  5006               	movf	(i2fputc@fp+1)^0,w,c
 11579   002972  22E2               	addwfc	fsr1h,f,c
 11580   002974  50DE               	movf	postinc2,w,c
 11581   002976  5CE6               	subwf	postinc1,w,c
 11582   002978  50E6               	movf	postinc1,w,c
 11583   00297A  0A80               	xorlw	128
 11584   00297C  6E0B               	movwf	(??i2_fputc+4)^0,c
 11585   00297E  50DE               	movf	postinc2,w,c
 11586   002980  0A80               	xorlw	128
 11587   002982  580B               	subwfb	(??i2_fputc+4)^0,w,c
 11588   002984  B0D8               	btfsc	status,0,c
 11589   002986  EFC7  F014         	goto	i2u204_41
 11590   00298A  EFC9  F014         	goto	i2u204_40
 11591   00298E                     i2u204_41:
 11592   00298E  EFD2  F014         	goto	i2l1454
 11593   002992                     i2u204_40:
 11594   002992                     i2l3177:
 11595   002992  EE20 F003          	lfsr	2,3
 11596   002996  5005               	movf	i2fputc@fp^0,w,c
 11597   002998  26D9               	addwf	fsr2l,f,c
 11598   00299A  5006               	movf	(i2fputc@fp+1)^0,w,c
 11599   00299C  22DA               	addwfc	fsr2h,f,c
 11600   00299E  2ADE               	incf	postinc2,f,c
 11601   0029A0  0E00               	movlw	0
 11602   0029A2  22DD               	addwfc	postdec2,f,c
 11603   0029A4                     i2l1454:
 11604   0029A4  0012               	return		;funcret
 11605   0029A6                     __end_ofi2_fputc:
 11606                           	callstack 0
 11607                           
 11608 ;; *************** function i2_putch *****************
 11609 ;; Defined at:
 11610 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 11611 ;; Parameters:    Size  Location     Type
 11612 ;;  txData          1    wreg     unsigned char 
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;  txData          1    1[COMRAM] unsigned char 
 11615 ;; Return value:  Size  Location     Type
 11616 ;;                  1    wreg      void 
 11617 ;; Registers used:
 11618 ;;		wreg, status,2, cstack
 11619 ;; Tracked objects:
 11620 ;;		On entry : 0/0
 11621 ;;		On exit  : 0/0
 11622 ;;		Unchanged: 0/0
 11623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11624 ;;      Params:         0       0       0       0       0       0       0
 11625 ;;      Locals:         1       0       0       0       0       0       0
 11626 ;;      Temps:          0       0       0       0       0       0       0
 11627 ;;      Totals:         1       0       0       0       0       0       0
 11628 ;;Total ram usage:        1 bytes
 11629 ;; Hardware stack levels used: 1
 11630 ;; Hardware stack levels required when called: 1
 11631 ;; This function calls:
 11632 ;;		i2_EUSART1_Write
 11633 ;; This function is called by:
 11634 ;;		i2_fputc
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           	psect	text63
 11639   003072                     __ptext63:
 11640                           	callstack 0
 11641   003072                     i2_putch:
 11642                           	callstack 11
 11643                           
 11644                           ;incstack = 0
 11645                           ;i2putch@txData stored from wreg
 11646   003072  6E02               	movwf	i2putch@txData^0,c
 11647   003074                     
 11648                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 11649   003074  5002               	movf	i2putch@txData^0,w,c
 11650   003076  ECDA  F017         	call	i2_EUSART1_Write
 11651   00307A  0012               	return		;funcret
 11652   00307C                     __end_ofi2_putch:
 11653                           	callstack 0
 11654                           
 11655 ;; *************** function i2_EUSART1_Write *****************
 11656 ;; Defined at:
 11657 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  txData          1    wreg     unsigned char 
 11660 ;; Auto vars:     Size  Location     Type
 11661 ;;  txData          1    0[COMRAM] unsigned char 
 11662 ;; Return value:  Size  Location     Type
 11663 ;;                  1    wreg      void 
 11664 ;; Registers used:
 11665 ;;		wreg
 11666 ;; Tracked objects:
 11667 ;;		On entry : 0/0
 11668 ;;		On exit  : 0/0
 11669 ;;		Unchanged: 0/0
 11670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11671 ;;      Params:         0       0       0       0       0       0       0
 11672 ;;      Locals:         1       0       0       0       0       0       0
 11673 ;;      Temps:          0       0       0       0       0       0       0
 11674 ;;      Totals:         1       0       0       0       0       0       0
 11675 ;;Total ram usage:        1 bytes
 11676 ;; Hardware stack levels used: 1
 11677 ;; This function calls:
 11678 ;;		Nothing
 11679 ;; This function is called by:
 11680 ;;		i2_putch
 11681 ;; This function uses a non-reentrant model
 11682 ;;
 11683                           
 11684                           	psect	text64
 11685   002FB4                     __ptext64:
 11686                           	callstack 0
 11687   002FB4                     i2_EUSART1_Write:
 11688                           	callstack 11
 11689                           
 11690                           ;incstack = 0
 11691                           ;i2EUSART1_Write@txData stored from wreg
 11692   002FB4  6E01               	movwf	i2EUSART1_Write@txData^0,c
 11693   002FB6                     i2l310:
 11694                           
 11695                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 11696   002FB6  A89E               	btfss	158,4,c	;volatile
 11697   002FB8  EFE0  F017         	goto	i2u199_41
 11698   002FBC  EFE2  F017         	goto	i2u199_40
 11699   002FC0                     i2u199_41:
 11700   002FC0  EFDB  F017         	goto	i2l310
 11701   002FC4                     i2u199_40:
 11702   002FC4                     
 11703                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 11704   002FC4  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
 11705   002FC8  0012               	return		;funcret
 11706   002FCA                     __end_ofi2_EUSART1_Write:
 11707                           	callstack 0
 11708                           
 11709 ;; *************** function i2_atoi *****************
 11710 ;; Defined at:
 11711 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;  s               2    6[COMRAM] PTR const unsigned char 
 11714 ;;		 -> STR_47(15), STR_46(15), STR_45(15), STR_44(5), 
 11715 ;;		 -> STR_43(17), STR_42(21), STR_41(22), STR_40(64), 
 11716 ;;		 -> STR_39(44), STR_38(43), STR_37(3), STR_36(39), 
 11717 ;;		 -> STR_35(31), STR_34(16), STR_33(15), STR_32(15), 
 11718 ;;		 -> STR_31(15), STR_30(14), STR_29(43), STR_28(2), 
 11719 ;;		 -> STR_27(2), STR_26(8), STR_25(52), STR_24(19), 
 11720 ;;		 -> STR_23(56), STR_22(32), STR_21(19), STR_20(46), 
 11721 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
 11722 ;;		 -> STR_15(52), STR_14(12), STR_13(13), STR_12(12), 
 11723 ;;		 -> STR_11(12), STR_10(12), STR_9(11), STR_8(52), 
 11724 ;;		 -> STR_7(5), STR_6(5), STR_5(42), STR_4(70), 
 11725 ;;		 -> STR_3(22), STR_2(34), STR_1(10), 
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  n               2   13[COMRAM] int 
 11728 ;;  neg             2   11[COMRAM] int 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  2    6[COMRAM] int 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11738 ;;      Params:         2       0       0       0       0       0       0
 11739 ;;      Locals:         4       0       0       0       0       0       0
 11740 ;;      Temps:          3       0       0       0       0       0       0
 11741 ;;      Totals:         9       0       0       0       0       0       0
 11742 ;;Total ram usage:        9 bytes
 11743 ;; Hardware stack levels used: 1
 11744 ;; Hardware stack levels required when called: 1
 11745 ;; This function calls:
 11746 ;;		i2___wmul
 11747 ;;		i2_isdigit
 11748 ;;		i2_isspace
 11749 ;; This function is called by:
 11750 ;;		i2_vfpfcnvrt
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text65
 11755   001C44                     __ptext65:
 11756                           	callstack 0
 11757   001C44                     i2_atoi:
 11758                           	callstack 15
 11759   001C44  0E00               	movlw	0
 11760   001C46  6E0F               	movwf	(i2atoi@n+1)^0,c
 11761   001C48  0E00               	movlw	0
 11762   001C4A  6E0E               	movwf	i2atoi@n^0,c
 11763   001C4C  0E00               	movlw	0
 11764   001C4E  6E0D               	movwf	(i2atoi@neg+1)^0,c
 11765   001C50  0E00               	movlw	0
 11766   001C52  6E0C               	movwf	i2atoi@neg^0,c
 11767   001C54  EF2E  F00E         	goto	i2l3537
 11768   001C58                     i2l3533:
 11769   001C58  4A07               	infsnz	i2atoi@s^0,f,c
 11770   001C5A  2A08               	incf	(i2atoi@s+1)^0,f,c
 11771   001C5C                     i2l3537:
 11772   001C5C  C007  FFF6         	movff	i2atoi@s,tblptrl
 11773   001C60  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 11774   001C64                     	if	0	;tblptru may be non-zero
 11775   001C64                     	endif
 11776   001C64                     	if	0	;tblptru may be non-zero
 11777   001C64                     	endif
 11778   001C64  0008               	tblrd		*
 11779   001C66  50F5               	movf	tablat,w,c
 11780   001C68  0A20               	xorlw	32
 11781   001C6A  B4D8               	btfsc	status,2,c
 11782   001C6C  EF3A  F00E         	goto	i2u271_41
 11783   001C70  EF3C  F00E         	goto	i2u271_40
 11784   001C74                     i2u271_41:
 11785   001C74  EF2C  F00E         	goto	i2l3533
 11786   001C78                     i2u271_40:
 11787   001C78  C007  FFF6         	movff	i2atoi@s,tblptrl
 11788   001C7C  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 11789   001C80                     	if	0	;tblptru may be non-zero
 11790   001C80                     	endif
 11791   001C80                     	if	0	;tblptru may be non-zero
 11792   001C80                     	endif
 11793   001C80  0008               	tblrd		*
 11794   001C82  CFF5 F009          	movff	tablat,??i2_atoi
 11795   001C86  0EF7               	movlw	247
 11796   001C88  2409               	addwf	??i2_atoi^0,w,c
 11797   001C8A  6E0A               	movwf	(??i2_atoi+1)^0,c
 11798   001C8C  6A0B               	clrf	(??i2_atoi+2)^0,c
 11799   001C8E  0EFF               	movlw	255
 11800   001C90  220B               	addwfc	(??i2_atoi+2)^0,f,c
 11801   001C92  500B               	movf	(??i2_atoi+2)^0,w,c
 11802   001C94  E109               	bnz	i2u272_40
 11803   001C96  0E05               	movlw	5
 11804   001C98  5C0A               	subwf	(??i2_atoi+1)^0,w,c
 11805   001C9A  A0D8               	btfss	status,0,c
 11806   001C9C  EF52  F00E         	goto	i2u272_41
 11807   001CA0  EF54  F00E         	goto	i2u272_40
 11808   001CA4                     i2u272_41:
 11809   001CA4  EF2C  F00E         	goto	i2l3533
 11810   001CA8                     i2u272_40:
 11811   001CA8  EF5E  F00E         	goto	i2l3545
 11812   001CAC                     i2l3541:
 11813   001CAC  0E00               	movlw	0
 11814   001CAE  6E0D               	movwf	(i2atoi@neg+1)^0,c
 11815   001CB0  0E01               	movlw	1
 11816   001CB2  6E0C               	movwf	i2atoi@neg^0,c
 11817   001CB4                     i2l3543:
 11818   001CB4  4A07               	infsnz	i2atoi@s^0,f,c
 11819   001CB6  2A08               	incf	(i2atoi@s+1)^0,f,c
 11820   001CB8  EF93  F00E         	goto	i2l3553
 11821   001CBC                     i2l3545:
 11822   001CBC  C007  FFF6         	movff	i2atoi@s,tblptrl
 11823   001CC0  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 11824   001CC4                     	if	0	;tblptru may be non-zero
 11825   001CC4                     	endif
 11826   001CC4                     	if	0	;tblptru may be non-zero
 11827   001CC4                     	endif
 11828   001CC4  0008               	tblrd		*
 11829   001CC6  50F5               	movf	tablat,w,c
 11830   001CC8  6E09               	movwf	??i2_atoi^0,c
 11831   001CCA  6A0A               	clrf	(??i2_atoi+1)^0,c
 11832                           
 11833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11834                           ; Switch size 1, requested type "simple"
 11835                           ; Number of cases is 1, Range of values is 0 to 0
 11836                           ; switch strategies available:
 11837                           ; Name         Instructions Cycles
 11838                           ; simple_byte            4     3 (average)
 11839                           ;	Chosen strategy is simple_byte
 11840   001CCC  500A               	movf	(??i2_atoi+1)^0,w,c
 11841   001CCE  0A00               	xorlw	0	; case 0
 11842   001CD0  B4D8               	btfsc	status,2,c
 11843   001CD2  EF6D  F00E         	goto	i2l5685
 11844   001CD6  EF93  F00E         	goto	i2l3553
 11845   001CDA                     i2l5685:
 11846                           
 11847                           ; Switch size 1, requested type "simple"
 11848                           ; Number of cases is 2, Range of values is 43 to 45
 11849                           ; switch strategies available:
 11850                           ; Name         Instructions Cycles
 11851                           ; simple_byte            7     4 (average)
 11852                           ;	Chosen strategy is simple_byte
 11853   001CDA  5009               	movf	??i2_atoi^0,w,c
 11854   001CDC  0A2B               	xorlw	43	; case 43
 11855   001CDE  B4D8               	btfsc	status,2,c
 11856   001CE0  EF5A  F00E         	goto	i2l3543
 11857   001CE4  0A06               	xorlw	6	; case 45
 11858   001CE6  B4D8               	btfsc	status,2,c
 11859   001CE8  EF56  F00E         	goto	i2l3541
 11860   001CEC  EF93  F00E         	goto	i2l3553
 11861   001CF0                     i2l3547:
 11862   001CF0  C00E  F001         	movff	i2atoi@n,i2___wmul@multiplier
 11863   001CF4  C00F  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
 11864   001CF8  0E00               	movlw	0
 11865   001CFA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 11866   001CFC  0E0A               	movlw	10
 11867   001CFE  6E03               	movwf	i2___wmul@multiplicand^0,c
 11868   001D00  EC72  F017         	call	i2___wmul	;wreg free
 11869   001D04  C007  FFF6         	movff	i2atoi@s,tblptrl
 11870   001D08  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 11871   001D0C                     	if	0	;tblptru may be non-zero
 11872   001D0C                     	endif
 11873   001D0C                     	if	0	;tblptru may be non-zero
 11874   001D0C                     	endif
 11875   001D0C  0008               	tblrd		*
 11876   001D0E  50F5               	movf	tablat,w,c
 11877   001D10  5E01               	subwf	?i2___wmul^0,f,c
 11878   001D12  0E00               	movlw	0
 11879   001D14  5A02               	subwfb	(?i2___wmul+1)^0,f,c
 11880   001D16  0E30               	movlw	48
 11881   001D18  2401               	addwf	?i2___wmul^0,w,c
 11882   001D1A  6E0E               	movwf	i2atoi@n^0,c
 11883   001D1C  0E00               	movlw	0
 11884   001D1E  2002               	addwfc	(?i2___wmul+1)^0,w,c
 11885   001D20  6E0F               	movwf	(i2atoi@n+1)^0,c
 11886   001D22  EF5A  F00E         	goto	i2l3543
 11887   001D26                     i2l3553:
 11888   001D26  C007  FFF6         	movff	i2atoi@s,tblptrl
 11889   001D2A  C008  FFF7         	movff	i2atoi@s+1,tblptrh
 11890   001D2E                     	if	0	;tblptru may be non-zero
 11891   001D2E                     	endif
 11892   001D2E                     	if	0	;tblptru may be non-zero
 11893   001D2E                     	endif
 11894   001D2E  0008               	tblrd		*
 11895   001D30  CFF5 F009          	movff	tablat,??i2_atoi
 11896   001D34  0ED0               	movlw	208
 11897   001D36  2409               	addwf	??i2_atoi^0,w,c
 11898   001D38  6E0A               	movwf	(??i2_atoi+1)^0,c
 11899   001D3A  6A0B               	clrf	(??i2_atoi+2)^0,c
 11900   001D3C  0EFF               	movlw	255
 11901   001D3E  220B               	addwfc	(??i2_atoi+2)^0,f,c
 11902   001D40  500B               	movf	(??i2_atoi+2)^0,w,c
 11903   001D42  E109               	bnz	i2u273_40
 11904   001D44  0E0A               	movlw	10
 11905   001D46  5C0A               	subwf	(??i2_atoi+1)^0,w,c
 11906   001D48  A0D8               	btfss	status,0,c
 11907   001D4A  EFA9  F00E         	goto	i2u273_41
 11908   001D4E  EFAB  F00E         	goto	i2u273_40
 11909   001D52                     i2u273_41:
 11910   001D52  EF78  F00E         	goto	i2l3547
 11911   001D56                     i2u273_40:
 11912   001D56  500C               	movf	i2atoi@neg^0,w,c
 11913   001D58  100D               	iorwf	(i2atoi@neg+1)^0,w,c
 11914   001D5A  A4D8               	btfss	status,2,c
 11915   001D5C  EFB2  F00E         	goto	i2u274_41
 11916   001D60  EFB4  F00E         	goto	i2u274_40
 11917   001D64                     i2u274_41:
 11918   001D64  EFC2  F00E         	goto	i2l1425
 11919   001D68                     i2u274_40:
 11920   001D68  C00E  F009         	movff	i2atoi@n,??i2_atoi
 11921   001D6C  C00F  F00A         	movff	i2atoi@n+1,??i2_atoi+1
 11922   001D70  1E09               	comf	??i2_atoi^0,f,c
 11923   001D72  1E0A               	comf	(??i2_atoi+1)^0,f,c
 11924   001D74  4A09               	infsnz	??i2_atoi^0,f,c
 11925   001D76  2A0A               	incf	(??i2_atoi+1)^0,f,c
 11926   001D78  C009  F007         	movff	??i2_atoi,?i2_atoi
 11927   001D7C  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
 11928   001D80  EFC6  F00E         	goto	i2l1428
 11929   001D84                     i2l1425:
 11930   001D84  C00E  F007         	movff	i2atoi@n,?i2_atoi
 11931   001D88  C00F  F008         	movff	i2atoi@n+1,?i2_atoi+1
 11932   001D8C                     i2l1428:
 11933   001D8C  0012               	return		;funcret
 11934   001D8E                     __end_ofi2_atoi:
 11935                           	callstack 0
 11936                           
 11937 ;; *************** function i2_isspace *****************
 11938 ;; Defined at:
 11939 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  c               2    0[COMRAM] int 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;		None
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  2    0[COMRAM] int 
 11946 ;; Registers used:
 11947 ;;		wreg, status,2, status,0
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11953 ;;      Params:         2       0       0       0       0       0       0
 11954 ;;      Locals:         0       0       0       0       0       0       0
 11955 ;;      Temps:          2       0       0       0       0       0       0
 11956 ;;      Totals:         4       0       0       0       0       0       0
 11957 ;;Total ram usage:        4 bytes
 11958 ;; Hardware stack levels used: 1
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		i2_atoi
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           	psect	text66
 11967   002CF0                     __ptext66:
 11968                           	callstack 0
 11969   002CF0                     i2_isspace:
 11970                           	callstack 15
 11971   002CF0  0E20               	movlw	32
 11972   002CF2  1801               	xorwf	i2isspace@c^0,w,c
 11973   002CF4  1002               	iorwf	(i2isspace@c+1)^0,w,c
 11974   002CF6  B4D8               	btfsc	status,2,c
 11975   002CF8  EF80  F016         	goto	i2u222_41
 11976   002CFC  EF82  F016         	goto	i2u222_40
 11977   002D00                     i2u222_41:
 11978   002D00  EF93  F016         	goto	i2l1439
 11979   002D04                     i2u222_40:
 11980   002D04  0EF7               	movlw	247
 11981   002D06  2401               	addwf	i2isspace@c^0,w,c
 11982   002D08  6E03               	movwf	??i2_isspace^0,c
 11983   002D0A  0EFF               	movlw	255
 11984   002D0C  2002               	addwfc	(i2isspace@c+1)^0,w,c
 11985   002D0E  6E04               	movwf	(??i2_isspace+1)^0,c
 11986   002D10  5004               	movf	(??i2_isspace+1)^0,w,c
 11987   002D12  E109               	bnz	i2u223_40
 11988   002D14  0E05               	movlw	5
 11989   002D16  5C03               	subwf	??i2_isspace^0,w,c
 11990   002D18  A0D8               	btfss	status,0,c
 11991   002D1A  EF91  F016         	goto	i2u223_41
 11992   002D1E  EF93  F016         	goto	i2u223_40
 11993   002D22                     i2u223_41:
 11994   002D22  EF93  F016         	goto	i2l1439
 11995   002D26                     i2u223_40:
 11996   002D26                     i2l1439:
 11997   002D26  0012               	return		;funcret
 11998   002D28                     __end_ofi2_isspace:
 11999                           	callstack 0
 12000                           
 12001 ;; *************** function i2_isdigit *****************
 12002 ;; Defined at:
 12003 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  c               2    0[COMRAM] int 
 12006 ;; Auto vars:     Size  Location     Type
 12007 ;;		None
 12008 ;; Return value:  Size  Location     Type
 12009 ;;                  2    0[COMRAM] int 
 12010 ;; Registers used:
 12011 ;;		None
 12012 ;; Tracked objects:
 12013 ;;		On entry : 0/0
 12014 ;;		On exit  : 0/0
 12015 ;;		Unchanged: 0/0
 12016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12017 ;;      Params:         2       0       0       0       0       0       0
 12018 ;;      Locals:         0       0       0       0       0       0       0
 12019 ;;      Temps:          0       0       0       0       0       0       0
 12020 ;;      Totals:         2       0       0       0       0       0       0
 12021 ;;Total ram usage:        2 bytes
 12022 ;; Hardware stack levels used: 1
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		i2_vfpfcnvrt
 12027 ;;		i2_atoi
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           	psect	text67
 12032   00308C                     __ptext67:
 12033                           	callstack 0
 12034   00308C                     i2_isdigit:
 12035                           	callstack 16
 12036   00308C  0012               	return		;funcret
 12037   00308E                     __end_ofi2_isdigit:
 12038                           	callstack 0
 12039                           
 12040 ;; *************** function i2___wmul *****************
 12041 ;; Defined at:
 12042 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;  multiplier      2    0[COMRAM] unsigned int 
 12045 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12046 ;; Auto vars:     Size  Location     Type
 12047 ;;  product         2    4[COMRAM] unsigned int 
 12048 ;; Return value:  Size  Location     Type
 12049 ;;                  2    0[COMRAM] unsigned int 
 12050 ;; Registers used:
 12051 ;;		wreg, status,2, status,0, prodl, prodh
 12052 ;; Tracked objects:
 12053 ;;		On entry : 0/0
 12054 ;;		On exit  : 0/0
 12055 ;;		Unchanged: 0/0
 12056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12057 ;;      Params:         4       0       0       0       0       0       0
 12058 ;;      Locals:         2       0       0       0       0       0       0
 12059 ;;      Temps:          0       0       0       0       0       0       0
 12060 ;;      Totals:         6       0       0       0       0       0       0
 12061 ;;Total ram usage:        6 bytes
 12062 ;; Hardware stack levels used: 1
 12063 ;; This function calls:
 12064 ;;		Nothing
 12065 ;; This function is called by:
 12066 ;;		i2_atoi
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           	psect	text68
 12071   002EE4                     __ptext68:
 12072                           	callstack 0
 12073   002EE4                     i2___wmul:
 12074                           	callstack 15
 12075   002EE4  5001               	movf	i2___wmul@multiplier^0,w,c
 12076   002EE6  0203               	mulwf	i2___wmul@multiplicand^0,c
 12077   002EE8  CFF3 F005          	movff	prodl,i2___wmul@product
 12078   002EEC  CFF4 F006          	movff	prodh,i2___wmul@product+1
 12079   002EF0  5001               	movf	i2___wmul@multiplier^0,w,c
 12080   002EF2  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 12081   002EF4  50F3               	movf	243,w,c
 12082   002EF6  2606               	addwf	(i2___wmul@product+1)^0,f,c
 12083   002EF8  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 12084   002EFA  0203               	mulwf	i2___wmul@multiplicand^0,c
 12085   002EFC  50F3               	movf	243,w,c
 12086   002EFE  2606               	addwf	(i2___wmul@product+1)^0,f,c
 12087   002F00  C005  F001         	movff	i2___wmul@product,?i2___wmul
 12088   002F04  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 12089   002F08  0012               	return		;funcret
 12090   002F0A                     __end_ofi2___wmul:
 12091                           	callstack 0
 12092                           
 12093 ;; *************** function _EUSART2_Transmit_ISR *****************
 12094 ;; Defined at:
 12095 ;;		line 197 in file "mcc_generated_files/eusart2.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;		None
 12098 ;; Auto vars:     Size  Location     Type
 12099 ;;		None
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  1    wreg      void 
 12102 ;; Registers used:
 12103 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12104 ;; Tracked objects:
 12105 ;;		On entry : 0/0
 12106 ;;		On exit  : 0/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12109 ;;      Params:         0       0       0       0       0       0       0
 12110 ;;      Locals:         0       0       0       0       0       0       0
 12111 ;;      Temps:          0       0       0       0       0       0       0
 12112 ;;      Totals:         0       0       0       0       0       0       0
 12113 ;;Total ram usage:        0 bytes
 12114 ;; Hardware stack levels used: 1
 12115 ;; This function calls:
 12116 ;;		Nothing
 12117 ;; This function is called by:
 12118 ;;		_EUSART2_Initialize
 12119 ;;		_INTERRUPT_InterruptManager
 12120 ;; This function uses a non-reentrant model
 12121 ;;
 12122                           
 12123                           	psect	text69
 12124   002C74                     __ptext69:
 12125                           	callstack 0
 12126   002C74                     _EUSART2_Transmit_ISR:
 12127                           	callstack 20
 12128   002C74                     
 12129                           ;mcc_generated_files/eusart2.c: 201:     if(sizeof(eusart2TxBuffer) > eusart2TxBufferRem
      +                          aining)
 12130   002C74  0E08               	movlw	8
 12131   002C76  0100               	movlb	0	; () banked
 12132   002C78  61E5               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 12133   002C7A  EF41  F016         	goto	i2u351_41
 12134   002C7E  EF43  F016         	goto	i2u351_40
 12135   002C82                     i2u351_41:
 12136   002C82  EF59  F016         	goto	i2l205
 12137   002C86                     i2u351_40:
 12138   002C86                     
 12139                           ; BSR set to: 0
 12140                           ;mcc_generated_files/eusart2.c: 202:     {;mcc_generated_files/eusart2.c: 203:         T
      +                          XREG2 = eusart2TxBuffer[eusart2TxTail++];
 12141   002C86  0E10               	movlw	low _eusart2TxBuffer
 12142   002C88  25E6               	addwf	_eusart2TxTail& (0+255),w,b	;volatile
 12143   002C8A  6ED9               	movwf	fsr2l,c
 12144   002C8C  6ADA               	clrf	fsr2h,c
 12145   002C8E  0E01               	movlw	high _eusart2TxBuffer
 12146   002C90  22DA               	addwfc	fsr2h,f,c
 12147   002C92  50DF               	movf	indf2,w,c
 12148   002C94  6E73               	movwf	115,c	;volatile
 12149   002C96                     
 12150                           ; BSR set to: 0
 12151   002C96  2BE6               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 12152   002C98                     
 12153                           ; BSR set to: 0
 12154                           ;mcc_generated_files/eusart2.c: 204:         if(sizeof(eusart2TxBuffer) <= eusart2TxTail
      +                          )
 12155   002C98  0E07               	movlw	7
 12156   002C9A  65E6               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 12157   002C9C  EF52  F016         	goto	i2u352_41
 12158   002CA0  EF54  F016         	goto	i2u352_40
 12159   002CA4                     i2u352_41:
 12160   002CA4  EF56  F016         	goto	i2l4153
 12161   002CA8                     i2u352_40:
 12162   002CA8                     
 12163                           ; BSR set to: 0
 12164                           ;mcc_generated_files/eusart2.c: 205:         {;mcc_generated_files/eusart2.c: 206:      
      +                                 eusart2TxTail = 0;
 12165   002CA8  0E00               	movlw	0
 12166   002CAA  6FE6               	movwf	_eusart2TxTail& (0+255),b	;volatile
 12167   002CAC                     i2l4153:
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;mcc_generated_files/eusart2.c: 208:         eusart2TxBufferRemaining++;
 12171   002CAC  2BE5               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 12172                           
 12173                           ;mcc_generated_files/eusart2.c: 209:     }
 12174   002CAE  EF5A  F016         	goto	i2l208
 12175   002CB2                     i2l205:
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;mcc_generated_files/eusart2.c: 211:     {;mcc_generated_files/eusart2.c: 212:         P
      +                          IE3bits.TX2IE = 0;
 12179   002CB2  98A3               	bcf	163,4,c	;volatile
 12180   002CB4                     i2l208:
 12181                           
 12182                           ; BSR set to: 0
 12183   002CB4  0012               	return		;funcret
 12184   002CB6                     __end_of_EUSART2_Transmit_ISR:
 12185                           	callstack 0
 12186                           
 12187 ;; *************** function _EUSART2_DefaultOverrunErrorHandler *****************
 12188 ;; Defined at:
 12189 ;;		line 252 in file "mcc_generated_files/eusart2.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;		None
 12192 ;; Auto vars:     Size  Location     Type
 12193 ;;		None
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  1    wreg      void 
 12196 ;; Registers used:
 12197 ;;		None
 12198 ;; Tracked objects:
 12199 ;;		On entry : 0/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12203 ;;      Params:         0       0       0       0       0       0       0
 12204 ;;      Locals:         0       0       0       0       0       0       0
 12205 ;;      Temps:          0       0       0       0       0       0       0
 12206 ;;      Totals:         0       0       0       0       0       0       0
 12207 ;;Total ram usage:        0 bytes
 12208 ;; Hardware stack levels used: 1
 12209 ;; This function calls:
 12210 ;;		Nothing
 12211 ;; This function is called by:
 12212 ;;		_EUSART2_Initialize
 12213 ;;		_EUSART2_Receive_ISR
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text70
 12218   00307C                     __ptext70:
 12219                           	callstack 0
 12220   00307C                     _EUSART2_DefaultOverrunErrorHandler:
 12221                           	callstack 19
 12222   00307C                     
 12223                           ;mcc_generated_files/eusart2.c: 255:     RCSTA2bits.CREN = 0;
 12224   00307C  9871               	bcf	113,4,c	;volatile
 12225                           
 12226                           ;mcc_generated_files/eusart2.c: 256:     RCSTA2bits.CREN = 1;
 12227   00307E  8871               	bsf	113,4,c	;volatile
 12228   003080  0012               	return		;funcret
 12229   003082                     __end_of_EUSART2_DefaultOverrunErrorHandler:
 12230                           	callstack 0
 12231                           
 12232 ;; *************** function _EUSART2_DefaultFramingErrorHandler *****************
 12233 ;; Defined at:
 12234 ;;		line 250 in file "mcc_generated_files/eusart2.c"
 12235 ;; Parameters:    Size  Location     Type
 12236 ;;		None
 12237 ;; Auto vars:     Size  Location     Type
 12238 ;;		None
 12239 ;; Return value:  Size  Location     Type
 12240 ;;                  1    wreg      void 
 12241 ;; Registers used:
 12242 ;;		None
 12243 ;; Tracked objects:
 12244 ;;		On entry : 0/0
 12245 ;;		On exit  : 0/0
 12246 ;;		Unchanged: 0/0
 12247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12248 ;;      Params:         0       0       0       0       0       0       0
 12249 ;;      Locals:         0       0       0       0       0       0       0
 12250 ;;      Temps:          0       0       0       0       0       0       0
 12251 ;;      Totals:         0       0       0       0       0       0       0
 12252 ;;Total ram usage:        0 bytes
 12253 ;; Hardware stack levels used: 1
 12254 ;; This function calls:
 12255 ;;		Nothing
 12256 ;; This function is called by:
 12257 ;;		_EUSART2_Initialize
 12258 ;;		_EUSART2_Receive_ISR
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text71
 12263   00308E                     __ptext71:
 12264                           	callstack 0
 12265   00308E                     _EUSART2_DefaultFramingErrorHandler:
 12266                           	callstack 19
 12267   00308E  0012               	return		;funcret
 12268   003090                     __end_of_EUSART2_DefaultFramingErrorHandler:
 12269                           	callstack 0
 12270                           
 12271 ;; *************** function _EUSART2_DefaultErrorHandler *****************
 12272 ;; Defined at:
 12273 ;;		line 260 in file "mcc_generated_files/eusart2.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;		None
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  1    wreg      void 
 12280 ;; Registers used:
 12281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 0/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12287 ;;      Params:         0       0       0       0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0
 12289 ;;      Temps:          0       0       0       0       0       0       0
 12290 ;;      Totals:         0       0       0       0       0       0       0
 12291 ;;Total ram usage:        0 bytes
 12292 ;; Hardware stack levels used: 1
 12293 ;; Hardware stack levels required when called: 1
 12294 ;; This function calls:
 12295 ;;		_EUSART2_RxDataHandler
 12296 ;; This function is called by:
 12297 ;;		_EUSART2_Initialize
 12298 ;;		_EUSART2_Receive_ISR
 12299 ;; This function uses a non-reentrant model
 12300 ;;
 12301                           
 12302                           	psect	text72
 12303   003082                     __ptext72:
 12304                           	callstack 0
 12305   003082                     _EUSART2_DefaultErrorHandler:
 12306                           	callstack 18
 12307   003082                     
 12308                           ;mcc_generated_files/eusart2.c: 261:     EUSART2_RxDataHandler();
 12309   003082  EC0B  F017         	call	_EUSART2_RxDataHandler	;wreg free
 12310   003086  0012               	return		;funcret
 12311   003088                     __end_of_EUSART2_DefaultErrorHandler:
 12312                           	callstack 0
 12313                           
 12314 ;; *************** function _EUSART2_RxDataHandler *****************
 12315 ;; Defined at:
 12316 ;;		line 240 in file "mcc_generated_files/eusart2.c"
 12317 ;; Parameters:    Size  Location     Type
 12318 ;;		None
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;		None
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  1    wreg      void 
 12323 ;; Registers used:
 12324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12330 ;;      Params:         0       0       0       0       0       0       0
 12331 ;;      Locals:         0       0       0       0       0       0       0
 12332 ;;      Temps:          0       0       0       0       0       0       0
 12333 ;;      Totals:         0       0       0       0       0       0       0
 12334 ;;Total ram usage:        0 bytes
 12335 ;; Hardware stack levels used: 1
 12336 ;; This function calls:
 12337 ;;		Nothing
 12338 ;; This function is called by:
 12339 ;;		_EUSART2_Receive_ISR
 12340 ;;		_EUSART2_DefaultErrorHandler
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text73
 12345   002E16                     __ptext73:
 12346                           	callstack 0
 12347   002E16                     _EUSART2_RxDataHandler:
 12348                           	callstack 19
 12349   002E16                     
 12350                           ;mcc_generated_files/eusart2.c: 242:     eusart2RxBuffer[eusart2RxHead++] = RCREG2;
 12351   002E16  0E08               	movlw	low _eusart2RxBuffer
 12352   002E18  0100               	movlb	0	; () banked
 12353   002E1A  25E4               	addwf	_eusart2RxHead& (0+255),w,b	;volatile
 12354   002E1C  6ED9               	movwf	fsr2l,c
 12355   002E1E  6ADA               	clrf	fsr2h,c
 12356   002E20  0E01               	movlw	high _eusart2RxBuffer
 12357   002E22  22DA               	addwfc	fsr2h,f,c
 12358   002E24  CF74 FFDF          	movff	3956,indf2	;volatile
 12359   002E28                     
 12360                           ; BSR set to: 0
 12361   002E28  2BE4               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 12362   002E2A                     
 12363                           ; BSR set to: 0
 12364                           ;mcc_generated_files/eusart2.c: 243:     if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 12365   002E2A  0E07               	movlw	7
 12366   002E2C  65E4               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 12367   002E2E  EF1B  F017         	goto	i2u330_41
 12368   002E32  EF1D  F017         	goto	i2u330_40
 12369   002E36                     i2u330_41:
 12370   002E36  EF1F  F017         	goto	i2l3901
 12371   002E3A                     i2u330_40:
 12372   002E3A                     
 12373                           ; BSR set to: 0
 12374                           ;mcc_generated_files/eusart2.c: 244:     {;mcc_generated_files/eusart2.c: 245:         e
      +                          usart2RxHead = 0;
 12375   002E3A  0E00               	movlw	0
 12376   002E3C  6FE4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 12377   002E3E                     i2l3901:
 12378                           
 12379                           ; BSR set to: 0
 12380                           ;mcc_generated_files/eusart2.c: 247:     eusart2RxCount++;
 12381   002E3E  2BE2               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 12382   002E40                     
 12383                           ; BSR set to: 0
 12384   002E40  0012               	return		;funcret
 12385   002E42                     __end_of_EUSART2_RxDataHandler:
 12386                           	callstack 0
 12387                           
 12388                           	psect	text74
 12389   000000                     __ptext74:
 12390                           	callstack 0
 12391   000000                     
 12392                           	psect	rparam
 12393   000000                     
 12394                           	psect	temp
 12395   00005F                     btemp:
 12396                           	callstack 0
 12397   00005F                     	ds	1
 12398   000000                     int$flags	set	btemp
 12399   000000                     wtemp8	set	btemp+1
 12400   000000                     ttemp5	set	btemp+1
 12401   000000                     ttemp6	set	btemp+4
 12402   000000                     ttemp7	set	btemp+8
 12403                           
 12404                           	psect	idloc
 12405                           
 12406                           ;Config register IDLOC0 @ 0x200000
 12407                           ;	unspecified, using default values
 12408   200000                     	org	2097152
 12409   200000  FF                 	db	255
 12410                           
 12411                           ;Config register IDLOC1 @ 0x200001
 12412                           ;	unspecified, using default values
 12413   200001                     	org	2097153
 12414   200001  FF                 	db	255
 12415                           
 12416                           ;Config register IDLOC2 @ 0x200002
 12417                           ;	unspecified, using default values
 12418   200002                     	org	2097154
 12419   200002  FF                 	db	255
 12420                           
 12421                           ;Config register IDLOC3 @ 0x200003
 12422                           ;	unspecified, using default values
 12423   200003                     	org	2097155
 12424   200003  FF                 	db	255
 12425                           
 12426                           ;Config register IDLOC4 @ 0x200004
 12427                           ;	unspecified, using default values
 12428   200004                     	org	2097156
 12429   200004  FF                 	db	255
 12430                           
 12431                           ;Config register IDLOC5 @ 0x200005
 12432                           ;	unspecified, using default values
 12433   200005                     	org	2097157
 12434   200005  FF                 	db	255
 12435                           
 12436                           ;Config register IDLOC6 @ 0x200006
 12437                           ;	unspecified, using default values
 12438   200006                     	org	2097158
 12439   200006  FF                 	db	255
 12440                           
 12441                           ;Config register IDLOC7 @ 0x200007
 12442                           ;	unspecified, using default values
 12443   200007                     	org	2097159
 12444   200007  FF                 	db	255
 12445                           
 12446                           	psect	config
 12447                           
 12448                           ; Padding undefined space
 12449   300000                     	org	3145728
 12450   300000  FF                 	db	255
 12451                           
 12452                           ;Config register CONFIG1H @ 0x300001
 12453                           ;	Oscillator Selection bits
 12454                           ;	FOSC = INTIO67, Internal oscillator block
 12455                           ;	4X PLL Enable
 12456                           ;	PLLCFG = OFF, Oscillator used directly
 12457                           ;	Primary clock enable bit
 12458                           ;	PRICLKEN = ON, Primary clock enabled
 12459                           ;	Fail-Safe Clock Monitor Enable bit
 12460                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12461                           ;	Internal/External Oscillator Switchover bit
 12462                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12463   300001                     	org	3145729
 12464   300001  28                 	db	40
 12465                           
 12466                           ;Config register CONFIG2L @ 0x300002
 12467                           ;	Power-up Timer Enable bit
 12468                           ;	PWRTEN = OFF, Power up timer disabled
 12469                           ;	Brown-out Reset Enable bits
 12470                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12471                           ;	Brown Out Reset Voltage bits
 12472                           ;	BORV = 190, VBOR set to 1.90 V nominal
 12473   300002                     	org	3145730
 12474   300002  1F                 	db	31
 12475                           
 12476                           ;Config register CONFIG2H @ 0x300003
 12477                           ;	Watchdog Timer Enable bits
 12478                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12479                           ;	Watchdog Timer Postscale Select bits
 12480                           ;	WDTPS = 32768, 1:32768
 12481   300003                     	org	3145731
 12482   300003  3C                 	db	60
 12483                           
 12484                           ; Padding undefined space
 12485   300004                     	org	3145732
 12486   300004  FF                 	db	255
 12487                           
 12488                           ;Config register CONFIG3H @ 0x300005
 12489                           ;	CCP2 MUX bit
 12490                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12491                           ;	PORTB A/D Enable bit
 12492                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 12493                           ;	P3A/CCP3 Mux bit
 12494                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12495                           ;	HFINTOSC Fast Start-up
 12496                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12497                           ;	Timer3 Clock input mux bit
 12498                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12499                           ;	ECCP2 B output mux bit
 12500                           ;	P2BMX = PORTB5, P2B is on RB5
 12501                           ;	MCLR Pin Enable bit
 12502                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12503   300005                     	org	3145733
 12504   300005  BF                 	db	191
 12505                           
 12506                           ;Config register CONFIG4L @ 0x300006
 12507                           ;	Stack Full/Underflow Reset Enable bit
 12508                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12509                           ;	Single-Supply ICSP Enable bit
 12510                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12511                           ;	Extended Instruction Set Enable bit
 12512                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12513                           ;	Background Debug
 12514                           ;	DEBUG = OFF, Disabled
 12515   300006                     	org	3145734
 12516   300006  85                 	db	133
 12517                           
 12518                           ; Padding undefined space
 12519   300007                     	org	3145735
 12520   300007  FF                 	db	255
 12521                           
 12522                           ;Config register CONFIG5L @ 0x300008
 12523                           ;	Code Protection Block 0
 12524                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 12525                           ;	Code Protection Block 1
 12526                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 12527                           ;	Code Protection Block 2
 12528                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 12529                           ;	Code Protection Block 3
 12530                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 12531   300008                     	org	3145736
 12532   300008  0F                 	db	15
 12533                           
 12534                           ;Config register CONFIG5H @ 0x300009
 12535                           ;	Boot Block Code Protection bit
 12536                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12537                           ;	Data EEPROM Code Protection bit
 12538                           ;	CPD = OFF, Data EEPROM not code-protected
 12539   300009                     	org	3145737
 12540   300009  C0                 	db	192
 12541                           
 12542                           ;Config register CONFIG6L @ 0x30000A
 12543                           ;	Write Protection Block 0
 12544                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 12545                           ;	Write Protection Block 1
 12546                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 12547                           ;	Write Protection Block 2
 12548                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 12549                           ;	Write Protection Block 3
 12550                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 12551   30000A                     	org	3145738
 12552   30000A  0F                 	db	15
 12553                           
 12554                           ;Config register CONFIG6H @ 0x30000B
 12555                           ;	Configuration Register Write Protection bit
 12556                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12557                           ;	Boot Block Write Protection bit
 12558                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12559                           ;	Data EEPROM Write Protection bit
 12560                           ;	WRTD = OFF, Data EEPROM not write-protected
 12561   30000B                     	org	3145739
 12562   30000B  E0                 	db	224
 12563                           
 12564                           ;Config register CONFIG7L @ 0x30000C
 12565                           ;	Table Read Protection Block 0
 12566                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 12567                           ;	Table Read Protection Block 1
 12568                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 12569                           ;	Table Read Protection Block 2
 12570                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 12571                           ;	Table Read Protection Block 3
 12572                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12573   30000C                     	org	3145740
 12574   30000C  0F                 	db	15
 12575                           
 12576                           ;Config register CONFIG7H @ 0x30000D
 12577                           ;	Boot Block Table Read Protection bit
 12578                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12579   30000D                     	org	3145741
 12580   30000D  40                 	db	64
 12581                           tosu	equ	0xFFF
 12582                           tosh	equ	0xFFE
 12583                           tosl	equ	0xFFD
 12584                           stkptr	equ	0xFFC
 12585                           pclatu	equ	0xFFB
 12586                           pclath	equ	0xFFA
 12587                           pcl	equ	0xFF9
 12588                           tblptru	equ	0xFF8
 12589                           tblptrh	equ	0xFF7
 12590                           tblptrl	equ	0xFF6
 12591                           tablat	equ	0xFF5
 12592                           prodh	equ	0xFF4
 12593                           prodl	equ	0xFF3
 12594                           indf0	equ	0xFEF
 12595                           postinc0	equ	0xFEE
 12596                           postdec0	equ	0xFED
 12597                           preinc0	equ	0xFEC
 12598                           plusw0	equ	0xFEB
 12599                           fsr0h	equ	0xFEA
 12600                           fsr0l	equ	0xFE9
 12601                           wreg	equ	0xFE8
 12602                           indf1	equ	0xFE7
 12603                           postinc1	equ	0xFE6
 12604                           postdec1	equ	0xFE5
 12605                           preinc1	equ	0xFE4
 12606                           plusw1	equ	0xFE3
 12607                           fsr1h	equ	0xFE2
 12608                           fsr1l	equ	0xFE1
 12609                           bsr	equ	0xFE0
 12610                           indf2	equ	0xFDF
 12611                           postinc2	equ	0xFDE
 12612                           postdec2	equ	0xFDD
 12613                           preinc2	equ	0xFDC
 12614                           plusw2	equ	0xFDB
 12615                           fsr2h	equ	0xFDA
 12616                           fsr2l	equ	0xFD9
 12617                           status	equ	0xFD8

Data Sizes:
    Strings     998
    Constant    0
    Data        17
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    110     136
    BANK1           256     38     189
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_50(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_50(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1848$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1848$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1888$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK1[2]), receiveBuffer(BANK1[32]), transmitBuffer(BANK1[32]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_47(CODE[15]), STR_46(CODE[15]), STR_45(CODE[15]), STR_44(CODE[5]), 
		 -> STR_43(CODE[17]), STR_42(CODE[21]), STR_41(CODE[22]), STR_40(CODE[64]), 
		 -> STR_39(CODE[44]), STR_38(CODE[43]), STR_37(CODE[3]), STR_36(CODE[39]), 
		 -> STR_35(CODE[31]), STR_34(CODE[16]), STR_33(CODE[15]), STR_32(CODE[15]), 
		 -> STR_31(CODE[15]), STR_30(CODE[14]), STR_29(CODE[43]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[8]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[56]), STR_22(CODE[32]), STR_21(CODE[19]), STR_20(CODE[46]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[12]), STR_13(CODE[13]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[52]), 
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[42]), STR_4(CODE[70]), 
		 -> STR_3(CODE[22]), STR_2(CODE[34]), STR_1(CODE[10]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rxEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), rxEUSART2ISR(), EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_Transmit_ISR(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART2_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_rxEUSART2ISR
    _rxEUSART2ISR->i2_printf
    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_utoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_stoa->i2_fputc
    i2_ctoa->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2___wmul

Critical Paths under _main in BANK0

    _main->_printf
    _transmitCharacterOverIR->_EPWM2_LoadDutyValue
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _stoa->_fputc
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_rxEUSART2ISR
    _rxEUSART2ISR->i2_printf
    i2_printf->i2_vfprintf

Critical Paths under _main in BANK1

    _main->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   32538
                                            108 BANK0      2     2      0
                                             23 BANK1     15    15      0
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                       _EUSART2_Read
      _EUSART2_SetRxInterruptHandler
                _EUSART2_is_rx_ready
                  _SYSTEM_Initialize
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
                             _printf
            _transmitCharacterOverIR
 ---------------------------------------------------------------------------------
 (1) _transmitCharacterOverIR                              4     2      2    1276
                                             28 BANK0      4     2      2
                _EPWM2_LoadDutyValue
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     468
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_LoadDutyValue                                  4     2      2     424
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   28431
                                            106 BANK0      2     2      0
                                             15 BANK1      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24183
                                             98 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           27    21      6   23575
                                             88 BANK0     10     4      6
                                              0 BANK1     15    15      0
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    5889
                                             53 BANK0     35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6555
                                             53 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5143
                                             42 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2406
                                             35 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             24 BANK0     17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             24 BANK0     25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             24 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2946
                                             35 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2349
                                             35 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1906
                                             26 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             25 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             24 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1554
                                             30 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             24 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             24 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     562
                                             24 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     860
                   _EPWM2_Initialize
                 _EUSART1_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     566
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        2     0      2     174
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             24 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART2_Read                                         1     1      0       8
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         12    12      0   10305
                                             12 BANK0     12    12      0
                   Absolute function *
                _EUSART2_Receive_ISR *
               _EUSART2_Transmit_ISR *
                       _rxEUSART2ISR *
 ---------------------------------------------------------------------------------
 (11) _rxEUSART2ISR                                        3     3      0   10305
                                             93 COMRAM     1     1      0
                                             10 BANK0      2     2      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (12) i2_printf                                            8     4      4   10128
                                             91 COMRAM     2     2      0
                                              6 BANK0      4     0      4
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (13) i2_vfprintf                                          8     2      6    9990
                                             89 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (14) i2_vfpfcnvrt                                        27    21      6    9771
                                             64 COMRAM    25    19      6
                             i2_atoi
                             i2_ctoa
                            i2_fputc
                          i2_isdigit
                             i2_stoa
                          i2_strncmp
                             i2_utoa
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (15) i2_xtoa                                             35    25     10    2342
                                             29 COMRAM    35    25     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (15) i2_utoa                                             32    22     10    2653
                                             29 COMRAM    32    22     10
                          i2___lodiv
                          i2___lomod
                              i2_pad
 ---------------------------------------------------------------------------------
 (16) i2_pad                                              11     5      6    1903
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (17) i2_fputs                                             7     3      4     873
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2___lomod                                          17     1     16     211
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (16) i2___lodiv                                          25     9     16     214
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (15) i2_strncmp                                          11     5      6     303
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (15) i2_stoa                                             22    18      4    1273
                                             11 COMRAM    22    18      4
                            i2_fputc
                           i2_strlen
 ---------------------------------------------------------------------------------
 (16) i2_strlen                                            4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) i2_ctoa                                              8     5      3     905
                                             11 COMRAM     8     5      3
                            i2_fputc
 ---------------------------------------------------------------------------------
 (18) i2_fputc                                             9     5      4     672
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (19) i2_putch                                             1     1      0      44
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (20) i2_EUSART1_Write                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) i2_atoi                                              9     7      2     622
                                              6 COMRAM     9     7      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (16) i2_isspace                                           5     3      2      78
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) i2_isdigit                                           2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART2_Receive_ISR                                 0     0      0       0
                   Absolute function *
        _EUSART2_DefaultErrorHandler *
 _EUSART2_DefaultFramingErrorHandler *
 _EUSART2_DefaultOverrunErrorHandler *
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART2_DefaultErrorHandler                         0     0      0       0
              _EUSART2_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART2_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _EUSART2_Read
   _EUSART2_SetRxInterruptHandler
   _EUSART2_is_rx_ready
   _SYSTEM_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR1_HasOverflowOccured
   _TMR1_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _fputc
         _isdigit
         _stoa
           _fputc
           _strlen
         _strncmp
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
         _xtoa
           _pad
   _transmitCharacterOverIR
     _EPWM2_LoadDutyValue
     _TMR1_HasOverflowOccured
     _TMR1_WriteTimer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART2_Receive_ISR *
     Absolute function(Fake) *
     _EUSART2_DefaultErrorHandler *
       _EUSART2_RxDataHandler
     _EUSART2_DefaultFramingErrorHandler *
     _EUSART2_DefaultOverrunErrorHandler *
     _EUSART2_RxDataHandler *
   _EUSART2_Transmit_ISR *
   _rxEUSART2ISR *
     i2_printf
       i2_vfprintf
         i2_vfpfcnvrt
           i2_atoi
             i2___wmul
             i2_isdigit
             i2_isspace
           i2_ctoa
             i2_fputc
               i2_putch
                 i2_EUSART1_Write
           i2_fputc
           i2_isdigit
           i2_stoa
             i2_fputc
             i2_strlen
           i2_strncmp
           i2_utoa
             i2___lodiv
             i2___lomod
             i2_pad
               i2_fputc
               i2_fputs
                 i2_fputc
           i2_xtoa
             i2_pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     26      BD       6       73.8%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6E      88       4       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRhhhlh      1D      0       0      16        0.0%
BITBIGSFRllllhl     17      0       0      29        0.0%
BITBIGSFRllhhhh     12      0       0      26        0.0%
BITBIGSFRhl          F      0       0      18        0.0%
BITBIGSFRlllllh      E      0       0      30        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRlhhlhh      7      0       0      20        0.0%
BITBIGSFRllhhl       7      0       0      27        0.0%
BITBIGSFRllhhhh      6      0       0      24        0.0%
BITBIGSFRllhhhh      6      0       0      25        0.0%
BITBIGSFRlhhll       6      0       0      21        0.0%
BITBIGSFRlhl         4      0       0      22        0.0%
BITBIGSFRllhhhh      2      0       0      23        0.0%
BITBIGSFRllllhh      1      0       0      28        0.0%
BITBIGSFRlhhh        1      0       0      19        0.0%
BITBIGSFRhhhll       1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A3      31        0.0%
DATA                 0      0     1A3      33        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 15:19:23 2023

                        ?_EUSART2_RxDataHandler 0001                                              l13 3012  
                                            l53 2F66                                              l67 2DE8  
                                            l79 2FDC                                              l96 2F4A  
                                            l99 2D8E                                              _ri 00DE  
                                            _ti 00DD                             ___wmul@multiplicand 007A  
                                           l310 2F88                                             l303 2E42  
                                           l231 3048                                             l240 302A  
                                           l400 2F82                                             l313 2F9A  
                                           l234 303E                                             l307 2E6A  
                                           l331 3066                                             l243 3034  
                                           l180 2FB2                                             l237 3052  
                                           l334 305C                                             l174 2A24  
                                           l319 3020                                             l193 2B12  
                                           l337 3070                                             l514 06FA  
                                           l364 2E14                                             l294 2FF0  
                                           l286 2C2E                                             l394 2F2A  
                                           l564 308A                                             l484 03B8  
                                           l397 2F74                                             l549 1E82  
                                           l578 2EBA                                             _PR2 000FBB  
        __end_of_EUSART2_SetFramingErrorHandler 304A                  _EUSART2_SetFramingErrorHandler 3040  
                               _timer1ReloadVal 00D8                                             _pad 271A  
                               _TMR2_Initialize 3004                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                      _TXSTA2bits 000F72  
                           __end_ofi2_vfpfcnvrt 105A                        __end_of_EPWM2_Initialize 2F4C  
                                          l1023 1F74                                            l1016 1F54  
                                          l1033 23E4                                            l1026 23C4  
                                          l1301 251E                                            l1304 2562  
                                          l1313 1878                                            l1306 2582  
                                          l1315 1880                                            l1403 2A76  
                                          l1324 192C                                            l1334 1092  
                                          l1431 2DBC                                            l1351 1494  
                                          l1344 1256                                            l1336 109A  
                                          l1256 2E92                                            l1425 1C3A  
                                          l1329 1976                                            l1290 27C8  
                                          l1363 1622                                            l1428 1C42  
                                          l4101 2F68                                            l1285 2762  
                                          l1349 148C                                            l1454 290E  
                                          l1462 2B5A                                            l4031 2F60  
                                          l4023 3004                                            l1439 2BA2  
                                          l1383 0C0A                                            l1472 2234  
                                          l1288 27A6                                            l4025 300C  
                                          l4201 2F1E                                            l5001 1480  
                                          l4041 2DD8                                            l4033 2DBE  
                                          l4131 2AF8                                            l4123 2AC8  
                                          l4051 2F2C                                            l4027 2F4C  
                                          l4203 2F22                                            l5011 14DA  
                                          l5003 14BC                                            l4035 2DCC  
                                          l4043 2DDE                                            l1468 2CEE  
                                          l4133 2B08                                            l4125 2AC8  
                                          l4061 29C6                                            l4029 2F58  
                                          l4205 2F26                                            l5021 151A  
                                          l5013 14EA                                            l5005 14C4  
                                          l5101 07E8                                            l4053 2D5E  
                                          l4045 2DE4                                            l4037 2DCE  
                                          l4221 1DD6                                            l4213 1D92  
                                          l4135 2B0C                                            l4127 2ADA  
                                          l4119 2F9C                                            l4071 29DA  
                                          l4063 29CA                                            l4055 29A6  
                                          l5031 15C0                                            l5023 1520  
                                          l5015 14FA                                            l5007 14CE  
                                          l5111 0818                                            l5103 07F6  
                                          l4047 2FCA                                            l4039 2DD4  
                                          l4231 1E22                                            l4223 1DEA  
                                          l4215 1DB6                                            l4137 2B0E  
                                          l4129 2AF6                                            l4073 29E8  
                                          l4065 29CE                                            l4057 29A8  
                                          l5041 1AF6                                            l5033 15DA  
                                          l5025 1526                                            l5017 1506  
                                          l5009 14D4                                            l5121 08CC  
                                          l5105 07F8                                            l5113 084E  
                                          l5201 2A50                                            l4241 1E6E  
                                          l4233 1E24                                            l4225 1DFA  
                                          l4217 1DB8                                            l4139 2B10  
                                          l4091 2C28                                            l4083 2BEA  
                                          l4075 29F6                                            l4067 29D2  
                                          l4059 29B6                                            l5051 1B60  
                                          l5043 1B0C                                            l5035 15F4  
                                          l5019 150A                                            l5027 1584  
                                          l5131 0942                                            l5123 08DA  
                                          l5115 0862                                            l5107 080A  
                                          l5203 2A6C                                            l4227 1E06  
                                          l4235 1E38                                            l4219 1DCC  
                                          l4181 2E50                                            l4085 2BFE  
                                          l4077 2A22                                            l4069 29D6  
                                          l4093 2DEA                                            l5053 1B68  
                                          l5029 15A2                                            l5037 1602  
                                          l5141 09BE                                            l5133 0966  
                                          l5125 08FA                                            l5117 0886  
                                          l4237 1E4A                                            l4229 1E0E  
                                          l5221 0122                                            l5213 00F8  
                                          l4183 2E56                                            l4175 2FDE  
                                          l4087 2C0C                                            l4095 2DF6  
                                          l4191 2F0A                                            l5063 1BDC  
                                          l5055 1B70                                            l5047 1B10  
                                          l5151 0A8A                                            l5143 09DA  
                                          l5135 099A                                            l5119 08BC  
                                          l5207 2E6C                                            l4239 1E6C  
                                          l5311 0448                                            l5303 03C8  
                                          l5231 015E                                            l5223 0130  
                                          l5215 00FE                                            l4185 2E64  
                                          l4089 2C1A                                            l4097 2E12  
                                          l4193 2F0E                                            l5065 1C0C  
                                          l5057 1BA4                                            l5049 1B2C  
                                          l5081 219C                                            l5073 2156  
                                          l5161 0B12                                            l5145 09F6  
                                          l5129 0908                                            l5209 2E76  
                                          l5321 048E                                            l5313 045C  
                                          l5305 03D4                                            l5241 0188  
                                          l5233 0172                                            l5225 0132  
                                          l5217 0110                                            l4187 2E68  
                                          l4179 2E42                                            l4099 3088  
                                          l4195 2F12                                            l5067 1C1E  
                                          l5083 21B8                                            l5075 2182  
                                          l5171 0B96                                            l5163 0B4A  
                                          l5147 0A5A                                            l5139 09AE  
                                          l5323 049A                                            l5331 04EA  
                                          l5315 046A                                            l5307 03DA  
                                          l5251 01B6                                            l5243 018A  
                                          l5235 0176                                            l5227 0146  
                                          l5219 0114                                            l4197 2F16  
                                          l5085 21D4                                            l5165 0B6E  
                                          l5157 0ABA                                            l5093 07A4  
                                          l5341 0540                                            l5333 0508  
                                          l5317 0476                                            l5309 03F4  
                                          l5261 01FC                                            l5253 01C4  
                                          l5245 018C                                            l5237 0178  
                                          l5229 015A                                            ?_pad 008A  
                                          l3903 305E                                            l4199 2F1A  
                                          l5087 21E6                                            l5079 218E  
                                          l5167 0B7C                                            l5175 0BCE  
                                          l5159 0AEE                                            l5095 07C8  
                                          l5351 0584                                            l5343 0546  
                                          l5335 0516                                            l5319 0482  
                                          l5271 025A                                            l5263 0212  
                                          l5255 01D2                                            l5247 019A  
                                          l5239 0186                                            l3905 3054  
                                          l5089 2210                                            l4801 2B34  
                                          l5169 0B86                                            l5097 07D6  
                                          l5353 0588                                            l5361 05B4  
                                          l5345 055A                                            l5337 0522  
                                          l5329 04A6                                            l5273 026C  
                                          l5281 02D6                                            l5265 0224  
                                          l5257 01E0                                            l5249 01A8  
                                          l3907 3068                                            l4811 1E84  
                                          l4803 2B3A                                            l5099 07E4  
                                          l5179 0BE0                                            l5371 0604  
                                          l5363 05C4                                            l5355 058C  
                                          l5339 052E                                            l5291 0390  
                                          l5283 0374                                            l5275 027E  
                                          l5267 0236                                            l5259 01F4  
                                          l4805 2E94                                            l4901 24F0  
                                          l4821 1EDA                                            l4813 1E90  
                                          l5197 2A26                                            l5381 06AE  
                                          l5373 062E                                            l5365 05C8  
                                          l5349 0574                                            l5293 039C  
                                          l5285 0386                                            l5269 0248  
                                          l4807 2EB2                                            l4911 253E  
                                          l4903 2502                                            l4831 1F4E  
                                          l4823 1EEC                                            l4815 1EB0  
                                          l5199 2A32                                            l5391 0710  
                                          l5383 06C0                                            l5375 0634  
                                          l5367 05D8                                            l5359 05A2  
                                          l5295 03A2                                            l5279 0290  
                                          l4913 2544                                            l4921 180E  
                                          l4825 1F1A                                            l4817 1EB8  
                                          l4841 235E                                            l4833 2314  
                                          l5385 06E0                                            l5377 0650  
                                          l5369 05F6                                            l5297 03BE  
                                          l3891 304A                                            l3883 302C  
                                          l4915 2570                                            l4907 2516  
                                          l4931 1856                                            l4923 1822  
                                          l4827 1F3A                                            l4819 1ECC  
                                          l4843 238C                                            l4835 2334  
                                          l4851 272A                                            l5387 06EA  
                                          l5379 068E                                            l5395 0728  
                                          l3885 3022                                            l4781 3018  
                                          l4909 252A                                            l4941 18DA  
                                          l4925 182A                                            l4917 17F4  
                                          l4829 1F3C                                            l4845 23AC  
                                          l4837 233C                                            l4861 2782  
                                          l4853 273E                                            l5389 06FE  
                                          l5397 078E                                            l3887 3040  
                                          l4791 28C6                                            l4783 2878  
                                          l4871 2CC8                                            l4943 18E6  
                                          l4935 18A2                                            l4927 183E  
                                          l4919 1806                                            l4847 23BE  
                                          l4839 2350                                            l4863 2788  
                                          l4855 274E                                            l5671 0740  
                                          l3889 3036                                            l4881 2B5C  
                                          l4777 2F88                                            l4793 28FC  
                                          l4785 288C                                            l4873 2CE0  
                                          l4953 193E                                            l4945 1904  
                                          l4937 18B6                                            l4929 1846  
                                          l4865 27B4                                            l4857 275A  
                                          l4849 271A                                            l4961 106A  
                                          l5673 0840                                            l4883 2B62  
                                          l4779 2F96                                            l4787 289E  
                                          l4867 2CB6                                            l4955 1952  
                                          l4947 190A                                            l4939 18BC  
                                          l4859 276E                                            l4971 10D4  
                                          l4963 106C                                            l5675 0AD8  
                                          l5667 02A8                                            l4877 2D90  
                                          l4885 2B76                                            l5677 1B8E  
                                          l4789 28A8                                            l4893 24B6  
                                          l4869 2CC2                                            l4957 1958  
                                          l4949 190E                                            l4797 2B14  
                                          l4973 10DA                                            l4981 11C2  
                                          l4965 1086                                            l5669 04BC  
                                          l4887 2B98                                            l4895 24CA  
                                          l4799 2B22                                            l4983 11D6  
                                          l4991 1236                                            l4975 1152  
                                          l4967 10C2                                            l4959 105A  
                                          l4889 2B9C                                            l4897 24D6  
                                          l4985 11F4                                            l4977 1158  
                                          l4969 10CA                                            l4899 24E2  
                                          l4987 120E                                            l4979 115E  
                                          l4995 1454                                            l4989 1228  
                                          l4997 1464                                            l4999 1466  
                                          STR_1 7FD5                                            STR_2 7E0C  
                                          STR_3 7E85                                            STR_4 7C19  
                                          STR_5 7DBB                                            STR_6 7FEE  
                                          STR_7 7F77                                            STR_8 7CD7  
                                          STR_9 7FCA                                 fp__rxEUSART2ISR 0000  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u4000 1EB0  
                                          u4001 1EAC                                            u4010 1EDA  
                                          u4011 1ED6                                            u4100 2CE0  
                                          u4020 1F1A                                            u4101 2CDC  
                                          u4021 1F16                                            u4110 2DB6  
                                          u4030 2334                                            u4111 2DB0  
                                          u4031 2330                                            u4120 2DB8  
                                          u4040 235E                                            u4201 17FE  
                                          u4041 235A                                            u4130 2B76  
                                          u4210 1822                                            u4050 238C  
                                          u4131 2B72                                            u4211 181E  
                                          u4051 2388                                            u3500 2B08  
                                          u4140 2B98                                            u4220 1856  
                                          u4060 272A                                            u4300 1086  
                                          u3501 2B04                                            u4141 2B94  
                                          u4221 1852                                            u4061 2726  
                                          u4301 1082                                            u4150 24CA  
                                          u4230 1874                                            u4070 274E  
                                          u4310 11D6                                            u3430 2DCC  
                                          u4151 24C6                                            u4231 1870  
                                          u4071 274A                                            u4311 11D2  
                                          u3431 2DC8                                            u3600 2E50  
                                          u4160 24F0                                            u4240 189E  
                                          u4080 27A6                                            u4320 11F4  
                                          u4400 15A2                                            u3440 2FDA  
                                          u3601 2E4C                                            u4161 24EC  
                                          u4241 189A                                            u4081 27A2  
                                          u4321 11F0                                            u4401 159E  
                                          u3441 2FD4                                            u3610 2E64  
                                          u3450 2F82                                            u4170 2512  
                                          u4250 18DA                                            u4090 27B4  
                                          u4330 120E                                            u4410 15C0  
                                          u3611 2E60                                            u3451 2F7E  
                                          u4171 250E                                            u4251 18D6  
                                          u4091 27B0                                            u4331 120A  
                                          u4411 15BC                                            u4180 2562  
                                          u4260 192C                                            u4500 21B8  
                                          u4340 1228                                            u4420 15DA  
                                          u3620 1DCC                                            u4181 255E  
                                          u4261 1928                                            u4501 21B4  
                                          u4341 1224                                            u4421 15D6  
                                          u3621 1DC8                                            u3470 2FB0  
                                          u4190 2570                                            u4270 193A  
                                          u4510 21D4                                            u4350 1236  
                                          u4430 15F4                                            u3446 2FDC  
                                          u3630 1DEA                                            u3471 2FAA  
                                          u4191 256C                                            u4271 1936  
                                          u4511 21D0                                            u4351 1232  
                                          u4431 15F0                                            u3631 1DE6  
                                          u3480 2FB2                                            u4280 1976  
                                          u4520 21E6                                            u4440 1602  
                                          u4360 1464                                            u4600 09DA  
                                          u3640 1E38                                            u4281 1972  
                                          u4521 21E2                                            u4441 15FE  
                                          u4361 1460                                            u4601 09D6  
                                          u3641 1E34                                            u3490 2ADA  
                                          u4450 1B2C                                            u4530 2210  
                                          u4290 106A                                            u4370 1480  
                                          u4610 09F6                                            u3650 1E4A  
                                          u3491 2AD6                                            u4451 1B28  
                                          u4531 220C                                            u4291 1066  
                                          u4371 147C                                            u4611 09F2  
                                          u3651 1E46                                            u4460 1B5C  
                                          u4380 14EA                                            u4620 0B12  
                                          u4540 07C8                                            u3660 1E82  
                                          u4700 01F4                                            u4461 1B58  
                                          u4381 14E6                                            u4621 0B0E  
                                          u4541 07C4                                            u3661 1E7E  
                                          u4701 01F0                                            u3590 2FEE  
                                          u4470 1C0C                                            u4390 155E  
                                          u4630 0B4A                                            u4550 0862  
                                          u4710 03B8                                            u3591 2FE8  
                                          u4471 1C08                                            u4631 0B46  
                                          u4551 085E                                            u4711 03B4  
                                          u4480 1C1E                                            u4640 0B6E  
                                          u4560 0886                                            u4720 03F0  
                                          u4481 1C1A                                            u4641 0B6A  
                                          u4561 0882                                            u4721 03EC  
                                          u3930 2F96                                            u4490 2182  
                                          u4570 08CC                                            u4650 2A6C  
                                          u4730 045C                                            u3931 2F92  
                                          u4491 217E                                            u4395 154C  
                                          u4571 08C8                                            u4651 2A68  
                                          u4731 0458                                            u3596 2FF0  
                                          u3940 288C                                            u4580 0942  
                                          u4740 0540                                            u3941 2888  
                                          u4581 093E                                            u4741 053C  
                                          u4661 0108                                            u3950 289E  
                                          u4590 0966                                            u4750 0570  
                                          u4670 0146                                            u3951 289A  
                                          u4591 0962                                            u4751 056C  
                                          u4671 0142                                            u3960 28C6  
                                          u4760 05B4                                            u4680 015A  
                                          u3961 28C2                                            u4761 05B0  
                                          u4681 0156                                            u3970 28FC  
                                          u4770 0650                                            u4690 0172  
                                          u3971 28F8                                            u4771 064C  
                                          u4691 016E                                            u3980 2B5A  
                                          u4780 06C0                                            u3981 2B56  
                                          u4781 06BC                                            u3991 1E8A  
                       _TMR1_HasOverflowOccured 2FCA                                            _TMR1 000FCE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                         ??_EUSART2_Receive_ISR 0001                                   _EUSART1_Write 2F84  
                                          _dbuf 0126                                            _atoi 1AF6  
                                          _ctoa 24B6                                            _main 00F8  
                                 ?_EUSART1_Read 0001                                            _prec 00D0  
                                 ?_EUSART2_Read 0001                                            pad@i 0091  
                                          pad@p 008E                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0093  
                                          fsr2l 000FD9                                            _stoa 17F4  
                                          btemp 005F                                            _rsum 0124  
                                          _utoa 105A                                            _tsum 0123  
                                          _xtoa 1454                                            prodh 000FF4  
                                          prodl 000FF3                                            start 00F4  
                               __end_ofi2_fputc 29A6                                 __end_ofi2_fputs 2C74  
                  __end_of_EUSART2_Transmit_ISR 2CB6                                 __end_ofi2_putch 307C  
                                  ___param_bank 000000                                           ??_pad 0090  
                                    i2_vfprintf 2A78                   __end_of_OSCILLATOR_Initialize 2F84  
                                         ?_atoi 007E                                           ?_ctoa 0083  
                                         ?_main 0001                                           STR_10 7FA6  
                                         STR_11 7FB2                                           STR_12 7FBE  
                                         STR_20 7D0B                                           STR_13 7F99  
                                         STR_21 7EEE                                           STR_14 7FA6  
                                         STR_30 7F8B                                           STR_22 7E2E  
                                         STR_15 7CD7                                           STR_31 7F22  
                                         STR_23 7C9F                                           STR_16 7F4F  
                                         STR_32 7F31                                           STR_24 7EDB  
                                         STR_40 7C5F                                           STR_25 7CD7  
                                         STR_17 7FE7                                           STR_33 7F40  
                                         STR_41 7E9B                                           STR_50 7FF8  
                                         STR_26 7FDF                                           STR_34 7F12  
                                         STR_18 7EC6                                           STR_42 7EB1  
                                         STR_27 7D09                                           STR_43 7F01  
                                         STR_19 7E6D                                           STR_35 7E4E  
                                         STR_28 7D09                                           STR_44 7FF3  
                                         STR_36 7DE5                                           STR_37 7FFC  
                                         STR_45 7F5E                                           STR_29 7D65  
                                         STR_46 7F6D                                           STR_38 7D90  
                                         STR_47 7F7C                                           STR_39 7D39  
                                         STR_48 7FF8                                           ?_stoa 0083  
                                         ?_utoa 0095                                 __end_of___lodiv 1F76  
                                         ?_xtoa 0095                                           _T1CON 000FCD  
                                         _T2CON 000FBA                                 __end_of___lomod 23E6  
                                         i2l205 2CB2                                           i2l222 308E  
                                         i2l310 2FB6                                           i2l215 2718  
                                         i2l208 2CB4                                           i2l225 3080  
                                         i2l313 2FC8                                           i2l219 2E40  
                                         i2l228 3086                                           i2l319 307A  
                                         i2l532 2064                                           i2l570 0084  
                                         i2l571 00C0                                           i2l575 00C0  
                                         i2l578 2F08                                    vfpfcnvrt@fmt 00BA  
                                         _TMR1H 000FCF                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           i2_pad 27CA  
                                    i2isdigit@c 0001                                           _flags 00DA  
                                         _fputc 2878                                           _fputs 2B14  
                               __end_of_isdigit 2DBE                                           _rcsum 0122  
                                         atoi@n 0085                                           pad@fp 008A  
                                         atoi@s 007E                                           _width 00CE  
                                         ctoa@c 0085                                           _putch 3014  
                                         ctoa@l 0087                                           ctoa@w 0089  
                                         main@i 01AA                                 __end_of_isspace 2BA4  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 2F68  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                __end_ofi2___wmul 2F0A  
                                ??_EUSART1_Read 0078                                           plusw1 000FE3  
                                         plusw2 000FDB                                  ??_EUSART2_Read 0078  
                                         stoa@i 008F                                           stoa@l 0097  
                                         stoa@p 0095                                           stoa@s 0085  
                                         stoa@w 0091                                           ttemp5 0060  
                                         ttemp6 0063                                           ttemp7 0067  
                                         utoa@d 0097                                           utoa@i 00B3  
                                         utoa@n 00AB                                           utoa@p 00A7  
                                         utoa@w 00A9                                           status 000FD8  
                                    i2isspace@c 0001                                           wtemp8 0060  
                                         xtoa@c 00B7                                           xtoa@d 0097  
                                         xtoa@i 00B5                                           xtoa@n 00AD  
                                         xtoa@p 00A9                                           xtoa@w 00AB  
                               __end_of_strncmp 2236                                ___lodiv@dividend 0078  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 2DBE  
                                 ?_rxEUSART2ISR 0001                                __end_ofi2_printf 2EE4  
         __end_of_EUSART2_SetTxInterruptHandler 302C                   _EUSART2_SetTxInterruptHandler 3022  
                              __end_ofi2_strlen 2D5E                                 __initialization 2BA4  
                                  __end_of_atoi 1C44                                    __end_of_ctoa 2584  
                    __end_of_EUSART1_Initialize 2C30                                    __end_of_main 07A4  
                                  __end_of_stoa 1978                                      i2printf@ap 005C  
                                  __end_of_utoa 1258                                    __end_of_xtoa 1624  
                                 main@bitPeriod 019D                         __end_of_TMR2_Initialize 3014  
                   ?_INTERRUPT_InterruptManager 0001                                      i2stoa@nuls 0011  
                                   i2_vfpfcnvrt 0C0C                                   i2vfpfcnvrt@ap 0045  
                                 i2vfpfcnvrt@cp 0058                                   i2vfpfcnvrt@fp 0041  
                                   i2_xtoa$1956 0030                                          ??_atoi 0080  
                                        ??_ctoa 0086                                          ??_main 00CC  
                                        ??_stoa 0087                                          ??_utoa 009F  
                                        ??_xtoa 009F                                   __activetblptr 000002  
           __end_of_EUSART2_DefaultErrorHandler 3088                     _EUSART2_DefaultErrorHandler 3082  
                                        ?i2_pad 0013                        ?_transmitCharacterOverIR 007C  
                              ___lodiv@quotient 0088                                      i2strncmp@l 0008  
                                    i2strncmp@n 0005                                      i2strncmp@r 000A  
                     ??_TMR1_HasOverflowOccured 0078                      __end_of_EUSART2_Initialize 2A26  
                      _eusart2TxBufferRemaining 00E5                                          ?_fputc 007A  
                                        ?_fputs 0083                                          _CCPR2H 000F68  
                                        _CCPR2L 000F67                                  _transmitBuffer 0146  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 0078  
                                        i2l1023 2154                                          i2l1016 2134  
                                        i2l1033 24B4                                          i2l1026 2494  
                                        i2l1301 25EA                                          i2l1304 262C  
                                        i2l1313 19F8                                          i2l1306 264E  
                                        i2l1315 1A00                                          i2l1403 2AC6  
                                        i2l1324 1AAA                                          i2l1334 1290  
                                        i2l1431 308C                                          i2l1351 1664  
                                        i2l1344 1452                                          i2l1336 1298  
                                        i2l1256 2EE2                                          i2l1425 1D84  
                                        i2l1329 1AF4                                          i2l3201 2C52  
                                        i2l1290 2876                                          i2l3211 2EE4  
                                        i2l1363 17F2                                          i2l1428 1D8C  
                                        i2l3213 2F00                                          i2l3221 2090  
                                        i2l1285 2810                                          i2l1349 165C  
                                        i2l4013 2A78                                          i2l1454 29A4  
                                        i2l1462 2C72                                          i2l1439 2D26  
                                        i2l3231 20FA                                          i2l3223 2098  
                                        i2l1383 1058                                          i2l4015 2A84  
                                        i2l1472 2312                                          i2l1288 2852  
                                        i2l3401 260A                                          i2l3233 211A  
                                        i2l3225 20AC                                          i2l3217 2066  
                                        i2l3241 2404                                          i2l4017 2AA0  
                                        i2l4113 2EBC                                          i2l3155 2FB6  
                                        i2l3163 3074                                          i2l3171 2934  
                                        i2l3403 260E                                          i2l3411 1992  
                                        i2l3235 211C                                          i2l3227 20BA  
                                        i2l3219 2072                                          i2l3251 247C  
                                        i2l3243 240C                                          i2l4019 2ABC  
                                        i2l4115 2EC4                                          i2l1468 2D5C  
                                        i2l3157 2FC4                                          i2l3173 293E  
                                        i2l3405 263C                                          i2l3421 19D6  
                                        i2l3413 19A4                                          i2l3237 212E  
                                        i2l3229 20CC                                          i2l3253 248E  
                                        i2l3245 2420                                          i2l3261 27FC  
                                        i2l3501 16AA                                          i2l4151 2CA8  
                                        i2l4143 2C74                                          i2l3175 295C  
                                        i2l3167 2910                                          i2l3431 1A5A  
                                        i2l3415 19AC                                          i2l3407 1978  
                                        i2l3247 242E                                          i2l3239 23E6  
                                        i2l3271 2862                                          i2l3263 2808  
                                        i2l3255 27CA                                          i2l3511 16EA  
                                        i2l3503 16BA                                          i2l4081 3082  
                                        i2l4153 2CAC                                          i2l4145 2C86  
                                        i2l3273 308C                                          i2l3281 2D26  
                                        i2l3177 2992                                          i2l3169 2922  
                                        i2l3433 1A66                                          i2l3425 1A24  
                                        i2l3417 19C0                                          i2l3409 198A  
                                        i2l3249 245C                                          i2l3265 281C  
                                        i2l3257 27DA                                          i2l3521 178E  
                                        i2l3513 16F0                                          i2l3505 16CA  
                                        i2l4161 2680                                          i2l4147 2C96  
                                        i2l3275 2CF0                                          i2l3531 1C44  
                                        i2l3291 2D50                                          i2l3443 1ABE  
                                        i2l3435 1A84                                          i2l3427 1A38  
                                        i2l3419 19C8                                          i2l3195 2C30  
                                        i2l3267 2830                                          i2l3259 27EE  
                                        i2l3451 1268                                          i2l3523 17A8  
                                        i2l3515 16F6                                          i2l3507 16D6  
                                        i2l4251 1F9E                                          i2l4243 1F76  
                                        i2l4171 26F4                                          i2l4163 269C  
                                        i2l4155 2650                                          i2l4149 2C98  
                                        i2l3277 2CF0                                          i2l3541 1CAC  
                                        i2l3533 1C58                                          i2l3285 2D28  
                                        i2l3445 1AD2                                          i2l3437 1A88  
                                        i2l3429 1A3C                                          i2l3197 2C3C  
                                        i2l3269 2834                                          i2l3461 12D2  
                                        i2l3453 126A                                          i2l3525 17C2  
                                        i2l3509 16DA                                          i2l3517 1754  
                                        i2l4261 1FE0                                          i2l4253 1FB0  
                                        i2l4245 1F84                                          i2l4173 2714  
                                        i2l4165 26AA                                          i2l4157 2662  
                                        i2l4079 307C                                          i2l3279 2D04  
                                        i2l3543 1CB4                                          i2l3391 25BE  
                                        i2l3383 2584                                          i2l3287 2D34  
                                        i2l3447 1AD6                                          i2l3439 1A8C  
                                        i2l3199 2C4E                                          i2l3463 12D8  
                                        i2l3471 13BE                                          i2l3455 1284  
                                        i2l3519 1770                                          i2l3527 17D2  
                                        i2l4271 2020                                          i2l4263 1FE4  
                                        i2l4255 1FC2                                          i2l4247 1F88  
                                        i2l4167 26BC                                          i2l4159 2670  
                                        i2l3553 1D26                                          i2l3545 1CBC  
                                        i2l3537 1C5C                                          i2l3393 25D0  
                                        i2l3385 2598                                          i2l3289 2D38  
                                        i2l3473 13D0                                          i2l3481 1432  
                                        i2l3465 134E                                          i2l3457 12C0  
                                        i2l3449 1258                                          i2l3801 0C7E  
                                        i2l4273 2024                                          i2l4265 1FF4  
                                        i2l4257 1FD2                                          i2l4281 2038  
                                        i2l4169 26D6                                          i2l4521 0064  
                                        i2l3555 1D56                                          i2l3547 1CF0  
                                        i2l3539 1C78                                          i2l3387 25A4  
                                        i2l3571 227A                                          i2l3563 2236  
                                        i2l3475 13EE                                          i2l3467 1354  
                                        i2l3459 12C8                                          i2l3491 1650  
                                        i2l3811 0D2E                                          i2l3803 0CB2  
                                        i2l4275 2028                                          i2l4267 1FFC  
                                        i2l4259 1FDA                                          i2l4523 0092  
                                        i2l4515 003A                                          i2l3901 2E3E  
                                        i2l3557 1D68                                          i2l3397 25E2  
                                        i2l3389 25B0                                          i2l3573 2296  
                                        i2l3565 2260                                          i2l3477 1408  
                                        i2l3469 135A                                          i2l3493 168C  
                                        i2l3485 1624                                          i2l3821 0DA2  
                                        i2l3813 0D3C                                          i2l3805 0CC4  
                                        i2l4277 202E                                          i2l4269 200E  
                                        i2l4525 00A0                                          i2l4517 0048  
                                        i2l3399 25F6                                          i2l3575 22B2  
                                        i2l3479 1422                                          i2l3495 1694  
                                        i2l3487 1634                                          i2l3831 0E1C  
                                        i2l3823 0DC6                                          i2l3815 0D5C  
                                        i2l3807 0CE8                                          i2l4519 0056  
                                        i2l3577 22C4                                          i2l3569 226C  
                                        i2l3497 169E                                          i2l3489 1636  
                                        i2l3841 0EE0                                          i2l3833 0E38  
                                        i2l3825 0DF8                                          i2l3809 0D1E  
                                        i2l3579 22EE                                          i2l3499 16A4  
                                        i2l3851 0F68                                          i2l3835 0E54  
                                        i2l3819 0D6A                                          i2l3861 0FE6  
                                        i2l3853 0F9E                                          i2l3837 0EB0  
                                        i2l3829 0E0C                                          i2l3855 0FC2  
                                        i2l3847 0F10                                          i2l3791 0C50  
                                        i2l3783 0C0C                                          i2l3857 0FCE  
                                        i2l3865 101E                                          i2l3849 0F44  
                                        i2l3793 0C5C                                          i2l3785 0C30  
                                        i2l3859 0FD6                                          i2l3795 0C60  
                                        i2l3787 0C3E                                          i2l3893 2E16  
                                        i2l3797 0C72                                          i2l3789 0C4C  
                                        i2l3869 1030                                          i2l3895 2E28  
                                        i2l3897 2E2A                                          i2l5681 0CA4  
                                        i2l3899 2E3A                                          i2l5683 0F2E  
                                        i2l5685 1CDA                                          i2l5679 204E  
                                 i2putch@txData 0002                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                          _RCREG2 000F74  
                                     ??i2_fputs 0010                                          _RCSTA1 000FAB  
                                        _RCSTA2 000F71                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 0187  
                                        _SPBRG1 000FAF                                          _SPBRG2 000F75  
                                     ??i2_putch 0002                                          _TXREG1 000FAD  
                                        _TXREG2 000F73                                  ??_rxEUSART2ISR 006A  
                                        _TXSTA1 000FAC                                          _TXSTA2 000F72  
                                        i2_atoi 1C44                                          i2_ctoa 2584  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                          i2_stoa 1978  
                                        i2_utoa 1258                                          i2_xtoa 1624  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 00C8  
                                 i2vfprintf@fmt 0062                                          ___wmul 2E94  
                                     ??___lodiv 0088                                       ??___lomod 0088  
                                   ?i2_vfprintf 0060                        ?_EUSART1_SetErrorHandler 0078  
                                        clear_0 2BCA                                          clear_1 2BD6  
                                        isa$std 000001                     _EUSART2_FramingErrorHandler 00D2  
                                        _printf 2E6C                                          pad@buf 008C  
              ??_EUSART1_SetOverrunErrorHandler 007A                 ?_EUSART1_SetOverrunErrorHandler 0078  
                                        ctoa@fp 0083                                          _strlen 2CB6  
                             ??i2_EUSART1_Write 0001                                          fputc@c 007A  
                                        fputs@c 0087                                          fputs@i 0088  
                                        fputs@s 0083                                       ??_isdigit 007A  
                             __end_ofi2___lodiv 2156                               __end_ofi2___lomod 24B6  
                                  __mediumconst 7C18                                       ??_isspace 007A  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                            _EUSART2_Transmit_ISR 2C74  
                                        stoa@cp 0093                                          stoa@fp 0083  
                              __end_of_vfprintf 2A78                               i2___lodiv@divisor 0009  
                               ??_EUSART1_Write 0078                             _EPWM2_LoadDutyValue 2D5E  
                                        utoa@fp 0095                               i2___lodiv@counter 0019  
                       __end_of_TMR1_WriteTimer 2DEA                                          xtoa@fp 0095  
                                     ??_strncmp 007E                                 _eusart2RxBuffer 0108  
                              ?_TMR1_Initialize 0001                               __end_ofi2_isdigit 308E  
                             _SYSTEM_Initialize 2F0A                                 _eusart2TxBuffer 0110  
                                    __accesstop 0060                         __end_of__initialization 2BDC  
                             __end_ofi2_isspace 2D28                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                         ??_EUSART2_RxDataHandler 0001  
                             __end_ofi2_strncmp 2314                                   __end_ofi2_pad 2878  
                                __pcstackCOMRAM 0001                            ?_EPWM2_LoadDutyValue 0078  
                                  __pidataBANK1 2FF2                             ??_SYSTEM_Initialize 007A  
                         rxEUSART2ISR@character 005E                                   __end_of_fputc 2910  
                                 __end_of_fputs 2B5C                  ?_EUSART2_SetTxInterruptHandler 0078  
                                 __end_of_putch 3022                                     i2printf@fmt 0066  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read 2E6C  
                          __end_of_EUSART2_Read 2B14                                       ?i2___wmul 0001  
                      ?_EUSART2_SetErrorHandler 0078                                         ??i2_pad 0019  
                         ?_EUSART2_Transmit_ISR 0001                               ?_EPWM2_Initialize 0001  
                                i2vfpfcnvrt@fmt 0043                                       ?i2_printf 0066  
                                     ?i2_strlen 0001                           i2EUSART1_Write@txData 0001  
                                       ??_fputc 007E                       __end_of_SYSTEM_Initialize 2F2C  
                                       ??_fputs 0087                              ??_EPWM2_Initialize 0078  
                                       ??_putch 0079                                   _eusart2RxHead 00E4  
                                 _eusart2TxHead 00E7                                      __pbssBANK0 00CE  
                                    __pbssBANK1 0100                                   _eusart2RxTail 00E3  
                                 _eusart2TxTail 00E6                ??_EUSART2_SetFramingErrorHandler 007A  
               ?_EUSART2_SetFramingErrorHandler 0078                                         ?i2_atoi 0007  
                                       ?i2_ctoa 000C                                         ?i2_stoa 000C  
                                       ?i2_utoa 001E                                         ?i2_xtoa 001E  
                                   i2strncmp@_l 0001                                     i2strncmp@_r 0003  
               __end_of_EUSART1_SetErrorHandler 3072                           ??_EPWM2_LoadDutyValue 007A  
                             rxEUSART2ISR@state 00DB                                         ?___wmul 0078  
                                       _CCP2CON 000F66                                         _ECCP2AS 000F64  
                                       ?_printf 0195                                         ?_strlen 0078  
        __end_of_EUSART1_SetFramingErrorHandler 3068                  _EUSART1_SetFramingErrorHandler 305E  
                                    ??i2___wmul 0005                           _eusart2RxStatusBuffer 0100  
                          __end_of_rxEUSART2ISR 2066                               i2___lomod@divisor 0009  
                                       _OSCCON2 000FD2                     __end_of_EUSART2_Receive_ISR 271A  
                             i2___lomod@counter 0011                                      ??i2_printf 005C  
                                       _OSCTUNE 000F9B                                         _PWM2CON 000F65  
                                       _SPBRGH1 000FB0                                         _SPBRGH2 000F76  
                                    ??i2_strlen 0003                                ?_TMR1_WriteTimer 0078  
                              ___lomod@dividend 0078                                         i2_fputc 2910  
                                       i2_fputs 2C30                                         i2atoi@n 000E  
                                       i2pad@fp 0013                                         i2atoi@s 0007  
                                       i2ctoa@c 000E                                         i2_putch 3072  
                                       i2ctoa@l 0010                                         i2ctoa@w 0012  
                                       i2stoa@i 0018                                         i2stoa@l 0020  
                                       i2stoa@p 001E                                         i2stoa@s 000E  
                                       i2stoa@w 001A                                         i2utoa@d 0020  
                                       i2utoa@i 003C                                         i2utoa@n 0034  
                                       i2utoa@p 0030                                         i2utoa@w 0032  
                                       i2xtoa@c 0040                                         i2xtoa@d 0020  
                                       i2xtoa@i 003E                                         i2xtoa@n 0036  
                                       i2xtoa@p 0032                                         i2xtoa@w 0034  
                                       __Hparam 0000                                         __Lparam 0000  
                fp__EUSART2_DefaultErrorHandler 0000                                         ___lodiv 1E84  
                                       ___lomod 2314                                       ?_vfprintf 00C2  
                                i2vfprintf@cfmt 005A                             _EUSART1_is_rx_ready 2FDE  
                                  ?i2_vfpfcnvrt 0041                                         __pcinit 2BA4  
               __end_of_EUSART2_SetErrorHandler 3054                                         __ramtop 0600  
                                       __ptext0 00F8                                         __ptext1 1D8E  
                                       __ptext2 2DBE                                         __ptext3 2FCA  
                                       __ptext4 2D5E                                         __ptext5 2E6C  
                                       __ptext6 2A26                                         __ptext7 07A4  
                                       __ptext8 1454                                         __ptext9 105A  
                                     _T1CONbits 000FCD           fp__EUSART2_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART2_DefaultOverrunErrorHandler 3082            ??_EUSART2_DefaultOverrunErrorHandler 0001  
           ?_EUSART2_DefaultOverrunErrorHandler 0001              _EUSART2_DefaultOverrunErrorHandler 307C  
                         _OSCILLATOR_Initialize 2F68                          ??_EUSART2_Transmit_ISR 0001  
                                     _T2CONbits 000FBA                                         _isdigit 2D90  
                                 _receiveBuffer 0166                              _EUSART1_Initialize 2BEA  
                      ??_PIN_MANAGER_Initialize 0078                                         _isspace 2B5C  
                                       atoi@neg 0083                                         main@cmd 01A7  
                                       _strncmp 2156                            end_of_initialization 2BDC  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 007C                                   __Lmediumconst 7C18  
                   _EUSART1_OverrunErrorHandler 011A                                         fputs@fp 0085  
                           i2___wmul@multiplier 0001                              _EUSART2_Initialize 29A6  
                               i2_EUSART1_Write 2FB4                               __end_of_vfpfcnvrt 0C0C  
                                       postdec1 000FE5                                         postdec2 000FDD  
                            i2___lodiv@dividend 0001                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 018B                                    ??i2_vfprintf 005A  
                                    ??_vfprintf 00C8                            ??_EUSART1_Initialize 007A  
                           ?_EUSART2_Initialize 0001                                         strlen@a 007A  
                           _EUSART2_is_rx_ready 2F9C                                         strlen@s 0078  
                           EUSART1_Write@txData 0078                                       i2___lodiv 2066  
                         ??_EUSART1_is_rx_ready 0078                                       i2___lomod 23E6  
                          ??_EUSART2_Initialize 007A                            ?_EUSART2_is_rx_ready 0001  
                            i2___lodiv@quotient 0011                              __end_ofi2_vfprintf 2AC8  
                                  _EUSART1_Read 2E42                                    _EUSART2_Read 2AC8  
                                    main@letter 01A9                                       i2_isdigit 308C  
                                __end_ofi2_atoi 1D8E                                  __end_ofi2_ctoa 2650  
                                     i2_isspace 2CF0                                  __end_ofi2_stoa 1AF6  
                                __end_ofi2_utoa 1454                                  __end_ofi2_xtoa 17F4  
                 __end_of_EUSART2_RxDataHandler 2E42                                       i2atoi@neg 000C  
                  __end_of_INTERRUPT_Initialize 308C                                       i2_strncmp 2236  
                                   vfpfcnvrt@ap 00BC                                     vfpfcnvrt@cp 0193  
                                   vfpfcnvrt@fp 00B8                                  __end_of___wmul 2EBC  
                                     i2fputc@fp 0005                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000E                        ?_TMR1_HasOverflowOccured 0001  
                              i2___wmul@product 0005                                  __end_of_printf 2E94  
                                __end_of_strlen 2CF0                             start_initialization 2BA4  
                               ___lodiv@divisor 0080                                 ___lodiv@counter 0090  
                                   __end_of_pad 27CA   EUSART2_SetRxInterruptHandler@interruptHandler 0078  
 EUSART2_SetTxInterruptHandler@interruptHandler 0078                                    i2vfpfcnvrt@c 004F  
                                    ?i2___lodiv 0001                                      ?i2___lomod 0001  
                                   putch@txData 0079                           ??_EUSART2_is_rx_ready 0078  
                         __end_of_EUSART1_Write 2F9C                                       i2strlen@a 0003  
                                     i2strlen@s 0001                         __end_ofi2_EUSART1_Write 2FCA  
                                      ??i2_atoi 0009                                        ??i2_ctoa 000F  
                                      ??i2_stoa 0010                                        ??i2_utoa 0028  
                                      ??i2_xtoa 0028                                      ?i2_isdigit 0001  
                                  _rxEUSART2ISR 1F76          __end_of_EUSART2_SetOverrunErrorHandler 3040  
                _EUSART2_SetOverrunErrorHandler 3036                                      ?i2_isspace 0001  
                                   vfprintf@fmt 00C4                                    i2vfprintf@ap 0064  
                               i2vfpfcnvrt@done 004B                                    i2vfprintf@fp 0060  
                                      ??___wmul 007C                                      ?i2_strncmp 0001  
                                   __pdataBANK1 01AC                                        ??_printf 00CA  
                                      ??_strlen 007A                                  _eusart2RxCount 00E2  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0186  
                       fp__EUSART2_Transmit_ISR 0000                                   rxEUSART2ISR@i 00DC  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
              ??_EUSART1_SetFramingErrorHandler 007A                 ?_EUSART1_SetFramingErrorHandler 0078  
               ??_EUSART2_SetRxInterruptHandler 007A                                        ?i2_putch 0001  
                       _transmitCharacterOverIR 1D8E                     __end_of_EPWM2_LoadDutyValue 2D90  
                        fp__EUSART2_Receive_ISR 0000                          _PIN_MANAGER_Initialize 2DEA  
                                     __pintcode 0008                                   __pmediumconst 7C18  
                                      ?___lodiv 0078                                        ?___lomod 0078  
               __end_of_TMR1_HasOverflowOccured 2FDE               _EUSART2_TxDefaultInterruptHandler 00D6  
                  ??_INTERRUPT_InterruptManager 006C                                 ___lomod@divisor 0080  
                               ___lomod@counter 0088                                        _BAUDCON1 000FB8  
                                      _BAUDCON2 000F70              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 0078                            _EUSART1_ErrorHandler 0118  
                  ?_EUSART2_DefaultErrorHandler 0001                                        ?_isspace 0078  
               transmitCharacterOverIR@baudRate 007C                         _EUSART1_SetErrorHandler 3068  
                                   ??i2___lodiv 0011                                     ??i2___lomod 0011  
                                      ?_strncmp 0078                            _INTERRUPT_Initialize 3088  
                              ?i2_EUSART1_Write 0001                                  ___wmul@product 007C  
       EUSART1_SetErrorHandler@interruptHandler 0078         EUSART2_SetErrorHandler@interruptHandler 0078  
                                      _PIE3bits 000FA3                              i2___lomod@dividend 0001  
                                   ??i2_isdigit 0003                                        i2u201_40 2922  
                                      i2u201_41 291E                                        i2u202_40 2934  
                                      i2u202_41 2930                                        i2u203_40 295C  
                                      i2u203_41 2958                                        i2u211_41 206C  
                                      i2u204_40 2992                                        i2u212_40 2090  
                                      i2u220_40 2852                                        i2u204_41 298E  
                                      i2u212_41 208C                                        i2u220_41 284E  
                                      i2u213_40 20BA                                        i2u221_40 2862  
                                      i2u213_41 20B6                                        i2u221_41 285E  
                                      i2u222_40 2D04                                        i2u214_40 20FA  
                                      i2u222_41 2D00                                        i2u214_41 20F6  
                                   ??i2_isspace 0003                                        i2u223_40 2D26  
                                      i2u215_40 2404                                        i2u223_41 2D22  
                                      i2u215_41 2400                                        i2u224_40 2D50  
                                      i2u216_40 242E                                        i2u320_40 0CC4  
                                      i2u224_41 2D4C                                        i2u216_41 242A  
                                      i2u320_41 0CC0                                        i2u241_40 2598  
                                      i2u217_40 245C                                        i2u209_40 2C72  
                                      i2u321_40 0CE8                                i2_vfpfcnvrt$1976 004D  
                                      i2u241_41 2594                                        i2u217_41 2458  
                                      i2u209_41 2C6E                                        i2u321_41 0CE4  
                                      i2u330_40 2E3A                                        i2u242_40 25BE  
                                      i2u250_40 1A20                                        i2u218_40 27DA  
                                      i2u322_40 0D2E                                        i2u330_41 2E36  
                                      i2u242_41 25BA                                        i2u250_41 1A1C  
                                      i2u218_41 27D6                                        i2u322_41 0D2A  
                                      i2u243_40 25DE                                        i2u251_40 1A5A  
                                      i2u219_40 27FC                                        i2u323_40 0DA2  
                                      i2u243_41 25DA                                        i2u251_41 1A56  
                                      i2u219_41 27F8                                        i2u323_41 0D9E  
                                      i2u244_40 262C                                        i2u252_40 1AAA  
                                      i2u260_40 1422                                        i2u324_40 0DC6  
                                      i2u244_41 2628                                        i2u252_41 1AA6  
                                      i2u260_41 141E                                        i2u324_41 0DC2  
                                      i2u245_40 263C                                        i2u253_40 1ABA  
                                      i2u261_40 1432                                        i2u325_40 0E38  
                                      i2u245_41 2638                                        i2u253_41 1AB6  
                                      i2u261_41 142E                                        i2u325_41 0E34  
                                      i2u254_40 1AF4                                        i2u270_40 17D2  
                                      i2u262_40 1634                                        i2u326_40 0E54  
                                      i2u342_40 2ABC                                        i2u254_41 1AF0  
                                      i2u246_41 1982                                        i2u270_41 17CE  
                                      i2u262_41 1630                                        i2u326_41 0E50  
                                      i2u342_41 2AB8                                        i2u351_40 2C86  
                                      i2u271_40 1C78                                        i2u247_40 19A4  
                                      i2u255_40 1268                                        i2u263_40 1650  
                                      i2u327_40 0F68                                        i2u319_40 0C30  
                                      i2u351_41 2C82                                        i2u271_41 1C74  
                                      i2u247_41 19A0                                        i2u255_41 1264  
                                      i2u263_41 164C                                        i2u327_41 0F64  
                                      i2u319_41 0C2C                                        i2u352_40 2CA8  
                                      i2u272_40 1CA8                                        i2u248_40 19D6  
                                      i2u256_40 1284                                        i2u264_40 16BA  
                                      i2u328_40 0F9E                                        i2u352_41 2CA4  
                                      i2u272_41 1CA4                                        i2u248_41 19D2  
                                      i2u256_41 1280                                        i2u264_41 16B6  
                                      i2u328_41 0F9A                                        i2u273_40 1D56  
                                      i2u249_40 19F4                                        i2u257_40 13D0  
                                      i2u265_40 172E                                        i2u329_40 0FC2  
                                      i2u353_40 2670                                        i2u273_41 1D52  
                                      i2u249_41 19F0                                        i2u257_41 13CC  
                                      i2u329_41 0FBE                                        i2u353_41 266C  
                                      _PIR1bits 000F9E                                        i2u265_45 171C  
                                      i2u274_40 1D68                                        i2u258_40 13EE  
                                      i2u266_40 1770                                        i2u274_41 1D64  
                                      i2u258_41 13EA                                        i2u266_41 176C  
                                      i2u275_40 2260                                        i2u259_40 1408  
                                      i2u267_40 178E                                        i2u355_40 26AA  
                                      i2u354_48 2686                                        i2u275_41 225C  
                                      i2u259_41 1404                                        i2u267_41 178A  
                                      i2u355_41 26A6                                        i2u354_49 269C  
                                      i2u276_40 2296                                        i2u268_40 17A8  
                                      i2u276_41 2292                                        i2u268_41 17A4  
                                      i2u277_40 22B2                                        i2u269_40 17C2  
                                      i2u357_40 26F4                                        i2u356_48 26C2  
                                      i2u277_41 22AE                                        i2u269_41 17BE  
                                      i2u357_41 26F0                                        i2u356_49 26D6  
                                      _PIR3bits 000FA4                                        i2u278_40 22C4  
                                      i2u390_40 0092                                        i2u278_41 22C0  
                                      i2u390_41 008E                                        i2u199_40 2FC4  
                                      i2u279_40 22EE                                        i2u367_40 1F9A  
                                      i2u358_48 26FA                                        i2u391_40 00A0  
                                      i2u199_41 2FC0                                        i2u279_41 22EA  
                                      i2u367_41 1F96                                        i2u358_49 2710  
                                      i2u391_41 009C                                        i2u368_40 1FD2  
                                      i2u368_41 1FCE                                        i2u369_40 1FF4  
                                      i2u392_48 00A6                                        i2u369_41 1FF0  
                                      i2u392_49 00BC                                        i2u386_40 0048  
                                      i2u386_41 0044                                        i2u387_40 0056  
                                      i2u387_41 0052                                        i2u388_40 0064  
                                      i2u388_41 0060                                        i2u389_48 006A  
                                      i2u389_49 0080                                        _RCONbits 000FD0  
                                     main@F6187 01AC                                        _PSTR2CON 000F63  
                                   ??i2_strncmp 0007                                       _vfpfcnvrt 07A4  
                                     _xtoa$1956 00A7                               ??_TMR1_Initialize 0078  
                             ___wmul@multiplier 0078                                        i2___wmul 2EE4  
                                  _isspace$2011 007C                                        i2_printf 2EBC  
                                      i2pad@buf 0015                                        i2ctoa@fp 000C  
                 ??_EUSART2_DefaultErrorHandler 0001                                        i2_strlen 2D28  
                                    vfpfcnvrt@c 0186                                     _INTCON2bits 000FF1  
                     ??_transmitCharacterOverIR 007E                                       copy_data0 2BB8  
                                      i2fputc@c 0003                           ?_INTERRUPT_Initialize 0001  
                                      i2fputs@c 0010                                        i2fputs@i 0011  
                                      i2fputs@s 000C                         _EUSART2_SetErrorHandler 304A  
                             ??_TMR2_Initialize 0078                                        i2stoa@cp 001C  
                                      i2stoa@fp 000C                     _EUSART2_OverrunErrorHandler 0120  
                                      i2utoa@fp 001E                                        i2xtoa@fp 001E  
                                      __Hrparam 0000           __end_of_EUSART2_SetRxInterruptHandler 3036  
                 _EUSART2_SetRxInterruptHandler 302C                                _EPWM2_Initialize 2F2C  
                                    vfprintf@ap 00C6                                        __Lrparam 0000  
                                    vfprintf@fp 00C2                         ??_OSCILLATOR_Initialize 0078  
                         i2___wmul@multiplicand 0003                                      ?_vfpfcnvrt 00B8  
                            i2vfpfcnvrt@convarg 0050                       ??_EUSART1_SetErrorHandler 007A  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 2FF2  
                          _EUSART2_ErrorHandler 011E                                        __ptext10 271A  
                                      __ptext11 2B14                                        __ptext20 2F84  
                                      __ptext12 2314                                        __ptext21 1AF6  
                                      __ptext13 1E84                                      _T1GCONbits 000FCC  
                                      __ptext30 3088                                        __ptext22 2B5C  
                                      __ptext14 2156                                        __ptext31 29A6  
                                      __ptext23 2D90                                        __ptext15 17F4  
                                      __ptext40 3068                                        __ptext32 3022  
                                      __ptext24 2E94                                        __ptext16 2CB6  
                                      __ptext41 2F2C                                        __ptext33 302C  
                                      __ptext25 2F0A                                        __ptext17 24B6  
                                      __ptext50 2A78                                        __ptext42 2F9C  
                                      __ptext34 3036                                        __ptext26 3004  
                                      __ptext18 2878                                        __ptext51 0C0C  
                                      __ptext43 2AC8                                        __ptext35 3040  
                                      __ptext27 2F4C                                        __ptext19 3014  
                                      __ptext60 2D28                                        __ptext52 1624  
                                      __ptext44 2FDE                                        __ptext36 304A  
                                      __ptext28 2DEA                                        __ptext61 2584  
                                      __ptext53 1258                                        __ptext45 2E42  
                                      __ptext37 2BEA                                        __ptext29 2F68  
                                      __ptext70 307C                                        __ptext62 2910  
                                      __ptext54 27CA                                        __ptext38 3054  
                                      __ptext71 308E                                        __ptext63 3072  
                                      __ptext55 2C30                                        __ptext47 2650  
                                      __ptext39 305E                                        __ptext72 3082  
                                      __ptext64 2FB4                                        __ptext56 23E6  
                                      __ptext48 1F76                                        __ptext73 2E16  
                                      __ptext65 1C44                                        __ptext57 2066  
                                      __ptext49 2EBC                                        __ptext74 0000  
                                      __ptext66 2CF0                                        __ptext58 2236  
                                      __ptext67 308C                                        __ptext59 1978  
                                      __ptext68 2EE4                                        __ptext69 2C74  
         fp__EUSART2_DefaultFramingErrorHandler 0000      __end_of_EUSART2_DefaultFramingErrorHandler 3090  
          ??_EUSART2_DefaultFramingErrorHandler 0001             ?_EUSART2_DefaultFramingErrorHandler 0001  
            _EUSART2_DefaultFramingErrorHandler 308E                                        _received 0125  
                                     stoa@F1149 01B6  EUSART1_SetOverrunErrorHandler@interruptHandler 0078  
EUSART2_SetOverrunErrorHandler@interruptHandler 0078                                        isa$xinst 000000  
               __end_of_transmitCharacterOverIR 1E84                                        int$flags 005F  
                                      _vfprintf 2A26                                        _transmit 00DF  
            __end_of_INTERRUPT_InterruptManager 00F4                      _INTERRUPT_InterruptManager 0008  
                         _EUSART2_RxDataHandler 2E16                                       printf@fmt 0195  
                             ??_TMR1_WriteTimer 007A                     _EUSART1_FramingErrorHandler 011C  
              ??_EUSART2_SetOverrunErrorHandler 007A                 ?_EUSART2_SetOverrunErrorHandler 0078  
                                _vfpfcnvrt$1976 0189                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 2FB4                                        isdigit@c 0078  
                        ??_INTERRUPT_Initialize 0078                       ??_EUSART2_SetErrorHandler 007A  
                                      intlevel2 0000                    EPWM2_LoadDutyValue@dutyValue 0078  
                                      isspace@c 0078                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 305E                  _EUSART1_SetOverrunErrorHandler 3054  
                                    _RCSTA1bits 000FAB                                      _RCSTA2bits 000F71  
                                     strncmp@_l 0078                                       strncmp@_r 007A  
                 transmitCharacterOverIR@letter 007E                                        printf@ap 00CA  
EUSART1_SetFramingErrorHandler@interruptHandler 0078  EUSART2_SetFramingErrorHandler@interruptHandler 0078  
                ?_EUSART2_SetRxInterruptHandler 0078                                   ??i2_vfpfcnvrt 0047  
                                   ??_vfpfcnvrt 00BE                                        stoa@nuls 0088  
                            _eusart1RxLastError 00E0                             _EUSART2_Receive_ISR 2650  
                          main@baudRateSelected 01A8                                        strncmp@l 007F  
                                      strncmp@n 007C                                        strncmp@r 0081  
                __end_of_PIN_MANAGER_Initialize 2E16                     transmitCharacterOverIR@mask 007F  
               ??_EUSART2_SetTxInterruptHandler 007A                            ?_EUSART2_Receive_ISR 0001  
                            _eusart2RxLastError 00E1                                 _TMR1_Initialize 2F4C  
             _EUSART2_RxDefaultInterruptHandler 00D4  
