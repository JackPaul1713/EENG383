

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 05 17:16:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 06/04/2022 GMT
    62                           ; 
    63                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F25K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    97   000000                     
    98 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    99   000000                     
   100 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   101   000000                     
   102                           	psect	idataBANK0
   103   001912                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _threshold
   107   001912  0A                 	db	10
   108   000000                     _TMR0L	set	4054
   109   000000                     _TMR0H	set	4055
   110   000000                     _TXREG1	set	4013
   111   000000                     _RCREG1	set	4014
   112   000000                     _SPBRG1	set	4015
   113   000000                     _TXSTA1	set	4012
   114   000000                     _ADCON0	set	4034
   115   000000                     _ADRESL	set	4035
   116   000000                     _ANSELA	set	3896
   117   000000                     _ANSELB	set	3897
   118   000000                     _ANSELC	set	3898
   119   000000                     _LATA	set	3977
   120   000000                     _RCONbits	set	4048
   121   000000                     _LATAbits	set	3977
   122   000000                     _T0CON	set	4053
   123   000000                     _RCSTA1bits	set	4011
   124   000000                     _TXSTA1bits	set	4012
   125   000000                     _ADCON0bits	set	4034
   126   000000                     _PLLRDY	set	32407
   127   000000                     _OSCCON2	set	4050
   128   000000                     _OSCCON	set	4051
   129   000000                     _INTCON2bits	set	4081
   130   000000                     _INTCONbits	set	4082
   131   000000                     _TRISA	set	3986
   132   000000                     _LATC	set	3979
   133   000000                     _LATB	set	3978
   134   000000                     _OSCTUNE	set	3995
   135   000000                     _TRISC	set	3988
   136   000000                     _TRISB	set	3987
   137   000000                     _WPUB	set	3937
   138   000000                     _T0CONbits	set	4053
   139   000000                     _PIR1bits	set	3998
   140   000000                     _RCSTA1	set	4011
   141   000000                     _BAUDCON1	set	4024
   142   000000                     _ADCON2	set	4032
   143   000000                     _ADCON1	set	4033
   144   000000                     _ADRESH	set	4036
   145   000000                     _SPBRGH1	set	4016
   146                           
   147                           	psect	mediumconst
   148   007DB6                     __pmediumconst:
   149                           	callstack 0
   150   007DB6  00                 	db	0
   151   007DB7                     STR_21:
   152   007DB7  54                 	db	84	;'T'
   153   007DB8  68                 	db	104	;'h'
   154   007DB9  65                 	db	101	;'e'
   155   007DBA  20                 	db	32
   156   007DBB  6C                 	db	108	;'l'
   157   007DBC  61                 	db	97	;'a'
   158   007DBD  73                 	db	115	;'s'
   159   007DBE  74                 	db	116	;'t'
   160   007DBF  20                 	db	32
   161   007DC0  32                 	db	50	;'2'
   162   007DC1  35                 	db	53	;'5'
   163   007DC2  36                 	db	54	;'6'
   164   007DC3  20                 	db	32
   165   007DC4  41                 	db	65	;'A'
   166   007DC5  44                 	db	68	;'D'
   167   007DC6  43                 	db	67	;'C'
   168   007DC7  20                 	db	32
   169   007DC8  73                 	db	115	;'s'
   170   007DC9  61                 	db	97	;'a'
   171   007DCA  6D                 	db	109	;'m'
   172   007DCB  70                 	db	112	;'p'
   173   007DCC  6C                 	db	108	;'l'
   174   007DCD  65                 	db	101	;'e'
   175   007DCE  73                 	db	115	;'s'
   176   007DCF  20                 	db	32
   177   007DD0  66                 	db	102	;'f'
   178   007DD1  72                 	db	114	;'r'
   179   007DD2  6F                 	db	111	;'o'
   180   007DD3  6D                 	db	109	;'m'
   181   007DD4  20                 	db	32
   182   007DD5  74                 	db	116	;'t'
   183   007DD6  68                 	db	104	;'h'
   184   007DD7  65                 	db	101	;'e'
   185   007DD8  20                 	db	32
   186   007DD9  6D                 	db	109	;'m'
   187   007DDA  69                 	db	105	;'i'
   188   007DDB  63                 	db	99	;'c'
   189   007DDC  72                 	db	114	;'r'
   190   007DDD  6F                 	db	111	;'o'
   191   007DDE  70                 	db	112	;'p'
   192   007DDF  68                 	db	104	;'h'
   193   007DE0  6F                 	db	111	;'o'
   194   007DE1  6E                 	db	110	;'n'
   195   007DE2  65                 	db	101	;'e'
   196   007DE3  20                 	db	32
   197   007DE4  61                 	db	97	;'a'
   198   007DE5  72                 	db	114	;'r'
   199   007DE6  65                 	db	101	;'e'
   200   007DE7  3A                 	db	58	;':'
   201   007DE8  0A                 	db	10
   202   007DE9  0D                 	db	13
   203   007DEA  00                 	db	0
   204   007DEB                     STR_30:
   205   007DEB  54                 	db	84	;'T'
   206   007DEC  68                 	db	104	;'h'
   207   007DED  65                 	db	101	;'e'
   208   007DEE  20                 	db	32
   209   007DEF  73                 	db	115	;'s'
   210   007DF0  6F                 	db	111	;'o'
   211   007DF1  75                 	db	117	;'u'
   212   007DF2  6E                 	db	110	;'n'
   213   007DF3  64                 	db	100	;'d'
   214   007DF4  20                 	db	32
   215   007DF5  77                 	db	119	;'w'
   216   007DF6  61                 	db	97	;'a'
   217   007DF7  76                 	db	118	;'v'
   218   007DF8  65                 	db	101	;'e'
   219   007DF9  20                 	db	32
   220   007DFA  63                 	db	99	;'c'
   221   007DFB  72                 	db	114	;'r'
   222   007DFC  6F                 	db	111	;'o'
   223   007DFD  73                 	db	115	;'s'
   224   007DFE  73                 	db	115	;'s'
   225   007DFF  65                 	db	101	;'e'
   226   007E00  64                 	db	100	;'d'
   227   007E01  20                 	db	32
   228   007E02  61                 	db	97	;'a'
   229   007E03  74                 	db	116	;'t'
   230   007E04  20                 	db	32
   231   007E05  74                 	db	116	;'t'
   232   007E06  68                 	db	104	;'h'
   233   007E07  65                 	db	101	;'e'
   234   007E08  20                 	db	32
   235   007E09  66                 	db	102	;'f'
   236   007E0A  6F                 	db	111	;'o'
   237   007E0B  6C                 	db	108	;'l'
   238   007E0C  6C                 	db	108	;'l'
   239   007E0D  6F                 	db	111	;'o'
   240   007E0E  77                 	db	119	;'w'
   241   007E0F  69                 	db	105	;'i'
   242   007E10  6E                 	db	110	;'n'
   243   007E11  67                 	db	103	;'g'
   244   007E12  20                 	db	32
   245   007E13  69                 	db	105	;'i'
   246   007E14  6E                 	db	110	;'n'
   247   007E15  64                 	db	100	;'d'
   248   007E16  69                 	db	105	;'i'
   249   007E17  63                 	db	99	;'c'
   250   007E18  69                 	db	105	;'i'
   251   007E19  65                 	db	101	;'e'
   252   007E1A  73                 	db	115	;'s'
   253   007E1B  3A                 	db	58	;':'
   254   007E1C  0A                 	db	10
   255   007E1D  0D                 	db	13
   256   007E1E  00                 	db	0
   257   007E1F                     STR_13:
   258   007E1F  66                 	db	102	;'f'
   259   007E20  3A                 	db	58	;':'
   260   007E21  20                 	db	32
   261   007E22  63                 	db	99	;'c'
   262   007E23  6F                 	db	111	;'o'
   263   007E24  6D                 	db	109	;'m'
   264   007E25  70                 	db	112	;'p'
   265   007E26  75                 	db	117	;'u'
   266   007E27  74                 	db	116	;'t'
   267   007E28  65                 	db	101	;'e'
   268   007E29  20                 	db	32
   269   007E2A  74                 	db	116	;'t'
   270   007E2B  68                 	db	104	;'h'
   271   007E2C  65                 	db	101	;'e'
   272   007E2D  20                 	db	32
   273   007E2E  70                 	db	112	;'p'
   274   007E2F  65                 	db	101	;'e'
   275   007E30  72                 	db	114	;'r'
   276   007E31  69                 	db	105	;'i'
   277   007E32  6F                 	db	111	;'o'
   278   007E33  64                 	db	100	;'d'
   279   007E34  20                 	db	32
   280   007E35  66                 	db	102	;'f'
   281   007E36  72                 	db	114	;'r'
   282   007E37  6F                 	db	111	;'o'
   283   007E38  6D                 	db	109	;'m'
   284   007E39  20                 	db	32
   285   007E3A  25                 	db	37
   286   007E3B  64                 	db	100	;'d'
   287   007E3C  20                 	db	32
   288   007E3D  73                 	db	115	;'s'
   289   007E3E  61                 	db	97	;'a'
   290   007E3F  6D                 	db	109	;'m'
   291   007E40  70                 	db	112	;'p'
   292   007E41  6C                 	db	108	;'l'
   293   007E42  65                 	db	101	;'e'
   294   007E43  73                 	db	115	;'s'
   295   007E44  20                 	db	32
   296   007E45  66                 	db	102	;'f'
   297   007E46  72                 	db	114	;'r'
   298   007E47  6F                 	db	111	;'o'
   299   007E48  6D                 	db	109	;'m'
   300   007E49  20                 	db	32
   301   007E4A  41                 	db	65	;'A'
   302   007E4B  44                 	db	68	;'D'
   303   007E4C  43                 	db	67	;'C'
   304   007E4D  0D                 	db	13
   305   007E4E  0A                 	db	10
   306   007E4F  00                 	db	0
   307   007E50                     STR_15:
   308   007E50  30                 	db	48	;'0'
   309   007E51  2D                 	db	45
   310   007E52  39                 	db	57	;'9'
   311   007E53  3A                 	db	58	;':'
   312   007E54  20                 	db	32
   313   007E55  73                 	db	115	;'s'
   314   007E56  77                 	db	119	;'w'
   315   007E57  69                 	db	105	;'i'
   316   007E58  74                 	db	116	;'t'
   317   007E59  63                 	db	99	;'c'
   318   007E5A  68                 	db	104	;'h'
   319   007E5B  20                 	db	32
   320   007E5C  73                 	db	115	;'s'
   321   007E5D  61                 	db	97	;'a'
   322   007E5E  6D                 	db	109	;'m'
   323   007E5F  70                 	db	112	;'p'
   324   007E60  6C                 	db	108	;'l'
   325   007E61  65                 	db	101	;'e'
   326   007E62  64                 	db	100	;'d'
   327   007E63  20                 	db	32
   328   007E64  63                 	db	99	;'c'
   329   007E65  68                 	db	104	;'h'
   330   007E66  61                 	db	97	;'a'
   331   007E67  6E                 	db	110	;'n'
   332   007E68  6E                 	db	110	;'n'
   333   007E69  65                 	db	101	;'e'
   334   007E6A  6C                 	db	108	;'l'
   335   007E6B  20                 	db	32
   336   007E6C  74                 	db	116	;'t'
   337   007E6D  6F                 	db	111	;'o'
   338   007E6E  20                 	db	32
   339   007E6F  41                 	db	65	;'A'
   340   007E70  4E                 	db	78	;'N'
   341   007E71  78                 	db	120	;'x'
   342   007E72  0D                 	db	13
   343   007E73  0A                 	db	10
   344   007E74  00                 	db	0
   345   007E75                     STR_6:
   346   007E75  2D                 	db	45
   347   007E76  2D                 	db	45
   348   007E77  2D                 	db	45
   349   007E78  2D                 	db	45
   350   007E79  2D                 	db	45
   351   007E7A  2D                 	db	45
   352   007E7B  2D                 	db	45
   353   007E7C  2D                 	db	45
   354   007E7D  2D                 	db	45
   355   007E7E  2D                 	db	45
   356   007E7F  2D                 	db	45
   357   007E80  2D                 	db	45
   358   007E81  2D                 	db	45
   359   007E82  2D                 	db	45
   360   007E83  2D                 	db	45
   361   007E84  2D                 	db	45
   362   007E85  2D                 	db	45
   363   007E86  2D                 	db	45
   364   007E87  2D                 	db	45
   365   007E88  2D                 	db	45
   366   007E89  2D                 	db	45
   367   007E8A  2D                 	db	45
   368   007E8B  2D                 	db	45
   369   007E8C  2D                 	db	45
   370   007E8D  2D                 	db	45
   371   007E8E  2D                 	db	45
   372   007E8F  2D                 	db	45
   373   007E90  2D                 	db	45
   374   007E91  2D                 	db	45
   375   007E92  2D                 	db	45
   376   007E93  0D                 	db	13
   377   007E94  0A                 	db	10
   378   007E95  00                 	db	0
   379   007E96                     STR_33:
   380   007E96  54                 	db	84	;'T'
   381   007E97  68                 	db	104	;'h'
   382   007E98  65                 	db	101	;'e'
   383   007E99  20                 	db	32
   384   007E9A  73                 	db	115	;'s'
   385   007E9B  6F                 	db	111	;'o'
   386   007E9C  75                 	db	117	;'u'
   387   007E9D  6E                 	db	110	;'n'
   388   007E9E  64                 	db	100	;'d'
   389   007E9F  20                 	db	32
   390   007EA0  77                 	db	119	;'w'
   391   007EA1  61                 	db	97	;'a'
   392   007EA2  76                 	db	118	;'v'
   393   007EA3  65                 	db	101	;'e'
   394   007EA4  20                 	db	32
   395   007EA5  68                 	db	104	;'h'
   396   007EA6  61                 	db	97	;'a'
   397   007EA7  64                 	db	100	;'d'
   398   007EA8  20                 	db	32
   399   007EA9  31                 	db	49	;'1'
   400   007EAA  30                 	db	48	;'0'
   401   007EAB  20                 	db	32
   402   007EAC  70                 	db	112	;'p'
   403   007EAD  65                 	db	101	;'e'
   404   007EAE  72                 	db	114	;'r'
   405   007EAF  69                 	db	105	;'i'
   406   007EB0  6F                 	db	111	;'o'
   407   007EB1  64                 	db	100	;'d'
   408   007EB2  73                 	db	115	;'s'
   409   007EB3  3A                 	db	58	;':'
   410   007EB4  0A                 	db	10
   411   007EB5  0D                 	db	13
   412   007EB6  00                 	db	0
   413   007EB7                     STR_12:
   414   007EB7  74                 	db	116	;'t'
   415   007EB8  3A                 	db	58	;':'
   416   007EB9  20                 	db	32
   417   007EBA  64                 	db	100	;'d'
   418   007EBB  65                 	db	101	;'e'
   419   007EBC  63                 	db	99	;'c'
   420   007EBD  72                 	db	114	;'r'
   421   007EBE  65                 	db	101	;'e'
   422   007EBF  61                 	db	97	;'a'
   423   007EC0  73                 	db	115	;'s'
   424   007EC1  65                 	db	101	;'e'
   425   007EC2  20                 	db	32
   426   007EC3  73                 	db	115	;'s'
   427   007EC4  61                 	db	97	;'a'
   428   007EC5  6D                 	db	109	;'m'
   429   007EC6  70                 	db	112	;'p'
   430   007EC7  6C                 	db	108	;'l'
   431   007EC8  69                 	db	105	;'i'
   432   007EC9  6E                 	db	110	;'n'
   433   007ECA  67                 	db	103	;'g'
   434   007ECB  20                 	db	32
   435   007ECC  74                 	db	116	;'t'
   436   007ECD  68                 	db	104	;'h'
   437   007ECE  72                 	db	114	;'r'
   438   007ECF  65                 	db	101	;'e'
   439   007ED0  73                 	db	115	;'s'
   440   007ED1  68                 	db	104	;'h'
   441   007ED2  6F                 	db	111	;'o'
   442   007ED3  6C                 	db	108	;'l'
   443   007ED4  64                 	db	100	;'d'
   444   007ED5  0A                 	db	10
   445   007ED6  0D                 	db	13
   446   007ED7  00                 	db	0
   447   007ED8                     STR_11:
   448   007ED8  54                 	db	84	;'T'
   449   007ED9  3A                 	db	58	;':'
   450   007EDA  20                 	db	32
   451   007EDB  69                 	db	105	;'i'
   452   007EDC  6E                 	db	110	;'n'
   453   007EDD  63                 	db	99	;'c'
   454   007EDE  72                 	db	114	;'r'
   455   007EDF  65                 	db	101	;'e'
   456   007EE0  61                 	db	97	;'a'
   457   007EE1  73                 	db	115	;'s'
   458   007EE2  65                 	db	101	;'e'
   459   007EE3  20                 	db	32
   460   007EE4  73                 	db	115	;'s'
   461   007EE5  61                 	db	97	;'a'
   462   007EE6  6D                 	db	109	;'m'
   463   007EE7  70                 	db	112	;'p'
   464   007EE8  6C                 	db	108	;'l'
   465   007EE9  69                 	db	105	;'i'
   466   007EEA  6E                 	db	110	;'n'
   467   007EEB  67                 	db	103	;'g'
   468   007EEC  20                 	db	32
   469   007EED  74                 	db	116	;'t'
   470   007EEE  68                 	db	104	;'h'
   471   007EEF  72                 	db	114	;'r'
   472   007EF0  65                 	db	101	;'e'
   473   007EF1  73                 	db	115	;'s'
   474   007EF2  68                 	db	104	;'h'
   475   007EF3  6F                 	db	111	;'o'
   476   007EF4  6C                 	db	108	;'l'
   477   007EF5  64                 	db	100	;'d'
   478   007EF6  0A                 	db	10
   479   007EF7  0D                 	db	13
   480   007EF8  00                 	db	0
   481   007EF9                     STR_14:
   482   007EF9  73                 	db	115	;'s'
   483   007EFA  3A                 	db	58	;':'
   484   007EFB  20                 	db	32
   485   007EFC  67                 	db	103	;'g'
   486   007EFD  61                 	db	97	;'a'
   487   007EFE  74                 	db	116	;'t'
   488   007EFF  68                 	db	104	;'h'
   489   007F00  65                 	db	101	;'e'
   490   007F01  72                 	db	114	;'r'
   491   007F02  20                 	db	32
   492   007F03  25                 	db	37
   493   007F04  64                 	db	100	;'d'
   494   007F05  20                 	db	32
   495   007F06  73                 	db	115	;'s'
   496   007F07  61                 	db	97	;'a'
   497   007F08  6D                 	db	109	;'m'
   498   007F09  70                 	db	112	;'p'
   499   007F0A  6C                 	db	108	;'l'
   500   007F0B  65                 	db	101	;'e'
   501   007F0C  73                 	db	115	;'s'
   502   007F0D  20                 	db	32
   503   007F0E  66                 	db	102	;'f'
   504   007F0F  72                 	db	114	;'r'
   505   007F10  6F                 	db	111	;'o'
   506   007F11  6D                 	db	109	;'m'
   507   007F12  20                 	db	32
   508   007F13  41                 	db	65	;'A'
   509   007F14  44                 	db	68	;'D'
   510   007F15  43                 	db	67	;'C'
   511   007F16  0D                 	db	13
   512   007F17  0A                 	db	10
   513   007F18  00                 	db	0
   514   007F19                     STR_2:
   515   007F19  4D                 	db	77	;'M'
   516   007F1A  69                 	db	105	;'i'
   517   007F1B  63                 	db	99	;'c'
   518   007F1C  72                 	db	114	;'r'
   519   007F1D  6F                 	db	111	;'o'
   520   007F1E  70                 	db	112	;'p'
   521   007F1F  68                 	db	104	;'h'
   522   007F20  6F                 	db	111	;'o'
   523   007F21  6E                 	db	110	;'n'
   524   007F22  65                 	db	101	;'e'
   525   007F23  20                 	db	32
   526   007F24  65                 	db	101	;'e'
   527   007F25  78                 	db	120	;'x'
   528   007F26  70                 	db	112	;'p'
   529   007F27  65                 	db	101	;'e'
   530   007F28  72                 	db	114	;'r'
   531   007F29  69                 	db	105	;'i'
   532   007F2A  6D                 	db	109	;'m'
   533   007F2B  65                 	db	101	;'e'
   534   007F2C  6E                 	db	110	;'n'
   535   007F2D  74                 	db	116	;'t'
   536   007F2E  73                 	db	115	;'s'
   537   007F2F  0D                 	db	13
   538   007F30  0A                 	db	10
   539   007F31  00                 	db	0
   540   007F32                     STR_10:
   541   007F32  7A                 	db	122	;'z'
   542   007F33  3A                 	db	58	;':'
   543   007F34  20                 	db	32
   544   007F35  43                 	db	67	;'C'
   545   007F36  6C                 	db	108	;'l'
   546   007F37  65                 	db	101	;'e'
   547   007F38  61                 	db	97	;'a'
   548   007F39  72                 	db	114	;'r'
   549   007F3A  20                 	db	32
   550   007F3B  74                 	db	116	;'t'
   551   007F3C  68                 	db	104	;'h'
   552   007F3D  65                 	db	101	;'e'
   553   007F3E  20                 	db	32
   554   007F3F  74                 	db	116	;'t'
   555   007F40  65                 	db	101	;'e'
   556   007F41  72                 	db	114	;'r'
   557   007F42  6D                 	db	109	;'m'
   558   007F43  69                 	db	105	;'i'
   559   007F44  6E                 	db	110	;'n'
   560   007F45  61                 	db	97	;'a'
   561   007F46  6C                 	db	108	;'l'
   562   007F47  0D                 	db	13
   563   007F48  0A                 	db	10
   564   007F49  00                 	db	0
   565   007F4A                     STR_37:
   566   007F4A  61                 	db	97	;'a'
   567   007F4B  76                 	db	118	;'v'
   568   007F4C  65                 	db	101	;'e'
   569   007F4D  72                 	db	114	;'r'
   570   007F4E  61                 	db	97	;'a'
   571   007F4F  67                 	db	103	;'g'
   572   007F50  65                 	db	101	;'e'
   573   007F51  20                 	db	32
   574   007F52  66                 	db	102	;'f'
   575   007F53  72                 	db	114	;'r'
   576   007F54  65                 	db	101	;'e'
   577   007F55  71                 	db	113	;'q'
   578   007F56  75                 	db	117	;'u'
   579   007F57  65                 	db	101	;'e'
   580   007F58  6E                 	db	110	;'n'
   581   007F59  63                 	db	99	;'c'
   582   007F5A  79                 	db	121	;'y'
   583   007F5B  3A                 	db	58	;':'
   584   007F5C  20                 	db	32
   585   007F5D  25                 	db	37
   586   007F5E  75                 	db	117	;'u'
   587   007F5F  0A                 	db	10
   588   007F60  0D                 	db	13
   589   007F61  00                 	db	0
   590   007F62                     STR_9:
   591   007F62  5A                 	db	90	;'Z'
   592   007F63  3A                 	db	58	;':'
   593   007F64  20                 	db	32
   594   007F65  52                 	db	82	;'R'
   595   007F66  65                 	db	101	;'e'
   596   007F67  73                 	db	115	;'s'
   597   007F68  65                 	db	101	;'e'
   598   007F69  74                 	db	116	;'t'
   599   007F6A  20                 	db	32
   600   007F6B  70                 	db	112	;'p'
   601   007F6C  72                 	db	114	;'r'
   602   007F6D  6F                 	db	111	;'o'
   603   007F6E  63                 	db	99	;'c'
   604   007F6F  65                 	db	101	;'e'
   605   007F70  73                 	db	115	;'s'
   606   007F71  73                 	db	115	;'s'
   607   007F72  6F                 	db	111	;'o'
   608   007F73  72                 	db	114	;'r'
   609   007F74  0D                 	db	13
   610   007F75  0A                 	db	10
   611   007F76  00                 	db	0
   612   007F77                     STR_36:
   613   007F77  61                 	db	97	;'a'
   614   007F78  76                 	db	118	;'v'
   615   007F79  65                 	db	101	;'e'
   616   007F7A  72                 	db	114	;'r'
   617   007F7B  61                 	db	97	;'a'
   618   007F7C  67                 	db	103	;'g'
   619   007F7D  65                 	db	101	;'e'
   620   007F7E  20                 	db	32
   621   007F7F  70                 	db	112	;'p'
   622   007F80  65                 	db	101	;'e'
   623   007F81  72                 	db	114	;'r'
   624   007F82  69                 	db	105	;'i'
   625   007F83  6F                 	db	111	;'o'
   626   007F84  64                 	db	100	;'d'
   627   007F85  3A                 	db	58	;':'
   628   007F86  20                 	db	32
   629   007F87  25                 	db	37
   630   007F88  75                 	db	117	;'u'
   631   007F89  0A                 	db	10
   632   007F8A  0D                 	db	13
   633   007F8B  00                 	db	0
   634   007F8C                     STR_20:
   635   007F8C  74                 	db	116	;'t'
   636   007F8D  61                 	db	97	;'a'
   637   007F8E  6B                 	db	107	;'k'
   638   007F8F  69                 	db	105	;'i'
   639   007F90  6E                 	db	110	;'n'
   640   007F91  67                 	db	103	;'g'
   641   007F92  20                 	db	32
   642   007F93  73                 	db	115	;'s'
   643   007F94  61                 	db	97	;'a'
   644   007F95  6D                 	db	109	;'m'
   645   007F96  70                 	db	112	;'p'
   646   007F97  6C                 	db	108	;'l'
   647   007F98  65                 	db	101	;'e'
   648   007F99  73                 	db	115	;'s'
   649   007F9A  3A                 	db	58	;':'
   650   007F9B  20                 	db	32
   651   007F9C  0A                 	db	10
   652   007F9D  0D                 	db	13
   653   007F9E  00                 	db	0
   654   007F9F                     STR_7:
   655   007F9F  3F                 	db	63	;'?'
   656   007FA0  3A                 	db	58	;':'
   657   007FA1  20                 	db	32
   658   007FA2  48                 	db	72	;'H'
   659   007FA3  65                 	db	101	;'e'
   660   007FA4  6C                 	db	108	;'l'
   661   007FA5  70                 	db	112	;'p'
   662   007FA6  20                 	db	32
   663   007FA7  6D                 	db	109	;'m'
   664   007FA8  65                 	db	101	;'e'
   665   007FA9  6E                 	db	110	;'n'
   666   007FAA  75                 	db	117	;'u'
   667   007FAB  0D                 	db	13
   668   007FAC  0A                 	db	10
   669   007FAD  00                 	db	0
   670   007FAE                     STR_34:
   671   007FAE  25                 	db	37
   672   007FAF  75                 	db	117	;'u'
   673   007FB0  20                 	db	32
   674   007FB1  2D                 	db	45
   675   007FB2  20                 	db	32
   676   007FB3  25                 	db	37
   677   007FB4  75                 	db	117	;'u'
   678   007FB5  20                 	db	32
   679   007FB6  3D                 	db	61	;'='
   680   007FB7  20                 	db	32
   681   007FB8  25                 	db	37
   682   007FB9  75                 	db	117	;'u'
   683   007FBA  0A                 	db	10
   684   007FBB  0D                 	db	13
   685   007FBC  00                 	db	0
   686   007FBD                     STR_38:
   687   007FBD  75                 	db	117	;'u'
   688   007FBE  6E                 	db	110	;'n'
   689   007FBF  6B                 	db	107	;'k'
   690   007FC0  6E                 	db	110	;'n'
   691   007FC1  6F                 	db	111	;'o'
   692   007FC2  77                 	db	119	;'w'
   693   007FC3  6E                 	db	110	;'n'
   694   007FC4  20                 	db	32
   695   007FC5  6B                 	db	107	;'k'
   696   007FC6  65                 	db	101	;'e'
   697   007FC7  79                 	db	121	;'y'
   698   007FC8  0D                 	db	13
   699   007FC9  0A                 	db	10
   700   007FCA  00                 	db	0
   701   007FCB                     STR_1:
   702   007FCB  69                 	db	105	;'i'
   703   007FCC  6E                 	db	110	;'n'
   704   007FCD  4C                 	db	76	;'L'
   705   007FCE  61                 	db	97	;'a'
   706   007FCF  62                 	db	98	;'b'
   707   007FD0  20                 	db	32
   708   007FD1  30                 	db	48	;'0'
   709   007FD2  38                 	db	56	;'8'
   710   007FD3  0D                 	db	13
   711   007FD4  0A                 	db	10
   712   007FD5  00                 	db	0
   713   007FD6                     STR_3:
   714   007FD6  44                 	db	68	;'D'
   715   007FD7  65                 	db	101	;'e'
   716   007FD8  76                 	db	118	;'v'
   717   007FD9  27                 	db	39
   718   007FDA  32                 	db	50	;'2'
   719   007FDB  31                 	db	49	;'1'
   720   007FDC  0D                 	db	13
   721   007FDD  0A                 	db	10
   722   007FDE  00                 	db	0
   723   007FDF                     STR_8:
   724   007FDF  6F                 	db	111	;'o'
   725   007FE0  3A                 	db	58	;':'
   726   007FE1  20                 	db	32
   727   007FE2  6B                 	db	107	;'k'
   728   007FE3  0D                 	db	13
   729   007FE4  0A                 	db	10
   730   007FE5  00                 	db	0
   731   007FE6                     STR_22:
   732   007FE6  53                 	db	83	;'S'
   733   007FE7  5B                 	db	91	;'['
   734   007FE8  25                 	db	37
   735   007FE9  75                 	db	117	;'u'
   736   007FEA  5D                 	db	93	;']'
   737   007FEB  20                 	db	32
   738   007FEC  00                 	db	0
   739   007FED                     STR_32:
   740   007FED  0A                 	db	10
   741   007FEE  0D                 	db	13
   742   007FEF  0A                 	db	10
   743   007FF0  0D                 	db	13
   744   007FF1  00                 	db	0
   745   007FF2                     STR_5:
   746   007FF2  25                 	db	37
   747   007FF3  63                 	db	99	;'c'
   748   007FF4  0A                 	db	10
   749   007FF5  0D                 	db	13
   750   007FF6  00                 	db	0
   751   007FF7                     STR_25:
   752   007FF7  25                 	db	37
   753   007FF8  75                 	db	117	;'u'
   754   007FF9  20                 	db	32
   755   007FFA  00                 	db	0
   756   007FFB                     STR_4:
   757   007FFB  3E                 	db	62	;'>'
   758   007FFC  20                 	db	32
   759   007FFD  00                 	db	0
   760   007FFE  00                 	db	0	; dummy byte at the end
   761   000000                     
   762                           ; #config settings
   763                           
   764                           	psect	cinit
   765   001616                     __pcinit:
   766                           	callstack 0
   767   001616                     start_initialization:
   768                           	callstack 0
   769   001616                     __initialization:
   770                           	callstack 0
   771                           
   772                           ; Initialize objects allocated to BANK0 (1 bytes)
   773                           ; load TBLPTR registers with __pidataBANK0
   774   001616  0E12               	movlw	low __pidataBANK0
   775   001618  6EF6               	movwf	tblptrl,c
   776   00161A  0E19               	movlw	high __pidataBANK0
   777   00161C  6EF7               	movwf	tblptrh,c
   778   00161E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   779   001620  6EF8               	movwf	tblptru,c
   780   001622  0009               	tblrd		*+	;fetch initializer
   781   001624  CFF5 F0D0          	movff	tablat,__pdataBANK0
   782                           
   783                           ; Clear objects allocated to BANK2 (256 bytes)
   784   001628  EE02  F000         	lfsr	0,__pbssBANK2
   785   00162C  EE11 F000          	lfsr	1,256
   786   001630                     clear_0:
   787   001630  6AEE               	clrf	postinc0,c
   788   001632  50E5               	movf	postdec1,w,c
   789   001634  50E1               	movf	fsr1l,w,c
   790   001636  E1FC               	bnz	clear_0
   791   001638  50E2               	movf	fsr1h,w,c
   792   00163A  E1FA               	bnz	clear_0
   793                           
   794                           ; Clear objects allocated to BANK0 (40 bytes)
   795   00163C  EE00  F0A8         	lfsr	0,__pbssBANK0
   796   001640  0E28               	movlw	40
   797   001642                     clear_1:
   798   001642  6AEE               	clrf	postinc0,c
   799   001644  06E8               	decf	wreg,f,c
   800   001646  E1FD               	bnz	clear_1
   801                           
   802                           ; Clear objects allocated to COMRAM (13 bytes)
   803   001648  EE00  F044         	lfsr	0,__pbssCOMRAM
   804   00164C  0E0D               	movlw	13
   805   00164E                     clear_2:
   806   00164E  6AEE               	clrf	postinc0,c
   807   001650  06E8               	decf	wreg,f,c
   808   001652  E1FD               	bnz	clear_2
   809   001654                     end_of_initialization:
   810                           	callstack 0
   811   001654                     __end_of__initialization:
   812                           	callstack 0
   813   001654  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   814   001656  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   815   001658  0E00               	movlw	low (__Lmediumconst shr (0+16))
   816   00165A  6EF8               	movwf	tblptru,c
   817   00165C  0100               	movlb	0
   818   00165E  EF29  F000         	goto	_main	;jump to C main() function
   819                           
   820                           	psect	bssCOMRAM
   821   000044                     __pbssCOMRAM:
   822                           	callstack 0
   823   000044                     _width:
   824                           	callstack 0
   825   000044                     	ds	2
   826   000046                     _prec:
   827                           	callstack 0
   828   000046                     	ds	2
   829   000048                     sampleTMR0ISR@si:
   830                           	callstack 0
   831   000048                     	ds	2
   832   00004A                     _timer0ReloadVal:
   833                           	callstack 0
   834   00004A                     	ds	2
   835   00004C                     _TMR0_InterruptHandler:
   836                           	callstack 0
   837   00004C                     	ds	2
   838   00004E                     _ADC_InterruptHandler:
   839                           	callstack 0
   840   00004E                     	ds	2
   841   000050                     _eusart1RxLastError:
   842                           	callstack 0
   843   000050                     	ds	1
   844                           
   845                           	psect	bssBANK0
   846   0000A8                     __pbssBANK0:
   847                           	callstack 0
   848   0000A8                     _EUSART1_ErrorHandler:
   849                           	callstack 0
   850   0000A8                     	ds	2
   851   0000AA                     _EUSART1_OverrunErrorHandler:
   852                           	callstack 0
   853   0000AA                     	ds	2
   854   0000AC                     _EUSART1_FramingErrorHandler:
   855                           	callstack 0
   856   0000AC                     	ds	2
   857   0000AE                     _flags:
   858                           	callstack 0
   859   0000AE                     	ds	1
   860   0000AF                     _sampling:
   861                           	callstack 0
   862   0000AF                     	ds	1
   863   0000B0                     _dbuf:
   864                           	callstack 0
   865   0000B0                     	ds	32
   866                           
   867                           	psect	dataBANK0
   868   0000D0                     __pdataBANK0:
   869                           	callstack 0
   870   0000D0                     _threshold:
   871                           	callstack 0
   872   0000D0                     	ds	1
   873                           
   874                           	psect	bssBANK2
   875   000200                     __pbssBANK2:
   876                           	callstack 0
   877   000200                     _samples:
   878                           	callstack 0
   879   000200                     	ds	256
   880                           
   881                           	psect	cstackBANK1
   882   000100                     __pcstackBANK1:
   883                           	callstack 0
   884   000100                     main@crossings:
   885                           	callstack 0
   886                           
   887                           ; 256 bytes @ 0x0
   888   000100                     	ds	256
   889                           
   890                           	psect	cstackBANK0
   891   000060                     __pcstackBANK0:
   892                           	callstack 0
   893   000060                     _dtoa$1449:
   894                           	callstack 0
   895   000060                     utoa@w:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x0
   899   000060                     	ds	2
   900   000062                     dtoa@p:
   901                           	callstack 0
   902   000062                     utoa@p:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x2
   906   000062                     	ds	2
   907   000064                     dtoa@w:
   908                           	callstack 0
   909   000064                     utoa@n:
   910                           	callstack 0
   911                           
   912                           ; 8 bytes @ 0x4
   913   000064                     	ds	2
   914   000066                     dtoa@n:
   915                           	callstack 0
   916                           
   917                           ; 8 bytes @ 0x6
   918   000066                     	ds	6
   919   00006C                     utoa@i:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0xC
   923   00006C                     	ds	2
   924   00006E                     dtoa@s:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0xE
   928   00006E                     	ds	1
   929   00006F                     dtoa@i:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0xF
   933   00006F                     	ds	2
   934   000071                     vfpfcnvrt@fp:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x11
   938   000071                     	ds	2
   939   000073                     vfpfcnvrt@fmt:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x13
   943   000073                     	ds	2
   944   000075                     vfpfcnvrt@ap:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x15
   948   000075                     	ds	2
   949   000077                     vfpfcnvrt@c:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x17
   953   000077                     	ds	1
   954   000078                     vfpfcnvrt@convarg:
   955                           	callstack 0
   956                           
   957                           ; 8 bytes @ 0x18
   958   000078                     	ds	8
   959   000080                     vfpfcnvrt@cp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x20
   963   000080                     	ds	2
   964   000082                     ?_vfprintf:
   965                           	callstack 0
   966   000082                     vfprintf@fp:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x22
   970   000082                     	ds	2
   971   000084                     vfprintf@fmt:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x24
   975   000084                     	ds	2
   976   000086                     vfprintf@ap:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x26
   980   000086                     	ds	2
   981   000088                     ?_printf:
   982                           	callstack 0
   983   000088                     printf@fmt:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x28
   987   000088                     	ds	8
   988   000090                     printf@ap:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x30
   992   000090                     	ds	2
   993   000092                     ??_main:
   994                           
   995                           ; 1 bytes @ 0x32
   996   000092                     	ds	8
   997   00009A                     main@frequency:
   998                           	callstack 0
   999                           
  1000                           ; 4 bytes @ 0x3A
  1001   00009A                     	ds	4
  1002   00009E                     main@period:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x3E
  1006   00009E                     	ds	2
  1007   0000A0                     main@cmd:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x40
  1011   0000A0                     	ds	1
  1012   0000A1                     main@sample:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x41
  1016   0000A1                     	ds	1
  1017   0000A2                     main@j:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x42
  1021   0000A2                     	ds	1
  1022   0000A3                     main@ci:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0x43
  1026   0000A3                     	ds	1
  1027   0000A4                     main@avgPeriod:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x44
  1031   0000A4                     	ds	2
  1032   0000A6                     main@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x46
  1036   0000A6                     	ds	2
  1037                           
  1038                           	psect	cstackCOMRAM
  1039   000001                     __pcstackCOMRAM:
  1040                           	callstack 0
  1041   000001                     ?_TMR0_ReadTimer:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x0
  1045   000001                     	ds	2
  1046   000003                     ??_TMR0_ReadTimer:
  1047                           
  1048                           ; 1 bytes @ 0x2
  1049   000003                     	ds	2
  1050   000005                     TMR0_ReadTimer@readVal:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x4
  1054   000005                     	ds	2
  1055   000007                     TMR0_ReadTimer@readValLow:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x6
  1059   000007                     	ds	1
  1060   000008                     TMR0_ReadTimer@readValHigh:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x7
  1064   000008                     	ds	1
  1065   000009                     i2TMR0_WriteTimer@timerVal:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x8
  1069   000009                     	ds	2
  1070   00000B                     ??_INTERRUPT_InterruptManager:
  1071   00000B                     
  1072                           ; 1 bytes @ 0xA
  1073   00000B                     	ds	4
  1074   00000F                     ?___wmul:
  1075                           	callstack 0
  1076   00000F                     ?___aldiv:
  1077                           	callstack 0
  1078   00000F                     ?___aodiv:
  1079                           	callstack 0
  1080   00000F                     ?___aomod:
  1081                           	callstack 0
  1082   00000F                     ?___lodiv:
  1083                           	callstack 0
  1084   00000F                     ?___lomod:
  1085                           	callstack 0
  1086   00000F                     EUSART1_Write@txData:
  1087                           	callstack 0
  1088   00000F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1089                           	callstack 0
  1090   00000F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1091                           	callstack 0
  1092   00000F                     EUSART1_SetErrorHandler@interruptHandler:
  1093                           	callstack 0
  1094   00000F                     TMR0_WriteTimer@timerVal:
  1095                           	callstack 0
  1096   00000F                     TMR0_SetInterruptHandler@InterruptHandler:
  1097                           	callstack 0
  1098   00000F                     ___wmul@multiplier:
  1099                           	callstack 0
  1100   00000F                     ___aldiv@dividend:
  1101                           	callstack 0
  1102   00000F                     ___aodiv@dividend:
  1103                           	callstack 0
  1104   00000F                     ___aomod@dividend:
  1105                           	callstack 0
  1106   00000F                     ___lodiv@dividend:
  1107                           	callstack 0
  1108   00000F                     ___lomod@dividend:
  1109                           	callstack 0
  1110                           
  1111                           ; 8 bytes @ 0xE
  1112   00000F                     	ds	1
  1113   000010                     putch@txData:
  1114                           	callstack 0
  1115                           
  1116                           ; 1 bytes @ 0xF
  1117   000010                     	ds	1
  1118   000011                     ??_TMR0_Initialize:
  1119   000011                     ___wmul@multiplicand:
  1120                           	callstack 0
  1121   000011                     fputc@c:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x10
  1125   000011                     	ds	2
  1126   000013                     ___wmul@product:
  1127                           	callstack 0
  1128   000013                     fputc@fp:
  1129                           	callstack 0
  1130   000013                     ___aldiv@divisor:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x12
  1134   000013                     	ds	2
  1135   000015                     ??_fputc:
  1136                           
  1137                           ; 1 bytes @ 0x14
  1138   000015                     	ds	2
  1139   000017                     ___aldiv@counter:
  1140                           	callstack 0
  1141   000017                     ___aodiv@divisor:
  1142                           	callstack 0
  1143   000017                     ___aomod@divisor:
  1144                           	callstack 0
  1145   000017                     ___lodiv@divisor:
  1146                           	callstack 0
  1147   000017                     ___lomod@divisor:
  1148                           	callstack 0
  1149                           
  1150                           ; 8 bytes @ 0x16
  1151   000017                     	ds	1
  1152   000018                     ___aldiv@sign:
  1153                           	callstack 0
  1154                           
  1155                           ; 1 bytes @ 0x17
  1156   000018                     	ds	1
  1157   000019                     ___aldiv@quotient:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x18
  1161   000019                     	ds	1
  1162   00001A                     ctoa@fp:
  1163                           	callstack 0
  1164   00001A                     fputs@s:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x19
  1168   00001A                     	ds	2
  1169   00001C                     ctoa@c:
  1170                           	callstack 0
  1171   00001C                     fputs@fp:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x1B
  1175   00001C                     	ds	1
  1176   00001D                     ??_ctoa:
  1177                           
  1178                           ; 1 bytes @ 0x1C
  1179   00001D                     	ds	1
  1180   00001E                     fputs@c:
  1181                           	callstack 0
  1182   00001E                     ctoa@l:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x1D
  1186   00001E                     	ds	1
  1187   00001F                     ___aodiv@counter:
  1188                           	callstack 0
  1189   00001F                     ___aomod@counter:
  1190                           	callstack 0
  1191   00001F                     ___lomod@counter:
  1192                           	callstack 0
  1193   00001F                     fputs@i:
  1194                           	callstack 0
  1195   00001F                     ___lodiv@quotient:
  1196                           	callstack 0
  1197                           
  1198                           ; 8 bytes @ 0x1E
  1199   00001F                     	ds	1
  1200   000020                     ___aodiv@sign:
  1201                           	callstack 0
  1202   000020                     ___aomod@sign:
  1203                           	callstack 0
  1204   000020                     ctoa@w:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x1F
  1208   000020                     	ds	1
  1209   000021                     ?_abs:
  1210                           	callstack 0
  1211   000021                     pad@fp:
  1212                           	callstack 0
  1213   000021                     abs@a:
  1214                           	callstack 0
  1215   000021                     ___aodiv@quotient:
  1216                           	callstack 0
  1217                           
  1218                           ; 8 bytes @ 0x20
  1219   000021                     	ds	2
  1220   000023                     ??_abs:
  1221   000023                     pad@buf:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x22
  1225   000023                     	ds	2
  1226   000025                     pad@p:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x24
  1230   000025                     	ds	2
  1231   000027                     ??_pad:
  1232   000027                     ___lodiv@counter:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x26
  1236   000027                     	ds	1
  1237   000028                     pad@i:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x27
  1241   000028                     	ds	2
  1242   00002A                     pad@w:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x29
  1246   00002A                     	ds	2
  1247   00002C                     dtoa@fp:
  1248                           	callstack 0
  1249   00002C                     utoa@fp:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x2B
  1253   00002C                     	ds	2
  1254   00002E                     dtoa@d:
  1255                           	callstack 0
  1256   00002E                     utoa@d:
  1257                           	callstack 0
  1258                           
  1259                           ; 8 bytes @ 0x2D
  1260   00002E                     	ds	8
  1261   000036                     ??_dtoa:
  1262   000036                     ??_utoa:
  1263                           
  1264                           ; 1 bytes @ 0x35
  1265   000036                     	ds	8
  1266   00003E                     ??_vfpfcnvrt:
  1267                           
  1268                           ; 1 bytes @ 0x3D
  1269   00003E                     	ds	4
  1270   000042                     vfprintf@cfmt:
  1271                           	callstack 0
  1272                           
  1273                           ; 2 bytes @ 0x41
  1274   000042                     	ds	2
  1275   000044                     
  1276                           ; 1 bytes @ 0x43
  1277 ;;
  1278 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1279 ;;
  1280 ;; *************** function _main *****************
  1281 ;; Defined at:
  1282 ;;		line 48 in file "main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  crossings     256    0[BANK1 ] unsigned short [128]
  1287 ;;  frequency       4   58[BANK0 ] unsigned long 
  1288 ;;  i               2   70[BANK0 ] unsigned short 
  1289 ;;  avgPeriod       2   68[BANK0 ] unsigned short 
  1290 ;;  period          2   62[BANK0 ] unsigned short 
  1291 ;;  ci              1   67[BANK0 ] unsigned char 
  1292 ;;  j               1   66[BANK0 ] unsigned char 
  1293 ;;  sample          1   65[BANK0 ] unsigned char 
  1294 ;;  cmd             1   64[BANK0 ] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1304 ;;      Params:         0       0       0       0       0       0       0
  1305 ;;      Locals:         0      14     256       0       0       0       0
  1306 ;;      Temps:          0       8       0       0       0       0       0
  1307 ;;      Totals:         0      22     256       0       0       0       0
  1308 ;;Total ram usage:      278 bytes
  1309 ;; Hardware stack levels required when called: 13
  1310 ;; This function calls:
  1311 ;;		_EUSART1_Read
  1312 ;;		_EUSART1_is_rx_ready
  1313 ;;		_SYSTEM_Initialize
  1314 ;;		_TMR0_SetInterruptHandler
  1315 ;;		_TMR0_WriteTimer
  1316 ;;		___aldiv
  1317 ;;		___wmul
  1318 ;;		_printf
  1319 ;; This function is called by:
  1320 ;;		Startup code after reset
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text0
  1325   000052                     __ptext0:
  1326                           	callstack 0
  1327   000052                     _main:
  1328                           	callstack 18
  1329   000052                     
  1330                           ;main.c: 50:     uint16_t i;;main.c: 51:     uint8_t j;;main.c: 52:     char cmd;;main.c
      +                          : 54:     uint8_t sample;;main.c: 55:     uint16_t crossings[256/2];;main.c: 56:     uin
      +                          t8_t ci = 0;
  1331   000052  0E00               	movlw	0
  1332   000054  0100               	movlb	0	; () banked
  1333   000056  6FA3               	movwf	main@ci& (0+255),b
  1334                           
  1335                           ;main.c: 58:     uint16_t avgPeriod = 0;
  1336   000058  0E00               	movlw	0
  1337   00005A  6FA5               	movwf	(main@avgPeriod+1)& (0+255),b
  1338   00005C  0E00               	movlw	0
  1339   00005E  6FA4               	movwf	main@avgPeriod& (0+255),b
  1340   000060                     
  1341                           ; BSR set to: 0
  1342                           ;main.c: 59:     uint32_t frequency;;main.c: 61:     SYSTEM_Initialize();
  1343   000060  EC36  F00C         	call	_SYSTEM_Initialize	;wreg free
  1344   000064                     
  1345                           ;main.c: 63:     TMR0_WriteTimer(0x0000);
  1346   000064  0E00               	movlw	0
  1347   000066  6E10               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1348   000068  0E00               	movlw	0
  1349   00006A  6E0F               	movwf	TMR0_WriteTimer@timerVal^0,c
  1350   00006C  EC68  F00C         	call	_TMR0_WriteTimer	;wreg free
  1351   000070                     
  1352                           ;main.c: 64:     INTCONbits.TMR0IF = 0;
  1353   000070  94F2               	bcf	242,2,c	;volatile
  1354   000072                     l290:
  1355   000072  A4F2               	btfss	242,2,c	;volatile
  1356   000074  EF3E  F000         	goto	u2301
  1357   000078  EF40  F000         	goto	u2300
  1358   00007C                     u2301:
  1359   00007C  EF39  F000         	goto	l290
  1360   000080                     u2300:
  1361   000080                     
  1362                           ;main.c: 67:     TMR0_SetInterruptHandler(sampleTMR0ISR);
  1363   000080  0E5C               	movlw	low _sampleTMR0ISR
  1364   000082  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1365   000084  0E15               	movlw	high _sampleTMR0ISR
  1366   000086  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1367   000088  EC6D  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  1368   00008C                     
  1369                           ;main.c: 68:     (INTCONbits.GIE = 1);
  1370   00008C  8EF2               	bsf	242,7,c	;volatile
  1371   00008E                     
  1372                           ;main.c: 69:     (INTCONbits.PEIE = 1);
  1373   00008E  8CF2               	bsf	242,6,c	;volatile
  1374   000090                     
  1375                           ;main.c: 71:     printf("inLab 08\r\n");
  1376   000090  0ECB               	movlw	low STR_1
  1377   000092  0100               	movlb	0	; () banked
  1378   000094  6F88               	movwf	printf@fmt& (0+255),b
  1379   000096  0E7F               	movlw	high STR_1
  1380   000098  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1381   00009A  ECDE  F00B         	call	_printf	;wreg free
  1382   00009E                     
  1383                           ;main.c: 72:     printf("Microphone experiments\r\n");
  1384   00009E  0E19               	movlw	low STR_2
  1385   0000A0  0100               	movlb	0	; () banked
  1386   0000A2  6F88               	movwf	printf@fmt& (0+255),b
  1387   0000A4  0E7F               	movlw	high STR_2
  1388   0000A6  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1389   0000A8  ECDE  F00B         	call	_printf	;wreg free
  1390   0000AC                     
  1391                           ;main.c: 73:     printf("Dev'21\r\n");
  1392   0000AC  0ED6               	movlw	low STR_3
  1393   0000AE  0100               	movlb	0	; () banked
  1394   0000B0  6F88               	movwf	printf@fmt& (0+255),b
  1395   0000B2  0E7F               	movlw	high STR_3
  1396   0000B4  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1397   0000B6  ECDE  F00B         	call	_printf	;wreg free
  1398   0000BA                     
  1399                           ;main.c: 74:     printf("> ");
  1400   0000BA  0EFB               	movlw	low STR_4
  1401   0000BC  0100               	movlb	0	; () banked
  1402   0000BE  6F88               	movwf	printf@fmt& (0+255),b
  1403   0000C0  0E7F               	movlw	high STR_4
  1404   0000C2  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1405   0000C4  ECDE  F00B         	call	_printf	;wreg free
  1406   0000C8                     l3032:
  1407                           
  1408                           ;main.c: 77:     {;main.c: 78:         if ((EUSART1_is_rx_ready()))
  1409   0000C8  EC59  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  1410   0000CC  0900               	iorlw	0
  1411   0000CE  B4D8               	btfsc	status,2,c
  1412   0000D0  EF6C  F000         	goto	u2311
  1413   0000D4  EF6E  F000         	goto	u2310
  1414   0000D8                     u2311:
  1415   0000D8  EF64  F000         	goto	l3032
  1416   0000DC                     u2310:
  1417   0000DC                     
  1418                           ;main.c: 79:         {;main.c: 80:             cmd = EUSART1_Read();
  1419   0000DC  ECF2  F00B         	call	_EUSART1_Read	;wreg free
  1420   0000E0  0100               	movlb	0	; () banked
  1421   0000E2  6FA0               	movwf	main@cmd& (0+255),b
  1422   0000E4                     
  1423                           ; BSR set to: 0
  1424                           ;main.c: 81:             printf("%c\n\r", cmd);
  1425   0000E4  0EF2               	movlw	low STR_5
  1426   0000E6  6F88               	movwf	printf@fmt& (0+255),b
  1427   0000E8  0E7F               	movlw	high STR_5
  1428   0000EA  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1429   0000EC  C0A0  F08A         	movff	main@cmd,?_printf+2
  1430   0000F0  6B8B               	clrf	(?_printf+3)& (0+255),b
  1431   0000F2  ECDE  F00B         	call	_printf	;wreg free
  1432                           
  1433                           ;main.c: 82:             switch (cmd)
  1434   0000F6  EF59  F003         	goto	l3186
  1435   0000FA                     l3038:
  1436                           
  1437                           ; BSR set to: 0
  1438                           ;main.c: 85:                     printf("------------------------------\r\n");
  1439   0000FA  0E75               	movlw	low STR_6
  1440   0000FC  6F88               	movwf	printf@fmt& (0+255),b
  1441   0000FE  0E7E               	movlw	high STR_6
  1442   000100  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1443   000102  ECDE  F00B         	call	_printf	;wreg free
  1444                           
  1445                           ;main.c: 86:                     printf("?: Help menu\r\n");
  1446   000106  0E9F               	movlw	low STR_7
  1447   000108  0100               	movlb	0	; () banked
  1448   00010A  6F88               	movwf	printf@fmt& (0+255),b
  1449   00010C  0E7F               	movlw	high STR_7
  1450   00010E  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1451   000110  ECDE  F00B         	call	_printf	;wreg free
  1452                           
  1453                           ;main.c: 87:                     printf("o: k\r\n");
  1454   000114  0EDF               	movlw	low STR_8
  1455   000116  0100               	movlb	0	; () banked
  1456   000118  6F88               	movwf	printf@fmt& (0+255),b
  1457   00011A  0E7F               	movlw	high STR_8
  1458   00011C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1459   00011E  ECDE  F00B         	call	_printf	;wreg free
  1460                           
  1461                           ;main.c: 88:                     printf("Z: Reset processor\r\n");
  1462   000122  0E62               	movlw	low STR_9
  1463   000124  0100               	movlb	0	; () banked
  1464   000126  6F88               	movwf	printf@fmt& (0+255),b
  1465   000128  0E7F               	movlw	high STR_9
  1466   00012A  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1467   00012C  ECDE  F00B         	call	_printf	;wreg free
  1468                           
  1469                           ;main.c: 89:                     printf("z: Clear the terminal\r\n");
  1470   000130  0E32               	movlw	low STR_10
  1471   000132  0100               	movlb	0	; () banked
  1472   000134  6F88               	movwf	printf@fmt& (0+255),b
  1473   000136  0E7F               	movlw	high STR_10
  1474   000138  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1475   00013A  ECDE  F00B         	call	_printf	;wreg free
  1476                           
  1477                           ;main.c: 90:                     printf("T: increase sampling threshold\n\r");
  1478   00013E  0ED8               	movlw	low STR_11
  1479   000140  0100               	movlb	0	; () banked
  1480   000142  6F88               	movwf	printf@fmt& (0+255),b
  1481   000144  0E7E               	movlw	high STR_11
  1482   000146  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1483   000148  ECDE  F00B         	call	_printf	;wreg free
  1484                           
  1485                           ;main.c: 91:                     printf("t: decrease sampling threshold\n\r");
  1486   00014C  0EB7               	movlw	low STR_12
  1487   00014E  0100               	movlb	0	; () banked
  1488   000150  6F88               	movwf	printf@fmt& (0+255),b
  1489   000152  0E7E               	movlw	high STR_12
  1490   000154  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1491   000156  ECDE  F00B         	call	_printf	;wreg free
  1492                           
  1493                           ;main.c: 92:                     printf("f: compute the period from %d samples from ADC\
      +                          r\n", 256);
  1494   00015A  0E1F               	movlw	low STR_13
  1495   00015C  0100               	movlb	0	; () banked
  1496   00015E  6F88               	movwf	printf@fmt& (0+255),b
  1497   000160  0E7E               	movlw	high STR_13
  1498   000162  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1499   000164  0E01               	movlw	1
  1500   000166  6F8B               	movwf	(?_printf+3)& (0+255),b
  1501   000168  0E00               	movlw	0
  1502   00016A  6F8A               	movwf	(?_printf+2)& (0+255),b
  1503   00016C  ECDE  F00B         	call	_printf	;wreg free
  1504                           
  1505                           ;main.c: 93:                     printf("s: gather %d samples from ADC\r\n", 256);
  1506   000170  0EF9               	movlw	low STR_14
  1507   000172  0100               	movlb	0	; () banked
  1508   000174  6F88               	movwf	printf@fmt& (0+255),b
  1509   000176  0E7E               	movlw	high STR_14
  1510   000178  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1511   00017A  0E01               	movlw	1
  1512   00017C  6F8B               	movwf	(?_printf+3)& (0+255),b
  1513   00017E  0E00               	movlw	0
  1514   000180  6F8A               	movwf	(?_printf+2)& (0+255),b
  1515   000182  ECDE  F00B         	call	_printf	;wreg free
  1516                           
  1517                           ;main.c: 94:                     printf("0-9: switch sampled channel to ANx\r\n");
  1518   000186  0E50               	movlw	low STR_15
  1519   000188  0100               	movlb	0	; () banked
  1520   00018A  6F88               	movwf	printf@fmt& (0+255),b
  1521   00018C  0E7E               	movlw	high STR_15
  1522   00018E  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1523   000190  ECDE  F00B         	call	_printf	;wreg free
  1524                           
  1525                           ;main.c: 95:                     printf("------------------------------\r\n");
  1526   000194  0E75               	movlw	low STR_6
  1527   000196  0100               	movlb	0	; () banked
  1528   000198  6F88               	movwf	printf@fmt& (0+255),b
  1529   00019A  0E7E               	movlw	high STR_6
  1530   00019C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1531   00019E  ECDE  F00B         	call	_printf	;wreg free
  1532                           
  1533                           ;main.c: 96:                     break;
  1534   0001A2  EF87  F003         	goto	l3188
  1535   0001A6                     l3040:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 98:                     printf(" k\r\n");
  1539   0001A6  0EE1               	movlw	low (STR_8+2)
  1540   0001A8  6F88               	movwf	printf@fmt& (0+255),b
  1541   0001AA  0E7F               	movlw	high (STR_8+2)
  1542   0001AC  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1543   0001AE  ECDE  F00B         	call	_printf	;wreg free
  1544                           
  1545                           ;main.c: 99:                     break;
  1546   0001B2  EF87  F003         	goto	l3188
  1547   0001B6                     l3042:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 101:                     for (i = 0; i < 40; i++) printf("\n\r");
  1551   0001B6  0E00               	movlw	0
  1552   0001B8  6FA7               	movwf	(main@i+1)& (0+255),b
  1553   0001BA  0E00               	movlw	0
  1554   0001BC  6FA6               	movwf	main@i& (0+255),b
  1555   0001BE                     l3048:
  1556                           
  1557                           ; BSR set to: 0
  1558   0001BE  0EEF               	movlw	low (STR_32+2)
  1559   0001C0  6F88               	movwf	printf@fmt& (0+255),b
  1560   0001C2  0E7F               	movlw	high (STR_32+2)
  1561   0001C4  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1562   0001C6  ECDE  F00B         	call	_printf	;wreg free
  1563   0001CA  0100               	movlb	0	; () banked
  1564   0001CC  4BA6               	infsnz	main@i& (0+255),f,b
  1565   0001CE  2BA7               	incf	(main@i+1)& (0+255),f,b
  1566   0001D0                     
  1567                           ; BSR set to: 0
  1568   0001D0  51A7               	movf	(main@i+1)& (0+255),w,b
  1569   0001D2  E109               	bnz	u2320
  1570   0001D4  0E28               	movlw	40
  1571   0001D6  5DA6               	subwf	main@i& (0+255),w,b
  1572   0001D8  A0D8               	btfss	status,0,c
  1573   0001DA  EFF1  F000         	goto	u2321
  1574   0001DE  EFF3  F000         	goto	u2320
  1575   0001E2                     u2321:
  1576   0001E2  EFDF  F000         	goto	l3048
  1577   0001E6                     u2320:
  1578   0001E6                     
  1579                           ; BSR set to: 0
  1580   0001E6  00FF               	reset		;# 
  1581                           
  1582                           ;main.c: 103:                     break;
  1583   0001E8  EF87  F003         	goto	l3188
  1584   0001EC                     l3054:
  1585                           
  1586                           ; BSR set to: 0
  1587                           ;main.c: 105:                     for (i = 0; i < 40; i++) printf("\n\r");
  1588   0001EC  0E00               	movlw	0
  1589   0001EE  6FA7               	movwf	(main@i+1)& (0+255),b
  1590   0001F0  0E00               	movlw	0
  1591   0001F2  6FA6               	movwf	main@i& (0+255),b
  1592   0001F4                     l3060:
  1593                           
  1594                           ; BSR set to: 0
  1595   0001F4  0EEF               	movlw	low (STR_32+2)
  1596   0001F6  6F88               	movwf	printf@fmt& (0+255),b
  1597   0001F8  0E7F               	movlw	high (STR_32+2)
  1598   0001FA  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1599   0001FC  ECDE  F00B         	call	_printf	;wreg free
  1600   000200  0100               	movlb	0	; () banked
  1601   000202  4BA6               	infsnz	main@i& (0+255),f,b
  1602   000204  2BA7               	incf	(main@i+1)& (0+255),f,b
  1603   000206                     
  1604                           ; BSR set to: 0
  1605   000206  51A7               	movf	(main@i+1)& (0+255),w,b
  1606   000208  E109               	bnz	u2330
  1607   00020A  0E28               	movlw	40
  1608   00020C  5DA6               	subwf	main@i& (0+255),w,b
  1609   00020E  A0D8               	btfss	status,0,c
  1610   000210  EF0C  F001         	goto	u2331
  1611   000214  EF0E  F001         	goto	u2330
  1612   000218                     u2331:
  1613   000218  EFFA  F000         	goto	l3060
  1614   00021C                     u2330:
  1615   00021C  EF87  F003         	goto	l3188
  1616   000220                     l3066:
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;main.c: 108:                     threshold += 5;
  1620   000220  0E05               	movlw	5
  1621   000222  27D0               	addwf	_threshold& (0+255),f,b
  1622                           
  1623                           ;main.c: 109:                     break;
  1624   000224  EF87  F003         	goto	l3188
  1625   000228                     l3068:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;main.c: 111:                     threshold -= 5;
  1629   000228  0E05               	movlw	5
  1630   00022A  5FD0               	subwf	_threshold& (0+255),f,b
  1631                           
  1632                           ;main.c: 112:                     break;
  1633   00022C  EF87  F003         	goto	l3188
  1634   000230                     l3070:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 115:                     {;main.c: 116:                         printf("taking 
      +                          samples: \n\r");
  1638   000230  0E8C               	movlw	low STR_20
  1639   000232  6F88               	movwf	printf@fmt& (0+255),b
  1640   000234  0E7F               	movlw	high STR_20
  1641   000236  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1642   000238  ECDE  F00B         	call	_printf	;wreg free
  1643   00023C                     
  1644                           ;main.c: 117:                         sampling = 1;
  1645   00023C  0E01               	movlw	1
  1646   00023E  0100               	movlb	0	; () banked
  1647   000240  6FAF               	movwf	_sampling& (0+255),b
  1648   000242                     l3074:
  1649                           
  1650                           ; BSR set to: 0
  1651   000242  51AF               	movf	_sampling& (0+255),w,b
  1652   000244  A4D8               	btfss	status,2,c
  1653   000246  EF27  F001         	goto	u2341
  1654   00024A  EF29  F001         	goto	u2340
  1655   00024E                     u2341:
  1656   00024E  EF21  F001         	goto	l3074
  1657   000252                     u2340:
  1658   000252                     
  1659                           ; BSR set to: 0
  1660                           ;main.c: 120:                     };main.c: 122:                     {;main.c: 124:     
      +                                              for(i = 1; i < 256; i++)
  1661   000252  0E00               	movlw	0
  1662   000254  6FA7               	movwf	(main@i+1)& (0+255),b
  1663   000256  0E01               	movlw	1
  1664   000258  6FA6               	movwf	main@i& (0+255),b
  1665   00025A                     l3082:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 125:                         {;main.c: 126:                             if(((sa
      +                          mples[i-1] <= 128) && (samples[i] > 128)) || ((samples[i-1] > 128) && (samples[i] <= 128
      +                          )))
  1669   00025A  0EFF               	movlw	low (_samples+65535)
  1670   00025C  25A6               	addwf	main@i& (0+255),w,b
  1671   00025E  6ED9               	movwf	fsr2l,c
  1672   000260  0E01               	movlw	high (_samples+65535)
  1673   000262  21A7               	addwfc	(main@i+1)& (0+255),w,b
  1674   000264  6EDA               	movwf	fsr2h,c
  1675   000266  0E81               	movlw	129
  1676   000268  60DF               	cpfslt	indf2,c
  1677   00026A  EF39  F001         	goto	u2351
  1678   00026E  EF3B  F001         	goto	u2350
  1679   000272                     u2351:
  1680   000272  EF49  F001         	goto	l3086
  1681   000276                     u2350:
  1682   000276                     
  1683                           ; BSR set to: 0
  1684   000276  0E00               	movlw	low _samples
  1685   000278  25A6               	addwf	main@i& (0+255),w,b
  1686   00027A  6ED9               	movwf	fsr2l,c
  1687   00027C  0E02               	movlw	high _samples
  1688   00027E  21A7               	addwfc	(main@i+1)& (0+255),w,b
  1689   000280  6EDA               	movwf	fsr2h,c
  1690   000282  0E81               	movlw	129
  1691   000284  60DF               	cpfslt	indf2,c
  1692   000286  EF47  F001         	goto	u2361
  1693   00028A  EF49  F001         	goto	u2360
  1694   00028E                     u2361:
  1695   00028E  EF65  F001         	goto	l3090
  1696   000292                     u2360:
  1697   000292                     l3086:
  1698                           
  1699                           ; BSR set to: 0
  1700   000292  0EFF               	movlw	low (_samples+65535)
  1701   000294  25A6               	addwf	main@i& (0+255),w,b
  1702   000296  6ED9               	movwf	fsr2l,c
  1703   000298  0E01               	movlw	high (_samples+65535)
  1704   00029A  21A7               	addwfc	(main@i+1)& (0+255),w,b
  1705   00029C  6EDA               	movwf	fsr2h,c
  1706   00029E  0E80               	movlw	128
  1707   0002A0  64DF               	cpfsgt	indf2,c
  1708   0002A2  EF55  F001         	goto	u2371
  1709   0002A6  EF57  F001         	goto	u2370
  1710   0002AA                     u2371:
  1711   0002AA  EF72  F001         	goto	l3094
  1712   0002AE                     u2370:
  1713   0002AE                     
  1714                           ; BSR set to: 0
  1715   0002AE  0E00               	movlw	low _samples
  1716   0002B0  25A6               	addwf	main@i& (0+255),w,b
  1717   0002B2  6ED9               	movwf	fsr2l,c
  1718   0002B4  0E02               	movlw	high _samples
  1719   0002B6  21A7               	addwfc	(main@i+1)& (0+255),w,b
  1720   0002B8  6EDA               	movwf	fsr2h,c
  1721   0002BA  0E81               	movlw	129
  1722   0002BC  60DF               	cpfslt	indf2,c
  1723   0002BE  EF63  F001         	goto	u2381
  1724   0002C2  EF65  F001         	goto	u2380
  1725   0002C6                     u2381:
  1726   0002C6  EF72  F001         	goto	l3094
  1727   0002CA                     u2380:
  1728   0002CA                     l3090:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 127:                             {;main.c: 129:                                
      +                           crossings[ci] = i;
  1732   0002CA  51A3               	movf	main@ci& (0+255),w,b
  1733   0002CC  0D02               	mullw	2
  1734   0002CE  0E00               	movlw	low main@crossings
  1735   0002D0  24F3               	addwf	243,w,c
  1736   0002D2  6ED9               	movwf	fsr2l,c
  1737   0002D4  0E01               	movlw	high main@crossings
  1738   0002D6  20F4               	addwfc	prodh,w,c
  1739   0002D8  6EDA               	movwf	fsr2h,c
  1740   0002DA  C0A6  FFDE         	movff	main@i,postinc2
  1741   0002DE  C0A7  FFDD         	movff	main@i+1,postdec2
  1742   0002E2                     
  1743                           ; BSR set to: 0
  1744                           ;main.c: 130:                                 ci++;
  1745   0002E2  2BA3               	incf	main@ci& (0+255),f,b
  1746   0002E4                     l3094:
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;main.c: 132:                         }
  1750   0002E4  4BA6               	infsnz	main@i& (0+255),f,b
  1751   0002E6  2BA7               	incf	(main@i+1)& (0+255),f,b
  1752   0002E8                     
  1753                           ; BSR set to: 0
  1754   0002E8  05A7               	decf	(main@i+1)& (0+255),w,b
  1755   0002EA  A0D8               	btfss	status,0,c
  1756   0002EC  EF7A  F001         	goto	u2391
  1757   0002F0  EF7C  F001         	goto	u2390
  1758   0002F4                     u2391:
  1759   0002F4  EF2D  F001         	goto	l3082
  1760   0002F8                     u2390:
  1761   0002F8                     
  1762                           ; BSR set to: 0
  1763                           ;main.c: 133:                     };main.c: 135:                     {;main.c: 136:     
      +                                              printf("The last 256 ADC samples from the microphone are:\n\r");
  1764   0002F8  0EB7               	movlw	low STR_21
  1765   0002FA  6F88               	movwf	printf@fmt& (0+255),b
  1766   0002FC  0E7D               	movlw	high STR_21
  1767   0002FE  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1768   000300  ECDE  F00B         	call	_printf	;wreg free
  1769   000304                     
  1770                           ;main.c: 137:                         for(i = 0; i < 256/16; i++)
  1771   000304  0E00               	movlw	0
  1772   000306  0100               	movlb	0	; () banked
  1773   000308  6FA7               	movwf	(main@i+1)& (0+255),b
  1774   00030A  0E00               	movlw	0
  1775   00030C  6FA6               	movwf	main@i& (0+255),b
  1776   00030E                     l3106:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;main.c: 138:                         {;main.c: 139:                             printf(
      +                          "S[%u] ", i * 16);
  1780   00030E  0EE6               	movlw	low STR_22
  1781   000310  6F88               	movwf	printf@fmt& (0+255),b
  1782   000312  0E7F               	movlw	high STR_22
  1783   000314  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1784   000316  C0A6  F092         	movff	main@i,??_main
  1785   00031A  C0A7  F093         	movff	main@i+1,??_main+1
  1786   00031E  3B92               	swapf	??_main& (0+255),f,b
  1787   000320  3B93               	swapf	(??_main+1)& (0+255),f,b
  1788   000322  0EF0               	movlw	240
  1789   000324  1793               	andwf	(??_main+1)& (0+255),f,b
  1790   000326  5192               	movf	??_main& (0+255),w,b
  1791   000328  0B0F               	andlw	15
  1792   00032A  1393               	iorwf	(??_main+1)& (0+255),f,b
  1793   00032C  0EF0               	movlw	240
  1794   00032E  1792               	andwf	??_main& (0+255),f,b
  1795   000330  C092  F08A         	movff	??_main,?_printf+2
  1796   000334  C093  F08B         	movff	??_main+1,?_printf+3
  1797   000338  ECDE  F00B         	call	_printf	;wreg free
  1798   00033C                     
  1799                           ;main.c: 140:                             if(i*16 < 100) printf(" "); if(i*16 < 10) prin
      +                          tf(" ");
  1800   00033C  C0A6  F092         	movff	main@i,??_main
  1801   000340  C0A7  F093         	movff	main@i+1,??_main+1
  1802   000344  0100               	movlb	0	; () banked
  1803   000346  3B92               	swapf	??_main& (0+255),f,b
  1804   000348  3B93               	swapf	(??_main+1)& (0+255),f,b
  1805   00034A  0EF0               	movlw	240
  1806   00034C  1793               	andwf	(??_main+1)& (0+255),f,b
  1807   00034E  5192               	movf	??_main& (0+255),w,b
  1808   000350  0B0F               	andlw	15
  1809   000352  1393               	iorwf	(??_main+1)& (0+255),f,b
  1810   000354  0EF0               	movlw	240
  1811   000356  1792               	andwf	??_main& (0+255),f,b
  1812   000358  5193               	movf	(??_main+1)& (0+255),w,b
  1813   00035A  E107               	bnz	u2401
  1814   00035C  0E64               	movlw	100
  1815   00035E  5D92               	subwf	??_main& (0+255),w,b
  1816   000360  B0D8               	btfsc	status,0,c
  1817   000362  EFB5  F001         	goto	u2401
  1818   000366  EFB7  F001         	goto	u2400
  1819   00036A                     u2401:
  1820   00036A  EFBD  F001         	goto	l3112
  1821   00036E                     u2400:
  1822   00036E                     
  1823                           ; BSR set to: 0
  1824   00036E  0EFC               	movlw	low (STR_4+1)
  1825   000370  6F88               	movwf	printf@fmt& (0+255),b
  1826   000372  0E7F               	movlw	high (STR_4+1)
  1827   000374  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1828   000376  ECDE  F00B         	call	_printf	;wreg free
  1829   00037A                     l3112:
  1830   00037A  C0A6  F092         	movff	main@i,??_main
  1831   00037E  C0A7  F093         	movff	main@i+1,??_main+1
  1832   000382  0100               	movlb	0	; () banked
  1833   000384  3B92               	swapf	??_main& (0+255),f,b
  1834   000386  3B93               	swapf	(??_main+1)& (0+255),f,b
  1835   000388  0EF0               	movlw	240
  1836   00038A  1793               	andwf	(??_main+1)& (0+255),f,b
  1837   00038C  5192               	movf	??_main& (0+255),w,b
  1838   00038E  0B0F               	andlw	15
  1839   000390  1393               	iorwf	(??_main+1)& (0+255),f,b
  1840   000392  0EF0               	movlw	240
  1841   000394  1792               	andwf	??_main& (0+255),f,b
  1842   000396  5193               	movf	(??_main+1)& (0+255),w,b
  1843   000398  E107               	bnz	u2411
  1844   00039A  0E0A               	movlw	10
  1845   00039C  5D92               	subwf	??_main& (0+255),w,b
  1846   00039E  B0D8               	btfsc	status,0,c
  1847   0003A0  EFD4  F001         	goto	u2411
  1848   0003A4  EFD6  F001         	goto	u2410
  1849   0003A8                     u2411:
  1850   0003A8  EFDC  F001         	goto	l3116
  1851   0003AC                     u2410:
  1852   0003AC                     
  1853                           ; BSR set to: 0
  1854   0003AC  0EFC               	movlw	low (STR_4+1)
  1855   0003AE  6F88               	movwf	printf@fmt& (0+255),b
  1856   0003B0  0E7F               	movlw	high (STR_4+1)
  1857   0003B2  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1858   0003B4  ECDE  F00B         	call	_printf	;wreg free
  1859   0003B8                     l3116:
  1860                           
  1861                           ;main.c: 141:                             for(j = 0; j < 16; j++)
  1862   0003B8  0E00               	movlw	0
  1863   0003BA  0100               	movlb	0	; () banked
  1864   0003BC  6FA2               	movwf	main@j& (0+255),b
  1865   0003BE                     l3122:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;main.c: 142:                             {;main.c: 143:                                
      +                           sample = samples[(i * 16) + j];
  1869   0003BE  C0A6  F092         	movff	main@i,??_main
  1870   0003C2  C0A7  F093         	movff	main@i+1,??_main+1
  1871   0003C6  3B92               	swapf	??_main& (0+255),f,b
  1872   0003C8  3B93               	swapf	(??_main+1)& (0+255),f,b
  1873   0003CA  0EF0               	movlw	240
  1874   0003CC  1793               	andwf	(??_main+1)& (0+255),f,b
  1875   0003CE  5192               	movf	??_main& (0+255),w,b
  1876   0003D0  0B0F               	andlw	15
  1877   0003D2  1393               	iorwf	(??_main+1)& (0+255),f,b
  1878   0003D4  0EF0               	movlw	240
  1879   0003D6  1792               	andwf	??_main& (0+255),f,b
  1880   0003D8  0E00               	movlw	low _samples
  1881   0003DA  2592               	addwf	??_main& (0+255),w,b
  1882   0003DC  6F94               	movwf	(??_main+2)& (0+255),b
  1883   0003DE  0E02               	movlw	high _samples
  1884   0003E0  2193               	addwfc	(??_main+1)& (0+255),w,b
  1885   0003E2  6F95               	movwf	(??_main+3)& (0+255),b
  1886   0003E4  51A2               	movf	main@j& (0+255),w,b
  1887   0003E6  2594               	addwf	(??_main+2)& (0+255),w,b
  1888   0003E8  6ED9               	movwf	fsr2l,c
  1889   0003EA  0E00               	movlw	0
  1890   0003EC  2195               	addwfc	(??_main+3)& (0+255),w,b
  1891   0003EE  6EDA               	movwf	fsr2h,c
  1892   0003F0  50DF               	movf	indf2,w,c
  1893   0003F2  6FA1               	movwf	main@sample& (0+255),b
  1894   0003F4                     
  1895                           ; BSR set to: 0
  1896                           ;main.c: 144:                                 printf("%u ", sample);
  1897   0003F4  0EF7               	movlw	low STR_25
  1898   0003F6  6F88               	movwf	printf@fmt& (0+255),b
  1899   0003F8  0E7F               	movlw	high STR_25
  1900   0003FA  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1901   0003FC  C0A1  F08A         	movff	main@sample,?_printf+2
  1902   000400  6B8B               	clrf	(?_printf+3)& (0+255),b
  1903   000402  ECDE  F00B         	call	_printf	;wreg free
  1904   000406                     
  1905                           ;main.c: 145:                                 if(sample < 100) printf(" "); if(sample < 
      +                          10) printf(" ");
  1906   000406  0E64               	movlw	100
  1907   000408  0100               	movlb	0	; () banked
  1908   00040A  61A1               	cpfslt	main@sample& (0+255),b
  1909   00040C  EF0A  F002         	goto	u2421
  1910   000410  EF0C  F002         	goto	u2420
  1911   000414                     u2421:
  1912   000414  EF12  F002         	goto	l3130
  1913   000418                     u2420:
  1914   000418                     
  1915                           ; BSR set to: 0
  1916   000418  0EFC               	movlw	low (STR_4+1)
  1917   00041A  6F88               	movwf	printf@fmt& (0+255),b
  1918   00041C  0E7F               	movlw	high (STR_4+1)
  1919   00041E  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1920   000420  ECDE  F00B         	call	_printf	;wreg free
  1921   000424                     l3130:
  1922   000424  0E0A               	movlw	10
  1923   000426  0100               	movlb	0	; () banked
  1924   000428  61A1               	cpfslt	main@sample& (0+255),b
  1925   00042A  EF19  F002         	goto	u2431
  1926   00042E  EF1B  F002         	goto	u2430
  1927   000432                     u2431:
  1928   000432  EF21  F002         	goto	l3134
  1929   000436                     u2430:
  1930   000436                     
  1931                           ; BSR set to: 0
  1932   000436  0EFC               	movlw	low (STR_4+1)
  1933   000438  6F88               	movwf	printf@fmt& (0+255),b
  1934   00043A  0E7F               	movlw	high (STR_4+1)
  1935   00043C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1936   00043E  ECDE  F00B         	call	_printf	;wreg free
  1937   000442                     l3134:
  1938                           
  1939                           ;main.c: 146:                             }
  1940   000442  0100               	movlb	0	; () banked
  1941   000444  2BA2               	incf	main@j& (0+255),f,b
  1942   000446                     
  1943                           ; BSR set to: 0
  1944   000446  0E0F               	movlw	15
  1945   000448  65A2               	cpfsgt	main@j& (0+255),b
  1946   00044A  EF29  F002         	goto	u2441
  1947   00044E  EF2B  F002         	goto	u2440
  1948   000452                     u2441:
  1949   000452  EFDF  F001         	goto	l3122
  1950   000456                     u2440:
  1951   000456                     
  1952                           ; BSR set to: 0
  1953                           ;main.c: 147:                             printf("\n\r");
  1954   000456  0EEF               	movlw	low (STR_32+2)
  1955   000458  6F88               	movwf	printf@fmt& (0+255),b
  1956   00045A  0E7F               	movlw	high (STR_32+2)
  1957   00045C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1958   00045E  ECDE  F00B         	call	_printf	;wreg free
  1959   000462                     
  1960                           ;main.c: 148:                         }
  1961   000462  0100               	movlb	0	; () banked
  1962   000464  4BA6               	infsnz	main@i& (0+255),f,b
  1963   000466  2BA7               	incf	(main@i+1)& (0+255),f,b
  1964   000468                     
  1965                           ; BSR set to: 0
  1966   000468  51A7               	movf	(main@i+1)& (0+255),w,b
  1967   00046A  E109               	bnz	u2450
  1968   00046C  0E10               	movlw	16
  1969   00046E  5DA6               	subwf	main@i& (0+255),w,b
  1970   000470  A0D8               	btfss	status,0,c
  1971   000472  EF3D  F002         	goto	u2451
  1972   000476  EF3F  F002         	goto	u2450
  1973   00047A                     u2451:
  1974   00047A  EF87  F001         	goto	l3106
  1975   00047E                     u2450:
  1976   00047E                     
  1977                           ; BSR set to: 0
  1978                           ;main.c: 149:                         printf("\n\r");
  1979   00047E  0EEF               	movlw	low (STR_32+2)
  1980   000480  6F88               	movwf	printf@fmt& (0+255),b
  1981   000482  0E7F               	movlw	high (STR_32+2)
  1982   000484  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1983   000486  ECDE  F00B         	call	_printf	;wreg free
  1984                           
  1985                           ;main.c: 150:                     };main.c: 152:                     {;main.c: 153:     
      +                                              printf("The sound wave crossed at the following indicies:\n\r");
  1986   00048A  0EEB               	movlw	low STR_30
  1987   00048C  0100               	movlb	0	; () banked
  1988   00048E  6F88               	movwf	printf@fmt& (0+255),b
  1989   000490  0E7D               	movlw	high STR_30
  1990   000492  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1991   000494  ECDE  F00B         	call	_printf	;wreg free
  1992   000498                     
  1993                           ;main.c: 154:                         for(i = 0; i < ci; i++)
  1994   000498  0E00               	movlw	0
  1995   00049A  0100               	movlb	0	; () banked
  1996   00049C  6FA7               	movwf	(main@i+1)& (0+255),b
  1997   00049E  0E00               	movlw	0
  1998   0004A0  6FA6               	movwf	main@i& (0+255),b
  1999   0004A2  EF69  F002         	goto	l3152
  2000   0004A6                     l3148:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ;main.c: 155:                         {;main.c: 156:                             printf(
      +                          "%u ", crossings[i]);
  2004   0004A6  0EF7               	movlw	low STR_25
  2005   0004A8  6F88               	movwf	printf@fmt& (0+255),b
  2006   0004AA  0E7F               	movlw	high STR_25
  2007   0004AC  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2008   0004AE  90D8               	bcf	status,0,c
  2009   0004B0  35A6               	rlcf	main@i& (0+255),w,b
  2010   0004B2  6ED9               	movwf	fsr2l,c
  2011   0004B4  35A7               	rlcf	(main@i+1)& (0+255),w,b
  2012   0004B6  6EDA               	movwf	fsr2h,c
  2013   0004B8  0E00               	movlw	low main@crossings
  2014   0004BA  26D9               	addwf	fsr2l,f,c
  2015   0004BC  0E01               	movlw	high main@crossings
  2016   0004BE  22DA               	addwfc	fsr2h,f,c
  2017   0004C0  CFDE F08A          	movff	postinc2,?_printf+2
  2018   0004C4  CFDD F08B          	movff	postdec2,?_printf+3
  2019   0004C8  ECDE  F00B         	call	_printf	;wreg free
  2020   0004CC                     
  2021                           ;main.c: 157:                         }
  2022   0004CC  0100               	movlb	0	; () banked
  2023   0004CE  4BA6               	infsnz	main@i& (0+255),f,b
  2024   0004D0  2BA7               	incf	(main@i+1)& (0+255),f,b
  2025   0004D2                     l3152:
  2026                           
  2027                           ; BSR set to: 0
  2028   0004D2  51A3               	movf	main@ci& (0+255),w,b
  2029   0004D4  6F92               	movwf	??_main& (0+255),b
  2030   0004D6  6B93               	clrf	(??_main+1)& (0+255),b
  2031   0004D8  5192               	movf	??_main& (0+255),w,b
  2032   0004DA  5DA6               	subwf	main@i& (0+255),w,b
  2033   0004DC  5193               	movf	(??_main+1)& (0+255),w,b
  2034   0004DE  59A7               	subwfb	(main@i+1)& (0+255),w,b
  2035   0004E0  A0D8               	btfss	status,0,c
  2036   0004E2  EF75  F002         	goto	u2461
  2037   0004E6  EF77  F002         	goto	u2460
  2038   0004EA                     u2461:
  2039   0004EA  EF53  F002         	goto	l3148
  2040   0004EE                     u2460:
  2041   0004EE                     
  2042                           ; BSR set to: 0
  2043                           ;main.c: 158:                         printf("\n\r\n\r");
  2044   0004EE  0EED               	movlw	low STR_32
  2045   0004F0  6F88               	movwf	printf@fmt& (0+255),b
  2046   0004F2  0E7F               	movlw	high STR_32
  2047   0004F4  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2048   0004F6  ECDE  F00B         	call	_printf	;wreg free
  2049                           
  2050                           ;main.c: 159:                     };main.c: 161:                     {;main.c: 162:     
      +                                              printf("The sound wave had 10 periods:\n\r");
  2051   0004FA  0E96               	movlw	low STR_33
  2052   0004FC  0100               	movlb	0	; () banked
  2053   0004FE  6F88               	movwf	printf@fmt& (0+255),b
  2054   000500  0E7E               	movlw	high STR_33
  2055   000502  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2056   000504  ECDE  F00B         	call	_printf	;wreg free
  2057   000508                     
  2058                           ;main.c: 163:                         for(i = 1; i < ci; i++)
  2059   000508  0E00               	movlw	0
  2060   00050A  0100               	movlb	0	; () banked
  2061   00050C  6FA7               	movwf	(main@i+1)& (0+255),b
  2062   00050E  0E01               	movlw	1
  2063   000510  6FA6               	movwf	main@i& (0+255),b
  2064   000512  EFF8  F002         	goto	l3170
  2065   000516                     l3158:
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;main.c: 164:                         {;main.c: 165:                             period 
      +                          = crossings[i] - crossings[i-1];
  2069   000516  C0A6  F092         	movff	main@i,??_main
  2070   00051A  C0A7  F093         	movff	main@i+1,??_main+1
  2071   00051E  90D8               	bcf	status,0,c
  2072   000520  3792               	rlcf	??_main& (0+255),f,b
  2073   000522  3793               	rlcf	(??_main+1)& (0+255),f,b
  2074   000524  0EFE               	movlw	254
  2075   000526  2592               	addwf	??_main& (0+255),w,b
  2076   000528  6F94               	movwf	(??_main+2)& (0+255),b
  2077   00052A  0EFF               	movlw	255
  2078   00052C  2193               	addwfc	(??_main+1)& (0+255),w,b
  2079   00052E  6F95               	movwf	(??_main+3)& (0+255),b
  2080   000530  0E00               	movlw	low main@crossings
  2081   000532  2594               	addwf	(??_main+2)& (0+255),w,b
  2082   000534  6ED9               	movwf	fsr2l,c
  2083   000536  0E01               	movlw	high main@crossings
  2084   000538  2195               	addwfc	(??_main+3)& (0+255),w,b
  2085   00053A  6EDA               	movwf	fsr2h,c
  2086   00053C  CFDE F096          	movff	postinc2,??_main+4
  2087   000540  CFDD F097          	movff	postdec2,??_main+5
  2088   000544  90D8               	bcf	status,0,c
  2089   000546  35A6               	rlcf	main@i& (0+255),w,b
  2090   000548  6ED9               	movwf	fsr2l,c
  2091   00054A  35A7               	rlcf	(main@i+1)& (0+255),w,b
  2092   00054C  6EDA               	movwf	fsr2h,c
  2093   00054E  0E00               	movlw	low main@crossings
  2094   000550  26D9               	addwf	fsr2l,f,c
  2095   000552  0E01               	movlw	high main@crossings
  2096   000554  22DA               	addwfc	fsr2h,f,c
  2097   000556  CFDE F098          	movff	postinc2,??_main+6
  2098   00055A  CFDD F099          	movff	postdec2,??_main+7
  2099   00055E  5196               	movf	(??_main+4)& (0+255),w,b
  2100   000560  5D98               	subwf	(??_main+6)& (0+255),w,b
  2101   000562  6F9E               	movwf	main@period& (0+255),b
  2102   000564  5197               	movf	(??_main+5)& (0+255),w,b
  2103   000566  5999               	subwfb	(??_main+7)& (0+255),w,b
  2104   000568  6F9F               	movwf	(main@period+1)& (0+255),b
  2105   00056A                     
  2106                           ; BSR set to: 0
  2107                           ;main.c: 166:                             avgPeriod += period;
  2108   00056A  519E               	movf	main@period& (0+255),w,b
  2109   00056C  27A4               	addwf	main@avgPeriod& (0+255),f,b
  2110   00056E  519F               	movf	(main@period+1)& (0+255),w,b
  2111   000570  23A5               	addwfc	(main@avgPeriod+1)& (0+255),f,b
  2112   000572                     
  2113                           ; BSR set to: 0
  2114                           ;main.c: 167:                             if(i > 1) avgPeriod /= 2;
  2115   000572  51A7               	movf	(main@i+1)& (0+255),w,b
  2116   000574  E109               	bnz	u2470
  2117   000576  0E02               	movlw	2
  2118   000578  5DA6               	subwf	main@i& (0+255),w,b
  2119   00057A  A0D8               	btfss	status,0,c
  2120   00057C  EFC2  F002         	goto	u2471
  2121   000580  EFC4  F002         	goto	u2470
  2122   000584                     u2471:
  2123   000584  EFC7  F002         	goto	l3166
  2124   000588                     u2470:
  2125   000588                     
  2126                           ; BSR set to: 0
  2127   000588  90D8               	bcf	status,0,c
  2128   00058A  33A5               	rrcf	(main@avgPeriod+1)& (0+255),f,b
  2129   00058C  33A4               	rrcf	main@avgPeriod& (0+255),f,b
  2130   00058E                     l3166:
  2131                           
  2132                           ; BSR set to: 0
  2133                           ;main.c: 168:                             printf("%u - %u = %u\n\r", crossings[i], cross
      +                          ings[i-1], period);
  2134   00058E  0EAE               	movlw	low STR_34
  2135   000590  6F88               	movwf	printf@fmt& (0+255),b
  2136   000592  0E7F               	movlw	high STR_34
  2137   000594  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2138   000596  90D8               	bcf	status,0,c
  2139   000598  35A6               	rlcf	main@i& (0+255),w,b
  2140   00059A  6ED9               	movwf	fsr2l,c
  2141   00059C  35A7               	rlcf	(main@i+1)& (0+255),w,b
  2142   00059E  6EDA               	movwf	fsr2h,c
  2143   0005A0  0E00               	movlw	low main@crossings
  2144   0005A2  26D9               	addwf	fsr2l,f,c
  2145   0005A4  0E01               	movlw	high main@crossings
  2146   0005A6  22DA               	addwfc	fsr2h,f,c
  2147   0005A8  CFDE F08A          	movff	postinc2,?_printf+2
  2148   0005AC  CFDD F08B          	movff	postdec2,?_printf+3
  2149   0005B0  C0A6  F092         	movff	main@i,??_main
  2150   0005B4  C0A7  F093         	movff	main@i+1,??_main+1
  2151   0005B8  90D8               	bcf	status,0,c
  2152   0005BA  3792               	rlcf	??_main& (0+255),f,b
  2153   0005BC  3793               	rlcf	(??_main+1)& (0+255),f,b
  2154   0005BE  0EFE               	movlw	254
  2155   0005C0  2592               	addwf	??_main& (0+255),w,b
  2156   0005C2  6F94               	movwf	(??_main+2)& (0+255),b
  2157   0005C4  0EFF               	movlw	255
  2158   0005C6  2193               	addwfc	(??_main+1)& (0+255),w,b
  2159   0005C8  6F95               	movwf	(??_main+3)& (0+255),b
  2160   0005CA  0E00               	movlw	low main@crossings
  2161   0005CC  2594               	addwf	(??_main+2)& (0+255),w,b
  2162   0005CE  6ED9               	movwf	fsr2l,c
  2163   0005D0  0E01               	movlw	high main@crossings
  2164   0005D2  2195               	addwfc	(??_main+3)& (0+255),w,b
  2165   0005D4  6EDA               	movwf	fsr2h,c
  2166   0005D6  CFDE F08C          	movff	postinc2,?_printf+4
  2167   0005DA  CFDD F08D          	movff	postdec2,?_printf+5
  2168   0005DE  C09E  F08E         	movff	main@period,?_printf+6
  2169   0005E2  C09F  F08F         	movff	main@period+1,?_printf+7
  2170   0005E6  ECDE  F00B         	call	_printf	;wreg free
  2171   0005EA                     
  2172                           ;main.c: 169:                         }
  2173   0005EA  0100               	movlb	0	; () banked
  2174   0005EC  4BA6               	infsnz	main@i& (0+255),f,b
  2175   0005EE  2BA7               	incf	(main@i+1)& (0+255),f,b
  2176   0005F0                     l3170:
  2177                           
  2178                           ; BSR set to: 0
  2179   0005F0  51A3               	movf	main@ci& (0+255),w,b
  2180   0005F2  6F92               	movwf	??_main& (0+255),b
  2181   0005F4  6B93               	clrf	(??_main+1)& (0+255),b
  2182   0005F6  5192               	movf	??_main& (0+255),w,b
  2183   0005F8  5DA6               	subwf	main@i& (0+255),w,b
  2184   0005FA  5193               	movf	(??_main+1)& (0+255),w,b
  2185   0005FC  59A7               	subwfb	(main@i+1)& (0+255),w,b
  2186   0005FE  A0D8               	btfss	status,0,c
  2187   000600  EF04  F003         	goto	u2481
  2188   000604  EF06  F003         	goto	u2480
  2189   000608                     u2481:
  2190   000608  EF8B  F002         	goto	l3158
  2191   00060C                     u2480:
  2192   00060C                     
  2193                           ; BSR set to: 0
  2194                           ;main.c: 170:                         printf("\n\r\n\r");
  2195   00060C  0EED               	movlw	low STR_32
  2196   00060E  6F88               	movwf	printf@fmt& (0+255),b
  2197   000610  0E7F               	movlw	high STR_32
  2198   000612  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2199   000614  ECDE  F00B         	call	_printf	;wreg free
  2200   000618                     
  2201                           ;main.c: 171:                         avgPeriod = avgPeriod * 24;
  2202   000618  C0A4  F00F         	movff	main@avgPeriod,___wmul@multiplier
  2203   00061C  C0A5  F010         	movff	main@avgPeriod+1,___wmul@multiplier+1
  2204   000620  0E00               	movlw	0
  2205   000622  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  2206   000624  0E18               	movlw	24
  2207   000626  6E11               	movwf	___wmul@multiplicand^0,c
  2208   000628  EC06  F00C         	call	___wmul	;wreg free
  2209   00062C  C00F  F0A4         	movff	?___wmul,main@avgPeriod
  2210   000630  C010  F0A5         	movff	?___wmul+1,main@avgPeriod+1
  2211   000634                     
  2212                           ;main.c: 172:                         frequency = 1000000 / avgPeriod;
  2213   000634  0E40               	movlw	64
  2214   000636  6E0F               	movwf	___aldiv@dividend^0,c
  2215   000638  0E42               	movlw	66
  2216   00063A  6E10               	movwf	(___aldiv@dividend+1)^0,c
  2217   00063C  0E0F               	movlw	15
  2218   00063E  6E11               	movwf	(___aldiv@dividend+2)^0,c
  2219   000640  0E00               	movlw	0
  2220   000642  6E12               	movwf	(___aldiv@dividend+3)^0,c
  2221   000644  C0A4  F013         	movff	main@avgPeriod,___aldiv@divisor
  2222   000648  C0A5  F014         	movff	main@avgPeriod+1,___aldiv@divisor+1
  2223   00064C  6A15               	clrf	(___aldiv@divisor+2)^0,c
  2224   00064E  6A16               	clrf	(___aldiv@divisor+3)^0,c
  2225   000650  EC73  F008         	call	___aldiv	;wreg free
  2226   000654  C00F  F09A         	movff	?___aldiv,main@frequency
  2227   000658  C010  F09B         	movff	?___aldiv+1,main@frequency+1
  2228   00065C  C011  F09C         	movff	?___aldiv+2,main@frequency+2
  2229   000660  C012  F09D         	movff	?___aldiv+3,main@frequency+3
  2230   000664                     
  2231                           ;main.c: 174:                         printf("average period: %u\n\r", avgPeriod);
  2232   000664  0E77               	movlw	low STR_36
  2233   000666  0100               	movlb	0	; () banked
  2234   000668  6F88               	movwf	printf@fmt& (0+255),b
  2235   00066A  0E7F               	movlw	high STR_36
  2236   00066C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2237   00066E  C0A4  F08A         	movff	main@avgPeriod,?_printf+2
  2238   000672  C0A5  F08B         	movff	main@avgPeriod+1,?_printf+3
  2239   000676  ECDE  F00B         	call	_printf	;wreg free
  2240   00067A                     
  2241                           ;main.c: 175:                         printf("average frequency: %u\n\r", frequency);
  2242   00067A  0E4A               	movlw	low STR_37
  2243   00067C  0100               	movlb	0	; () banked
  2244   00067E  6F88               	movwf	printf@fmt& (0+255),b
  2245   000680  0E7F               	movlw	high STR_37
  2246   000682  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2247   000684  C09A  F08A         	movff	main@frequency,?_printf+2
  2248   000688  C09B  F08B         	movff	main@frequency+1,?_printf+3
  2249   00068C  C09C  F08C         	movff	main@frequency+2,?_printf+4
  2250   000690  C09D  F08D         	movff	main@frequency+3,?_printf+5
  2251   000694  ECDE  F00B         	call	_printf	;wreg free
  2252                           
  2253                           ;main.c: 176:                     };main.c: 177:                     break;
  2254   000698  EF87  F003         	goto	l3188
  2255   00069C                     l3182:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;main.c: 181:                     printf("unknown key\r\n", cmd);
  2259   00069C  0EBD               	movlw	low STR_38
  2260   00069E  6F88               	movwf	printf@fmt& (0+255),b
  2261   0006A0  0E7F               	movlw	high STR_38
  2262   0006A2  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2263   0006A4  C0A0  F08A         	movff	main@cmd,?_printf+2
  2264   0006A8  6B8B               	clrf	(?_printf+3)& (0+255),b
  2265   0006AA  ECDE  F00B         	call	_printf	;wreg free
  2266                           
  2267                           ;main.c: 182:                     break;
  2268   0006AE  EF87  F003         	goto	l3188
  2269   0006B2                     l3186:
  2270   0006B2  0100               	movlb	0	; () banked
  2271   0006B4  51A0               	movf	main@cmd& (0+255),w,b
  2272   0006B6  6F92               	movwf	??_main& (0+255),b
  2273   0006B8  6B93               	clrf	(??_main+1)& (0+255),b
  2274                           
  2275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2276                           ; Switch size 1, requested type "simple"
  2277                           ; Number of cases is 1, Range of values is 0 to 0
  2278                           ; switch strategies available:
  2279                           ; Name         Instructions Cycles
  2280                           ; simple_byte            4     3 (average)
  2281                           ;	Chosen strategy is simple_byte
  2282   0006BA  5193               	movf	(??_main+1)& (0+255),w,b
  2283   0006BC  0A00               	xorlw	0	; case 0
  2284   0006BE  B4D8               	btfsc	status,2,c
  2285   0006C0  EF64  F003         	goto	l3234
  2286   0006C4  EF4E  F003         	goto	l3182
  2287   0006C8                     l3234:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ; Switch size 1, requested type "simple"
  2291                           ; Number of cases is 8, Range of values is 0 to 122
  2292                           ; switch strategies available:
  2293                           ; Name         Instructions Cycles
  2294                           ; simple_byte           25    13 (average)
  2295                           ;	Chosen strategy is simple_byte
  2296   0006C8  5192               	movf	??_main& (0+255),w,b
  2297   0006CA  0A00               	xorlw	0	; case 0
  2298   0006CC  B4D8               	btfsc	status,2,c
  2299   0006CE  EF87  F003         	goto	l3188
  2300   0006D2  0A3F               	xorlw	63	; case 63
  2301   0006D4  B4D8               	btfsc	status,2,c
  2302   0006D6  EF7D  F000         	goto	l3038
  2303   0006DA  0A6B               	xorlw	107	; case 84
  2304   0006DC  B4D8               	btfsc	status,2,c
  2305   0006DE  EF10  F001         	goto	l3066
  2306   0006E2  0A0E               	xorlw	14	; case 90
  2307   0006E4  B4D8               	btfsc	status,2,c
  2308   0006E6  EFDB  F000         	goto	l3042
  2309   0006EA  0A3C               	xorlw	60	; case 102
  2310   0006EC  B4D8               	btfsc	status,2,c
  2311   0006EE  EF18  F001         	goto	l3070
  2312   0006F2  0A09               	xorlw	9	; case 111
  2313   0006F4  B4D8               	btfsc	status,2,c
  2314   0006F6  EFD3  F000         	goto	l3040
  2315   0006FA  0A1B               	xorlw	27	; case 116
  2316   0006FC  B4D8               	btfsc	status,2,c
  2317   0006FE  EF14  F001         	goto	l3068
  2318   000702  0A0E               	xorlw	14	; case 122
  2319   000704  B4D8               	btfsc	status,2,c
  2320   000706  EFF6  F000         	goto	l3054
  2321   00070A  EF4E  F003         	goto	l3182
  2322   00070E                     l3188:
  2323                           
  2324                           ;main.c: 184:             printf("> ");
  2325   00070E  0EFB               	movlw	low STR_4
  2326   000710  0100               	movlb	0	; () banked
  2327   000712  6F88               	movwf	printf@fmt& (0+255),b
  2328   000714  0E7F               	movlw	high STR_4
  2329   000716  6F89               	movwf	(printf@fmt+1)& (0+255),b
  2330   000718  ECDE  F00B         	call	_printf	;wreg free
  2331   00071C  EF64  F000         	goto	l3032
  2332   000720  EF27  F000         	goto	start
  2333   000724                     __end_of_main:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _printf *****************
  2337 ;; Defined at:
  2338 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  fmt             2   40[BANK0 ] PTR const unsigned char 
  2341 ;;		 -> STR_39(3), STR_38(14), STR_37(24), STR_36(21), 
  2342 ;;		 -> STR_35(5), STR_34(15), STR_33(33), STR_32(5), 
  2343 ;;		 -> STR_31(4), STR_30(52), STR_29(3), STR_28(3), 
  2344 ;;		 -> STR_27(2), STR_26(2), STR_25(4), STR_24(2), 
  2345 ;;		 -> STR_23(2), STR_22(7), STR_21(52), STR_20(19), 
  2346 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2347 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2348 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2349 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2350 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  ap              2   48[BANK0 ] PTR void [1]
  2353 ;;		 -> ?_printf(2), 
  2354 ;;  ret             2    0        int 
  2355 ;; Return value:  Size  Location     Type
  2356 ;;                  2   40[BANK0 ] int 
  2357 ;; Registers used:
  2358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2364 ;;      Params:         0       8       0       0       0       0       0
  2365 ;;      Locals:         0       2       0       0       0       0       0
  2366 ;;      Temps:          0       0       0       0       0       0       0
  2367 ;;      Totals:         0      10       0       0       0       0       0
  2368 ;;Total ram usage:       10 bytes
  2369 ;; Hardware stack levels used: 1
  2370 ;; Hardware stack levels required when called: 12
  2371 ;; This function calls:
  2372 ;;		_vfprintf
  2373 ;; This function is called by:
  2374 ;;		_main
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text1
  2379   0017BC                     __ptext1:
  2380                           	callstack 0
  2381   0017BC                     _printf:
  2382                           	callstack 18
  2383   0017BC  0E8A               	movlw	low (?_printf+2)
  2384   0017BE  0100               	movlb	0	; () banked
  2385   0017C0  6F90               	movwf	printf@ap& (0+255),b
  2386   0017C2  0E00               	movlw	high (?_printf+2)
  2387   0017C4  6F91               	movwf	(printf@ap+1)& (0+255),b
  2388   0017C6                     
  2389                           ; BSR set to: 0
  2390   0017C6  0E00               	movlw	0
  2391   0017C8  6F82               	movwf	vfprintf@fp& (0+255),b
  2392   0017CA  0E00               	movlw	0
  2393   0017CC  6F83               	movwf	(vfprintf@fp+1)& (0+255),b
  2394   0017CE  C088  F084         	movff	printf@fmt,vfprintf@fmt
  2395   0017D2  C089  F085         	movff	printf@fmt+1,vfprintf@fmt+1
  2396   0017D6  0E90               	movlw	low printf@ap
  2397   0017D8  6F86               	movwf	vfprintf@ap& (0+255),b
  2398   0017DA  0E00               	movlw	high printf@ap
  2399   0017DC  6F87               	movwf	(vfprintf@ap+1)& (0+255),b
  2400   0017DE  ECE2  F00A         	call	_vfprintf	;wreg free
  2401   0017E2  0012               	return		;funcret
  2402   0017E4                     __end_of_printf:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _vfprintf *****************
  2406 ;; Defined at:
  2407 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  fp              2   34[BANK0 ] PTR struct _IO_FILE
  2410 ;;		 -> NULL(0), 
  2411 ;;  fmt             2   36[BANK0 ] PTR const unsigned char 
  2412 ;;		 -> STR_39(3), STR_38(14), STR_37(24), STR_36(21), 
  2413 ;;		 -> STR_35(5), STR_34(15), STR_33(33), STR_32(5), 
  2414 ;;		 -> STR_31(4), STR_30(52), STR_29(3), STR_28(3), 
  2415 ;;		 -> STR_27(2), STR_26(2), STR_25(4), STR_24(2), 
  2416 ;;		 -> STR_23(2), STR_22(7), STR_21(52), STR_20(19), 
  2417 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2418 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2419 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2420 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2421 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2422 ;;  ap              2   38[BANK0 ] PTR PTR void 
  2423 ;;		 -> printf@ap(2), 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  cfmt            2   65[COMRAM] PTR unsigned char 
  2426 ;;		 -> STR_39(3), STR_38(14), STR_37(24), STR_36(21), 
  2427 ;;		 -> STR_35(5), STR_34(15), STR_33(33), STR_32(5), 
  2428 ;;		 -> STR_31(4), STR_30(52), STR_29(3), STR_28(3), 
  2429 ;;		 -> STR_27(2), STR_26(2), STR_25(4), STR_24(2), 
  2430 ;;		 -> STR_23(2), STR_22(7), STR_21(52), STR_20(19), 
  2431 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2432 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2433 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2434 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2435 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  2   34[BANK0 ] int 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2445 ;;      Params:         0       6       0       0       0       0       0
  2446 ;;      Locals:         2       0       0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0
  2448 ;;      Totals:         2       6       0       0       0       0       0
  2449 ;;Total ram usage:        8 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 11
  2452 ;; This function calls:
  2453 ;;		_vfpfcnvrt
  2454 ;; This function is called by:
  2455 ;;		_printf
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text2
  2460   0015C4                     __ptext2:
  2461                           	callstack 0
  2462   0015C4                     _vfprintf:
  2463                           	callstack 18
  2464   0015C4                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2466   0015C4  C084  F042         	movff	vfprintf@fmt,vfprintf@cfmt
  2467   0015C8  C085  F043         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2470   0015CC  EFF7  F00A         	goto	l2998
  2471   0015D0                     l2996:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2474   0015D0  C082  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  2475   0015D4  C083  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2476   0015D8  0E42               	movlw	low vfprintf@cfmt
  2477   0015DA  0100               	movlb	0	; () banked
  2478   0015DC  6F73               	movwf	vfpfcnvrt@fmt& (0+255),b
  2479   0015DE  0E00               	movlw	high vfprintf@cfmt
  2480   0015E0  6F74               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2481   0015E2  C086  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  2482   0015E6  C087  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2483   0015EA  EC92  F003         	call	_vfpfcnvrt	;wreg free
  2484   0015EE                     l2998:
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2487   0015EE  C042  FFF6         	movff	vfprintf@cfmt,tblptrl
  2488   0015F2  C043  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2489   0015F6                     	if	0	;tblptru may be non-zero
  2490   0015F6                     	endif
  2491   0015F6                     	if	0	;tblptru may be non-zero
  2492   0015F6                     	endif
  2493   0015F6  0008               	tblrd		*
  2494   0015F8  50F5               	movf	tablat,w,c
  2495   0015FA  0900               	iorlw	0
  2496   0015FC  A4D8               	btfss	status,2,c
  2497   0015FE  EF03  F00B         	goto	u2291
  2498   001602  EF05  F00B         	goto	u2290
  2499   001606                     u2291:
  2500   001606  EFE8  F00A         	goto	l2996
  2501   00160A                     u2290:
  2502   00160A                     
  2503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2504   00160A  0E00               	movlw	0
  2505   00160C  0100               	movlb	0	; () banked
  2506   00160E  6F83               	movwf	(?_vfprintf+1)& (0+255),b
  2507   001610  0E00               	movlw	0
  2508   001612  6F82               	movwf	?_vfprintf& (0+255),b
  2509   001614                     
  2510                           ; BSR set to: 0
  2511   001614  0012               	return		;funcret
  2512   001616                     __end_of_vfprintf:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _vfpfcnvrt *****************
  2516 ;; Defined at:
  2517 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  2520 ;;		 -> NULL(0), 
  2521 ;;  fmt             2   19[BANK0 ] PTR PTR unsigned char 
  2522 ;;		 -> vfprintf@cfmt(2), 
  2523 ;;  ap              2   21[BANK0 ] PTR PTR void 
  2524 ;;		 -> printf@ap(2), 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;  convarg         8   24[BANK0 ] struct .
  2527 ;;  cp              2   32[BANK0 ] PTR unsigned char 
  2528 ;;		 -> STR_39(3), STR_38(14), STR_37(24), STR_36(21), 
  2529 ;;		 -> STR_35(5), STR_34(15), STR_33(33), STR_32(5), 
  2530 ;;		 -> STR_31(4), STR_30(52), STR_29(3), STR_28(3), 
  2531 ;;		 -> STR_27(2), STR_26(2), STR_25(4), STR_24(2), 
  2532 ;;		 -> STR_23(2), STR_22(7), STR_21(52), STR_20(19), 
  2533 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2534 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2535 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2536 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2537 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2538 ;;  i               2    0        int 
  2539 ;;  done            2    0        int 
  2540 ;;  c               1   23[BANK0 ] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2550 ;;      Params:         0       6       0       0       0       0       0
  2551 ;;      Locals:         0      11       0       0       0       0       0
  2552 ;;      Temps:          4       0       0       0       0       0       0
  2553 ;;      Totals:         4      17       0       0       0       0       0
  2554 ;;Total ram usage:       21 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 10
  2557 ;; This function calls:
  2558 ;;		_ctoa
  2559 ;;		_dtoa
  2560 ;;		_fputc
  2561 ;;		_utoa
  2562 ;; This function is called by:
  2563 ;;		_vfprintf
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text3
  2568   000724                     __ptext3:
  2569                           	callstack 0
  2570   000724                     _vfpfcnvrt:
  2571                           	callstack 18
  2572   000724                     
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2574   000724  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2575   000728  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2576   00072C  CFDE FFF6          	movff	postinc2,tblptrl
  2577   000730  CFDD FFF7          	movff	postdec2,tblptrh
  2578   000734                     	if	0	;tblptru may be non-zero
  2579   000734                     	endif
  2580   000734                     	if	0	;tblptru may be non-zero
  2581   000734                     	endif
  2582   000734  0008               	tblrd		*
  2583   000736  50F5               	movf	tablat,w,c
  2584   000738  0A25               	xorlw	37
  2585   00073A  A4D8               	btfss	status,2,c
  2586   00073C  EFA2  F003         	goto	u2241
  2587   000740  EFA4  F003         	goto	u2240
  2588   000744                     u2241:
  2589   000744  EFC5  F004         	goto	l2984
  2590   000748                     u2240:
  2591   000748                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2593   000748  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2594   00074C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2595   000750  2ADE               	incf	postinc2,f,c
  2596   000752  0E00               	movlw	0
  2597   000754  22DD               	addwfc	postdec2,f,c
  2598   000756                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2600   000756  0E00               	movlw	0
  2601   000758  6E45               	movwf	(_width+1)^0,c
  2602   00075A  0E00               	movlw	0
  2603   00075C  6E44               	movwf	_width^0,c
  2604   00075E  C044  F0AE         	movff	_width,_flags
  2605   000762                     
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2607   000762  6846               	setf	_prec^0,c
  2608   000764  6847               	setf	(_prec+1)^0,c
  2609   000766                     
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2611   000766  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2612   00076A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2613   00076E  CFDE FFF6          	movff	postinc2,tblptrl
  2614   000772  CFDD FFF7          	movff	postdec2,tblptrh
  2615   000776                     	if	0	;tblptru may be non-zero
  2616   000776                     	endif
  2617   000776                     	if	0	;tblptru may be non-zero
  2618   000776                     	endif
  2619   000776  0008               	tblrd		*
  2620   000778  50F5               	movf	tablat,w,c
  2621   00077A  0A63               	xorlw	99
  2622   00077C  A4D8               	btfss	status,2,c
  2623   00077E  EFC3  F003         	goto	u2251
  2624   000782  EFC5  F003         	goto	u2250
  2625   000786                     u2251:
  2626   000786  EFE9  F003         	goto	l2956
  2627   00078A                     u2250:
  2628   00078A                     
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2630   00078A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2631   00078E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2632   000792  2ADE               	incf	postinc2,f,c
  2633   000794  0E00               	movlw	0
  2634   000796  22DD               	addwfc	postdec2,f,c
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2637   000798  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2638   00079C  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2639   0007A0  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  2640   0007A4  0E02               	movlw	2
  2641   0007A6  26DE               	addwf	postinc2,f,c
  2642   0007A8  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  2643   0007AC  0E00               	movlw	0
  2644   0007AE  22DD               	addwfc	postdec2,f,c
  2645   0007B0  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2646   0007B4  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2647   0007B8  50DF               	movf	indf2,w,c
  2648   0007BA  0100               	movlb	0	; () banked
  2649   0007BC  6F77               	movwf	vfpfcnvrt@c& (0+255),b
  2650   0007BE                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2653   0007BE  C071  F01A         	movff	vfpfcnvrt@fp,ctoa@fp
  2654   0007C2  C072  F01B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2655   0007C6  C077  F01C         	movff	vfpfcnvrt@c,ctoa@c
  2656   0007CA  ECD9  F009         	call	_ctoa	;wreg free
  2657   0007CE  EFD9  F004         	goto	l1104
  2658   0007D2                     l2956:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2661   0007D2  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2662   0007D6  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2663   0007DA  CFDE F080          	movff	postinc2,vfpfcnvrt@cp
  2664   0007DE  CFDD F081          	movff	postdec2,vfpfcnvrt@cp+1
  2665   0007E2                     
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2667   0007E2  C080  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2668   0007E6  C081  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2669   0007EA                     	if	0	;tblptru may be non-zero
  2670   0007EA                     	endif
  2671   0007EA                     	if	0	;tblptru may be non-zero
  2672   0007EA                     	endif
  2673   0007EA  0008               	tblrd		*
  2674   0007EC  50F5               	movf	tablat,w,c
  2675   0007EE  0A64               	xorlw	100
  2676   0007F0  B4D8               	btfsc	status,2,c
  2677   0007F2  EFFD  F003         	goto	u2261
  2678   0007F6  EFFF  F003         	goto	u2260
  2679   0007FA                     u2261:
  2680   0007FA  EF0D  F004         	goto	l2962
  2681   0007FE                     u2260:
  2682   0007FE  C080  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2683   000802  C081  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2684   000806                     	if	0	;tblptru may be non-zero
  2685   000806                     	endif
  2686   000806                     	if	0	;tblptru may be non-zero
  2687   000806                     	endif
  2688   000806  0008               	tblrd		*
  2689   000808  50F5               	movf	tablat,w,c
  2690   00080A  0A69               	xorlw	105
  2691   00080C  A4D8               	btfss	status,2,c
  2692   00080E  EF0B  F004         	goto	u2271
  2693   000812  EF0D  F004         	goto	u2270
  2694   000816                     u2271:
  2695   000816  EF51  F004         	goto	l2968
  2696   00081A                     u2270:
  2697   00081A                     l2962:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2700   00081A  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2701   00081E  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2702   000822  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  2703   000826  0E02               	movlw	2
  2704   000828  26DE               	addwf	postinc2,f,c
  2705   00082A  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  2706   00082E  0E00               	movlw	0
  2707   000830  22DD               	addwfc	postdec2,f,c
  2708   000832  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2709   000836  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2710   00083A  CFDE F078          	movff	postinc2,vfpfcnvrt@convarg
  2711   00083E  CFDD F079          	movff	postdec2,vfpfcnvrt@convarg+1
  2712   000842  0100               	movlb	0	; () banked
  2713   000844  0E00               	movlw	0
  2714   000846  BF79               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2715   000848  0EFF               	movlw	-1
  2716   00084A  6F7A               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2717   00084C  6F7B               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2718   00084E  6F7C               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2719   000850  6F7D               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2720   000852  6F7E               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2721   000854  6F7F               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2724   000856  0E01               	movlw	1
  2725   000858  2580               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2726   00085A  6E3E               	movwf	??_vfpfcnvrt^0,c
  2727   00085C  0E00               	movlw	0
  2728   00085E  2181               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2729   000860  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  2730   000862  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731   000866  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732   00086A  C03E  FFDE         	movff	??_vfpfcnvrt,postinc2
  2733   00086E  C03F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2734   000872                     
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2737   000872  C071  F02C         	movff	vfpfcnvrt@fp,dtoa@fp
  2738   000876  C072  F02D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2739   00087A  C078  F02E         	movff	vfpfcnvrt@convarg,dtoa@d
  2740   00087E  C079  F02F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2741   000882  C07A  F030         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2742   000886  C07B  F031         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2743   00088A  C07C  F032         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2744   00088E  C07D  F033         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2745   000892  C07E  F034         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2746   000896  C07F  F035         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2747   00089A  ECDA  F004         	call	_dtoa	;wreg free
  2748   00089E  EFD9  F004         	goto	l1104
  2749   0008A2                     l2968:
  2750   0008A2  C080  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2751   0008A6  C081  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2752   0008AA                     	if	0	;tblptru may be non-zero
  2753   0008AA                     	endif
  2754   0008AA                     	if	0	;tblptru may be non-zero
  2755   0008AA                     	endif
  2756   0008AA  0008               	tblrd		*
  2757   0008AC  50F5               	movf	tablat,w,c
  2758   0008AE  0A75               	xorlw	117
  2759   0008B0  A4D8               	btfss	status,2,c
  2760   0008B2  EF5D  F004         	goto	u2281
  2761   0008B6  EF5F  F004         	goto	u2280
  2762   0008BA                     u2281:
  2763   0008BA  EFBC  F004         	goto	l2980
  2764   0008BE                     u2280:
  2765   0008BE                     
  2766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2767   0008BE  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2768   0008C2  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2769   0008C6  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  2770   0008CA  0E02               	movlw	2
  2771   0008CC  26DE               	addwf	postinc2,f,c
  2772   0008CE  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  2773   0008D2  0E00               	movlw	0
  2774   0008D4  22DD               	addwfc	postdec2,f,c
  2775   0008D6  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2776   0008DA  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2777   0008DE  CFDE F040          	movff	postinc2,??_vfpfcnvrt+2
  2778   0008E2  CFDD F041          	movff	postdec2,??_vfpfcnvrt+3
  2779   0008E6  C040  F078         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2780   0008EA  C041  F079         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2781   0008EE  0100               	movlb	0	; () banked
  2782   0008F0  6B7A               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2783   0008F2  6B7B               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2784   0008F4  6B7C               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2785   0008F6  6B7D               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2786   0008F8  6B7E               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2787   0008FA  6B7F               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2790   0008FC  0E01               	movlw	1
  2791   0008FE  2580               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2792   000900  6E3E               	movwf	??_vfpfcnvrt^0,c
  2793   000902  0E00               	movlw	0
  2794   000904  2181               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2795   000906  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  2796   000908  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2797   00090C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2798   000910  C03E  FFDE         	movff	??_vfpfcnvrt,postinc2
  2799   000914  C03F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2802   000918  EFA6  F004         	goto	l2978
  2803   00091C                     l2972:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2807   00091C  C071  F02C         	movff	vfpfcnvrt@fp,utoa@fp
  2808   000920  C072  F02D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2809   000924  C078  F02E         	movff	vfpfcnvrt@convarg,utoa@d
  2810   000928  C079  F02F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2811   00092C  C07A  F030         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2812   000930  C07B  F031         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2813   000934  C07C  F032         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2814   000938  C07D  F033         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2815   00093C  C07E  F034         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2816   000940  C07F  F035         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2817   000944  EC1A  F006         	call	_utoa	;wreg free
  2818   000948  EFD9  F004         	goto	l1104
  2819   00094C                     l2978:
  2820                           
  2821                           ; BSR set to: 0
  2822   00094C  C080  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2823   000950  C081  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2824   000954                     	if	0	;tblptru may be non-zero
  2825   000954                     	endif
  2826   000954                     	if	0	;tblptru may be non-zero
  2827   000954                     	endif
  2828   000954  0008               	tblrd		*
  2829   000956  50F5               	movf	tablat,w,c
  2830   000958  6E3E               	movwf	??_vfpfcnvrt^0,c
  2831   00095A  6A3F               	clrf	(??_vfpfcnvrt+1)^0,c
  2832                           
  2833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2834                           ; Switch size 1, requested type "simple"
  2835                           ; Number of cases is 1, Range of values is 0 to 0
  2836                           ; switch strategies available:
  2837                           ; Name         Instructions Cycles
  2838                           ; simple_byte            4     3 (average)
  2839                           ;	Chosen strategy is simple_byte
  2840   00095C  503F               	movf	(??_vfpfcnvrt+1)^0,w,c
  2841   00095E  0A00               	xorlw	0	; case 0
  2842   000960  B4D8               	btfsc	status,2,c
  2843   000962  EFB5  F004         	goto	l3236
  2844   000966  EFBC  F004         	goto	l2980
  2845   00096A                     l3236:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ; Switch size 1, requested type "simple"
  2849                           ; Number of cases is 1, Range of values is 117 to 117
  2850                           ; switch strategies available:
  2851                           ; Name         Instructions Cycles
  2852                           ; simple_byte            4     3 (average)
  2853                           ;	Chosen strategy is simple_byte
  2854   00096A  503E               	movf	??_vfpfcnvrt^0,w,c
  2855   00096C  0A75               	xorlw	117	; case 117
  2856   00096E  B4D8               	btfsc	status,2,c
  2857   000970  EF8E  F004         	goto	l2972
  2858   000974  EFBC  F004         	goto	l2980
  2859   000978                     l2980:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2862   000978  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2863   00097C  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2864   000980  2ADE               	incf	postinc2,f,c
  2865   000982  0E00               	movlw	0
  2866   000984  22DD               	addwfc	postdec2,f,c
  2867   000986  EFD9  F004         	goto	l1104
  2868   00098A                     l2984:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2871   00098A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2872   00098E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2873   000992  CFDE FFF6          	movff	postinc2,tblptrl
  2874   000996  CFDD FFF7          	movff	postdec2,tblptrh
  2875   00099A                     	if	0	;tblptru may be non-zero
  2876   00099A                     	endif
  2877   00099A                     	if	0	;tblptru may be non-zero
  2878   00099A                     	endif
  2879   00099A  0008               	tblrd		*
  2880   00099C  50F5               	movf	tablat,w,c
  2881   00099E  6E11               	movwf	fputc@c^0,c
  2882   0009A0  6A12               	clrf	(fputc@c+1)^0,c
  2883   0009A2  C071  F013         	movff	vfpfcnvrt@fp,fputc@fp
  2884   0009A6  C072  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2885   0009AA  EC26  F00A         	call	_fputc	;wreg free
  2886   0009AE  EFBC  F004         	goto	l2980
  2887   0009B2                     l1104:
  2888   0009B2  0012               	return		;funcret
  2889   0009B4                     __end_of_vfpfcnvrt:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _utoa *****************
  2893 ;; Defined at:
  2894 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  2897 ;;		 -> NULL(0), 
  2898 ;;  d               8   45[COMRAM] unsigned long long 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  n               8    4[BANK0 ] unsigned long long 
  2901 ;;  i               2   12[BANK0 ] int 
  2902 ;;  p               2    2[BANK0 ] int 
  2903 ;;  w               2    0[BANK0 ] int 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2913 ;;      Params:        10       0       0       0       0       0       0
  2914 ;;      Locals:         0      14       0       0       0       0       0
  2915 ;;      Temps:          8       0       0       0       0       0       0
  2916 ;;      Totals:        18      14       0       0       0       0       0
  2917 ;;Total ram usage:       32 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 9
  2920 ;; This function calls:
  2921 ;;		___lodiv
  2922 ;;		___lomod
  2923 ;;		_pad
  2924 ;; This function is called by:
  2925 ;;		_vfpfcnvrt
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text4
  2930   000C34                     __ptext4:
  2931                           	callstack 0
  2932   000C34                     _utoa:
  2933                           	callstack 18
  2934   000C34                     
  2935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2936   000C34  BE47               	btfsc	(_prec+1)^0,7,c
  2937   000C36  EF27  F006         	goto	u2200
  2938   000C3A  5047               	movf	(_prec+1)^0,w,c
  2939   000C3C  E106               	bnz	u2201
  2940   000C3E  0446               	decf	_prec^0,w,c
  2941   000C40  B0D8               	btfsc	status,0,c
  2942   000C42  EF25  F006         	goto	u2201
  2943   000C46  EF27  F006         	goto	u2200
  2944   000C4A                     u2201:
  2945   000C4A  EF2E  F006         	goto	l1091
  2946   000C4E                     u2200:
  2947   000C4E  0E00               	movlw	0
  2948   000C50  0100               	movlb	0	; () banked
  2949   000C52  6F63               	movwf	(utoa@p+1)& (0+255),b
  2950   000C54  0E01               	movlw	1
  2951   000C56  6F62               	movwf	utoa@p& (0+255),b
  2952   000C58  EF32  F006         	goto	l1093
  2953   000C5C                     l1091:
  2954   000C5C  C046  F062         	movff	_prec,utoa@p
  2955   000C60  C047  F063         	movff	_prec+1,utoa@p+1
  2956   000C64                     l1093:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2959   000C64  C044  F060         	movff	_width,utoa@w
  2960   000C68  C045  F061         	movff	_width+1,utoa@w+1
  2961                           
  2962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2963   000C6C  C02E  F064         	movff	utoa@d,utoa@n
  2964   000C70  C02F  F065         	movff	utoa@d+1,utoa@n+1
  2965   000C74  C030  F066         	movff	utoa@d+2,utoa@n+2
  2966   000C78  C031  F067         	movff	utoa@d+3,utoa@n+3
  2967   000C7C  C032  F068         	movff	utoa@d+4,utoa@n+4
  2968   000C80  C033  F069         	movff	utoa@d+5,utoa@n+5
  2969   000C84  C034  F06A         	movff	utoa@d+6,utoa@n+6
  2970   000C88  C035  F06B         	movff	utoa@d+7,utoa@n+7
  2971   000C8C                     
  2972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2973   000C8C  0E00               	movlw	0
  2974   000C8E  0100               	movlb	0	; () banked
  2975   000C90  6F6D               	movwf	(utoa@i+1)& (0+255),b
  2976   000C92  0E1F               	movlw	31
  2977   000C94  6F6C               	movwf	utoa@i& (0+255),b
  2978   000C96                     
  2979                           ; BSR set to: 0
  2980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2981   000C96  0E00               	movlw	0
  2982   000C98  6FCF               	movwf	(_dbuf+31)& (0+255),b
  2983                           
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2985   000C9A  EFC6  F006         	goto	l2930
  2986   000C9E                     l2920:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2990   000C9E  076C               	decf	utoa@i& (0+255),f,b
  2991   000CA0  A0D8               	btfss	status,0,c
  2992   000CA2  076D               	decf	(utoa@i+1)& (0+255),f,b
  2993   000CA4                     
  2994                           ; BSR set to: 0
  2995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2996   000CA4  0EB0               	movlw	low _dbuf
  2997   000CA6  256C               	addwf	utoa@i& (0+255),w,b
  2998   000CA8  6ED9               	movwf	fsr2l,c
  2999   000CAA  0E00               	movlw	high _dbuf
  3000   000CAC  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  3001   000CAE  6EDA               	movwf	fsr2h,c
  3002   000CB0  C064  F00F         	movff	utoa@n,___lomod@dividend
  3003   000CB4  C065  F010         	movff	utoa@n+1,___lomod@dividend+1
  3004   000CB8  C066  F011         	movff	utoa@n+2,___lomod@dividend+2
  3005   000CBC  C067  F012         	movff	utoa@n+3,___lomod@dividend+3
  3006   000CC0  C068  F013         	movff	utoa@n+4,___lomod@dividend+4
  3007   000CC4  C069  F014         	movff	utoa@n+5,___lomod@dividend+5
  3008   000CC8  C06A  F015         	movff	utoa@n+6,___lomod@dividend+6
  3009   000CCC  C06B  F016         	movff	utoa@n+7,___lomod@dividend+7
  3010   000CD0  0E0A               	movlw	10
  3011   000CD2  6E17               	movwf	___lomod@divisor^0,c
  3012   000CD4  0E00               	movlw	0
  3013   000CD6  6E18               	movwf	(___lomod@divisor+1)^0,c
  3014   000CD8  0E00               	movlw	0
  3015   000CDA  6E19               	movwf	(___lomod@divisor+2)^0,c
  3016   000CDC  0E00               	movlw	0
  3017   000CDE  6E1A               	movwf	(___lomod@divisor+3)^0,c
  3018   000CE0  0E00               	movlw	0
  3019   000CE2  6E1B               	movwf	(___lomod@divisor+4)^0,c
  3020   000CE4  0E00               	movlw	0
  3021   000CE6  6E1C               	movwf	(___lomod@divisor+5)^0,c
  3022   000CE8  0E00               	movlw	0
  3023   000CEA  6E1D               	movwf	(___lomod@divisor+6)^0,c
  3024   000CEC  0E00               	movlw	0
  3025   000CEE  6E1E               	movwf	(___lomod@divisor+7)^0,c
  3026   000CF0  EC71  F009         	call	___lomod	;wreg free
  3027   000CF4  C00F  F036         	movff	?___lomod,??_utoa
  3028   000CF8  C010  F037         	movff	?___lomod+1,??_utoa+1
  3029   000CFC  C011  F038         	movff	?___lomod+2,??_utoa+2
  3030   000D00  C012  F039         	movff	?___lomod+3,??_utoa+3
  3031   000D04  C013  F03A         	movff	?___lomod+4,??_utoa+4
  3032   000D08  C014  F03B         	movff	?___lomod+5,??_utoa+5
  3033   000D0C  C015  F03C         	movff	?___lomod+6,??_utoa+6
  3034   000D10  C016  F03D         	movff	?___lomod+7,??_utoa+7
  3035   000D14  5036               	movf	??_utoa^0,w,c
  3036   000D16  0F30               	addlw	48
  3037   000D18  6EDF               	movwf	indf2,c
  3038   000D1A                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3040   000D1A  0100               	movlb	0	; () banked
  3041   000D1C  0762               	decf	utoa@p& (0+255),f,b
  3042   000D1E  A0D8               	btfss	status,0,c
  3043   000D20  0763               	decf	(utoa@p+1)& (0+255),f,b
  3044   000D22                     
  3045                           ; BSR set to: 0
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3047   000D22  0760               	decf	utoa@w& (0+255),f,b
  3048   000D24  A0D8               	btfss	status,0,c
  3049   000D26  0761               	decf	(utoa@w+1)& (0+255),f,b
  3050   000D28                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3053   000D28  C064  F00F         	movff	utoa@n,___lodiv@dividend
  3054   000D2C  C065  F010         	movff	utoa@n+1,___lodiv@dividend+1
  3055   000D30  C066  F011         	movff	utoa@n+2,___lodiv@dividend+2
  3056   000D34  C067  F012         	movff	utoa@n+3,___lodiv@dividend+3
  3057   000D38  C068  F013         	movff	utoa@n+4,___lodiv@dividend+4
  3058   000D3C  C069  F014         	movff	utoa@n+5,___lodiv@dividend+5
  3059   000D40  C06A  F015         	movff	utoa@n+6,___lodiv@dividend+6
  3060   000D44  C06B  F016         	movff	utoa@n+7,___lodiv@dividend+7
  3061   000D48  0E0A               	movlw	10
  3062   000D4A  6E17               	movwf	___lodiv@divisor^0,c
  3063   000D4C  0E00               	movlw	0
  3064   000D4E  6E18               	movwf	(___lodiv@divisor+1)^0,c
  3065   000D50  0E00               	movlw	0
  3066   000D52  6E19               	movwf	(___lodiv@divisor+2)^0,c
  3067   000D54  0E00               	movlw	0
  3068   000D56  6E1A               	movwf	(___lodiv@divisor+3)^0,c
  3069   000D58  0E00               	movlw	0
  3070   000D5A  6E1B               	movwf	(___lodiv@divisor+4)^0,c
  3071   000D5C  0E00               	movlw	0
  3072   000D5E  6E1C               	movwf	(___lodiv@divisor+5)^0,c
  3073   000D60  0E00               	movlw	0
  3074   000D62  6E1D               	movwf	(___lodiv@divisor+6)^0,c
  3075   000D64  0E00               	movlw	0
  3076   000D66  6E1E               	movwf	(___lodiv@divisor+7)^0,c
  3077   000D68  ECF9  F008         	call	___lodiv	;wreg free
  3078   000D6C  C00F  F064         	movff	?___lodiv,utoa@n
  3079   000D70  C010  F065         	movff	?___lodiv+1,utoa@n+1
  3080   000D74  C011  F066         	movff	?___lodiv+2,utoa@n+2
  3081   000D78  C012  F067         	movff	?___lodiv+3,utoa@n+3
  3082   000D7C  C013  F068         	movff	?___lodiv+4,utoa@n+4
  3083   000D80  C014  F069         	movff	?___lodiv+5,utoa@n+5
  3084   000D84  C015  F06A         	movff	?___lodiv+6,utoa@n+6
  3085   000D88  C016  F06B         	movff	?___lodiv+7,utoa@n+7
  3086   000D8C                     l2930:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3089   000D8C  0100               	movlb	0	; () banked
  3090   000D8E  516C               	movf	utoa@i& (0+255),w,b
  3091   000D90  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  3092   000D92  B4D8               	btfsc	status,2,c
  3093   000D94  EFCE  F006         	goto	u2211
  3094   000D98  EFD0  F006         	goto	u2210
  3095   000D9C                     u2211:
  3096   000D9C  EFEC  F006         	goto	l2936
  3097   000DA0                     u2210:
  3098   000DA0                     
  3099                           ; BSR set to: 0
  3100   000DA0  5164               	movf	utoa@n& (0+255),w,b
  3101   000DA2  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  3102   000DA4  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  3103   000DA6  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  3104   000DA8  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  3105   000DAA  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  3106   000DAC  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  3107   000DAE  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  3108   000DB0  A4D8               	btfss	status,2,c
  3109   000DB2  EFDD  F006         	goto	u2221
  3110   000DB6  EFDF  F006         	goto	u2220
  3111   000DBA                     u2221:
  3112   000DBA  EF4F  F006         	goto	l2920
  3113   000DBE                     u2220:
  3114   000DBE                     
  3115                           ; BSR set to: 0
  3116   000DBE  BF63               	btfsc	(utoa@p+1)& (0+255),7,b
  3117   000DC0  EFEC  F006         	goto	u2230
  3118   000DC4  5163               	movf	(utoa@p+1)& (0+255),w,b
  3119   000DC6  E106               	bnz	u2231
  3120   000DC8  0562               	decf	utoa@p& (0+255),w,b
  3121   000DCA  B0D8               	btfsc	status,0,c
  3122   000DCC  EFEA  F006         	goto	u2231
  3123   000DD0  EFEC  F006         	goto	u2230
  3124   000DD4                     u2231:
  3125   000DD4  EF4F  F006         	goto	l2920
  3126   000DD8                     u2230:
  3127   000DD8                     l2936:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3131   000DD8  C02C  F021         	movff	utoa@fp,pad@fp
  3132   000DDC  C02D  F022         	movff	utoa@fp+1,pad@fp+1
  3133   000DE0  0EB0               	movlw	low _dbuf
  3134   000DE2  256C               	addwf	utoa@i& (0+255),w,b
  3135   000DE4  6E23               	movwf	pad@buf^0,c
  3136   000DE6  0E00               	movlw	high _dbuf
  3137   000DE8  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  3138   000DEA  6E24               	movwf	(pad@buf+1)^0,c
  3139   000DEC  C060  F025         	movff	utoa@w,pad@p
  3140   000DF0  C061  F026         	movff	utoa@w+1,pad@p+1
  3141   000DF4  EC71  F00A         	call	_pad	;wreg free
  3142   000DF8  0012               	return		;funcret
  3143   000DFA                     __end_of_utoa:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function ___lomod *****************
  3147 ;; Defined at:
  3148 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  dividend        8   14[COMRAM] unsigned long long 
  3151 ;;  divisor         8   22[COMRAM] unsigned long long 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  counter         1   30[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  8   14[COMRAM] unsigned long long 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3163 ;;      Params:        16       0       0       0       0       0       0
  3164 ;;      Locals:         1       0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0
  3166 ;;      Totals:        17       0       0       0       0       0       0
  3167 ;;Total ram usage:       17 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 4
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_utoa
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text5
  3178   0012E2                     __ptext5:
  3179                           	callstack 0
  3180   0012E2                     ___lomod:
  3181                           	callstack 22
  3182   0012E2  5017               	movf	___lomod@divisor^0,w,c
  3183   0012E4  1018               	iorwf	(___lomod@divisor+1)^0,w,c
  3184   0012E6  1019               	iorwf	(___lomod@divisor+2)^0,w,c
  3185   0012E8  101A               	iorwf	(___lomod@divisor+3)^0,w,c
  3186   0012EA  101B               	iorwf	(___lomod@divisor+4)^0,w,c
  3187   0012EC  101C               	iorwf	(___lomod@divisor+5)^0,w,c
  3188   0012EE  101D               	iorwf	(___lomod@divisor+6)^0,w,c
  3189   0012F0  101E               	iorwf	(___lomod@divisor+7)^0,w,c
  3190   0012F2  B4D8               	btfsc	status,2,c
  3191   0012F4  EF7E  F009         	goto	u2011
  3192   0012F8  EF80  F009         	goto	u2010
  3193   0012FC                     u2011:
  3194   0012FC  EFC8  F009         	goto	l798
  3195   001300                     u2010:
  3196   001300  0E01               	movlw	1
  3197   001302  6E1F               	movwf	___lomod@counter^0,c
  3198   001304  EF8E  F009         	goto	l2814
  3199   001308                     l2812:
  3200   001308  90D8               	bcf	status,0,c
  3201   00130A  3617               	rlcf	___lomod@divisor^0,f,c
  3202   00130C  3618               	rlcf	(___lomod@divisor+1)^0,f,c
  3203   00130E  3619               	rlcf	(___lomod@divisor+2)^0,f,c
  3204   001310  361A               	rlcf	(___lomod@divisor+3)^0,f,c
  3205   001312  361B               	rlcf	(___lomod@divisor+4)^0,f,c
  3206   001314  361C               	rlcf	(___lomod@divisor+5)^0,f,c
  3207   001316  361D               	rlcf	(___lomod@divisor+6)^0,f,c
  3208   001318  361E               	rlcf	(___lomod@divisor+7)^0,f,c
  3209   00131A  2A1F               	incf	___lomod@counter^0,f,c
  3210   00131C                     l2814:
  3211   00131C  AE1E               	btfss	(___lomod@divisor+7)^0,7,c
  3212   00131E  EF93  F009         	goto	u2021
  3213   001322  EF95  F009         	goto	u2020
  3214   001326                     u2021:
  3215   001326  EF84  F009         	goto	l2812
  3216   00132A                     u2020:
  3217   00132A                     l2816:
  3218   00132A  5017               	movf	___lomod@divisor^0,w,c
  3219   00132C  5C0F               	subwf	___lomod@dividend^0,w,c
  3220   00132E  5018               	movf	(___lomod@divisor+1)^0,w,c
  3221   001330  5810               	subwfb	(___lomod@dividend+1)^0,w,c
  3222   001332  5019               	movf	(___lomod@divisor+2)^0,w,c
  3223   001334  5811               	subwfb	(___lomod@dividend+2)^0,w,c
  3224   001336  501A               	movf	(___lomod@divisor+3)^0,w,c
  3225   001338  5812               	subwfb	(___lomod@dividend+3)^0,w,c
  3226   00133A  501B               	movf	(___lomod@divisor+4)^0,w,c
  3227   00133C  5813               	subwfb	(___lomod@dividend+4)^0,w,c
  3228   00133E  501C               	movf	(___lomod@divisor+5)^0,w,c
  3229   001340  5814               	subwfb	(___lomod@dividend+5)^0,w,c
  3230   001342  501D               	movf	(___lomod@divisor+6)^0,w,c
  3231   001344  5815               	subwfb	(___lomod@dividend+6)^0,w,c
  3232   001346  501E               	movf	(___lomod@divisor+7)^0,w,c
  3233   001348  5816               	subwfb	(___lomod@dividend+7)^0,w,c
  3234   00134A  A0D8               	btfss	status,0,c
  3235   00134C  EFAA  F009         	goto	u2031
  3236   001350  EFAC  F009         	goto	u2030
  3237   001354                     u2031:
  3238   001354  EFBC  F009         	goto	l2820
  3239   001358                     u2030:
  3240   001358  5017               	movf	___lomod@divisor^0,w,c
  3241   00135A  5E0F               	subwf	___lomod@dividend^0,f,c
  3242   00135C  5018               	movf	(___lomod@divisor+1)^0,w,c
  3243   00135E  5A10               	subwfb	(___lomod@dividend+1)^0,f,c
  3244   001360  5019               	movf	(___lomod@divisor+2)^0,w,c
  3245   001362  5A11               	subwfb	(___lomod@dividend+2)^0,f,c
  3246   001364  501A               	movf	(___lomod@divisor+3)^0,w,c
  3247   001366  5A12               	subwfb	(___lomod@dividend+3)^0,f,c
  3248   001368  501B               	movf	(___lomod@divisor+4)^0,w,c
  3249   00136A  5A13               	subwfb	(___lomod@dividend+4)^0,f,c
  3250   00136C  501C               	movf	(___lomod@divisor+5)^0,w,c
  3251   00136E  5A14               	subwfb	(___lomod@dividend+5)^0,f,c
  3252   001370  501D               	movf	(___lomod@divisor+6)^0,w,c
  3253   001372  5A15               	subwfb	(___lomod@dividend+6)^0,f,c
  3254   001374  501E               	movf	(___lomod@divisor+7)^0,w,c
  3255   001376  5A16               	subwfb	(___lomod@dividend+7)^0,f,c
  3256   001378                     l2820:
  3257   001378  90D8               	bcf	status,0,c
  3258   00137A  321E               	rrcf	(___lomod@divisor+7)^0,f,c
  3259   00137C  321D               	rrcf	(___lomod@divisor+6)^0,f,c
  3260   00137E  321C               	rrcf	(___lomod@divisor+5)^0,f,c
  3261   001380  321B               	rrcf	(___lomod@divisor+4)^0,f,c
  3262   001382  321A               	rrcf	(___lomod@divisor+3)^0,f,c
  3263   001384  3219               	rrcf	(___lomod@divisor+2)^0,f,c
  3264   001386  3218               	rrcf	(___lomod@divisor+1)^0,f,c
  3265   001388  3217               	rrcf	___lomod@divisor^0,f,c
  3266   00138A  2E1F               	decfsz	___lomod@counter^0,f,c
  3267   00138C  EF95  F009         	goto	l2816
  3268   001390                     l798:
  3269   001390  C00F  F00F         	movff	___lomod@dividend,?___lomod
  3270   001394  C010  F010         	movff	___lomod@dividend+1,?___lomod+1
  3271   001398  C011  F011         	movff	___lomod@dividend+2,?___lomod+2
  3272   00139C  C012  F012         	movff	___lomod@dividend+3,?___lomod+3
  3273   0013A0  C013  F013         	movff	___lomod@dividend+4,?___lomod+4
  3274   0013A4  C014  F014         	movff	___lomod@dividend+5,?___lomod+5
  3275   0013A8  C015  F015         	movff	___lomod@dividend+6,?___lomod+6
  3276   0013AC  C016  F016         	movff	___lomod@dividend+7,?___lomod+7
  3277   0013B0  0012               	return		;funcret
  3278   0013B2                     __end_of___lomod:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function ___lodiv *****************
  3282 ;; Defined at:
  3283 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  dividend        8   14[COMRAM] unsigned long long 
  3286 ;;  divisor         8   22[COMRAM] unsigned long long 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  quotient        8   30[COMRAM] unsigned long long 
  3289 ;;  counter         1   38[COMRAM] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  8   14[COMRAM] unsigned long long 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3299 ;;      Params:        16       0       0       0       0       0       0
  3300 ;;      Locals:         9       0       0       0       0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0
  3302 ;;      Totals:        25       0       0       0       0       0       0
  3303 ;;Total ram usage:       25 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 4
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_utoa
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text6
  3314   0011F2                     __ptext6:
  3315                           	callstack 0
  3316   0011F2                     ___lodiv:
  3317                           	callstack 22
  3318   0011F2  EE20  F01F         	lfsr	2,___lodiv@quotient
  3319   0011F6  0E07               	movlw	7
  3320   0011F8                     u1971:
  3321   0011F8  6ADE               	clrf	postinc2,c
  3322   0011FA  06E8               	decf	wreg,f,c
  3323   0011FC  E2FD               	bc	u1971
  3324   0011FE  5017               	movf	___lodiv@divisor^0,w,c
  3325   001200  1018               	iorwf	(___lodiv@divisor+1)^0,w,c
  3326   001202  1019               	iorwf	(___lodiv@divisor+2)^0,w,c
  3327   001204  101A               	iorwf	(___lodiv@divisor+3)^0,w,c
  3328   001206  101B               	iorwf	(___lodiv@divisor+4)^0,w,c
  3329   001208  101C               	iorwf	(___lodiv@divisor+5)^0,w,c
  3330   00120A  101D               	iorwf	(___lodiv@divisor+6)^0,w,c
  3331   00120C  101E               	iorwf	(___lodiv@divisor+7)^0,w,c
  3332   00120E  B4D8               	btfsc	status,2,c
  3333   001210  EF0C  F009         	goto	u1981
  3334   001214  EF0E  F009         	goto	u1980
  3335   001218                     u1981:
  3336   001218  EF60  F009         	goto	l788
  3337   00121C                     u1980:
  3338   00121C  0E01               	movlw	1
  3339   00121E  6E27               	movwf	___lodiv@counter^0,c
  3340   001220  EF1C  F009         	goto	l2794
  3341   001224                     l2792:
  3342   001224  90D8               	bcf	status,0,c
  3343   001226  3617               	rlcf	___lodiv@divisor^0,f,c
  3344   001228  3618               	rlcf	(___lodiv@divisor+1)^0,f,c
  3345   00122A  3619               	rlcf	(___lodiv@divisor+2)^0,f,c
  3346   00122C  361A               	rlcf	(___lodiv@divisor+3)^0,f,c
  3347   00122E  361B               	rlcf	(___lodiv@divisor+4)^0,f,c
  3348   001230  361C               	rlcf	(___lodiv@divisor+5)^0,f,c
  3349   001232  361D               	rlcf	(___lodiv@divisor+6)^0,f,c
  3350   001234  361E               	rlcf	(___lodiv@divisor+7)^0,f,c
  3351   001236  2A27               	incf	___lodiv@counter^0,f,c
  3352   001238                     l2794:
  3353   001238  AE1E               	btfss	(___lodiv@divisor+7)^0,7,c
  3354   00123A  EF21  F009         	goto	u1991
  3355   00123E  EF23  F009         	goto	u1990
  3356   001242                     u1991:
  3357   001242  EF12  F009         	goto	l2792
  3358   001246                     u1990:
  3359   001246                     l2796:
  3360   001246  90D8               	bcf	status,0,c
  3361   001248  361F               	rlcf	___lodiv@quotient^0,f,c
  3362   00124A  3620               	rlcf	(___lodiv@quotient+1)^0,f,c
  3363   00124C  3621               	rlcf	(___lodiv@quotient+2)^0,f,c
  3364   00124E  3622               	rlcf	(___lodiv@quotient+3)^0,f,c
  3365   001250  3623               	rlcf	(___lodiv@quotient+4)^0,f,c
  3366   001252  3624               	rlcf	(___lodiv@quotient+5)^0,f,c
  3367   001254  3625               	rlcf	(___lodiv@quotient+6)^0,f,c
  3368   001256  3626               	rlcf	(___lodiv@quotient+7)^0,f,c
  3369   001258  5017               	movf	___lodiv@divisor^0,w,c
  3370   00125A  5C0F               	subwf	___lodiv@dividend^0,w,c
  3371   00125C  5018               	movf	(___lodiv@divisor+1)^0,w,c
  3372   00125E  5810               	subwfb	(___lodiv@dividend+1)^0,w,c
  3373   001260  5019               	movf	(___lodiv@divisor+2)^0,w,c
  3374   001262  5811               	subwfb	(___lodiv@dividend+2)^0,w,c
  3375   001264  501A               	movf	(___lodiv@divisor+3)^0,w,c
  3376   001266  5812               	subwfb	(___lodiv@dividend+3)^0,w,c
  3377   001268  501B               	movf	(___lodiv@divisor+4)^0,w,c
  3378   00126A  5813               	subwfb	(___lodiv@dividend+4)^0,w,c
  3379   00126C  501C               	movf	(___lodiv@divisor+5)^0,w,c
  3380   00126E  5814               	subwfb	(___lodiv@dividend+5)^0,w,c
  3381   001270  501D               	movf	(___lodiv@divisor+6)^0,w,c
  3382   001272  5815               	subwfb	(___lodiv@dividend+6)^0,w,c
  3383   001274  501E               	movf	(___lodiv@divisor+7)^0,w,c
  3384   001276  5816               	subwfb	(___lodiv@dividend+7)^0,w,c
  3385   001278  A0D8               	btfss	status,0,c
  3386   00127A  EF41  F009         	goto	u2001
  3387   00127E  EF43  F009         	goto	u2000
  3388   001282                     u2001:
  3389   001282  EF54  F009         	goto	l2804
  3390   001286                     u2000:
  3391   001286  5017               	movf	___lodiv@divisor^0,w,c
  3392   001288  5E0F               	subwf	___lodiv@dividend^0,f,c
  3393   00128A  5018               	movf	(___lodiv@divisor+1)^0,w,c
  3394   00128C  5A10               	subwfb	(___lodiv@dividend+1)^0,f,c
  3395   00128E  5019               	movf	(___lodiv@divisor+2)^0,w,c
  3396   001290  5A11               	subwfb	(___lodiv@dividend+2)^0,f,c
  3397   001292  501A               	movf	(___lodiv@divisor+3)^0,w,c
  3398   001294  5A12               	subwfb	(___lodiv@dividend+3)^0,f,c
  3399   001296  501B               	movf	(___lodiv@divisor+4)^0,w,c
  3400   001298  5A13               	subwfb	(___lodiv@dividend+4)^0,f,c
  3401   00129A  501C               	movf	(___lodiv@divisor+5)^0,w,c
  3402   00129C  5A14               	subwfb	(___lodiv@dividend+5)^0,f,c
  3403   00129E  501D               	movf	(___lodiv@divisor+6)^0,w,c
  3404   0012A0  5A15               	subwfb	(___lodiv@dividend+6)^0,f,c
  3405   0012A2  501E               	movf	(___lodiv@divisor+7)^0,w,c
  3406   0012A4  5A16               	subwfb	(___lodiv@dividend+7)^0,f,c
  3407   0012A6  801F               	bsf	___lodiv@quotient^0,0,c
  3408   0012A8                     l2804:
  3409   0012A8  90D8               	bcf	status,0,c
  3410   0012AA  321E               	rrcf	(___lodiv@divisor+7)^0,f,c
  3411   0012AC  321D               	rrcf	(___lodiv@divisor+6)^0,f,c
  3412   0012AE  321C               	rrcf	(___lodiv@divisor+5)^0,f,c
  3413   0012B0  321B               	rrcf	(___lodiv@divisor+4)^0,f,c
  3414   0012B2  321A               	rrcf	(___lodiv@divisor+3)^0,f,c
  3415   0012B4  3219               	rrcf	(___lodiv@divisor+2)^0,f,c
  3416   0012B6  3218               	rrcf	(___lodiv@divisor+1)^0,f,c
  3417   0012B8  3217               	rrcf	___lodiv@divisor^0,f,c
  3418   0012BA  2E27               	decfsz	___lodiv@counter^0,f,c
  3419   0012BC  EF23  F009         	goto	l2796
  3420   0012C0                     l788:
  3421   0012C0  C01F  F00F         	movff	___lodiv@quotient,?___lodiv
  3422   0012C4  C020  F010         	movff	___lodiv@quotient+1,?___lodiv+1
  3423   0012C8  C021  F011         	movff	___lodiv@quotient+2,?___lodiv+2
  3424   0012CC  C022  F012         	movff	___lodiv@quotient+3,?___lodiv+3
  3425   0012D0  C023  F013         	movff	___lodiv@quotient+4,?___lodiv+4
  3426   0012D4  C024  F014         	movff	___lodiv@quotient+5,?___lodiv+5
  3427   0012D8  C025  F015         	movff	___lodiv@quotient+6,?___lodiv+6
  3428   0012DC  C026  F016         	movff	___lodiv@quotient+7,?___lodiv+7
  3429   0012E0  0012               	return		;funcret
  3430   0012E2                     __end_of___lodiv:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _dtoa *****************
  3434 ;; Defined at:
  3435 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  3438 ;;		 -> NULL(0), 
  3439 ;;  d               8   45[COMRAM] long long 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  n               8    6[BANK0 ] long long 
  3442 ;;  i               2   15[BANK0 ] int 
  3443 ;;  w               2    4[BANK0 ] int 
  3444 ;;  p               2    2[BANK0 ] int 
  3445 ;;  s               1   14[BANK0 ] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:        10       0       0       0       0       0       0
  3456 ;;      Locals:         0      17       0       0       0       0       0
  3457 ;;      Temps:          8       0       0       0       0       0       0
  3458 ;;      Totals:        18      17       0       0       0       0       0
  3459 ;;Total ram usage:       35 bytes
  3460 ;; Hardware stack levels used: 1
  3461 ;; Hardware stack levels required when called: 9
  3462 ;; This function calls:
  3463 ;;		___aodiv
  3464 ;;		___aomod
  3465 ;;		_abs
  3466 ;;		_pad
  3467 ;; This function is called by:
  3468 ;;		_vfpfcnvrt
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text7
  3473   0009B4                     __ptext7:
  3474                           	callstack 0
  3475   0009B4                     _dtoa:
  3476                           	callstack 18
  3477   0009B4                     
  3478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3479   0009B4  C02E  F066         	movff	dtoa@d,dtoa@n
  3480   0009B8  C02F  F067         	movff	dtoa@d+1,dtoa@n+1
  3481   0009BC  C030  F068         	movff	dtoa@d+2,dtoa@n+2
  3482   0009C0  C031  F069         	movff	dtoa@d+3,dtoa@n+3
  3483   0009C4  C032  F06A         	movff	dtoa@d+4,dtoa@n+4
  3484   0009C8  C033  F06B         	movff	dtoa@d+5,dtoa@n+5
  3485   0009CC  C034  F06C         	movff	dtoa@d+6,dtoa@n+6
  3486   0009D0  C035  F06D         	movff	dtoa@d+7,dtoa@n+7
  3487   0009D4                     
  3488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3489   0009D4  0100               	movlb	0	; () banked
  3490   0009D6  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  3491   0009D8  EFF0  F004         	goto	u2101
  3492   0009DC  EFF3  F004         	goto	u2100
  3493   0009E0                     u2101:
  3494   0009E0  0E01               	movlw	1
  3495   0009E2  EFF4  F004         	goto	u2110
  3496   0009E6                     u2100:
  3497   0009E6  0E00               	movlw	0
  3498   0009E8                     u2110:
  3499   0009E8  6F6E               	movwf	dtoa@s& (0+255),b
  3500   0009EA                     
  3501                           ; BSR set to: 0
  3502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3503   0009EA  516E               	movf	dtoa@s& (0+255),w,b
  3504   0009EC  B4D8               	btfsc	status,2,c
  3505   0009EE  EFFB  F004         	goto	u2121
  3506   0009F2  EFFD  F004         	goto	u2120
  3507   0009F6                     u2121:
  3508   0009F6  EF0D  F005         	goto	l2868
  3509   0009FA                     u2120:
  3510   0009FA                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3513   0009FA  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  3514   0009FC  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  3515   0009FE  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  3516   000A00  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  3517   000A02  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  3518   000A04  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  3519   000A06  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  3520   000A08  6D66               	negf	dtoa@n& (0+255),b
  3521   000A0A  0E00               	movlw	0
  3522   000A0C  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  3523   000A0E  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  3524   000A10  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  3525   000A12  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  3526   000A14  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  3527   000A16  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  3528   000A18  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  3529   000A1A                     l2868:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3533   000A1A  BE47               	btfsc	(_prec+1)^0,7,c
  3534   000A1C  EF1A  F005         	goto	u2130
  3535   000A20  5047               	movf	(_prec+1)^0,w,c
  3536   000A22  E106               	bnz	u2131
  3537   000A24  0446               	decf	_prec^0,w,c
  3538   000A26  B0D8               	btfsc	status,0,c
  3539   000A28  EF18  F005         	goto	u2131
  3540   000A2C  EF1A  F005         	goto	u2130
  3541   000A30                     u2131:
  3542   000A30  EF20  F005         	goto	l1073
  3543   000A34                     u2130:
  3544   000A34                     
  3545                           ; BSR set to: 0
  3546   000A34  0E00               	movlw	0
  3547   000A36  6F63               	movwf	(dtoa@p+1)& (0+255),b
  3548   000A38  0E01               	movlw	1
  3549   000A3A  6F62               	movwf	dtoa@p& (0+255),b
  3550   000A3C  EF24  F005         	goto	l1075
  3551   000A40                     l1073:
  3552                           
  3553                           ; BSR set to: 0
  3554   000A40  C046  F062         	movff	_prec,dtoa@p
  3555   000A44  C047  F063         	movff	_prec+1,dtoa@p+1
  3556   000A48                     l1075:
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3560   000A48  C044  F064         	movff	_width,dtoa@w
  3561   000A4C  C045  F065         	movff	_width+1,dtoa@w+1
  3562   000A50                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3565   000A50  516E               	movf	dtoa@s& (0+255),w,b
  3566   000A52  B4D8               	btfsc	status,2,c
  3567   000A54  EF2E  F005         	goto	u2141
  3568   000A58  EF30  F005         	goto	u2140
  3569   000A5C                     u2141:
  3570   000A5C  EF47  F005         	goto	l1076
  3571   000A60                     u2140:
  3572   000A60                     
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3575   000A60  0764               	decf	dtoa@w& (0+255),f,b
  3576   000A62  A0D8               	btfss	status,0,c
  3577   000A64  0765               	decf	(dtoa@w+1)& (0+255),f,b
  3578   000A66                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3581   000A66  516E               	movf	dtoa@s& (0+255),w,b
  3582   000A68  A4D8               	btfss	status,2,c
  3583   000A6A  EF39  F005         	goto	u2151
  3584   000A6E  EF3B  F005         	goto	u2150
  3585   000A72                     u2151:
  3586   000A72  EF41  F005         	goto	l2880
  3587   000A76                     u2150:
  3588   000A76                     
  3589                           ; BSR set to: 0
  3590   000A76  0E00               	movlw	0
  3591   000A78  6F61               	movwf	(_dtoa$1449+1)& (0+255),b
  3592   000A7A  0E2B               	movlw	43
  3593   000A7C  6F60               	movwf	_dtoa$1449& (0+255),b
  3594   000A7E  EF45  F005         	goto	l2882
  3595   000A82                     l2880:
  3596                           
  3597                           ; BSR set to: 0
  3598   000A82  0E00               	movlw	0
  3599   000A84  6F61               	movwf	(_dtoa$1449+1)& (0+255),b
  3600   000A86  0E2D               	movlw	45
  3601   000A88  6F60               	movwf	_dtoa$1449& (0+255),b
  3602   000A8A                     l2882:
  3603                           
  3604                           ; BSR set to: 0
  3605   000A8A  C060  F06E         	movff	_dtoa$1449,dtoa@s
  3606   000A8E                     l1076:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3610   000A8E  0E00               	movlw	0
  3611   000A90  6F70               	movwf	(dtoa@i+1)& (0+255),b
  3612   000A92  0E1F               	movlw	31
  3613   000A94  6F6F               	movwf	dtoa@i& (0+255),b
  3614   000A96                     
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3617   000A96  0E00               	movlw	0
  3618   000A98  6FCF               	movwf	(_dbuf+31)& (0+255),b
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3621   000A9A  EFCC  F005         	goto	l2896
  3622   000A9E                     l2886:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3626   000A9E  076F               	decf	dtoa@i& (0+255),f,b
  3627   000AA0  A0D8               	btfss	status,0,c
  3628   000AA2  0770               	decf	(dtoa@i+1)& (0+255),f,b
  3629   000AA4                     
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3632   000AA4  0EB0               	movlw	low _dbuf
  3633   000AA6  256F               	addwf	dtoa@i& (0+255),w,b
  3634   000AA8  6ED9               	movwf	fsr2l,c
  3635   000AAA  0E00               	movlw	high _dbuf
  3636   000AAC  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  3637   000AAE  6EDA               	movwf	fsr2h,c
  3638   000AB0  C066  F00F         	movff	dtoa@n,___aomod@dividend
  3639   000AB4  C067  F010         	movff	dtoa@n+1,___aomod@dividend+1
  3640   000AB8  C068  F011         	movff	dtoa@n+2,___aomod@dividend+2
  3641   000ABC  C069  F012         	movff	dtoa@n+3,___aomod@dividend+3
  3642   000AC0  C06A  F013         	movff	dtoa@n+4,___aomod@dividend+4
  3643   000AC4  C06B  F014         	movff	dtoa@n+5,___aomod@dividend+5
  3644   000AC8  C06C  F015         	movff	dtoa@n+6,___aomod@dividend+6
  3645   000ACC  C06D  F016         	movff	dtoa@n+7,___aomod@dividend+7
  3646   000AD0  0E0A               	movlw	10
  3647   000AD2  6E17               	movwf	___aomod@divisor^0,c
  3648   000AD4  0E00               	movlw	0
  3649   000AD6  6E18               	movwf	(___aomod@divisor+1)^0,c
  3650   000AD8  0E00               	movlw	0
  3651   000ADA  6E19               	movwf	(___aomod@divisor+2)^0,c
  3652   000ADC  0E00               	movlw	0
  3653   000ADE  6E1A               	movwf	(___aomod@divisor+3)^0,c
  3654   000AE0  0E00               	movlw	0
  3655   000AE2  6E1B               	movwf	(___aomod@divisor+4)^0,c
  3656   000AE4  0E00               	movlw	0
  3657   000AE6  6E1C               	movwf	(___aomod@divisor+5)^0,c
  3658   000AE8  0E00               	movlw	0
  3659   000AEA  6E1D               	movwf	(___aomod@divisor+6)^0,c
  3660   000AEC  0E00               	movlw	0
  3661   000AEE  6E1E               	movwf	(___aomod@divisor+7)^0,c
  3662   000AF0  ECC1  F007         	call	___aomod	;wreg free
  3663   000AF4  C00F  F036         	movff	?___aomod,??_dtoa
  3664   000AF8  C010  F037         	movff	?___aomod+1,??_dtoa+1
  3665   000AFC  C011  F038         	movff	?___aomod+2,??_dtoa+2
  3666   000B00  C012  F039         	movff	?___aomod+3,??_dtoa+3
  3667   000B04  C013  F03A         	movff	?___aomod+4,??_dtoa+4
  3668   000B08  C014  F03B         	movff	?___aomod+5,??_dtoa+5
  3669   000B0C  C015  F03C         	movff	?___aomod+6,??_dtoa+6
  3670   000B10  C016  F03D         	movff	?___aomod+7,??_dtoa+7
  3671   000B14  C036  F021         	movff	??_dtoa,abs@a
  3672   000B18  C037  F022         	movff	??_dtoa+1,abs@a+1
  3673   000B1C  EC53  F00B         	call	_abs	;wreg free
  3674   000B20  5021               	movf	?_abs^0,w,c
  3675   000B22  0F30               	addlw	48
  3676   000B24  6EDF               	movwf	indf2,c
  3677   000B26                     
  3678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3679   000B26  0100               	movlb	0	; () banked
  3680   000B28  0762               	decf	dtoa@p& (0+255),f,b
  3681   000B2A  A0D8               	btfss	status,0,c
  3682   000B2C  0763               	decf	(dtoa@p+1)& (0+255),f,b
  3683   000B2E                     
  3684                           ; BSR set to: 0
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3686   000B2E  0764               	decf	dtoa@w& (0+255),f,b
  3687   000B30  A0D8               	btfss	status,0,c
  3688   000B32  0765               	decf	(dtoa@w+1)& (0+255),f,b
  3689   000B34                     
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3692   000B34  C066  F00F         	movff	dtoa@n,___aodiv@dividend
  3693   000B38  C067  F010         	movff	dtoa@n+1,___aodiv@dividend+1
  3694   000B3C  C068  F011         	movff	dtoa@n+2,___aodiv@dividend+2
  3695   000B40  C069  F012         	movff	dtoa@n+3,___aodiv@dividend+3
  3696   000B44  C06A  F013         	movff	dtoa@n+4,___aodiv@dividend+4
  3697   000B48  C06B  F014         	movff	dtoa@n+5,___aodiv@dividend+5
  3698   000B4C  C06C  F015         	movff	dtoa@n+6,___aodiv@dividend+6
  3699   000B50  C06D  F016         	movff	dtoa@n+7,___aodiv@dividend+7
  3700   000B54  0E0A               	movlw	10
  3701   000B56  6E17               	movwf	___aodiv@divisor^0,c
  3702   000B58  0E00               	movlw	0
  3703   000B5A  6E18               	movwf	(___aodiv@divisor+1)^0,c
  3704   000B5C  0E00               	movlw	0
  3705   000B5E  6E19               	movwf	(___aodiv@divisor+2)^0,c
  3706   000B60  0E00               	movlw	0
  3707   000B62  6E1A               	movwf	(___aodiv@divisor+3)^0,c
  3708   000B64  0E00               	movlw	0
  3709   000B66  6E1B               	movwf	(___aodiv@divisor+4)^0,c
  3710   000B68  0E00               	movlw	0
  3711   000B6A  6E1C               	movwf	(___aodiv@divisor+5)^0,c
  3712   000B6C  0E00               	movlw	0
  3713   000B6E  6E1D               	movwf	(___aodiv@divisor+6)^0,c
  3714   000B70  0E00               	movlw	0
  3715   000B72  6E1E               	movwf	(___aodiv@divisor+7)^0,c
  3716   000B74  ECFD  F006         	call	___aodiv	;wreg free
  3717   000B78  C00F  F066         	movff	?___aodiv,dtoa@n
  3718   000B7C  C010  F067         	movff	?___aodiv+1,dtoa@n+1
  3719   000B80  C011  F068         	movff	?___aodiv+2,dtoa@n+2
  3720   000B84  C012  F069         	movff	?___aodiv+3,dtoa@n+3
  3721   000B88  C013  F06A         	movff	?___aodiv+4,dtoa@n+4
  3722   000B8C  C014  F06B         	movff	?___aodiv+5,dtoa@n+5
  3723   000B90  C015  F06C         	movff	?___aodiv+6,dtoa@n+6
  3724   000B94  C016  F06D         	movff	?___aodiv+7,dtoa@n+7
  3725   000B98                     l2896:
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3728   000B98  0100               	movlb	0	; () banked
  3729   000B9A  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  3730   000B9C  EFD8  F005         	goto	u2161
  3731   000BA0  5170               	movf	(dtoa@i+1)& (0+255),w,b
  3732   000BA2  E108               	bnz	u2160
  3733   000BA4  056F               	decf	dtoa@i& (0+255),w,b
  3734   000BA6  A0D8               	btfss	status,0,c
  3735   000BA8  EFD8  F005         	goto	u2161
  3736   000BAC  EFDA  F005         	goto	u2160
  3737   000BB0                     u2161:
  3738   000BB0  EFF6  F005         	goto	l2902
  3739   000BB4                     u2160:
  3740   000BB4                     
  3741                           ; BSR set to: 0
  3742   000BB4  5166               	movf	dtoa@n& (0+255),w,b
  3743   000BB6  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  3744   000BB8  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  3745   000BBA  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  3746   000BBC  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  3747   000BBE  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  3748   000BC0  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  3749   000BC2  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  3750   000BC4  A4D8               	btfss	status,2,c
  3751   000BC6  EFE7  F005         	goto	u2171
  3752   000BCA  EFE9  F005         	goto	u2170
  3753   000BCE                     u2171:
  3754   000BCE  EF4F  F005         	goto	l2886
  3755   000BD2                     u2170:
  3756   000BD2                     
  3757                           ; BSR set to: 0
  3758   000BD2  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  3759   000BD4  EFF6  F005         	goto	u2180
  3760   000BD8  5163               	movf	(dtoa@p+1)& (0+255),w,b
  3761   000BDA  E106               	bnz	u2181
  3762   000BDC  0562               	decf	dtoa@p& (0+255),w,b
  3763   000BDE  B0D8               	btfsc	status,0,c
  3764   000BE0  EFF4  F005         	goto	u2181
  3765   000BE4  EFF6  F005         	goto	u2180
  3766   000BE8                     u2181:
  3767   000BE8  EF4F  F005         	goto	l2886
  3768   000BEC                     u2180:
  3769   000BEC                     l2902:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3773   000BEC  516E               	movf	dtoa@s& (0+255),w,b
  3774   000BEE  B4D8               	btfsc	status,2,c
  3775   000BF0  EFFC  F005         	goto	u2191
  3776   000BF4  EFFE  F005         	goto	u2190
  3777   000BF8                     u2191:
  3778   000BF8  EF09  F006         	goto	l2908
  3779   000BFC                     u2190:
  3780   000BFC                     
  3781                           ; BSR set to: 0
  3782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3783   000BFC  076F               	decf	dtoa@i& (0+255),f,b
  3784   000BFE  A0D8               	btfss	status,0,c
  3785   000C00  0770               	decf	(dtoa@i+1)& (0+255),f,b
  3786   000C02                     
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3789   000C02  0EB0               	movlw	low _dbuf
  3790   000C04  256F               	addwf	dtoa@i& (0+255),w,b
  3791   000C06  6ED9               	movwf	fsr2l,c
  3792   000C08  0E00               	movlw	high _dbuf
  3793   000C0A  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  3794   000C0C  6EDA               	movwf	fsr2h,c
  3795   000C0E  C06E  FFDF         	movff	dtoa@s,indf2
  3796   000C12                     l2908:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3800   000C12  C02C  F021         	movff	dtoa@fp,pad@fp
  3801   000C16  C02D  F022         	movff	dtoa@fp+1,pad@fp+1
  3802   000C1A  0EB0               	movlw	low _dbuf
  3803   000C1C  256F               	addwf	dtoa@i& (0+255),w,b
  3804   000C1E  6E23               	movwf	pad@buf^0,c
  3805   000C20  0E00               	movlw	high _dbuf
  3806   000C22  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  3807   000C24  6E24               	movwf	(pad@buf+1)^0,c
  3808   000C26  C064  F025         	movff	dtoa@w,pad@p
  3809   000C2A  C065  F026         	movff	dtoa@w+1,pad@p+1
  3810   000C2E  EC71  F00A         	call	_pad	;wreg free
  3811   000C32  0012               	return		;funcret
  3812   000C34                     __end_of_dtoa:
  3813                           	callstack 0
  3814                           
  3815 ;; *************** function _pad *****************
  3816 ;; Defined at:
  3817 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3820 ;;		 -> NULL(0), 
  3821 ;;  buf             2   34[COMRAM] PTR unsigned char 
  3822 ;;		 -> dbuf(32), 
  3823 ;;  p               2   36[COMRAM] int 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  w               2   41[COMRAM] int 
  3826 ;;  i               2   39[COMRAM] int 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3836 ;;      Params:         6       0       0       0       0       0       0
  3837 ;;      Locals:         4       0       0       0       0       0       0
  3838 ;;      Temps:          1       0       0       0       0       0       0
  3839 ;;      Totals:        11       0       0       0       0       0       0
  3840 ;;Total ram usage:       11 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 8
  3843 ;; This function calls:
  3844 ;;		_fputc
  3845 ;;		_fputs
  3846 ;; This function is called by:
  3847 ;;		_dtoa
  3848 ;;		_utoa
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text8
  3853   0014E2                     __ptext8:
  3854                           	callstack 0
  3855   0014E2                     _pad:
  3856                           	callstack 18
  3857   0014E2                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3859   0014E2  BE26               	btfsc	(pad@p+1)^0,7,c
  3860   0014E4  EF76  F00A         	goto	u2041
  3861   0014E8  EF78  F00A         	goto	u2040
  3862   0014EC                     u2041:
  3863   0014EC  EF7E  F00A         	goto	l2828
  3864   0014F0                     u2040:
  3865   0014F0  C025  F02A         	movff	pad@p,pad@w
  3866   0014F4  C026  F02B         	movff	pad@p+1,pad@w+1
  3867   0014F8  EF82  F00A         	goto	l1050
  3868   0014FC                     l2828:
  3869   0014FC  0E00               	movlw	0
  3870   0014FE  6E2B               	movwf	(pad@w+1)^0,c
  3871   001500  0E00               	movlw	0
  3872   001502  6E2A               	movwf	pad@w^0,c
  3873   001504                     l1050:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3876   001504  0E00               	movlw	0
  3877   001506  6E29               	movwf	(pad@i+1)^0,c
  3878   001508  0E00               	movlw	0
  3879   00150A  6E28               	movwf	pad@i^0,c
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3882   00150C  EF94  F00A         	goto	l2834
  3883   001510                     l2830:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3886   001510  0E00               	movlw	0
  3887   001512  6E12               	movwf	(fputc@c+1)^0,c
  3888   001514  0E20               	movlw	32
  3889   001516  6E11               	movwf	fputc@c^0,c
  3890   001518  C021  F013         	movff	pad@fp,fputc@fp
  3891   00151C  C022  F014         	movff	pad@fp+1,fputc@fp+1
  3892   001520  EC26  F00A         	call	_fputc	;wreg free
  3893   001524                     
  3894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3895   001524  4A28               	infsnz	pad@i^0,f,c
  3896   001526  2A29               	incf	(pad@i+1)^0,f,c
  3897   001528                     l2834:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3900   001528  502A               	movf	pad@w^0,w,c
  3901   00152A  5C28               	subwf	pad@i^0,w,c
  3902   00152C  5029               	movf	(pad@i+1)^0,w,c
  3903   00152E  0A80               	xorlw	128
  3904   001530  6E27               	movwf	??_pad^0,c
  3905   001532  502B               	movf	(pad@w+1)^0,w,c
  3906   001534  0A80               	xorlw	128
  3907   001536  5827               	subwfb	??_pad^0,w,c
  3908   001538  A0D8               	btfss	status,0,c
  3909   00153A  EFA1  F00A         	goto	u2051
  3910   00153E  EFA3  F00A         	goto	u2050
  3911   001542                     u2051:
  3912   001542  EF88  F00A         	goto	l2830
  3913   001546                     u2050:
  3914   001546                     
  3915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3916   001546  C023  F01A         	movff	pad@buf,fputs@s
  3917   00154A  C024  F01B         	movff	pad@buf+1,fputs@s+1
  3918   00154E  C021  F01C         	movff	pad@fp,fputs@fp
  3919   001552  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  3920   001556  EC31  F00B         	call	_fputs	;wreg free
  3921   00155A  0012               	return		;funcret
  3922   00155C                     __end_of_pad:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _fputs *****************
  3926 ;; Defined at:
  3927 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  s               2   25[COMRAM] PTR const unsigned char 
  3930 ;;		 -> dbuf(32), 
  3931 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3932 ;;		 -> NULL(0), 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  i               2   30[COMRAM] int 
  3935 ;;  c               1   29[COMRAM] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  2   25[COMRAM] int 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3945 ;;      Params:         4       0       0       0       0       0       0
  3946 ;;      Locals:         3       0       0       0       0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0
  3948 ;;      Totals:         7       0       0       0       0       0       0
  3949 ;;Total ram usage:        7 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 7
  3952 ;; This function calls:
  3953 ;;		_fputc
  3954 ;; This function is called by:
  3955 ;;		_pad
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text9
  3960   001662                     __ptext9:
  3961                           	callstack 0
  3962   001662                     _fputs:
  3963                           	callstack 18
  3964   001662  0E00               	movlw	0
  3965   001664  6E20               	movwf	(fputs@i+1)^0,c
  3966   001666  0E00               	movlw	0
  3967   001668  6E1F               	movwf	fputs@i^0,c
  3968   00166A  EF42  F00B         	goto	l2704
  3969   00166E                     l2700:
  3970   00166E  C01E  F011         	movff	fputs@c,fputc@c
  3971   001672  6A12               	clrf	(fputc@c+1)^0,c
  3972   001674  C01C  F013         	movff	fputs@fp,fputc@fp
  3973   001678  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  3974   00167C  EC26  F00A         	call	_fputc	;wreg free
  3975   001680  4A1F               	infsnz	fputs@i^0,f,c
  3976   001682  2A20               	incf	(fputs@i+1)^0,f,c
  3977   001684                     l2704:
  3978   001684  501F               	movf	fputs@i^0,w,c
  3979   001686  241A               	addwf	fputs@s^0,w,c
  3980   001688  6ED9               	movwf	fsr2l,c
  3981   00168A  5020               	movf	(fputs@i+1)^0,w,c
  3982   00168C  201B               	addwfc	(fputs@s+1)^0,w,c
  3983   00168E  6EDA               	movwf	fsr2h,c
  3984   001690  50DF               	movf	indf2,w,c
  3985   001692  6E1E               	movwf	fputs@c^0,c
  3986   001694  501E               	movf	fputs@c^0,w,c
  3987   001696  A4D8               	btfss	status,2,c
  3988   001698  EF50  F00B         	goto	u1831
  3989   00169C  EF52  F00B         	goto	u1830
  3990   0016A0                     u1831:
  3991   0016A0  EF37  F00B         	goto	l2700
  3992   0016A4                     u1830:
  3993   0016A4  0012               	return		;funcret
  3994   0016A6                     __end_of_fputs:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _abs *****************
  3998 ;; Defined at:
  3999 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  a               2   32[COMRAM] int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2   32[COMRAM] int 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4013 ;;      Params:         2       0       0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0
  4015 ;;      Temps:          2       0       0       0       0       0       0
  4016 ;;      Totals:         4       0       0       0       0       0       0
  4017 ;;Total ram usage:        4 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 4
  4020 ;; This function calls:
  4021 ;;		Nothing
  4022 ;; This function is called by:
  4023 ;;		_dtoa
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text10
  4028   0016A6                     __ptext10:
  4029                           	callstack 0
  4030   0016A6                     _abs:
  4031                           	callstack 22
  4032   0016A6  BE22               	btfsc	(abs@a+1)^0,7,c
  4033   0016A8  EF60  F00B         	goto	u2060
  4034   0016AC  5022               	movf	(abs@a+1)^0,w,c
  4035   0016AE  E106               	bnz	u2061
  4036   0016B0  0421               	decf	abs@a^0,w,c
  4037   0016B2  B0D8               	btfsc	status,0,c
  4038   0016B4  EF5E  F00B         	goto	u2061
  4039   0016B8  EF60  F00B         	goto	u2060
  4040   0016BC                     u2061:
  4041   0016BC  EF6E  F00B         	goto	l1123
  4042   0016C0                     u2060:
  4043   0016C0  C021  F023         	movff	abs@a,??_abs
  4044   0016C4  C022  F024         	movff	abs@a+1,??_abs+1
  4045   0016C8  1E23               	comf	??_abs^0,f,c
  4046   0016CA  1E24               	comf	(??_abs+1)^0,f,c
  4047   0016CC  4A23               	infsnz	??_abs^0,f,c
  4048   0016CE  2A24               	incf	(??_abs+1)^0,f,c
  4049   0016D0  C023  F021         	movff	??_abs,?_abs
  4050   0016D4  C024  F022         	movff	??_abs+1,?_abs+1
  4051   0016D8  EF72  F00B         	goto	l1126
  4052   0016DC                     l1123:
  4053   0016DC  C021  F021         	movff	abs@a,?_abs
  4054   0016E0  C022  F022         	movff	abs@a+1,?_abs+1
  4055   0016E4                     l1126:
  4056   0016E4  0012               	return		;funcret
  4057   0016E6                     __end_of_abs:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function ___aomod *****************
  4061 ;; Defined at:
  4062 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  dividend        8   14[COMRAM] long long 
  4065 ;;  divisor         8   22[COMRAM] long long 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  sign            1   31[COMRAM] unsigned char 
  4068 ;;  counter         1   30[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  8   14[COMRAM] long long 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:        16       0       0       0       0       0       0
  4079 ;;      Locals:         2       0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0
  4081 ;;      Totals:        18       0       0       0       0       0       0
  4082 ;;Total ram usage:       18 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 4
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_dtoa
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text11
  4093   000F82                     __ptext11:
  4094                           	callstack 0
  4095   000F82                     ___aomod:
  4096                           	callstack 22
  4097   000F82  0E00               	movlw	0
  4098   000F84  6E20               	movwf	___aomod@sign^0,c
  4099   000F86  BE16               	btfsc	(___aomod@dividend+7)^0,7,c
  4100   000F88  EFCA  F007         	goto	u1910
  4101   000F8C  EFC8  F007         	goto	u1911
  4102   000F90                     u1911:
  4103   000F90  EFDC  F007         	goto	l2758
  4104   000F94                     u1910:
  4105   000F94  1E16               	comf	(___aomod@dividend+7)^0,f,c
  4106   000F96  1E15               	comf	(___aomod@dividend+6)^0,f,c
  4107   000F98  1E14               	comf	(___aomod@dividend+5)^0,f,c
  4108   000F9A  1E13               	comf	(___aomod@dividend+4)^0,f,c
  4109   000F9C  1E12               	comf	(___aomod@dividend+3)^0,f,c
  4110   000F9E  1E11               	comf	(___aomod@dividend+2)^0,f,c
  4111   000FA0  1E10               	comf	(___aomod@dividend+1)^0,f,c
  4112   000FA2  6C0F               	negf	___aomod@dividend^0,c
  4113   000FA4  0E00               	movlw	0
  4114   000FA6  2210               	addwfc	(___aomod@dividend+1)^0,f,c
  4115   000FA8  2211               	addwfc	(___aomod@dividend+2)^0,f,c
  4116   000FAA  2212               	addwfc	(___aomod@dividend+3)^0,f,c
  4117   000FAC  2213               	addwfc	(___aomod@dividend+4)^0,f,c
  4118   000FAE  2214               	addwfc	(___aomod@dividend+5)^0,f,c
  4119   000FB0  2215               	addwfc	(___aomod@dividend+6)^0,f,c
  4120   000FB2  2216               	addwfc	(___aomod@dividend+7)^0,f,c
  4121   000FB4  0E01               	movlw	1
  4122   000FB6  6E20               	movwf	___aomod@sign^0,c
  4123   000FB8                     l2758:
  4124   000FB8  BE1E               	btfsc	(___aomod@divisor+7)^0,7,c
  4125   000FBA  EFE3  F007         	goto	u1920
  4126   000FBE  EFE1  F007         	goto	u1921
  4127   000FC2                     u1921:
  4128   000FC2  EFF3  F007         	goto	l2762
  4129   000FC6                     u1920:
  4130   000FC6  1E1E               	comf	(___aomod@divisor+7)^0,f,c
  4131   000FC8  1E1D               	comf	(___aomod@divisor+6)^0,f,c
  4132   000FCA  1E1C               	comf	(___aomod@divisor+5)^0,f,c
  4133   000FCC  1E1B               	comf	(___aomod@divisor+4)^0,f,c
  4134   000FCE  1E1A               	comf	(___aomod@divisor+3)^0,f,c
  4135   000FD0  1E19               	comf	(___aomod@divisor+2)^0,f,c
  4136   000FD2  1E18               	comf	(___aomod@divisor+1)^0,f,c
  4137   000FD4  6C17               	negf	___aomod@divisor^0,c
  4138   000FD6  0E00               	movlw	0
  4139   000FD8  2218               	addwfc	(___aomod@divisor+1)^0,f,c
  4140   000FDA  2219               	addwfc	(___aomod@divisor+2)^0,f,c
  4141   000FDC  221A               	addwfc	(___aomod@divisor+3)^0,f,c
  4142   000FDE  221B               	addwfc	(___aomod@divisor+4)^0,f,c
  4143   000FE0  221C               	addwfc	(___aomod@divisor+5)^0,f,c
  4144   000FE2  221D               	addwfc	(___aomod@divisor+6)^0,f,c
  4145   000FE4  221E               	addwfc	(___aomod@divisor+7)^0,f,c
  4146   000FE6                     l2762:
  4147   000FE6  5017               	movf	___aomod@divisor^0,w,c
  4148   000FE8  1018               	iorwf	(___aomod@divisor+1)^0,w,c
  4149   000FEA  1019               	iorwf	(___aomod@divisor+2)^0,w,c
  4150   000FEC  101A               	iorwf	(___aomod@divisor+3)^0,w,c
  4151   000FEE  101B               	iorwf	(___aomod@divisor+4)^0,w,c
  4152   000FF0  101C               	iorwf	(___aomod@divisor+5)^0,w,c
  4153   000FF2  101D               	iorwf	(___aomod@divisor+6)^0,w,c
  4154   000FF4  101E               	iorwf	(___aomod@divisor+7)^0,w,c
  4155   000FF6  B4D8               	btfsc	status,2,c
  4156   000FF8  EF00  F008         	goto	u1931
  4157   000FFC  EF02  F008         	goto	u1930
  4158   001000                     u1931:
  4159   001000  EF4A  F008         	goto	l2778
  4160   001004                     u1930:
  4161   001004  0E01               	movlw	1
  4162   001006  6E1F               	movwf	___aomod@counter^0,c
  4163   001008  EF10  F008         	goto	l2768
  4164   00100C                     l2766:
  4165   00100C  90D8               	bcf	status,0,c
  4166   00100E  3617               	rlcf	___aomod@divisor^0,f,c
  4167   001010  3618               	rlcf	(___aomod@divisor+1)^0,f,c
  4168   001012  3619               	rlcf	(___aomod@divisor+2)^0,f,c
  4169   001014  361A               	rlcf	(___aomod@divisor+3)^0,f,c
  4170   001016  361B               	rlcf	(___aomod@divisor+4)^0,f,c
  4171   001018  361C               	rlcf	(___aomod@divisor+5)^0,f,c
  4172   00101A  361D               	rlcf	(___aomod@divisor+6)^0,f,c
  4173   00101C  361E               	rlcf	(___aomod@divisor+7)^0,f,c
  4174   00101E  2A1F               	incf	___aomod@counter^0,f,c
  4175   001020                     l2768:
  4176   001020  AE1E               	btfss	(___aomod@divisor+7)^0,7,c
  4177   001022  EF15  F008         	goto	u1941
  4178   001026  EF17  F008         	goto	u1940
  4179   00102A                     u1941:
  4180   00102A  EF06  F008         	goto	l2766
  4181   00102E                     u1940:
  4182   00102E                     l2770:
  4183   00102E  5017               	movf	___aomod@divisor^0,w,c
  4184   001030  5C0F               	subwf	___aomod@dividend^0,w,c
  4185   001032  5018               	movf	(___aomod@divisor+1)^0,w,c
  4186   001034  5810               	subwfb	(___aomod@dividend+1)^0,w,c
  4187   001036  5019               	movf	(___aomod@divisor+2)^0,w,c
  4188   001038  5811               	subwfb	(___aomod@dividend+2)^0,w,c
  4189   00103A  501A               	movf	(___aomod@divisor+3)^0,w,c
  4190   00103C  5812               	subwfb	(___aomod@dividend+3)^0,w,c
  4191   00103E  501B               	movf	(___aomod@divisor+4)^0,w,c
  4192   001040  5813               	subwfb	(___aomod@dividend+4)^0,w,c
  4193   001042  501C               	movf	(___aomod@divisor+5)^0,w,c
  4194   001044  5814               	subwfb	(___aomod@dividend+5)^0,w,c
  4195   001046  501D               	movf	(___aomod@divisor+6)^0,w,c
  4196   001048  5815               	subwfb	(___aomod@dividend+6)^0,w,c
  4197   00104A  501E               	movf	(___aomod@divisor+7)^0,w,c
  4198   00104C  5816               	subwfb	(___aomod@dividend+7)^0,w,c
  4199   00104E  A0D8               	btfss	status,0,c
  4200   001050  EF2C  F008         	goto	u1951
  4201   001054  EF2E  F008         	goto	u1950
  4202   001058                     u1951:
  4203   001058  EF3E  F008         	goto	l2774
  4204   00105C                     u1950:
  4205   00105C  5017               	movf	___aomod@divisor^0,w,c
  4206   00105E  5E0F               	subwf	___aomod@dividend^0,f,c
  4207   001060  5018               	movf	(___aomod@divisor+1)^0,w,c
  4208   001062  5A10               	subwfb	(___aomod@dividend+1)^0,f,c
  4209   001064  5019               	movf	(___aomod@divisor+2)^0,w,c
  4210   001066  5A11               	subwfb	(___aomod@dividend+2)^0,f,c
  4211   001068  501A               	movf	(___aomod@divisor+3)^0,w,c
  4212   00106A  5A12               	subwfb	(___aomod@dividend+3)^0,f,c
  4213   00106C  501B               	movf	(___aomod@divisor+4)^0,w,c
  4214   00106E  5A13               	subwfb	(___aomod@dividend+4)^0,f,c
  4215   001070  501C               	movf	(___aomod@divisor+5)^0,w,c
  4216   001072  5A14               	subwfb	(___aomod@dividend+5)^0,f,c
  4217   001074  501D               	movf	(___aomod@divisor+6)^0,w,c
  4218   001076  5A15               	subwfb	(___aomod@dividend+6)^0,f,c
  4219   001078  501E               	movf	(___aomod@divisor+7)^0,w,c
  4220   00107A  5A16               	subwfb	(___aomod@dividend+7)^0,f,c
  4221   00107C                     l2774:
  4222   00107C  90D8               	bcf	status,0,c
  4223   00107E  321E               	rrcf	(___aomod@divisor+7)^0,f,c
  4224   001080  321D               	rrcf	(___aomod@divisor+6)^0,f,c
  4225   001082  321C               	rrcf	(___aomod@divisor+5)^0,f,c
  4226   001084  321B               	rrcf	(___aomod@divisor+4)^0,f,c
  4227   001086  321A               	rrcf	(___aomod@divisor+3)^0,f,c
  4228   001088  3219               	rrcf	(___aomod@divisor+2)^0,f,c
  4229   00108A  3218               	rrcf	(___aomod@divisor+1)^0,f,c
  4230   00108C  3217               	rrcf	___aomod@divisor^0,f,c
  4231   00108E  2E1F               	decfsz	___aomod@counter^0,f,c
  4232   001090  EF17  F008         	goto	l2770
  4233   001094                     l2778:
  4234   001094  5020               	movf	___aomod@sign^0,w,c
  4235   001096  B4D8               	btfsc	status,2,c
  4236   001098  EF50  F008         	goto	u1961
  4237   00109C  EF52  F008         	goto	u1960
  4238   0010A0                     u1961:
  4239   0010A0  EF62  F008         	goto	l2782
  4240   0010A4                     u1960:
  4241   0010A4  1E16               	comf	(___aomod@dividend+7)^0,f,c
  4242   0010A6  1E15               	comf	(___aomod@dividend+6)^0,f,c
  4243   0010A8  1E14               	comf	(___aomod@dividend+5)^0,f,c
  4244   0010AA  1E13               	comf	(___aomod@dividend+4)^0,f,c
  4245   0010AC  1E12               	comf	(___aomod@dividend+3)^0,f,c
  4246   0010AE  1E11               	comf	(___aomod@dividend+2)^0,f,c
  4247   0010B0  1E10               	comf	(___aomod@dividend+1)^0,f,c
  4248   0010B2  6C0F               	negf	___aomod@dividend^0,c
  4249   0010B4  0E00               	movlw	0
  4250   0010B6  2210               	addwfc	(___aomod@dividend+1)^0,f,c
  4251   0010B8  2211               	addwfc	(___aomod@dividend+2)^0,f,c
  4252   0010BA  2212               	addwfc	(___aomod@dividend+3)^0,f,c
  4253   0010BC  2213               	addwfc	(___aomod@dividend+4)^0,f,c
  4254   0010BE  2214               	addwfc	(___aomod@dividend+5)^0,f,c
  4255   0010C0  2215               	addwfc	(___aomod@dividend+6)^0,f,c
  4256   0010C2  2216               	addwfc	(___aomod@dividend+7)^0,f,c
  4257   0010C4                     l2782:
  4258   0010C4  C00F  F00F         	movff	___aomod@dividend,?___aomod
  4259   0010C8  C010  F010         	movff	___aomod@dividend+1,?___aomod+1
  4260   0010CC  C011  F011         	movff	___aomod@dividend+2,?___aomod+2
  4261   0010D0  C012  F012         	movff	___aomod@dividend+3,?___aomod+3
  4262   0010D4  C013  F013         	movff	___aomod@dividend+4,?___aomod+4
  4263   0010D8  C014  F014         	movff	___aomod@dividend+5,?___aomod+5
  4264   0010DC  C015  F015         	movff	___aomod@dividend+6,?___aomod+6
  4265   0010E0  C016  F016         	movff	___aomod@dividend+7,?___aomod+7
  4266   0010E4  0012               	return		;funcret
  4267   0010E6                     __end_of___aomod:
  4268                           	callstack 0
  4269                           
  4270 ;; *************** function ___aodiv *****************
  4271 ;; Defined at:
  4272 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;  dividend        8   14[COMRAM] long long 
  4275 ;;  divisor         8   22[COMRAM] long long 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  quotient        8   32[COMRAM] long long 
  4278 ;;  sign            1   31[COMRAM] unsigned char 
  4279 ;;  counter         1   30[COMRAM] unsigned char 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  8   14[COMRAM] long long 
  4282 ;; Registers used:
  4283 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4289 ;;      Params:        16       0       0       0       0       0       0
  4290 ;;      Locals:        10       0       0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0
  4292 ;;      Totals:        26       0       0       0       0       0       0
  4293 ;;Total ram usage:       26 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 4
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_dtoa
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text12
  4304   000DFA                     __ptext12:
  4305                           	callstack 0
  4306   000DFA                     ___aodiv:
  4307                           	callstack 22
  4308   000DFA  0E00               	movlw	0
  4309   000DFC  6E20               	movwf	___aodiv@sign^0,c
  4310   000DFE  BE1E               	btfsc	(___aodiv@divisor+7)^0,7,c
  4311   000E00  EF06  F007         	goto	u1840
  4312   000E04  EF04  F007         	goto	u1841
  4313   000E08                     u1841:
  4314   000E08  EF18  F007         	goto	l2714
  4315   000E0C                     u1840:
  4316   000E0C  1E1E               	comf	(___aodiv@divisor+7)^0,f,c
  4317   000E0E  1E1D               	comf	(___aodiv@divisor+6)^0,f,c
  4318   000E10  1E1C               	comf	(___aodiv@divisor+5)^0,f,c
  4319   000E12  1E1B               	comf	(___aodiv@divisor+4)^0,f,c
  4320   000E14  1E1A               	comf	(___aodiv@divisor+3)^0,f,c
  4321   000E16  1E19               	comf	(___aodiv@divisor+2)^0,f,c
  4322   000E18  1E18               	comf	(___aodiv@divisor+1)^0,f,c
  4323   000E1A  6C17               	negf	___aodiv@divisor^0,c
  4324   000E1C  0E00               	movlw	0
  4325   000E1E  2218               	addwfc	(___aodiv@divisor+1)^0,f,c
  4326   000E20  2219               	addwfc	(___aodiv@divisor+2)^0,f,c
  4327   000E22  221A               	addwfc	(___aodiv@divisor+3)^0,f,c
  4328   000E24  221B               	addwfc	(___aodiv@divisor+4)^0,f,c
  4329   000E26  221C               	addwfc	(___aodiv@divisor+5)^0,f,c
  4330   000E28  221D               	addwfc	(___aodiv@divisor+6)^0,f,c
  4331   000E2A  221E               	addwfc	(___aodiv@divisor+7)^0,f,c
  4332   000E2C  0E01               	movlw	1
  4333   000E2E  6E20               	movwf	___aodiv@sign^0,c
  4334   000E30                     l2714:
  4335   000E30  BE16               	btfsc	(___aodiv@dividend+7)^0,7,c
  4336   000E32  EF1F  F007         	goto	u1850
  4337   000E36  EF1D  F007         	goto	u1851
  4338   000E3A                     u1851:
  4339   000E3A  EF31  F007         	goto	l2720
  4340   000E3E                     u1850:
  4341   000E3E  1E16               	comf	(___aodiv@dividend+7)^0,f,c
  4342   000E40  1E15               	comf	(___aodiv@dividend+6)^0,f,c
  4343   000E42  1E14               	comf	(___aodiv@dividend+5)^0,f,c
  4344   000E44  1E13               	comf	(___aodiv@dividend+4)^0,f,c
  4345   000E46  1E12               	comf	(___aodiv@dividend+3)^0,f,c
  4346   000E48  1E11               	comf	(___aodiv@dividend+2)^0,f,c
  4347   000E4A  1E10               	comf	(___aodiv@dividend+1)^0,f,c
  4348   000E4C  6C0F               	negf	___aodiv@dividend^0,c
  4349   000E4E  0E00               	movlw	0
  4350   000E50  2210               	addwfc	(___aodiv@dividend+1)^0,f,c
  4351   000E52  2211               	addwfc	(___aodiv@dividend+2)^0,f,c
  4352   000E54  2212               	addwfc	(___aodiv@dividend+3)^0,f,c
  4353   000E56  2213               	addwfc	(___aodiv@dividend+4)^0,f,c
  4354   000E58  2214               	addwfc	(___aodiv@dividend+5)^0,f,c
  4355   000E5A  2215               	addwfc	(___aodiv@dividend+6)^0,f,c
  4356   000E5C  2216               	addwfc	(___aodiv@dividend+7)^0,f,c
  4357   000E5E  0E01               	movlw	1
  4358   000E60  1A20               	xorwf	___aodiv@sign^0,f,c
  4359   000E62                     l2720:
  4360   000E62  EE20  F021         	lfsr	2,___aodiv@quotient
  4361   000E66  0E07               	movlw	7
  4362   000E68                     u1861:
  4363   000E68  6ADE               	clrf	postinc2,c
  4364   000E6A  06E8               	decf	wreg,f,c
  4365   000E6C  E2FD               	bc	u1861
  4366   000E6E  5017               	movf	___aodiv@divisor^0,w,c
  4367   000E70  1018               	iorwf	(___aodiv@divisor+1)^0,w,c
  4368   000E72  1019               	iorwf	(___aodiv@divisor+2)^0,w,c
  4369   000E74  101A               	iorwf	(___aodiv@divisor+3)^0,w,c
  4370   000E76  101B               	iorwf	(___aodiv@divisor+4)^0,w,c
  4371   000E78  101C               	iorwf	(___aodiv@divisor+5)^0,w,c
  4372   000E7A  101D               	iorwf	(___aodiv@divisor+6)^0,w,c
  4373   000E7C  101E               	iorwf	(___aodiv@divisor+7)^0,w,c
  4374   000E7E  B4D8               	btfsc	status,2,c
  4375   000E80  EF44  F007         	goto	u1871
  4376   000E84  EF46  F007         	goto	u1870
  4377   000E88                     u1871:
  4378   000E88  EF98  F007         	goto	l2742
  4379   000E8C                     u1870:
  4380   000E8C  0E01               	movlw	1
  4381   000E8E  6E1F               	movwf	___aodiv@counter^0,c
  4382   000E90  EF54  F007         	goto	l2728
  4383   000E94                     l2726:
  4384   000E94  90D8               	bcf	status,0,c
  4385   000E96  3617               	rlcf	___aodiv@divisor^0,f,c
  4386   000E98  3618               	rlcf	(___aodiv@divisor+1)^0,f,c
  4387   000E9A  3619               	rlcf	(___aodiv@divisor+2)^0,f,c
  4388   000E9C  361A               	rlcf	(___aodiv@divisor+3)^0,f,c
  4389   000E9E  361B               	rlcf	(___aodiv@divisor+4)^0,f,c
  4390   000EA0  361C               	rlcf	(___aodiv@divisor+5)^0,f,c
  4391   000EA2  361D               	rlcf	(___aodiv@divisor+6)^0,f,c
  4392   000EA4  361E               	rlcf	(___aodiv@divisor+7)^0,f,c
  4393   000EA6  2A1F               	incf	___aodiv@counter^0,f,c
  4394   000EA8                     l2728:
  4395   000EA8  AE1E               	btfss	(___aodiv@divisor+7)^0,7,c
  4396   000EAA  EF59  F007         	goto	u1881
  4397   000EAE  EF5B  F007         	goto	u1880
  4398   000EB2                     u1881:
  4399   000EB2  EF4A  F007         	goto	l2726
  4400   000EB6                     u1880:
  4401   000EB6                     l2730:
  4402   000EB6  90D8               	bcf	status,0,c
  4403   000EB8  3621               	rlcf	___aodiv@quotient^0,f,c
  4404   000EBA  3622               	rlcf	(___aodiv@quotient+1)^0,f,c
  4405   000EBC  3623               	rlcf	(___aodiv@quotient+2)^0,f,c
  4406   000EBE  3624               	rlcf	(___aodiv@quotient+3)^0,f,c
  4407   000EC0  3625               	rlcf	(___aodiv@quotient+4)^0,f,c
  4408   000EC2  3626               	rlcf	(___aodiv@quotient+5)^0,f,c
  4409   000EC4  3627               	rlcf	(___aodiv@quotient+6)^0,f,c
  4410   000EC6  3628               	rlcf	(___aodiv@quotient+7)^0,f,c
  4411   000EC8  5017               	movf	___aodiv@divisor^0,w,c
  4412   000ECA  5C0F               	subwf	___aodiv@dividend^0,w,c
  4413   000ECC  5018               	movf	(___aodiv@divisor+1)^0,w,c
  4414   000ECE  5810               	subwfb	(___aodiv@dividend+1)^0,w,c
  4415   000ED0  5019               	movf	(___aodiv@divisor+2)^0,w,c
  4416   000ED2  5811               	subwfb	(___aodiv@dividend+2)^0,w,c
  4417   000ED4  501A               	movf	(___aodiv@divisor+3)^0,w,c
  4418   000ED6  5812               	subwfb	(___aodiv@dividend+3)^0,w,c
  4419   000ED8  501B               	movf	(___aodiv@divisor+4)^0,w,c
  4420   000EDA  5813               	subwfb	(___aodiv@dividend+4)^0,w,c
  4421   000EDC  501C               	movf	(___aodiv@divisor+5)^0,w,c
  4422   000EDE  5814               	subwfb	(___aodiv@dividend+5)^0,w,c
  4423   000EE0  501D               	movf	(___aodiv@divisor+6)^0,w,c
  4424   000EE2  5815               	subwfb	(___aodiv@dividend+6)^0,w,c
  4425   000EE4  501E               	movf	(___aodiv@divisor+7)^0,w,c
  4426   000EE6  5816               	subwfb	(___aodiv@dividend+7)^0,w,c
  4427   000EE8  A0D8               	btfss	status,0,c
  4428   000EEA  EF79  F007         	goto	u1891
  4429   000EEE  EF7B  F007         	goto	u1890
  4430   000EF2                     u1891:
  4431   000EF2  EF8C  F007         	goto	l2738
  4432   000EF6                     u1890:
  4433   000EF6  5017               	movf	___aodiv@divisor^0,w,c
  4434   000EF8  5E0F               	subwf	___aodiv@dividend^0,f,c
  4435   000EFA  5018               	movf	(___aodiv@divisor+1)^0,w,c
  4436   000EFC  5A10               	subwfb	(___aodiv@dividend+1)^0,f,c
  4437   000EFE  5019               	movf	(___aodiv@divisor+2)^0,w,c
  4438   000F00  5A11               	subwfb	(___aodiv@dividend+2)^0,f,c
  4439   000F02  501A               	movf	(___aodiv@divisor+3)^0,w,c
  4440   000F04  5A12               	subwfb	(___aodiv@dividend+3)^0,f,c
  4441   000F06  501B               	movf	(___aodiv@divisor+4)^0,w,c
  4442   000F08  5A13               	subwfb	(___aodiv@dividend+4)^0,f,c
  4443   000F0A  501C               	movf	(___aodiv@divisor+5)^0,w,c
  4444   000F0C  5A14               	subwfb	(___aodiv@dividend+5)^0,f,c
  4445   000F0E  501D               	movf	(___aodiv@divisor+6)^0,w,c
  4446   000F10  5A15               	subwfb	(___aodiv@dividend+6)^0,f,c
  4447   000F12  501E               	movf	(___aodiv@divisor+7)^0,w,c
  4448   000F14  5A16               	subwfb	(___aodiv@dividend+7)^0,f,c
  4449   000F16  8021               	bsf	___aodiv@quotient^0,0,c
  4450   000F18                     l2738:
  4451   000F18  90D8               	bcf	status,0,c
  4452   000F1A  321E               	rrcf	(___aodiv@divisor+7)^0,f,c
  4453   000F1C  321D               	rrcf	(___aodiv@divisor+6)^0,f,c
  4454   000F1E  321C               	rrcf	(___aodiv@divisor+5)^0,f,c
  4455   000F20  321B               	rrcf	(___aodiv@divisor+4)^0,f,c
  4456   000F22  321A               	rrcf	(___aodiv@divisor+3)^0,f,c
  4457   000F24  3219               	rrcf	(___aodiv@divisor+2)^0,f,c
  4458   000F26  3218               	rrcf	(___aodiv@divisor+1)^0,f,c
  4459   000F28  3217               	rrcf	___aodiv@divisor^0,f,c
  4460   000F2A  2E1F               	decfsz	___aodiv@counter^0,f,c
  4461   000F2C  EF5B  F007         	goto	l2730
  4462   000F30                     l2742:
  4463   000F30  5020               	movf	___aodiv@sign^0,w,c
  4464   000F32  B4D8               	btfsc	status,2,c
  4465   000F34  EF9E  F007         	goto	u1901
  4466   000F38  EFA0  F007         	goto	u1900
  4467   000F3C                     u1901:
  4468   000F3C  EFB0  F007         	goto	l2746
  4469   000F40                     u1900:
  4470   000F40  1E28               	comf	(___aodiv@quotient+7)^0,f,c
  4471   000F42  1E27               	comf	(___aodiv@quotient+6)^0,f,c
  4472   000F44  1E26               	comf	(___aodiv@quotient+5)^0,f,c
  4473   000F46  1E25               	comf	(___aodiv@quotient+4)^0,f,c
  4474   000F48  1E24               	comf	(___aodiv@quotient+3)^0,f,c
  4475   000F4A  1E23               	comf	(___aodiv@quotient+2)^0,f,c
  4476   000F4C  1E22               	comf	(___aodiv@quotient+1)^0,f,c
  4477   000F4E  6C21               	negf	___aodiv@quotient^0,c
  4478   000F50  0E00               	movlw	0
  4479   000F52  2222               	addwfc	(___aodiv@quotient+1)^0,f,c
  4480   000F54  2223               	addwfc	(___aodiv@quotient+2)^0,f,c
  4481   000F56  2224               	addwfc	(___aodiv@quotient+3)^0,f,c
  4482   000F58  2225               	addwfc	(___aodiv@quotient+4)^0,f,c
  4483   000F5A  2226               	addwfc	(___aodiv@quotient+5)^0,f,c
  4484   000F5C  2227               	addwfc	(___aodiv@quotient+6)^0,f,c
  4485   000F5E  2228               	addwfc	(___aodiv@quotient+7)^0,f,c
  4486   000F60                     l2746:
  4487   000F60  C021  F00F         	movff	___aodiv@quotient,?___aodiv
  4488   000F64  C022  F010         	movff	___aodiv@quotient+1,?___aodiv+1
  4489   000F68  C023  F011         	movff	___aodiv@quotient+2,?___aodiv+2
  4490   000F6C  C024  F012         	movff	___aodiv@quotient+3,?___aodiv+3
  4491   000F70  C025  F013         	movff	___aodiv@quotient+4,?___aodiv+4
  4492   000F74  C026  F014         	movff	___aodiv@quotient+5,?___aodiv+5
  4493   000F78  C027  F015         	movff	___aodiv@quotient+6,?___aodiv+6
  4494   000F7C  C028  F016         	movff	___aodiv@quotient+7,?___aodiv+7
  4495   000F80  0012               	return		;funcret
  4496   000F82                     __end_of___aodiv:
  4497                           	callstack 0
  4498                           
  4499 ;; *************** function _ctoa *****************
  4500 ;; Defined at:
  4501 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  4504 ;;		 -> NULL(0), 
  4505 ;;  c               1   27[COMRAM] unsigned char 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  w               2   31[COMRAM] int 
  4508 ;;  l               2   29[COMRAM] int 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4518 ;;      Params:         3       0       0       0       0       0       0
  4519 ;;      Locals:         4       0       0       0       0       0       0
  4520 ;;      Temps:          1       0       0       0       0       0       0
  4521 ;;      Totals:         8       0       0       0       0       0       0
  4522 ;;Total ram usage:        8 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 7
  4525 ;; This function calls:
  4526 ;;		_fputc
  4527 ;; This function is called by:
  4528 ;;		_vfpfcnvrt
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           	psect	text13
  4533   0013B2                     __ptext13:
  4534                           	callstack 0
  4535   0013B2                     _ctoa:
  4536                           	callstack 20
  4537   0013B2                     
  4538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  4539   0013B2  5044               	movf	_width^0,w,c
  4540   0013B4  1045               	iorwf	(_width+1)^0,w,c
  4541   0013B6  A4D8               	btfss	status,2,c
  4542   0013B8  EFE0  F009         	goto	u2071
  4543   0013BC  EFE2  F009         	goto	u2070
  4544   0013C0                     u2071:
  4545   0013C0  EFE8  F009         	goto	l2846
  4546   0013C4                     u2070:
  4547   0013C4  C044  F020         	movff	_width,ctoa@w
  4548   0013C8  C045  F021         	movff	_width+1,ctoa@w+1
  4549   0013CC  EFEE  F009         	goto	l1060
  4550   0013D0                     l2846:
  4551   0013D0  0EFF               	movlw	255
  4552   0013D2  2444               	addwf	_width^0,w,c
  4553   0013D4  6E20               	movwf	ctoa@w^0,c
  4554   0013D6  0EFF               	movlw	255
  4555   0013D8  2045               	addwfc	(_width+1)^0,w,c
  4556   0013DA  6E21               	movwf	(ctoa@w+1)^0,c
  4557   0013DC                     l1060:
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  4560   0013DC  BE21               	btfsc	(ctoa@w+1)^0,7,c
  4561   0013DE  EFF3  F009         	goto	u2081
  4562   0013E2  EFF5  F009         	goto	u2080
  4563   0013E6                     u2081:
  4564   0013E6  EFF7  F009         	goto	l2850
  4565   0013EA                     u2080:
  4566   0013EA  EFFB  F009         	goto	l1064
  4567   0013EE                     l2850:
  4568   0013EE  0E00               	movlw	0
  4569   0013F0  6E21               	movwf	(ctoa@w+1)^0,c
  4570   0013F2  0E00               	movlw	0
  4571   0013F4  6E20               	movwf	ctoa@w^0,c
  4572   0013F6                     l1064:
  4573                           
  4574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  4575   0013F6  0E00               	movlw	0
  4576   0013F8  6E1F               	movwf	(ctoa@l+1)^0,c
  4577   0013FA  0E00               	movlw	0
  4578   0013FC  6E1E               	movwf	ctoa@l^0,c
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4581   0013FE  EF0D  F00A         	goto	l2856
  4582   001402                     l2852:
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  4585   001402  0E00               	movlw	0
  4586   001404  6E12               	movwf	(fputc@c+1)^0,c
  4587   001406  0E20               	movlw	32
  4588   001408  6E11               	movwf	fputc@c^0,c
  4589   00140A  C01A  F013         	movff	ctoa@fp,fputc@fp
  4590   00140E  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  4591   001412  EC26  F00A         	call	_fputc	;wreg free
  4592   001416                     
  4593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  4594   001416  4A1E               	infsnz	ctoa@l^0,f,c
  4595   001418  2A1F               	incf	(ctoa@l+1)^0,f,c
  4596   00141A                     l2856:
  4597                           
  4598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4599   00141A  5020               	movf	ctoa@w^0,w,c
  4600   00141C  5C1E               	subwf	ctoa@l^0,w,c
  4601   00141E  501F               	movf	(ctoa@l+1)^0,w,c
  4602   001420  0A80               	xorlw	128
  4603   001422  6E1D               	movwf	??_ctoa^0,c
  4604   001424  5021               	movf	(ctoa@w+1)^0,w,c
  4605   001426  0A80               	xorlw	128
  4606   001428  581D               	subwfb	??_ctoa^0,w,c
  4607   00142A  A0D8               	btfss	status,0,c
  4608   00142C  EF1A  F00A         	goto	u2091
  4609   001430  EF1C  F00A         	goto	u2090
  4610   001434                     u2091:
  4611   001434  EF01  F00A         	goto	l2852
  4612   001438                     u2090:
  4613   001438                     
  4614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  4615   001438  C01C  F011         	movff	ctoa@c,fputc@c
  4616   00143C  6A12               	clrf	(fputc@c+1)^0,c
  4617   00143E  C01A  F013         	movff	ctoa@fp,fputc@fp
  4618   001442  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  4619   001446  EC26  F00A         	call	_fputc	;wreg free
  4620   00144A  0012               	return		;funcret
  4621   00144C                     __end_of_ctoa:
  4622                           	callstack 0
  4623                           
  4624 ;; *************** function _fputc *****************
  4625 ;; Defined at:
  4626 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  c               2   16[COMRAM] int 
  4629 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4630 ;;		 -> NULL(0), 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2   16[COMRAM] int 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4642 ;;      Params:         4       0       0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0
  4644 ;;      Temps:          5       0       0       0       0       0       0
  4645 ;;      Totals:         9       0       0       0       0       0       0
  4646 ;;Total ram usage:        9 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 6
  4649 ;; This function calls:
  4650 ;;		_putch
  4651 ;; This function is called by:
  4652 ;;		_pad
  4653 ;;		_ctoa
  4654 ;;		_vfpfcnvrt
  4655 ;;		_fputs
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text14
  4660   00144C                     __ptext14:
  4661                           	callstack 0
  4662   00144C                     _fputc:
  4663                           	callstack 18
  4664   00144C  5013               	movf	fputc@fp^0,w,c
  4665   00144E  1014               	iorwf	(fputc@fp+1)^0,w,c
  4666   001450  B4D8               	btfsc	status,2,c
  4667   001452  EF2D  F00A         	goto	u1791
  4668   001456  EF2F  F00A         	goto	u1790
  4669   00145A                     u1791:
  4670   00145A  EF38  F00A         	goto	l2688
  4671   00145E                     u1790:
  4672   00145E  5013               	movf	fputc@fp^0,w,c
  4673   001460  1014               	iorwf	(fputc@fp+1)^0,w,c
  4674   001462  A4D8               	btfss	status,2,c
  4675   001464  EF36  F00A         	goto	u1801
  4676   001468  EF38  F00A         	goto	u1800
  4677   00146C                     u1801:
  4678   00146C  EF3D  F00A         	goto	l2690
  4679   001470                     u1800:
  4680   001470                     l2688:
  4681   001470  5011               	movf	fputc@c^0,w,c
  4682   001472  EC63  F00C         	call	_putch
  4683   001476  EF70  F00A         	goto	l1138
  4684   00147A                     l2690:
  4685   00147A  EE20 F009          	lfsr	2,9
  4686   00147E  5013               	movf	fputc@fp^0,w,c
  4687   001480  26D9               	addwf	fsr2l,f,c
  4688   001482  5014               	movf	(fputc@fp+1)^0,w,c
  4689   001484  22DA               	addwfc	fsr2h,f,c
  4690   001486  50DE               	movf	postinc2,w,c
  4691   001488  10DE               	iorwf	postinc2,w,c
  4692   00148A  B4D8               	btfsc	status,2,c
  4693   00148C  EF4A  F00A         	goto	u1811
  4694   001490  EF4C  F00A         	goto	u1810
  4695   001494                     u1811:
  4696   001494  EF67  F00A         	goto	l2694
  4697   001498                     u1810:
  4698   001498  EE20 F009          	lfsr	2,9
  4699   00149C  5013               	movf	fputc@fp^0,w,c
  4700   00149E  26D9               	addwf	fsr2l,f,c
  4701   0014A0  5014               	movf	(fputc@fp+1)^0,w,c
  4702   0014A2  22DA               	addwfc	fsr2h,f,c
  4703   0014A4  EE10 F003          	lfsr	1,3
  4704   0014A8  5013               	movf	fputc@fp^0,w,c
  4705   0014AA  26E1               	addwf	fsr1l,f,c
  4706   0014AC  5014               	movf	(fputc@fp+1)^0,w,c
  4707   0014AE  22E2               	addwfc	fsr1h,f,c
  4708   0014B0  50DE               	movf	postinc2,w,c
  4709   0014B2  5CE6               	subwf	postinc1,w,c
  4710   0014B4  50E6               	movf	postinc1,w,c
  4711   0014B6  0A80               	xorlw	128
  4712   0014B8  6E19               	movwf	(??_fputc+4)^0,c
  4713   0014BA  50DE               	movf	postinc2,w,c
  4714   0014BC  0A80               	xorlw	128
  4715   0014BE  5819               	subwfb	(??_fputc+4)^0,w,c
  4716   0014C0  B0D8               	btfsc	status,0,c
  4717   0014C2  EF65  F00A         	goto	u1821
  4718   0014C6  EF67  F00A         	goto	u1820
  4719   0014CA                     u1821:
  4720   0014CA  EF70  F00A         	goto	l1138
  4721   0014CE                     u1820:
  4722   0014CE                     l2694:
  4723   0014CE  EE20 F003          	lfsr	2,3
  4724   0014D2  5013               	movf	fputc@fp^0,w,c
  4725   0014D4  26D9               	addwf	fsr2l,f,c
  4726   0014D6  5014               	movf	(fputc@fp+1)^0,w,c
  4727   0014D8  22DA               	addwfc	fsr2h,f,c
  4728   0014DA  2ADE               	incf	postinc2,f,c
  4729   0014DC  0E00               	movlw	0
  4730   0014DE  22DD               	addwfc	postdec2,f,c
  4731   0014E0                     l1138:
  4732   0014E0  0012               	return		;funcret
  4733   0014E2                     __end_of_fputc:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _putch *****************
  4737 ;; Defined at:
  4738 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  txData          1    wreg     unsigned char 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;  txData          1   15[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4752 ;;      Params:         0       0       0       0       0       0       0
  4753 ;;      Locals:         1       0       0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0
  4755 ;;      Totals:         1       0       0       0       0       0       0
  4756 ;;Total ram usage:        1 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 5
  4759 ;; This function calls:
  4760 ;;		_EUSART1_Write
  4761 ;; This function is called by:
  4762 ;;		_fputc
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text15
  4767   0018C6                     __ptext15:
  4768                           	callstack 0
  4769   0018C6                     _putch:
  4770                           	callstack 18
  4771                           
  4772                           ;incstack = 0
  4773                           ;putch@txData stored from wreg
  4774   0018C6  6E10               	movwf	putch@txData^0,c
  4775   0018C8                     
  4776                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4777   0018C8  5010               	movf	putch@txData^0,w,c
  4778   0018CA  EC43  F00C         	call	_EUSART1_Write
  4779   0018CE  0012               	return		;funcret
  4780   0018D0                     __end_of_putch:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _EUSART1_Write *****************
  4784 ;; Defined at:
  4785 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  txData          1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  txData          1   14[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4799 ;;      Params:         0       0       0       0       0       0       0
  4800 ;;      Locals:         1       0       0       0       0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0
  4802 ;;      Totals:         1       0       0       0       0       0       0
  4803 ;;Total ram usage:        1 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 4
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_putch
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text16
  4814   001886                     __ptext16:
  4815                           	callstack 0
  4816   001886                     _EUSART1_Write:
  4817                           	callstack 18
  4818                           
  4819                           ;incstack = 0
  4820                           ;EUSART1_Write@txData stored from wreg
  4821   001886  6E0F               	movwf	EUSART1_Write@txData^0,c
  4822   001888                     l182:
  4823                           
  4824                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4825   001888  A89E               	btfss	158,4,c	;volatile
  4826   00188A  EF49  F00C         	goto	u1781
  4827   00188E  EF4B  F00C         	goto	u1780
  4828   001892                     u1781:
  4829   001892  EF44  F00C         	goto	l182
  4830   001896                     u1780:
  4831   001896                     
  4832                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4833   001896  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4834   00189A  0012               	return		;funcret
  4835   00189C                     __end_of_EUSART1_Write:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function ___wmul *****************
  4839 ;; Defined at:
  4840 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  multiplier      2   14[COMRAM] unsigned int 
  4843 ;;  multiplicand    2   16[COMRAM] unsigned int 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  product         2   18[COMRAM] unsigned int 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  2   14[COMRAM] unsigned int 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, prodl, prodh
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         4       0       0       0       0       0       0
  4856 ;;      Locals:         2       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0
  4858 ;;      Totals:         6       0       0       0       0       0       0
  4859 ;;Total ram usage:        6 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 4
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_main
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text17
  4870   00180C                     __ptext17:
  4871                           	callstack 0
  4872   00180C                     ___wmul:
  4873                           	callstack 26
  4874   00180C  500F               	movf	___wmul@multiplier^0,w,c
  4875   00180E  0211               	mulwf	___wmul@multiplicand^0,c
  4876   001810  CFF3 F013          	movff	prodl,___wmul@product
  4877   001814  CFF4 F014          	movff	prodh,___wmul@product+1
  4878   001818  500F               	movf	___wmul@multiplier^0,w,c
  4879   00181A  0212               	mulwf	(___wmul@multiplicand+1)^0,c
  4880   00181C  50F3               	movf	243,w,c
  4881   00181E  2614               	addwf	(___wmul@product+1)^0,f,c
  4882   001820  5010               	movf	(___wmul@multiplier+1)^0,w,c
  4883   001822  0211               	mulwf	___wmul@multiplicand^0,c
  4884   001824  50F3               	movf	243,w,c
  4885   001826  2614               	addwf	(___wmul@product+1)^0,f,c
  4886   001828  C013  F00F         	movff	___wmul@product,?___wmul
  4887   00182C  C014  F010         	movff	___wmul@product+1,?___wmul+1
  4888   001830  0012               	return		;funcret
  4889   001832                     __end_of___wmul:
  4890                           	callstack 0
  4891                           
  4892 ;; *************** function ___aldiv *****************
  4893 ;; Defined at:
  4894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;  dividend        4   14[COMRAM] long 
  4897 ;;  divisor         4   18[COMRAM] long 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;  quotient        4   24[COMRAM] long 
  4900 ;;  sign            1   23[COMRAM] unsigned char 
  4901 ;;  counter         1   22[COMRAM] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  4   14[COMRAM] long 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4911 ;;      Params:         8       0       0       0       0       0       0
  4912 ;;      Locals:         6       0       0       0       0       0       0
  4913 ;;      Temps:          0       0       0       0       0       0       0
  4914 ;;      Totals:        14       0       0       0       0       0       0
  4915 ;;Total ram usage:       14 bytes
  4916 ;; Hardware stack levels used: 1
  4917 ;; Hardware stack levels required when called: 4
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_main
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text18
  4926   0010E6                     __ptext18:
  4927                           	callstack 0
  4928   0010E6                     ___aldiv:
  4929                           	callstack 26
  4930   0010E6  0E00               	movlw	0
  4931   0010E8  6E18               	movwf	___aldiv@sign^0,c
  4932   0010EA  BE16               	btfsc	(___aldiv@divisor+3)^0,7,c
  4933   0010EC  EF7C  F008         	goto	u1510
  4934   0010F0  EF7A  F008         	goto	u1511
  4935   0010F4                     u1511:
  4936   0010F4  EF86  F008         	goto	l2408
  4937   0010F8                     u1510:
  4938   0010F8  1E16               	comf	(___aldiv@divisor+3)^0,f,c
  4939   0010FA  1E15               	comf	(___aldiv@divisor+2)^0,f,c
  4940   0010FC  1E14               	comf	(___aldiv@divisor+1)^0,f,c
  4941   0010FE  6C13               	negf	___aldiv@divisor^0,c
  4942   001100  0E00               	movlw	0
  4943   001102  2214               	addwfc	(___aldiv@divisor+1)^0,f,c
  4944   001104  2215               	addwfc	(___aldiv@divisor+2)^0,f,c
  4945   001106  2216               	addwfc	(___aldiv@divisor+3)^0,f,c
  4946   001108  0E01               	movlw	1
  4947   00110A  6E18               	movwf	___aldiv@sign^0,c
  4948   00110C                     l2408:
  4949   00110C  BE12               	btfsc	(___aldiv@dividend+3)^0,7,c
  4950   00110E  EF8D  F008         	goto	u1520
  4951   001112  EF8B  F008         	goto	u1521
  4952   001116                     u1521:
  4953   001116  EF97  F008         	goto	l2414
  4954   00111A                     u1520:
  4955   00111A  1E12               	comf	(___aldiv@dividend+3)^0,f,c
  4956   00111C  1E11               	comf	(___aldiv@dividend+2)^0,f,c
  4957   00111E  1E10               	comf	(___aldiv@dividend+1)^0,f,c
  4958   001120  6C0F               	negf	___aldiv@dividend^0,c
  4959   001122  0E00               	movlw	0
  4960   001124  2210               	addwfc	(___aldiv@dividend+1)^0,f,c
  4961   001126  2211               	addwfc	(___aldiv@dividend+2)^0,f,c
  4962   001128  2212               	addwfc	(___aldiv@dividend+3)^0,f,c
  4963   00112A  0E01               	movlw	1
  4964   00112C  1A18               	xorwf	___aldiv@sign^0,f,c
  4965   00112E                     l2414:
  4966   00112E  0E00               	movlw	0
  4967   001130  6E19               	movwf	___aldiv@quotient^0,c
  4968   001132  0E00               	movlw	0
  4969   001134  6E1A               	movwf	(___aldiv@quotient+1)^0,c
  4970   001136  0E00               	movlw	0
  4971   001138  6E1B               	movwf	(___aldiv@quotient+2)^0,c
  4972   00113A  0E00               	movlw	0
  4973   00113C  6E1C               	movwf	(___aldiv@quotient+3)^0,c
  4974   00113E  5013               	movf	___aldiv@divisor^0,w,c
  4975   001140  1014               	iorwf	(___aldiv@divisor+1)^0,w,c
  4976   001142  1015               	iorwf	(___aldiv@divisor+2)^0,w,c
  4977   001144  1016               	iorwf	(___aldiv@divisor+3)^0,w,c
  4978   001146  B4D8               	btfsc	status,2,c
  4979   001148  EFA8  F008         	goto	u1531
  4980   00114C  EFAA  F008         	goto	u1530
  4981   001150                     u1531:
  4982   001150  EFE0  F008         	goto	l2436
  4983   001154                     u1530:
  4984   001154  0E01               	movlw	1
  4985   001156  6E17               	movwf	___aldiv@counter^0,c
  4986   001158  EFB4  F008         	goto	l2422
  4987   00115C                     l2420:
  4988   00115C  90D8               	bcf	status,0,c
  4989   00115E  3613               	rlcf	___aldiv@divisor^0,f,c
  4990   001160  3614               	rlcf	(___aldiv@divisor+1)^0,f,c
  4991   001162  3615               	rlcf	(___aldiv@divisor+2)^0,f,c
  4992   001164  3616               	rlcf	(___aldiv@divisor+3)^0,f,c
  4993   001166  2A17               	incf	___aldiv@counter^0,f,c
  4994   001168                     l2422:
  4995   001168  AE16               	btfss	(___aldiv@divisor+3)^0,7,c
  4996   00116A  EFB9  F008         	goto	u1541
  4997   00116E  EFBB  F008         	goto	u1540
  4998   001172                     u1541:
  4999   001172  EFAE  F008         	goto	l2420
  5000   001176                     u1540:
  5001   001176                     l2424:
  5002   001176  90D8               	bcf	status,0,c
  5003   001178  3619               	rlcf	___aldiv@quotient^0,f,c
  5004   00117A  361A               	rlcf	(___aldiv@quotient+1)^0,f,c
  5005   00117C  361B               	rlcf	(___aldiv@quotient+2)^0,f,c
  5006   00117E  361C               	rlcf	(___aldiv@quotient+3)^0,f,c
  5007   001180  5013               	movf	___aldiv@divisor^0,w,c
  5008   001182  5C0F               	subwf	___aldiv@dividend^0,w,c
  5009   001184  5014               	movf	(___aldiv@divisor+1)^0,w,c
  5010   001186  5810               	subwfb	(___aldiv@dividend+1)^0,w,c
  5011   001188  5015               	movf	(___aldiv@divisor+2)^0,w,c
  5012   00118A  5811               	subwfb	(___aldiv@dividend+2)^0,w,c
  5013   00118C  5016               	movf	(___aldiv@divisor+3)^0,w,c
  5014   00118E  5812               	subwfb	(___aldiv@dividend+3)^0,w,c
  5015   001190  A0D8               	btfss	status,0,c
  5016   001192  EFCD  F008         	goto	u1551
  5017   001196  EFCF  F008         	goto	u1550
  5018   00119A                     u1551:
  5019   00119A  EFD8  F008         	goto	l2432
  5020   00119E                     u1550:
  5021   00119E  5013               	movf	___aldiv@divisor^0,w,c
  5022   0011A0  5E0F               	subwf	___aldiv@dividend^0,f,c
  5023   0011A2  5014               	movf	(___aldiv@divisor+1)^0,w,c
  5024   0011A4  5A10               	subwfb	(___aldiv@dividend+1)^0,f,c
  5025   0011A6  5015               	movf	(___aldiv@divisor+2)^0,w,c
  5026   0011A8  5A11               	subwfb	(___aldiv@dividend+2)^0,f,c
  5027   0011AA  5016               	movf	(___aldiv@divisor+3)^0,w,c
  5028   0011AC  5A12               	subwfb	(___aldiv@dividend+3)^0,f,c
  5029   0011AE  8019               	bsf	___aldiv@quotient^0,0,c
  5030   0011B0                     l2432:
  5031   0011B0  90D8               	bcf	status,0,c
  5032   0011B2  3216               	rrcf	(___aldiv@divisor+3)^0,f,c
  5033   0011B4  3215               	rrcf	(___aldiv@divisor+2)^0,f,c
  5034   0011B6  3214               	rrcf	(___aldiv@divisor+1)^0,f,c
  5035   0011B8  3213               	rrcf	___aldiv@divisor^0,f,c
  5036   0011BA  2E17               	decfsz	___aldiv@counter^0,f,c
  5037   0011BC  EFBB  F008         	goto	l2424
  5038   0011C0                     l2436:
  5039   0011C0  5018               	movf	___aldiv@sign^0,w,c
  5040   0011C2  B4D8               	btfsc	status,2,c
  5041   0011C4  EFE6  F008         	goto	u1561
  5042   0011C8  EFE8  F008         	goto	u1560
  5043   0011CC                     u1561:
  5044   0011CC  EFF0  F008         	goto	l2440
  5045   0011D0                     u1560:
  5046   0011D0  1E1C               	comf	(___aldiv@quotient+3)^0,f,c
  5047   0011D2  1E1B               	comf	(___aldiv@quotient+2)^0,f,c
  5048   0011D4  1E1A               	comf	(___aldiv@quotient+1)^0,f,c
  5049   0011D6  6C19               	negf	___aldiv@quotient^0,c
  5050   0011D8  0E00               	movlw	0
  5051   0011DA  221A               	addwfc	(___aldiv@quotient+1)^0,f,c
  5052   0011DC  221B               	addwfc	(___aldiv@quotient+2)^0,f,c
  5053   0011DE  221C               	addwfc	(___aldiv@quotient+3)^0,f,c
  5054   0011E0                     l2440:
  5055   0011E0  C019  F00F         	movff	___aldiv@quotient,?___aldiv
  5056   0011E4  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
  5057   0011E8  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
  5058   0011EC  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
  5059   0011F0  0012               	return		;funcret
  5060   0011F2                     __end_of___aldiv:
  5061                           	callstack 0
  5062                           
  5063 ;; *************** function _TMR0_WriteTimer *****************
  5064 ;; Defined at:
  5065 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  timerVal        2   14[COMRAM] unsigned short 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5079 ;;      Params:         2       0       0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0       0       0
  5082 ;;      Totals:         2       0       0       0       0       0       0
  5083 ;;Total ram usage:        2 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 4
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text19
  5094   0018D0                     __ptext19:
  5095                           	callstack 0
  5096   0018D0                     _TMR0_WriteTimer:
  5097                           	callstack 26
  5098   0018D0                     
  5099                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5100   0018D0  5010               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  5101   0018D2  6ED7               	movwf	215,c	;volatile
  5102   0018D4                     
  5103                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5104   0018D4  C00F  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  5105   0018D8  0012               	return		;funcret
  5106   0018DA                     __end_of_TMR0_WriteTimer:
  5107                           	callstack 0
  5108                           
  5109 ;; *************** function _SYSTEM_Initialize *****************
  5110 ;; Defined at:
  5111 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2, status,0, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5125 ;;      Params:         0       0       0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 6
  5132 ;; This function calls:
  5133 ;;		_ADC_Initialize
  5134 ;;		_EUSART1_Initialize
  5135 ;;		_INTERRUPT_Initialize
  5136 ;;		_OSCILLATOR_Initialize
  5137 ;;		_PIN_MANAGER_Initialize
  5138 ;;		_TMR0_Initialize
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text20
  5145   00186C                     __ptext20:
  5146                           	callstack 0
  5147   00186C                     _SYSTEM_Initialize:
  5148                           	callstack 24
  5149   00186C                     
  5150                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5151   00186C  EC86  F00C         	call	_INTERRUPT_Initialize	;wreg free
  5152   001870                     
  5153                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5154   001870  ECC9  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  5155   001874                     
  5156                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5157   001874  EC28  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  5158   001878                     
  5159                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  5160   001878  ECAE  F00B         	call	_TMR0_Initialize	;wreg free
  5161   00187C                     
  5162                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  5163   00187C  EC4E  F00C         	call	_ADC_Initialize	;wreg free
  5164   001880                     
  5165                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  5166   001880  EC73  F00B         	call	_EUSART1_Initialize	;wreg free
  5167   001884  0012               	return		;funcret
  5168   001886                     __end_of_SYSTEM_Initialize:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _TMR0_Initialize *****************
  5172 ;; Defined at:
  5173 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;		None
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;		None
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  1    wreg      void 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5187 ;;      Params:         0       0       0       0       0       0       0
  5188 ;;      Locals:         0       0       0       0       0       0       0
  5189 ;;      Temps:          2       0       0       0       0       0       0
  5190 ;;      Totals:         2       0       0       0       0       0       0
  5191 ;;Total ram usage:        2 bytes
  5192 ;; Hardware stack levels used: 1
  5193 ;; Hardware stack levels required when called: 5
  5194 ;; This function calls:
  5195 ;;		_TMR0_SetInterruptHandler
  5196 ;; This function is called by:
  5197 ;;		_SYSTEM_Initialize
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text21
  5202   00175C                     __ptext21:
  5203                           	callstack 0
  5204   00175C                     _TMR0_Initialize:
  5205                           	callstack 24
  5206   00175C                     
  5207                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5208   00175C  9CD5               	bcf	213,6,c	;volatile
  5209   00175E                     
  5210                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  5211   00175E  0E00               	movlw	0
  5212   001760  6ED7               	movwf	215,c	;volatile
  5213                           
  5214                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  5215   001762  0E00               	movlw	0
  5216   001764  6ED6               	movwf	214,c	;volatile
  5217   001766                     
  5218                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5219   001766  50D6               	movf	214,w,c	;volatile
  5220   001768  CFD7 F011          	movff	4055,??_TMR0_Initialize	;volatile
  5221   00176C  6A12               	clrf	(??_TMR0_Initialize+1)^0,c
  5222   00176E  C011  F012         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5223   001772  6A11               	clrf	??_TMR0_Initialize^0,c
  5224   001774  1011               	iorwf	??_TMR0_Initialize^0,w,c
  5225   001776  6E4A               	movwf	_timer0ReloadVal^0,c	;volatile
  5226   001778  5012               	movf	(??_TMR0_Initialize+1)^0,w,c
  5227   00177A  6E4B               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5228   00177C                     
  5229                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5230   00177C  94F2               	bcf	242,2,c	;volatile
  5231   00177E                     
  5232                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5233   00177E  8AF2               	bsf	242,5,c	;volatile
  5234   001780                     
  5235                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5236   001780  0E10               	movlw	low _TMR0_DefaultInterruptHandler
  5237   001782  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5238   001784  0E19               	movlw	high _TMR0_DefaultInterruptHandler
  5239   001786  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5240   001788  EC6D  F00C         	call	_TMR0_SetInterruptHandler	;wreg free
  5241   00178C                     
  5242                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  5243   00178C  0E9F               	movlw	159
  5244   00178E  6ED5               	movwf	213,c	;volatile
  5245   001790  0012               	return		;funcret
  5246   001792                     __end_of_TMR0_Initialize:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _TMR0_SetInterruptHandler *****************
  5250 ;; Defined at:
  5251 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  5254 ;;		 -> sampleTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      void 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5266 ;;      Params:         2       0       0       0       0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0
  5269 ;;      Totals:         2       0       0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; Hardware stack levels required when called: 4
  5273 ;; This function calls:
  5274 ;;		Nothing
  5275 ;; This function is called by:
  5276 ;;		_TMR0_Initialize
  5277 ;;		_main
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text22
  5282   0018DA                     __ptext22:
  5283                           	callstack 0
  5284   0018DA                     _TMR0_SetInterruptHandler:
  5285                           	callstack 26
  5286   0018DA                     
  5287                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5288   0018DA  C00F  F04C         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5289   0018DE  C010  F04D         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5290   0018E2  0012               	return		;funcret
  5291   0018E4                     __end_of_TMR0_SetInterruptHandler:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function _PIN_MANAGER_Initialize *****************
  5295 ;; Defined at:
  5296 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5310 ;;      Params:         0       0       0       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0
  5313 ;;      Totals:         0       0       0       0       0       0       0
  5314 ;;Total ram usage:        0 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 4
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_SYSTEM_Initialize
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text23
  5325   001792                     __ptext23:
  5326                           	callstack 0
  5327   001792                     _PIN_MANAGER_Initialize:
  5328                           	callstack 25
  5329   001792                     
  5330                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5331   001792  0E00               	movlw	0
  5332   001794  6E89               	movwf	137,c	;volatile
  5333                           
  5334                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5335   001796  0E00               	movlw	0
  5336   001798  6E8A               	movwf	138,c	;volatile
  5337                           
  5338                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5339   00179A  0E00               	movlw	0
  5340   00179C  6E8B               	movwf	139,c	;volatile
  5341   00179E                     
  5342                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5343   00179E  6892               	setf	146,c	;volatile
  5344   0017A0                     
  5345                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5346   0017A0  6893               	setf	147,c	;volatile
  5347                           
  5348                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5349   0017A2  0EBF               	movlw	191
  5350   0017A4  6E94               	movwf	148,c	;volatile
  5351                           
  5352                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5353   0017A6  0E3C               	movlw	60
  5354   0017A8  010F               	movlb	15	; () banked
  5355   0017AA  6F3A               	movwf	58,b	;volatile
  5356                           
  5357                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5358   0017AC  0E3F               	movlw	63
  5359   0017AE  6F39               	movwf	57,b	;volatile
  5360                           
  5361                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5362   0017B0  0E2F               	movlw	47
  5363   0017B2  6F38               	movwf	56,b	;volatile
  5364                           
  5365                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5366   0017B4  0E00               	movlw	0
  5367   0017B6  6E61               	movwf	97,c	;volatile
  5368   0017B8                     
  5369                           ; BSR set to: 15
  5370                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5371   0017B8  8EF1               	bsf	241,7,c	;volatile
  5372   0017BA                     
  5373                           ; BSR set to: 15
  5374   0017BA  0012               	return		;funcret
  5375   0017BC                     __end_of_PIN_MANAGER_Initialize:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _OSCILLATOR_Initialize *****************
  5379 ;; Defined at:
  5380 ;;		line 61 in file "mcc_generated_files/mcc.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5394 ;;      Params:         0       0       0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 4
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_SYSTEM_Initialize
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text24
  5409   001850                     __ptext24:
  5410                           	callstack 0
  5411   001850                     _OSCILLATOR_Initialize:
  5412                           	callstack 25
  5413   001850                     
  5414                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5415   001850  0E70               	movlw	112
  5416   001852  6ED3               	movwf	211,c	;volatile
  5417                           
  5418                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5419   001854  0E04               	movlw	4
  5420   001856  6ED2               	movwf	210,c	;volatile
  5421                           
  5422                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5423   001858  0E40               	movlw	64
  5424   00185A  6E9B               	movwf	155,c	;volatile
  5425   00185C                     l72:
  5426                           
  5427                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5428   00185C  AED2               	btfss	4050,7,c	;volatile
  5429   00185E  EF33  F00C         	goto	u1421
  5430   001862  EF35  F00C         	goto	u1420
  5431   001866                     u1421:
  5432   001866  EF2E  F00C         	goto	l72
  5433   00186A                     u1420:
  5434   00186A  0012               	return		;funcret
  5435   00186C                     __end_of_OSCILLATOR_Initialize:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _INTERRUPT_Initialize *****************
  5439 ;; Defined at:
  5440 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		None
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5454 ;;      Params:         0       0       0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 4
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_SYSTEM_Initialize
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text25
  5469   00190C                     __ptext25:
  5470                           	callstack 0
  5471   00190C                     _INTERRUPT_Initialize:
  5472                           	callstack 25
  5473   00190C                     
  5474                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5475   00190C  9ED0               	bcf	208,7,c	;volatile
  5476   00190E  0012               	return		;funcret
  5477   001910                     __end_of_INTERRUPT_Initialize:
  5478                           	callstack 0
  5479                           
  5480 ;; *************** function _EUSART1_Initialize *****************
  5481 ;; Defined at:
  5482 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5496 ;;      Params:         0       0       0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used: 1
  5502 ;; Hardware stack levels required when called: 5
  5503 ;; This function calls:
  5504 ;;		_EUSART1_SetErrorHandler
  5505 ;;		_EUSART1_SetFramingErrorHandler
  5506 ;;		_EUSART1_SetOverrunErrorHandler
  5507 ;; This function is called by:
  5508 ;;		_SYSTEM_Initialize
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text26
  5513   0016E6                     __ptext26:
  5514                           	callstack 0
  5515   0016E6                     _EUSART1_Initialize:
  5516                           	callstack 24
  5517   0016E6                     
  5518                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5519   0016E6  0E08               	movlw	8
  5520   0016E8  6EB8               	movwf	184,c	;volatile
  5521                           
  5522                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5523   0016EA  0E90               	movlw	144
  5524   0016EC  6EAB               	movwf	171,c	;volatile
  5525                           
  5526                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5527   0016EE  0E24               	movlw	36
  5528   0016F0  6EAC               	movwf	172,c	;volatile
  5529                           
  5530                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5531   0016F2  0E82               	movlw	130
  5532   0016F4  6EAF               	movwf	175,c	;volatile
  5533                           
  5534                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5535   0016F6  0E06               	movlw	6
  5536   0016F8  6EB0               	movwf	176,c	;volatile
  5537   0016FA                     
  5538                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5539   0016FA  0E00               	movlw	0
  5540   0016FC  6E0F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5541   0016FE  0E00               	movlw	0
  5542   001700  6E10               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5543   001702  EC77  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5544   001706                     
  5545                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5546   001706  0E00               	movlw	0
  5547   001708  6E0F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5548   00170A  0E00               	movlw	0
  5549   00170C  6E10               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5550   00170E  EC72  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5551   001712                     
  5552                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5553   001712  0E00               	movlw	0
  5554   001714  6E0F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5555   001716  0E00               	movlw	0
  5556   001718  6E10               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5557   00171A  EC7C  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  5558   00171E                     
  5559                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5560   00171E  0E00               	movlw	0
  5561   001720  6E50               	movwf	_eusart1RxLastError^0,c	;volatile
  5562   001722  0012               	return		;funcret
  5563   001724                     __end_of_EUSART1_Initialize:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5567 ;; Defined at:
  5568 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  5571 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;		None
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5583 ;;      Params:         2       0       0       0       0       0       0
  5584 ;;      Locals:         0       0       0       0       0       0       0
  5585 ;;      Temps:          0       0       0       0       0       0       0
  5586 ;;      Totals:         2       0       0       0       0       0       0
  5587 ;;Total ram usage:        2 bytes
  5588 ;; Hardware stack levels used: 1
  5589 ;; Hardware stack levels required when called: 4
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_EUSART1_Initialize
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           
  5597                           	psect	text27
  5598   0018E4                     __ptext27:
  5599                           	callstack 0
  5600   0018E4                     _EUSART1_SetOverrunErrorHandler:
  5601                           	callstack 24
  5602   0018E4                     
  5603                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5604   0018E4  C00F  F0AA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5605   0018E8  C010  F0AB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5606   0018EC  0012               	return		;funcret
  5607   0018EE                     __end_of_EUSART1_SetOverrunErrorHandler:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5611 ;; Defined at:
  5612 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  5615 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;		None
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      void 
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5627 ;;      Params:         2       0       0       0       0       0       0
  5628 ;;      Locals:         0       0       0       0       0       0       0
  5629 ;;      Temps:          0       0       0       0       0       0       0
  5630 ;;      Totals:         2       0       0       0       0       0       0
  5631 ;;Total ram usage:        2 bytes
  5632 ;; Hardware stack levels used: 1
  5633 ;; Hardware stack levels required when called: 4
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_EUSART1_Initialize
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text28
  5642   0018EE                     __ptext28:
  5643                           	callstack 0
  5644   0018EE                     _EUSART1_SetFramingErrorHandler:
  5645                           	callstack 24
  5646   0018EE                     
  5647                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5648   0018EE  C00F  F0AC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5649   0018F2  C010  F0AD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5650   0018F6  0012               	return		;funcret
  5651   0018F8                     __end_of_EUSART1_SetFramingErrorHandler:
  5652                           	callstack 0
  5653                           
  5654 ;; *************** function _EUSART1_SetErrorHandler *****************
  5655 ;; Defined at:
  5656 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  5659 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;		None
  5662 ;; Return value:  Size  Location     Type
  5663 ;;                  1    wreg      void 
  5664 ;; Registers used:
  5665 ;;		wreg, status,2, status,0
  5666 ;; Tracked objects:
  5667 ;;		On entry : 0/0
  5668 ;;		On exit  : 0/0
  5669 ;;		Unchanged: 0/0
  5670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5671 ;;      Params:         2       0       0       0       0       0       0
  5672 ;;      Locals:         0       0       0       0       0       0       0
  5673 ;;      Temps:          0       0       0       0       0       0       0
  5674 ;;      Totals:         2       0       0       0       0       0       0
  5675 ;;Total ram usage:        2 bytes
  5676 ;; Hardware stack levels used: 1
  5677 ;; Hardware stack levels required when called: 4
  5678 ;; This function calls:
  5679 ;;		Nothing
  5680 ;; This function is called by:
  5681 ;;		_EUSART1_Initialize
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text29
  5686   0018F8                     __ptext29:
  5687                           	callstack 0
  5688   0018F8                     _EUSART1_SetErrorHandler:
  5689                           	callstack 24
  5690   0018F8                     
  5691                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5692   0018F8  C00F  F0A8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5693   0018FC  C010  F0A9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5694   001900  0012               	return		;funcret
  5695   001902                     __end_of_EUSART1_SetErrorHandler:
  5696                           	callstack 0
  5697                           
  5698 ;; *************** function _ADC_Initialize *****************
  5699 ;; Defined at:
  5700 ;;		line 62 in file "mcc_generated_files/adc.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5714 ;;      Params:         0       0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; Hardware stack levels required when called: 4
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_SYSTEM_Initialize
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text30
  5729   00189C                     __ptext30:
  5730                           	callstack 0
  5731   00189C                     _ADC_Initialize:
  5732                           	callstack 25
  5733   00189C                     
  5734                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5735   00189C  0E00               	movlw	0
  5736   00189E  6EC1               	movwf	193,c	;volatile
  5737                           
  5738                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5739   0018A0  0E26               	movlw	38
  5740   0018A2  6EC0               	movwf	192,c	;volatile
  5741                           
  5742                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5743   0018A4  0E00               	movlw	0
  5744   0018A6  6EC3               	movwf	195,c	;volatile
  5745                           
  5746                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5747   0018A8  0E00               	movlw	0
  5748   0018AA  6EC4               	movwf	196,c	;volatile
  5749                           
  5750                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5751   0018AC  0E11               	movlw	17
  5752   0018AE  6EC2               	movwf	194,c	;volatile
  5753   0018B0  0012               	return		;funcret
  5754   0018B2                     __end_of_ADC_Initialize:
  5755                           	callstack 0
  5756                           
  5757 ;; *************** function _EUSART1_is_rx_ready *****************
  5758 ;; Defined at:
  5759 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5760 ;; Parameters:    Size  Location     Type
  5761 ;;		None
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;		None
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      _Bool 
  5766 ;; Registers used:
  5767 ;;		wreg
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5773 ;;      Params:         0       0       0       0       0       0       0
  5774 ;;      Locals:         0       0       0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0
  5776 ;;      Totals:         0       0       0       0       0       0       0
  5777 ;;Total ram usage:        0 bytes
  5778 ;; Hardware stack levels used: 1
  5779 ;; Hardware stack levels required when called: 4
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_main
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text31
  5788   0018B2                     __ptext31:
  5789                           	callstack 0
  5790   0018B2                     _EUSART1_is_rx_ready:
  5791                           	callstack 26
  5792   0018B2                     
  5793                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5794   0018B2  BA9E               	btfsc	158,5,c	;volatile
  5795   0018B4  EF5E  F00C         	goto	u1481
  5796   0018B8  EF61  F00C         	goto	u1480
  5797   0018BC                     u1481:
  5798   0018BC  0E01               	movlw	1
  5799   0018BE  EF62  F00C         	goto	u1486
  5800   0018C2                     u1480:
  5801   0018C2  0E00               	movlw	0
  5802   0018C4                     u1486:
  5803   0018C4  0012               	return		;funcret
  5804   0018C6                     __end_of_EUSART1_is_rx_ready:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function _EUSART1_Read *****************
  5808 ;; Defined at:
  5809 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      unsigned char 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5823 ;;      Params:         0       0       0       0       0       0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used: 1
  5829 ;; Hardware stack levels required when called: 4
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_main
  5834 ;;		_getch
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text32
  5839   0017E4                     __ptext32:
  5840                           	callstack 0
  5841   0017E4                     _EUSART1_Read:
  5842                           	callstack 26
  5843   0017E4                     l175:
  5844                           
  5845                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5846   0017E4  AA9E               	btfss	158,5,c	;volatile
  5847   0017E6  EFF7  F00B         	goto	u1491
  5848   0017EA  EFF9  F00B         	goto	u1490
  5849   0017EE                     u1491:
  5850   0017EE  EFF2  F00B         	goto	l175
  5851   0017F2                     u1490:
  5852   0017F2                     
  5853                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5854   0017F2  0E00               	movlw	0
  5855   0017F4  6E50               	movwf	_eusart1RxLastError^0,c	;volatile
  5856   0017F6                     
  5857                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5858   0017F6  A2AB               	btfss	171,1,c	;volatile
  5859   0017F8  EF00  F00C         	goto	u1501
  5860   0017FC  EF02  F00C         	goto	u1500
  5861   001800                     u1501:
  5862   001800  EF04  F00C         	goto	l2380
  5863   001804                     u1500:
  5864   001804                     
  5865                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5866   001804  98AB               	bcf	171,4,c	;volatile
  5867                           
  5868                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5869   001806  88AB               	bsf	171,4,c	;volatile
  5870   001808                     l2380:
  5871                           
  5872                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5873   001808  50AE               	movf	174,w,c	;volatile
  5874   00180A  0012               	return		;funcret
  5875   00180C                     __end_of_EUSART1_Read:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function _INTERRUPT_InterruptManager *****************
  5879 ;; Defined at:
  5880 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;		None
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;		None
  5885 ;; Return value:  Size  Location     Type
  5886 ;;                  1    wreg      void 
  5887 ;; Registers used:
  5888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5889 ;; Tracked objects:
  5890 ;;		On entry : 0/0
  5891 ;;		On exit  : 0/0
  5892 ;;		Unchanged: 0/0
  5893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5894 ;;      Params:         0       0       0       0       0       0       0
  5895 ;;      Locals:         0       0       0       0       0       0       0
  5896 ;;      Temps:          4       0       0       0       0       0       0
  5897 ;;      Totals:         4       0       0       0       0       0       0
  5898 ;;Total ram usage:        4 bytes
  5899 ;; Hardware stack levels used: 1
  5900 ;; Hardware stack levels required when called: 3
  5901 ;; This function calls:
  5902 ;;		_TMR0_ISR
  5903 ;; This function is called by:
  5904 ;;		Interrupt level 2
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	intcode
  5909   000008                     __pintcode:
  5910                           	callstack 0
  5911   000008                     _INTERRUPT_InterruptManager:
  5912                           	callstack 18
  5913                           
  5914                           ;incstack = 0
  5915   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5916   00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManager
  5917   00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5918   000012  CFD9 F00D          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5919   000016  CFDA F00E          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5920   00001A                     
  5921                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5922   00001A  AAF2               	btfss	242,5,c	;volatile
  5923   00001C  EF12  F000         	goto	i2u157_41
  5924   000020  EF14  F000         	goto	i2u157_40
  5925   000024                     i2u157_41:
  5926   000024  EF1D  F000         	goto	i2l16
  5927   000028                     i2u157_40:
  5928   000028  A4F2               	btfss	242,2,c	;volatile
  5929   00002A  EF19  F000         	goto	i2u158_41
  5930   00002E  EF1B  F000         	goto	i2u158_40
  5931   000032                     i2u158_41:
  5932   000032  EF1D  F000         	goto	i2l16
  5933   000036                     i2u158_40:
  5934   000036                     
  5935                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5936   000036  EC92  F00B         	call	_TMR0_ISR	;wreg free
  5937   00003A                     i2l16:
  5938   00003A  C00E  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5939   00003E  C00D  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5940   000042  C00C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5941   000046  C00B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5942   00004A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5943   00004C  0011               	retfie		f
  5944   00004E                     __end_of_INTERRUPT_InterruptManager:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function _TMR0_ISR *****************
  5948 ;; Defined at:
  5949 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5963 ;;      Params:         0       0       0       0       0       0       0
  5964 ;;      Locals:         0       0       0       0       0       0       0
  5965 ;;      Temps:          0       0       0       0       0       0       0
  5966 ;;      Totals:         0       0       0       0       0       0       0
  5967 ;;Total ram usage:        0 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; Hardware stack levels required when called: 2
  5970 ;; This function calls:
  5971 ;;		Absolute function
  5972 ;;		_TMR0_DefaultInterruptHandler
  5973 ;;		_sampleTMR0ISR
  5974 ;; This function is called by:
  5975 ;;		_INTERRUPT_InterruptManager
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text34
  5980   001724                     __ptext34:
  5981                           	callstack 0
  5982   001724                     _TMR0_ISR:
  5983                           	callstack 18
  5984   001724                     
  5985                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5986   001724  94F2               	bcf	242,2,c	;volatile
  5987   001726                     
  5988                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5989   001726  504B               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5990   001728  6ED7               	movwf	215,c	;volatile
  5991   00172A                     
  5992                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5993   00172A  C04A  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5994   00172E                     
  5995                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5996   00172E  504C               	movf	_TMR0_InterruptHandler^0,w,c
  5997   001730  104D               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5998   001732  B4D8               	btfsc	status,2,c
  5999   001734  EF9E  F00B         	goto	i2u146_41
  6000   001738  EFA0  F00B         	goto	i2u146_40
  6001   00173C                     i2u146_41:
  6002   00173C  EFAD  F00B         	goto	i2l249
  6003   001740                     i2u146_40:
  6004   001740                     
  6005                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  6006   001740  D802               	call	i2u147_48
  6007   001742  EFAD  F00B         	goto	i2u147_49
  6008   001746                     i2u147_48:
  6009   001746  0005               	push	
  6010   001748  6EFA               	movwf	pclath,c
  6011   00174A  504C               	movf	_TMR0_InterruptHandler^0,w,c
  6012   00174C  6EFD               	movwf	tosl,c
  6013   00174E  504D               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  6014   001750  6EFE               	movwf	tosh,c
  6015   001752  50F8               	movf	tblptru,w,c
  6016   001754  6EFF               	movwf	tosu,c
  6017   001756  50FA               	movf	pclath,w,c
  6018   001758  0012               	return		;indir
  6019   00175A                     i2u147_49:
  6020   00175A                     i2l249:
  6021   00175A  0012               	return		;funcret
  6022   00175C                     __end_of_TMR0_ISR:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6026 ;; Defined at:
  6027 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;		None
  6030 ;; Auto vars:     Size  Location     Type
  6031 ;;		None
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  1    wreg      void 
  6034 ;; Registers used:
  6035 ;;		None
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6041 ;;      Params:         0       0       0       0       0       0       0
  6042 ;;      Locals:         0       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0
  6044 ;;      Totals:         0       0       0       0       0       0       0
  6045 ;;Total ram usage:        0 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_TMR0_Initialize
  6051 ;;		_TMR0_ISR
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text35
  6056   001910                     __ptext35:
  6057                           	callstack 0
  6058   001910                     _TMR0_DefaultInterruptHandler:
  6059                           	callstack 19
  6060   001910  0012               	return		;funcret
  6061   001912                     __end_of_TMR0_DefaultInterruptHandler:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _sampleTMR0ISR *****************
  6065 ;; Defined at:
  6066 ;;		line 190 in file "main.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6080 ;;      Params:         0       0       0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 1
  6087 ;; This function calls:
  6088 ;;		_TMR0_ReadTimer
  6089 ;;		i2_TMR0_WriteTimer
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;;		_TMR0_ISR
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text36
  6097   00155C                     __ptext36:
  6098                           	callstack 0
  6099   00155C                     _sampleTMR0ISR:
  6100                           	callstack 18
  6101   00155C  8C89               	bsf	137,6,c	;volatile
  6102   00155E                     
  6103                           ;main.c: 194:     TMR0_WriteTimer(0x10000);
  6104   00155E  0E00               	movlw	0
  6105   001560  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6106   001562  0E00               	movlw	0
  6107   001564  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6108   001566  EC81  F00C         	call	i2_TMR0_WriteTimer	;wreg free
  6109   00156A                     
  6110                           ;main.c: 196:     static uint16_t si = 0;;main.c: 198:     ADCON0bits.GO_NOT_DONE = 1;
  6111   00156A  82C2               	bsf	194,1,c	;volatile
  6112   00156C                     
  6113                           ;main.c: 199:     if(sampling)
  6114   00156C  0100               	movlb	0	; () banked
  6115   00156E  51AF               	movf	_sampling& (0+255),w,b
  6116   001570  B4D8               	btfsc	status,2,c
  6117   001572  EFBD  F00A         	goto	i2u143_41
  6118   001576  EFBF  F00A         	goto	i2u143_40
  6119   00157A                     i2u143_41:
  6120   00157A  EFD6  F00A         	goto	i2l2332
  6121   00157E                     i2u143_40:
  6122   00157E                     
  6123                           ; BSR set to: 0
  6124                           ;main.c: 200:     {;main.c: 201:         samples[si] = ADRESH;
  6125   00157E  0E00               	movlw	low _samples
  6126   001580  2448               	addwf	sampleTMR0ISR@si^0,w,c
  6127   001582  6ED9               	movwf	fsr2l,c
  6128   001584  0E02               	movlw	high _samples
  6129   001586  2049               	addwfc	(sampleTMR0ISR@si+1)^0,w,c
  6130   001588  6EDA               	movwf	fsr2h,c
  6131   00158A  CFC4 FFDF          	movff	4036,indf2	;volatile
  6132   00158E                     
  6133                           ; BSR set to: 0
  6134                           ;main.c: 202:         si++;
  6135   00158E  4A48               	infsnz	sampleTMR0ISR@si^0,f,c
  6136   001590  2A49               	incf	(sampleTMR0ISR@si+1)^0,f,c
  6137   001592                     
  6138                           ; BSR set to: 0
  6139                           ;main.c: 203:         if(si == 256) {sampling == 0; si = 0;}
  6140   001592  0449               	decf	(sampleTMR0ISR@si+1)^0,w,c
  6141   001594  1048               	iorwf	sampleTMR0ISR@si^0,w,c
  6142   001596  A4D8               	btfss	status,2,c
  6143   001598  EFD0  F00A         	goto	i2u144_41
  6144   00159C  EFD2  F00A         	goto	i2u144_40
  6145   0015A0                     i2u144_41:
  6146   0015A0  EFD6  F00A         	goto	i2l2332
  6147   0015A4                     i2u144_40:
  6148   0015A4                     
  6149                           ; BSR set to: 0
  6150   0015A4  0E00               	movlw	0
  6151   0015A6  6E49               	movwf	(sampleTMR0ISR@si+1)^0,c
  6152   0015A8  0E00               	movlw	0
  6153   0015AA  6E48               	movwf	sampleTMR0ISR@si^0,c
  6154   0015AC                     i2l2332:
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;main.c: 206:     TMR0_WriteTimer(0x10000 - (1600 - TMR0_ReadTimer()));
  6158   0015AC  EC19  F00C         	call	_TMR0_ReadTimer	;wreg free
  6159   0015B0  0EC0               	movlw	192
  6160   0015B2  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  6161   0015B4  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6162   0015B6  0EF9               	movlw	249
  6163   0015B8  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  6164   0015BA  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6165   0015BC  EC81  F00C         	call	i2_TMR0_WriteTimer	;wreg free
  6166   0015C0  9C89               	bcf	137,6,c	;volatile
  6167   0015C2  0012               	return		;funcret
  6168   0015C4                     __end_of_sampleTMR0ISR:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function i2_TMR0_WriteTimer *****************
  6172 ;; Defined at:
  6173 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;  timerVal        2    8[COMRAM] unsigned short 
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6187 ;;      Params:         2       0       0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0
  6190 ;;      Totals:         2       0       0       0       0       0       0
  6191 ;;Total ram usage:        2 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_sampleTMR0ISR
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text37
  6201   001902                     __ptext37:
  6202                           	callstack 0
  6203   001902                     i2_TMR0_WriteTimer:
  6204                           	callstack 18
  6205   001902                     
  6206                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  6207   001902  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  6208   001904  6ED7               	movwf	215,c	;volatile
  6209   001906                     
  6210                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6211   001906  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  6212   00190A  0012               	return		;funcret
  6213   00190C                     __end_ofi2_TMR0_WriteTimer:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _TMR0_ReadTimer *****************
  6217 ;; Defined at:
  6218 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  readVal         2    4[COMRAM] unsigned short 
  6223 ;;  readValHigh     1    7[COMRAM] unsigned char 
  6224 ;;  readValLow      1    6[COMRAM] unsigned char 
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  2    0[COMRAM] unsigned short 
  6227 ;; Registers used:
  6228 ;;		wreg, status,2
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6234 ;;      Params:         2       0       0       0       0       0       0
  6235 ;;      Locals:         4       0       0       0       0       0       0
  6236 ;;      Temps:          2       0       0       0       0       0       0
  6237 ;;      Totals:         8       0       0       0       0       0       0
  6238 ;;Total ram usage:        8 bytes
  6239 ;; Hardware stack levels used: 1
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_sampleTMR0ISR
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text38
  6248   001832                     __ptext38:
  6249                           	callstack 0
  6250   001832                     _TMR0_ReadTimer:
  6251                           	callstack 18
  6252   001832                     
  6253                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  6254   001832  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  6255                           
  6256                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  6257   001836  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  6258   00183A                     
  6259                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  6260   00183A  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  6261   00183C  6E03               	movwf	??_TMR0_ReadTimer^0,c
  6262   00183E  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  6263   001840  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  6264   001842  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  6265   001846                     
  6266                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  6267   001846  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  6268   00184A  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  6269   00184E  0012               	return		;funcret
  6270   001850                     __end_of_TMR0_ReadTimer:
  6271                           	callstack 0
  6272                           
  6273                           	psect	text39
  6274   000000                     __ptext39:
  6275                           	callstack 0
  6276   000000                     
  6277                           	psect	rparam
  6278   000000                     
  6279                           	psect	temp
  6280   000051                     btemp:
  6281                           	callstack 0
  6282   000051                     	ds	1
  6283   000000                     int$flags	set	btemp
  6284   000000                     wtemp8	set	btemp+1
  6285   000000                     ttemp5	set	btemp+1
  6286   000000                     ttemp6	set	btemp+4
  6287   000000                     ttemp7	set	btemp+8
  6288                           
  6289                           	psect	idloc
  6290                           
  6291                           ;Config register IDLOC0 @ 0x200000
  6292                           ;	unspecified, using default values
  6293   200000                     	org	2097152
  6294   200000  FF                 	db	255
  6295                           
  6296                           ;Config register IDLOC1 @ 0x200001
  6297                           ;	unspecified, using default values
  6298   200001                     	org	2097153
  6299   200001  FF                 	db	255
  6300                           
  6301                           ;Config register IDLOC2 @ 0x200002
  6302                           ;	unspecified, using default values
  6303   200002                     	org	2097154
  6304   200002  FF                 	db	255
  6305                           
  6306                           ;Config register IDLOC3 @ 0x200003
  6307                           ;	unspecified, using default values
  6308   200003                     	org	2097155
  6309   200003  FF                 	db	255
  6310                           
  6311                           ;Config register IDLOC4 @ 0x200004
  6312                           ;	unspecified, using default values
  6313   200004                     	org	2097156
  6314   200004  FF                 	db	255
  6315                           
  6316                           ;Config register IDLOC5 @ 0x200005
  6317                           ;	unspecified, using default values
  6318   200005                     	org	2097157
  6319   200005  FF                 	db	255
  6320                           
  6321                           ;Config register IDLOC6 @ 0x200006
  6322                           ;	unspecified, using default values
  6323   200006                     	org	2097158
  6324   200006  FF                 	db	255
  6325                           
  6326                           ;Config register IDLOC7 @ 0x200007
  6327                           ;	unspecified, using default values
  6328   200007                     	org	2097159
  6329   200007  FF                 	db	255
  6330                           
  6331                           	psect	config
  6332                           
  6333                           ; Padding undefined space
  6334   300000                     	org	3145728
  6335   300000  FF                 	db	255
  6336                           
  6337                           ;Config register CONFIG1H @ 0x300001
  6338                           ;	Oscillator Selection bits
  6339                           ;	FOSC = INTIO67, Internal oscillator block
  6340                           ;	4X PLL Enable
  6341                           ;	PLLCFG = OFF, Oscillator used directly
  6342                           ;	Primary clock enable bit
  6343                           ;	PRICLKEN = ON, Primary clock enabled
  6344                           ;	Fail-Safe Clock Monitor Enable bit
  6345                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6346                           ;	Internal/External Oscillator Switchover bit
  6347                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6348   300001                     	org	3145729
  6349   300001  28                 	db	40
  6350                           
  6351                           ;Config register CONFIG2L @ 0x300002
  6352                           ;	Power-up Timer Enable bit
  6353                           ;	PWRTEN = OFF, Power up timer disabled
  6354                           ;	Brown-out Reset Enable bits
  6355                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6356                           ;	Brown Out Reset Voltage bits
  6357                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6358   300002                     	org	3145730
  6359   300002  1F                 	db	31
  6360                           
  6361                           ;Config register CONFIG2H @ 0x300003
  6362                           ;	Watchdog Timer Enable bits
  6363                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6364                           ;	Watchdog Timer Postscale Select bits
  6365                           ;	WDTPS = 32768, 1:32768
  6366   300003                     	org	3145731
  6367   300003  3C                 	db	60
  6368                           
  6369                           ; Padding undefined space
  6370   300004                     	org	3145732
  6371   300004  FF                 	db	255
  6372                           
  6373                           ;Config register CONFIG3H @ 0x300005
  6374                           ;	CCP2 MUX bit
  6375                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6376                           ;	PORTB A/D Enable bit
  6377                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6378                           ;	P3A/CCP3 Mux bit
  6379                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6380                           ;	HFINTOSC Fast Start-up
  6381                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6382                           ;	Timer3 Clock input mux bit
  6383                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6384                           ;	ECCP2 B output mux bit
  6385                           ;	P2BMX = PORTB5, P2B is on RB5
  6386                           ;	MCLR Pin Enable bit
  6387                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6388   300005                     	org	3145733
  6389   300005  BF                 	db	191
  6390                           
  6391                           ;Config register CONFIG4L @ 0x300006
  6392                           ;	Stack Full/Underflow Reset Enable bit
  6393                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6394                           ;	Single-Supply ICSP Enable bit
  6395                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6396                           ;	Extended Instruction Set Enable bit
  6397                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6398                           ;	Background Debug
  6399                           ;	DEBUG = OFF, Disabled
  6400   300006                     	org	3145734
  6401   300006  85                 	db	133
  6402                           
  6403                           ; Padding undefined space
  6404   300007                     	org	3145735
  6405   300007  FF                 	db	255
  6406                           
  6407                           ;Config register CONFIG5L @ 0x300008
  6408                           ;	Code Protection Block 0
  6409                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6410                           ;	Code Protection Block 1
  6411                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6412                           ;	Code Protection Block 2
  6413                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6414                           ;	Code Protection Block 3
  6415                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6416   300008                     	org	3145736
  6417   300008  0F                 	db	15
  6418                           
  6419                           ;Config register CONFIG5H @ 0x300009
  6420                           ;	Boot Block Code Protection bit
  6421                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6422                           ;	Data EEPROM Code Protection bit
  6423                           ;	CPD = OFF, Data EEPROM not code-protected
  6424   300009                     	org	3145737
  6425   300009  C0                 	db	192
  6426                           
  6427                           ;Config register CONFIG6L @ 0x30000A
  6428                           ;	Write Protection Block 0
  6429                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6430                           ;	Write Protection Block 1
  6431                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6432                           ;	Write Protection Block 2
  6433                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6434                           ;	Write Protection Block 3
  6435                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6436   30000A                     	org	3145738
  6437   30000A  0F                 	db	15
  6438                           
  6439                           ;Config register CONFIG6H @ 0x30000B
  6440                           ;	Configuration Register Write Protection bit
  6441                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6442                           ;	Boot Block Write Protection bit
  6443                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6444                           ;	Data EEPROM Write Protection bit
  6445                           ;	WRTD = OFF, Data EEPROM not write-protected
  6446   30000B                     	org	3145739
  6447   30000B  E0                 	db	224
  6448                           
  6449                           ;Config register CONFIG7L @ 0x30000C
  6450                           ;	Table Read Protection Block 0
  6451                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6452                           ;	Table Read Protection Block 1
  6453                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6454                           ;	Table Read Protection Block 2
  6455                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6456                           ;	Table Read Protection Block 3
  6457                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6458   30000C                     	org	3145740
  6459   30000C  0F                 	db	15
  6460                           
  6461                           ;Config register CONFIG7H @ 0x30000D
  6462                           ;	Boot Block Table Read Protection bit
  6463                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6464   30000D                     	org	3145741
  6465   30000D  40                 	db	64
  6466                           tosu	equ	0xFFF
  6467                           tosh	equ	0xFFE
  6468                           tosl	equ	0xFFD
  6469                           stkptr	equ	0xFFC
  6470                           pclatu	equ	0xFFB
  6471                           pclath	equ	0xFFA
  6472                           pcl	equ	0xFF9
  6473                           tblptru	equ	0xFF8
  6474                           tblptrh	equ	0xFF7
  6475                           tblptrl	equ	0xFF6
  6476                           tablat	equ	0xFF5
  6477                           prodh	equ	0xFF4
  6478                           prodl	equ	0xFF3
  6479                           indf0	equ	0xFEF
  6480                           postinc0	equ	0xFEE
  6481                           postdec0	equ	0xFED
  6482                           preinc0	equ	0xFEC
  6483                           plusw0	equ	0xFEB
  6484                           fsr0h	equ	0xFEA
  6485                           fsr0l	equ	0xFE9
  6486                           wreg	equ	0xFE8
  6487                           indf1	equ	0xFE7
  6488                           postinc1	equ	0xFE6
  6489                           postdec1	equ	0xFE5
  6490                           preinc1	equ	0xFE4
  6491                           plusw1	equ	0xFE3
  6492                           fsr1h	equ	0xFE2
  6493                           fsr1l	equ	0xFE1
  6494                           bsr	equ	0xFE0
  6495                           indf2	equ	0xFDF
  6496                           postinc2	equ	0xFDE
  6497                           postdec2	equ	0xFDD
  6498                           preinc2	equ	0xFDC
  6499                           plusw2	equ	0xFDB
  6500                           fsr2h	equ	0xFDA
  6501                           fsr2l	equ	0xFD9
  6502                           status	equ	0xFD8

Data Sizes:
    Strings     583
    Constant    0
    Data        1
    BSS         309
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     72     113
    BANK1           256    256     256
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1376$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1376$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_39(CODE[3]), STR_38(CODE[14]), STR_37(CODE[24]), STR_36(CODE[21]), 
		 -> STR_35(CODE[5]), STR_34(CODE[15]), STR_33(CODE[33]), STR_32(CODE[5]), 
		 -> STR_31(CODE[4]), STR_30(CODE[52]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[4]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[7]), STR_21(CODE[52]), STR_20(CODE[19]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_39(CODE[3]), STR_38(CODE[14]), STR_37(CODE[24]), STR_36(CODE[21]), 
		 -> STR_35(CODE[5]), STR_34(CODE[15]), STR_33(CODE[33]), STR_32(CODE[5]), 
		 -> STR_31(CODE[4]), STR_30(CODE[52]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[4]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[7]), STR_21(CODE[52]), STR_20(CODE[19]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_39(CODE[3]), STR_38(CODE[14]), STR_37(CODE[24]), STR_36(CODE[21]), 
		 -> STR_35(CODE[5]), STR_34(CODE[15]), STR_33(CODE[33]), STR_32(CODE[5]), 
		 -> STR_31(CODE[4]), STR_30(CODE[52]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[4]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[7]), STR_21(CODE[52]), STR_20(CODE[19]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1416$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_39(CODE[3]), STR_38(CODE[14]), STR_37(CODE[24]), STR_36(CODE[21]), 
		 -> STR_35(CODE[5]), STR_34(CODE[15]), STR_33(CODE[33]), STR_32(CODE[5]), 
		 -> STR_31(CODE[4]), STR_30(CODE[52]), STR_29(CODE[3]), STR_28(CODE[3]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[4]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_22(CODE[7]), STR_21(CODE[52]), STR_20(CODE[19]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sampleTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sampleTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _sampleTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               278   278      0   21778
                                             50 BANK0     22    22      0
                                              0 BANK1    256   256      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   18492
                                             40 BANK0     10     2      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   14889
                                             65 COMRAM     2     2      0
                                             34 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   14413
                                             61 COMRAM     4     4      0
                                             17 BANK0     17    11      6
                               _ctoa
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4842
                                             43 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             14 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             14 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5730
                                             43 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3461
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             32 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             14 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             14 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1567
                                             25 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1186
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     357
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     220
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          4     4      0     165
                                             10 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     165
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _sampleTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _sampleTMR0ISR                                       0     0      0     165
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      96
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
   ___wmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _utoa
           ___lodiv
           ___lomod
           _pad

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _sampleTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100    100     100       6      100.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     48      71       4       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITBIGSFRllhh       27      0       0      26        0.0%
BITBIGSFRllhl       26      0       0      27        0.0%
BITBIGSFRhlhhh      19      0       0      16        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRlhhhll      C      0       0      22        0.0%
BITBIGSFRlhhhhh      B      0       0      19        0.0%
BITBIGSFRlhhhll      7      0       0      21        0.0%
BITBIGSFRlhhhlh      7      0       0      20        0.0%
BITBIGSFRlhhl        6      0       0      24        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRlhhhll      2      0       0      23        0.0%
BITBIGSFRhlhl        1      0       0      17        0.0%
BITBIGSFRhll         1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C1      28        0.0%
DATA                 0      0     2C1      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 05 17:16:55 2023

                                             l9 190E                                              l43 17BA  
                                            l72 185C                                              l75 186A  
                                            l69 1884                                              l94 18B0  
                           ___wmul@multiplicand 0011                                 _timer0ReloadVal 004A  
                                           l203 18F6                                             l301 01E6  
                                           l206 18EC                                             l230 1790  
                                           l209 1900                                             l242 18D8  
                                           l252 18E2                                             l166 18C4  
                                           l158 1722                                             l350 1830  
                                           l182 1888                                             l175 17E4  
                                           l191 18CE                                             l185 189A  
                                           l290 0072                                             l179 180A  
                                           l429 11F0                                             l464 0F80  
                                           l477 10E4                                             l805 13B0  
                                           l795 12E0                                             l788 12C0  
                                           l798 1390                                             _abs 16A6  
                                           _pad 14E2                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1104 09B2  
                                          l1050 1504                                            l1123 16DC  
                                          ?_abs 0021                                            l1060 13DC  
                                          l1028 17E2                                            l1126 16E4  
                                          l1054 155A                                            l1119 1614  
                                          l1064 13F6                                            l3000 160A  
                                          l1073 0A40                                            l2210 18F8  
                                          l1138 14E0                                            l1146 16A4  
                                          l3010 0052                                            l1075 0A48  
                                          l1091 0C5C                                            l2212 18DA  
                                          l2300 177E                                            l1068 144A  
                                          l1076 0A8E                                            l3004 17BC  
                                          l3100 0304                                            l3020 008C  
                                          l3012 0060                                            l1093 0C64  
                                          l2206 18EE                                            l2310 16FA  
                                          l2302 1780                                            l3006 17C6  
                                          l3110 036E                                            l3030 00BA  
                                          l3022 008E                                            l3014 0064  
                                          l1087 0C32                                            l2208 18E4  
                                          l2312 1706                                            l2304 178C  
                                          l2400 10E6                                            l3112 037A  
                                          l3040 01A6                                            l3032 00C8  
                                          l3024 0090                                            l3016 0070  
                                          l2306 189C                                            l2314 1712  
                                          l2410 111A                                            l2402 10EA  
                                          l3130 0424                                            l3122 03BE  
                                          l3114 03AC                                            l3106 030E  
                                          l3050 01CA                                            l3042 01B6  
                                          l3034 00DC                                            l3026 009E  
                                          l3018 0080                                            l1099 0DF8  
                                          l2316 171E                                            l2308 16E6  
                                          l2420 115C                                            l2412 112A  
                                          l2404 10F8                                            l3140 0462  
                                          l3132 0436                                            l3124 03F4  
                                          l3116 03B8                                            l3108 033C  
                                          l3060 01F4                                            l3052 01D0  
                                          l3036 00E4                                            l3028 00AC  
                                          l2430 11AE                                            l2422 1168  
                                          l2414 112E                                            l2406 1108  
                                          l3150 04CC                                            l3142 0468  
                                          l3134 0442                                            l3126 0406  
                                          l3070 0230                                            l3062 0200  
                                          l3054 01EC                                            l3038 00FA  
                                          l2280 190C                                            l2360 1874  
                                          l2440 11E0                                            l2432 11B0  
                                          l2424 1176                                            l2416 113E  
                                          l2408 110C                                            l3160 056A  
                                          l3152 04D2                                            l3144 047E  
                                          l3136 0446                                            l3128 0418  
                                          l3072 023C                                            l3064 0206  
                                          l3048 01BE                                            l2290 1850  
                                          l2282 1792                                            l2362 1878  
                                          l2434 11BA                                            l2426 1180  
                                          l2418 1154                                            l3234 06C8  
                                          l3162 0572                                            l3170 05F0  
                                          l3154 04EE                                            l3146 0498  
                                          l3138 0456                                            l3090 02CA  
                                          l3082 025A                                            l3074 0242  
                                          l3066 0220                                            l2380 1808  
                                          l2372 17E4                                            l2284 179E  
                                          l2292 175C                                            l2364 187C  
                                          l2356 186C                                            l2428 119E  
                                          l2436 11C0                                            l2700 166E  
                                          l3236 096A                                            l3180 067A  
                                          l3172 060C                                            l3164 0588  
                                          l3156 0508                                            l3148 04A6  
                                          l3092 02E2                                            l3084 0276  
                                          l3076 0252                                            l3068 0228  
                                          l2374 17F2                                            l2286 17A0  
                                          l2294 175E                                            l2366 1880  
                                          l2358 1870                                            l2438 11D0  
                                          l2710 0E0C                                            l2702 1680  
                                          l3182 069C                                            l3174 0618  
                                          l3166 058E                                            l3158 0516  
                                          l3094 02E4                                            l3086 0292  
                                          l2376 17F6                                            l2368 18B2  
                                          l2288 17B8                                            l2296 1766  
                                          l2384 18D0                                            l2720 0E62  
                                          l2712 0E2C                                            l2704 1684  
                                          l2800 1286                                            l3176 0634  
                                          l3168 05EA                                            l3096 02E8  
                                          l3088 02AE                                            l2378 1804  
                                          l2298 177C                                            l2386 18D4  
                                          l2394 180C                                            l2730 0EB6  
                                          l2722 0E6E                                            l2714 0E30  
                                          l2706 0DFA                                            l2802 12A6  
                                          l2810 1300                                            l3178 0664  
                                          l3098 02F8                                            l3186 06B2  
                                          l2396 1828                                            l2740 0F2A  
                                          l2732 0EC8                                            l2724 0E8C  
                                          l2716 0E3E                                            l2708 0DFE  
                                          l2900 0BD2                                            l2804 12A8  
                                          l2820 1378                                            l2812 1308  
                                          l3188 070E                                            l2734 0EF6  
                                          l2726 0E94                                            l2742 0F30  
                                          l2718 0E5E                                            l2750 0F82  
                                          l2830 1510                                            l2902 0BEC  
                                          l2806 12BA                                            l2822 138A  
                                          l2814 131C                                            l2680 1896  
                                          l2744 0F40                                            l2736 0F16  
                                          l2728 0EA8                                            l2760 0FC6  
                                          l2752 0F86                                            l2840 16C0  
                                          l2832 1524                                            l2824 14E2  
                                          l2904 0BFC                                            l2816 132A  
                                          l2808 12E2                                            l2920 0C9E  
                                          l2912 0C34                                            l2682 18C8  
                                          l2690 147A                                            l2850 13EE  
                                          l2842 13B2                                            l2746 0F60  
                                          l2738 0F18                                            l2770 102E  
                                          l2762 0FE6                                            l2754 0F94  
                                          l2834 1528                                            l2826 14F0  
                                          l2906 0C02                                            l2818 1358  
                                          l2922 0CA4                                            l2930 0D8C  
                                          l2914 0C4E                                            l2692 1498  
                                          l2684 144C                                            l2852 1402  
                                          l2844 13C4                                            l2780 10A4  
                                          l2772 105C                                            l2764 1004  
                                          l2756 0FB4                                            l2836 1546  
                                          l2828 14FC                                            l2908 0C12  
                                          l2860 09B4                                            l2932 0DA0  
                                          l2924 0D1A                                            l2916 0C8C  
                                          l2940 0724                                            l2678 1888  
                                          l2694 14CE                                            l2686 145E  
                                          l2854 1416                                            l2846 13D0  
                                          l2782 10C4                                            l2774 107C  
                                          l2766 100C                                            l2758 0FB8  
                                          l2838 16A6                                            l2870 0A34  
                                          l2862 09D4                                            l2790 121C  
                                          l2934 0DBE                                            l2926 0D22  
                                          l2918 0C96                                            l2950 078A  
                                          l2942 0748                                            ?_pad 0021  
                                          l2688 1470                                            l2856 141A  
                                          l2776 108E                                            l2768 1020  
                                          l2880 0A82                                            l2872 0A50  
                                          l2864 09EA                                            l2792 1224  
                                          l2936 0DD8                                            l2928 0D28  
                                          l2960 07FE                                            l2952 07BE  
                                          l2944 0756                                            l2858 1438  
                                          l2778 1094                                            l2698 1662  
                                          l2890 0B26                                            l2882 0A8A  
                                          l2874 0A60                                            l2866 09FA  
                                          l2794 1238                                            l2786 11F2  
                                          l2970 08BE                                            l2962 081A  
                                          l2946 0762                                            l2892 0B2E  
                                          l2884 0A96                                            l2876 0A66  
                                          l2868 0A1A                                            l2796 1246  
                                          l2788 11FE                                            l2972 091C  
                                          l2980 0978                                            l2964 0872  
                                          l2956 07D2                                            l2948 0766  
                                          l2894 0B34                                            l2886 0A9E  
                                          l2878 0A76                                            l2798 1258  
                                          l2958 07E2                                            l2888 0AA4  
                                          l2896 0B98                                            l2968 08A2  
                                          l2984 098A                                            l2898 0BB4  
                                          l2978 094C                                            l2994 15C4  
                                          l2996 15D0                                            l2998 15EE  
                                          STR_1 7FCB                                            STR_2 7F19  
                                          STR_3 7FD6                                            STR_4 7FFB  
                                          STR_5 7FF2                                            STR_6 7E75  
                                          STR_7 7F9F                                            STR_8 7FDF  
                                          STR_9 7F62                                            u2000 1286  
                                          u2001 1282                                            u2010 1300  
                                          u2011 12FC                                            u2100 09E6  
                                          u2020 132A                                            u2101 09E0  
                                          u2021 1326                                            u2110 09E8  
                                          u2030 1358                                            u2031 1354  
                                          u2040 14F0                                            u2120 09FA  
                                          u2200 0C4E                                            u2041 14EC  
                                          u2121 09F6                                            u2201 0C4A  
                                          u2050 1546                                            u2130 0A34  
                                          u2210 0DA0                                            u2051 1542  
                                          u2131 0A30                                            u2211 0D9C  
                                          u1500 1804                                            u1420 186A  
                                          u2060 16C0                                            u2140 0A60  
                                          u2220 0DBE                                            u2300 0080  
                                          u1501 1800                                            u1421 1866  
                                          u2061 16BC                                            u2141 0A5C  
                                          u2221 0DBA                                            u2301 007C  
                                          _LATA 000F89                                            u1510 10F8  
                                          u2070 13C4                                            u2150 0A76  
                                          u2230 0DD8                                            u2310 00DC  
                                          _LATB 000F8A                                            u1511 10F4  
                                          u2071 13C0                                            u2151 0A72  
                                          u2231 0DD4                                            u2311 00D8  
                                          _LATC 000F8B                                            u1520 111A  
                                          u2080 13EA                                            u2160 0BB4  
                                          u2240 0748                                            u2400 036E  
                                          u2320 01E6                                            u1521 1116  
                                          u2081 13E6                                            u2161 0BB0  
                                          u2241 0744                                            u2401 036A  
                                          u2321 01E2                                            u1530 1154  
                                          u2090 1438                                            u2170 0BD2  
                                          u2250 078A                                            u2410 03AC  
                                          u2330 021C                                            u1531 1150  
                                          u2091 1434                                            u2171 0BCE  
                                          u2251 0786                                            u2411 03A8  
                                          u2331 0218                                            u1540 1176  
                                          u2180 0BEC                                            u2260 07FE  
                                          u2420 0418                                            u2340 0252  
                                          u1541 1172                                            u2181 0BE8  
                                          u2261 07FA                                            u2421 0414  
                                          u2341 024E                                            u1550 119E  
                                          u2190 0BFC                                            u2270 081A  
                                          u2430 0436                                            u2350 0276  
                                          u1551 119A                                            u2191 0BF8  
                                          u2271 0816                                            u2431 0432  
                                          u2351 0272                                            u1480 18C2  
                                          u1560 11D0                                            u1800 1470  
                                          u2280 08BE                                            u2440 0456  
                                          u2360 0292                                            u1481 18BC  
                                          u1561 11CC                                            u1801 146C  
                                          u2281 08BA                                            u2441 0452  
                                          u2361 028E                                            u1490 17F2  
                                          u1810 1498                                            u2290 160A  
                                          u2450 047E                                            u2370 02AE  
                                          u1491 17EE                                            u1811 1494  
                                          u2291 1606                                            u2451 047A  
                                          u2371 02AA                                            u1820 14CE  
                                          u1900 0F40                                            u2460 04EE  
                                          u2380 02CA                                            u1821 14CA  
                                          u1901 0F3C                                            u2461 04EA  
                                          u2381 02C6                                            u1486 18C4  
                                          u1910 0F94                                            u1830 16A4  
                                          u2470 0588                                            u2390 02F8  
                                          u1911 0F90                                            u1831 16A0  
                                          u2471 0584                                            u2391 02F4  
                                          u1840 0E0C                                            u1920 0FC6  
                                          u2480 060C                                            u1841 0E08  
                                          u1921 0FC2                                            u2481 0608  
                                          u1850 0E3E                                            u1930 1004  
                                          u1851 0E3A                                            u1931 1000  
                                          u1780 1896                                            u1940 102E  
                                          u1781 1892                                            u1861 0E68  
                                          u1941 102A                                            u1790 145E  
                                          u1870 0E8C                                            u1950 105C  
                                          u1791 145A                                            u1871 0E88  
                                          u1951 1058                                            u1880 0EB6  
                                          u1960 10A4                                            u1881 0EB2  
                                          u1961 10A0                                            u1890 0EF6  
                                          u1891 0EF2                                            u1971 11F8  
                                          u1980 121C                                            u1981 1218  
                                          u1990 1246                                            u1991 1242  
                                          i2l16 003A                                            _WPUB 000F61  
                                 _EUSART1_Write 1886                                            abs@a 0021  
                                          _dbuf 00B0                                            _ctoa 13B2  
                                          _main 0052                                            _dtoa 09B4  
                                 ?_EUSART1_Read 0001                                            _prec 0046  
                                          pad@i 0028                                            pad@p 0025  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002A                                            fsr2l 000FD9  
                                          btemp 0051                                            _utoa 0C34  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 004E                                    ___param_bank 000000  
                                         ??_abs 0023                                           ??_pad 0027  
                       __end_of_TMR0_Initialize 1792                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 186C                                 __end_of___aldiv 11F2  
                               __end_of___aodiv 0F82                                           ?_ctoa 001A  
                                         ?_main 0001                                           ?_dtoa 002C  
                               __end_of___aomod 10E6                                           STR_10 7F32  
                                         STR_11 7ED8                                           STR_20 7F8C  
                                         STR_12 7EB7                                           STR_13 7E1F  
                                         STR_21 7DB7                                           STR_22 7FE6  
                                         STR_14 7EF9                                           STR_30 7DEB  
                                         STR_23 7FFC                                           STR_31 7FF7  
                                         STR_15 7E50                                           STR_16 7E75  
                                         STR_24 7FFC                                           STR_32 7FED  
                                         STR_17 7FE1                                           STR_25 7FF7  
                                         STR_33 7E96                                           STR_18 7FEF  
                                         STR_26 7FFC                                           STR_34 7FAE  
                                         STR_19 7FEF                                           STR_35 7FED  
                                         STR_27 7FFC                                           STR_28 7FEF  
                                         STR_36 7F77                                           STR_29 7FEF  
                                         STR_37 7F4A                                           STR_38 7FBD  
                                         STR_39 7FFB                       TMR0_ReadTimer@readValHigh 0008  
                                         ?_utoa 002C                                           _T0CON 000FD5  
                               __end_of___lodiv 12E2                                 __end_of___lomod 13B2  
                                         i2l242 190A                                 _TMR0_WriteTimer 18D0  
                                         i2l239 184E                                           i2l255 1910  
                                         i2l249 175A                                           i2l347 15C2  
                                         i2l339 155C                                    vfpfcnvrt@fmt 0073  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                           __end_of_sampleTMR0ISR 15C4  
                     ?_TMR0_SetInterruptHandler 000F                                __end_of_TMR0_ISR 175C  
                                         _flags 00AE                                           _fputc 144C  
                                         _fputs 1662                                           pad@fp 0021  
                                         _width 0044                                           ctoa@c 001C  
                                         _putch 18C6                                           ctoa@l 001E  
                                         ctoa@w 0020                                           main@i 00A6  
                                         main@j 00A2                                           dtoa@d 002E  
                                         dtoa@i 006F                                           dtoa@n 0066  
                                         dtoa@p 0062                                           dtoa@s 006E  
                                         dtoa@w 0064                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000F  
                                         ttemp5 0052                                           ttemp6 0055  
                                         ttemp7 0059                                           utoa@d 002E  
                                         utoa@i 006C                                           utoa@n 0064  
                                         utoa@p 0062                                           utoa@w 0060  
                                         status 000FD8                                           wtemp8 0052  
                              ___lodiv@dividend 000F              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 1616                                    __end_of_ctoa 144C  
                    __end_of_EUSART1_Initialize 1724                                    __end_of_main 0724  
                                  __end_of_dtoa 0C34                                    __end_of_utoa 0DFA  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 001D  
                                        ??_main 0092                                          ??_dtoa 0036  
                                 main@avgPeriod 00A4                                          ??_utoa 0036  
                                 __activetblptr 000002                                ___lodiv@quotient 001F  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0011  
                                        ?_fputs 001A                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l2214 1832  
                                        i2l2216 183A                                          i2l2320 156A  
                                        i2l2218 1846                                          i2l2330 15A4  
                                        i2l2322 156C                                          i2l2324 157E  
                                        i2l2332 15AC                                          i2l2334 15C0  
                                        i2l2326 158E                                          i2l2318 155E  
                                        i2l2350 172A                                          i2l2328 1592  
                                        i2l2352 172E                                          i2l2354 1740  
                                        i2l2346 1724                                          i2l2276 1902  
                                        i2l2348 1726                                          i2l2444 001A  
                                        i2l2278 1906                                          i2l2446 0028  
                                        i2l2448 0036                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   main@crossings 0100  
                                        _SPBRG1 000FAF                                   main@frequency 009A  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0042                                       ??___aldiv 0017  
                                     ??___aodiv 001F                                       ??___aomod 001F  
                                        ___wmul 180C                         __end_of_TMR0_WriteTimer 18DA  
                                     ??___lodiv 001F                                       ??___lomod 001F  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 000F  
                              ?_TMR0_Initialize 0001                                          clear_0 1630  
                                        clear_1 1642                                          clear_2 164E  
                                        isa$std 000001                                          _printf 17BC  
                                        pad@buf 0023                ??_EUSART1_SetOverrunErrorHandler 0011  
               ?_EUSART1_SetOverrunErrorHandler 000F                                          ctoa@fp 001A  
                                        main@ci 00A3                                          dtoa@fp 002C  
                                        fputc@c 0011                                          fputs@c 001E  
                                        fputs@i 001F                                          fputs@s 001A  
                                  __mediumconst 7DB6                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1616                                 ??_EUSART1_Write 000F  
                                        utoa@fp 002C        TMR0_SetInterruptHandler@InterruptHandler 000F  
                             _SYSTEM_Initialize 186C                                      __accesstop 0060  
                       __end_of__initialization 1654                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1912                             ??_SYSTEM_Initialize 0013  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 14E2  
                                 __end_of_fputs 16A6                                   __end_of_putch 18D0  
                          __end_of_EUSART1_Read 180C                                         ??_fputc 0015  
                     __end_of_SYSTEM_Initialize 1886                                         ??_fputs 001E  
                                       ??_putch 0010                                      __pbssBANK0 00A8  
                                    __pbssBANK2 0200                 __end_of_EUSART1_SetErrorHandler 1902  
              __end_of_TMR0_SetInterruptHandler 18E4                                         ?___wmul 000F  
                                    ??_TMR0_ISR 000B                                ?_TMR0_WriteTimer 000F  
                                       ?_printf 0088          __end_of_EUSART1_SetFramingErrorHandler 18F8  
                _EUSART1_SetFramingErrorHandler 18EE                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                              ___lomod@dividend 000F                            _ADC_InterruptHandler 004E  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aldiv 10E6                                         ___aodiv 0DFA  
                                       ___aomod 0F82                                         ___lodiv 11F2  
                                       ___lomod 12E2                                       ?_vfprintf 0082  
                           _EUSART1_is_rx_ready 18B2                                         __pcinit 1616  
                                       __ramtop 0600                                         __ptext0 0052  
                                       __ptext1 17BC                                         __ptext2 15C4  
                                       __ptext3 0724                                         __ptext4 0C34  
                                       __ptext5 12E2                                         __ptext6 11F2  
                                       __ptext7 09B4                                         __ptext8 14E2  
                                       __ptext9 1662                                       _T0CONbits 000FD5  
                         _OSCILLATOR_Initialize 1850                                ___aldiv@dividend 000F  
                            _EUSART1_Initialize 16E6                        ??_PIN_MANAGER_Initialize 000F  
                                       _samples 0200                                         main@cmd 00A0  
                          end_of_initialization 1654                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0013  
                                 __Lmediumconst 7DB6                     _EUSART1_OverrunErrorHandler 00AA  
                                       fputs@fp 001C                               __end_of_vfpfcnvrt 09B4  
                         TMR0_ReadTimer@readVal 0005                                fp__sampleTMR0ISR 0000  
                              ___aldiv@quotient 0019                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0078                                      ??_vfprintf 0042  
                                _TMR0_ReadTimer 1832                            ??_EUSART1_Initialize 0011  
                      _TMR0_SetInterruptHandler 18DA                             EUSART1_Write@txData 000F  
                         ??_EUSART1_is_rx_ready 000F                                    _EUSART1_Read 17E4  
                                    main@period 009E                                      main@sample 00A1  
                        __end_of_TMR0_ReadTimer 1850                    __end_of_INTERRUPT_Initialize 1910  
                                   vfpfcnvrt@ap 0075                                     vfpfcnvrt@cp 0080  
                                   vfpfcnvrt@fp 0071                                  __end_of___wmul 1832  
                                _ADC_Initialize 189C                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 17E4                             start_initialization 1616  
                               ___lodiv@divisor 0017                                 ___lodiv@counter 0027  
                                 _sampleTMR0ISR 155C                                     __end_of_abs 16E6  
                                   __end_of_pad 155C                                     putch@txData 0010  
                         __end_of_EUSART1_Write 189C                                     vfprintf@fmt 0084  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0013  
                        __end_of_ADC_Initialize 18B2                                     __pdataBANK0 00D0  
                                      ??_printf 0044                                 sampleTMR0ISR@si 0048  
                                   __pbssCOMRAM 0044                                  ?_sampleTMR0ISR 0001  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                              ___aodiv@dividend 000F                ??_EUSART1_SetFramingErrorHandler 0011  
               ?_EUSART1_SetFramingErrorHandler 000F                           _TMR0_InterruptHandler 004C  
                        _PIN_MANAGER_Initialize 1792                                       _dtoa$1449 0060  
                                     __pintcode 0008                                   __pmediumconst 7DB6  
                                      ?___aldiv 000F                                        ?___aodiv 000F  
                                      ?___aomod 000F                                ___aodiv@quotient 0021  
                                      ?___lodiv 000F                                        ?___lomod 000F  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 000B  
                               ___lomod@divisor 0017                                 ___lomod@counter 001F  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 00A8                         _EUSART1_SetErrorHandler 18F8  
                          _INTERRUPT_Initialize 190C                                 ___aldiv@divisor 0013  
                             ??_TMR0_Initialize 0011                                 ___aldiv@counter 0017  
                                ___wmul@product 0013                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 000F                                        i2u143_40 157E  
                                      i2u143_41 157A                                        i2u144_40 15A4  
                                      i2u144_41 15A0                                        i2u146_40 1740  
                                      i2u146_41 173C                                        i2u147_48 1746  
                                      i2u147_49 175A                                        i2u157_40 0028  
                    ??_TMR0_SetInterruptHandler 0011                                        i2u157_41 0024  
                                      i2u158_40 0036                                        i2u158_41 0032  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                      _TMR0_ISR 1724                                       _threshold 00D0  
                                     _vfpfcnvrt 0724                        TMR0_ReadTimer@readValLow 0007  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 000F  
                               ??_sampleTMR0ISR 000B                               i2_TMR0_WriteTimer 1902  
                                    vfpfcnvrt@c 0077                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 0086                                        __Lrparam 0000  
                                    vfprintf@fp 0082                         ??_OSCILLATOR_Initialize 000F  
                                    ?_vfpfcnvrt 0071                                 ___aodiv@divisor 0017  
                               ___aodiv@counter 001F                       __end_ofi2_TMR0_WriteTimer 190C  
                     ??_EUSART1_SetErrorHandler 0011                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 18C6                                        __ptext10 16A6  
                                      __ptext11 0F82                                        __ptext20 186C  
                                      __ptext12 0DFA                                        __ptext21 175C  
                                      __ptext13 13B2                                        __ptext30 189C  
                                      __ptext22 18DA                                        __ptext14 144C  
                                      __ptext31 18B2                                        __ptext23 1792  
                                      __ptext15 18C6                                        __ptext32 17E4  
                                      __ptext24 1850                                        __ptext16 1886  
                                      __ptext25 190C                                        __ptext17 180C  
                                      __ptext34 1724                                        __ptext26 16E6  
                                      __ptext18 10E6                                        __ptext35 1910  
                                      __ptext27 18E4                                        __ptext19 18D0  
                                      __ptext36 155C                                        __ptext28 18EE  
                                      __ptext37 1902                                        __ptext29 18F8  
                                      __ptext38 1832                                        __ptext39 0000  
                       TMR0_WriteTimer@timerVal 000F                               ??_TMR0_WriteTimer 0011  
                              ??_TMR0_ReadTimer 0003            __end_of_TMR0_DefaultInterruptHandler 1912  
                  _TMR0_DefaultInterruptHandler 1910                                        _sampling 00AF  
EUSART1_SetOverrunErrorHandler@interruptHandler 000F                                        isa$xinst 000000  
                                      int$flags 0051                                        _vfprintf 15C4  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0088                     _EUSART1_FramingErrorHandler 00AC  
                              ___aomod@dividend 000F                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000F                                        intlevel2 0000  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 18EE  
                _EUSART1_SetOverrunErrorHandler 18E4                                      _RCSTA1bits 000FAB  
                              ??_ADC_Initialize 000F                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 0090  
EUSART1_SetFramingErrorHandler@interruptHandler 000F                                 ___aomod@divisor 0017  
                                   ??_vfpfcnvrt 003E                                 ___aomod@counter 001F  
                            _eusart1RxLastError 0050                                 _TMR0_Initialize 175C  
                                  ___aldiv@sign 0018                                    ___aodiv@sign 0020  
                __end_of_PIN_MANAGER_Initialize 17BC                                    ___aomod@sign 0020  
