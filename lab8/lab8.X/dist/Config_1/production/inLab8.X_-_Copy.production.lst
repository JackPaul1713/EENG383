

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 05 17:53:00 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 06/04/2022 GMT
    64                           ; 
    65                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F25K22 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    99   000000                     
   100 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   101   000000                     
   102 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   103   000000                     
   104                           	psect	idataCOMRAM
   105   001656                     __pidataCOMRAM:
   106                           	callstack 0
   107                           
   108                           ;initializer for sampleTMR0ISR@state
   109   001656  01                 	db	1
   110                           
   111                           	psect	idataBANK0
   112   001657                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _threshold
   116   001657  0A                 	db	10
   117   000000                     _TMR0L	set	4054
   118   000000                     _TMR0H	set	4055
   119   000000                     _TXREG1	set	4013
   120   000000                     _RCREG1	set	4014
   121   000000                     _SPBRG1	set	4015
   122   000000                     _TXSTA1	set	4012
   123   000000                     _ADCON0	set	4034
   124   000000                     _ADRESL	set	4035
   125   000000                     _ANSELA	set	3896
   126   000000                     _ANSELB	set	3897
   127   000000                     _ANSELC	set	3898
   128   000000                     _LATA	set	3977
   129   000000                     _RCONbits	set	4048
   130   000000                     _LATAbits	set	3977
   131   000000                     _T0CON	set	4053
   132   000000                     _RCSTA1bits	set	4011
   133   000000                     _TXSTA1bits	set	4012
   134   000000                     _ADCON0bits	set	4034
   135   000000                     _PLLRDY	set	32407
   136   000000                     _OSCCON2	set	4050
   137   000000                     _OSCCON	set	4051
   138   000000                     _INTCON2bits	set	4081
   139   000000                     _INTCONbits	set	4082
   140   000000                     _TRISA	set	3986
   141   000000                     _LATC	set	3979
   142   000000                     _LATB	set	3978
   143   000000                     _OSCTUNE	set	3995
   144   000000                     _TRISC	set	3988
   145   000000                     _TRISB	set	3987
   146   000000                     _WPUB	set	3937
   147   000000                     _T0CONbits	set	4053
   148   000000                     _PIR1bits	set	3998
   149   000000                     _RCSTA1	set	4011
   150   000000                     _BAUDCON1	set	4024
   151   000000                     _ADCON2	set	4032
   152   000000                     _ADCON1	set	4033
   153   000000                     _ADRESH	set	4036
   154   000000                     _SPBRGH1	set	4016
   155                           
   156                           	psect	mediumconst
   157   007D8E                     __pmediumconst:
   158                           	callstack 0
   159   007D8E  00                 	db	0
   160   007D8F                     STR_25:
   161   007D8F  54                 	db	84	;'T'
   162   007D90  68                 	db	104	;'h'
   163   007D91  65                 	db	101	;'e'
   164   007D92  20                 	db	32
   165   007D93  6C                 	db	108	;'l'
   166   007D94  61                 	db	97	;'a'
   167   007D95  73                 	db	115	;'s'
   168   007D96  74                 	db	116	;'t'
   169   007D97  20                 	db	32
   170   007D98  32                 	db	50	;'2'
   171   007D99  35                 	db	53	;'5'
   172   007D9A  36                 	db	54	;'6'
   173   007D9B  20                 	db	32
   174   007D9C  41                 	db	65	;'A'
   175   007D9D  44                 	db	68	;'D'
   176   007D9E  43                 	db	67	;'C'
   177   007D9F  20                 	db	32
   178   007DA0  73                 	db	115	;'s'
   179   007DA1  61                 	db	97	;'a'
   180   007DA2  6D                 	db	109	;'m'
   181   007DA3  70                 	db	112	;'p'
   182   007DA4  6C                 	db	108	;'l'
   183   007DA5  65                 	db	101	;'e'
   184   007DA6  73                 	db	115	;'s'
   185   007DA7  20                 	db	32
   186   007DA8  66                 	db	102	;'f'
   187   007DA9  72                 	db	114	;'r'
   188   007DAA  6F                 	db	111	;'o'
   189   007DAB  6D                 	db	109	;'m'
   190   007DAC  20                 	db	32
   191   007DAD  74                 	db	116	;'t'
   192   007DAE  68                 	db	104	;'h'
   193   007DAF  65                 	db	101	;'e'
   194   007DB0  20                 	db	32
   195   007DB1  6D                 	db	109	;'m'
   196   007DB2  69                 	db	105	;'i'
   197   007DB3  63                 	db	99	;'c'
   198   007DB4  72                 	db	114	;'r'
   199   007DB5  6F                 	db	111	;'o'
   200   007DB6  70                 	db	112	;'p'
   201   007DB7  68                 	db	104	;'h'
   202   007DB8  6F                 	db	111	;'o'
   203   007DB9  6E                 	db	110	;'n'
   204   007DBA  65                 	db	101	;'e'
   205   007DBB  20                 	db	32
   206   007DBC  61                 	db	97	;'a'
   207   007DBD  72                 	db	114	;'r'
   208   007DBE  65                 	db	101	;'e'
   209   007DBF  3A                 	db	58	;':'
   210   007DC0  0A                 	db	10
   211   007DC1  0D                 	db	13
   212   007DC2  00                 	db	0
   213   007DC3                     STR_34:
   214   007DC3  54                 	db	84	;'T'
   215   007DC4  68                 	db	104	;'h'
   216   007DC5  65                 	db	101	;'e'
   217   007DC6  20                 	db	32
   218   007DC7  73                 	db	115	;'s'
   219   007DC8  6F                 	db	111	;'o'
   220   007DC9  75                 	db	117	;'u'
   221   007DCA  6E                 	db	110	;'n'
   222   007DCB  64                 	db	100	;'d'
   223   007DCC  20                 	db	32
   224   007DCD  77                 	db	119	;'w'
   225   007DCE  61                 	db	97	;'a'
   226   007DCF  76                 	db	118	;'v'
   227   007DD0  65                 	db	101	;'e'
   228   007DD1  20                 	db	32
   229   007DD2  63                 	db	99	;'c'
   230   007DD3  72                 	db	114	;'r'
   231   007DD4  6F                 	db	111	;'o'
   232   007DD5  73                 	db	115	;'s'
   233   007DD6  73                 	db	115	;'s'
   234   007DD7  65                 	db	101	;'e'
   235   007DD8  64                 	db	100	;'d'
   236   007DD9  20                 	db	32
   237   007DDA  61                 	db	97	;'a'
   238   007DDB  74                 	db	116	;'t'
   239   007DDC  20                 	db	32
   240   007DDD  74                 	db	116	;'t'
   241   007DDE  68                 	db	104	;'h'
   242   007DDF  65                 	db	101	;'e'
   243   007DE0  20                 	db	32
   244   007DE1  66                 	db	102	;'f'
   245   007DE2  6F                 	db	111	;'o'
   246   007DE3  6C                 	db	108	;'l'
   247   007DE4  6C                 	db	108	;'l'
   248   007DE5  6F                 	db	111	;'o'
   249   007DE6  77                 	db	119	;'w'
   250   007DE7  69                 	db	105	;'i'
   251   007DE8  6E                 	db	110	;'n'
   252   007DE9  67                 	db	103	;'g'
   253   007DEA  20                 	db	32
   254   007DEB  69                 	db	105	;'i'
   255   007DEC  6E                 	db	110	;'n'
   256   007DED  64                 	db	100	;'d'
   257   007DEE  69                 	db	105	;'i'
   258   007DEF  63                 	db	99	;'c'
   259   007DF0  69                 	db	105	;'i'
   260   007DF1  65                 	db	101	;'e'
   261   007DF2  73                 	db	115	;'s'
   262   007DF3  3A                 	db	58	;':'
   263   007DF4  0A                 	db	10
   264   007DF5  0D                 	db	13
   265   007DF6  00                 	db	0
   266   007DF7                     STR_13:
   267   007DF7  66                 	db	102	;'f'
   268   007DF8  3A                 	db	58	;':'
   269   007DF9  20                 	db	32
   270   007DFA  63                 	db	99	;'c'
   271   007DFB  6F                 	db	111	;'o'
   272   007DFC  6D                 	db	109	;'m'
   273   007DFD  70                 	db	112	;'p'
   274   007DFE  75                 	db	117	;'u'
   275   007DFF  74                 	db	116	;'t'
   276   007E00  65                 	db	101	;'e'
   277   007E01  20                 	db	32
   278   007E02  74                 	db	116	;'t'
   279   007E03  68                 	db	104	;'h'
   280   007E04  65                 	db	101	;'e'
   281   007E05  20                 	db	32
   282   007E06  70                 	db	112	;'p'
   283   007E07  65                 	db	101	;'e'
   284   007E08  72                 	db	114	;'r'
   285   007E09  69                 	db	105	;'i'
   286   007E0A  6F                 	db	111	;'o'
   287   007E0B  64                 	db	100	;'d'
   288   007E0C  20                 	db	32
   289   007E0D  66                 	db	102	;'f'
   290   007E0E  72                 	db	114	;'r'
   291   007E0F  6F                 	db	111	;'o'
   292   007E10  6D                 	db	109	;'m'
   293   007E11  20                 	db	32
   294   007E12  25                 	db	37
   295   007E13  64                 	db	100	;'d'
   296   007E14  20                 	db	32
   297   007E15  73                 	db	115	;'s'
   298   007E16  61                 	db	97	;'a'
   299   007E17  6D                 	db	109	;'m'
   300   007E18  70                 	db	112	;'p'
   301   007E19  6C                 	db	108	;'l'
   302   007E1A  65                 	db	101	;'e'
   303   007E1B  73                 	db	115	;'s'
   304   007E1C  20                 	db	32
   305   007E1D  66                 	db	102	;'f'
   306   007E1E  72                 	db	114	;'r'
   307   007E1F  6F                 	db	111	;'o'
   308   007E20  6D                 	db	109	;'m'
   309   007E21  20                 	db	32
   310   007E22  41                 	db	65	;'A'
   311   007E23  44                 	db	68	;'D'
   312   007E24  43                 	db	67	;'C'
   313   007E25  0D                 	db	13
   314   007E26  0A                 	db	10
   315   007E27  00                 	db	0
   316   007E28                     STR_15:
   317   007E28  30                 	db	48	;'0'
   318   007E29  2D                 	db	45
   319   007E2A  39                 	db	57	;'9'
   320   007E2B  3A                 	db	58	;':'
   321   007E2C  20                 	db	32
   322   007E2D  73                 	db	115	;'s'
   323   007E2E  77                 	db	119	;'w'
   324   007E2F  69                 	db	105	;'i'
   325   007E30  74                 	db	116	;'t'
   326   007E31  63                 	db	99	;'c'
   327   007E32  68                 	db	104	;'h'
   328   007E33  20                 	db	32
   329   007E34  73                 	db	115	;'s'
   330   007E35  61                 	db	97	;'a'
   331   007E36  6D                 	db	109	;'m'
   332   007E37  70                 	db	112	;'p'
   333   007E38  6C                 	db	108	;'l'
   334   007E39  65                 	db	101	;'e'
   335   007E3A  64                 	db	100	;'d'
   336   007E3B  20                 	db	32
   337   007E3C  63                 	db	99	;'c'
   338   007E3D  68                 	db	104	;'h'
   339   007E3E  61                 	db	97	;'a'
   340   007E3F  6E                 	db	110	;'n'
   341   007E40  6E                 	db	110	;'n'
   342   007E41  65                 	db	101	;'e'
   343   007E42  6C                 	db	108	;'l'
   344   007E43  20                 	db	32
   345   007E44  74                 	db	116	;'t'
   346   007E45  6F                 	db	111	;'o'
   347   007E46  20                 	db	32
   348   007E47  41                 	db	65	;'A'
   349   007E48  4E                 	db	78	;'N'
   350   007E49  78                 	db	120	;'x'
   351   007E4A  0D                 	db	13
   352   007E4B  0A                 	db	10
   353   007E4C  00                 	db	0
   354   007E4D                     STR_6:
   355   007E4D  2D                 	db	45
   356   007E4E  2D                 	db	45
   357   007E4F  2D                 	db	45
   358   007E50  2D                 	db	45
   359   007E51  2D                 	db	45
   360   007E52  2D                 	db	45
   361   007E53  2D                 	db	45
   362   007E54  2D                 	db	45
   363   007E55  2D                 	db	45
   364   007E56  2D                 	db	45
   365   007E57  2D                 	db	45
   366   007E58  2D                 	db	45
   367   007E59  2D                 	db	45
   368   007E5A  2D                 	db	45
   369   007E5B  2D                 	db	45
   370   007E5C  2D                 	db	45
   371   007E5D  2D                 	db	45
   372   007E5E  2D                 	db	45
   373   007E5F  2D                 	db	45
   374   007E60  2D                 	db	45
   375   007E61  2D                 	db	45
   376   007E62  2D                 	db	45
   377   007E63  2D                 	db	45
   378   007E64  2D                 	db	45
   379   007E65  2D                 	db	45
   380   007E66  2D                 	db	45
   381   007E67  2D                 	db	45
   382   007E68  2D                 	db	45
   383   007E69  2D                 	db	45
   384   007E6A  2D                 	db	45
   385   007E6B  0D                 	db	13
   386   007E6C  0A                 	db	10
   387   007E6D  00                 	db	0
   388   007E6E                     STR_37:
   389   007E6E  54                 	db	84	;'T'
   390   007E6F  68                 	db	104	;'h'
   391   007E70  65                 	db	101	;'e'
   392   007E71  20                 	db	32
   393   007E72  73                 	db	115	;'s'
   394   007E73  6F                 	db	111	;'o'
   395   007E74  75                 	db	117	;'u'
   396   007E75  6E                 	db	110	;'n'
   397   007E76  64                 	db	100	;'d'
   398   007E77  20                 	db	32
   399   007E78  77                 	db	119	;'w'
   400   007E79  61                 	db	97	;'a'
   401   007E7A  76                 	db	118	;'v'
   402   007E7B  65                 	db	101	;'e'
   403   007E7C  20                 	db	32
   404   007E7D  68                 	db	104	;'h'
   405   007E7E  61                 	db	97	;'a'
   406   007E7F  64                 	db	100	;'d'
   407   007E80  20                 	db	32
   408   007E81  25                 	db	37
   409   007E82  75                 	db	117	;'u'
   410   007E83  20                 	db	32
   411   007E84  70                 	db	112	;'p'
   412   007E85  65                 	db	101	;'e'
   413   007E86  72                 	db	114	;'r'
   414   007E87  69                 	db	105	;'i'
   415   007E88  6F                 	db	111	;'o'
   416   007E89  64                 	db	100	;'d'
   417   007E8A  73                 	db	115	;'s'
   418   007E8B  3A                 	db	58	;':'
   419   007E8C  0A                 	db	10
   420   007E8D  0D                 	db	13
   421   007E8E  00                 	db	0
   422   007E8F                     STR_12:
   423   007E8F  74                 	db	116	;'t'
   424   007E90  3A                 	db	58	;':'
   425   007E91  20                 	db	32
   426   007E92  64                 	db	100	;'d'
   427   007E93  65                 	db	101	;'e'
   428   007E94  63                 	db	99	;'c'
   429   007E95  72                 	db	114	;'r'
   430   007E96  65                 	db	101	;'e'
   431   007E97  61                 	db	97	;'a'
   432   007E98  73                 	db	115	;'s'
   433   007E99  65                 	db	101	;'e'
   434   007E9A  20                 	db	32
   435   007E9B  73                 	db	115	;'s'
   436   007E9C  61                 	db	97	;'a'
   437   007E9D  6D                 	db	109	;'m'
   438   007E9E  70                 	db	112	;'p'
   439   007E9F  6C                 	db	108	;'l'
   440   007EA0  69                 	db	105	;'i'
   441   007EA1  6E                 	db	110	;'n'
   442   007EA2  67                 	db	103	;'g'
   443   007EA3  20                 	db	32
   444   007EA4  74                 	db	116	;'t'
   445   007EA5  68                 	db	104	;'h'
   446   007EA6  72                 	db	114	;'r'
   447   007EA7  65                 	db	101	;'e'
   448   007EA8  73                 	db	115	;'s'
   449   007EA9  68                 	db	104	;'h'
   450   007EAA  6F                 	db	111	;'o'
   451   007EAB  6C                 	db	108	;'l'
   452   007EAC  64                 	db	100	;'d'
   453   007EAD  0A                 	db	10
   454   007EAE  0D                 	db	13
   455   007EAF  00                 	db	0
   456   007EB0                     STR_11:
   457   007EB0  54                 	db	84	;'T'
   458   007EB1  3A                 	db	58	;':'
   459   007EB2  20                 	db	32
   460   007EB3  69                 	db	105	;'i'
   461   007EB4  6E                 	db	110	;'n'
   462   007EB5  63                 	db	99	;'c'
   463   007EB6  72                 	db	114	;'r'
   464   007EB7  65                 	db	101	;'e'
   465   007EB8  61                 	db	97	;'a'
   466   007EB9  73                 	db	115	;'s'
   467   007EBA  65                 	db	101	;'e'
   468   007EBB  20                 	db	32
   469   007EBC  73                 	db	115	;'s'
   470   007EBD  61                 	db	97	;'a'
   471   007EBE  6D                 	db	109	;'m'
   472   007EBF  70                 	db	112	;'p'
   473   007EC0  6C                 	db	108	;'l'
   474   007EC1  69                 	db	105	;'i'
   475   007EC2  6E                 	db	110	;'n'
   476   007EC3  67                 	db	103	;'g'
   477   007EC4  20                 	db	32
   478   007EC5  74                 	db	116	;'t'
   479   007EC6  68                 	db	104	;'h'
   480   007EC7  72                 	db	114	;'r'
   481   007EC8  65                 	db	101	;'e'
   482   007EC9  73                 	db	115	;'s'
   483   007ECA  68                 	db	104	;'h'
   484   007ECB  6F                 	db	111	;'o'
   485   007ECC  6C                 	db	108	;'l'
   486   007ECD  64                 	db	100	;'d'
   487   007ECE  0A                 	db	10
   488   007ECF  0D                 	db	13
   489   007ED0  00                 	db	0
   490   007ED1                     STR_14:
   491   007ED1  73                 	db	115	;'s'
   492   007ED2  3A                 	db	58	;':'
   493   007ED3  20                 	db	32
   494   007ED4  67                 	db	103	;'g'
   495   007ED5  61                 	db	97	;'a'
   496   007ED6  74                 	db	116	;'t'
   497   007ED7  68                 	db	104	;'h'
   498   007ED8  65                 	db	101	;'e'
   499   007ED9  72                 	db	114	;'r'
   500   007EDA  20                 	db	32
   501   007EDB  25                 	db	37
   502   007EDC  64                 	db	100	;'d'
   503   007EDD  20                 	db	32
   504   007EDE  73                 	db	115	;'s'
   505   007EDF  61                 	db	97	;'a'
   506   007EE0  6D                 	db	109	;'m'
   507   007EE1  70                 	db	112	;'p'
   508   007EE2  6C                 	db	108	;'l'
   509   007EE3  65                 	db	101	;'e'
   510   007EE4  73                 	db	115	;'s'
   511   007EE5  20                 	db	32
   512   007EE6  66                 	db	102	;'f'
   513   007EE7  72                 	db	114	;'r'
   514   007EE8  6F                 	db	111	;'o'
   515   007EE9  6D                 	db	109	;'m'
   516   007EEA  20                 	db	32
   517   007EEB  41                 	db	65	;'A'
   518   007EEC  44                 	db	68	;'D'
   519   007EED  43                 	db	67	;'C'
   520   007EEE  0D                 	db	13
   521   007EEF  0A                 	db	10
   522   007EF0  00                 	db	0
   523   007EF1                     STR_2:
   524   007EF1  4D                 	db	77	;'M'
   525   007EF2  69                 	db	105	;'i'
   526   007EF3  63                 	db	99	;'c'
   527   007EF4  72                 	db	114	;'r'
   528   007EF5  6F                 	db	111	;'o'
   529   007EF6  70                 	db	112	;'p'
   530   007EF7  68                 	db	104	;'h'
   531   007EF8  6F                 	db	111	;'o'
   532   007EF9  6E                 	db	110	;'n'
   533   007EFA  65                 	db	101	;'e'
   534   007EFB  20                 	db	32
   535   007EFC  65                 	db	101	;'e'
   536   007EFD  78                 	db	120	;'x'
   537   007EFE  70                 	db	112	;'p'
   538   007EFF  65                 	db	101	;'e'
   539   007F00  72                 	db	114	;'r'
   540   007F01  69                 	db	105	;'i'
   541   007F02  6D                 	db	109	;'m'
   542   007F03  65                 	db	101	;'e'
   543   007F04  6E                 	db	110	;'n'
   544   007F05  74                 	db	116	;'t'
   545   007F06  73                 	db	115	;'s'
   546   007F07  0D                 	db	13
   547   007F08  0A                 	db	10
   548   007F09  00                 	db	0
   549   007F0A                     STR_10:
   550   007F0A  7A                 	db	122	;'z'
   551   007F0B  3A                 	db	58	;':'
   552   007F0C  20                 	db	32
   553   007F0D  43                 	db	67	;'C'
   554   007F0E  6C                 	db	108	;'l'
   555   007F0F  65                 	db	101	;'e'
   556   007F10  61                 	db	97	;'a'
   557   007F11  72                 	db	114	;'r'
   558   007F12  20                 	db	32
   559   007F13  74                 	db	116	;'t'
   560   007F14  68                 	db	104	;'h'
   561   007F15  65                 	db	101	;'e'
   562   007F16  20                 	db	32
   563   007F17  74                 	db	116	;'t'
   564   007F18  65                 	db	101	;'e'
   565   007F19  72                 	db	114	;'r'
   566   007F1A  6D                 	db	109	;'m'
   567   007F1B  69                 	db	105	;'i'
   568   007F1C  6E                 	db	110	;'n'
   569   007F1D  61                 	db	97	;'a'
   570   007F1E  6C                 	db	108	;'l'
   571   007F1F  0D                 	db	13
   572   007F20  0A                 	db	10
   573   007F21  00                 	db	0
   574   007F22                     STR_41:
   575   007F22  61                 	db	97	;'a'
   576   007F23  76                 	db	118	;'v'
   577   007F24  65                 	db	101	;'e'
   578   007F25  72                 	db	114	;'r'
   579   007F26  61                 	db	97	;'a'
   580   007F27  67                 	db	103	;'g'
   581   007F28  65                 	db	101	;'e'
   582   007F29  20                 	db	32
   583   007F2A  66                 	db	102	;'f'
   584   007F2B  72                 	db	114	;'r'
   585   007F2C  65                 	db	101	;'e'
   586   007F2D  71                 	db	113	;'q'
   587   007F2E  75                 	db	117	;'u'
   588   007F2F  65                 	db	101	;'e'
   589   007F30  6E                 	db	110	;'n'
   590   007F31  63                 	db	99	;'c'
   591   007F32  79                 	db	121	;'y'
   592   007F33  3A                 	db	58	;':'
   593   007F34  20                 	db	32
   594   007F35  25                 	db	37
   595   007F36  75                 	db	117	;'u'
   596   007F37  0A                 	db	10
   597   007F38  0D                 	db	13
   598   007F39  00                 	db	0
   599   007F3A                     STR_9:
   600   007F3A  5A                 	db	90	;'Z'
   601   007F3B  3A                 	db	58	;':'
   602   007F3C  20                 	db	32
   603   007F3D  52                 	db	82	;'R'
   604   007F3E  65                 	db	101	;'e'
   605   007F3F  73                 	db	115	;'s'
   606   007F40  65                 	db	101	;'e'
   607   007F41  74                 	db	116	;'t'
   608   007F42  20                 	db	32
   609   007F43  70                 	db	112	;'p'
   610   007F44  72                 	db	114	;'r'
   611   007F45  6F                 	db	111	;'o'
   612   007F46  63                 	db	99	;'c'
   613   007F47  65                 	db	101	;'e'
   614   007F48  73                 	db	115	;'s'
   615   007F49  73                 	db	115	;'s'
   616   007F4A  6F                 	db	111	;'o'
   617   007F4B  72                 	db	114	;'r'
   618   007F4C  0D                 	db	13
   619   007F4D  0A                 	db	10
   620   007F4E  00                 	db	0
   621   007F4F                     STR_40:
   622   007F4F  61                 	db	97	;'a'
   623   007F50  76                 	db	118	;'v'
   624   007F51  65                 	db	101	;'e'
   625   007F52  72                 	db	114	;'r'
   626   007F53  61                 	db	97	;'a'
   627   007F54  67                 	db	103	;'g'
   628   007F55  65                 	db	101	;'e'
   629   007F56  20                 	db	32
   630   007F57  70                 	db	112	;'p'
   631   007F58  65                 	db	101	;'e'
   632   007F59  72                 	db	114	;'r'
   633   007F5A  69                 	db	105	;'i'
   634   007F5B  6F                 	db	111	;'o'
   635   007F5C  64                 	db	100	;'d'
   636   007F5D  3A                 	db	58	;':'
   637   007F5E  20                 	db	32
   638   007F5F  25                 	db	37
   639   007F60  75                 	db	117	;'u'
   640   007F61  0A                 	db	10
   641   007F62  0D                 	db	13
   642   007F63  00                 	db	0
   643   007F64                     STR_20:
   644   007F64  75                 	db	117	;'u'
   645   007F65  70                 	db	112	;'p'
   646   007F66  70                 	db	112	;'p'
   647   007F67  65                 	db	101	;'e'
   648   007F68  72                 	db	114	;'r'
   649   007F69  20                 	db	32
   650   007F6A  74                 	db	116	;'t'
   651   007F6B  72                 	db	114	;'r'
   652   007F6C  69                 	db	105	;'i'
   653   007F6D  67                 	db	103	;'g'
   654   007F6E  67                 	db	103	;'g'
   655   007F6F  65                 	db	101	;'e'
   656   007F70  72                 	db	114	;'r'
   657   007F71  3A                 	db	58	;':'
   658   007F72  20                 	db	32
   659   007F73  25                 	db	37
   660   007F74  75                 	db	117	;'u'
   661   007F75  0A                 	db	10
   662   007F76  0D                 	db	13
   663   007F77  00                 	db	0
   664   007F78                     STR_21:
   665   007F78  6C                 	db	108	;'l'
   666   007F79  6F                 	db	111	;'o'
   667   007F7A  77                 	db	119	;'w'
   668   007F7B  65                 	db	101	;'e'
   669   007F7C  72                 	db	114	;'r'
   670   007F7D  20                 	db	32
   671   007F7E  74                 	db	116	;'t'
   672   007F7F  72                 	db	114	;'r'
   673   007F80  69                 	db	105	;'i'
   674   007F81  67                 	db	103	;'g'
   675   007F82  67                 	db	103	;'g'
   676   007F83  65                 	db	101	;'e'
   677   007F84  72                 	db	114	;'r'
   678   007F85  3A                 	db	58	;':'
   679   007F86  20                 	db	32
   680   007F87  25                 	db	37
   681   007F88  75                 	db	117	;'u'
   682   007F89  0A                 	db	10
   683   007F8A  0D                 	db	13
   684   007F8B  00                 	db	0
   685   007F8C                     STR_24:
   686   007F8C  74                 	db	116	;'t'
   687   007F8D  61                 	db	97	;'a'
   688   007F8E  6B                 	db	107	;'k'
   689   007F8F  69                 	db	105	;'i'
   690   007F90  6E                 	db	110	;'n'
   691   007F91  67                 	db	103	;'g'
   692   007F92  20                 	db	32
   693   007F93  73                 	db	115	;'s'
   694   007F94  61                 	db	97	;'a'
   695   007F95  6D                 	db	109	;'m'
   696   007F96  70                 	db	112	;'p'
   697   007F97  6C                 	db	108	;'l'
   698   007F98  65                 	db	101	;'e'
   699   007F99  73                 	db	115	;'s'
   700   007F9A  3A                 	db	58	;':'
   701   007F9B  20                 	db	32
   702   007F9C  0A                 	db	10
   703   007F9D  0D                 	db	13
   704   007F9E  00                 	db	0
   705   007F9F                     STR_7:
   706   007F9F  3F                 	db	63	;'?'
   707   007FA0  3A                 	db	58	;':'
   708   007FA1  20                 	db	32
   709   007FA2  48                 	db	72	;'H'
   710   007FA3  65                 	db	101	;'e'
   711   007FA4  6C                 	db	108	;'l'
   712   007FA5  70                 	db	112	;'p'
   713   007FA6  20                 	db	32
   714   007FA7  6D                 	db	109	;'m'
   715   007FA8  65                 	db	101	;'e'
   716   007FA9  6E                 	db	110	;'n'
   717   007FAA  75                 	db	117	;'u'
   718   007FAB  0D                 	db	13
   719   007FAC  0A                 	db	10
   720   007FAD  00                 	db	0
   721   007FAE                     STR_38:
   722   007FAE  25                 	db	37
   723   007FAF  75                 	db	117	;'u'
   724   007FB0  20                 	db	32
   725   007FB1  2D                 	db	45
   726   007FB2  20                 	db	32
   727   007FB3  25                 	db	37
   728   007FB4  75                 	db	117	;'u'
   729   007FB5  20                 	db	32
   730   007FB6  3D                 	db	61	;'='
   731   007FB7  20                 	db	32
   732   007FB8  25                 	db	37
   733   007FB9  75                 	db	117	;'u'
   734   007FBA  0A                 	db	10
   735   007FBB  0D                 	db	13
   736   007FBC  00                 	db	0
   737   007FBD                     STR_42:
   738   007FBD  75                 	db	117	;'u'
   739   007FBE  6E                 	db	110	;'n'
   740   007FBF  6B                 	db	107	;'k'
   741   007FC0  6E                 	db	110	;'n'
   742   007FC1  6F                 	db	111	;'o'
   743   007FC2  77                 	db	119	;'w'
   744   007FC3  6E                 	db	110	;'n'
   745   007FC4  20                 	db	32
   746   007FC5  6B                 	db	107	;'k'
   747   007FC6  65                 	db	101	;'e'
   748   007FC7  79                 	db	121	;'y'
   749   007FC8  0D                 	db	13
   750   007FC9  0A                 	db	10
   751   007FCA  00                 	db	0
   752   007FCB                     STR_1:
   753   007FCB  69                 	db	105	;'i'
   754   007FCC  6E                 	db	110	;'n'
   755   007FCD  4C                 	db	76	;'L'
   756   007FCE  61                 	db	97	;'a'
   757   007FCF  62                 	db	98	;'b'
   758   007FD0  20                 	db	32
   759   007FD1  30                 	db	48	;'0'
   760   007FD2  38                 	db	56	;'8'
   761   007FD3  0D                 	db	13
   762   007FD4  0A                 	db	10
   763   007FD5  00                 	db	0
   764   007FD6                     STR_3:
   765   007FD6  44                 	db	68	;'D'
   766   007FD7  65                 	db	101	;'e'
   767   007FD8  76                 	db	118	;'v'
   768   007FD9  27                 	db	39
   769   007FDA  32                 	db	50	;'2'
   770   007FDB  31                 	db	49	;'1'
   771   007FDC  0D                 	db	13
   772   007FDD  0A                 	db	10
   773   007FDE  00                 	db	0
   774   007FDF                     STR_8:
   775   007FDF  6F                 	db	111	;'o'
   776   007FE0  3A                 	db	58	;':'
   777   007FE1  20                 	db	32
   778   007FE2  6B                 	db	107	;'k'
   779   007FE3  0D                 	db	13
   780   007FE4  0A                 	db	10
   781   007FE5  00                 	db	0
   782   007FE6                     STR_26:
   783   007FE6  53                 	db	83	;'S'
   784   007FE7  5B                 	db	91	;'['
   785   007FE8  25                 	db	37
   786   007FE9  75                 	db	117	;'u'
   787   007FEA  5D                 	db	93	;']'
   788   007FEB  20                 	db	32
   789   007FEC  00                 	db	0
   790   007FED                     STR_36:
   791   007FED  0A                 	db	10
   792   007FEE  0D                 	db	13
   793   007FEF  0A                 	db	10
   794   007FF0  0D                 	db	13
   795   007FF1  00                 	db	0
   796   007FF2                     STR_5:
   797   007FF2  25                 	db	37
   798   007FF3  63                 	db	99	;'c'
   799   007FF4  0A                 	db	10
   800   007FF5  0D                 	db	13
   801   007FF6  00                 	db	0
   802   007FF7                     STR_29:
   803   007FF7  25                 	db	37
   804   007FF8  75                 	db	117	;'u'
   805   007FF9  20                 	db	32
   806   007FFA  00                 	db	0
   807   007FFB                     STR_4:
   808   007FFB  3E                 	db	62	;'>'
   809   007FFC  20                 	db	32
   810   007FFD  00                 	db	0
   811   007FFE  00                 	db	0	; dummy byte at the end
   812   000000                     
   813                           ; #config settings
   814                           
   815                           	psect	cinit
   816   00136E                     __pcinit:
   817                           	callstack 0
   818   00136E                     start_initialization:
   819                           	callstack 0
   820   00136E                     __initialization:
   821                           	callstack 0
   822                           
   823                           ; Initialize objects allocated to BANK0 (1 bytes)
   824                           ; load TBLPTR registers with __pidataBANK0
   825   00136E  0E57               	movlw	low __pidataBANK0
   826   001370  6EF6               	movwf	tblptrl,c
   827   001372  0E16               	movlw	high __pidataBANK0
   828   001374  6EF7               	movwf	tblptrh,c
   829   001376  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   830   001378  6EF8               	movwf	tblptru,c
   831   00137A  0009               	tblrd		*+	;fetch initializer
   832   00137C  CFF5 F0D7          	movff	tablat,__pdataBANK0
   833                           
   834                           ; Initialize objects allocated to COMRAM (1 bytes)
   835                           ; load TBLPTR registers with __pidataCOMRAM
   836   001380  0E56               	movlw	low __pidataCOMRAM
   837   001382  6EF6               	movwf	tblptrl,c
   838   001384  0E16               	movlw	high __pidataCOMRAM
   839   001386  6EF7               	movwf	tblptrh,c
   840   001388  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   841   00138A  6EF8               	movwf	tblptru,c
   842   00138C  0009               	tblrd		*+	;fetch initializer
   843   00138E  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   844                           
   845                           ; Clear objects allocated to BANK0 (35 bytes)
   846   001392  EE00  F0B4         	lfsr	0,__pbssBANK0
   847   001396  0E23               	movlw	35
   848   001398                     clear_0:
   849   001398  6AEE               	clrf	postinc0,c
   850   00139A  06E8               	decf	wreg,f,c
   851   00139C  E1FD               	bnz	clear_0
   852                           
   853                           ; Clear objects allocated to COMRAM (17 bytes)
   854   00139E  EE00  F03B         	lfsr	0,__pbssCOMRAM
   855   0013A2  0E11               	movlw	17
   856   0013A4                     clear_1:
   857   0013A4  6AEE               	clrf	postinc0,c
   858   0013A6  06E8               	decf	wreg,f,c
   859   0013A8  E1FD               	bnz	clear_1
   860   0013AA                     end_of_initialization:
   861                           	callstack 0
   862   0013AA                     __end_of__initialization:
   863                           	callstack 0
   864   0013AA  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   865   0013AC  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   866   0013AE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   867   0013B0  6EF8               	movwf	tblptru,c
   868   0013B2  0100               	movlb	0
   869   0013B4  EF16  F000         	goto	_main	;jump to C main() function
   870                           
   871                           	psect	bssCOMRAM
   872   00003B                     __pbssCOMRAM:
   873                           	callstack 0
   874   00003B                     _width:
   875                           	callstack 0
   876   00003B                     	ds	2
   877   00003D                     _prec:
   878                           	callstack 0
   879   00003D                     	ds	2
   880   00003F                     _timer0ReloadVal:
   881                           	callstack 0
   882   00003F                     	ds	2
   883   000041                     _TMR0_InterruptHandler:
   884                           	callstack 0
   885   000041                     	ds	2
   886   000043                     _EUSART1_OverrunErrorHandler:
   887                           	callstack 0
   888   000043                     	ds	2
   889   000045                     _EUSART1_FramingErrorHandler:
   890                           	callstack 0
   891   000045                     	ds	2
   892   000047                     _ADC_InterruptHandler:
   893                           	callstack 0
   894   000047                     	ds	2
   895   000049                     _flags:
   896                           	callstack 0
   897   000049                     	ds	1
   898   00004A                     _sampling:
   899                           	callstack 0
   900   00004A                     	ds	1
   901   00004B                     _eusart1RxLastError:
   902                           	callstack 0
   903   00004B                     	ds	1
   904                           
   905                           	psect	dataCOMRAM
   906   00004C                     __pdataCOMRAM:
   907                           	callstack 0
   908   00004C                     sampleTMR0ISR@state:
   909                           	callstack 0
   910   00004C                     	ds	1
   911                           
   912                           	psect	bssBANK0
   913   0000B4                     __pbssBANK0:
   914                           	callstack 0
   915   0000B4                     _EUSART1_ErrorHandler:
   916                           	callstack 0
   917   0000B4                     	ds	2
   918   0000B6                     _sampled:
   919                           	callstack 0
   920   0000B6                     	ds	1
   921   0000B7                     _dbuf:
   922                           	callstack 0
   923   0000B7                     	ds	32
   924                           
   925                           	psect	dataBANK0
   926   0000D7                     __pdataBANK0:
   927                           	callstack 0
   928   0000D7                     _threshold:
   929                           	callstack 0
   930   0000D7                     	ds	1
   931                           
   932                           	psect	cstackBANK2
   933   000200                     __pcstackBANK2:
   934                           	callstack 0
   935   000200                     main@crossings:
   936                           	callstack 0
   937                           
   938                           ; 256 bytes @ 0x0
   939   000200                     	ds	256
   940                           
   941                           	psect	cstackBANK1
   942   000100                     __pcstackBANK1:
   943                           	callstack 0
   944   000100                     main@samples:
   945                           	callstack 0
   946                           
   947                           ; 256 bytes @ 0x0
   948   000100                     	ds	256
   949                           
   950                           	psect	cstackBANK0
   951   000060                     __pcstackBANK0:
   952                           	callstack 0
   953   000060                     ??_dtoa:
   954   000060                     ??_utoa:
   955                           
   956                           ; 1 bytes @ 0x0
   957   000060                     	ds	8
   958   000068                     _dtoa$1458:
   959                           	callstack 0
   960   000068                     utoa@w:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x8
   964   000068                     	ds	2
   965   00006A                     dtoa@p:
   966                           	callstack 0
   967   00006A                     utoa@p:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0xA
   971   00006A                     	ds	2
   972   00006C                     dtoa@w:
   973                           	callstack 0
   974   00006C                     utoa@n:
   975                           	callstack 0
   976                           
   977                           ; 8 bytes @ 0xC
   978   00006C                     	ds	2
   979   00006E                     dtoa@n:
   980                           	callstack 0
   981                           
   982                           ; 8 bytes @ 0xE
   983   00006E                     	ds	6
   984   000074                     utoa@i:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x14
   988   000074                     	ds	2
   989   000076                     dtoa@s:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x16
   993   000076                     	ds	1
   994   000077                     dtoa@i:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x17
   998   000077                     	ds	2
   999   000079                     vfpfcnvrt@fp:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x19
  1003   000079                     	ds	2
  1004   00007B                     vfpfcnvrt@fmt:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x1B
  1008   00007B                     	ds	2
  1009   00007D                     vfpfcnvrt@ap:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x1D
  1013   00007D                     	ds	2
  1014   00007F                     ??_vfpfcnvrt:
  1015                           
  1016                           ; 1 bytes @ 0x1F
  1017   00007F                     	ds	4
  1018   000083                     vfpfcnvrt@c:
  1019                           	callstack 0
  1020                           
  1021                           ; 1 bytes @ 0x23
  1022   000083                     	ds	1
  1023   000084                     vfpfcnvrt@convarg:
  1024                           	callstack 0
  1025                           
  1026                           ; 8 bytes @ 0x24
  1027   000084                     	ds	8
  1028   00008C                     vfpfcnvrt@cp:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x2C
  1032   00008C                     	ds	2
  1033   00008E                     ?_vfprintf:
  1034                           	callstack 0
  1035   00008E                     vfprintf@fp:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x2E
  1039   00008E                     	ds	2
  1040   000090                     vfprintf@fmt:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x30
  1044   000090                     	ds	2
  1045   000092                     vfprintf@ap:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x32
  1049   000092                     	ds	2
  1050   000094                     ?_printf:
  1051                           	callstack 0
  1052   000094                     printf@fmt:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x34
  1056   000094                     	ds	8
  1057   00009C                     printf@ap:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x3C
  1061   00009C                     	ds	2
  1062   00009E                     ??_main:
  1063                           
  1064                           ; 1 bytes @ 0x3E
  1065   00009E                     	ds	8
  1066   0000A6                     main@frequency:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x46
  1070   0000A6                     	ds	4
  1071   0000AA                     main@period:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x4A
  1075   0000AA                     	ds	2
  1076   0000AC                     main@cmd:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x4C
  1080   0000AC                     	ds	1
  1081   0000AD                     main@sample:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x4D
  1085   0000AD                     	ds	1
  1086   0000AE                     main@j:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x4E
  1090   0000AE                     	ds	1
  1091   0000AF                     main@avgPeriod:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x4F
  1095   0000AF                     	ds	2
  1096   0000B1                     main@ci:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x51
  1100   0000B1                     	ds	1
  1101   0000B2                     main@i:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x52
  1105   0000B2                     	ds	2
  1106                           
  1107                           	psect	cstackCOMRAM
  1108   000001                     __pcstackCOMRAM:
  1109                           	callstack 0
  1110   000001                     ?_TMR0_ReadTimer:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x0
  1114   000001                     	ds	2
  1115   000003                     ??_TMR0_ReadTimer:
  1116                           
  1117                           ; 1 bytes @ 0x2
  1118   000003                     	ds	2
  1119   000005                     TMR0_ReadTimer@readVal:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x4
  1123   000005                     	ds	2
  1124   000007                     TMR0_ReadTimer@readValLow:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x6
  1128   000007                     	ds	1
  1129   000008                     TMR0_ReadTimer@readValHigh:
  1130                           	callstack 0
  1131                           
  1132                           ; 1 bytes @ 0x7
  1133   000008                     	ds	1
  1134   000009                     i2TMR0_WriteTimer@timerVal:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x8
  1138   000009                     	ds	2
  1139   00000B                     ??_sampleTMR0ISR:
  1140   00000B                     
  1141                           ; 1 bytes @ 0xA
  1142   00000B                     	ds	5
  1143   000010                     ??_INTERRUPT_InterruptManager:
  1144                           
  1145                           ; 1 bytes @ 0xF
  1146   000010                     	ds	2
  1147   000012                     ?___wmul:
  1148                           	callstack 0
  1149   000012                     ?___aldiv:
  1150                           	callstack 0
  1151   000012                     ?___aodiv:
  1152                           	callstack 0
  1153   000012                     ?___aomod:
  1154                           	callstack 0
  1155   000012                     ?___lodiv:
  1156                           	callstack 0
  1157   000012                     ?___lomod:
  1158                           	callstack 0
  1159   000012                     EUSART1_Write@txData:
  1160                           	callstack 0
  1161   000012                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1162                           	callstack 0
  1163   000012                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1164                           	callstack 0
  1165   000012                     EUSART1_SetErrorHandler@interruptHandler:
  1166                           	callstack 0
  1167   000012                     TMR0_WriteTimer@timerVal:
  1168                           	callstack 0
  1169   000012                     TMR0_SetInterruptHandler@InterruptHandler:
  1170                           	callstack 0
  1171   000012                     ___wmul@multiplier:
  1172                           	callstack 0
  1173   000012                     ___aldiv@dividend:
  1174                           	callstack 0
  1175   000012                     ___aodiv@dividend:
  1176                           	callstack 0
  1177   000012                     ___aomod@dividend:
  1178                           	callstack 0
  1179   000012                     ___lodiv@dividend:
  1180                           	callstack 0
  1181   000012                     ___lomod@dividend:
  1182                           	callstack 0
  1183                           
  1184                           ; 8 bytes @ 0x11
  1185   000012                     	ds	1
  1186   000013                     putch@txData:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x12
  1190   000013                     	ds	1
  1191   000014                     ??_TMR0_Initialize:
  1192   000014                     ___wmul@multiplicand:
  1193                           	callstack 0
  1194   000014                     fputc@c:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x13
  1198   000014                     	ds	2
  1199   000016                     ___wmul@product:
  1200                           	callstack 0
  1201   000016                     fputc@fp:
  1202                           	callstack 0
  1203   000016                     ___aldiv@divisor:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x15
  1207   000016                     	ds	2
  1208   000018                     ??_fputc:
  1209                           
  1210                           ; 1 bytes @ 0x17
  1211   000018                     	ds	2
  1212   00001A                     ___aldiv@counter:
  1213                           	callstack 0
  1214   00001A                     ___aodiv@divisor:
  1215                           	callstack 0
  1216   00001A                     ___aomod@divisor:
  1217                           	callstack 0
  1218   00001A                     ___lodiv@divisor:
  1219                           	callstack 0
  1220   00001A                     ___lomod@divisor:
  1221                           	callstack 0
  1222                           
  1223                           ; 8 bytes @ 0x19
  1224   00001A                     	ds	1
  1225   00001B                     ___aldiv@sign:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x1A
  1229   00001B                     	ds	1
  1230   00001C                     ___aldiv@quotient:
  1231                           	callstack 0
  1232                           
  1233                           ; 4 bytes @ 0x1B
  1234   00001C                     	ds	1
  1235   00001D                     ctoa@fp:
  1236                           	callstack 0
  1237   00001D                     fputs@s:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x1C
  1241   00001D                     	ds	2
  1242   00001F                     ctoa@c:
  1243                           	callstack 0
  1244   00001F                     fputs@fp:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x1E
  1248   00001F                     	ds	1
  1249   000020                     ??_ctoa:
  1250                           
  1251                           ; 1 bytes @ 0x1F
  1252   000020                     	ds	1
  1253   000021                     fputs@c:
  1254                           	callstack 0
  1255   000021                     ctoa@l:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x20
  1259   000021                     	ds	1
  1260   000022                     ___aodiv@counter:
  1261                           	callstack 0
  1262   000022                     ___aomod@counter:
  1263                           	callstack 0
  1264   000022                     ___lomod@counter:
  1265                           	callstack 0
  1266   000022                     fputs@i:
  1267                           	callstack 0
  1268   000022                     ___lodiv@quotient:
  1269                           	callstack 0
  1270                           
  1271                           ; 8 bytes @ 0x21
  1272   000022                     	ds	1
  1273   000023                     ___aodiv@sign:
  1274                           	callstack 0
  1275   000023                     ___aomod@sign:
  1276                           	callstack 0
  1277   000023                     ctoa@w:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x22
  1281   000023                     	ds	1
  1282   000024                     ?_abs:
  1283                           	callstack 0
  1284   000024                     pad@fp:
  1285                           	callstack 0
  1286   000024                     abs@a:
  1287                           	callstack 0
  1288   000024                     ___aodiv@quotient:
  1289                           	callstack 0
  1290                           
  1291                           ; 8 bytes @ 0x23
  1292   000024                     	ds	2
  1293   000026                     ??_abs:
  1294   000026                     pad@buf:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x25
  1298   000026                     	ds	2
  1299   000028                     pad@p:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x27
  1303   000028                     	ds	2
  1304   00002A                     ??_pad:
  1305   00002A                     ___lodiv@counter:
  1306                           	callstack 0
  1307                           
  1308                           ; 1 bytes @ 0x29
  1309   00002A                     	ds	1
  1310   00002B                     pad@i:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0x2A
  1314   00002B                     	ds	2
  1315   00002D                     pad@w:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x2C
  1319   00002D                     	ds	2
  1320   00002F                     dtoa@fp:
  1321                           	callstack 0
  1322   00002F                     utoa@fp:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0x2E
  1326   00002F                     	ds	2
  1327   000031                     dtoa@d:
  1328                           	callstack 0
  1329   000031                     utoa@d:
  1330                           	callstack 0
  1331                           
  1332                           ; 8 bytes @ 0x30
  1333   000031                     	ds	8
  1334   000039                     vfprintf@cfmt:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0x38
  1338   000039                     	ds	2
  1339   00003B                     
  1340                           ; 1 bytes @ 0x3A
  1341 ;;
  1342 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1343 ;;
  1344 ;; *************** function _main *****************
  1345 ;; Defined at:
  1346 ;;		line 48 in file "main.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  crossings     256    0[BANK2 ] unsigned short [128]
  1351 ;;  samples       256    0[BANK1 ] unsigned char [256]
  1352 ;;  frequency       4   70[BANK0 ] unsigned long 
  1353 ;;  i               2   82[BANK0 ] unsigned short 
  1354 ;;  avgPeriod       2   79[BANK0 ] unsigned short 
  1355 ;;  period          2   74[BANK0 ] unsigned short 
  1356 ;;  ci              1   81[BANK0 ] unsigned char 
  1357 ;;  j               1   78[BANK0 ] unsigned char 
  1358 ;;  sample          1   77[BANK0 ] unsigned char 
  1359 ;;  cmd             1   76[BANK0 ] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1369 ;;      Params:         0       0       0       0       0       0       0
  1370 ;;      Locals:         0      14     256     256       0       0       0
  1371 ;;      Temps:          0       8       0       0       0       0       0
  1372 ;;      Totals:         0      22     256     256       0       0       0
  1373 ;;Total ram usage:      534 bytes
  1374 ;; Hardware stack levels required when called: 13
  1375 ;; This function calls:
  1376 ;;		_EUSART1_Read
  1377 ;;		_EUSART1_is_rx_ready
  1378 ;;		_SYSTEM_Initialize
  1379 ;;		_TMR0_SetInterruptHandler
  1380 ;;		_TMR0_WriteTimer
  1381 ;;		___aldiv
  1382 ;;		___wmul
  1383 ;;		_printf
  1384 ;; This function is called by:
  1385 ;;		Startup code after reset
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text0
  1390   00002C                     __ptext0:
  1391                           	callstack 0
  1392   00002C                     _main:
  1393                           	callstack 18
  1394                           
  1395                           ;main.c: 50:     uint16_t i;;main.c: 51:     uint8_t j;;main.c: 52:     char cmd;;main.c
      +                          : 54:     uint8_t samples[256];;main.c: 55:     uint16_t crossings[256/2];;main.c: 56:  
      +                             uint8_t ci = 0;
  1396                           
  1397                           ;incstack = 0
  1398   00002C  0E00               	movlw	0
  1399   00002E  0100               	movlb	0	; () banked
  1400   000030  6FB1               	movwf	main@ci& (0+255),b
  1401                           
  1402                           ;main.c: 60:     uint16_t avgPeriod = 0;
  1403   000032  0E00               	movlw	0
  1404   000034  6FB0               	movwf	(main@avgPeriod+1)& (0+255),b
  1405   000036  0E00               	movlw	0
  1406   000038  6FAF               	movwf	main@avgPeriod& (0+255),b
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;main.c: 61:     uint32_t frequency;;main.c: 63:     SYSTEM_Initialize();
  1410   00003A  ECCE  F00A         	call	_SYSTEM_Initialize	;wreg free
  1411                           
  1412                           ;main.c: 65:     TMR0_WriteTimer(0x0000);
  1413   00003E  0E00               	movlw	0
  1414   000040  6E13               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1415   000042  0E00               	movlw	0
  1416   000044  6E12               	movwf	TMR0_WriteTimer@timerVal^0,c
  1417   000046  EC0A  F00B         	call	_TMR0_WriteTimer	;wreg free
  1418                           
  1419                           ;main.c: 66:     INTCONbits.TMR0IF = 0;
  1420   00004A  94F2               	bcf	242,2,c	;volatile
  1421   00004C                     l290:
  1422   00004C  A4F2               	btfss	242,2,c	;volatile
  1423   00004E  D7FE               	goto	l290
  1424                           
  1425                           ;main.c: 69:     TMR0_SetInterruptHandler(sampleTMR0ISR);
  1426   000050  0EBC               	movlw	low _sampleTMR0ISR
  1427   000052  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1428   000054  0E10               	movlw	high _sampleTMR0ISR
  1429   000056  6E13               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1430   000058  EC0F  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1431                           
  1432                           ;main.c: 70:     (INTCONbits.GIE = 1);
  1433   00005C  8EF2               	bsf	242,7,c	;volatile
  1434                           
  1435                           ;main.c: 71:     (INTCONbits.PEIE = 1);
  1436   00005E  8CF2               	bsf	242,6,c	;volatile
  1437                           
  1438                           ;main.c: 73:     printf("inLab 08\r\n");
  1439   000060  0ECB               	movlw	low STR_1
  1440   000062  0100               	movlb	0	; () banked
  1441   000064  6F94               	movwf	printf@fmt& (0+255),b
  1442   000066  0E7F               	movlw	high STR_1
  1443   000068  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1444   00006A  EC98  F00A         	call	_printf	;wreg free
  1445                           
  1446                           ;main.c: 74:     printf("Microphone experiments\r\n");
  1447   00006E  0EF1               	movlw	low STR_2
  1448   000070  0100               	movlb	0	; () banked
  1449   000072  6F94               	movwf	printf@fmt& (0+255),b
  1450   000074  0E7E               	movlw	high STR_2
  1451   000076  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1452   000078  EC98  F00A         	call	_printf	;wreg free
  1453                           
  1454                           ;main.c: 75:     printf("Dev'21\r\n");
  1455   00007C  0ED6               	movlw	low STR_3
  1456   00007E  0100               	movlb	0	; () banked
  1457   000080  6F94               	movwf	printf@fmt& (0+255),b
  1458   000082  0E7F               	movlw	high STR_3
  1459   000084  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1460   000086  EC98  F00A         	call	_printf	;wreg free
  1461                           
  1462                           ;main.c: 76:     printf("> ");
  1463   00008A  0EFB               	movlw	low STR_4
  1464   00008C  0100               	movlb	0	; () banked
  1465   00008E  6F94               	movwf	printf@fmt& (0+255),b
  1466   000090  0E7F               	movlw	high STR_4
  1467   000092  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1468   000094  EC98  F00A         	call	_printf	;wreg free
  1469   000098                     l2968:
  1470                           
  1471                           ;main.c: 79:     {;main.c: 80:         if ((EUSART1_is_rx_ready()))
  1472   000098  ECFF  F00A         	call	_EUSART1_is_rx_ready	;wreg free
  1473   00009C  0900               	iorlw	0
  1474   00009E  B4D8               	btfsc	status,2,c
  1475   0000A0  D7FB               	goto	l2968
  1476                           
  1477                           ;main.c: 81:         {;main.c: 82:             cmd = EUSART1_Read();
  1478   0000A2  ECE6  F00A         	call	_EUSART1_Read	;wreg free
  1479   0000A6  0100               	movlb	0	; () banked
  1480   0000A8  6FAC               	movwf	main@cmd& (0+255),b
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;main.c: 83:             printf("%c\n\r", cmd);
  1484   0000AA  0EF2               	movlw	low STR_5
  1485   0000AC  6F94               	movwf	printf@fmt& (0+255),b
  1486   0000AE  0E7F               	movlw	high STR_5
  1487   0000B0  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1488   0000B2  C0AC  F096         	movff	main@cmd,?_printf+2
  1489   0000B6  6B97               	clrf	(?_printf+3)& (0+255),b
  1490   0000B8  EC98  F00A         	call	_printf	;wreg free
  1491                           
  1492                           ;main.c: 84:             switch (cmd)
  1493   0000BC  D2D8               	goto	l3144
  1494   0000BE                     l2974:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;main.c: 87:                     printf("------------------------------\r\n");
  1498   0000BE  0E4D               	movlw	low STR_6
  1499   0000C0  6F94               	movwf	printf@fmt& (0+255),b
  1500   0000C2  0E7E               	movlw	high STR_6
  1501   0000C4  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1502   0000C6  EC98  F00A         	call	_printf	;wreg free
  1503                           
  1504                           ;main.c: 88:                     printf("?: Help menu\r\n");
  1505   0000CA  0E9F               	movlw	low STR_7
  1506   0000CC  0100               	movlb	0	; () banked
  1507   0000CE  6F94               	movwf	printf@fmt& (0+255),b
  1508   0000D0  0E7F               	movlw	high STR_7
  1509   0000D2  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1510   0000D4  EC98  F00A         	call	_printf	;wreg free
  1511                           
  1512                           ;main.c: 89:                     printf("o: k\r\n");
  1513   0000D8  0EDF               	movlw	low STR_8
  1514   0000DA  0100               	movlb	0	; () banked
  1515   0000DC  6F94               	movwf	printf@fmt& (0+255),b
  1516   0000DE  0E7F               	movlw	high STR_8
  1517   0000E0  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1518   0000E2  EC98  F00A         	call	_printf	;wreg free
  1519                           
  1520                           ;main.c: 90:                     printf("Z: Reset processor\r\n");
  1521   0000E6  0E3A               	movlw	low STR_9
  1522   0000E8  0100               	movlb	0	; () banked
  1523   0000EA  6F94               	movwf	printf@fmt& (0+255),b
  1524   0000EC  0E7F               	movlw	high STR_9
  1525   0000EE  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1526   0000F0  EC98  F00A         	call	_printf	;wreg free
  1527                           
  1528                           ;main.c: 91:                     printf("z: Clear the terminal\r\n");
  1529   0000F4  0E0A               	movlw	low STR_10
  1530   0000F6  0100               	movlb	0	; () banked
  1531   0000F8  6F94               	movwf	printf@fmt& (0+255),b
  1532   0000FA  0E7F               	movlw	high STR_10
  1533   0000FC  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1534   0000FE  EC98  F00A         	call	_printf	;wreg free
  1535                           
  1536                           ;main.c: 92:                     printf("T: increase sampling threshold\n\r");
  1537   000102  0EB0               	movlw	low STR_11
  1538   000104  0100               	movlb	0	; () banked
  1539   000106  6F94               	movwf	printf@fmt& (0+255),b
  1540   000108  0E7E               	movlw	high STR_11
  1541   00010A  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1542   00010C  EC98  F00A         	call	_printf	;wreg free
  1543                           
  1544                           ;main.c: 93:                     printf("t: decrease sampling threshold\n\r");
  1545   000110  0E8F               	movlw	low STR_12
  1546   000112  0100               	movlb	0	; () banked
  1547   000114  6F94               	movwf	printf@fmt& (0+255),b
  1548   000116  0E7E               	movlw	high STR_12
  1549   000118  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1550   00011A  EC98  F00A         	call	_printf	;wreg free
  1551                           
  1552                           ;main.c: 94:                     printf("f: compute the period from %d samples from ADC\
      +                          r\n", 256);
  1553   00011E  0EF7               	movlw	low STR_13
  1554   000120  0100               	movlb	0	; () banked
  1555   000122  6F94               	movwf	printf@fmt& (0+255),b
  1556   000124  0E7D               	movlw	high STR_13
  1557   000126  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1558   000128  0E01               	movlw	1
  1559   00012A  6F97               	movwf	(?_printf+3)& (0+255),b
  1560   00012C  0E00               	movlw	0
  1561   00012E  6F96               	movwf	(?_printf+2)& (0+255),b
  1562   000130  EC98  F00A         	call	_printf	;wreg free
  1563                           
  1564                           ;main.c: 95:                     printf("s: gather %d samples from ADC\r\n", 256);
  1565   000134  0ED1               	movlw	low STR_14
  1566   000136  0100               	movlb	0	; () banked
  1567   000138  6F94               	movwf	printf@fmt& (0+255),b
  1568   00013A  0E7E               	movlw	high STR_14
  1569   00013C  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1570   00013E  0E01               	movlw	1
  1571   000140  6F97               	movwf	(?_printf+3)& (0+255),b
  1572   000142  0E00               	movlw	0
  1573   000144  6F96               	movwf	(?_printf+2)& (0+255),b
  1574   000146  EC98  F00A         	call	_printf	;wreg free
  1575                           
  1576                           ;main.c: 96:                     printf("0-9: switch sampled channel to ANx\r\n");
  1577   00014A  0E28               	movlw	low STR_15
  1578   00014C  0100               	movlb	0	; () banked
  1579   00014E  6F94               	movwf	printf@fmt& (0+255),b
  1580   000150  0E7E               	movlw	high STR_15
  1581   000152  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1582   000154  EC98  F00A         	call	_printf	;wreg free
  1583                           
  1584                           ;main.c: 97:                     printf("------------------------------\r\n");
  1585   000158  0E4D               	movlw	low STR_6
  1586   00015A  0100               	movlb	0	; () banked
  1587   00015C  6F94               	movwf	printf@fmt& (0+255),b
  1588   00015E  0E7E               	movlw	high STR_6
  1589   000160  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1590   000162  EC98  F00A         	call	_printf	;wreg free
  1591                           
  1592                           ;main.c: 98:                     break;
  1593   000166  D2A5               	goto	l3146
  1594   000168                     l2976:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;main.c: 100:                     printf(" k\r\n");
  1598   000168  0EE1               	movlw	low (STR_8+2)
  1599   00016A  6F94               	movwf	printf@fmt& (0+255),b
  1600   00016C  0E7F               	movlw	high (STR_8+2)
  1601   00016E  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1602   000170  EC98  F00A         	call	_printf	;wreg free
  1603                           
  1604                           ;main.c: 101:                     break;
  1605   000174  D29E               	goto	l3146
  1606   000176                     l2978:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;main.c: 103:                     for (i = 0; i < 40; i++) printf("\n\r");
  1610   000176  0E00               	movlw	0
  1611   000178  6FB3               	movwf	(main@i+1)& (0+255),b
  1612   00017A  0E00               	movlw	0
  1613   00017C  6FB2               	movwf	main@i& (0+255),b
  1614   00017E                     l2984:
  1615                           
  1616                           ; BSR set to: 0
  1617   00017E  0EEF               	movlw	low (STR_36+2)
  1618   000180  6F94               	movwf	printf@fmt& (0+255),b
  1619   000182  0E7F               	movlw	high (STR_36+2)
  1620   000184  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1621   000186  EC98  F00A         	call	_printf	;wreg free
  1622   00018A  0100               	movlb	0	; () banked
  1623   00018C  4BB2               	infsnz	main@i& (0+255),f,b
  1624   00018E  2BB3               	incf	(main@i+1)& (0+255),f,b
  1625                           
  1626                           ; BSR set to: 0
  1627   000190  51B3               	movf	(main@i+1)& (0+255),w,b
  1628   000192  E104               	bnz	u2060
  1629   000194  0E28               	movlw	40
  1630   000196  5DB2               	subwf	main@i& (0+255),w,b
  1631   000198  A0D8               	btfss	status,0,c
  1632   00019A  D7F1               	goto	l2984
  1633   00019C                     u2060:
  1634                           
  1635                           ; BSR set to: 0
  1636   00019C  00FF               	reset		;# 
  1637                           
  1638                           ;main.c: 105:                     break;
  1639   00019E  D289               	goto	l3146
  1640   0001A0                     l2990:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;main.c: 107:                     for (i = 0; i < 40; i++) printf("\n\r");
  1644   0001A0  0E00               	movlw	0
  1645   0001A2  6FB3               	movwf	(main@i+1)& (0+255),b
  1646   0001A4  0E00               	movlw	0
  1647   0001A6  6FB2               	movwf	main@i& (0+255),b
  1648   0001A8                     l2996:
  1649                           
  1650                           ; BSR set to: 0
  1651   0001A8  0EEF               	movlw	low (STR_36+2)
  1652   0001AA  6F94               	movwf	printf@fmt& (0+255),b
  1653   0001AC  0E7F               	movlw	high (STR_36+2)
  1654   0001AE  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1655   0001B0  EC98  F00A         	call	_printf	;wreg free
  1656   0001B4  0100               	movlb	0	; () banked
  1657   0001B6  4BB2               	infsnz	main@i& (0+255),f,b
  1658   0001B8  2BB3               	incf	(main@i+1)& (0+255),f,b
  1659                           
  1660                           ; BSR set to: 0
  1661   0001BA  51B3               	movf	(main@i+1)& (0+255),w,b
  1662   0001BC  E105               	bnz	u2070
  1663   0001BE  0E28               	movlw	40
  1664   0001C0  5DB2               	subwf	main@i& (0+255),w,b
  1665   0001C2  B0D8               	btfsc	status,0,c
  1666   0001C4  D276               	goto	l3146
  1667   0001C6  D7F0               	goto	l2996
  1668   0001C8                     u2070:
  1669   0001C8  D274               	goto	l3146
  1670   0001CA                     l3002:
  1671                           
  1672                           ; BSR set to: 0
  1673                           ;main.c: 110:                     threshold += 5;
  1674   0001CA  0E05               	movlw	5
  1675   0001CC  27D7               	addwf	_threshold& (0+255),f,b
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 111:                     printf("upper trigger: %u\n\r", (128 + threshold));
  1679   0001CE  0E64               	movlw	low STR_20
  1680   0001D0  6F94               	movwf	printf@fmt& (0+255),b
  1681   0001D2  0E7F               	movlw	high STR_20
  1682   0001D4  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1683   0001D6  0E80               	movlw	128
  1684   0001D8  25D7               	addwf	_threshold& (0+255),w,b
  1685   0001DA  6F96               	movwf	(?_printf+2)& (0+255),b
  1686   0001DC  6B97               	clrf	(?_printf+3)& (0+255),b
  1687   0001DE  0E00               	movlw	0
  1688   0001E0  2397               	addwfc	(?_printf+3)& (0+255),f,b
  1689   0001E2  EC98  F00A         	call	_printf	;wreg free
  1690                           
  1691                           ;main.c: 112:                     printf("lower trigger: %u\n\r", (128 - threshold));
  1692   0001E6  0E78               	movlw	low STR_21
  1693   0001E8  0100               	movlb	0	; () banked
  1694   0001EA  6F94               	movwf	printf@fmt& (0+255),b
  1695   0001EC  0E7F               	movlw	high STR_21
  1696   0001EE  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1697   0001F0  51D7               	movf	_threshold& (0+255),w,b
  1698   0001F2  0880               	sublw	128
  1699   0001F4  6F96               	movwf	(?_printf+2)& (0+255),b
  1700   0001F6  0E00               	movlw	0
  1701   0001F8  A0D8               	btfss	status,0,c
  1702   0001FA  2AE8               	incf	wreg,f,c
  1703   0001FC  0800               	sublw	0
  1704   0001FE  6F97               	movwf	(?_printf+3)& (0+255),b
  1705   000200  EC98  F00A         	call	_printf	;wreg free
  1706                           
  1707                           ;main.c: 113:                     break;
  1708   000204  D256               	goto	l3146
  1709   000206                     l3008:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;main.c: 115:                     threshold -= 5;
  1713   000206  0E05               	movlw	5
  1714   000208  5FD7               	subwf	_threshold& (0+255),f,b
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;main.c: 116:                     printf("upper trigger: %u\n\r", (128 + threshold));
  1718   00020A  0E64               	movlw	low STR_20
  1719   00020C  6F94               	movwf	printf@fmt& (0+255),b
  1720   00020E  0E7F               	movlw	high STR_20
  1721   000210  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1722   000212  0E80               	movlw	128
  1723   000214  25D7               	addwf	_threshold& (0+255),w,b
  1724   000216  6F96               	movwf	(?_printf+2)& (0+255),b
  1725   000218  6B97               	clrf	(?_printf+3)& (0+255),b
  1726   00021A  0E00               	movlw	0
  1727   00021C  2397               	addwfc	(?_printf+3)& (0+255),f,b
  1728   00021E  EC98  F00A         	call	_printf	;wreg free
  1729                           
  1730                           ;main.c: 117:                     printf("lower trigger: %u\n\r", (128 - threshold));
  1731   000222  0E78               	movlw	low STR_21
  1732   000224  0100               	movlb	0	; () banked
  1733   000226  6F94               	movwf	printf@fmt& (0+255),b
  1734   000228  0E7F               	movlw	high STR_21
  1735   00022A  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1736   00022C  51D7               	movf	_threshold& (0+255),w,b
  1737   00022E  0880               	sublw	128
  1738   000230  6F96               	movwf	(?_printf+2)& (0+255),b
  1739   000232  0E00               	movlw	0
  1740   000234  A0D8               	btfss	status,0,c
  1741   000236  2AE8               	incf	wreg,f,c
  1742   000238  0800               	sublw	0
  1743   00023A  6F97               	movwf	(?_printf+3)& (0+255),b
  1744   00023C  EC98  F00A         	call	_printf	;wreg free
  1745                           
  1746                           ;main.c: 118:                     break;
  1747   000240  D238               	goto	l3146
  1748   000242                     l3014:
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;main.c: 121:                     {;main.c: 122:                         printf("taking 
      +                          samples: \n\r");
  1752   000242  0E8C               	movlw	low STR_24
  1753   000244  6F94               	movwf	printf@fmt& (0+255),b
  1754   000246  0E7F               	movlw	high STR_24
  1755   000248  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1756   00024A  EC98  F00A         	call	_printf	;wreg free
  1757                           
  1758                           ;main.c: 123:                         sampling = 1;
  1759   00024E  0E01               	movlw	1
  1760   000250  6E4A               	movwf	_sampling^0,c
  1761                           
  1762                           ;main.c: 124:                         for(i = 0; i < 256; i++)
  1763   000252  0E00               	movlw	0
  1764   000254  0100               	movlb	0	; () banked
  1765   000256  6FB3               	movwf	(main@i+1)& (0+255),b
  1766   000258  0E00               	movlw	0
  1767   00025A  6FB2               	movwf	main@i& (0+255),b
  1768   00025C                     l3024:
  1769                           
  1770                           ; BSR set to: 0
  1771   00025C  51B6               	movf	_sampled& (0+255),w,b
  1772   00025E  B4D8               	btfsc	status,2,c
  1773   000260  D7FD               	goto	l3024
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;main.c: 127:                             samples[i] = ADRESH;
  1777   000262  0E00               	movlw	low main@samples
  1778   000264  25B2               	addwf	main@i& (0+255),w,b
  1779   000266  6ED9               	movwf	fsr2l,c
  1780   000268  0E01               	movlw	high main@samples
  1781   00026A  21B3               	addwfc	(main@i+1)& (0+255),w,b
  1782   00026C  6EDA               	movwf	fsr2h,c
  1783   00026E  CFC4 FFDF          	movff	4036,indf2	;volatile
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 128:                             sampled = 0;
  1787   000272  0E00               	movlw	0
  1788   000274  6FB6               	movwf	_sampled& (0+255),b
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 130:                         }
  1792   000276  4BB2               	infsnz	main@i& (0+255),f,b
  1793   000278  2BB3               	incf	(main@i+1)& (0+255),f,b
  1794                           
  1795                           ; BSR set to: 0
  1796   00027A  05B3               	decf	(main@i+1)& (0+255),w,b
  1797   00027C  A0D8               	btfss	status,0,c
  1798   00027E  D7EE               	goto	l3024
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;main.c: 131:                         sampling = 0;
  1802   000280  0E00               	movlw	0
  1803   000282  6E4A               	movwf	_sampling^0,c
  1804                           
  1805                           ;main.c: 133:                     };main.c: 135:                     {;main.c: 137:     
      +                                              for(i = 1; i < 256; i++)
  1806   000284  0E00               	movlw	0
  1807   000286  6FB3               	movwf	(main@i+1)& (0+255),b
  1808   000288  0E01               	movlw	1
  1809   00028A  6FB2               	movwf	main@i& (0+255),b
  1810   00028C                     l3040:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;main.c: 138:                         {;main.c: 139:                             if(((sa
      +                          mples[i-1] <= 128) && (samples[i] > 128)) || ((samples[i-1] > 128) && (samples[i] <= 128
      +                          )))
  1814   00028C  0EFF               	movlw	255
  1815   00028E  25B2               	addwf	main@i& (0+255),w,b
  1816   000290  6F9E               	movwf	??_main& (0+255),b
  1817   000292  0EFF               	movlw	255
  1818   000294  21B3               	addwfc	(main@i+1)& (0+255),w,b
  1819   000296  6F9F               	movwf	(??_main+1)& (0+255),b
  1820   000298  0E00               	movlw	low main@samples
  1821   00029A  259E               	addwf	??_main& (0+255),w,b
  1822   00029C  6ED9               	movwf	fsr2l,c
  1823   00029E  0E01               	movlw	high main@samples
  1824   0002A0  219F               	addwfc	(??_main+1)& (0+255),w,b
  1825   0002A2  6EDA               	movwf	fsr2h,c
  1826   0002A4  0E81               	movlw	129
  1827   0002A6  60DF               	cpfslt	indf2,c
  1828   0002A8  D009               	goto	u2110
  1829                           
  1830                           ; BSR set to: 0
  1831   0002AA  0E00               	movlw	low main@samples
  1832   0002AC  25B2               	addwf	main@i& (0+255),w,b
  1833   0002AE  6ED9               	movwf	fsr2l,c
  1834   0002B0  0E01               	movlw	high main@samples
  1835   0002B2  21B3               	addwfc	(main@i+1)& (0+255),w,b
  1836   0002B4  6EDA               	movwf	fsr2h,c
  1837   0002B6  0E81               	movlw	129
  1838   0002B8  60DF               	cpfslt	indf2,c
  1839   0002BA  D018               	goto	u2130
  1840   0002BC                     u2110:
  1841                           
  1842                           ; BSR set to: 0
  1843   0002BC  0EFF               	movlw	255
  1844   0002BE  25B2               	addwf	main@i& (0+255),w,b
  1845   0002C0  6F9E               	movwf	??_main& (0+255),b
  1846   0002C2  0EFF               	movlw	255
  1847   0002C4  21B3               	addwfc	(main@i+1)& (0+255),w,b
  1848   0002C6  6F9F               	movwf	(??_main+1)& (0+255),b
  1849   0002C8  0E00               	movlw	low main@samples
  1850   0002CA  259E               	addwf	??_main& (0+255),w,b
  1851   0002CC  6ED9               	movwf	fsr2l,c
  1852   0002CE  0E01               	movlw	high main@samples
  1853   0002D0  219F               	addwfc	(??_main+1)& (0+255),w,b
  1854   0002D2  6EDA               	movwf	fsr2h,c
  1855   0002D4  0E80               	movlw	128
  1856   0002D6  64DF               	cpfsgt	indf2,c
  1857   0002D8  D016               	goto	l3052
  1858                           
  1859                           ; BSR set to: 0
  1860   0002DA  0E00               	movlw	low main@samples
  1861   0002DC  25B2               	addwf	main@i& (0+255),w,b
  1862   0002DE  6ED9               	movwf	fsr2l,c
  1863   0002E0  0E01               	movlw	high main@samples
  1864   0002E2  21B3               	addwfc	(main@i+1)& (0+255),w,b
  1865   0002E4  6EDA               	movwf	fsr2h,c
  1866   0002E6  0E81               	movlw	129
  1867   0002E8  60DF               	cpfslt	indf2,c
  1868   0002EA  D00D               	goto	l3052
  1869   0002EC                     u2130:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 140:                             {;main.c: 142:                                
      +                           crossings[ci] = i;
  1873   0002EC  51B1               	movf	main@ci& (0+255),w,b
  1874   0002EE  0D02               	mullw	2
  1875   0002F0  0E00               	movlw	low main@crossings
  1876   0002F2  24F3               	addwf	243,w,c
  1877   0002F4  6ED9               	movwf	fsr2l,c
  1878   0002F6  0E02               	movlw	high main@crossings
  1879   0002F8  20F4               	addwfc	prodh,w,c
  1880   0002FA  6EDA               	movwf	fsr2h,c
  1881   0002FC  C0B2  FFDE         	movff	main@i,postinc2
  1882   000300  C0B3  FFDD         	movff	main@i+1,postdec2
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 143:                                 ci++;
  1886   000304  2BB1               	incf	main@ci& (0+255),f,b
  1887   000306                     l3052:
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;main.c: 145:                         }
  1891   000306  4BB2               	infsnz	main@i& (0+255),f,b
  1892   000308  2BB3               	incf	(main@i+1)& (0+255),f,b
  1893                           
  1894                           ; BSR set to: 0
  1895   00030A  05B3               	decf	(main@i+1)& (0+255),w,b
  1896   00030C  A0D8               	btfss	status,0,c
  1897   00030E  D7BE               	goto	l3040
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;main.c: 146:                     };main.c: 148:                     {;main.c: 149:     
      +                                              printf("The last 256 ADC samples from the microphone are:\n\r");
  1901   000310  0E8F               	movlw	low STR_25
  1902   000312  6F94               	movwf	printf@fmt& (0+255),b
  1903   000314  0E7D               	movlw	high STR_25
  1904   000316  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1905   000318  EC98  F00A         	call	_printf	;wreg free
  1906                           
  1907                           ;main.c: 150:                         for(i = 0; i < 256/16; i++)
  1908   00031C  0E00               	movlw	0
  1909   00031E  0100               	movlb	0	; () banked
  1910   000320  6FB3               	movwf	(main@i+1)& (0+255),b
  1911   000322  0E00               	movlw	0
  1912   000324  6FB2               	movwf	main@i& (0+255),b
  1913   000326                     l3064:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;main.c: 151:                         {;main.c: 152:                             printf(
      +                          "S[%u] ", i * 16);
  1917   000326  0EE6               	movlw	low STR_26
  1918   000328  6F94               	movwf	printf@fmt& (0+255),b
  1919   00032A  0E7F               	movlw	high STR_26
  1920   00032C  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1921   00032E  C0B2  F09E         	movff	main@i,??_main
  1922   000332  C0B3  F09F         	movff	main@i+1,??_main+1
  1923   000336  3B9E               	swapf	??_main& (0+255),f,b
  1924   000338  3B9F               	swapf	(??_main+1)& (0+255),f,b
  1925   00033A  0EF0               	movlw	240
  1926   00033C  179F               	andwf	(??_main+1)& (0+255),f,b
  1927   00033E  519E               	movf	??_main& (0+255),w,b
  1928   000340  0B0F               	andlw	15
  1929   000342  139F               	iorwf	(??_main+1)& (0+255),f,b
  1930   000344  0EF0               	movlw	240
  1931   000346  179E               	andwf	??_main& (0+255),f,b
  1932   000348  C09E  F096         	movff	??_main,?_printf+2
  1933   00034C  C09F  F097         	movff	??_main+1,?_printf+3
  1934   000350  EC98  F00A         	call	_printf	;wreg free
  1935                           
  1936                           ;main.c: 153:                             if(i*16 < 100) printf(" "); if(i*16 < 10) prin
      +                          tf(" ");
  1937   000354  C0B2  F09E         	movff	main@i,??_main
  1938   000358  C0B3  F09F         	movff	main@i+1,??_main+1
  1939   00035C  0100               	movlb	0	; () banked
  1940   00035E  3B9E               	swapf	??_main& (0+255),f,b
  1941   000360  3B9F               	swapf	(??_main+1)& (0+255),f,b
  1942   000362  0EF0               	movlw	240
  1943   000364  179F               	andwf	(??_main+1)& (0+255),f,b
  1944   000366  519E               	movf	??_main& (0+255),w,b
  1945   000368  0B0F               	andlw	15
  1946   00036A  139F               	iorwf	(??_main+1)& (0+255),f,b
  1947   00036C  0EF0               	movlw	240
  1948   00036E  179E               	andwf	??_main& (0+255),f,b
  1949   000370  519F               	movf	(??_main+1)& (0+255),w,b
  1950   000372  E10A               	bnz	l3070
  1951   000374  0E64               	movlw	100
  1952   000376  5D9E               	subwf	??_main& (0+255),w,b
  1953   000378  B0D8               	btfsc	status,0,c
  1954   00037A  D006               	goto	l3070
  1955                           
  1956                           ; BSR set to: 0
  1957   00037C  0EFC               	movlw	low (STR_4+1)
  1958   00037E  6F94               	movwf	printf@fmt& (0+255),b
  1959   000380  0E7F               	movlw	high (STR_4+1)
  1960   000382  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1961   000384  EC98  F00A         	call	_printf	;wreg free
  1962   000388                     l3070:
  1963   000388  C0B2  F09E         	movff	main@i,??_main
  1964   00038C  C0B3  F09F         	movff	main@i+1,??_main+1
  1965   000390  0100               	movlb	0	; () banked
  1966   000392  3B9E               	swapf	??_main& (0+255),f,b
  1967   000394  3B9F               	swapf	(??_main+1)& (0+255),f,b
  1968   000396  0EF0               	movlw	240
  1969   000398  179F               	andwf	(??_main+1)& (0+255),f,b
  1970   00039A  519E               	movf	??_main& (0+255),w,b
  1971   00039C  0B0F               	andlw	15
  1972   00039E  139F               	iorwf	(??_main+1)& (0+255),f,b
  1973   0003A0  0EF0               	movlw	240
  1974   0003A2  179E               	andwf	??_main& (0+255),f,b
  1975   0003A4  519F               	movf	(??_main+1)& (0+255),w,b
  1976   0003A6  E10A               	bnz	l3074
  1977   0003A8  0E0A               	movlw	10
  1978   0003AA  5D9E               	subwf	??_main& (0+255),w,b
  1979   0003AC  B0D8               	btfsc	status,0,c
  1980   0003AE  D006               	goto	l3074
  1981                           
  1982                           ; BSR set to: 0
  1983   0003B0  0EFC               	movlw	low (STR_4+1)
  1984   0003B2  6F94               	movwf	printf@fmt& (0+255),b
  1985   0003B4  0E7F               	movlw	high (STR_4+1)
  1986   0003B6  6F95               	movwf	(printf@fmt+1)& (0+255),b
  1987   0003B8  EC98  F00A         	call	_printf	;wreg free
  1988   0003BC                     l3074:
  1989                           
  1990                           ;main.c: 154:                             for(j = 0; j < 16; j++)
  1991   0003BC  0E00               	movlw	0
  1992   0003BE  0100               	movlb	0	; () banked
  1993   0003C0  6FAE               	movwf	main@j& (0+255),b
  1994   0003C2                     l3080:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;main.c: 155:                             {;main.c: 156:                                
      +                           sample = samples[(i * 16) + j];
  1998   0003C2  C0B2  F09E         	movff	main@i,??_main
  1999   0003C6  C0B3  F09F         	movff	main@i+1,??_main+1
  2000   0003CA  3B9E               	swapf	??_main& (0+255),f,b
  2001   0003CC  3B9F               	swapf	(??_main+1)& (0+255),f,b
  2002   0003CE  0EF0               	movlw	240
  2003   0003D0  179F               	andwf	(??_main+1)& (0+255),f,b
  2004   0003D2  519E               	movf	??_main& (0+255),w,b
  2005   0003D4  0B0F               	andlw	15
  2006   0003D6  139F               	iorwf	(??_main+1)& (0+255),f,b
  2007   0003D8  0EF0               	movlw	240
  2008   0003DA  179E               	andwf	??_main& (0+255),f,b
  2009   0003DC  0E00               	movlw	low main@samples
  2010   0003DE  259E               	addwf	??_main& (0+255),w,b
  2011   0003E0  6FA0               	movwf	(??_main+2)& (0+255),b
  2012   0003E2  0E01               	movlw	high main@samples
  2013   0003E4  219F               	addwfc	(??_main+1)& (0+255),w,b
  2014   0003E6  6FA1               	movwf	(??_main+3)& (0+255),b
  2015   0003E8  51AE               	movf	main@j& (0+255),w,b
  2016   0003EA  25A0               	addwf	(??_main+2)& (0+255),w,b
  2017   0003EC  6ED9               	movwf	fsr2l,c
  2018   0003EE  0E00               	movlw	0
  2019   0003F0  21A1               	addwfc	(??_main+3)& (0+255),w,b
  2020   0003F2  6EDA               	movwf	fsr2h,c
  2021   0003F4  50DF               	movf	indf2,w,c
  2022   0003F6  6FAD               	movwf	main@sample& (0+255),b
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;main.c: 157:                                 printf("%u ", sample);
  2026   0003F8  0EF7               	movlw	low STR_29
  2027   0003FA  6F94               	movwf	printf@fmt& (0+255),b
  2028   0003FC  0E7F               	movlw	high STR_29
  2029   0003FE  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2030   000400  C0AD  F096         	movff	main@sample,?_printf+2
  2031   000404  6B97               	clrf	(?_printf+3)& (0+255),b
  2032   000406  EC98  F00A         	call	_printf	;wreg free
  2033                           
  2034                           ;main.c: 158:                                 if(sample < 100) printf(" "); if(sample < 
      +                          10) printf(" ");
  2035   00040A  0E64               	movlw	100
  2036   00040C  0100               	movlb	0	; () banked
  2037   00040E  61AD               	cpfslt	main@sample& (0+255),b
  2038   000410  D006               	goto	l3088
  2039                           
  2040                           ; BSR set to: 0
  2041   000412  0EFC               	movlw	low (STR_4+1)
  2042   000414  6F94               	movwf	printf@fmt& (0+255),b
  2043   000416  0E7F               	movlw	high (STR_4+1)
  2044   000418  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2045   00041A  EC98  F00A         	call	_printf	;wreg free
  2046   00041E                     l3088:
  2047   00041E  0E0A               	movlw	10
  2048   000420  0100               	movlb	0	; () banked
  2049   000422  61AD               	cpfslt	main@sample& (0+255),b
  2050   000424  D006               	goto	l3092
  2051                           
  2052                           ; BSR set to: 0
  2053   000426  0EFC               	movlw	low (STR_4+1)
  2054   000428  6F94               	movwf	printf@fmt& (0+255),b
  2055   00042A  0E7F               	movlw	high (STR_4+1)
  2056   00042C  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2057   00042E  EC98  F00A         	call	_printf	;wreg free
  2058   000432                     l3092:
  2059                           
  2060                           ;main.c: 159:                             }
  2061   000432  0100               	movlb	0	; () banked
  2062   000434  2BAE               	incf	main@j& (0+255),f,b
  2063                           
  2064                           ; BSR set to: 0
  2065   000436  0E0F               	movlw	15
  2066   000438  65AE               	cpfsgt	main@j& (0+255),b
  2067   00043A  D7C3               	goto	l3080
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 160:                             printf("\n\r");
  2071   00043C  0EEF               	movlw	low (STR_36+2)
  2072   00043E  6F94               	movwf	printf@fmt& (0+255),b
  2073   000440  0E7F               	movlw	high (STR_36+2)
  2074   000442  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2075   000444  EC98  F00A         	call	_printf	;wreg free
  2076                           
  2077                           ;main.c: 161:                         }
  2078   000448  0100               	movlb	0	; () banked
  2079   00044A  4BB2               	infsnz	main@i& (0+255),f,b
  2080   00044C  2BB3               	incf	(main@i+1)& (0+255),f,b
  2081                           
  2082                           ; BSR set to: 0
  2083   00044E  51B3               	movf	(main@i+1)& (0+255),w,b
  2084   000450  E104               	bnz	u2200
  2085   000452  0E10               	movlw	16
  2086   000454  5DB2               	subwf	main@i& (0+255),w,b
  2087   000456  A0D8               	btfss	status,0,c
  2088   000458  D766               	goto	l3064
  2089   00045A                     u2200:
  2090                           
  2091                           ; BSR set to: 0
  2092                           ;main.c: 162:                         printf("\n\r");
  2093   00045A  0EEF               	movlw	low (STR_36+2)
  2094   00045C  6F94               	movwf	printf@fmt& (0+255),b
  2095   00045E  0E7F               	movlw	high (STR_36+2)
  2096   000460  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2097   000462  EC98  F00A         	call	_printf	;wreg free
  2098                           
  2099                           ;main.c: 163:                     };main.c: 165:                     {;main.c: 166:     
      +                                              printf("The sound wave crossed at the following indicies:\n\r");
  2100   000466  0EC3               	movlw	low STR_34
  2101   000468  0100               	movlb	0	; () banked
  2102   00046A  6F94               	movwf	printf@fmt& (0+255),b
  2103   00046C  0E7D               	movlw	high STR_34
  2104   00046E  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2105   000470  EC98  F00A         	call	_printf	;wreg free
  2106                           
  2107                           ;main.c: 167:                         for(i = 0; i < ci; i++)
  2108   000474  0E00               	movlw	0
  2109   000476  0100               	movlb	0	; () banked
  2110   000478  6FB3               	movwf	(main@i+1)& (0+255),b
  2111   00047A  0E00               	movlw	0
  2112   00047C  6FB2               	movwf	main@i& (0+255),b
  2113   00047E  D016               	goto	l3110
  2114   000480                     l3106:
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;main.c: 168:                         {;main.c: 169:                             printf(
      +                          "%u ", crossings[i]);
  2118   000480  0EF7               	movlw	low STR_29
  2119   000482  6F94               	movwf	printf@fmt& (0+255),b
  2120   000484  0E7F               	movlw	high STR_29
  2121   000486  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2122   000488  90D8               	bcf	status,0,c
  2123   00048A  35B2               	rlcf	main@i& (0+255),w,b
  2124   00048C  6ED9               	movwf	fsr2l,c
  2125   00048E  35B3               	rlcf	(main@i+1)& (0+255),w,b
  2126   000490  6EDA               	movwf	fsr2h,c
  2127   000492  0E00               	movlw	low main@crossings
  2128   000494  26D9               	addwf	fsr2l,f,c
  2129   000496  0E02               	movlw	high main@crossings
  2130   000498  22DA               	addwfc	fsr2h,f,c
  2131   00049A  CFDE F096          	movff	postinc2,?_printf+2
  2132   00049E  CFDD F097          	movff	postdec2,?_printf+3
  2133   0004A2  EC98  F00A         	call	_printf	;wreg free
  2134                           
  2135                           ;main.c: 170:                         }
  2136   0004A6  0100               	movlb	0	; () banked
  2137   0004A8  4BB2               	infsnz	main@i& (0+255),f,b
  2138   0004AA  2BB3               	incf	(main@i+1)& (0+255),f,b
  2139   0004AC                     l3110:
  2140                           
  2141                           ; BSR set to: 0
  2142   0004AC  51B1               	movf	main@ci& (0+255),w,b
  2143   0004AE  6F9E               	movwf	??_main& (0+255),b
  2144   0004B0  6B9F               	clrf	(??_main+1)& (0+255),b
  2145   0004B2  519E               	movf	??_main& (0+255),w,b
  2146   0004B4  5DB2               	subwf	main@i& (0+255),w,b
  2147   0004B6  519F               	movf	(??_main+1)& (0+255),w,b
  2148   0004B8  59B3               	subwfb	(main@i+1)& (0+255),w,b
  2149   0004BA  A0D8               	btfss	status,0,c
  2150   0004BC  D7E1               	goto	l3106
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;main.c: 171:                         printf("\n\r\n\r");
  2154   0004BE  0EED               	movlw	low STR_36
  2155   0004C0  6F94               	movwf	printf@fmt& (0+255),b
  2156   0004C2  0E7F               	movlw	high STR_36
  2157   0004C4  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2158   0004C6  EC98  F00A         	call	_printf	;wreg free
  2159                           
  2160                           ;main.c: 172:                     };main.c: 174:                     {;main.c: 175:     
      +                                              printf("The sound wave had %u periods:\n\r", ci);
  2161   0004CA  0E6E               	movlw	low STR_37
  2162   0004CC  0100               	movlb	0	; () banked
  2163   0004CE  6F94               	movwf	printf@fmt& (0+255),b
  2164   0004D0  0E7E               	movlw	high STR_37
  2165   0004D2  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2166   0004D4  C0B1  F096         	movff	main@ci,?_printf+2
  2167   0004D8  6B97               	clrf	(?_printf+3)& (0+255),b
  2168   0004DA  EC98  F00A         	call	_printf	;wreg free
  2169                           
  2170                           ;main.c: 176:                         for(i = 1; i < ci; i++)
  2171   0004DE  0E00               	movlw	0
  2172   0004E0  0100               	movlb	0	; () banked
  2173   0004E2  6FB3               	movwf	(main@i+1)& (0+255),b
  2174   0004E4  0E01               	movlw	1
  2175   0004E6  6FB2               	movwf	main@i& (0+255),b
  2176   0004E8  D068               	goto	l3128
  2177   0004EA                     l3116:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;main.c: 177:                         {;main.c: 178:                             period 
      +                          = crossings[i] - crossings[i-1];
  2181   0004EA  C0B2  F09E         	movff	main@i,??_main
  2182   0004EE  C0B3  F09F         	movff	main@i+1,??_main+1
  2183   0004F2  90D8               	bcf	status,0,c
  2184   0004F4  379E               	rlcf	??_main& (0+255),f,b
  2185   0004F6  379F               	rlcf	(??_main+1)& (0+255),f,b
  2186   0004F8  0EFE               	movlw	254
  2187   0004FA  259E               	addwf	??_main& (0+255),w,b
  2188   0004FC  6FA0               	movwf	(??_main+2)& (0+255),b
  2189   0004FE  0EFF               	movlw	255
  2190   000500  219F               	addwfc	(??_main+1)& (0+255),w,b
  2191   000502  6FA1               	movwf	(??_main+3)& (0+255),b
  2192   000504  0E00               	movlw	low main@crossings
  2193   000506  25A0               	addwf	(??_main+2)& (0+255),w,b
  2194   000508  6ED9               	movwf	fsr2l,c
  2195   00050A  0E02               	movlw	high main@crossings
  2196   00050C  21A1               	addwfc	(??_main+3)& (0+255),w,b
  2197   00050E  6EDA               	movwf	fsr2h,c
  2198   000510  CFDE F0A2          	movff	postinc2,??_main+4
  2199   000514  CFDD F0A3          	movff	postdec2,??_main+5
  2200   000518  90D8               	bcf	status,0,c
  2201   00051A  35B2               	rlcf	main@i& (0+255),w,b
  2202   00051C  6ED9               	movwf	fsr2l,c
  2203   00051E  35B3               	rlcf	(main@i+1)& (0+255),w,b
  2204   000520  6EDA               	movwf	fsr2h,c
  2205   000522  0E00               	movlw	low main@crossings
  2206   000524  26D9               	addwf	fsr2l,f,c
  2207   000526  0E02               	movlw	high main@crossings
  2208   000528  22DA               	addwfc	fsr2h,f,c
  2209   00052A  CFDE F0A4          	movff	postinc2,??_main+6
  2210   00052E  CFDD F0A5          	movff	postdec2,??_main+7
  2211   000532  51A2               	movf	(??_main+4)& (0+255),w,b
  2212   000534  5DA4               	subwf	(??_main+6)& (0+255),w,b
  2213   000536  6FAA               	movwf	main@period& (0+255),b
  2214   000538  51A3               	movf	(??_main+5)& (0+255),w,b
  2215   00053A  59A5               	subwfb	(??_main+7)& (0+255),w,b
  2216   00053C  6FAB               	movwf	(main@period+1)& (0+255),b
  2217                           
  2218                           ; BSR set to: 0
  2219                           ;main.c: 179:                             avgPeriod += period;
  2220   00053E  51AA               	movf	main@period& (0+255),w,b
  2221   000540  27AF               	addwf	main@avgPeriod& (0+255),f,b
  2222   000542  51AB               	movf	(main@period+1)& (0+255),w,b
  2223   000544  23B0               	addwfc	(main@avgPeriod+1)& (0+255),f,b
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;main.c: 180:                             if(i > 1) avgPeriod /= 2;
  2227   000546  51B3               	movf	(main@i+1)& (0+255),w,b
  2228   000548  E104               	bnz	u2220
  2229   00054A  0E02               	movlw	2
  2230   00054C  5DB2               	subwf	main@i& (0+255),w,b
  2231   00054E  A0D8               	btfss	status,0,c
  2232   000550  D003               	goto	l3124
  2233   000552                     u2220:
  2234                           
  2235                           ; BSR set to: 0
  2236   000552  90D8               	bcf	status,0,c
  2237   000554  33B0               	rrcf	(main@avgPeriod+1)& (0+255),f,b
  2238   000556  33AF               	rrcf	main@avgPeriod& (0+255),f,b
  2239   000558                     l3124:
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;main.c: 181:                             printf("%u - %u = %u\n\r", crossings[i], cross
      +                          ings[i-1], period);
  2243   000558  0EAE               	movlw	low STR_38
  2244   00055A  6F94               	movwf	printf@fmt& (0+255),b
  2245   00055C  0E7F               	movlw	high STR_38
  2246   00055E  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2247   000560  90D8               	bcf	status,0,c
  2248   000562  35B2               	rlcf	main@i& (0+255),w,b
  2249   000564  6ED9               	movwf	fsr2l,c
  2250   000566  35B3               	rlcf	(main@i+1)& (0+255),w,b
  2251   000568  6EDA               	movwf	fsr2h,c
  2252   00056A  0E00               	movlw	low main@crossings
  2253   00056C  26D9               	addwf	fsr2l,f,c
  2254   00056E  0E02               	movlw	high main@crossings
  2255   000570  22DA               	addwfc	fsr2h,f,c
  2256   000572  CFDE F096          	movff	postinc2,?_printf+2
  2257   000576  CFDD F097          	movff	postdec2,?_printf+3
  2258   00057A  C0B2  F09E         	movff	main@i,??_main
  2259   00057E  C0B3  F09F         	movff	main@i+1,??_main+1
  2260   000582  90D8               	bcf	status,0,c
  2261   000584  379E               	rlcf	??_main& (0+255),f,b
  2262   000586  379F               	rlcf	(??_main+1)& (0+255),f,b
  2263   000588  0EFE               	movlw	254
  2264   00058A  259E               	addwf	??_main& (0+255),w,b
  2265   00058C  6FA0               	movwf	(??_main+2)& (0+255),b
  2266   00058E  0EFF               	movlw	255
  2267   000590  219F               	addwfc	(??_main+1)& (0+255),w,b
  2268   000592  6FA1               	movwf	(??_main+3)& (0+255),b
  2269   000594  0E00               	movlw	low main@crossings
  2270   000596  25A0               	addwf	(??_main+2)& (0+255),w,b
  2271   000598  6ED9               	movwf	fsr2l,c
  2272   00059A  0E02               	movlw	high main@crossings
  2273   00059C  21A1               	addwfc	(??_main+3)& (0+255),w,b
  2274   00059E  6EDA               	movwf	fsr2h,c
  2275   0005A0  CFDE F098          	movff	postinc2,?_printf+4
  2276   0005A4  CFDD F099          	movff	postdec2,?_printf+5
  2277   0005A8  C0AA  F09A         	movff	main@period,?_printf+6
  2278   0005AC  C0AB  F09B         	movff	main@period+1,?_printf+7
  2279   0005B0  EC98  F00A         	call	_printf	;wreg free
  2280                           
  2281                           ;main.c: 182:                         }
  2282   0005B4  0100               	movlb	0	; () banked
  2283   0005B6  4BB2               	infsnz	main@i& (0+255),f,b
  2284   0005B8  2BB3               	incf	(main@i+1)& (0+255),f,b
  2285   0005BA                     l3128:
  2286                           
  2287                           ; BSR set to: 0
  2288   0005BA  51B1               	movf	main@ci& (0+255),w,b
  2289   0005BC  6F9E               	movwf	??_main& (0+255),b
  2290   0005BE  6B9F               	clrf	(??_main+1)& (0+255),b
  2291   0005C0  519E               	movf	??_main& (0+255),w,b
  2292   0005C2  5DB2               	subwf	main@i& (0+255),w,b
  2293   0005C4  519F               	movf	(??_main+1)& (0+255),w,b
  2294   0005C6  59B3               	subwfb	(main@i+1)& (0+255),w,b
  2295   0005C8  A0D8               	btfss	status,0,c
  2296   0005CA  D78F               	goto	l3116
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 183:                         printf("\n\r\n\r");
  2300   0005CC  0EED               	movlw	low STR_36
  2301   0005CE  6F94               	movwf	printf@fmt& (0+255),b
  2302   0005D0  0E7F               	movlw	high STR_36
  2303   0005D2  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2304   0005D4  EC98  F00A         	call	_printf	;wreg free
  2305                           
  2306                           ;main.c: 184:                         avgPeriod = avgPeriod * 24;
  2307   0005D8  C0AF  F012         	movff	main@avgPeriod,___wmul@multiplier
  2308   0005DC  C0B0  F013         	movff	main@avgPeriod+1,___wmul@multiplier+1
  2309   0005E0  0E00               	movlw	0
  2310   0005E2  6E15               	movwf	(___wmul@multiplicand+1)^0,c
  2311   0005E4  0E18               	movlw	24
  2312   0005E6  6E14               	movwf	___wmul@multiplicand^0,c
  2313   0005E8  ECAC  F00A         	call	___wmul	;wreg free
  2314   0005EC  C012  F0AF         	movff	?___wmul,main@avgPeriod
  2315   0005F0  C013  F0B0         	movff	?___wmul+1,main@avgPeriod+1
  2316                           
  2317                           ;main.c: 185:                         frequency = 1000000 / avgPeriod;
  2318   0005F4  0E40               	movlw	64
  2319   0005F6  6E12               	movwf	___aldiv@dividend^0,c
  2320   0005F8  0E42               	movlw	66
  2321   0005FA  6E13               	movwf	(___aldiv@dividend+1)^0,c
  2322   0005FC  0E0F               	movlw	15
  2323   0005FE  6E14               	movwf	(___aldiv@dividend+2)^0,c
  2324   000600  0E00               	movlw	0
  2325   000602  6E15               	movwf	(___aldiv@dividend+3)^0,c
  2326   000604  C0AF  F016         	movff	main@avgPeriod,___aldiv@divisor
  2327   000608  C0B0  F017         	movff	main@avgPeriod+1,___aldiv@divisor+1
  2328   00060C  6A18               	clrf	(___aldiv@divisor+2)^0,c
  2329   00060E  6A19               	clrf	(___aldiv@divisor+3)^0,c
  2330   000610  ECF8  F007         	call	___aldiv	;wreg free
  2331   000614  C012  F0A6         	movff	?___aldiv,main@frequency
  2332   000618  C013  F0A7         	movff	?___aldiv+1,main@frequency+1
  2333   00061C  C014  F0A8         	movff	?___aldiv+2,main@frequency+2
  2334   000620  C015  F0A9         	movff	?___aldiv+3,main@frequency+3
  2335                           
  2336                           ;main.c: 187:                         printf("average period: %u\n\r", avgPeriod);
  2337   000624  0E4F               	movlw	low STR_40
  2338   000626  0100               	movlb	0	; () banked
  2339   000628  6F94               	movwf	printf@fmt& (0+255),b
  2340   00062A  0E7F               	movlw	high STR_40
  2341   00062C  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2342   00062E  C0AF  F096         	movff	main@avgPeriod,?_printf+2
  2343   000632  C0B0  F097         	movff	main@avgPeriod+1,?_printf+3
  2344   000636  EC98  F00A         	call	_printf	;wreg free
  2345                           
  2346                           ;main.c: 188:                         printf("average frequency: %u\n\r", frequency);
  2347   00063A  0E22               	movlw	low STR_41
  2348   00063C  0100               	movlb	0	; () banked
  2349   00063E  6F94               	movwf	printf@fmt& (0+255),b
  2350   000640  0E7F               	movlw	high STR_41
  2351   000642  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2352   000644  C0A6  F096         	movff	main@frequency,?_printf+2
  2353   000648  C0A7  F097         	movff	main@frequency+1,?_printf+3
  2354   00064C  C0A8  F098         	movff	main@frequency+2,?_printf+4
  2355   000650  C0A9  F099         	movff	main@frequency+3,?_printf+5
  2356   000654  EC98  F00A         	call	_printf	;wreg free
  2357                           
  2358                           ;main.c: 189:                     };main.c: 190:                     break;
  2359   000658  D02C               	goto	l3146
  2360   00065A                     l3140:
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;main.c: 194:                     printf("unknown key\r\n", cmd);
  2364   00065A  0EBD               	movlw	low STR_42
  2365   00065C  6F94               	movwf	printf@fmt& (0+255),b
  2366   00065E  0E7F               	movlw	high STR_42
  2367   000660  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2368   000662  C0AC  F096         	movff	main@cmd,?_printf+2
  2369   000666  6B97               	clrf	(?_printf+3)& (0+255),b
  2370   000668  EC98  F00A         	call	_printf	;wreg free
  2371                           
  2372                           ;main.c: 195:                     break;
  2373   00066C  D022               	goto	l3146
  2374   00066E                     l3144:
  2375   00066E  0100               	movlb	0	; () banked
  2376   000670  51AC               	movf	main@cmd& (0+255),w,b
  2377   000672  6F9E               	movwf	??_main& (0+255),b
  2378   000674  6B9F               	clrf	(??_main+1)& (0+255),b
  2379                           
  2380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2381                           ; Switch size 1, requested type "simple"
  2382                           ; Number of cases is 1, Range of values is 0 to 0
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte            4     3 (average)
  2386                           ;	Chosen strategy is simple_byte
  2387   000676  519F               	movf	(??_main+1)& (0+255),w,b
  2388   000678  0A00               	xorlw	0	; case 0
  2389   00067A  A4D8               	btfss	status,2,c
  2390   00067C  D7EE               	goto	l3140
  2391                           
  2392                           ; BSR set to: 0
  2393                           ; Switch size 1, requested type "simple"
  2394                           ; Number of cases is 8, Range of values is 0 to 122
  2395                           ; switch strategies available:
  2396                           ; Name         Instructions Cycles
  2397                           ; simple_byte           25    13 (average)
  2398                           ;	Chosen strategy is simple_byte
  2399   00067E  519E               	movf	??_main& (0+255),w,b
  2400   000680  0A00               	xorlw	0	; case 0
  2401   000682  B4D8               	btfsc	status,2,c
  2402   000684  D016               	goto	l3146
  2403   000686  0A3F               	xorlw	63	; case 63
  2404   000688  B4D8               	btfsc	status,2,c
  2405   00068A  D519               	goto	l2974
  2406   00068C  0A6B               	xorlw	107	; case 84
  2407   00068E  B4D8               	btfsc	status,2,c
  2408   000690  D59C               	goto	l3002
  2409   000692  0A0E               	xorlw	14	; case 90
  2410   000694  B4D8               	btfsc	status,2,c
  2411   000696  D56F               	goto	l2978
  2412   000698  0A3C               	xorlw	60	; case 102
  2413   00069A  B4D8               	btfsc	status,2,c
  2414   00069C  D5D2               	goto	l3014
  2415   00069E  0A09               	xorlw	9	; case 111
  2416   0006A0  B4D8               	btfsc	status,2,c
  2417   0006A2  D562               	goto	l2976
  2418   0006A4  0A1B               	xorlw	27	; case 116
  2419   0006A6  B4D8               	btfsc	status,2,c
  2420   0006A8  D5AE               	goto	l3008
  2421   0006AA  0A0E               	xorlw	14	; case 122
  2422   0006AC  B4D8               	btfsc	status,2,c
  2423   0006AE  D578               	goto	l2990
  2424   0006B0  D7D4               	goto	l3140
  2425   0006B2                     l3146:
  2426                           
  2427                           ;main.c: 197:             printf("> ");
  2428   0006B2  0EFB               	movlw	low STR_4
  2429   0006B4  0100               	movlb	0	; () banked
  2430   0006B6  6F94               	movwf	printf@fmt& (0+255),b
  2431   0006B8  0E7F               	movlw	high STR_4
  2432   0006BA  6F95               	movwf	(printf@fmt+1)& (0+255),b
  2433   0006BC  EC98  F00A         	call	_printf	;wreg free
  2434   0006C0  D4EB               	goto	l2968
  2435   0006C2                     __end_of_main:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _printf *****************
  2439 ;; Defined at:
  2440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  2443 ;;		 -> STR_43(3), STR_42(14), STR_41(24), STR_40(21), 
  2444 ;;		 -> STR_39(5), STR_38(15), STR_37(33), STR_36(5), 
  2445 ;;		 -> STR_35(4), STR_34(52), STR_33(3), STR_32(3), 
  2446 ;;		 -> STR_31(2), STR_30(2), STR_29(4), STR_28(2), 
  2447 ;;		 -> STR_27(2), STR_26(7), STR_25(52), STR_24(19), 
  2448 ;;		 -> STR_23(20), STR_22(20), STR_21(20), STR_20(20), 
  2449 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2450 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2451 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2452 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2453 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  ap              2   60[BANK0 ] PTR void [1]
  2456 ;;		 -> ?_printf(2), 
  2457 ;;  ret             2    0        int 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  2   52[BANK0 ] int 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2467 ;;      Params:         0       8       0       0       0       0       0
  2468 ;;      Locals:         0       2       0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0
  2470 ;;      Totals:         0      10       0       0       0       0       0
  2471 ;;Total ram usage:       10 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 12
  2474 ;; This function calls:
  2475 ;;		_vfprintf
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text1
  2482   001530                     __ptext1:
  2483                           	callstack 0
  2484   001530                     _printf:
  2485                           	callstack 18
  2486                           
  2487                           ;incstack = 0
  2488   001530  0E96               	movlw	low (?_printf+2)
  2489   001532  0100               	movlb	0	; () banked
  2490   001534  6F9C               	movwf	printf@ap& (0+255),b
  2491   001536  0E00               	movlw	high (?_printf+2)
  2492   001538  6F9D               	movwf	(printf@ap+1)& (0+255),b
  2493                           
  2494                           ; BSR set to: 0
  2495   00153A  0E00               	movlw	0
  2496   00153C  6F8E               	movwf	vfprintf@fp& (0+255),b
  2497   00153E  0E00               	movlw	0
  2498   001540  6F8F               	movwf	(vfprintf@fp+1)& (0+255),b
  2499   001542  C094  F090         	movff	printf@fmt,vfprintf@fmt
  2500   001546  C095  F091         	movff	printf@fmt+1,vfprintf@fmt+1
  2501   00154A  0E9C               	movlw	low printf@ap
  2502   00154C  6F92               	movwf	vfprintf@ap& (0+255),b
  2503   00154E  0E00               	movlw	high printf@ap
  2504   001550  6F93               	movwf	(vfprintf@ap+1)& (0+255),b
  2505   001552  ECDC  F009         	call	_vfprintf	;wreg free
  2506   001556  0012               	return		;funcret
  2507   001558                     __end_of_printf:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _vfprintf *****************
  2511 ;; Defined at:
  2512 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  fp              2   46[BANK0 ] PTR struct _IO_FILE
  2515 ;;		 -> NULL(0), 
  2516 ;;  fmt             2   48[BANK0 ] PTR const unsigned char 
  2517 ;;		 -> STR_43(3), STR_42(14), STR_41(24), STR_40(21), 
  2518 ;;		 -> STR_39(5), STR_38(15), STR_37(33), STR_36(5), 
  2519 ;;		 -> STR_35(4), STR_34(52), STR_33(3), STR_32(3), 
  2520 ;;		 -> STR_31(2), STR_30(2), STR_29(4), STR_28(2), 
  2521 ;;		 -> STR_27(2), STR_26(7), STR_25(52), STR_24(19), 
  2522 ;;		 -> STR_23(20), STR_22(20), STR_21(20), STR_20(20), 
  2523 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2524 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2525 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2526 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2527 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2528 ;;  ap              2   50[BANK0 ] PTR PTR void 
  2529 ;;		 -> printf@ap(2), 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  cfmt            2   56[COMRAM] PTR unsigned char 
  2532 ;;		 -> STR_43(3), STR_42(14), STR_41(24), STR_40(21), 
  2533 ;;		 -> STR_39(5), STR_38(15), STR_37(33), STR_36(5), 
  2534 ;;		 -> STR_35(4), STR_34(52), STR_33(3), STR_32(3), 
  2535 ;;		 -> STR_31(2), STR_30(2), STR_29(4), STR_28(2), 
  2536 ;;		 -> STR_27(2), STR_26(7), STR_25(52), STR_24(19), 
  2537 ;;		 -> STR_23(20), STR_22(20), STR_21(20), STR_20(20), 
  2538 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2539 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2540 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2541 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2542 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  2   46[BANK0 ] int 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2552 ;;      Params:         0       6       0       0       0       0       0
  2553 ;;      Locals:         2       0       0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0
  2555 ;;      Totals:         2       6       0       0       0       0       0
  2556 ;;Total ram usage:        8 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 11
  2559 ;; This function calls:
  2560 ;;		_vfpfcnvrt
  2561 ;; This function is called by:
  2562 ;;		_printf
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text2
  2567   0013B8                     __ptext2:
  2568                           	callstack 0
  2569   0013B8                     _vfprintf:
  2570                           	callstack 18
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2573                           
  2574                           ;incstack = 0
  2575   0013B8  C090  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  2576   0013BC  C091  F03A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2579   0013C0  D00F               	goto	l2934
  2580   0013C2                     l2932:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2583   0013C2  C08E  F079         	movff	vfprintf@fp,vfpfcnvrt@fp
  2584   0013C6  C08F  F07A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2585   0013CA  0E39               	movlw	low vfprintf@cfmt
  2586   0013CC  0100               	movlb	0	; () banked
  2587   0013CE  6F7B               	movwf	vfpfcnvrt@fmt& (0+255),b
  2588   0013D0  0E00               	movlw	high vfprintf@cfmt
  2589   0013D2  6F7C               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2590   0013D4  C092  F07D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2591   0013D8  C093  F07E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2592   0013DC  EC61  F003         	call	_vfpfcnvrt	;wreg free
  2593   0013E0                     l2934:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2596   0013E0  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  2597   0013E4  C03A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2598   0013E8                     	if	0	;tblptru may be non-zero
  2599   0013E8                     	endif
  2600   0013E8                     	if	0	;tblptru may be non-zero
  2601   0013E8                     	endif
  2602   0013E8  0008               	tblrd		*
  2603   0013EA  50F5               	movf	tablat,w,c
  2604   0013EC  0900               	iorlw	0
  2605   0013EE  A4D8               	btfss	status,2,c
  2606   0013F0  D7E8               	goto	l2932
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2609   0013F2  0E00               	movlw	0
  2610   0013F4  0100               	movlb	0	; () banked
  2611   0013F6  6F8F               	movwf	(?_vfprintf+1)& (0+255),b
  2612   0013F8  0E00               	movlw	0
  2613   0013FA  6F8E               	movwf	?_vfprintf& (0+255),b
  2614                           
  2615                           ; BSR set to: 0
  2616   0013FC  0012               	return		;funcret
  2617   0013FE                     __end_of_vfprintf:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _vfpfcnvrt *****************
  2621 ;; Defined at:
  2622 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  fp              2   25[BANK0 ] PTR struct _IO_FILE
  2625 ;;		 -> NULL(0), 
  2626 ;;  fmt             2   27[BANK0 ] PTR PTR unsigned char 
  2627 ;;		 -> vfprintf@cfmt(2), 
  2628 ;;  ap              2   29[BANK0 ] PTR PTR void 
  2629 ;;		 -> printf@ap(2), 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  convarg         8   36[BANK0 ] struct .
  2632 ;;  cp              2   44[BANK0 ] PTR unsigned char 
  2633 ;;		 -> STR_43(3), STR_42(14), STR_41(24), STR_40(21), 
  2634 ;;		 -> STR_39(5), STR_38(15), STR_37(33), STR_36(5), 
  2635 ;;		 -> STR_35(4), STR_34(52), STR_33(3), STR_32(3), 
  2636 ;;		 -> STR_31(2), STR_30(2), STR_29(4), STR_28(2), 
  2637 ;;		 -> STR_27(2), STR_26(7), STR_25(52), STR_24(19), 
  2638 ;;		 -> STR_23(20), STR_22(20), STR_21(20), STR_20(20), 
  2639 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2640 ;;		 -> STR_15(37), STR_14(32), STR_13(49), STR_12(33), 
  2641 ;;		 -> STR_11(33), STR_10(24), STR_9(21), STR_8(7), 
  2642 ;;		 -> STR_7(15), STR_6(33), STR_5(5), STR_4(3), 
  2643 ;;		 -> STR_3(9), STR_2(25), STR_1(11), 
  2644 ;;  i               2    0        int 
  2645 ;;  done            2    0        int 
  2646 ;;  c               1   35[BANK0 ] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2656 ;;      Params:         0       6       0       0       0       0       0
  2657 ;;      Locals:         0      11       0       0       0       0       0
  2658 ;;      Temps:          0       4       0       0       0       0       0
  2659 ;;      Totals:         0      21       0       0       0       0       0
  2660 ;;Total ram usage:       21 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 10
  2663 ;; This function calls:
  2664 ;;		_ctoa
  2665 ;;		_dtoa
  2666 ;;		_fputc
  2667 ;;		_utoa
  2668 ;; This function is called by:
  2669 ;;		_vfprintf
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text3
  2674   0006C2                     __ptext3:
  2675                           	callstack 0
  2676   0006C2                     _vfpfcnvrt:
  2677                           	callstack 18
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;incstack = 0
  2683   0006C2  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2684   0006C6  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2685   0006CA  CFDE FFF6          	movff	postinc2,tblptrl
  2686   0006CE  CFDD FFF7          	movff	postdec2,tblptrh
  2687   0006D2                     	if	0	;tblptru may be non-zero
  2688   0006D2                     	endif
  2689   0006D2                     	if	0	;tblptru may be non-zero
  2690   0006D2                     	endif
  2691   0006D2  0008               	tblrd		*
  2692   0006D4  50F5               	movf	tablat,w,c
  2693   0006D6  0A25               	xorlw	37
  2694   0006D8  A4D8               	btfss	status,2,c
  2695   0006DA  D102               	goto	l2920
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2698   0006DC  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2699   0006E0  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2700   0006E4  2ADE               	incf	postinc2,f,c
  2701   0006E6  0E00               	movlw	0
  2702   0006E8  22DD               	addwfc	postdec2,f,c
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2705   0006EA  0E00               	movlw	0
  2706   0006EC  6E3C               	movwf	(_width+1)^0,c
  2707   0006EE  0E00               	movlw	0
  2708   0006F0  6E3B               	movwf	_width^0,c
  2709   0006F2  C03B  F049         	movff	_width,_flags
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2712   0006F6  683D               	setf	_prec^0,c
  2713   0006F8  683E               	setf	(_prec+1)^0,c
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2716   0006FA  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2717   0006FE  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2718   000702  CFDE FFF6          	movff	postinc2,tblptrl
  2719   000706  CFDD FFF7          	movff	postdec2,tblptrh
  2720   00070A                     	if	0	;tblptru may be non-zero
  2721   00070A                     	endif
  2722   00070A                     	if	0	;tblptru may be non-zero
  2723   00070A                     	endif
  2724   00070A  0008               	tblrd		*
  2725   00070C  50F5               	movf	tablat,w,c
  2726   00070E  0A63               	xorlw	99
  2727   000710  A4D8               	btfss	status,2,c
  2728   000712  D023               	goto	l2892
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2731   000714  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2732   000718  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2733   00071C  2ADE               	incf	postinc2,f,c
  2734   00071E  0E00               	movlw	0
  2735   000720  22DD               	addwfc	postdec2,f,c
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2738   000722  C07D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2739   000726  C07E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2740   00072A  CFDF F07F          	movff	indf2,??_vfpfcnvrt
  2741   00072E  0E02               	movlw	2
  2742   000730  26DE               	addwf	postinc2,f,c
  2743   000732  CFDF F080          	movff	indf2,??_vfpfcnvrt+1
  2744   000736  0E00               	movlw	0
  2745   000738  22DD               	addwfc	postdec2,f,c
  2746   00073A  C07F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2747   00073E  C080  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2748   000742  50DF               	movf	indf2,w,c
  2749   000744  0100               	movlb	0	; () banked
  2750   000746  6F83               	movwf	vfpfcnvrt@c& (0+255),b
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2754   000748  C079  F01D         	movff	vfpfcnvrt@fp,ctoa@fp
  2755   00074C  C07A  F01E         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2756   000750  C083  F01F         	movff	vfpfcnvrt@c,ctoa@c
  2757   000754  EC16  F009         	call	_ctoa	;wreg free
  2758   000758  0012               	return	
  2759   00075A                     l2892:
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2762   00075A  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2763   00075E  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2764   000762  CFDE F08C          	movff	postinc2,vfpfcnvrt@cp
  2765   000766  CFDD F08D          	movff	postdec2,vfpfcnvrt@cp+1
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2768   00076A  C08C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2769   00076E  C08D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2770   000772                     	if	0	;tblptru may be non-zero
  2771   000772                     	endif
  2772   000772                     	if	0	;tblptru may be non-zero
  2773   000772                     	endif
  2774   000772  0008               	tblrd		*
  2775   000774  50F5               	movf	tablat,w,c
  2776   000776  0A64               	xorlw	100
  2777   000778  B4D8               	btfsc	status,2,c
  2778   00077A  D009               	goto	u2010
  2779   00077C  C08C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2780   000780  C08D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2781   000784                     	if	0	;tblptru may be non-zero
  2782   000784                     	endif
  2783   000784                     	if	0	;tblptru may be non-zero
  2784   000784                     	endif
  2785   000784  0008               	tblrd		*
  2786   000786  50F5               	movf	tablat,w,c
  2787   000788  0A69               	xorlw	105
  2788   00078A  A4D8               	btfss	status,2,c
  2789   00078C  D043               	goto	l2904
  2790   00078E                     u2010:
  2791                           
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2793   00078E  C07D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2794   000792  C07E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2795   000796  CFDF F07F          	movff	indf2,??_vfpfcnvrt
  2796   00079A  0E02               	movlw	2
  2797   00079C  26DE               	addwf	postinc2,f,c
  2798   00079E  CFDF F080          	movff	indf2,??_vfpfcnvrt+1
  2799   0007A2  0E00               	movlw	0
  2800   0007A4  22DD               	addwfc	postdec2,f,c
  2801   0007A6  C07F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2802   0007AA  C080  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2803   0007AE  CFDE F084          	movff	postinc2,vfpfcnvrt@convarg
  2804   0007B2  CFDD F085          	movff	postdec2,vfpfcnvrt@convarg+1
  2805   0007B6  0100               	movlb	0	; () banked
  2806   0007B8  0E00               	movlw	0
  2807   0007BA  BF85               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2808   0007BC  0EFF               	movlw	-1
  2809   0007BE  6F86               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2810   0007C0  6F87               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2811   0007C2  6F88               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2812   0007C4  6F89               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2813   0007C6  6F8A               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2814   0007C8  6F8B               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2817   0007CA  0E01               	movlw	1
  2818   0007CC  258C               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2819   0007CE  6F7F               	movwf	??_vfpfcnvrt& (0+255),b
  2820   0007D0  0E00               	movlw	0
  2821   0007D2  218D               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2822   0007D4  6F80               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2823   0007D6  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824   0007DA  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825   0007DE  C07F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2826   0007E2  C080  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2830   0007E6  C079  F02F         	movff	vfpfcnvrt@fp,dtoa@fp
  2831   0007EA  C07A  F030         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2832   0007EE  C084  F031         	movff	vfpfcnvrt@convarg,dtoa@d
  2833   0007F2  C085  F032         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2834   0007F6  C086  F033         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2835   0007FA  C087  F034         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2836   0007FE  C088  F035         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2837   000802  C089  F036         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2838   000806  C08A  F037         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2839   00080A  C08B  F038         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2840   00080E  EC83  F004         	call	_dtoa	;wreg free
  2841   000812  0012               	return	
  2842   000814                     l2904:
  2843   000814  C08C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2844   000818  C08D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2845   00081C                     	if	0	;tblptru may be non-zero
  2846   00081C                     	endif
  2847   00081C                     	if	0	;tblptru may be non-zero
  2848   00081C                     	endif
  2849   00081C  0008               	tblrd		*
  2850   00081E  50F5               	movf	tablat,w,c
  2851   000820  0A75               	xorlw	117
  2852   000822  A4D8               	btfss	status,2,c
  2853   000824  D055               	goto	l2916
  2854                           
  2855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2856   000826  C07D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2857   00082A  C07E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2858   00082E  CFDF F07F          	movff	indf2,??_vfpfcnvrt
  2859   000832  0E02               	movlw	2
  2860   000834  26DE               	addwf	postinc2,f,c
  2861   000836  CFDF F080          	movff	indf2,??_vfpfcnvrt+1
  2862   00083A  0E00               	movlw	0
  2863   00083C  22DD               	addwfc	postdec2,f,c
  2864   00083E  C07F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2865   000842  C080  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2866   000846  CFDE F081          	movff	postinc2,??_vfpfcnvrt+2
  2867   00084A  CFDD F082          	movff	postdec2,??_vfpfcnvrt+3
  2868   00084E  C081  F084         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2869   000852  C082  F085         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2870   000856  0100               	movlb	0	; () banked
  2871   000858  6B86               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2872   00085A  6B87               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2873   00085C  6B88               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2874   00085E  6B89               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2875   000860  6B8A               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2876   000862  6B8B               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2879   000864  0E01               	movlw	1
  2880   000866  258C               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2881   000868  6F7F               	movwf	??_vfpfcnvrt& (0+255),b
  2882   00086A  0E00               	movlw	0
  2883   00086C  218D               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2884   00086E  6F80               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2885   000870  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2886   000874  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2887   000878  C07F  FFDE         	movff	??_vfpfcnvrt,postinc2
  2888   00087C  C080  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2891   000880  D017               	goto	l2914
  2892   000882                     l2908:
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2896   000882  C079  F02F         	movff	vfpfcnvrt@fp,utoa@fp
  2897   000886  C07A  F030         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2898   00088A  C084  F031         	movff	vfpfcnvrt@convarg,utoa@d
  2899   00088E  C085  F032         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2900   000892  C086  F033         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2901   000896  C087  F034         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2902   00089A  C088  F035         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2903   00089E  C089  F036         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2904   0008A2  C08A  F037         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2905   0008A6  C08B  F038         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2906   0008AA  EC90  F005         	call	_utoa	;wreg free
  2907   0008AE  0012               	return	
  2908   0008B0                     l2914:
  2909                           
  2910                           ; BSR set to: 0
  2911   0008B0  C08C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2912   0008B4  C08D  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2913   0008B8                     	if	0	;tblptru may be non-zero
  2914   0008B8                     	endif
  2915   0008B8                     	if	0	;tblptru may be non-zero
  2916   0008B8                     	endif
  2917   0008B8  0008               	tblrd		*
  2918   0008BA  50F5               	movf	tablat,w,c
  2919   0008BC  6F7F               	movwf	??_vfpfcnvrt& (0+255),b
  2920   0008BE  6B80               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2921                           
  2922                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2923                           ; Switch size 1, requested type "simple"
  2924                           ; Number of cases is 1, Range of values is 0 to 0
  2925                           ; switch strategies available:
  2926                           ; Name         Instructions Cycles
  2927                           ; simple_byte            4     3 (average)
  2928                           ;	Chosen strategy is simple_byte
  2929   0008C0  5180               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2930   0008C2  0A00               	xorlw	0	; case 0
  2931   0008C4  A4D8               	btfss	status,2,c
  2932   0008C6  D004               	goto	l2916
  2933                           
  2934                           ; BSR set to: 0
  2935                           ; Switch size 1, requested type "simple"
  2936                           ; Number of cases is 1, Range of values is 117 to 117
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            4     3 (average)
  2940                           ;	Chosen strategy is simple_byte
  2941   0008C8  517F               	movf	??_vfpfcnvrt& (0+255),w,b
  2942   0008CA  0A75               	xorlw	117	; case 117
  2943   0008CC  B4D8               	btfsc	status,2,c
  2944   0008CE  D7D9               	goto	l2908
  2945   0008D0                     l2916:
  2946                           
  2947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2948   0008D0  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2949   0008D4  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2950   0008D8  2ADE               	incf	postinc2,f,c
  2951   0008DA  0E00               	movlw	0
  2952   0008DC  22DD               	addwfc	postdec2,f,c
  2953   0008DE  0012               	return	
  2954   0008E0                     l2920:
  2955                           
  2956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2957   0008E0  C07B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2958   0008E4  C07C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2959   0008E8  CFDE FFF6          	movff	postinc2,tblptrl
  2960   0008EC  CFDD FFF7          	movff	postdec2,tblptrh
  2961   0008F0                     	if	0	;tblptru may be non-zero
  2962   0008F0                     	endif
  2963   0008F0                     	if	0	;tblptru may be non-zero
  2964   0008F0                     	endif
  2965   0008F0  0008               	tblrd		*
  2966   0008F2  50F5               	movf	tablat,w,c
  2967   0008F4  6E14               	movwf	fputc@c^0,c
  2968   0008F6  6A15               	clrf	(fputc@c+1)^0,c
  2969   0008F8  C079  F016         	movff	vfpfcnvrt@fp,fputc@fp
  2970   0008FC  C07A  F017         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2971   000900  EC50  F009         	call	_fputc	;wreg free
  2972   000904  D7E5               	goto	l2916
  2973   000906                     __end_of_vfpfcnvrt:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _utoa *****************
  2977 ;; Defined at:
  2978 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  2981 ;;		 -> NULL(0), 
  2982 ;;  d               8   48[COMRAM] unsigned long long 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  n               8   12[BANK0 ] unsigned long long 
  2985 ;;  i               2   20[BANK0 ] int 
  2986 ;;  p               2   10[BANK0 ] int 
  2987 ;;  w               2    8[BANK0 ] int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2997 ;;      Params:        10       0       0       0       0       0       0
  2998 ;;      Locals:         0      14       0       0       0       0       0
  2999 ;;      Temps:          0       8       0       0       0       0       0
  3000 ;;      Totals:        10      22       0       0       0       0       0
  3001 ;;Total ram usage:       32 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 9
  3004 ;; This function calls:
  3005 ;;		___lodiv
  3006 ;;		___lomod
  3007 ;;		_pad
  3008 ;; This function is called by:
  3009 ;;		_vfpfcnvrt
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text4
  3014   000B20                     __ptext4:
  3015                           	callstack 0
  3016   000B20                     _utoa:
  3017                           	callstack 18
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  3020                           
  3021                           ;incstack = 0
  3022   000B20  BE3E               	btfsc	(_prec+1)^0,7,c
  3023   000B22  D005               	goto	u1940
  3024   000B24  503E               	movf	(_prec+1)^0,w,c
  3025   000B26  E109               	bnz	l1101
  3026   000B28  043D               	decf	_prec^0,w,c
  3027   000B2A  B0D8               	btfsc	status,0,c
  3028   000B2C  D006               	goto	l1101
  3029   000B2E                     u1940:
  3030   000B2E  0E00               	movlw	0
  3031   000B30  0100               	movlb	0	; () banked
  3032   000B32  6F6B               	movwf	(utoa@p+1)& (0+255),b
  3033   000B34  0E01               	movlw	1
  3034   000B36  6F6A               	movwf	utoa@p& (0+255),b
  3035   000B38  D004               	goto	l1103
  3036   000B3A                     l1101:
  3037   000B3A  C03D  F06A         	movff	_prec,utoa@p
  3038   000B3E  C03E  F06B         	movff	_prec+1,utoa@p+1
  3039   000B42                     l1103:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  3042   000B42  C03B  F068         	movff	_width,utoa@w
  3043   000B46  C03C  F069         	movff	_width+1,utoa@w+1
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  3046   000B4A  C031  F06C         	movff	utoa@d,utoa@n
  3047   000B4E  C032  F06D         	movff	utoa@d+1,utoa@n+1
  3048   000B52  C033  F06E         	movff	utoa@d+2,utoa@n+2
  3049   000B56  C034  F06F         	movff	utoa@d+3,utoa@n+3
  3050   000B5A  C035  F070         	movff	utoa@d+4,utoa@n+4
  3051   000B5E  C036  F071         	movff	utoa@d+5,utoa@n+5
  3052   000B62  C037  F072         	movff	utoa@d+6,utoa@n+6
  3053   000B66  C038  F073         	movff	utoa@d+7,utoa@n+7
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  3056   000B6A  0E00               	movlw	0
  3057   000B6C  0100               	movlb	0	; () banked
  3058   000B6E  6F75               	movwf	(utoa@i+1)& (0+255),b
  3059   000B70  0E1F               	movlw	31
  3060   000B72  6F74               	movwf	utoa@i& (0+255),b
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  3064   000B74  0E00               	movlw	0
  3065   000B76  6FD6               	movwf	(_dbuf+31)& (0+255),b
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3068   000B78  D077               	goto	l2866
  3069   000B7A                     l2856:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  3073   000B7A  0774               	decf	utoa@i& (0+255),f,b
  3074   000B7C  A0D8               	btfss	status,0,c
  3075   000B7E  0775               	decf	(utoa@i+1)& (0+255),f,b
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  3079   000B80  0EB7               	movlw	low _dbuf
  3080   000B82  2574               	addwf	utoa@i& (0+255),w,b
  3081   000B84  6ED9               	movwf	fsr2l,c
  3082   000B86  0E00               	movlw	high _dbuf
  3083   000B88  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  3084   000B8A  6EDA               	movwf	fsr2h,c
  3085   000B8C  C06C  F012         	movff	utoa@n,___lomod@dividend
  3086   000B90  C06D  F013         	movff	utoa@n+1,___lomod@dividend+1
  3087   000B94  C06E  F014         	movff	utoa@n+2,___lomod@dividend+2
  3088   000B98  C06F  F015         	movff	utoa@n+3,___lomod@dividend+3
  3089   000B9C  C070  F016         	movff	utoa@n+4,___lomod@dividend+4
  3090   000BA0  C071  F017         	movff	utoa@n+5,___lomod@dividend+5
  3091   000BA4  C072  F018         	movff	utoa@n+6,___lomod@dividend+6
  3092   000BA8  C073  F019         	movff	utoa@n+7,___lomod@dividend+7
  3093   000BAC  0E0A               	movlw	10
  3094   000BAE  6E1A               	movwf	___lomod@divisor^0,c
  3095   000BB0  0E00               	movlw	0
  3096   000BB2  6E1B               	movwf	(___lomod@divisor+1)^0,c
  3097   000BB4  0E00               	movlw	0
  3098   000BB6  6E1C               	movwf	(___lomod@divisor+2)^0,c
  3099   000BB8  0E00               	movlw	0
  3100   000BBA  6E1D               	movwf	(___lomod@divisor+3)^0,c
  3101   000BBC  0E00               	movlw	0
  3102   000BBE  6E1E               	movwf	(___lomod@divisor+4)^0,c
  3103   000BC0  0E00               	movlw	0
  3104   000BC2  6E1F               	movwf	(___lomod@divisor+5)^0,c
  3105   000BC4  0E00               	movlw	0
  3106   000BC6  6E20               	movwf	(___lomod@divisor+6)^0,c
  3107   000BC8  0E00               	movlw	0
  3108   000BCA  6E21               	movwf	(___lomod@divisor+7)^0,c
  3109   000BCC  ECBF  F008         	call	___lomod	;wreg free
  3110   000BD0  C012  F060         	movff	?___lomod,??_utoa
  3111   000BD4  C013  F061         	movff	?___lomod+1,??_utoa+1
  3112   000BD8  C014  F062         	movff	?___lomod+2,??_utoa+2
  3113   000BDC  C015  F063         	movff	?___lomod+3,??_utoa+3
  3114   000BE0  C016  F064         	movff	?___lomod+4,??_utoa+4
  3115   000BE4  C017  F065         	movff	?___lomod+5,??_utoa+5
  3116   000BE8  C018  F066         	movff	?___lomod+6,??_utoa+6
  3117   000BEC  C019  F067         	movff	?___lomod+7,??_utoa+7
  3118   000BF0  0100               	movlb	0	; () banked
  3119   000BF2  5160               	movf	??_utoa& (0+255),w,b
  3120   000BF4  0F30               	addlw	48
  3121   000BF6  6EDF               	movwf	indf2,c
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3125   000BF8  076A               	decf	utoa@p& (0+255),f,b
  3126   000BFA  A0D8               	btfss	status,0,c
  3127   000BFC  076B               	decf	(utoa@p+1)& (0+255),f,b
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3131   000BFE  0768               	decf	utoa@w& (0+255),f,b
  3132   000C00  A0D8               	btfss	status,0,c
  3133   000C02  0769               	decf	(utoa@w+1)& (0+255),f,b
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3137   000C04  C06C  F012         	movff	utoa@n,___lodiv@dividend
  3138   000C08  C06D  F013         	movff	utoa@n+1,___lodiv@dividend+1
  3139   000C0C  C06E  F014         	movff	utoa@n+2,___lodiv@dividend+2
  3140   000C10  C06F  F015         	movff	utoa@n+3,___lodiv@dividend+3
  3141   000C14  C070  F016         	movff	utoa@n+4,___lodiv@dividend+4
  3142   000C18  C071  F017         	movff	utoa@n+5,___lodiv@dividend+5
  3143   000C1C  C072  F018         	movff	utoa@n+6,___lodiv@dividend+6
  3144   000C20  C073  F019         	movff	utoa@n+7,___lodiv@dividend+7
  3145   000C24  0E0A               	movlw	10
  3146   000C26  6E1A               	movwf	___lodiv@divisor^0,c
  3147   000C28  0E00               	movlw	0
  3148   000C2A  6E1B               	movwf	(___lodiv@divisor+1)^0,c
  3149   000C2C  0E00               	movlw	0
  3150   000C2E  6E1C               	movwf	(___lodiv@divisor+2)^0,c
  3151   000C30  0E00               	movlw	0
  3152   000C32  6E1D               	movwf	(___lodiv@divisor+3)^0,c
  3153   000C34  0E00               	movlw	0
  3154   000C36  6E1E               	movwf	(___lodiv@divisor+4)^0,c
  3155   000C38  0E00               	movlw	0
  3156   000C3A  6E1F               	movwf	(___lodiv@divisor+5)^0,c
  3157   000C3C  0E00               	movlw	0
  3158   000C3E  6E20               	movwf	(___lodiv@divisor+6)^0,c
  3159   000C40  0E00               	movlw	0
  3160   000C42  6E21               	movwf	(___lodiv@divisor+7)^0,c
  3161   000C44  EC91  F007         	call	___lodiv	;wreg free
  3162   000C48  C012  F06C         	movff	?___lodiv,utoa@n
  3163   000C4C  C013  F06D         	movff	?___lodiv+1,utoa@n+1
  3164   000C50  C014  F06E         	movff	?___lodiv+2,utoa@n+2
  3165   000C54  C015  F06F         	movff	?___lodiv+3,utoa@n+3
  3166   000C58  C016  F070         	movff	?___lodiv+4,utoa@n+4
  3167   000C5C  C017  F071         	movff	?___lodiv+5,utoa@n+5
  3168   000C60  C018  F072         	movff	?___lodiv+6,utoa@n+6
  3169   000C64  C019  F073         	movff	?___lodiv+7,utoa@n+7
  3170   000C68                     l2866:
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3173   000C68  0100               	movlb	0	; () banked
  3174   000C6A  5174               	movf	utoa@i& (0+255),w,b
  3175   000C6C  1175               	iorwf	(utoa@i+1)& (0+255),w,b
  3176   000C6E  B4D8               	btfsc	status,2,c
  3177   000C70  D011               	goto	u1970
  3178                           
  3179                           ; BSR set to: 0
  3180   000C72  516C               	movf	utoa@n& (0+255),w,b
  3181   000C74  116D               	iorwf	(utoa@n+1)& (0+255),w,b
  3182   000C76  116E               	iorwf	(utoa@n+2)& (0+255),w,b
  3183   000C78  116F               	iorwf	(utoa@n+3)& (0+255),w,b
  3184   000C7A  1170               	iorwf	(utoa@n+4)& (0+255),w,b
  3185   000C7C  1171               	iorwf	(utoa@n+5)& (0+255),w,b
  3186   000C7E  1172               	iorwf	(utoa@n+6)& (0+255),w,b
  3187   000C80  1173               	iorwf	(utoa@n+7)& (0+255),w,b
  3188   000C82  A4D8               	btfss	status,2,c
  3189   000C84  D77A               	goto	l2856
  3190                           
  3191                           ; BSR set to: 0
  3192   000C86  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
  3193   000C88  D005               	goto	u1970
  3194   000C8A  516B               	movf	(utoa@p+1)& (0+255),w,b
  3195   000C8C  E102               	bnz	u1971
  3196   000C8E  056A               	decf	utoa@p& (0+255),w,b
  3197   000C90  B0D8               	btfsc	status,0,c
  3198   000C92                     u1971:
  3199   000C92  D773               	goto	l2856
  3200   000C94                     u1970:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3204   000C94  C02F  F024         	movff	utoa@fp,pad@fp
  3205   000C98  C030  F025         	movff	utoa@fp+1,pad@fp+1
  3206   000C9C  0EB7               	movlw	low _dbuf
  3207   000C9E  2574               	addwf	utoa@i& (0+255),w,b
  3208   000CA0  6E26               	movwf	pad@buf^0,c
  3209   000CA2  0E00               	movlw	high _dbuf
  3210   000CA4  2175               	addwfc	(utoa@i+1)& (0+255),w,b
  3211   000CA6  6E27               	movwf	(pad@buf+1)^0,c
  3212   000CA8  C068  F028         	movff	utoa@w,pad@p
  3213   000CAC  C069  F029         	movff	utoa@w+1,pad@p+1
  3214   000CB0  EC86  F009         	call	_pad	;wreg free
  3215   000CB4  0012               	return		;funcret
  3216   000CB6                     __end_of_utoa:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function ___lomod *****************
  3220 ;; Defined at:
  3221 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  dividend        8   17[COMRAM] unsigned long long 
  3224 ;;  divisor         8   25[COMRAM] unsigned long long 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  counter         1   33[COMRAM] unsigned char 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  8   17[COMRAM] unsigned long long 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3236 ;;      Params:        16       0       0       0       0       0       0
  3237 ;;      Locals:         1       0       0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0
  3239 ;;      Totals:        17       0       0       0       0       0       0
  3240 ;;Total ram usage:       17 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 4
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_utoa
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text5
  3251   00117E                     __ptext5:
  3252                           	callstack 0
  3253   00117E                     ___lomod:
  3254                           	callstack 22
  3255                           
  3256                           ;incstack = 0
  3257   00117E  501A               	movf	___lomod@divisor^0,w,c
  3258   001180  101B               	iorwf	(___lomod@divisor+1)^0,w,c
  3259   001182  101C               	iorwf	(___lomod@divisor+2)^0,w,c
  3260   001184  101D               	iorwf	(___lomod@divisor+3)^0,w,c
  3261   001186  101E               	iorwf	(___lomod@divisor+4)^0,w,c
  3262   001188  101F               	iorwf	(___lomod@divisor+5)^0,w,c
  3263   00118A  1020               	iorwf	(___lomod@divisor+6)^0,w,c
  3264   00118C  1021               	iorwf	(___lomod@divisor+7)^0,w,c
  3265   00118E  B4D8               	btfsc	status,2,c
  3266   001190  D03C               	goto	l808
  3267   001192  0E01               	movlw	1
  3268   001194  6E22               	movwf	___lomod@counter^0,c
  3269   001196  D00A               	goto	l2144
  3270   001198                     l2142:
  3271   001198  90D8               	bcf	status,0,c
  3272   00119A  361A               	rlcf	___lomod@divisor^0,f,c
  3273   00119C  361B               	rlcf	(___lomod@divisor+1)^0,f,c
  3274   00119E  361C               	rlcf	(___lomod@divisor+2)^0,f,c
  3275   0011A0  361D               	rlcf	(___lomod@divisor+3)^0,f,c
  3276   0011A2  361E               	rlcf	(___lomod@divisor+4)^0,f,c
  3277   0011A4  361F               	rlcf	(___lomod@divisor+5)^0,f,c
  3278   0011A6  3620               	rlcf	(___lomod@divisor+6)^0,f,c
  3279   0011A8  3621               	rlcf	(___lomod@divisor+7)^0,f,c
  3280   0011AA  2A22               	incf	___lomod@counter^0,f,c
  3281   0011AC                     l2144:
  3282   0011AC  AE21               	btfss	(___lomod@divisor+7)^0,7,c
  3283   0011AE  D7F4               	goto	l2142
  3284   0011B0                     u1180:
  3285   0011B0  501A               	movf	___lomod@divisor^0,w,c
  3286   0011B2  5C12               	subwf	___lomod@dividend^0,w,c
  3287   0011B4  501B               	movf	(___lomod@divisor+1)^0,w,c
  3288   0011B6  5813               	subwfb	(___lomod@dividend+1)^0,w,c
  3289   0011B8  501C               	movf	(___lomod@divisor+2)^0,w,c
  3290   0011BA  5814               	subwfb	(___lomod@dividend+2)^0,w,c
  3291   0011BC  501D               	movf	(___lomod@divisor+3)^0,w,c
  3292   0011BE  5815               	subwfb	(___lomod@dividend+3)^0,w,c
  3293   0011C0  501E               	movf	(___lomod@divisor+4)^0,w,c
  3294   0011C2  5816               	subwfb	(___lomod@dividend+4)^0,w,c
  3295   0011C4  501F               	movf	(___lomod@divisor+5)^0,w,c
  3296   0011C6  5817               	subwfb	(___lomod@dividend+5)^0,w,c
  3297   0011C8  5020               	movf	(___lomod@divisor+6)^0,w,c
  3298   0011CA  5818               	subwfb	(___lomod@dividend+6)^0,w,c
  3299   0011CC  5021               	movf	(___lomod@divisor+7)^0,w,c
  3300   0011CE  5819               	subwfb	(___lomod@dividend+7)^0,w,c
  3301   0011D0  A0D8               	btfss	status,0,c
  3302   0011D2  D010               	goto	l2150
  3303   0011D4  501A               	movf	___lomod@divisor^0,w,c
  3304   0011D6  5E12               	subwf	___lomod@dividend^0,f,c
  3305   0011D8  501B               	movf	(___lomod@divisor+1)^0,w,c
  3306   0011DA  5A13               	subwfb	(___lomod@dividend+1)^0,f,c
  3307   0011DC  501C               	movf	(___lomod@divisor+2)^0,w,c
  3308   0011DE  5A14               	subwfb	(___lomod@dividend+2)^0,f,c
  3309   0011E0  501D               	movf	(___lomod@divisor+3)^0,w,c
  3310   0011E2  5A15               	subwfb	(___lomod@dividend+3)^0,f,c
  3311   0011E4  501E               	movf	(___lomod@divisor+4)^0,w,c
  3312   0011E6  5A16               	subwfb	(___lomod@dividend+4)^0,f,c
  3313   0011E8  501F               	movf	(___lomod@divisor+5)^0,w,c
  3314   0011EA  5A17               	subwfb	(___lomod@dividend+5)^0,f,c
  3315   0011EC  5020               	movf	(___lomod@divisor+6)^0,w,c
  3316   0011EE  5A18               	subwfb	(___lomod@dividend+6)^0,f,c
  3317   0011F0  5021               	movf	(___lomod@divisor+7)^0,w,c
  3318   0011F2  5A19               	subwfb	(___lomod@dividend+7)^0,f,c
  3319   0011F4                     l2150:
  3320   0011F4  90D8               	bcf	status,0,c
  3321   0011F6  3221               	rrcf	(___lomod@divisor+7)^0,f,c
  3322   0011F8  3220               	rrcf	(___lomod@divisor+6)^0,f,c
  3323   0011FA  321F               	rrcf	(___lomod@divisor+5)^0,f,c
  3324   0011FC  321E               	rrcf	(___lomod@divisor+4)^0,f,c
  3325   0011FE  321D               	rrcf	(___lomod@divisor+3)^0,f,c
  3326   001200  321C               	rrcf	(___lomod@divisor+2)^0,f,c
  3327   001202  321B               	rrcf	(___lomod@divisor+1)^0,f,c
  3328   001204  321A               	rrcf	___lomod@divisor^0,f,c
  3329   001206  2E22               	decfsz	___lomod@counter^0,f,c
  3330   001208  D7D3               	goto	u1180
  3331   00120A                     l808:
  3332   00120A  C012  F012         	movff	___lomod@dividend,?___lomod
  3333   00120E  C013  F013         	movff	___lomod@dividend+1,?___lomod+1
  3334   001212  C014  F014         	movff	___lomod@dividend+2,?___lomod+2
  3335   001216  C015  F015         	movff	___lomod@dividend+3,?___lomod+3
  3336   00121A  C016  F016         	movff	___lomod@dividend+4,?___lomod+4
  3337   00121E  C017  F017         	movff	___lomod@dividend+5,?___lomod+5
  3338   001222  C018  F018         	movff	___lomod@dividend+6,?___lomod+6
  3339   001226  C019  F019         	movff	___lomod@dividend+7,?___lomod+7
  3340   00122A  0012               	return		;funcret
  3341   00122C                     __end_of___lomod:
  3342                           	callstack 0
  3343                           
  3344 ;; *************** function ___lodiv *****************
  3345 ;; Defined at:
  3346 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  dividend        8   17[COMRAM] unsigned long long 
  3349 ;;  divisor         8   25[COMRAM] unsigned long long 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  quotient        8   33[COMRAM] unsigned long long 
  3352 ;;  counter         1   41[COMRAM] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  8   17[COMRAM] unsigned long long 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3362 ;;      Params:        16       0       0       0       0       0       0
  3363 ;;      Locals:         9       0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0
  3365 ;;      Totals:        25       0       0       0       0       0       0
  3366 ;;Total ram usage:       25 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 4
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_utoa
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text6
  3377   000F22                     __ptext6:
  3378                           	callstack 0
  3379   000F22                     ___lodiv:
  3380                           	callstack 22
  3381                           
  3382                           ;incstack = 0
  3383   000F22  EE20  F022         	lfsr	2,___lodiv@quotient
  3384   000F26  0E07               	movlw	7
  3385   000F28                     u1131:
  3386   000F28  6ADE               	clrf	postinc2,c
  3387   000F2A  06E8               	decf	wreg,f,c
  3388   000F2C  E2FD               	bc	u1131
  3389   000F2E  501A               	movf	___lodiv@divisor^0,w,c
  3390   000F30  101B               	iorwf	(___lodiv@divisor+1)^0,w,c
  3391   000F32  101C               	iorwf	(___lodiv@divisor+2)^0,w,c
  3392   000F34  101D               	iorwf	(___lodiv@divisor+3)^0,w,c
  3393   000F36  101E               	iorwf	(___lodiv@divisor+4)^0,w,c
  3394   000F38  101F               	iorwf	(___lodiv@divisor+5)^0,w,c
  3395   000F3A  1020               	iorwf	(___lodiv@divisor+6)^0,w,c
  3396   000F3C  1021               	iorwf	(___lodiv@divisor+7)^0,w,c
  3397   000F3E  B4D8               	btfsc	status,2,c
  3398   000F40  D046               	goto	l798
  3399   000F42  0E01               	movlw	1
  3400   000F44  6E2A               	movwf	___lodiv@counter^0,c
  3401   000F46  D00A               	goto	l2124
  3402   000F48                     l2122:
  3403   000F48  90D8               	bcf	status,0,c
  3404   000F4A  361A               	rlcf	___lodiv@divisor^0,f,c
  3405   000F4C  361B               	rlcf	(___lodiv@divisor+1)^0,f,c
  3406   000F4E  361C               	rlcf	(___lodiv@divisor+2)^0,f,c
  3407   000F50  361D               	rlcf	(___lodiv@divisor+3)^0,f,c
  3408   000F52  361E               	rlcf	(___lodiv@divisor+4)^0,f,c
  3409   000F54  361F               	rlcf	(___lodiv@divisor+5)^0,f,c
  3410   000F56  3620               	rlcf	(___lodiv@divisor+6)^0,f,c
  3411   000F58  3621               	rlcf	(___lodiv@divisor+7)^0,f,c
  3412   000F5A  2A2A               	incf	___lodiv@counter^0,f,c
  3413   000F5C                     l2124:
  3414   000F5C  AE21               	btfss	(___lodiv@divisor+7)^0,7,c
  3415   000F5E  D7F4               	goto	l2122
  3416   000F60                     u1150:
  3417   000F60  90D8               	bcf	status,0,c
  3418   000F62  3622               	rlcf	___lodiv@quotient^0,f,c
  3419   000F64  3623               	rlcf	(___lodiv@quotient+1)^0,f,c
  3420   000F66  3624               	rlcf	(___lodiv@quotient+2)^0,f,c
  3421   000F68  3625               	rlcf	(___lodiv@quotient+3)^0,f,c
  3422   000F6A  3626               	rlcf	(___lodiv@quotient+4)^0,f,c
  3423   000F6C  3627               	rlcf	(___lodiv@quotient+5)^0,f,c
  3424   000F6E  3628               	rlcf	(___lodiv@quotient+6)^0,f,c
  3425   000F70  3629               	rlcf	(___lodiv@quotient+7)^0,f,c
  3426   000F72  501A               	movf	___lodiv@divisor^0,w,c
  3427   000F74  5C12               	subwf	___lodiv@dividend^0,w,c
  3428   000F76  501B               	movf	(___lodiv@divisor+1)^0,w,c
  3429   000F78  5813               	subwfb	(___lodiv@dividend+1)^0,w,c
  3430   000F7A  501C               	movf	(___lodiv@divisor+2)^0,w,c
  3431   000F7C  5814               	subwfb	(___lodiv@dividend+2)^0,w,c
  3432   000F7E  501D               	movf	(___lodiv@divisor+3)^0,w,c
  3433   000F80  5815               	subwfb	(___lodiv@dividend+3)^0,w,c
  3434   000F82  501E               	movf	(___lodiv@divisor+4)^0,w,c
  3435   000F84  5816               	subwfb	(___lodiv@dividend+4)^0,w,c
  3436   000F86  501F               	movf	(___lodiv@divisor+5)^0,w,c
  3437   000F88  5817               	subwfb	(___lodiv@dividend+5)^0,w,c
  3438   000F8A  5020               	movf	(___lodiv@divisor+6)^0,w,c
  3439   000F8C  5818               	subwfb	(___lodiv@dividend+6)^0,w,c
  3440   000F8E  5021               	movf	(___lodiv@divisor+7)^0,w,c
  3441   000F90  5819               	subwfb	(___lodiv@dividend+7)^0,w,c
  3442   000F92  A0D8               	btfss	status,0,c
  3443   000F94  D011               	goto	l2134
  3444   000F96  501A               	movf	___lodiv@divisor^0,w,c
  3445   000F98  5E12               	subwf	___lodiv@dividend^0,f,c
  3446   000F9A  501B               	movf	(___lodiv@divisor+1)^0,w,c
  3447   000F9C  5A13               	subwfb	(___lodiv@dividend+1)^0,f,c
  3448   000F9E  501C               	movf	(___lodiv@divisor+2)^0,w,c
  3449   000FA0  5A14               	subwfb	(___lodiv@dividend+2)^0,f,c
  3450   000FA2  501D               	movf	(___lodiv@divisor+3)^0,w,c
  3451   000FA4  5A15               	subwfb	(___lodiv@dividend+3)^0,f,c
  3452   000FA6  501E               	movf	(___lodiv@divisor+4)^0,w,c
  3453   000FA8  5A16               	subwfb	(___lodiv@dividend+4)^0,f,c
  3454   000FAA  501F               	movf	(___lodiv@divisor+5)^0,w,c
  3455   000FAC  5A17               	subwfb	(___lodiv@dividend+5)^0,f,c
  3456   000FAE  5020               	movf	(___lodiv@divisor+6)^0,w,c
  3457   000FB0  5A18               	subwfb	(___lodiv@dividend+6)^0,f,c
  3458   000FB2  5021               	movf	(___lodiv@divisor+7)^0,w,c
  3459   000FB4  5A19               	subwfb	(___lodiv@dividend+7)^0,f,c
  3460   000FB6  8022               	bsf	___lodiv@quotient^0,0,c
  3461   000FB8                     l2134:
  3462   000FB8  90D8               	bcf	status,0,c
  3463   000FBA  3221               	rrcf	(___lodiv@divisor+7)^0,f,c
  3464   000FBC  3220               	rrcf	(___lodiv@divisor+6)^0,f,c
  3465   000FBE  321F               	rrcf	(___lodiv@divisor+5)^0,f,c
  3466   000FC0  321E               	rrcf	(___lodiv@divisor+4)^0,f,c
  3467   000FC2  321D               	rrcf	(___lodiv@divisor+3)^0,f,c
  3468   000FC4  321C               	rrcf	(___lodiv@divisor+2)^0,f,c
  3469   000FC6  321B               	rrcf	(___lodiv@divisor+1)^0,f,c
  3470   000FC8  321A               	rrcf	___lodiv@divisor^0,f,c
  3471   000FCA  2E2A               	decfsz	___lodiv@counter^0,f,c
  3472   000FCC  D7C9               	goto	u1150
  3473   000FCE                     l798:
  3474   000FCE  C022  F012         	movff	___lodiv@quotient,?___lodiv
  3475   000FD2  C023  F013         	movff	___lodiv@quotient+1,?___lodiv+1
  3476   000FD6  C024  F014         	movff	___lodiv@quotient+2,?___lodiv+2
  3477   000FDA  C025  F015         	movff	___lodiv@quotient+3,?___lodiv+3
  3478   000FDE  C026  F016         	movff	___lodiv@quotient+4,?___lodiv+4
  3479   000FE2  C027  F017         	movff	___lodiv@quotient+5,?___lodiv+5
  3480   000FE6  C028  F018         	movff	___lodiv@quotient+6,?___lodiv+6
  3481   000FEA  C029  F019         	movff	___lodiv@quotient+7,?___lodiv+7
  3482   000FEE  0012               	return		;funcret
  3483   000FF0                     __end_of___lodiv:
  3484                           	callstack 0
  3485                           
  3486 ;; *************** function _dtoa *****************
  3487 ;; Defined at:
  3488 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  fp              2   46[COMRAM] PTR struct _IO_FILE
  3491 ;;		 -> NULL(0), 
  3492 ;;  d               8   48[COMRAM] long long 
  3493 ;; Auto vars:     Size  Location     Type
  3494 ;;  n               8   14[BANK0 ] long long 
  3495 ;;  i               2   23[BANK0 ] int 
  3496 ;;  w               2   12[BANK0 ] int 
  3497 ;;  p               2   10[BANK0 ] int 
  3498 ;;  s               1   22[BANK0 ] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3508 ;;      Params:        10       0       0       0       0       0       0
  3509 ;;      Locals:         0      17       0       0       0       0       0
  3510 ;;      Temps:          0       8       0       0       0       0       0
  3511 ;;      Totals:        10      25       0       0       0       0       0
  3512 ;;Total ram usage:       35 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 9
  3515 ;; This function calls:
  3516 ;;		___aodiv
  3517 ;;		___aomod
  3518 ;;		_abs
  3519 ;;		_pad
  3520 ;; This function is called by:
  3521 ;;		_vfpfcnvrt
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text7
  3526   000906                     __ptext7:
  3527                           	callstack 0
  3528   000906                     _dtoa:
  3529                           	callstack 18
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3532                           
  3533                           ;incstack = 0
  3534   000906  C031  F06E         	movff	dtoa@d,dtoa@n
  3535   00090A  C032  F06F         	movff	dtoa@d+1,dtoa@n+1
  3536   00090E  C033  F070         	movff	dtoa@d+2,dtoa@n+2
  3537   000912  C034  F071         	movff	dtoa@d+3,dtoa@n+3
  3538   000916  C035  F072         	movff	dtoa@d+4,dtoa@n+4
  3539   00091A  C036  F073         	movff	dtoa@d+5,dtoa@n+5
  3540   00091E  C037  F074         	movff	dtoa@d+6,dtoa@n+6
  3541   000922  C038  F075         	movff	dtoa@d+7,dtoa@n+7
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3544   000926  0100               	movlb	0	; () banked
  3545   000928  AF75               	btfss	(dtoa@n+7)& (0+255),7,b
  3546   00092A  D002               	goto	u1840
  3547   00092C  0E01               	movlw	1
  3548   00092E  D001               	goto	u1850
  3549   000930                     u1840:
  3550   000930  0E00               	movlw	0
  3551   000932                     u1850:
  3552   000932  6F76               	movwf	dtoa@s& (0+255),b
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3556   000934  5176               	movf	dtoa@s& (0+255),w,b
  3557   000936  B4D8               	btfsc	status,2,c
  3558   000938  D010               	goto	l2804
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3562   00093A  1F75               	comf	(dtoa@n+7)& (0+255),f,b
  3563   00093C  1F74               	comf	(dtoa@n+6)& (0+255),f,b
  3564   00093E  1F73               	comf	(dtoa@n+5)& (0+255),f,b
  3565   000940  1F72               	comf	(dtoa@n+4)& (0+255),f,b
  3566   000942  1F71               	comf	(dtoa@n+3)& (0+255),f,b
  3567   000944  1F70               	comf	(dtoa@n+2)& (0+255),f,b
  3568   000946  1F6F               	comf	(dtoa@n+1)& (0+255),f,b
  3569   000948  6D6E               	negf	dtoa@n& (0+255),b
  3570   00094A  0E00               	movlw	0
  3571   00094C  236F               	addwfc	(dtoa@n+1)& (0+255),f,b
  3572   00094E  2370               	addwfc	(dtoa@n+2)& (0+255),f,b
  3573   000950  2371               	addwfc	(dtoa@n+3)& (0+255),f,b
  3574   000952  2372               	addwfc	(dtoa@n+4)& (0+255),f,b
  3575   000954  2373               	addwfc	(dtoa@n+5)& (0+255),f,b
  3576   000956  2374               	addwfc	(dtoa@n+6)& (0+255),f,b
  3577   000958  2375               	addwfc	(dtoa@n+7)& (0+255),f,b
  3578   00095A                     l2804:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3582   00095A  BE3E               	btfsc	(_prec+1)^0,7,c
  3583   00095C  D005               	goto	u1870
  3584   00095E  503E               	movf	(_prec+1)^0,w,c
  3585   000960  E108               	bnz	l1083
  3586   000962  043D               	decf	_prec^0,w,c
  3587   000964  B0D8               	btfsc	status,0,c
  3588   000966  D005               	goto	l1083
  3589   000968                     u1870:
  3590                           
  3591                           ; BSR set to: 0
  3592   000968  0E00               	movlw	0
  3593   00096A  6F6B               	movwf	(dtoa@p+1)& (0+255),b
  3594   00096C  0E01               	movlw	1
  3595   00096E  6F6A               	movwf	dtoa@p& (0+255),b
  3596   000970  D004               	goto	l1085
  3597   000972                     l1083:
  3598                           
  3599                           ; BSR set to: 0
  3600   000972  C03D  F06A         	movff	_prec,dtoa@p
  3601   000976  C03E  F06B         	movff	_prec+1,dtoa@p+1
  3602   00097A                     l1085:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3606   00097A  C03B  F06C         	movff	_width,dtoa@w
  3607   00097E  C03C  F06D         	movff	_width+1,dtoa@w+1
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3611   000982  5176               	movf	dtoa@s& (0+255),w,b
  3612   000984  B4D8               	btfsc	status,2,c
  3613   000986  D010               	goto	l1086
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3617   000988  076C               	decf	dtoa@w& (0+255),f,b
  3618   00098A  A0D8               	btfss	status,0,c
  3619   00098C  076D               	decf	(dtoa@w+1)& (0+255),f,b
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3623   00098E  5176               	movf	dtoa@s& (0+255),w,b
  3624   000990  A4D8               	btfss	status,2,c
  3625   000992  D004               	goto	l2816
  3626                           
  3627                           ; BSR set to: 0
  3628   000994  0E00               	movlw	0
  3629   000996  6F69               	movwf	(_dtoa$1458+1)& (0+255),b
  3630   000998  0E2B               	movlw	43
  3631   00099A  D003               	goto	L1
  3632   00099C                     l2816:
  3633                           
  3634                           ; BSR set to: 0
  3635   00099C  0E00               	movlw	0
  3636   00099E  6F69               	movwf	(_dtoa$1458+1)& (0+255),b
  3637   0009A0  0E2D               	movlw	45
  3638   0009A2                     L1:
  3639   0009A2  6F68               	movwf	_dtoa$1458& (0+255),b
  3640                           
  3641                           ; BSR set to: 0
  3642   0009A4  C068  F076         	movff	_dtoa$1458,dtoa@s
  3643   0009A8                     l1086:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3647   0009A8  0E00               	movlw	0
  3648   0009AA  6F78               	movwf	(dtoa@i+1)& (0+255),b
  3649   0009AC  0E1F               	movlw	31
  3650   0009AE  6F77               	movwf	dtoa@i& (0+255),b
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3654   0009B0  0E00               	movlw	0
  3655   0009B2  6FD6               	movwf	(_dbuf+31)& (0+255),b
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3658   0009B4  D07D               	goto	l2832
  3659   0009B6                     l2822:
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3663   0009B6  0777               	decf	dtoa@i& (0+255),f,b
  3664   0009B8  A0D8               	btfss	status,0,c
  3665   0009BA  0778               	decf	(dtoa@i+1)& (0+255),f,b
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3669   0009BC  0EB7               	movlw	low _dbuf
  3670   0009BE  2577               	addwf	dtoa@i& (0+255),w,b
  3671   0009C0  6ED9               	movwf	fsr2l,c
  3672   0009C2  0E00               	movlw	high _dbuf
  3673   0009C4  2178               	addwfc	(dtoa@i+1)& (0+255),w,b
  3674   0009C6  6EDA               	movwf	fsr2h,c
  3675   0009C8  C06E  F012         	movff	dtoa@n,___aomod@dividend
  3676   0009CC  C06F  F013         	movff	dtoa@n+1,___aomod@dividend+1
  3677   0009D0  C070  F014         	movff	dtoa@n+2,___aomod@dividend+2
  3678   0009D4  C071  F015         	movff	dtoa@n+3,___aomod@dividend+3
  3679   0009D8  C072  F016         	movff	dtoa@n+4,___aomod@dividend+4
  3680   0009DC  C073  F017         	movff	dtoa@n+5,___aomod@dividend+5
  3681   0009E0  C074  F018         	movff	dtoa@n+6,___aomod@dividend+6
  3682   0009E4  C075  F019         	movff	dtoa@n+7,___aomod@dividend+7
  3683   0009E8  0E0A               	movlw	10
  3684   0009EA  6E1A               	movwf	___aomod@divisor^0,c
  3685   0009EC  0E00               	movlw	0
  3686   0009EE  6E1B               	movwf	(___aomod@divisor+1)^0,c
  3687   0009F0  0E00               	movlw	0
  3688   0009F2  6E1C               	movwf	(___aomod@divisor+2)^0,c
  3689   0009F4  0E00               	movlw	0
  3690   0009F6  6E1D               	movwf	(___aomod@divisor+3)^0,c
  3691   0009F8  0E00               	movlw	0
  3692   0009FA  6E1E               	movwf	(___aomod@divisor+4)^0,c
  3693   0009FC  0E00               	movlw	0
  3694   0009FE  6E1F               	movwf	(___aomod@divisor+5)^0,c
  3695   000A00  0E00               	movlw	0
  3696   000A02  6E20               	movwf	(___aomod@divisor+6)^0,c
  3697   000A04  0E00               	movlw	0
  3698   000A06  6E21               	movwf	(___aomod@divisor+7)^0,c
  3699   000A08  ECFF  F006         	call	___aomod	;wreg free
  3700   000A0C  C012  F060         	movff	?___aomod,??_dtoa
  3701   000A10  C013  F061         	movff	?___aomod+1,??_dtoa+1
  3702   000A14  C014  F062         	movff	?___aomod+2,??_dtoa+2
  3703   000A18  C015  F063         	movff	?___aomod+3,??_dtoa+3
  3704   000A1C  C016  F064         	movff	?___aomod+4,??_dtoa+4
  3705   000A20  C017  F065         	movff	?___aomod+5,??_dtoa+5
  3706   000A24  C018  F066         	movff	?___aomod+6,??_dtoa+6
  3707   000A28  C019  F067         	movff	?___aomod+7,??_dtoa+7
  3708   000A2C  C060  F024         	movff	??_dtoa,abs@a
  3709   000A30  C061  F025         	movff	??_dtoa+1,abs@a+1
  3710   000A34  EC55  F00A         	call	_abs	;wreg free
  3711   000A38  5024               	movf	?_abs^0,w,c
  3712   000A3A  0F30               	addlw	48
  3713   000A3C  6EDF               	movwf	indf2,c
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3716   000A3E  0100               	movlb	0	; () banked
  3717   000A40  076A               	decf	dtoa@p& (0+255),f,b
  3718   000A42  A0D8               	btfss	status,0,c
  3719   000A44  076B               	decf	(dtoa@p+1)& (0+255),f,b
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3723   000A46  076C               	decf	dtoa@w& (0+255),f,b
  3724   000A48  A0D8               	btfss	status,0,c
  3725   000A4A  076D               	decf	(dtoa@w+1)& (0+255),f,b
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3729   000A4C  C06E  F012         	movff	dtoa@n,___aodiv@dividend
  3730   000A50  C06F  F013         	movff	dtoa@n+1,___aodiv@dividend+1
  3731   000A54  C070  F014         	movff	dtoa@n+2,___aodiv@dividend+2
  3732   000A58  C071  F015         	movff	dtoa@n+3,___aodiv@dividend+3
  3733   000A5C  C072  F016         	movff	dtoa@n+4,___aodiv@dividend+4
  3734   000A60  C073  F017         	movff	dtoa@n+5,___aodiv@dividend+5
  3735   000A64  C074  F018         	movff	dtoa@n+6,___aodiv@dividend+6
  3736   000A68  C075  F019         	movff	dtoa@n+7,___aodiv@dividend+7
  3737   000A6C  0E0A               	movlw	10
  3738   000A6E  6E1A               	movwf	___aodiv@divisor^0,c
  3739   000A70  0E00               	movlw	0
  3740   000A72  6E1B               	movwf	(___aodiv@divisor+1)^0,c
  3741   000A74  0E00               	movlw	0
  3742   000A76  6E1C               	movwf	(___aodiv@divisor+2)^0,c
  3743   000A78  0E00               	movlw	0
  3744   000A7A  6E1D               	movwf	(___aodiv@divisor+3)^0,c
  3745   000A7C  0E00               	movlw	0
  3746   000A7E  6E1E               	movwf	(___aodiv@divisor+4)^0,c
  3747   000A80  0E00               	movlw	0
  3748   000A82  6E1F               	movwf	(___aodiv@divisor+5)^0,c
  3749   000A84  0E00               	movlw	0
  3750   000A86  6E20               	movwf	(___aodiv@divisor+6)^0,c
  3751   000A88  0E00               	movlw	0
  3752   000A8A  6E21               	movwf	(___aodiv@divisor+7)^0,c
  3753   000A8C  EC5B  F006         	call	___aodiv	;wreg free
  3754   000A90  C012  F06E         	movff	?___aodiv,dtoa@n
  3755   000A94  C013  F06F         	movff	?___aodiv+1,dtoa@n+1
  3756   000A98  C014  F070         	movff	?___aodiv+2,dtoa@n+2
  3757   000A9C  C015  F071         	movff	?___aodiv+3,dtoa@n+3
  3758   000AA0  C016  F072         	movff	?___aodiv+4,dtoa@n+4
  3759   000AA4  C017  F073         	movff	?___aodiv+5,dtoa@n+5
  3760   000AA8  C018  F074         	movff	?___aodiv+6,dtoa@n+6
  3761   000AAC  C019  F075         	movff	?___aodiv+7,dtoa@n+7
  3762   000AB0                     l2832:
  3763                           
  3764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3765   000AB0  0100               	movlb	0	; () banked
  3766   000AB2  BF78               	btfsc	(dtoa@i+1)& (0+255),7,b
  3767   000AB4  D016               	goto	u1920
  3768   000AB6  5178               	movf	(dtoa@i+1)& (0+255),w,b
  3769   000AB8  E103               	bnz	u1900
  3770   000ABA  0577               	decf	dtoa@i& (0+255),w,b
  3771   000ABC  A0D8               	btfss	status,0,c
  3772   000ABE  D011               	goto	u1920
  3773   000AC0                     u1900:
  3774                           
  3775                           ; BSR set to: 0
  3776   000AC0  516E               	movf	dtoa@n& (0+255),w,b
  3777   000AC2  116F               	iorwf	(dtoa@n+1)& (0+255),w,b
  3778   000AC4  1170               	iorwf	(dtoa@n+2)& (0+255),w,b
  3779   000AC6  1171               	iorwf	(dtoa@n+3)& (0+255),w,b
  3780   000AC8  1172               	iorwf	(dtoa@n+4)& (0+255),w,b
  3781   000ACA  1173               	iorwf	(dtoa@n+5)& (0+255),w,b
  3782   000ACC  1174               	iorwf	(dtoa@n+6)& (0+255),w,b
  3783   000ACE  1175               	iorwf	(dtoa@n+7)& (0+255),w,b
  3784   000AD0  A4D8               	btfss	status,2,c
  3785   000AD2  D771               	goto	l2822
  3786                           
  3787                           ; BSR set to: 0
  3788   000AD4  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
  3789   000AD6  D005               	goto	u1920
  3790   000AD8  516B               	movf	(dtoa@p+1)& (0+255),w,b
  3791   000ADA  E102               	bnz	u1921
  3792   000ADC  056A               	decf	dtoa@p& (0+255),w,b
  3793   000ADE  B0D8               	btfsc	status,0,c
  3794   000AE0                     u1921:
  3795   000AE0  D76A               	goto	l2822
  3796   000AE2                     u1920:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3800   000AE2  5176               	movf	dtoa@s& (0+255),w,b
  3801   000AE4  B4D8               	btfsc	status,2,c
  3802   000AE6  D00B               	goto	l2844
  3803                           
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3806   000AE8  0777               	decf	dtoa@i& (0+255),f,b
  3807   000AEA  A0D8               	btfss	status,0,c
  3808   000AEC  0778               	decf	(dtoa@i+1)& (0+255),f,b
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3812   000AEE  0EB7               	movlw	low _dbuf
  3813   000AF0  2577               	addwf	dtoa@i& (0+255),w,b
  3814   000AF2  6ED9               	movwf	fsr2l,c
  3815   000AF4  0E00               	movlw	high _dbuf
  3816   000AF6  2178               	addwfc	(dtoa@i+1)& (0+255),w,b
  3817   000AF8  6EDA               	movwf	fsr2h,c
  3818   000AFA  C076  FFDF         	movff	dtoa@s,indf2
  3819   000AFE                     l2844:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3823   000AFE  C02F  F024         	movff	dtoa@fp,pad@fp
  3824   000B02  C030  F025         	movff	dtoa@fp+1,pad@fp+1
  3825   000B06  0EB7               	movlw	low _dbuf
  3826   000B08  2577               	addwf	dtoa@i& (0+255),w,b
  3827   000B0A  6E26               	movwf	pad@buf^0,c
  3828   000B0C  0E00               	movlw	high _dbuf
  3829   000B0E  2178               	addwfc	(dtoa@i+1)& (0+255),w,b
  3830   000B10  6E27               	movwf	(pad@buf+1)^0,c
  3831   000B12  C06C  F028         	movff	dtoa@w,pad@p
  3832   000B16  C06D  F029         	movff	dtoa@w+1,pad@p+1
  3833   000B1A  EC86  F009         	call	_pad	;wreg free
  3834   000B1E  0012               	return		;funcret
  3835   000B20                     __end_of_dtoa:
  3836                           	callstack 0
  3837                           
  3838 ;; *************** function _pad *****************
  3839 ;; Defined at:
  3840 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  3843 ;;		 -> NULL(0), 
  3844 ;;  buf             2   37[COMRAM] PTR unsigned char 
  3845 ;;		 -> dbuf(32), 
  3846 ;;  p               2   39[COMRAM] int 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  w               2   44[COMRAM] int 
  3849 ;;  i               2   42[COMRAM] int 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3859 ;;      Params:         6       0       0       0       0       0       0
  3860 ;;      Locals:         4       0       0       0       0       0       0
  3861 ;;      Temps:          1       0       0       0       0       0       0
  3862 ;;      Totals:        11       0       0       0       0       0       0
  3863 ;;Total ram usage:       11 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 8
  3866 ;; This function calls:
  3867 ;;		_fputc
  3868 ;;		_fputs
  3869 ;; This function is called by:
  3870 ;;		_dtoa
  3871 ;;		_utoa
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text8
  3876   00130C                     __ptext8:
  3877                           	callstack 0
  3878   00130C                     _pad:
  3879                           	callstack 18
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3882                           
  3883                           ;incstack = 0
  3884   00130C  BE29               	btfsc	(pad@p+1)^0,7,c
  3885   00130E  D005               	goto	l2158
  3886   001310  C028  F02D         	movff	pad@p,pad@w
  3887   001314  C029  F02E         	movff	pad@p+1,pad@w+1
  3888   001318  D004               	goto	l1060
  3889   00131A                     l2158:
  3890   00131A  0E00               	movlw	0
  3891   00131C  6E2E               	movwf	(pad@w+1)^0,c
  3892   00131E  0E00               	movlw	0
  3893   001320  6E2D               	movwf	pad@w^0,c
  3894   001322                     l1060:
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3897   001322  0E00               	movlw	0
  3898   001324  6E2C               	movwf	(pad@i+1)^0,c
  3899   001326  0E00               	movlw	0
  3900   001328  6E2B               	movwf	pad@i^0,c
  3901                           
  3902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3903   00132A  D00C               	goto	l2164
  3904   00132C                     l2160:
  3905                           
  3906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3907   00132C  0E00               	movlw	0
  3908   00132E  6E15               	movwf	(fputc@c+1)^0,c
  3909   001330  0E20               	movlw	32
  3910   001332  6E14               	movwf	fputc@c^0,c
  3911   001334  C024  F016         	movff	pad@fp,fputc@fp
  3912   001338  C025  F017         	movff	pad@fp+1,fputc@fp+1
  3913   00133C  EC50  F009         	call	_fputc	;wreg free
  3914                           
  3915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3916   001340  4A2B               	infsnz	pad@i^0,f,c
  3917   001342  2A2C               	incf	(pad@i+1)^0,f,c
  3918   001344                     l2164:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3921   001344  502D               	movf	pad@w^0,w,c
  3922   001346  5C2B               	subwf	pad@i^0,w,c
  3923   001348  502C               	movf	(pad@i+1)^0,w,c
  3924   00134A  0A80               	xorlw	128
  3925   00134C  6E2A               	movwf	??_pad^0,c
  3926   00134E  502E               	movf	(pad@w+1)^0,w,c
  3927   001350  0A80               	xorlw	128
  3928   001352  582A               	subwfb	??_pad^0,w,c
  3929   001354  A0D8               	btfss	status,0,c
  3930   001356  D7EA               	goto	l2160
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3933   001358  C026  F01D         	movff	pad@buf,fputs@s
  3934   00135C  C027  F01E         	movff	pad@buf+1,fputs@s+1
  3935   001360  C024  F01F         	movff	pad@fp,fputs@fp
  3936   001364  C025  F020         	movff	pad@fp+1,fputs@fp+1
  3937   001368  EC1E  F00A         	call	_fputs	;wreg free
  3938   00136C  0012               	return		;funcret
  3939   00136E                     __end_of_pad:
  3940                           	callstack 0
  3941                           
  3942 ;; *************** function _fputs *****************
  3943 ;; Defined at:
  3944 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  s               2   28[COMRAM] PTR const unsigned char 
  3947 ;;		 -> dbuf(32), 
  3948 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  3949 ;;		 -> NULL(0), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  i               2   33[COMRAM] int 
  3952 ;;  c               1   32[COMRAM] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2   28[COMRAM] int 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3962 ;;      Params:         4       0       0       0       0       0       0
  3963 ;;      Locals:         3       0       0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0
  3965 ;;      Totals:         7       0       0       0       0       0       0
  3966 ;;Total ram usage:        7 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 7
  3969 ;; This function calls:
  3970 ;;		_fputc
  3971 ;; This function is called by:
  3972 ;;		_pad
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text9
  3977   00143C                     __ptext9:
  3978                           	callstack 0
  3979   00143C                     _fputs:
  3980                           	callstack 18
  3981                           
  3982                           ;incstack = 0
  3983   00143C  0E00               	movlw	0
  3984   00143E  6E23               	movwf	(fputs@i+1)^0,c
  3985   001440  0E00               	movlw	0
  3986   001442  6E22               	movwf	fputs@i^0,c
  3987   001444  D00B               	goto	l2034
  3988   001446                     l2030:
  3989   001446  C021  F014         	movff	fputs@c,fputc@c
  3990   00144A  6A15               	clrf	(fputc@c+1)^0,c
  3991   00144C  C01F  F016         	movff	fputs@fp,fputc@fp
  3992   001450  C020  F017         	movff	fputs@fp+1,fputc@fp+1
  3993   001454  EC50  F009         	call	_fputc	;wreg free
  3994   001458  4A22               	infsnz	fputs@i^0,f,c
  3995   00145A  2A23               	incf	(fputs@i+1)^0,f,c
  3996   00145C                     l2034:
  3997   00145C  5022               	movf	fputs@i^0,w,c
  3998   00145E  241D               	addwf	fputs@s^0,w,c
  3999   001460  6ED9               	movwf	fsr2l,c
  4000   001462  5023               	movf	(fputs@i+1)^0,w,c
  4001   001464  201E               	addwfc	(fputs@s+1)^0,w,c
  4002   001466  6EDA               	movwf	fsr2h,c
  4003   001468  50DF               	movf	indf2,w,c
  4004   00146A  6E21               	movwf	fputs@c^0,c
  4005   00146C  5021               	movf	fputs@c^0,w,c
  4006   00146E  B4D8               	btfsc	status,2,c
  4007   001470  0012               	return	
  4008   001472  D7E9               	goto	l2030
  4009   001474                     __end_of_fputs:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _abs *****************
  4013 ;; Defined at:
  4014 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  a               2   35[COMRAM] int 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2   35[COMRAM] int 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4028 ;;      Params:         2       0       0       0       0       0       0
  4029 ;;      Locals:         0       0       0       0       0       0       0
  4030 ;;      Temps:          2       0       0       0       0       0       0
  4031 ;;      Totals:         4       0       0       0       0       0       0
  4032 ;;Total ram usage:        4 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 4
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_dtoa
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text10
  4043   0014AA                     __ptext10:
  4044                           	callstack 0
  4045   0014AA                     _abs:
  4046                           	callstack 22
  4047                           
  4048                           ;incstack = 0
  4049   0014AA  BE25               	btfsc	(abs@a+1)^0,7,c
  4050   0014AC  D005               	goto	u1220
  4051   0014AE  5025               	movf	(abs@a+1)^0,w,c
  4052   0014B0  E110               	bnz	l1133
  4053   0014B2  0424               	decf	abs@a^0,w,c
  4054   0014B4  B0D8               	btfsc	status,0,c
  4055   0014B6  D00D               	goto	l1133
  4056   0014B8                     u1220:
  4057   0014B8  C024  F026         	movff	abs@a,??_abs
  4058   0014BC  C025  F027         	movff	abs@a+1,??_abs+1
  4059   0014C0  1E26               	comf	??_abs^0,f,c
  4060   0014C2  1E27               	comf	(??_abs+1)^0,f,c
  4061   0014C4  4A26               	infsnz	??_abs^0,f,c
  4062   0014C6  2A27               	incf	(??_abs+1)^0,f,c
  4063   0014C8  C026  F024         	movff	??_abs,?_abs
  4064   0014CC  C027  F025         	movff	??_abs+1,?_abs+1
  4065   0014D0  0012               	return	
  4066   0014D2                     l1133:
  4067   0014D2  C024  F024         	movff	abs@a,?_abs
  4068   0014D6  C025  F025         	movff	abs@a+1,?_abs+1
  4069   0014DA  0012               	return		;funcret
  4070   0014DC                     __end_of_abs:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function ___aomod *****************
  4074 ;; Defined at:
  4075 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  dividend        8   17[COMRAM] long long 
  4078 ;;  divisor         8   25[COMRAM] long long 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  sign            1   34[COMRAM] unsigned char 
  4081 ;;  counter         1   33[COMRAM] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  8   17[COMRAM] long long 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4091 ;;      Params:        16       0       0       0       0       0       0
  4092 ;;      Locals:         2       0       0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0
  4094 ;;      Totals:        18       0       0       0       0       0       0
  4095 ;;Total ram usage:       18 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 4
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_dtoa
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text11
  4106   000DFE                     __ptext11:
  4107                           	callstack 0
  4108   000DFE                     ___aomod:
  4109                           	callstack 22
  4110                           
  4111                           ;incstack = 0
  4112   000DFE  0E00               	movlw	0
  4113   000E00  6E23               	movwf	___aomod@sign^0,c
  4114   000E02  AE19               	btfss	(___aomod@dividend+7)^0,7,c
  4115   000E04  D012               	goto	l2088
  4116   000E06  1E19               	comf	(___aomod@dividend+7)^0,f,c
  4117   000E08  1E18               	comf	(___aomod@dividend+6)^0,f,c
  4118   000E0A  1E17               	comf	(___aomod@dividend+5)^0,f,c
  4119   000E0C  1E16               	comf	(___aomod@dividend+4)^0,f,c
  4120   000E0E  1E15               	comf	(___aomod@dividend+3)^0,f,c
  4121   000E10  1E14               	comf	(___aomod@dividend+2)^0,f,c
  4122   000E12  1E13               	comf	(___aomod@dividend+1)^0,f,c
  4123   000E14  6C12               	negf	___aomod@dividend^0,c
  4124   000E16  0E00               	movlw	0
  4125   000E18  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  4126   000E1A  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  4127   000E1C  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  4128   000E1E  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  4129   000E20  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  4130   000E22  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  4131   000E24  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  4132   000E26  0E01               	movlw	1
  4133   000E28  6E23               	movwf	___aomod@sign^0,c
  4134   000E2A                     l2088:
  4135   000E2A  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  4136   000E2C  D010               	goto	l2092
  4137   000E2E  1E21               	comf	(___aomod@divisor+7)^0,f,c
  4138   000E30  1E20               	comf	(___aomod@divisor+6)^0,f,c
  4139   000E32  1E1F               	comf	(___aomod@divisor+5)^0,f,c
  4140   000E34  1E1E               	comf	(___aomod@divisor+4)^0,f,c
  4141   000E36  1E1D               	comf	(___aomod@divisor+3)^0,f,c
  4142   000E38  1E1C               	comf	(___aomod@divisor+2)^0,f,c
  4143   000E3A  1E1B               	comf	(___aomod@divisor+1)^0,f,c
  4144   000E3C  6C1A               	negf	___aomod@divisor^0,c
  4145   000E3E  0E00               	movlw	0
  4146   000E40  221B               	addwfc	(___aomod@divisor+1)^0,f,c
  4147   000E42  221C               	addwfc	(___aomod@divisor+2)^0,f,c
  4148   000E44  221D               	addwfc	(___aomod@divisor+3)^0,f,c
  4149   000E46  221E               	addwfc	(___aomod@divisor+4)^0,f,c
  4150   000E48  221F               	addwfc	(___aomod@divisor+5)^0,f,c
  4151   000E4A  2220               	addwfc	(___aomod@divisor+6)^0,f,c
  4152   000E4C  2221               	addwfc	(___aomod@divisor+7)^0,f,c
  4153   000E4E                     l2092:
  4154   000E4E  501A               	movf	___aomod@divisor^0,w,c
  4155   000E50  101B               	iorwf	(___aomod@divisor+1)^0,w,c
  4156   000E52  101C               	iorwf	(___aomod@divisor+2)^0,w,c
  4157   000E54  101D               	iorwf	(___aomod@divisor+3)^0,w,c
  4158   000E56  101E               	iorwf	(___aomod@divisor+4)^0,w,c
  4159   000E58  101F               	iorwf	(___aomod@divisor+5)^0,w,c
  4160   000E5A  1020               	iorwf	(___aomod@divisor+6)^0,w,c
  4161   000E5C  1021               	iorwf	(___aomod@divisor+7)^0,w,c
  4162   000E5E  B4D8               	btfsc	status,2,c
  4163   000E60  D03C               	goto	l2108
  4164   000E62  0E01               	movlw	1
  4165   000E64  6E22               	movwf	___aomod@counter^0,c
  4166   000E66  D00A               	goto	l2098
  4167   000E68                     l2096:
  4168   000E68  90D8               	bcf	status,0,c
  4169   000E6A  361A               	rlcf	___aomod@divisor^0,f,c
  4170   000E6C  361B               	rlcf	(___aomod@divisor+1)^0,f,c
  4171   000E6E  361C               	rlcf	(___aomod@divisor+2)^0,f,c
  4172   000E70  361D               	rlcf	(___aomod@divisor+3)^0,f,c
  4173   000E72  361E               	rlcf	(___aomod@divisor+4)^0,f,c
  4174   000E74  361F               	rlcf	(___aomod@divisor+5)^0,f,c
  4175   000E76  3620               	rlcf	(___aomod@divisor+6)^0,f,c
  4176   000E78  3621               	rlcf	(___aomod@divisor+7)^0,f,c
  4177   000E7A  2A22               	incf	___aomod@counter^0,f,c
  4178   000E7C                     l2098:
  4179   000E7C  AE21               	btfss	(___aomod@divisor+7)^0,7,c
  4180   000E7E  D7F4               	goto	l2096
  4181   000E80                     u1100:
  4182   000E80  501A               	movf	___aomod@divisor^0,w,c
  4183   000E82  5C12               	subwf	___aomod@dividend^0,w,c
  4184   000E84  501B               	movf	(___aomod@divisor+1)^0,w,c
  4185   000E86  5813               	subwfb	(___aomod@dividend+1)^0,w,c
  4186   000E88  501C               	movf	(___aomod@divisor+2)^0,w,c
  4187   000E8A  5814               	subwfb	(___aomod@dividend+2)^0,w,c
  4188   000E8C  501D               	movf	(___aomod@divisor+3)^0,w,c
  4189   000E8E  5815               	subwfb	(___aomod@dividend+3)^0,w,c
  4190   000E90  501E               	movf	(___aomod@divisor+4)^0,w,c
  4191   000E92  5816               	subwfb	(___aomod@dividend+4)^0,w,c
  4192   000E94  501F               	movf	(___aomod@divisor+5)^0,w,c
  4193   000E96  5817               	subwfb	(___aomod@dividend+5)^0,w,c
  4194   000E98  5020               	movf	(___aomod@divisor+6)^0,w,c
  4195   000E9A  5818               	subwfb	(___aomod@dividend+6)^0,w,c
  4196   000E9C  5021               	movf	(___aomod@divisor+7)^0,w,c
  4197   000E9E  5819               	subwfb	(___aomod@dividend+7)^0,w,c
  4198   000EA0  A0D8               	btfss	status,0,c
  4199   000EA2  D010               	goto	l2104
  4200   000EA4  501A               	movf	___aomod@divisor^0,w,c
  4201   000EA6  5E12               	subwf	___aomod@dividend^0,f,c
  4202   000EA8  501B               	movf	(___aomod@divisor+1)^0,w,c
  4203   000EAA  5A13               	subwfb	(___aomod@dividend+1)^0,f,c
  4204   000EAC  501C               	movf	(___aomod@divisor+2)^0,w,c
  4205   000EAE  5A14               	subwfb	(___aomod@dividend+2)^0,f,c
  4206   000EB0  501D               	movf	(___aomod@divisor+3)^0,w,c
  4207   000EB2  5A15               	subwfb	(___aomod@dividend+3)^0,f,c
  4208   000EB4  501E               	movf	(___aomod@divisor+4)^0,w,c
  4209   000EB6  5A16               	subwfb	(___aomod@dividend+4)^0,f,c
  4210   000EB8  501F               	movf	(___aomod@divisor+5)^0,w,c
  4211   000EBA  5A17               	subwfb	(___aomod@dividend+5)^0,f,c
  4212   000EBC  5020               	movf	(___aomod@divisor+6)^0,w,c
  4213   000EBE  5A18               	subwfb	(___aomod@dividend+6)^0,f,c
  4214   000EC0  5021               	movf	(___aomod@divisor+7)^0,w,c
  4215   000EC2  5A19               	subwfb	(___aomod@dividend+7)^0,f,c
  4216   000EC4                     l2104:
  4217   000EC4  90D8               	bcf	status,0,c
  4218   000EC6  3221               	rrcf	(___aomod@divisor+7)^0,f,c
  4219   000EC8  3220               	rrcf	(___aomod@divisor+6)^0,f,c
  4220   000ECA  321F               	rrcf	(___aomod@divisor+5)^0,f,c
  4221   000ECC  321E               	rrcf	(___aomod@divisor+4)^0,f,c
  4222   000ECE  321D               	rrcf	(___aomod@divisor+3)^0,f,c
  4223   000ED0  321C               	rrcf	(___aomod@divisor+2)^0,f,c
  4224   000ED2  321B               	rrcf	(___aomod@divisor+1)^0,f,c
  4225   000ED4  321A               	rrcf	___aomod@divisor^0,f,c
  4226   000ED6  2E22               	decfsz	___aomod@counter^0,f,c
  4227   000ED8  D7D3               	goto	u1100
  4228   000EDA                     l2108:
  4229   000EDA  5023               	movf	___aomod@sign^0,w,c
  4230   000EDC  B4D8               	btfsc	status,2,c
  4231   000EDE  D010               	goto	l2112
  4232   000EE0  1E19               	comf	(___aomod@dividend+7)^0,f,c
  4233   000EE2  1E18               	comf	(___aomod@dividend+6)^0,f,c
  4234   000EE4  1E17               	comf	(___aomod@dividend+5)^0,f,c
  4235   000EE6  1E16               	comf	(___aomod@dividend+4)^0,f,c
  4236   000EE8  1E15               	comf	(___aomod@dividend+3)^0,f,c
  4237   000EEA  1E14               	comf	(___aomod@dividend+2)^0,f,c
  4238   000EEC  1E13               	comf	(___aomod@dividend+1)^0,f,c
  4239   000EEE  6C12               	negf	___aomod@dividend^0,c
  4240   000EF0  0E00               	movlw	0
  4241   000EF2  2213               	addwfc	(___aomod@dividend+1)^0,f,c
  4242   000EF4  2214               	addwfc	(___aomod@dividend+2)^0,f,c
  4243   000EF6  2215               	addwfc	(___aomod@dividend+3)^0,f,c
  4244   000EF8  2216               	addwfc	(___aomod@dividend+4)^0,f,c
  4245   000EFA  2217               	addwfc	(___aomod@dividend+5)^0,f,c
  4246   000EFC  2218               	addwfc	(___aomod@dividend+6)^0,f,c
  4247   000EFE  2219               	addwfc	(___aomod@dividend+7)^0,f,c
  4248   000F00                     l2112:
  4249   000F00  C012  F012         	movff	___aomod@dividend,?___aomod
  4250   000F04  C013  F013         	movff	___aomod@dividend+1,?___aomod+1
  4251   000F08  C014  F014         	movff	___aomod@dividend+2,?___aomod+2
  4252   000F0C  C015  F015         	movff	___aomod@dividend+3,?___aomod+3
  4253   000F10  C016  F016         	movff	___aomod@dividend+4,?___aomod+4
  4254   000F14  C017  F017         	movff	___aomod@dividend+5,?___aomod+5
  4255   000F18  C018  F018         	movff	___aomod@dividend+6,?___aomod+6
  4256   000F1C  C019  F019         	movff	___aomod@dividend+7,?___aomod+7
  4257   000F20  0012               	return		;funcret
  4258   000F22                     __end_of___aomod:
  4259                           	callstack 0
  4260                           
  4261 ;; *************** function ___aodiv *****************
  4262 ;; Defined at:
  4263 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  dividend        8   17[COMRAM] long long 
  4266 ;;  divisor         8   25[COMRAM] long long 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  quotient        8   35[COMRAM] long long 
  4269 ;;  sign            1   34[COMRAM] unsigned char 
  4270 ;;  counter         1   33[COMRAM] unsigned char 
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  8   17[COMRAM] long long 
  4273 ;; Registers used:
  4274 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4280 ;;      Params:        16       0       0       0       0       0       0
  4281 ;;      Locals:        10       0       0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0       0       0
  4283 ;;      Totals:        26       0       0       0       0       0       0
  4284 ;;Total ram usage:       26 bytes
  4285 ;; Hardware stack levels used: 1
  4286 ;; Hardware stack levels required when called: 4
  4287 ;; This function calls:
  4288 ;;		Nothing
  4289 ;; This function is called by:
  4290 ;;		_dtoa
  4291 ;; This function uses a non-reentrant model
  4292 ;;
  4293                           
  4294                           	psect	text12
  4295   000CB6                     __ptext12:
  4296                           	callstack 0
  4297   000CB6                     ___aodiv:
  4298                           	callstack 22
  4299                           
  4300                           ;incstack = 0
  4301   000CB6  0E00               	movlw	0
  4302   000CB8  6E23               	movwf	___aodiv@sign^0,c
  4303   000CBA  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  4304   000CBC  D012               	goto	l2044
  4305   000CBE  1E21               	comf	(___aodiv@divisor+7)^0,f,c
  4306   000CC0  1E20               	comf	(___aodiv@divisor+6)^0,f,c
  4307   000CC2  1E1F               	comf	(___aodiv@divisor+5)^0,f,c
  4308   000CC4  1E1E               	comf	(___aodiv@divisor+4)^0,f,c
  4309   000CC6  1E1D               	comf	(___aodiv@divisor+3)^0,f,c
  4310   000CC8  1E1C               	comf	(___aodiv@divisor+2)^0,f,c
  4311   000CCA  1E1B               	comf	(___aodiv@divisor+1)^0,f,c
  4312   000CCC  6C1A               	negf	___aodiv@divisor^0,c
  4313   000CCE  0E00               	movlw	0
  4314   000CD0  221B               	addwfc	(___aodiv@divisor+1)^0,f,c
  4315   000CD2  221C               	addwfc	(___aodiv@divisor+2)^0,f,c
  4316   000CD4  221D               	addwfc	(___aodiv@divisor+3)^0,f,c
  4317   000CD6  221E               	addwfc	(___aodiv@divisor+4)^0,f,c
  4318   000CD8  221F               	addwfc	(___aodiv@divisor+5)^0,f,c
  4319   000CDA  2220               	addwfc	(___aodiv@divisor+6)^0,f,c
  4320   000CDC  2221               	addwfc	(___aodiv@divisor+7)^0,f,c
  4321   000CDE  0E01               	movlw	1
  4322   000CE0  6E23               	movwf	___aodiv@sign^0,c
  4323   000CE2                     l2044:
  4324   000CE2  AE19               	btfss	(___aodiv@dividend+7)^0,7,c
  4325   000CE4  D012               	goto	l2050
  4326   000CE6  1E19               	comf	(___aodiv@dividend+7)^0,f,c
  4327   000CE8  1E18               	comf	(___aodiv@dividend+6)^0,f,c
  4328   000CEA  1E17               	comf	(___aodiv@dividend+5)^0,f,c
  4329   000CEC  1E16               	comf	(___aodiv@dividend+4)^0,f,c
  4330   000CEE  1E15               	comf	(___aodiv@dividend+3)^0,f,c
  4331   000CF0  1E14               	comf	(___aodiv@dividend+2)^0,f,c
  4332   000CF2  1E13               	comf	(___aodiv@dividend+1)^0,f,c
  4333   000CF4  6C12               	negf	___aodiv@dividend^0,c
  4334   000CF6  0E00               	movlw	0
  4335   000CF8  2213               	addwfc	(___aodiv@dividend+1)^0,f,c
  4336   000CFA  2214               	addwfc	(___aodiv@dividend+2)^0,f,c
  4337   000CFC  2215               	addwfc	(___aodiv@dividend+3)^0,f,c
  4338   000CFE  2216               	addwfc	(___aodiv@dividend+4)^0,f,c
  4339   000D00  2217               	addwfc	(___aodiv@dividend+5)^0,f,c
  4340   000D02  2218               	addwfc	(___aodiv@dividend+6)^0,f,c
  4341   000D04  2219               	addwfc	(___aodiv@dividend+7)^0,f,c
  4342   000D06  0E01               	movlw	1
  4343   000D08  1A23               	xorwf	___aodiv@sign^0,f,c
  4344   000D0A                     l2050:
  4345   000D0A  EE20  F024         	lfsr	2,___aodiv@quotient
  4346   000D0E  0E07               	movlw	7
  4347   000D10                     u1021:
  4348   000D10  6ADE               	clrf	postinc2,c
  4349   000D12  06E8               	decf	wreg,f,c
  4350   000D14  E2FD               	bc	u1021
  4351   000D16  501A               	movf	___aodiv@divisor^0,w,c
  4352   000D18  101B               	iorwf	(___aodiv@divisor+1)^0,w,c
  4353   000D1A  101C               	iorwf	(___aodiv@divisor+2)^0,w,c
  4354   000D1C  101D               	iorwf	(___aodiv@divisor+3)^0,w,c
  4355   000D1E  101E               	iorwf	(___aodiv@divisor+4)^0,w,c
  4356   000D20  101F               	iorwf	(___aodiv@divisor+5)^0,w,c
  4357   000D22  1020               	iorwf	(___aodiv@divisor+6)^0,w,c
  4358   000D24  1021               	iorwf	(___aodiv@divisor+7)^0,w,c
  4359   000D26  B4D8               	btfsc	status,2,c
  4360   000D28  D046               	goto	l2072
  4361   000D2A  0E01               	movlw	1
  4362   000D2C  6E22               	movwf	___aodiv@counter^0,c
  4363   000D2E  D00A               	goto	l2058
  4364   000D30                     l2056:
  4365   000D30  90D8               	bcf	status,0,c
  4366   000D32  361A               	rlcf	___aodiv@divisor^0,f,c
  4367   000D34  361B               	rlcf	(___aodiv@divisor+1)^0,f,c
  4368   000D36  361C               	rlcf	(___aodiv@divisor+2)^0,f,c
  4369   000D38  361D               	rlcf	(___aodiv@divisor+3)^0,f,c
  4370   000D3A  361E               	rlcf	(___aodiv@divisor+4)^0,f,c
  4371   000D3C  361F               	rlcf	(___aodiv@divisor+5)^0,f,c
  4372   000D3E  3620               	rlcf	(___aodiv@divisor+6)^0,f,c
  4373   000D40  3621               	rlcf	(___aodiv@divisor+7)^0,f,c
  4374   000D42  2A22               	incf	___aodiv@counter^0,f,c
  4375   000D44                     l2058:
  4376   000D44  AE21               	btfss	(___aodiv@divisor+7)^0,7,c
  4377   000D46  D7F4               	goto	l2056
  4378   000D48                     u1040:
  4379   000D48  90D8               	bcf	status,0,c
  4380   000D4A  3624               	rlcf	___aodiv@quotient^0,f,c
  4381   000D4C  3625               	rlcf	(___aodiv@quotient+1)^0,f,c
  4382   000D4E  3626               	rlcf	(___aodiv@quotient+2)^0,f,c
  4383   000D50  3627               	rlcf	(___aodiv@quotient+3)^0,f,c
  4384   000D52  3628               	rlcf	(___aodiv@quotient+4)^0,f,c
  4385   000D54  3629               	rlcf	(___aodiv@quotient+5)^0,f,c
  4386   000D56  362A               	rlcf	(___aodiv@quotient+6)^0,f,c
  4387   000D58  362B               	rlcf	(___aodiv@quotient+7)^0,f,c
  4388   000D5A  501A               	movf	___aodiv@divisor^0,w,c
  4389   000D5C  5C12               	subwf	___aodiv@dividend^0,w,c
  4390   000D5E  501B               	movf	(___aodiv@divisor+1)^0,w,c
  4391   000D60  5813               	subwfb	(___aodiv@dividend+1)^0,w,c
  4392   000D62  501C               	movf	(___aodiv@divisor+2)^0,w,c
  4393   000D64  5814               	subwfb	(___aodiv@dividend+2)^0,w,c
  4394   000D66  501D               	movf	(___aodiv@divisor+3)^0,w,c
  4395   000D68  5815               	subwfb	(___aodiv@dividend+3)^0,w,c
  4396   000D6A  501E               	movf	(___aodiv@divisor+4)^0,w,c
  4397   000D6C  5816               	subwfb	(___aodiv@dividend+4)^0,w,c
  4398   000D6E  501F               	movf	(___aodiv@divisor+5)^0,w,c
  4399   000D70  5817               	subwfb	(___aodiv@dividend+5)^0,w,c
  4400   000D72  5020               	movf	(___aodiv@divisor+6)^0,w,c
  4401   000D74  5818               	subwfb	(___aodiv@dividend+6)^0,w,c
  4402   000D76  5021               	movf	(___aodiv@divisor+7)^0,w,c
  4403   000D78  5819               	subwfb	(___aodiv@dividend+7)^0,w,c
  4404   000D7A  A0D8               	btfss	status,0,c
  4405   000D7C  D011               	goto	l2068
  4406   000D7E  501A               	movf	___aodiv@divisor^0,w,c
  4407   000D80  5E12               	subwf	___aodiv@dividend^0,f,c
  4408   000D82  501B               	movf	(___aodiv@divisor+1)^0,w,c
  4409   000D84  5A13               	subwfb	(___aodiv@dividend+1)^0,f,c
  4410   000D86  501C               	movf	(___aodiv@divisor+2)^0,w,c
  4411   000D88  5A14               	subwfb	(___aodiv@dividend+2)^0,f,c
  4412   000D8A  501D               	movf	(___aodiv@divisor+3)^0,w,c
  4413   000D8C  5A15               	subwfb	(___aodiv@dividend+3)^0,f,c
  4414   000D8E  501E               	movf	(___aodiv@divisor+4)^0,w,c
  4415   000D90  5A16               	subwfb	(___aodiv@dividend+4)^0,f,c
  4416   000D92  501F               	movf	(___aodiv@divisor+5)^0,w,c
  4417   000D94  5A17               	subwfb	(___aodiv@dividend+5)^0,f,c
  4418   000D96  5020               	movf	(___aodiv@divisor+6)^0,w,c
  4419   000D98  5A18               	subwfb	(___aodiv@dividend+6)^0,f,c
  4420   000D9A  5021               	movf	(___aodiv@divisor+7)^0,w,c
  4421   000D9C  5A19               	subwfb	(___aodiv@dividend+7)^0,f,c
  4422   000D9E  8024               	bsf	___aodiv@quotient^0,0,c
  4423   000DA0                     l2068:
  4424   000DA0  90D8               	bcf	status,0,c
  4425   000DA2  3221               	rrcf	(___aodiv@divisor+7)^0,f,c
  4426   000DA4  3220               	rrcf	(___aodiv@divisor+6)^0,f,c
  4427   000DA6  321F               	rrcf	(___aodiv@divisor+5)^0,f,c
  4428   000DA8  321E               	rrcf	(___aodiv@divisor+4)^0,f,c
  4429   000DAA  321D               	rrcf	(___aodiv@divisor+3)^0,f,c
  4430   000DAC  321C               	rrcf	(___aodiv@divisor+2)^0,f,c
  4431   000DAE  321B               	rrcf	(___aodiv@divisor+1)^0,f,c
  4432   000DB0  321A               	rrcf	___aodiv@divisor^0,f,c
  4433   000DB2  2E22               	decfsz	___aodiv@counter^0,f,c
  4434   000DB4  D7C9               	goto	u1040
  4435   000DB6                     l2072:
  4436   000DB6  5023               	movf	___aodiv@sign^0,w,c
  4437   000DB8  B4D8               	btfsc	status,2,c
  4438   000DBA  D010               	goto	l2076
  4439   000DBC  1E2B               	comf	(___aodiv@quotient+7)^0,f,c
  4440   000DBE  1E2A               	comf	(___aodiv@quotient+6)^0,f,c
  4441   000DC0  1E29               	comf	(___aodiv@quotient+5)^0,f,c
  4442   000DC2  1E28               	comf	(___aodiv@quotient+4)^0,f,c
  4443   000DC4  1E27               	comf	(___aodiv@quotient+3)^0,f,c
  4444   000DC6  1E26               	comf	(___aodiv@quotient+2)^0,f,c
  4445   000DC8  1E25               	comf	(___aodiv@quotient+1)^0,f,c
  4446   000DCA  6C24               	negf	___aodiv@quotient^0,c
  4447   000DCC  0E00               	movlw	0
  4448   000DCE  2225               	addwfc	(___aodiv@quotient+1)^0,f,c
  4449   000DD0  2226               	addwfc	(___aodiv@quotient+2)^0,f,c
  4450   000DD2  2227               	addwfc	(___aodiv@quotient+3)^0,f,c
  4451   000DD4  2228               	addwfc	(___aodiv@quotient+4)^0,f,c
  4452   000DD6  2229               	addwfc	(___aodiv@quotient+5)^0,f,c
  4453   000DD8  222A               	addwfc	(___aodiv@quotient+6)^0,f,c
  4454   000DDA  222B               	addwfc	(___aodiv@quotient+7)^0,f,c
  4455   000DDC                     l2076:
  4456   000DDC  C024  F012         	movff	___aodiv@quotient,?___aodiv
  4457   000DE0  C025  F013         	movff	___aodiv@quotient+1,?___aodiv+1
  4458   000DE4  C026  F014         	movff	___aodiv@quotient+2,?___aodiv+2
  4459   000DE8  C027  F015         	movff	___aodiv@quotient+3,?___aodiv+3
  4460   000DEC  C028  F016         	movff	___aodiv@quotient+4,?___aodiv+4
  4461   000DF0  C029  F017         	movff	___aodiv@quotient+5,?___aodiv+5
  4462   000DF4  C02A  F018         	movff	___aodiv@quotient+6,?___aodiv+6
  4463   000DF8  C02B  F019         	movff	___aodiv@quotient+7,?___aodiv+7
  4464   000DFC  0012               	return		;funcret
  4465   000DFE                     __end_of___aodiv:
  4466                           	callstack 0
  4467                           
  4468 ;; *************** function _ctoa *****************
  4469 ;; Defined at:
  4470 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  4473 ;;		 -> NULL(0), 
  4474 ;;  c               1   30[COMRAM] unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  w               2   34[COMRAM] int 
  4477 ;;  l               2   32[COMRAM] int 
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4487 ;;      Params:         3       0       0       0       0       0       0
  4488 ;;      Locals:         4       0       0       0       0       0       0
  4489 ;;      Temps:          1       0       0       0       0       0       0
  4490 ;;      Totals:         8       0       0       0       0       0       0
  4491 ;;Total ram usage:        8 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 7
  4494 ;; This function calls:
  4495 ;;		_fputc
  4496 ;; This function is called by:
  4497 ;;		_vfpfcnvrt
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text13
  4502   00122C                     __ptext13:
  4503                           	callstack 0
  4504   00122C                     _ctoa:
  4505                           	callstack 20
  4506                           
  4507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  4508                           
  4509                           ;incstack = 0
  4510   00122C  503B               	movf	_width^0,w,c
  4511   00122E  103C               	iorwf	(_width+1)^0,w,c
  4512   001230  A4D8               	btfss	status,2,c
  4513   001232  D005               	goto	l2176
  4514   001234  C03B  F023         	movff	_width,ctoa@w
  4515   001238  C03C  F024         	movff	_width+1,ctoa@w+1
  4516   00123C  D006               	goto	l1070
  4517   00123E                     l2176:
  4518   00123E  0EFF               	movlw	255
  4519   001240  243B               	addwf	_width^0,w,c
  4520   001242  6E23               	movwf	ctoa@w^0,c
  4521   001244  0EFF               	movlw	255
  4522   001246  203C               	addwfc	(_width+1)^0,w,c
  4523   001248  6E24               	movwf	(ctoa@w+1)^0,c
  4524   00124A                     l1070:
  4525                           
  4526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  4527   00124A  AE24               	btfss	(ctoa@w+1)^0,7,c
  4528   00124C  D004               	goto	l1074
  4529   00124E  0E00               	movlw	0
  4530   001250  6E24               	movwf	(ctoa@w+1)^0,c
  4531   001252  0E00               	movlw	0
  4532   001254  6E23               	movwf	ctoa@w^0,c
  4533   001256                     l1074:
  4534                           
  4535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  4536   001256  0E00               	movlw	0
  4537   001258  6E22               	movwf	(ctoa@l+1)^0,c
  4538   00125A  0E00               	movlw	0
  4539   00125C  6E21               	movwf	ctoa@l^0,c
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4542   00125E  D00C               	goto	l2186
  4543   001260                     l2182:
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  4546   001260  0E00               	movlw	0
  4547   001262  6E15               	movwf	(fputc@c+1)^0,c
  4548   001264  0E20               	movlw	32
  4549   001266  6E14               	movwf	fputc@c^0,c
  4550   001268  C01D  F016         	movff	ctoa@fp,fputc@fp
  4551   00126C  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  4552   001270  EC50  F009         	call	_fputc	;wreg free
  4553                           
  4554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  4555   001274  4A21               	infsnz	ctoa@l^0,f,c
  4556   001276  2A22               	incf	(ctoa@l+1)^0,f,c
  4557   001278                     l2186:
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4560   001278  5023               	movf	ctoa@w^0,w,c
  4561   00127A  5C21               	subwf	ctoa@l^0,w,c
  4562   00127C  5022               	movf	(ctoa@l+1)^0,w,c
  4563   00127E  0A80               	xorlw	128
  4564   001280  6E20               	movwf	??_ctoa^0,c
  4565   001282  5024               	movf	(ctoa@w+1)^0,w,c
  4566   001284  0A80               	xorlw	128
  4567   001286  5820               	subwfb	??_ctoa^0,w,c
  4568   001288  A0D8               	btfss	status,0,c
  4569   00128A  D7EA               	goto	l2182
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  4572   00128C  C01F  F014         	movff	ctoa@c,fputc@c
  4573   001290  6A15               	clrf	(fputc@c+1)^0,c
  4574   001292  C01D  F016         	movff	ctoa@fp,fputc@fp
  4575   001296  C01E  F017         	movff	ctoa@fp+1,fputc@fp+1
  4576   00129A  EC50  F009         	call	_fputc	;wreg free
  4577   00129E  0012               	return		;funcret
  4578   0012A0                     __end_of_ctoa:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _fputc *****************
  4582 ;; Defined at:
  4583 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  c               2   19[COMRAM] int 
  4586 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  4587 ;;		 -> NULL(0), 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  2   19[COMRAM] int 
  4592 ;; Registers used:
  4593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4599 ;;      Params:         4       0       0       0       0       0       0
  4600 ;;      Locals:         0       0       0       0       0       0       0
  4601 ;;      Temps:          5       0       0       0       0       0       0
  4602 ;;      Totals:         9       0       0       0       0       0       0
  4603 ;;Total ram usage:        9 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; Hardware stack levels required when called: 6
  4606 ;; This function calls:
  4607 ;;		_putch
  4608 ;; This function is called by:
  4609 ;;		_pad
  4610 ;;		_ctoa
  4611 ;;		_vfpfcnvrt
  4612 ;;		_fputs
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text14
  4617   0012A0                     __ptext14:
  4618                           	callstack 0
  4619   0012A0                     _fputc:
  4620                           	callstack 18
  4621                           
  4622                           ;incstack = 0
  4623   0012A0  5016               	movf	fputc@fp^0,w,c
  4624   0012A2  1017               	iorwf	(fputc@fp+1)^0,w,c
  4625   0012A4  B4D8               	btfsc	status,2,c
  4626   0012A6  D004               	goto	u960
  4627   0012A8  5016               	movf	fputc@fp^0,w,c
  4628   0012AA  1017               	iorwf	(fputc@fp+1)^0,w,c
  4629   0012AC  A4D8               	btfss	status,2,c
  4630   0012AE  D004               	goto	l2020
  4631   0012B0                     u960:
  4632   0012B0  5014               	movf	fputc@c^0,w,c
  4633   0012B2  EC05  F00B         	call	_putch
  4634   0012B6  0012               	return	
  4635   0012B8                     l2020:
  4636   0012B8  EE20 F009          	lfsr	2,9
  4637   0012BC  5016               	movf	fputc@fp^0,w,c
  4638   0012BE  26D9               	addwf	fsr2l,f,c
  4639   0012C0  5017               	movf	(fputc@fp+1)^0,w,c
  4640   0012C2  22DA               	addwfc	fsr2h,f,c
  4641   0012C4  50DE               	movf	postinc2,w,c
  4642   0012C6  10DE               	iorwf	postinc2,w,c
  4643   0012C8  B4D8               	btfsc	status,2,c
  4644   0012CA  D016               	goto	u980
  4645   0012CC  EE20 F009          	lfsr	2,9
  4646   0012D0  5016               	movf	fputc@fp^0,w,c
  4647   0012D2  26D9               	addwf	fsr2l,f,c
  4648   0012D4  5017               	movf	(fputc@fp+1)^0,w,c
  4649   0012D6  22DA               	addwfc	fsr2h,f,c
  4650   0012D8  EE10 F003          	lfsr	1,3
  4651   0012DC  5016               	movf	fputc@fp^0,w,c
  4652   0012DE  26E1               	addwf	fsr1l,f,c
  4653   0012E0  5017               	movf	(fputc@fp+1)^0,w,c
  4654   0012E2  22E2               	addwfc	fsr1h,f,c
  4655   0012E4  50DE               	movf	postinc2,w,c
  4656   0012E6  5CE6               	subwf	postinc1,w,c
  4657   0012E8  50E6               	movf	postinc1,w,c
  4658   0012EA  0A80               	xorlw	128
  4659   0012EC  6E1C               	movwf	(??_fputc+4)^0,c
  4660   0012EE  50DE               	movf	postinc2,w,c
  4661   0012F0  0A80               	xorlw	128
  4662   0012F2  581C               	subwfb	(??_fputc+4)^0,w,c
  4663   0012F4  B0D8               	btfsc	status,0,c
  4664   0012F6  0012               	return	
  4665   0012F8                     u980:
  4666   0012F8  EE20 F003          	lfsr	2,3
  4667   0012FC  5016               	movf	fputc@fp^0,w,c
  4668   0012FE  26D9               	addwf	fsr2l,f,c
  4669   001300  5017               	movf	(fputc@fp+1)^0,w,c
  4670   001302  22DA               	addwfc	fsr2h,f,c
  4671   001304  2ADE               	incf	postinc2,f,c
  4672   001306  0E00               	movlw	0
  4673   001308  22DD               	addwfc	postdec2,f,c
  4674   00130A  0012               	return		;funcret
  4675   00130C                     __end_of_fputc:
  4676                           	callstack 0
  4677                           
  4678 ;; *************** function _putch *****************
  4679 ;; Defined at:
  4680 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  txData          1    wreg     unsigned char 
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  txData          1   18[COMRAM] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4694 ;;      Params:         0       0       0       0       0       0       0
  4695 ;;      Locals:         1       0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0
  4697 ;;      Totals:         1       0       0       0       0       0       0
  4698 ;;Total ram usage:        1 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 5
  4701 ;; This function calls:
  4702 ;;		_EUSART1_Write
  4703 ;; This function is called by:
  4704 ;;		_fputc
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text15
  4709   00160A                     __ptext15:
  4710                           	callstack 0
  4711   00160A                     _putch:
  4712                           	callstack 18
  4713                           
  4714                           ;incstack = 0
  4715                           ;putch@txData stored from wreg
  4716   00160A  6E13               	movwf	putch@txData^0,c
  4717                           
  4718                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4719   00160C  5013               	movf	putch@txData^0,w,c
  4720   00160E  ECF9  F00A         	call	_EUSART1_Write
  4721   001612  0012               	return		;funcret
  4722   001614                     __end_of_putch:
  4723                           	callstack 0
  4724                           
  4725 ;; *************** function _EUSART1_Write *****************
  4726 ;; Defined at:
  4727 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  txData          1    wreg     unsigned char 
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;  txData          1   17[COMRAM] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  1    wreg      void 
  4734 ;; Registers used:
  4735 ;;		wreg
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4741 ;;      Params:         0       0       0       0       0       0       0
  4742 ;;      Locals:         1       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0
  4744 ;;      Totals:         1       0       0       0       0       0       0
  4745 ;;Total ram usage:        1 bytes
  4746 ;; Hardware stack levels used: 1
  4747 ;; Hardware stack levels required when called: 4
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_putch
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           	psect	text16
  4756   0015F2                     __ptext16:
  4757                           	callstack 0
  4758   0015F2                     _EUSART1_Write:
  4759                           	callstack 18
  4760                           
  4761                           ;incstack = 0
  4762                           ;EUSART1_Write@txData stored from wreg
  4763   0015F2  6E12               	movwf	EUSART1_Write@txData^0,c
  4764   0015F4                     
  4765                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4766                           
  4767                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  4768   0015F4  A89E               	btfss	158,4,c	;volatile
  4769   0015F6  D7FE               	goto	l2008
  4770                           
  4771                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4772   0015F8  C012  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4773   0015FC  0012               	return		;funcret
  4774   0015FE                     __end_of_EUSART1_Write:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function ___wmul *****************
  4778 ;; Defined at:
  4779 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  multiplier      2   17[COMRAM] unsigned int 
  4782 ;;  multiplicand    2   19[COMRAM] unsigned int 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  product         2   21[COMRAM] unsigned int 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  2   17[COMRAM] unsigned int 
  4787 ;; Registers used:
  4788 ;;		wreg, status,2, status,0, prodl, prodh
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4794 ;;      Params:         4       0       0       0       0       0       0
  4795 ;;      Locals:         2       0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0
  4797 ;;      Totals:         6       0       0       0       0       0       0
  4798 ;;Total ram usage:        6 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 4
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           	psect	text17
  4809   001558                     __ptext17:
  4810                           	callstack 0
  4811   001558                     ___wmul:
  4812                           	callstack 26
  4813                           
  4814                           ;incstack = 0
  4815   001558  5012               	movf	___wmul@multiplier^0,w,c
  4816   00155A  0214               	mulwf	___wmul@multiplicand^0,c
  4817   00155C  CFF3 F016          	movff	prodl,___wmul@product
  4818   001560  CFF4 F017          	movff	prodh,___wmul@product+1
  4819   001564  5012               	movf	___wmul@multiplier^0,w,c
  4820   001566  0215               	mulwf	(___wmul@multiplicand+1)^0,c
  4821   001568  50F3               	movf	243,w,c
  4822   00156A  2617               	addwf	(___wmul@product+1)^0,f,c
  4823   00156C  5013               	movf	(___wmul@multiplier+1)^0,w,c
  4824   00156E  0214               	mulwf	___wmul@multiplicand^0,c
  4825   001570  50F3               	movf	243,w,c
  4826   001572  2617               	addwf	(___wmul@product+1)^0,f,c
  4827   001574  C016  F012         	movff	___wmul@product,?___wmul
  4828   001578  C017  F013         	movff	___wmul@product+1,?___wmul+1
  4829   00157C  0012               	return		;funcret
  4830   00157E                     __end_of___wmul:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function ___aldiv *****************
  4834 ;; Defined at:
  4835 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  dividend        4   17[COMRAM] long 
  4838 ;;  divisor         4   21[COMRAM] long 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  quotient        4   27[COMRAM] long 
  4841 ;;  sign            1   26[COMRAM] unsigned char 
  4842 ;;  counter         1   25[COMRAM] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;                  4   17[COMRAM] long 
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4852 ;;      Params:         8       0       0       0       0       0       0
  4853 ;;      Locals:         6       0       0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0
  4855 ;;      Totals:        14       0       0       0       0       0       0
  4856 ;;Total ram usage:       14 bytes
  4857 ;; Hardware stack levels used: 1
  4858 ;; Hardware stack levels required when called: 4
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_main
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text18
  4867   000FF0                     __ptext18:
  4868                           	callstack 0
  4869   000FF0                     ___aldiv:
  4870                           	callstack 26
  4871                           
  4872                           ;incstack = 0
  4873   000FF0  0E00               	movlw	0
  4874   000FF2  6E1B               	movwf	___aldiv@sign^0,c
  4875   000FF4  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
  4876   000FF6  D00A               	goto	l2484
  4877   000FF8  1E19               	comf	(___aldiv@divisor+3)^0,f,c
  4878   000FFA  1E18               	comf	(___aldiv@divisor+2)^0,f,c
  4879   000FFC  1E17               	comf	(___aldiv@divisor+1)^0,f,c
  4880   000FFE  6C16               	negf	___aldiv@divisor^0,c
  4881   001000  0E00               	movlw	0
  4882   001002  2217               	addwfc	(___aldiv@divisor+1)^0,f,c
  4883   001004  2218               	addwfc	(___aldiv@divisor+2)^0,f,c
  4884   001006  2219               	addwfc	(___aldiv@divisor+3)^0,f,c
  4885   001008  0E01               	movlw	1
  4886   00100A  6E1B               	movwf	___aldiv@sign^0,c
  4887   00100C                     l2484:
  4888   00100C  AE15               	btfss	(___aldiv@dividend+3)^0,7,c
  4889   00100E  D00A               	goto	l2490
  4890   001010  1E15               	comf	(___aldiv@dividend+3)^0,f,c
  4891   001012  1E14               	comf	(___aldiv@dividend+2)^0,f,c
  4892   001014  1E13               	comf	(___aldiv@dividend+1)^0,f,c
  4893   001016  6C12               	negf	___aldiv@dividend^0,c
  4894   001018  0E00               	movlw	0
  4895   00101A  2213               	addwfc	(___aldiv@dividend+1)^0,f,c
  4896   00101C  2214               	addwfc	(___aldiv@dividend+2)^0,f,c
  4897   00101E  2215               	addwfc	(___aldiv@dividend+3)^0,f,c
  4898   001020  0E01               	movlw	1
  4899   001022  1A1B               	xorwf	___aldiv@sign^0,f,c
  4900   001024                     l2490:
  4901   001024  0E00               	movlw	0
  4902   001026  6E1C               	movwf	___aldiv@quotient^0,c
  4903   001028  0E00               	movlw	0
  4904   00102A  6E1D               	movwf	(___aldiv@quotient+1)^0,c
  4905   00102C  0E00               	movlw	0
  4906   00102E  6E1E               	movwf	(___aldiv@quotient+2)^0,c
  4907   001030  0E00               	movlw	0
  4908   001032  6E1F               	movwf	(___aldiv@quotient+3)^0,c
  4909   001034  5016               	movf	___aldiv@divisor^0,w,c
  4910   001036  1017               	iorwf	(___aldiv@divisor+1)^0,w,c
  4911   001038  1018               	iorwf	(___aldiv@divisor+2)^0,w,c
  4912   00103A  1019               	iorwf	(___aldiv@divisor+3)^0,w,c
  4913   00103C  B4D8               	btfsc	status,2,c
  4914   00103E  D02A               	goto	l2512
  4915   001040  0E01               	movlw	1
  4916   001042  6E1A               	movwf	___aldiv@counter^0,c
  4917   001044  D006               	goto	l2498
  4918   001046                     l2496:
  4919   001046  90D8               	bcf	status,0,c
  4920   001048  3616               	rlcf	___aldiv@divisor^0,f,c
  4921   00104A  3617               	rlcf	(___aldiv@divisor+1)^0,f,c
  4922   00104C  3618               	rlcf	(___aldiv@divisor+2)^0,f,c
  4923   00104E  3619               	rlcf	(___aldiv@divisor+3)^0,f,c
  4924   001050  2A1A               	incf	___aldiv@counter^0,f,c
  4925   001052                     l2498:
  4926   001052  AE19               	btfss	(___aldiv@divisor+3)^0,7,c
  4927   001054  D7F8               	goto	l2496
  4928   001056                     u1590:
  4929   001056  90D8               	bcf	status,0,c
  4930   001058  361C               	rlcf	___aldiv@quotient^0,f,c
  4931   00105A  361D               	rlcf	(___aldiv@quotient+1)^0,f,c
  4932   00105C  361E               	rlcf	(___aldiv@quotient+2)^0,f,c
  4933   00105E  361F               	rlcf	(___aldiv@quotient+3)^0,f,c
  4934   001060  5016               	movf	___aldiv@divisor^0,w,c
  4935   001062  5C12               	subwf	___aldiv@dividend^0,w,c
  4936   001064  5017               	movf	(___aldiv@divisor+1)^0,w,c
  4937   001066  5813               	subwfb	(___aldiv@dividend+1)^0,w,c
  4938   001068  5018               	movf	(___aldiv@divisor+2)^0,w,c
  4939   00106A  5814               	subwfb	(___aldiv@dividend+2)^0,w,c
  4940   00106C  5019               	movf	(___aldiv@divisor+3)^0,w,c
  4941   00106E  5815               	subwfb	(___aldiv@dividend+3)^0,w,c
  4942   001070  A0D8               	btfss	status,0,c
  4943   001072  D009               	goto	l2508
  4944   001074  5016               	movf	___aldiv@divisor^0,w,c
  4945   001076  5E12               	subwf	___aldiv@dividend^0,f,c
  4946   001078  5017               	movf	(___aldiv@divisor+1)^0,w,c
  4947   00107A  5A13               	subwfb	(___aldiv@dividend+1)^0,f,c
  4948   00107C  5018               	movf	(___aldiv@divisor+2)^0,w,c
  4949   00107E  5A14               	subwfb	(___aldiv@dividend+2)^0,f,c
  4950   001080  5019               	movf	(___aldiv@divisor+3)^0,w,c
  4951   001082  5A15               	subwfb	(___aldiv@dividend+3)^0,f,c
  4952   001084  801C               	bsf	___aldiv@quotient^0,0,c
  4953   001086                     l2508:
  4954   001086  90D8               	bcf	status,0,c
  4955   001088  3219               	rrcf	(___aldiv@divisor+3)^0,f,c
  4956   00108A  3218               	rrcf	(___aldiv@divisor+2)^0,f,c
  4957   00108C  3217               	rrcf	(___aldiv@divisor+1)^0,f,c
  4958   00108E  3216               	rrcf	___aldiv@divisor^0,f,c
  4959   001090  2E1A               	decfsz	___aldiv@counter^0,f,c
  4960   001092  D7E1               	goto	u1590
  4961   001094                     l2512:
  4962   001094  501B               	movf	___aldiv@sign^0,w,c
  4963   001096  B4D8               	btfsc	status,2,c
  4964   001098  D008               	goto	l2516
  4965   00109A  1E1F               	comf	(___aldiv@quotient+3)^0,f,c
  4966   00109C  1E1E               	comf	(___aldiv@quotient+2)^0,f,c
  4967   00109E  1E1D               	comf	(___aldiv@quotient+1)^0,f,c
  4968   0010A0  6C1C               	negf	___aldiv@quotient^0,c
  4969   0010A2  0E00               	movlw	0
  4970   0010A4  221D               	addwfc	(___aldiv@quotient+1)^0,f,c
  4971   0010A6  221E               	addwfc	(___aldiv@quotient+2)^0,f,c
  4972   0010A8  221F               	addwfc	(___aldiv@quotient+3)^0,f,c
  4973   0010AA                     l2516:
  4974   0010AA  C01C  F012         	movff	___aldiv@quotient,?___aldiv
  4975   0010AE  C01D  F013         	movff	___aldiv@quotient+1,?___aldiv+1
  4976   0010B2  C01E  F014         	movff	___aldiv@quotient+2,?___aldiv+2
  4977   0010B6  C01F  F015         	movff	___aldiv@quotient+3,?___aldiv+3
  4978   0010BA  0012               	return		;funcret
  4979   0010BC                     __end_of___aldiv:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _TMR0_WriteTimer *****************
  4983 ;; Defined at:
  4984 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  timerVal        2   17[COMRAM] unsigned short 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4998 ;;      Params:         2       0       0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0
  5001 ;;      Totals:         2       0       0       0       0       0       0
  5002 ;;Total ram usage:        2 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; Hardware stack levels required when called: 4
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_main
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           	psect	text19
  5013   001614                     __ptext19:
  5014                           	callstack 0
  5015   001614                     _TMR0_WriteTimer:
  5016                           	callstack 26
  5017                           
  5018                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5019                           
  5020                           ;incstack = 0
  5021   001614  5013               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  5022   001616  6ED7               	movwf	215,c	;volatile
  5023                           
  5024                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5025   001618  C012  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  5026   00161C  0012               	return		;funcret
  5027   00161E                     __end_of_TMR0_WriteTimer:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _SYSTEM_Initialize *****************
  5031 ;; Defined at:
  5032 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;		None
  5035 ;; Auto vars:     Size  Location     Type
  5036 ;;		None
  5037 ;; Return value:  Size  Location     Type
  5038 ;;                  1    wreg      void 
  5039 ;; Registers used:
  5040 ;;		wreg, status,2, status,0, cstack
  5041 ;; Tracked objects:
  5042 ;;		On entry : 0/0
  5043 ;;		On exit  : 0/0
  5044 ;;		Unchanged: 0/0
  5045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5046 ;;      Params:         0       0       0       0       0       0       0
  5047 ;;      Locals:         0       0       0       0       0       0       0
  5048 ;;      Temps:          0       0       0       0       0       0       0
  5049 ;;      Totals:         0       0       0       0       0       0       0
  5050 ;;Total ram usage:        0 bytes
  5051 ;; Hardware stack levels used: 1
  5052 ;; Hardware stack levels required when called: 6
  5053 ;; This function calls:
  5054 ;;		_ADC_Initialize
  5055 ;;		_EUSART1_Initialize
  5056 ;;		_INTERRUPT_Initialize
  5057 ;;		_OSCILLATOR_Initialize
  5058 ;;		_PIN_MANAGER_Initialize
  5059 ;;		_TMR0_Initialize
  5060 ;; This function is called by:
  5061 ;;		_main
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text20
  5066   00159C                     __ptext20:
  5067                           	callstack 0
  5068   00159C                     _SYSTEM_Initialize:
  5069                           	callstack 24
  5070                           
  5071                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5072                           
  5073                           ;incstack = 0
  5074   00159C  EC28  F00B         	call	_INTERRUPT_Initialize	;wreg free
  5075                           
  5076                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5077   0015A0  EC6E  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  5078                           
  5079                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5080   0015A4  ECF0  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  5081                           
  5082                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  5083   0015A8  EC3A  F00A         	call	_TMR0_Initialize	;wreg free
  5084                           
  5085                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  5086   0015AC  ECDB  F00A         	call	_ADC_Initialize	;wreg free
  5087                           
  5088                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  5089   0015B0  ECFF  F009         	call	_EUSART1_Initialize	;wreg free
  5090   0015B4  0012               	return		;funcret
  5091   0015B6                     __end_of_SYSTEM_Initialize:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function _TMR0_Initialize *****************
  5095 ;; Defined at:
  5096 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5110 ;;      Params:         0       0       0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0       0       0
  5112 ;;      Temps:          2       0       0       0       0       0       0
  5113 ;;      Totals:         2       0       0       0       0       0       0
  5114 ;;Total ram usage:        2 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 5
  5117 ;; This function calls:
  5118 ;;		_TMR0_SetInterruptHandler
  5119 ;; This function is called by:
  5120 ;;		_SYSTEM_Initialize
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text21
  5125   001474                     __ptext21:
  5126                           	callstack 0
  5127   001474                     _TMR0_Initialize:
  5128                           	callstack 24
  5129                           
  5130                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5131                           
  5132                           ;incstack = 0
  5133   001474  9CD5               	bcf	213,6,c	;volatile
  5134                           
  5135                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  5136   001476  0E00               	movlw	0
  5137   001478  6ED7               	movwf	215,c	;volatile
  5138                           
  5139                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  5140   00147A  0E00               	movlw	0
  5141   00147C  6ED6               	movwf	214,c	;volatile
  5142                           
  5143                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5144   00147E  50D6               	movf	214,w,c	;volatile
  5145   001480  CFD7 F014          	movff	4055,??_TMR0_Initialize	;volatile
  5146   001484  6A15               	clrf	(??_TMR0_Initialize+1)^0,c
  5147   001486  C014  F015         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5148   00148A  6A14               	clrf	??_TMR0_Initialize^0,c
  5149   00148C  1014               	iorwf	??_TMR0_Initialize^0,w,c
  5150   00148E  6E3F               	movwf	_timer0ReloadVal^0,c	;volatile
  5151   001490  5015               	movf	(??_TMR0_Initialize+1)^0,w,c
  5152   001492  6E40               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5153                           
  5154                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5155   001494  94F2               	bcf	242,2,c	;volatile
  5156                           
  5157                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5158   001496  8AF2               	bsf	242,5,c	;volatile
  5159                           
  5160                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5161   001498  0E54               	movlw	low _TMR0_DefaultInterruptHandler
  5162   00149A  6E12               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5163   00149C  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  5164   00149E  6E13               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5165   0014A0  EC0F  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  5166                           
  5167                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  5168   0014A4  0E9F               	movlw	159
  5169   0014A6  6ED5               	movwf	213,c	;volatile
  5170   0014A8  0012               	return		;funcret
  5171   0014AA                     __end_of_TMR0_Initialize:
  5172                           	callstack 0
  5173                           
  5174 ;; *************** function _TMR0_SetInterruptHandler *****************
  5175 ;; Defined at:
  5176 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  InterruptHan    2   17[COMRAM] PTR FTN()void 
  5179 ;;		 -> sampleTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5191 ;;      Params:         2       0       0       0       0       0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0
  5194 ;;      Totals:         2       0       0       0       0       0       0
  5195 ;;Total ram usage:        2 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 4
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_TMR0_Initialize
  5202 ;;		_main
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text22
  5207   00161E                     __ptext22:
  5208                           	callstack 0
  5209   00161E                     _TMR0_SetInterruptHandler:
  5210                           	callstack 26
  5211                           
  5212                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5213                           
  5214                           ;incstack = 0
  5215   00161E  C012  F041         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5216   001622  C013  F042         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5217   001626  0012               	return		;funcret
  5218   001628                     __end_of_TMR0_SetInterruptHandler:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _PIN_MANAGER_Initialize *****************
  5222 ;; Defined at:
  5223 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5237 ;;      Params:         0       0       0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0
  5240 ;;      Totals:         0       0       0       0       0       0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; Hardware stack levels required when called: 4
  5244 ;; This function calls:
  5245 ;;		Nothing
  5246 ;; This function is called by:
  5247 ;;		_SYSTEM_Initialize
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text23
  5252   0014DC                     __ptext23:
  5253                           	callstack 0
  5254   0014DC                     _PIN_MANAGER_Initialize:
  5255                           	callstack 25
  5256                           
  5257                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5258                           
  5259                           ;incstack = 0
  5260   0014DC  0E00               	movlw	0
  5261   0014DE  6E89               	movwf	137,c	;volatile
  5262                           
  5263                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5264   0014E0  0E00               	movlw	0
  5265   0014E2  6E8A               	movwf	138,c	;volatile
  5266                           
  5267                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5268   0014E4  0E00               	movlw	0
  5269   0014E6  6E8B               	movwf	139,c	;volatile
  5270                           
  5271                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5272   0014E8  6892               	setf	146,c	;volatile
  5273                           
  5274                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5275   0014EA  6893               	setf	147,c	;volatile
  5276                           
  5277                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5278   0014EC  0EBF               	movlw	191
  5279   0014EE  6E94               	movwf	148,c	;volatile
  5280                           
  5281                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5282   0014F0  0E3C               	movlw	60
  5283   0014F2  010F               	movlb	15	; () banked
  5284   0014F4  6F3A               	movwf	58,b	;volatile
  5285                           
  5286                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5287   0014F6  0E3F               	movlw	63
  5288   0014F8  6F39               	movwf	57,b	;volatile
  5289                           
  5290                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5291   0014FA  0E2F               	movlw	47
  5292   0014FC  6F38               	movwf	56,b	;volatile
  5293                           
  5294                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5295   0014FE  0E00               	movlw	0
  5296   001500  6E61               	movwf	97,c	;volatile
  5297                           
  5298                           ; BSR set to: 15
  5299                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5300   001502  8EF1               	bsf	241,7,c	;volatile
  5301                           
  5302                           ; BSR set to: 15
  5303   001504  0012               	return		;funcret
  5304   001506                     __end_of_PIN_MANAGER_Initialize:
  5305                           	callstack 0
  5306                           
  5307 ;; *************** function _OSCILLATOR_Initialize *****************
  5308 ;; Defined at:
  5309 ;;		line 61 in file "mcc_generated_files/mcc.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;		None
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;		None
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  1    wreg      void 
  5316 ;; Registers used:
  5317 ;;		wreg, status,2
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5323 ;;      Params:         0       0       0       0       0       0       0
  5324 ;;      Locals:         0       0       0       0       0       0       0
  5325 ;;      Temps:          0       0       0       0       0       0       0
  5326 ;;      Totals:         0       0       0       0       0       0       0
  5327 ;;Total ram usage:        0 bytes
  5328 ;; Hardware stack levels used: 1
  5329 ;; Hardware stack levels required when called: 4
  5330 ;; This function calls:
  5331 ;;		Nothing
  5332 ;; This function is called by:
  5333 ;;		_SYSTEM_Initialize
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text24
  5338   0015E0                     __ptext24:
  5339                           	callstack 0
  5340   0015E0                     _OSCILLATOR_Initialize:
  5341                           	callstack 25
  5342                           
  5343                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5344                           
  5345                           ; BSR set to: 15
  5346                           ;incstack = 0
  5347   0015E0  0E70               	movlw	112
  5348   0015E2  6ED3               	movwf	211,c	;volatile
  5349                           
  5350                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5351   0015E4  0E04               	movlw	4
  5352   0015E6  6ED2               	movwf	210,c	;volatile
  5353                           
  5354                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5355   0015E8  0E40               	movlw	64
  5356   0015EA  6E9B               	movwf	155,c	;volatile
  5357   0015EC                     l72:
  5358                           
  5359                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5360   0015EC  BED2               	btfsc	4050,7,c	;volatile
  5361   0015EE  0012               	return	
  5362   0015F0  D7FD               	goto	l72
  5363   0015F2                     __end_of_OSCILLATOR_Initialize:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function _INTERRUPT_Initialize *****************
  5367 ;; Defined at:
  5368 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		None
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5382 ;;      Params:         0       0       0       0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0       0
  5385 ;;      Totals:         0       0       0       0       0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 4
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_SYSTEM_Initialize
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text25
  5397   001650                     __ptext25:
  5398                           	callstack 0
  5399   001650                     _INTERRUPT_Initialize:
  5400                           	callstack 25
  5401                           
  5402                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5403                           
  5404                           ;incstack = 0
  5405   001650  9ED0               	bcf	208,7,c	;volatile
  5406   001652  0012               	return		;funcret
  5407   001654                     __end_of_INTERRUPT_Initialize:
  5408                           	callstack 0
  5409                           
  5410 ;; *************** function _EUSART1_Initialize *****************
  5411 ;; Defined at:
  5412 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;		None
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5426 ;;      Params:         0       0       0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0
  5429 ;;      Totals:         0       0       0       0       0       0       0
  5430 ;;Total ram usage:        0 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 5
  5433 ;; This function calls:
  5434 ;;		_EUSART1_SetErrorHandler
  5435 ;;		_EUSART1_SetFramingErrorHandler
  5436 ;;		_EUSART1_SetOverrunErrorHandler
  5437 ;; This function is called by:
  5438 ;;		_SYSTEM_Initialize
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           	psect	text26
  5443   0013FE                     __ptext26:
  5444                           	callstack 0
  5445   0013FE                     _EUSART1_Initialize:
  5446                           	callstack 24
  5447                           
  5448                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5449                           
  5450                           ;incstack = 0
  5451   0013FE  0E08               	movlw	8
  5452   001400  6EB8               	movwf	184,c	;volatile
  5453                           
  5454                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5455   001402  0E90               	movlw	144
  5456   001404  6EAB               	movwf	171,c	;volatile
  5457                           
  5458                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5459   001406  0E24               	movlw	36
  5460   001408  6EAC               	movwf	172,c	;volatile
  5461                           
  5462                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5463   00140A  0E82               	movlw	130
  5464   00140C  6EAF               	movwf	175,c	;volatile
  5465                           
  5466                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5467   00140E  0E06               	movlw	6
  5468   001410  6EB0               	movwf	176,c	;volatile
  5469                           
  5470                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5471   001412  0E00               	movlw	0
  5472   001414  6E12               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5473   001416  0E00               	movlw	0
  5474   001418  6E13               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5475   00141A  EC19  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5476                           
  5477                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5478   00141E  0E00               	movlw	0
  5479   001420  6E12               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5480   001422  0E00               	movlw	0
  5481   001424  6E13               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5482   001426  EC14  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5483                           
  5484                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5485   00142A  0E00               	movlw	0
  5486   00142C  6E12               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5487   00142E  0E00               	movlw	0
  5488   001430  6E13               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5489   001432  EC1E  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5490                           
  5491                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5492   001436  0E00               	movlw	0
  5493   001438  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
  5494   00143A  0012               	return		;funcret
  5495   00143C                     __end_of_EUSART1_Initialize:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5499 ;; Defined at:
  5500 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5503 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1    wreg      void 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         2       0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0
  5518 ;;      Totals:         2       0       0       0       0       0       0
  5519 ;;Total ram usage:        2 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; Hardware stack levels required when called: 4
  5522 ;; This function calls:
  5523 ;;		Nothing
  5524 ;; This function is called by:
  5525 ;;		_EUSART1_Initialize
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text27
  5530   001628                     __ptext27:
  5531                           	callstack 0
  5532   001628                     _EUSART1_SetOverrunErrorHandler:
  5533                           	callstack 24
  5534                           
  5535                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5536                           
  5537                           ;incstack = 0
  5538   001628  C012  F043         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5539   00162C  C013  F044         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5540   001630  0012               	return		;funcret
  5541   001632                     __end_of_EUSART1_SetOverrunErrorHandler:
  5542                           	callstack 0
  5543                           
  5544 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5545 ;; Defined at:
  5546 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5547 ;; Parameters:    Size  Location     Type
  5548 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5549 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;		None
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		wreg, status,2, status,0
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5561 ;;      Params:         2       0       0       0       0       0       0
  5562 ;;      Locals:         0       0       0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0
  5564 ;;      Totals:         2       0       0       0       0       0       0
  5565 ;;Total ram usage:        2 bytes
  5566 ;; Hardware stack levels used: 1
  5567 ;; Hardware stack levels required when called: 4
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_EUSART1_Initialize
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text28
  5576   001632                     __ptext28:
  5577                           	callstack 0
  5578   001632                     _EUSART1_SetFramingErrorHandler:
  5579                           	callstack 24
  5580                           
  5581                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5582                           
  5583                           ;incstack = 0
  5584   001632  C012  F045         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5585   001636  C013  F046         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5586   00163A  0012               	return		;funcret
  5587   00163C                     __end_of_EUSART1_SetFramingErrorHandler:
  5588                           	callstack 0
  5589                           
  5590 ;; *************** function _EUSART1_SetErrorHandler *****************
  5591 ;; Defined at:
  5592 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  interruptHan    2   17[COMRAM] PTR FTN()void 
  5595 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5607 ;;      Params:         2       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0
  5610 ;;      Totals:         2       0       0       0       0       0       0
  5611 ;;Total ram usage:        2 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 4
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_EUSART1_Initialize
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text29
  5622   00163C                     __ptext29:
  5623                           	callstack 0
  5624   00163C                     _EUSART1_SetErrorHandler:
  5625                           	callstack 24
  5626                           
  5627                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5628                           
  5629                           ;incstack = 0
  5630   00163C  C012  F0B4         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5631   001640  C013  F0B5         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5632   001644  0012               	return		;funcret
  5633   001646                     __end_of_EUSART1_SetErrorHandler:
  5634                           	callstack 0
  5635                           
  5636 ;; *************** function _ADC_Initialize *****************
  5637 ;; Defined at:
  5638 ;;		line 62 in file "mcc_generated_files/adc.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;		None
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5652 ;;      Params:         0       0       0       0       0       0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0
  5655 ;;      Totals:         0       0       0       0       0       0       0
  5656 ;;Total ram usage:        0 bytes
  5657 ;; Hardware stack levels used: 1
  5658 ;; Hardware stack levels required when called: 4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_SYSTEM_Initialize
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           	psect	text30
  5667   0015B6                     __ptext30:
  5668                           	callstack 0
  5669   0015B6                     _ADC_Initialize:
  5670                           	callstack 25
  5671                           
  5672                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5673                           
  5674                           ;incstack = 0
  5675   0015B6  0E00               	movlw	0
  5676   0015B8  6EC1               	movwf	193,c	;volatile
  5677                           
  5678                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5679   0015BA  0E26               	movlw	38
  5680   0015BC  6EC0               	movwf	192,c	;volatile
  5681                           
  5682                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5683   0015BE  0E00               	movlw	0
  5684   0015C0  6EC3               	movwf	195,c	;volatile
  5685                           
  5686                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5687   0015C2  0E00               	movlw	0
  5688   0015C4  6EC4               	movwf	196,c	;volatile
  5689                           
  5690                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5691   0015C6  0E11               	movlw	17
  5692   0015C8  6EC2               	movwf	194,c	;volatile
  5693   0015CA  0012               	return		;funcret
  5694   0015CC                     __end_of_ADC_Initialize:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function _EUSART1_is_rx_ready *****************
  5698 ;; Defined at:
  5699 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      _Bool 
  5706 ;; Registers used:
  5707 ;;		wreg
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5713 ;;      Params:         0       0       0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0
  5716 ;;      Totals:         0       0       0       0       0       0       0
  5717 ;;Total ram usage:        0 bytes
  5718 ;; Hardware stack levels used: 1
  5719 ;; Hardware stack levels required when called: 4
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_main
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text31
  5728   0015FE                     __ptext31:
  5729                           	callstack 0
  5730   0015FE                     _EUSART1_is_rx_ready:
  5731                           	callstack 26
  5732                           
  5733                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5734                           
  5735                           ;incstack = 0
  5736   0015FE  AA9E               	btfss	158,5,c	;volatile
  5737   001600  D002               	goto	u1530
  5738   001602  0E01               	movlw	1
  5739   001604  0012               	return	
  5740   001606                     u1530:
  5741   001606  0E00               	movlw	0
  5742   001608  0012               	return		;funcret
  5743   00160A                     __end_of_EUSART1_is_rx_ready:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _EUSART1_Read *****************
  5747 ;; Defined at:
  5748 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      unsigned char 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5762 ;;      Params:         0       0       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 4
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_main
  5773 ;;		_getch
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text32
  5778   0015CC                     __ptext32:
  5779                           	callstack 0
  5780   0015CC                     _EUSART1_Read:
  5781                           	callstack 26
  5782                           
  5783                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5784                           
  5785                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
  5786                           
  5787                           ;incstack = 0
  5788   0015CC  AA9E               	btfss	158,5,c	;volatile
  5789   0015CE  D7FE               	goto	__ptext32
  5790                           
  5791                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5792   0015D0  0E00               	movlw	0
  5793   0015D2  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
  5794                           
  5795                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5796   0015D4  A2AB               	btfss	171,1,c	;volatile
  5797   0015D6  D002               	goto	l2456
  5798                           
  5799                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5800   0015D8  98AB               	bcf	171,4,c	;volatile
  5801                           
  5802                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5803   0015DA  88AB               	bsf	171,4,c	;volatile
  5804   0015DC                     l2456:
  5805                           
  5806                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5807   0015DC  50AE               	movf	174,w,c	;volatile
  5808   0015DE  0012               	return		;funcret
  5809   0015E0                     __end_of_EUSART1_Read:
  5810                           	callstack 0
  5811                           
  5812 ;; *************** function _INTERRUPT_InterruptManager *****************
  5813 ;; Defined at:
  5814 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5828 ;;      Params:         0       0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0
  5830 ;;      Temps:          2       0       0       0       0       0       0
  5831 ;;      Totals:         2       0       0       0       0       0       0
  5832 ;;Total ram usage:        2 bytes
  5833 ;; Hardware stack levels used: 1
  5834 ;; Hardware stack levels required when called: 3
  5835 ;; This function calls:
  5836 ;;		_TMR0_ISR
  5837 ;; This function is called by:
  5838 ;;		Interrupt level 2
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	intcode
  5843   000008                     __pintcode:
  5844                           	callstack 0
  5845   000008                     _INTERRUPT_InterruptManager:
  5846                           	callstack 18
  5847                           
  5848                           ;incstack = 0
  5849   000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5850   00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
  5851   00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5852                           
  5853                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5854   000012  BAF2               	btfsc	242,5,c	;volatile
  5855   000014  A4F2               	btfss	242,2,c	;volatile
  5856   000016  D002               	goto	i2l16
  5857                           
  5858                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5859   000018  EC83  F00A         	call	_TMR0_ISR	;wreg free
  5860   00001C                     i2l16:
  5861   00001C  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5862   000020  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5863   000024  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5864   000026  0011               	retfie		f
  5865   000028                     __end_of_INTERRUPT_InterruptManager:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _TMR0_ISR *****************
  5869 ;; Defined at:
  5870 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5884 ;;      Params:         0       0       0       0       0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 2
  5891 ;; This function calls:
  5892 ;;		Absolute function
  5893 ;;		_TMR0_DefaultInterruptHandler
  5894 ;;		_sampleTMR0ISR
  5895 ;; This function is called by:
  5896 ;;		_INTERRUPT_InterruptManager
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text34
  5901   001506                     __ptext34:
  5902                           	callstack 0
  5903   001506                     _TMR0_ISR:
  5904                           	callstack 18
  5905                           
  5906                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5907                           
  5908                           ;incstack = 0
  5909   001506  94F2               	bcf	242,2,c	;volatile
  5910                           
  5911                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5912   001508  5040               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5913   00150A  6ED7               	movwf	215,c	;volatile
  5914                           
  5915                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5916   00150C  C03F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5917                           
  5918                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5919   001510  5041               	movf	_TMR0_InterruptHandler^0,w,c
  5920   001512  1042               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5921   001514  B4D8               	btfsc	status,2,c
  5922   001516  0012               	return	
  5923                           
  5924                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5925   001518  D801               	call	i2u152_48
  5926   00151A  0012               	return	
  5927   00151C                     i2u152_48:
  5928   00151C  0005               	push	
  5929   00151E  6EFA               	movwf	pclath,c
  5930   001520  5041               	movf	_TMR0_InterruptHandler^0,w,c
  5931   001522  6EFD               	movwf	tosl,c
  5932   001524  5042               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5933   001526  6EFE               	movwf	tosh,c
  5934   001528  50F8               	movf	tblptru,w,c
  5935   00152A  6EFF               	movwf	tosu,c
  5936   00152C  50FA               	movf	pclath,w,c
  5937   00152E  0012               	return		;indir
  5938   001530                     __end_of_TMR0_ISR:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5942 ;; Defined at:
  5943 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;		None
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;		None
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		None
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5957 ;;      Params:         0       0       0       0       0       0       0
  5958 ;;      Locals:         0       0       0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0
  5960 ;;      Totals:         0       0       0       0       0       0       0
  5961 ;;Total ram usage:        0 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_TMR0_Initialize
  5967 ;;		_TMR0_ISR
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text35
  5972   001654                     __ptext35:
  5973                           	callstack 0
  5974   001654                     _TMR0_DefaultInterruptHandler:
  5975                           	callstack 19
  5976                           
  5977                           ;incstack = 0
  5978   001654  0012               	return		;funcret
  5979   001656                     __end_of_TMR0_DefaultInterruptHandler:
  5980                           	callstack 0
  5981                           
  5982 ;; *************** function _sampleTMR0ISR *****************
  5983 ;; Defined at:
  5984 ;;		line 203 in file "main.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;		None
  5987 ;; Auto vars:     Size  Location     Type
  5988 ;;		None
  5989 ;; Return value:  Size  Location     Type
  5990 ;;                  1    wreg      void 
  5991 ;; Registers used:
  5992 ;;		wreg, status,2, status,0, cstack
  5993 ;; Tracked objects:
  5994 ;;		On entry : 0/0
  5995 ;;		On exit  : 0/0
  5996 ;;		Unchanged: 0/0
  5997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5998 ;;      Params:         0       0       0       0       0       0       0
  5999 ;;      Locals:         0       0       0       0       0       0       0
  6000 ;;      Temps:          5       0       0       0       0       0       0
  6001 ;;      Totals:         5       0       0       0       0       0       0
  6002 ;;Total ram usage:        5 bytes
  6003 ;; Hardware stack levels used: 1
  6004 ;; Hardware stack levels required when called: 1
  6005 ;; This function calls:
  6006 ;;		_TMR0_ReadTimer
  6007 ;;		i2_TMR0_WriteTimer
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;;		_TMR0_ISR
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text36
  6015   0010BC                     __ptext36:
  6016                           	callstack 0
  6017   0010BC                     _sampleTMR0ISR:
  6018                           	callstack 18
  6019                           
  6020                           ;main.c: 205:     TMR0_WriteTimer(0x10000);
  6021                           
  6022                           ;incstack = 0
  6023   0010BC  0E00               	movlw	0
  6024   0010BE  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6025   0010C0  0E00               	movlw	0
  6026   0010C2  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6027   0010C4  EC23  F00B         	call	i2_TMR0_WriteTimer	;wreg free
  6028   0010C8  8C89               	bsf	137,6,c	;volatile
  6029   0010CA  D03B               	goto	i2l2402
  6030   0010CC                     i2l2386:
  6031                           
  6032                           ;main.c: 213:             if(sampling == 1) state = MICTRIGGER;
  6033   0010CC  044A               	decf	_sampling^0,w,c
  6034   0010CE  A4D8               	btfss	status,2,c
  6035   0010D0  D049               	goto	i2l348
  6036   0010D2  0E01               	movlw	1
  6037   0010D4  D02B               	goto	L2
  6038   0010D6                     i2l2390:
  6039                           
  6040                           ;main.c: 216:             if((ADRESH > (128 + threshold)) || (ADRESH < (128 - threshold)
      +                          )) state = MICACQUIRE;
  6041   0010D6  50C4               	movf	196,w,c	;volatile
  6042   0010D8  6E0B               	movwf	??_sampleTMR0ISR^0,c
  6043   0010DA  6A0C               	clrf	(??_sampleTMR0ISR+1)^0,c
  6044   0010DC  0100               	movlb	0	; () banked
  6045   0010DE  51D7               	movf	_threshold& (0+255),w,b
  6046   0010E0  6E0D               	movwf	(??_sampleTMR0ISR+2)^0,c
  6047   0010E2  6A0E               	clrf	(??_sampleTMR0ISR+3)^0,c
  6048   0010E4  0E80               	movlw	128
  6049   0010E6  260D               	addwf	(??_sampleTMR0ISR+2)^0,f,c
  6050   0010E8  0E00               	movlw	0
  6051   0010EA  220E               	addwfc	(??_sampleTMR0ISR+3)^0,f,c
  6052   0010EC  500B               	movf	??_sampleTMR0ISR^0,w,c
  6053   0010EE  5C0D               	subwf	(??_sampleTMR0ISR+2)^0,w,c
  6054   0010F0  500E               	movf	(??_sampleTMR0ISR+3)^0,w,c
  6055   0010F2  0A80               	xorlw	128
  6056   0010F4  6E0F               	movwf	(??_sampleTMR0ISR+4)^0,c
  6057   0010F6  500C               	movf	(??_sampleTMR0ISR+1)^0,w,c
  6058   0010F8  0A80               	xorlw	128
  6059   0010FA  580F               	subwfb	(??_sampleTMR0ISR+4)^0,w,c
  6060   0010FC  A0D8               	btfss	status,0,c
  6061   0010FE  D015               	goto	i2u148_40
  6062                           
  6063                           ; BSR set to: 0
  6064   001100  0E80               	movlw	128
  6065   001102  6E0B               	movwf	??_sampleTMR0ISR^0,c
  6066   001104  0E00               	movlw	0
  6067   001106  6E0C               	movwf	(??_sampleTMR0ISR+1)^0,c
  6068   001108  51D7               	movf	_threshold& (0+255),w,b
  6069   00110A  5E0B               	subwf	??_sampleTMR0ISR^0,f,c
  6070   00110C  0E00               	movlw	0
  6071   00110E  5A0C               	subwfb	(??_sampleTMR0ISR+1)^0,f,c
  6072   001110  50C4               	movf	196,w,c	;volatile
  6073   001112  6E0D               	movwf	(??_sampleTMR0ISR+2)^0,c
  6074   001114  6A0E               	clrf	(??_sampleTMR0ISR+3)^0,c
  6075   001116  500B               	movf	??_sampleTMR0ISR^0,w,c
  6076   001118  5C0D               	subwf	(??_sampleTMR0ISR+2)^0,w,c
  6077   00111A  500E               	movf	(??_sampleTMR0ISR+3)^0,w,c
  6078   00111C  0A80               	xorlw	128
  6079   00111E  6E0F               	movwf	(??_sampleTMR0ISR+4)^0,c
  6080   001120  500C               	movf	(??_sampleTMR0ISR+1)^0,w,c
  6081   001122  0A80               	xorlw	128
  6082   001124  580F               	subwfb	(??_sampleTMR0ISR+4)^0,w,c
  6083   001126  B0D8               	btfsc	status,0,c
  6084   001128  D01D               	goto	i2l348
  6085   00112A                     i2u148_40:
  6086                           
  6087                           ; BSR set to: 0
  6088   00112A  0E02               	movlw	2
  6089   00112C                     L2:
  6090   00112C  6E4C               	movwf	sampleTMR0ISR@state^0,c
  6091   00112E  D01A               	goto	i2l348
  6092   001130                     i2l2396:
  6093                           
  6094                           ;main.c: 219:             if(sampling == 0) state = MICIDLE;
  6095   001130  504A               	movf	_sampling^0,w,c
  6096   001132  A4D8               	btfss	status,2,c
  6097   001134  D002               	goto	i2l354
  6098   001136  0E00               	movlw	0
  6099   001138  6E4C               	movwf	sampleTMR0ISR@state^0,c
  6100   00113A                     i2l354:
  6101                           
  6102                           ;main.c: 220:             sampled = 1;
  6103   00113A  0E01               	movlw	1
  6104   00113C  0100               	movlb	0	; () banked
  6105   00113E  6FB6               	movwf	_sampled& (0+255),b
  6106                           
  6107                           ;main.c: 221:             break;
  6108   001140  D011               	goto	i2l348
  6109   001142                     i2l2402:
  6110   001142  504C               	movf	sampleTMR0ISR@state^0,w,c
  6111   001144  6E0B               	movwf	??_sampleTMR0ISR^0,c
  6112   001146  6A0C               	clrf	(??_sampleTMR0ISR+1)^0,c
  6113                           
  6114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6115                           ; Switch size 1, requested type "simple"
  6116                           ; Number of cases is 1, Range of values is 0 to 0
  6117                           ; switch strategies available:
  6118                           ; Name         Instructions Cycles
  6119                           ; simple_byte            4     3 (average)
  6120                           ;	Chosen strategy is simple_byte
  6121   001148  500C               	movf	(??_sampleTMR0ISR+1)^0,w,c
  6122   00114A  0A00               	xorlw	0	; case 0
  6123   00114C  A4D8               	btfss	status,2,c
  6124   00114E  D00A               	goto	i2l348
  6125                           
  6126                           ; Switch size 1, requested type "simple"
  6127                           ; Number of cases is 3, Range of values is 0 to 2
  6128                           ; switch strategies available:
  6129                           ; Name         Instructions Cycles
  6130                           ; simple_byte           10     6 (average)
  6131                           ;	Chosen strategy is simple_byte
  6132   001150  500B               	movf	??_sampleTMR0ISR^0,w,c
  6133   001152  0A00               	xorlw	0	; case 0
  6134   001154  B4D8               	btfsc	status,2,c
  6135   001156  D7BA               	goto	i2l2386
  6136   001158  0A01               	xorlw	1	; case 1
  6137   00115A  B4D8               	btfsc	status,2,c
  6138   00115C  D7BC               	goto	i2l2390
  6139   00115E  0A03               	xorlw	3	; case 2
  6140   001160  B4D8               	btfsc	status,2,c
  6141   001162  D7E6               	goto	i2l2396
  6142   001164                     i2l348:
  6143                           
  6144                           ;main.c: 223:     ADCON0bits.GO_NOT_DONE = 1;
  6145   001164  82C2               	bsf	194,1,c	;volatile
  6146                           
  6147                           ;main.c: 225:     TMR0_WriteTimer(0x10000 - (1600 - TMR0_ReadTimer()));
  6148   001166  ECBF  F00A         	call	_TMR0_ReadTimer	;wreg free
  6149   00116A  0EC0               	movlw	192
  6150   00116C  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  6151   00116E  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6152   001170  0EF9               	movlw	249
  6153   001172  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  6154   001174  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6155   001176  EC23  F00B         	call	i2_TMR0_WriteTimer	;wreg free
  6156   00117A  9C89               	bcf	137,6,c	;volatile
  6157   00117C  0012               	return		;funcret
  6158   00117E                     __end_of_sampleTMR0ISR:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function i2_TMR0_WriteTimer *****************
  6162 ;; Defined at:
  6163 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  timerVal        2    8[COMRAM] unsigned short 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;		None
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, status,2
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6177 ;;      Params:         2       0       0       0       0       0       0
  6178 ;;      Locals:         0       0       0       0       0       0       0
  6179 ;;      Temps:          0       0       0       0       0       0       0
  6180 ;;      Totals:         2       0       0       0       0       0       0
  6181 ;;Total ram usage:        2 bytes
  6182 ;; Hardware stack levels used: 1
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_sampleTMR0ISR
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text37
  6191   001646                     __ptext37:
  6192                           	callstack 0
  6193   001646                     i2_TMR0_WriteTimer:
  6194                           	callstack 18
  6195                           
  6196                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  6197                           
  6198                           ;incstack = 0
  6199   001646  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  6200   001648  6ED7               	movwf	215,c	;volatile
  6201                           
  6202                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6203   00164A  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  6204   00164E  0012               	return		;funcret
  6205   001650                     __end_ofi2_TMR0_WriteTimer:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _TMR0_ReadTimer *****************
  6209 ;; Defined at:
  6210 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  readVal         2    4[COMRAM] unsigned short 
  6215 ;;  readValHigh     1    7[COMRAM] unsigned char 
  6216 ;;  readValLow      1    6[COMRAM] unsigned char 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  2    0[COMRAM] unsigned short 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6226 ;;      Params:         2       0       0       0       0       0       0
  6227 ;;      Locals:         4       0       0       0       0       0       0
  6228 ;;      Temps:          2       0       0       0       0       0       0
  6229 ;;      Totals:         8       0       0       0       0       0       0
  6230 ;;Total ram usage:        8 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_sampleTMR0ISR
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text38
  6240   00157E                     __ptext38:
  6241                           	callstack 0
  6242   00157E                     _TMR0_ReadTimer:
  6243                           	callstack 18
  6244                           
  6245                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  6246                           
  6247                           ;incstack = 0
  6248   00157E  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  6249                           
  6250                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  6251   001582  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  6252                           
  6253                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  6254   001586  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  6255   001588  6E03               	movwf	??_TMR0_ReadTimer^0,c
  6256   00158A  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  6257   00158C  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  6258   00158E  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  6259                           
  6260                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  6261   001592  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  6262   001596  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  6263   00159A  0012               	return		;funcret
  6264   00159C                     __end_of_TMR0_ReadTimer:
  6265                           	callstack 0
  6266                           
  6267                           	psect	text39
  6268   000000                     __ptext39:
  6269                           	callstack 0
  6270                           
  6271                           	psect	rparam
  6272   000000                     
  6273                           	psect	temp
  6274   00004D                     btemp:
  6275                           	callstack 0
  6276   00004D                     	ds	1
  6277   000000                     int$flags	set	btemp
  6278   000000                     wtemp8	set	btemp+1
  6279   000000                     ttemp5	set	btemp+1
  6280   000000                     ttemp6	set	btemp+4
  6281   000000                     ttemp7	set	btemp+8
  6282                           
  6283                           	psect	idloc
  6284                           
  6285                           ;Config register IDLOC0 @ 0x200000
  6286                           ;	unspecified, using default values
  6287   200000                     	org	2097152
  6288   200000  FF                 	db	255
  6289                           
  6290                           ;Config register IDLOC1 @ 0x200001
  6291                           ;	unspecified, using default values
  6292   200001                     	org	2097153
  6293   200001  FF                 	db	255
  6294                           
  6295                           ;Config register IDLOC2 @ 0x200002
  6296                           ;	unspecified, using default values
  6297   200002                     	org	2097154
  6298   200002  FF                 	db	255
  6299                           
  6300                           ;Config register IDLOC3 @ 0x200003
  6301                           ;	unspecified, using default values
  6302   200003                     	org	2097155
  6303   200003  FF                 	db	255
  6304                           
  6305                           ;Config register IDLOC4 @ 0x200004
  6306                           ;	unspecified, using default values
  6307   200004                     	org	2097156
  6308   200004  FF                 	db	255
  6309                           
  6310                           ;Config register IDLOC5 @ 0x200005
  6311                           ;	unspecified, using default values
  6312   200005                     	org	2097157
  6313   200005  FF                 	db	255
  6314                           
  6315                           ;Config register IDLOC6 @ 0x200006
  6316                           ;	unspecified, using default values
  6317   200006                     	org	2097158
  6318   200006  FF                 	db	255
  6319                           
  6320                           ;Config register IDLOC7 @ 0x200007
  6321                           ;	unspecified, using default values
  6322   200007                     	org	2097159
  6323   200007  FF                 	db	255
  6324                           
  6325                           	psect	config
  6326                           
  6327                           ; Padding undefined space
  6328   300000                     	org	3145728
  6329   300000  FF                 	db	255
  6330                           
  6331                           ;Config register CONFIG1H @ 0x300001
  6332                           ;	Oscillator Selection bits
  6333                           ;	FOSC = INTIO67, Internal oscillator block
  6334                           ;	4X PLL Enable
  6335                           ;	PLLCFG = OFF, Oscillator used directly
  6336                           ;	Primary clock enable bit
  6337                           ;	PRICLKEN = ON, Primary clock enabled
  6338                           ;	Fail-Safe Clock Monitor Enable bit
  6339                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6340                           ;	Internal/External Oscillator Switchover bit
  6341                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6342   300001                     	org	3145729
  6343   300001  28                 	db	40
  6344                           
  6345                           ;Config register CONFIG2L @ 0x300002
  6346                           ;	Power-up Timer Enable bit
  6347                           ;	PWRTEN = OFF, Power up timer disabled
  6348                           ;	Brown-out Reset Enable bits
  6349                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6350                           ;	Brown Out Reset Voltage bits
  6351                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6352   300002                     	org	3145730
  6353   300002  1F                 	db	31
  6354                           
  6355                           ;Config register CONFIG2H @ 0x300003
  6356                           ;	Watchdog Timer Enable bits
  6357                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6358                           ;	Watchdog Timer Postscale Select bits
  6359                           ;	WDTPS = 32768, 1:32768
  6360   300003                     	org	3145731
  6361   300003  3C                 	db	60
  6362                           
  6363                           ; Padding undefined space
  6364   300004                     	org	3145732
  6365   300004  FF                 	db	255
  6366                           
  6367                           ;Config register CONFIG3H @ 0x300005
  6368                           ;	CCP2 MUX bit
  6369                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6370                           ;	PORTB A/D Enable bit
  6371                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6372                           ;	P3A/CCP3 Mux bit
  6373                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6374                           ;	HFINTOSC Fast Start-up
  6375                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6376                           ;	Timer3 Clock input mux bit
  6377                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6378                           ;	ECCP2 B output mux bit
  6379                           ;	P2BMX = PORTB5, P2B is on RB5
  6380                           ;	MCLR Pin Enable bit
  6381                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6382   300005                     	org	3145733
  6383   300005  BF                 	db	191
  6384                           
  6385                           ;Config register CONFIG4L @ 0x300006
  6386                           ;	Stack Full/Underflow Reset Enable bit
  6387                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6388                           ;	Single-Supply ICSP Enable bit
  6389                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6390                           ;	Extended Instruction Set Enable bit
  6391                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6392                           ;	Background Debug
  6393                           ;	DEBUG = OFF, Disabled
  6394   300006                     	org	3145734
  6395   300006  85                 	db	133
  6396                           
  6397                           ; Padding undefined space
  6398   300007                     	org	3145735
  6399   300007  FF                 	db	255
  6400                           
  6401                           ;Config register CONFIG5L @ 0x300008
  6402                           ;	Code Protection Block 0
  6403                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6404                           ;	Code Protection Block 1
  6405                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6406                           ;	Code Protection Block 2
  6407                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6408                           ;	Code Protection Block 3
  6409                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6410   300008                     	org	3145736
  6411   300008  0F                 	db	15
  6412                           
  6413                           ;Config register CONFIG5H @ 0x300009
  6414                           ;	Boot Block Code Protection bit
  6415                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6416                           ;	Data EEPROM Code Protection bit
  6417                           ;	CPD = OFF, Data EEPROM not code-protected
  6418   300009                     	org	3145737
  6419   300009  C0                 	db	192
  6420                           
  6421                           ;Config register CONFIG6L @ 0x30000A
  6422                           ;	Write Protection Block 0
  6423                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6424                           ;	Write Protection Block 1
  6425                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6426                           ;	Write Protection Block 2
  6427                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6428                           ;	Write Protection Block 3
  6429                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6430   30000A                     	org	3145738
  6431   30000A  0F                 	db	15
  6432                           
  6433                           ;Config register CONFIG6H @ 0x30000B
  6434                           ;	Configuration Register Write Protection bit
  6435                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6436                           ;	Boot Block Write Protection bit
  6437                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6438                           ;	Data EEPROM Write Protection bit
  6439                           ;	WRTD = OFF, Data EEPROM not write-protected
  6440   30000B                     	org	3145739
  6441   30000B  E0                 	db	224
  6442                           
  6443                           ;Config register CONFIG7L @ 0x30000C
  6444                           ;	Table Read Protection Block 0
  6445                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6446                           ;	Table Read Protection Block 1
  6447                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6448                           ;	Table Read Protection Block 2
  6449                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6450                           ;	Table Read Protection Block 3
  6451                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6452   30000C                     	org	3145740
  6453   30000C  0F                 	db	15
  6454                           
  6455                           ;Config register CONFIG7H @ 0x30000D
  6456                           ;	Boot Block Table Read Protection bit
  6457                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6458   30000D                     	org	3145741
  6459   30000D  40                 	db	64
  6460                           tosu	equ	0xFFF
  6461                           tosh	equ	0xFFE
  6462                           tosl	equ	0xFFD
  6463                           stkptr	equ	0xFFC
  6464                           pclatu	equ	0xFFB
  6465                           pclath	equ	0xFFA
  6466                           pcl	equ	0xFF9
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           indf0	equ	0xFEF
  6474                           postinc0	equ	0xFEE
  6475                           postdec0	equ	0xFED
  6476                           preinc0	equ	0xFEC
  6477                           plusw0	equ	0xFEB
  6478                           fsr0h	equ	0xFEA
  6479                           fsr0l	equ	0xFE9
  6480                           wreg	equ	0xFE8
  6481                           indf1	equ	0xFE7
  6482                           postinc1	equ	0xFE6
  6483                           postdec1	equ	0xFE5
  6484                           preinc1	equ	0xFE4
  6485                           plusw1	equ	0xFE3
  6486                           fsr1h	equ	0xFE2
  6487                           fsr1l	equ	0xFE1
  6488                           bsr	equ	0xFE0
  6489                           indf2	equ	0xFDF
  6490                           postinc2	equ	0xFDE
  6491                           postdec2	equ	0xFDD
  6492                           preinc2	equ	0xFDC
  6493                           plusw2	equ	0xFDB
  6494                           fsr2h	equ	0xFDA
  6495                           fsr2l	equ	0xFD9
  6496                           status	equ	0xFD8

Data Sizes:
    Strings     623
    Constant    0
    Data        2
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     84     120
    BANK1           256    256     256
    BANK2           256    256     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1385$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1385$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_43(CODE[3]), STR_42(CODE[14]), STR_41(CODE[24]), STR_40(CODE[21]), 
		 -> STR_39(CODE[5]), STR_38(CODE[15]), STR_37(CODE[33]), STR_36(CODE[5]), 
		 -> STR_35(CODE[4]), STR_34(CODE[52]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[7]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[20]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_43(CODE[3]), STR_42(CODE[14]), STR_41(CODE[24]), STR_40(CODE[21]), 
		 -> STR_39(CODE[5]), STR_38(CODE[15]), STR_37(CODE[33]), STR_36(CODE[5]), 
		 -> STR_35(CODE[4]), STR_34(CODE[52]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[7]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[20]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_43(CODE[3]), STR_42(CODE[14]), STR_41(CODE[24]), STR_40(CODE[21]), 
		 -> STR_39(CODE[5]), STR_38(CODE[15]), STR_37(CODE[33]), STR_36(CODE[5]), 
		 -> STR_35(CODE[4]), STR_34(CODE[52]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[7]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[20]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1425$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_43(CODE[3]), STR_42(CODE[14]), STR_41(CODE[24]), STR_40(CODE[21]), 
		 -> STR_39(CODE[5]), STR_38(CODE[15]), STR_37(CODE[33]), STR_36(CODE[5]), 
		 -> STR_35(CODE[4]), STR_34(CODE[52]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[4]), STR_28(CODE[2]), 
		 -> STR_27(CODE[2]), STR_26(CODE[7]), STR_25(CODE[52]), STR_24(CODE[19]), 
		 -> STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[20]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), STR_12(CODE[33]), 
		 -> STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), 
		 -> STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sampleTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sampleTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_sampleTMR0ISR
    _sampleTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               534   534      0   20012
                                             62 BANK0     22    22      0
                                              0 BANK1    256   256      0
                                              0 BANK2    256   256      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   16389
                                             52 BANK0     10     2      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12426
                                             56 COMRAM     2     2      0
                                             46 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   11950
                                             25 BANK0     21    15      6
                               _ctoa
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3964
                                             46 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                             17 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                             17 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4681
                                             46 COMRAM    10     0     10
                                              0 BANK0     25    25      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2791
                                             35 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             28 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             35 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                             17 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                             17 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1253
                                             28 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     964
                                             19 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                             18 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     357
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             17 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     220
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             19 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     165
                                             15 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     165
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _sampleTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _sampleTMR0ISR                                       5     5      0     165
                                             10 COMRAM     5     5      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      96
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
   ___wmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _utoa
           ___lodiv
           ___lomod
           _pad

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _sampleTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100    100     100       8      100.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100    100     100       6      100.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     54      78       4       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITBIGSFRllhh       27      0       0      26        0.0%
BITBIGSFRllhl       26      0       0      27        0.0%
BITBIGSFRhlhhh      19      0       0      16        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRlhhhll      C      0       0      22        0.0%
BITBIGSFRlhhhhh      B      0       0      19        0.0%
BITBIGSFRlhhhll      7      0       0      21        0.0%
BITBIGSFRlhhhlh      7      0       0      20        0.0%
BITBIGSFRlhhl        6      0       0      24        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRlhhhll      2      0       0      23        0.0%
BITBIGSFRhlhl        1      0       0      17        0.0%
BITBIGSFRhll         1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C4      28        0.0%
DATA                 0      0     2C4      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 05 17:53:00 2023

                                            l72 15EC                             ___wmul@multiplicand 0014  
                               _timer0ReloadVal 003F                                             l290 004C  
                                           l808 120A                                             l798 0FCE  
                                           u960 12B0                                             u980 12F8  
                                           _abs 14AA                                             _pad 130C  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1101 0B3A                                            l1103 0B42  
                                          ?_abs 0024                                            l2020 12B8  
                                          l1060 1322                                            l1133 14D2  
                                          l1070 124A                                            l2030 1446  
                                          l2008 15F4                                            l2112 0F00  
                                          l2104 0EC4                                            l1074 1256  
                                          l2050 0D0A                                            l2034 145C  
                                          l2122 0F48                                            l3002 01CA  
                                          l1083 0972                                            l2044 0CE2  
                                          l2108 0EDA                                            l2124 0F5C  
                                          l1085 097A                                            l1086 09A8  
                                          l2134 0FB8                                            l2150 11F4  
                                          l2142 1198                                            l3110 04AC  
                                          l3014 0242                                            l2056 0D30  
                                          l2072 0DB6                                            l2160 132C  
                                          l2144 11AC                                            l3040 028C  
                                          l3024 025C                                            l3008 0206  
                                          l2058 0D44                                            l3106 0480  
                                          l2076 0DDC                                            l2068 0DA0  
                                          l2092 0E4E                                            l2164 1344  
                                          l3140 065A                                            l3124 0558  
                                          l3116 04EA                                            l3052 0306  
                                          l2182 1260                                            l2158 131A  
                                          l3070 0388                                            l2512 1094  
                                          l2176 123E                                            l2096 0E68  
                                          l2088 0E2A                                            l3128 05BA  
                                          l3080 03C2                                            l3064 0326  
                                          l3144 066E                                            l2186 1278  
                                          l2098 0E7C                                            l3074 03BC  
                                          l3146 06B2                                            l2516 10AA  
                                          l2508 1086                                            l3092 0432  
                                          l2456 15DC                                            l3088 041E  
                                          l2490 1024                                            l2484 100C  
                                          l2804 095A                                            l2822 09B6  
                                          l2496 1046                                            l2832 0AB0  
                                          l2816 099C                                            l2904 0814  
                                          l2920 08E0                                            l2498 1052  
                                          l2914 08B0                                            l2844 0AFE  
                                          l2908 0882                                            l2916 08D0  
                                          l2932 13C2                                            l2934 13E0  
                                          ?_pad 0024                                            l2856 0B7A  
                                          l2866 0C68                                            l2892 075A  
                                          l2990 01A0                                            l2974 00BE  
                                          l2984 017E                                            l2976 0168  
                                          l2968 0098                                            l2978 0176  
                                          l2996 01A8                                            STR_1 7FCB  
                                          STR_2 7EF1                                            STR_3 7FD6  
                                          STR_4 7FFB                                            STR_5 7FF2  
                                          STR_6 7E4D                                            STR_7 7F9F  
                                          STR_8 7FDF                                            STR_9 7F3A  
                                          u1100 0E80                                            u1021 0D10  
                                          u1040 0D48                                            u2010 078E  
                                          u1131 0F28                                            u1220 14B8  
                                          u1150 0F60                                            u2110 02BC  
                                          u2200 045A                                            u2130 02EC  
                                          u1180 11B0                                            u2220 0552  
                                          u2060 019C                                            _LATA 000F89  
                                          u2070 01C8                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u1530 1606  
                                          u1900 0AC0                                            u1590 1056  
                                          u1920 0AE2                                            u1840 0930  
                                          u1921 0AE0                                            u1850 0932  
                                          u1940 0B2E                                            u1870 0968  
                                          u1970 0C94                                            u1971 0C92  
                                          i2l16 001C                                            _WPUB 000F61  
                                 _EUSART1_Write 15F2                                            abs@a 0024  
                                          _dbuf 00B7                                     main@samples 0100  
                                          _ctoa 122C                                            _main 002C  
                                          _dtoa 0906                                   ?_EUSART1_Read 0001  
                                          _prec 003D                                            pad@i 002B  
                                          pad@p 0028                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002D  
                                          fsr2l 000FD9                                            btemp 004D  
                                          _utoa 0B20                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0028  
                                  ___param_bank 000000                                           ??_abs 0026  
                                         ??_pad 002A                         __end_of_TMR0_Initialize 14AA  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 15F2  
                               __end_of___aldiv 10BC                                 __end_of___aodiv 0DFE  
                                         ?_ctoa 001D                                           ?_main 0001  
                                         ?_dtoa 002F                                 __end_of___aomod 0F22  
                                         STR_10 7F0A                                           STR_11 7EB0  
                                         STR_20 7F64                                           STR_12 7E8F  
                                         STR_21 7F78                                           STR_13 7DF7  
                                         STR_22 7F64                                           STR_30 7FFC  
                                         STR_14 7ED1                                           STR_23 7F78  
                                         STR_31 7FFC                                           STR_15 7E28  
                                         STR_16 7E4D                                           STR_32 7FEF  
                                         STR_24 7F8C                                           STR_40 7F4F  
                                         STR_17 7FE1                                           STR_33 7FEF  
                                         STR_41 7F22                                           STR_25 7D8F  
                                         STR_18 7FEF                                           STR_26 7FE6  
                                         STR_42 7FBD                                           STR_34 7DC3  
                                         STR_19 7FEF                                           STR_27 7FFC  
                                         STR_43 7FFB                                           STR_35 7FF7  
                                         STR_28 7FFC                                           STR_36 7FED  
                                         STR_29 7FF7                                           STR_37 7E6E  
                                         STR_38 7FAE                                           STR_39 7FED  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 002F  
                                         _T0CON 000FD5                                 __end_of___lodiv 0FF0  
                               __end_of___lomod 122C                                 _TMR0_WriteTimer 1614  
                                         i2l354 113A                                           i2l348 1164  
                                  vfpfcnvrt@fmt 007B                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                         __end_of_sampleTMR0ISR 117E                       ?_TMR0_SetInterruptHandler 0012  
                              __end_of_TMR0_ISR 1530                                           _flags 0049  
                                         _fputc 12A0                                           _fputs 143C  
                                         pad@fp 0024                                           _width 003B  
                                         ctoa@c 001F                                           _putch 160A  
                                         ctoa@l 0021                                           ctoa@w 0023  
                                         main@i 00B2                                           main@j 00AE  
                                         dtoa@d 0031                                           dtoa@i 0077  
                                         dtoa@n 006E                                           dtoa@p 006A  
                                         dtoa@s 0076                                           dtoa@w 006C  
                                ?_EUSART1_Write 0001                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                ??_EUSART1_Read 0012                                           ttemp5 004E  
                                         ttemp6 0051                                           ttemp7 0055  
                                         utoa@d 0031                                           utoa@i 0074  
                                         utoa@n 006C                                           utoa@p 006A  
                                         utoa@w 0068                                           status 000FD8  
                                         wtemp8 004E                                ___lodiv@dividend 0012  
            _EUSART1_DefaultFramingErrorHandler 000000                                 __initialization 136E  
                                  __end_of_ctoa 12A0                      __end_of_EUSART1_Initialize 143C  
                                  __end_of_main 06C2                                    __end_of_dtoa 0B20  
                                  __end_of_utoa 0CB6                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 0020                                          ??_main 009E  
                                        ??_dtoa 0060                                   main@avgPeriod 00AF  
                                        ??_utoa 0060                                   __activetblptr 000002  
                              ___lodiv@quotient 0022                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0014                                          ?_fputs 001D  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        i2l2402 1142                                          i2l2390 10D6  
                                        i2l2386 10CC                                          i2l2396 1130  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 main@crossings 0200                                          _SPBRG1 000FAF  
                                 main@frequency 00A6                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 0039  
                                     ??___aldiv 001A                                       ??___aodiv 0022  
                                     ??___aomod 0022                                          ___wmul 1558  
                       __end_of_TMR0_WriteTimer 161E                                       ??___lodiv 0022  
                                     ??___lomod 0022                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0012                                ?_TMR0_Initialize 0001  
                                        clear_0 1398                                          clear_1 13A4  
                                        isa$std 000001                                          _printf 1530  
                                        pad@buf 0026                ??_EUSART1_SetOverrunErrorHandler 0014  
               ?_EUSART1_SetOverrunErrorHandler 0012                                          ctoa@fp 001D  
                                        main@ci 00B1                                          dtoa@fp 002F  
                                        fputc@c 0014                                          fputs@c 0021  
                                        fputs@i 0022                                    __pdataCOMRAM 004C  
                                        fputs@s 001D                                    __mediumconst 7D8E  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 13FE  
                               ??_EUSART1_Write 0012                                          utoa@fp 002F  
      TMR0_SetInterruptHandler@InterruptHandler 0012                               _SYSTEM_Initialize 159C  
                                    __accesstop 0060                         __end_of__initialization 13AA  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 1657  
                           ??_SYSTEM_Initialize 0016                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 130C                                   __end_of_fputs 1474  
                                 __end_of_putch 1614                            __end_of_EUSART1_Read 15E0  
                                       ??_fputc 0018                       __end_of_SYSTEM_Initialize 15B6  
                                       ??_fputs 0021                                         ??_putch 0013  
                                    __pbssBANK0 00B4                 __end_of_EUSART1_SetErrorHandler 1646  
              __end_of_TMR0_SetInterruptHandler 1628                                         ?___wmul 0012  
                                    ??_TMR0_ISR 0010                                ?_TMR0_WriteTimer 0012  
                                       ?_printf 0094          __end_of_EUSART1_SetFramingErrorHandler 163C  
                _EUSART1_SetFramingErrorHandler 1632                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                              ___lomod@dividend 0012                            _ADC_InterruptHandler 0047  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aldiv 0FF0                                         ___aodiv 0CB6  
                                       ___aomod 0DFE                                         ___lodiv 0F22  
                                       ___lomod 117E                                       ?_vfprintf 008E  
                           _EUSART1_is_rx_ready 15FE                                         __pcinit 136E  
                                       __ramtop 0600                                         __ptext0 002C  
                                       __ptext1 1530                                         __ptext2 13B8  
                                       __ptext3 06C2                                         __ptext4 0B20  
                                       __ptext5 117E                                         __ptext6 0F22  
                                       __ptext7 0906                                         __ptext8 130C  
                                       __ptext9 143C                                       _T0CONbits 000FD5  
                         _OSCILLATOR_Initialize 15E0                                ___aldiv@dividend 0012  
                            _EUSART1_Initialize 13FE                        ??_PIN_MANAGER_Initialize 0012  
                                       _sampled 00B6                                         main@cmd 00AC  
                          end_of_initialization 13AA                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0016  
                                 __Lmediumconst 7D8E                     _EUSART1_OverrunErrorHandler 0043  
                                       fputs@fp 001F                               __end_of_vfpfcnvrt 0906  
                         TMR0_ReadTimer@readVal 0005                                ___aldiv@quotient 001C  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0084                                      ??_vfprintf 0039  
                                _TMR0_ReadTimer 157E                            ??_EUSART1_Initialize 0014  
                      _TMR0_SetInterruptHandler 161E                             EUSART1_Write@txData 0012  
                         ??_EUSART1_is_rx_ready 0012                                    _EUSART1_Read 15CC  
                                    main@period 00AA                                      main@sample 00AD  
                        __end_of_TMR0_ReadTimer 159C                    __end_of_INTERRUPT_Initialize 1654  
                                   vfpfcnvrt@ap 007D                                     vfpfcnvrt@cp 008C  
                                   vfpfcnvrt@fp 0079                                  __end_of___wmul 157E  
                                 __pidataCOMRAM 1656                                  _ADC_Initialize 15B6  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1558  
                           start_initialization 136E                                 ___lodiv@divisor 001A  
                               ___lodiv@counter 002A                                   _sampleTMR0ISR 10BC  
                                   __end_of_abs 14DC                                     __end_of_pad 136E  
                                   putch@txData 0013                           __end_of_EUSART1_Write 15FE  
                                   vfprintf@fmt 0090                                 ?_TMR0_ReadTimer 0001  
                                      ??___wmul 0016                          __end_of_ADC_Initialize 15CC  
                                   __pdataBANK0 00D7                                        ??_printf 003B  
                                   __pbssCOMRAM 003B                                  ?_sampleTMR0ISR 0001  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                                 __pcstackBANK2 0200                                ___aodiv@dividend 0012  
              ??_EUSART1_SetFramingErrorHandler 0014                 ?_EUSART1_SetFramingErrorHandler 0012  
                         _TMR0_InterruptHandler 0041                          _PIN_MANAGER_Initialize 14DC  
                                     _dtoa$1458 0068                                       __pintcode 0008  
                                 __pmediumconst 7D8E                                        ?___aldiv 0012  
                                      ?___aodiv 0012                                        ?___aomod 0012  
                              ___aodiv@quotient 0024                                        ?___lodiv 0012  
                                      ?___lomod 0012                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0010                                 ___lomod@divisor 001A  
                               ___lomod@counter 0022                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 00B4  
                       _EUSART1_SetErrorHandler 163C                            _INTERRUPT_Initialize 1650  
                               ___aldiv@divisor 0016                               ??_TMR0_Initialize 0014  
                               ___aldiv@counter 001A                                  ___wmul@product 0016  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 0012  
                                      i2u152_48 151C                                        i2u148_40 112A  
                    ??_TMR0_SetInterruptHandler 0014                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 1506  
                                     _threshold 00D7                                       _vfpfcnvrt 06C2  
                      TMR0_ReadTimer@readValLow 0007                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0012                                 ??_sampleTMR0ISR 000B  
                             i2_TMR0_WriteTimer 1646                                      vfpfcnvrt@c 0083  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 000B  
                                      __Hrparam 0000                                      vfprintf@ap 0092  
                                      __Lrparam 0000                                      vfprintf@fp 008E  
                       ??_OSCILLATOR_Initialize 0012                                      ?_vfpfcnvrt 0079  
                               ___aodiv@divisor 001A                                 ___aodiv@counter 0022  
                     __end_ofi2_TMR0_WriteTimer 1650                       ??_EUSART1_SetErrorHandler 0014  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 160A  
                                      __ptext10 14AA                                        __ptext11 0DFE  
                                      __ptext20 159C                                        __ptext12 0CB6  
                                      __ptext21 1474                                        __ptext13 122C  
                                      __ptext30 15B6                                        __ptext22 161E  
                                      __ptext14 12A0                                        __ptext31 15FE  
                                      __ptext23 14DC                                        __ptext15 160A  
                                      __ptext32 15CC                                        __ptext24 15E0  
                                      __ptext16 15F2                                        __ptext25 1650  
                                      __ptext17 1558                                        __ptext34 1506  
                                      __ptext26 13FE                                        __ptext18 0FF0  
                                      __ptext35 1654                                        __ptext27 1628  
                                      __ptext19 1614                                        __ptext36 10BC  
                                      __ptext28 1632                                        __ptext37 1646  
                                      __ptext29 163C                                        __ptext38 157E  
                                      __ptext39 0000                         TMR0_WriteTimer@timerVal 0012  
                             ??_TMR0_WriteTimer 0014                                ??_TMR0_ReadTimer 0003  
          __end_of_TMR0_DefaultInterruptHandler 1656                    _TMR0_DefaultInterruptHandler 1654  
                                      _sampling 004A  EUSART1_SetOverrunErrorHandler@interruptHandler 0012  
                                      isa$xinst 000000                                        int$flags 004D  
                                      _vfprintf 13B8              __end_of_INTERRUPT_InterruptManager 0028  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0094  
                   _EUSART1_FramingErrorHandler 0045                                ___aomod@dividend 0012  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 0012  
                                      intlevel2 0000                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1632                  _EUSART1_SetOverrunErrorHandler 1628  
                                    _RCSTA1bits 000FAB                                ??_ADC_Initialize 0012  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 009C  
EUSART1_SetFramingErrorHandler@interruptHandler 0012                                 ___aomod@divisor 001A  
                                   ??_vfpfcnvrt 007F                                 ___aomod@counter 0022  
                            _eusart1RxLastError 004B                              sampleTMR0ISR@state 004C  
                               _TMR0_Initialize 1474                                    ___aldiv@sign 001B  
                                  ___aodiv@sign 0023                  __end_of_PIN_MANAGER_Initialize 1506  
                                  ___aomod@sign 0023  
