

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 06 15:34:42 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 06/04/2022 GMT
    62                           ; 
    63                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F25K22 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    97   000000                     
    98 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    99   000000                     
   100 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   101   000000                     
   102                           	psect	idataBANK0
   103   0016F4                     __pidataBANK0:
   104                           	callstack 0
   105                           
   106                           ;initializer for _threshold
   107   0016F4  0A                 	db	10
   108   000000                     _TMR0L	set	4054
   109   000000                     _TMR0H	set	4055
   110   000000                     _TXREG1	set	4013
   111   000000                     _RCREG1	set	4014
   112   000000                     _SPBRG1	set	4015
   113   000000                     _TXSTA1	set	4012
   114   000000                     _ADCON0	set	4034
   115   000000                     _ADRESL	set	4035
   116   000000                     _ANSELA	set	3896
   117   000000                     _ANSELB	set	3897
   118   000000                     _ANSELC	set	3898
   119   000000                     _LATA	set	3977
   120   000000                     _RCONbits	set	4048
   121   000000                     _LATAbits	set	3977
   122   000000                     _T0CON	set	4053
   123   000000                     _RCSTA1bits	set	4011
   124   000000                     _TXSTA1bits	set	4012
   125   000000                     _ADCON0bits	set	4034
   126   000000                     _PLLRDY	set	32407
   127   000000                     _OSCCON2	set	4050
   128   000000                     _OSCCON	set	4051
   129   000000                     _INTCON2bits	set	4081
   130   000000                     _INTCONbits	set	4082
   131   000000                     _TRISA	set	3986
   132   000000                     _LATC	set	3979
   133   000000                     _LATB	set	3978
   134   000000                     _OSCTUNE	set	3995
   135   000000                     _TRISC	set	3988
   136   000000                     _TRISB	set	3987
   137   000000                     _WPUB	set	3937
   138   000000                     _T0CONbits	set	4053
   139   000000                     _PIR1bits	set	3998
   140   000000                     _RCSTA1	set	4011
   141   000000                     _BAUDCON1	set	4024
   142   000000                     _ADCON2	set	4032
   143   000000                     _ADCON1	set	4033
   144   000000                     _ADRESH	set	4036
   145   000000                     _SPBRGH1	set	4016
   146                           
   147                           	psect	mediumconst
   148   007D72                     __pmediumconst:
   149                           	callstack 0
   150   007D72  00                 	db	0
   151   007D73                     STR_26:
   152   007D73  54                 	db	84	;'T'
   153   007D74  68                 	db	104	;'h'
   154   007D75  65                 	db	101	;'e'
   155   007D76  20                 	db	32
   156   007D77  6C                 	db	108	;'l'
   157   007D78  61                 	db	97	;'a'
   158   007D79  73                 	db	115	;'s'
   159   007D7A  74                 	db	116	;'t'
   160   007D7B  20                 	db	32
   161   007D7C  32                 	db	50	;'2'
   162   007D7D  35                 	db	53	;'5'
   163   007D7E  36                 	db	54	;'6'
   164   007D7F  20                 	db	32
   165   007D80  41                 	db	65	;'A'
   166   007D81  44                 	db	68	;'D'
   167   007D82  43                 	db	67	;'C'
   168   007D83  20                 	db	32
   169   007D84  73                 	db	115	;'s'
   170   007D85  61                 	db	97	;'a'
   171   007D86  6D                 	db	109	;'m'
   172   007D87  70                 	db	112	;'p'
   173   007D88  6C                 	db	108	;'l'
   174   007D89  65                 	db	101	;'e'
   175   007D8A  73                 	db	115	;'s'
   176   007D8B  20                 	db	32
   177   007D8C  66                 	db	102	;'f'
   178   007D8D  72                 	db	114	;'r'
   179   007D8E  6F                 	db	111	;'o'
   180   007D8F  6D                 	db	109	;'m'
   181   007D90  20                 	db	32
   182   007D91  74                 	db	116	;'t'
   183   007D92  68                 	db	104	;'h'
   184   007D93  65                 	db	101	;'e'
   185   007D94  20                 	db	32
   186   007D95  6D                 	db	109	;'m'
   187   007D96  69                 	db	105	;'i'
   188   007D97  63                 	db	99	;'c'
   189   007D98  72                 	db	114	;'r'
   190   007D99  6F                 	db	111	;'o'
   191   007D9A  70                 	db	112	;'p'
   192   007D9B  68                 	db	104	;'h'
   193   007D9C  6F                 	db	111	;'o'
   194   007D9D  6E                 	db	110	;'n'
   195   007D9E  65                 	db	101	;'e'
   196   007D9F  20                 	db	32
   197   007DA0  61                 	db	97	;'a'
   198   007DA1  72                 	db	114	;'r'
   199   007DA2  65                 	db	101	;'e'
   200   007DA3  3A                 	db	58	;':'
   201   007DA4  0A                 	db	10
   202   007DA5  0D                 	db	13
   203   007DA6  00                 	db	0
   204   007DA7                     STR_35:
   205   007DA7  54                 	db	84	;'T'
   206   007DA8  68                 	db	104	;'h'
   207   007DA9  65                 	db	101	;'e'
   208   007DAA  20                 	db	32
   209   007DAB  73                 	db	115	;'s'
   210   007DAC  6F                 	db	111	;'o'
   211   007DAD  75                 	db	117	;'u'
   212   007DAE  6E                 	db	110	;'n'
   213   007DAF  64                 	db	100	;'d'
   214   007DB0  20                 	db	32
   215   007DB1  77                 	db	119	;'w'
   216   007DB2  61                 	db	97	;'a'
   217   007DB3  76                 	db	118	;'v'
   218   007DB4  65                 	db	101	;'e'
   219   007DB5  20                 	db	32
   220   007DB6  63                 	db	99	;'c'
   221   007DB7  72                 	db	114	;'r'
   222   007DB8  6F                 	db	111	;'o'
   223   007DB9  73                 	db	115	;'s'
   224   007DBA  73                 	db	115	;'s'
   225   007DBB  65                 	db	101	;'e'
   226   007DBC  64                 	db	100	;'d'
   227   007DBD  20                 	db	32
   228   007DBE  61                 	db	97	;'a'
   229   007DBF  74                 	db	116	;'t'
   230   007DC0  20                 	db	32
   231   007DC1  74                 	db	116	;'t'
   232   007DC2  68                 	db	104	;'h'
   233   007DC3  65                 	db	101	;'e'
   234   007DC4  20                 	db	32
   235   007DC5  66                 	db	102	;'f'
   236   007DC6  6F                 	db	111	;'o'
   237   007DC7  6C                 	db	108	;'l'
   238   007DC8  6C                 	db	108	;'l'
   239   007DC9  6F                 	db	111	;'o'
   240   007DCA  77                 	db	119	;'w'
   241   007DCB  69                 	db	105	;'i'
   242   007DCC  6E                 	db	110	;'n'
   243   007DCD  67                 	db	103	;'g'
   244   007DCE  20                 	db	32
   245   007DCF  69                 	db	105	;'i'
   246   007DD0  6E                 	db	110	;'n'
   247   007DD1  64                 	db	100	;'d'
   248   007DD2  69                 	db	105	;'i'
   249   007DD3  63                 	db	99	;'c'
   250   007DD4  69                 	db	105	;'i'
   251   007DD5  65                 	db	101	;'e'
   252   007DD6  73                 	db	115	;'s'
   253   007DD7  3A                 	db	58	;':'
   254   007DD8  0A                 	db	10
   255   007DD9  0D                 	db	13
   256   007DDA  00                 	db	0
   257   007DDB                     STR_13:
   258   007DDB  66                 	db	102	;'f'
   259   007DDC  3A                 	db	58	;':'
   260   007DDD  20                 	db	32
   261   007DDE  63                 	db	99	;'c'
   262   007DDF  6F                 	db	111	;'o'
   263   007DE0  6D                 	db	109	;'m'
   264   007DE1  70                 	db	112	;'p'
   265   007DE2  75                 	db	117	;'u'
   266   007DE3  74                 	db	116	;'t'
   267   007DE4  65                 	db	101	;'e'
   268   007DE5  20                 	db	32
   269   007DE6  74                 	db	116	;'t'
   270   007DE7  68                 	db	104	;'h'
   271   007DE8  65                 	db	101	;'e'
   272   007DE9  20                 	db	32
   273   007DEA  70                 	db	112	;'p'
   274   007DEB  65                 	db	101	;'e'
   275   007DEC  72                 	db	114	;'r'
   276   007DED  69                 	db	105	;'i'
   277   007DEE  6F                 	db	111	;'o'
   278   007DEF  64                 	db	100	;'d'
   279   007DF0  20                 	db	32
   280   007DF1  66                 	db	102	;'f'
   281   007DF2  72                 	db	114	;'r'
   282   007DF3  6F                 	db	111	;'o'
   283   007DF4  6D                 	db	109	;'m'
   284   007DF5  20                 	db	32
   285   007DF6  25                 	db	37
   286   007DF7  64                 	db	100	;'d'
   287   007DF8  20                 	db	32
   288   007DF9  73                 	db	115	;'s'
   289   007DFA  61                 	db	97	;'a'
   290   007DFB  6D                 	db	109	;'m'
   291   007DFC  70                 	db	112	;'p'
   292   007DFD  6C                 	db	108	;'l'
   293   007DFE  65                 	db	101	;'e'
   294   007DFF  73                 	db	115	;'s'
   295   007E00  20                 	db	32
   296   007E01  66                 	db	102	;'f'
   297   007E02  72                 	db	114	;'r'
   298   007E03  6F                 	db	111	;'o'
   299   007E04  6D                 	db	109	;'m'
   300   007E05  20                 	db	32
   301   007E06  41                 	db	65	;'A'
   302   007E07  44                 	db	68	;'D'
   303   007E08  43                 	db	67	;'C'
   304   007E09  0D                 	db	13
   305   007E0A  0A                 	db	10
   306   007E0B  00                 	db	0
   307   007E0C                     STR_15:
   308   007E0C  30                 	db	48	;'0'
   309   007E0D  2D                 	db	45
   310   007E0E  39                 	db	57	;'9'
   311   007E0F  3A                 	db	58	;':'
   312   007E10  20                 	db	32
   313   007E11  73                 	db	115	;'s'
   314   007E12  77                 	db	119	;'w'
   315   007E13  69                 	db	105	;'i'
   316   007E14  74                 	db	116	;'t'
   317   007E15  63                 	db	99	;'c'
   318   007E16  68                 	db	104	;'h'
   319   007E17  20                 	db	32
   320   007E18  73                 	db	115	;'s'
   321   007E19  61                 	db	97	;'a'
   322   007E1A  6D                 	db	109	;'m'
   323   007E1B  70                 	db	112	;'p'
   324   007E1C  6C                 	db	108	;'l'
   325   007E1D  65                 	db	101	;'e'
   326   007E1E  64                 	db	100	;'d'
   327   007E1F  20                 	db	32
   328   007E20  63                 	db	99	;'c'
   329   007E21  68                 	db	104	;'h'
   330   007E22  61                 	db	97	;'a'
   331   007E23  6E                 	db	110	;'n'
   332   007E24  6E                 	db	110	;'n'
   333   007E25  65                 	db	101	;'e'
   334   007E26  6C                 	db	108	;'l'
   335   007E27  20                 	db	32
   336   007E28  74                 	db	116	;'t'
   337   007E29  6F                 	db	111	;'o'
   338   007E2A  20                 	db	32
   339   007E2B  41                 	db	65	;'A'
   340   007E2C  4E                 	db	78	;'N'
   341   007E2D  78                 	db	120	;'x'
   342   007E2E  0D                 	db	13
   343   007E2F  0A                 	db	10
   344   007E30  00                 	db	0
   345   007E31                     STR_6:
   346   007E31  2D                 	db	45
   347   007E32  2D                 	db	45
   348   007E33  2D                 	db	45
   349   007E34  2D                 	db	45
   350   007E35  2D                 	db	45
   351   007E36  2D                 	db	45
   352   007E37  2D                 	db	45
   353   007E38  2D                 	db	45
   354   007E39  2D                 	db	45
   355   007E3A  2D                 	db	45
   356   007E3B  2D                 	db	45
   357   007E3C  2D                 	db	45
   358   007E3D  2D                 	db	45
   359   007E3E  2D                 	db	45
   360   007E3F  2D                 	db	45
   361   007E40  2D                 	db	45
   362   007E41  2D                 	db	45
   363   007E42  2D                 	db	45
   364   007E43  2D                 	db	45
   365   007E44  2D                 	db	45
   366   007E45  2D                 	db	45
   367   007E46  2D                 	db	45
   368   007E47  2D                 	db	45
   369   007E48  2D                 	db	45
   370   007E49  2D                 	db	45
   371   007E4A  2D                 	db	45
   372   007E4B  2D                 	db	45
   373   007E4C  2D                 	db	45
   374   007E4D  2D                 	db	45
   375   007E4E  2D                 	db	45
   376   007E4F  0D                 	db	13
   377   007E50  0A                 	db	10
   378   007E51  00                 	db	0
   379   007E52                     STR_38:
   380   007E52  54                 	db	84	;'T'
   381   007E53  68                 	db	104	;'h'
   382   007E54  65                 	db	101	;'e'
   383   007E55  20                 	db	32
   384   007E56  73                 	db	115	;'s'
   385   007E57  6F                 	db	111	;'o'
   386   007E58  75                 	db	117	;'u'
   387   007E59  6E                 	db	110	;'n'
   388   007E5A  64                 	db	100	;'d'
   389   007E5B  20                 	db	32
   390   007E5C  77                 	db	119	;'w'
   391   007E5D  61                 	db	97	;'a'
   392   007E5E  76                 	db	118	;'v'
   393   007E5F  65                 	db	101	;'e'
   394   007E60  20                 	db	32
   395   007E61  68                 	db	104	;'h'
   396   007E62  61                 	db	97	;'a'
   397   007E63  64                 	db	100	;'d'
   398   007E64  20                 	db	32
   399   007E65  25                 	db	37
   400   007E66  75                 	db	117	;'u'
   401   007E67  20                 	db	32
   402   007E68  70                 	db	112	;'p'
   403   007E69  65                 	db	101	;'e'
   404   007E6A  72                 	db	114	;'r'
   405   007E6B  69                 	db	105	;'i'
   406   007E6C  6F                 	db	111	;'o'
   407   007E6D  64                 	db	100	;'d'
   408   007E6E  73                 	db	115	;'s'
   409   007E6F  3A                 	db	58	;':'
   410   007E70  0A                 	db	10
   411   007E71  0D                 	db	13
   412   007E72  00                 	db	0
   413   007E73                     STR_12:
   414   007E73  74                 	db	116	;'t'
   415   007E74  3A                 	db	58	;':'
   416   007E75  20                 	db	32
   417   007E76  64                 	db	100	;'d'
   418   007E77  65                 	db	101	;'e'
   419   007E78  63                 	db	99	;'c'
   420   007E79  72                 	db	114	;'r'
   421   007E7A  65                 	db	101	;'e'
   422   007E7B  61                 	db	97	;'a'
   423   007E7C  73                 	db	115	;'s'
   424   007E7D  65                 	db	101	;'e'
   425   007E7E  20                 	db	32
   426   007E7F  73                 	db	115	;'s'
   427   007E80  61                 	db	97	;'a'
   428   007E81  6D                 	db	109	;'m'
   429   007E82  70                 	db	112	;'p'
   430   007E83  6C                 	db	108	;'l'
   431   007E84  69                 	db	105	;'i'
   432   007E85  6E                 	db	110	;'n'
   433   007E86  67                 	db	103	;'g'
   434   007E87  20                 	db	32
   435   007E88  74                 	db	116	;'t'
   436   007E89  68                 	db	104	;'h'
   437   007E8A  72                 	db	114	;'r'
   438   007E8B  65                 	db	101	;'e'
   439   007E8C  73                 	db	115	;'s'
   440   007E8D  68                 	db	104	;'h'
   441   007E8E  6F                 	db	111	;'o'
   442   007E8F  6C                 	db	108	;'l'
   443   007E90  64                 	db	100	;'d'
   444   007E91  0A                 	db	10
   445   007E92  0D                 	db	13
   446   007E93  00                 	db	0
   447   007E94                     STR_11:
   448   007E94  54                 	db	84	;'T'
   449   007E95  3A                 	db	58	;':'
   450   007E96  20                 	db	32
   451   007E97  69                 	db	105	;'i'
   452   007E98  6E                 	db	110	;'n'
   453   007E99  63                 	db	99	;'c'
   454   007E9A  72                 	db	114	;'r'
   455   007E9B  65                 	db	101	;'e'
   456   007E9C  61                 	db	97	;'a'
   457   007E9D  73                 	db	115	;'s'
   458   007E9E  65                 	db	101	;'e'
   459   007E9F  20                 	db	32
   460   007EA0  73                 	db	115	;'s'
   461   007EA1  61                 	db	97	;'a'
   462   007EA2  6D                 	db	109	;'m'
   463   007EA3  70                 	db	112	;'p'
   464   007EA4  6C                 	db	108	;'l'
   465   007EA5  69                 	db	105	;'i'
   466   007EA6  6E                 	db	110	;'n'
   467   007EA7  67                 	db	103	;'g'
   468   007EA8  20                 	db	32
   469   007EA9  74                 	db	116	;'t'
   470   007EAA  68                 	db	104	;'h'
   471   007EAB  72                 	db	114	;'r'
   472   007EAC  65                 	db	101	;'e'
   473   007EAD  73                 	db	115	;'s'
   474   007EAE  68                 	db	104	;'h'
   475   007EAF  6F                 	db	111	;'o'
   476   007EB0  6C                 	db	108	;'l'
   477   007EB1  64                 	db	100	;'d'
   478   007EB2  0A                 	db	10
   479   007EB3  0D                 	db	13
   480   007EB4  00                 	db	0
   481   007EB5                     STR_14:
   482   007EB5  73                 	db	115	;'s'
   483   007EB6  3A                 	db	58	;':'
   484   007EB7  20                 	db	32
   485   007EB8  67                 	db	103	;'g'
   486   007EB9  61                 	db	97	;'a'
   487   007EBA  74                 	db	116	;'t'
   488   007EBB  68                 	db	104	;'h'
   489   007EBC  65                 	db	101	;'e'
   490   007EBD  72                 	db	114	;'r'
   491   007EBE  20                 	db	32
   492   007EBF  25                 	db	37
   493   007EC0  64                 	db	100	;'d'
   494   007EC1  20                 	db	32
   495   007EC2  73                 	db	115	;'s'
   496   007EC3  61                 	db	97	;'a'
   497   007EC4  6D                 	db	109	;'m'
   498   007EC5  70                 	db	112	;'p'
   499   007EC6  6C                 	db	108	;'l'
   500   007EC7  65                 	db	101	;'e'
   501   007EC8  73                 	db	115	;'s'
   502   007EC9  20                 	db	32
   503   007ECA  66                 	db	102	;'f'
   504   007ECB  72                 	db	114	;'r'
   505   007ECC  6F                 	db	111	;'o'
   506   007ECD  6D                 	db	109	;'m'
   507   007ECE  20                 	db	32
   508   007ECF  41                 	db	65	;'A'
   509   007ED0  44                 	db	68	;'D'
   510   007ED1  43                 	db	67	;'C'
   511   007ED2  0D                 	db	13
   512   007ED3  0A                 	db	10
   513   007ED4  00                 	db	0
   514   007ED5                     STR_42:
   515   007ED5  61                 	db	97	;'a'
   516   007ED6  76                 	db	118	;'v'
   517   007ED7  65                 	db	101	;'e'
   518   007ED8  72                 	db	114	;'r'
   519   007ED9  61                 	db	97	;'a'
   520   007EDA  67                 	db	103	;'g'
   521   007EDB  65                 	db	101	;'e'
   522   007EDC  20                 	db	32
   523   007EDD  66                 	db	102	;'f'
   524   007EDE  72                 	db	114	;'r'
   525   007EDF  65                 	db	101	;'e'
   526   007EE0  71                 	db	113	;'q'
   527   007EE1  75                 	db	117	;'u'
   528   007EE2  65                 	db	101	;'e'
   529   007EE3  6E                 	db	110	;'n'
   530   007EE4  63                 	db	99	;'c'
   531   007EE5  79                 	db	121	;'y'
   532   007EE6  3A                 	db	58	;':'
   533   007EE7  20                 	db	32
   534   007EE8  25                 	db	37
   535   007EE9  75                 	db	117	;'u'
   536   007EEA  20                 	db	32
   537   007EEB  48                 	db	72	;'H'
   538   007EEC  7A                 	db	122	;'z'
   539   007EED  0A                 	db	10
   540   007EEE  0D                 	db	13
   541   007EEF  00                 	db	0
   542   007EF0                     STR_2:
   543   007EF0  4D                 	db	77	;'M'
   544   007EF1  69                 	db	105	;'i'
   545   007EF2  63                 	db	99	;'c'
   546   007EF3  72                 	db	114	;'r'
   547   007EF4  6F                 	db	111	;'o'
   548   007EF5  70                 	db	112	;'p'
   549   007EF6  68                 	db	104	;'h'
   550   007EF7  6F                 	db	111	;'o'
   551   007EF8  6E                 	db	110	;'n'
   552   007EF9  65                 	db	101	;'e'
   553   007EFA  20                 	db	32
   554   007EFB  65                 	db	101	;'e'
   555   007EFC  78                 	db	120	;'x'
   556   007EFD  70                 	db	112	;'p'
   557   007EFE  65                 	db	101	;'e'
   558   007EFF  72                 	db	114	;'r'
   559   007F00  69                 	db	105	;'i'
   560   007F01  6D                 	db	109	;'m'
   561   007F02  65                 	db	101	;'e'
   562   007F03  6E                 	db	110	;'n'
   563   007F04  74                 	db	116	;'t'
   564   007F05  73                 	db	115	;'s'
   565   007F06  0D                 	db	13
   566   007F07  0A                 	db	10
   567   007F08  00                 	db	0
   568   007F09                     STR_10:
   569   007F09  7A                 	db	122	;'z'
   570   007F0A  3A                 	db	58	;':'
   571   007F0B  20                 	db	32
   572   007F0C  43                 	db	67	;'C'
   573   007F0D  6C                 	db	108	;'l'
   574   007F0E  65                 	db	101	;'e'
   575   007F0F  61                 	db	97	;'a'
   576   007F10  72                 	db	114	;'r'
   577   007F11  20                 	db	32
   578   007F12  74                 	db	116	;'t'
   579   007F13  68                 	db	104	;'h'
   580   007F14  65                 	db	101	;'e'
   581   007F15  20                 	db	32
   582   007F16  74                 	db	116	;'t'
   583   007F17  65                 	db	101	;'e'
   584   007F18  72                 	db	114	;'r'
   585   007F19  6D                 	db	109	;'m'
   586   007F1A  69                 	db	105	;'i'
   587   007F1B  6E                 	db	110	;'n'
   588   007F1C  61                 	db	97	;'a'
   589   007F1D  6C                 	db	108	;'l'
   590   007F1E  0D                 	db	13
   591   007F1F  0A                 	db	10
   592   007F20  00                 	db	0
   593   007F21                     STR_41:
   594   007F21  61                 	db	97	;'a'
   595   007F22  76                 	db	118	;'v'
   596   007F23  65                 	db	101	;'e'
   597   007F24  72                 	db	114	;'r'
   598   007F25  61                 	db	97	;'a'
   599   007F26  67                 	db	103	;'g'
   600   007F27  65                 	db	101	;'e'
   601   007F28  20                 	db	32
   602   007F29  70                 	db	112	;'p'
   603   007F2A  65                 	db	101	;'e'
   604   007F2B  72                 	db	114	;'r'
   605   007F2C  69                 	db	105	;'i'
   606   007F2D  6F                 	db	111	;'o'
   607   007F2E  64                 	db	100	;'d'
   608   007F2F  3A                 	db	58	;':'
   609   007F30  20                 	db	32
   610   007F31  25                 	db	37
   611   007F32  75                 	db	117	;'u'
   612   007F33  20                 	db	32
   613   007F34  75                 	db	117	;'u'
   614   007F35  73                 	db	115	;'s'
   615   007F36  0A                 	db	10
   616   007F37  0D                 	db	13
   617   007F38  00                 	db	0
   618   007F39                     STR_25:
   619   007F39  66                 	db	102	;'f'
   620   007F3A  69                 	db	105	;'i'
   621   007F3B  6E                 	db	110	;'n'
   622   007F3C  64                 	db	100	;'d'
   623   007F3D  69                 	db	105	;'i'
   624   007F3E  6E                 	db	110	;'n'
   625   007F3F  67                 	db	103	;'g'
   626   007F40  20                 	db	32
   627   007F41  63                 	db	99	;'c'
   628   007F42  72                 	db	114	;'r'
   629   007F43  6F                 	db	111	;'o'
   630   007F44  73                 	db	115	;'s'
   631   007F45  73                 	db	115	;'s'
   632   007F46  69                 	db	105	;'i'
   633   007F47  6E                 	db	110	;'n'
   634   007F48  67                 	db	103	;'g'
   635   007F49  73                 	db	115	;'s'
   636   007F4A  3A                 	db	58	;':'
   637   007F4B  20                 	db	32
   638   007F4C  0A                 	db	10
   639   007F4D  0D                 	db	13
   640   007F4E  00                 	db	0
   641   007F4F                     STR_9:
   642   007F4F  5A                 	db	90	;'Z'
   643   007F50  3A                 	db	58	;':'
   644   007F51  20                 	db	32
   645   007F52  52                 	db	82	;'R'
   646   007F53  65                 	db	101	;'e'
   647   007F54  73                 	db	115	;'s'
   648   007F55  65                 	db	101	;'e'
   649   007F56  74                 	db	116	;'t'
   650   007F57  20                 	db	32
   651   007F58  70                 	db	112	;'p'
   652   007F59  72                 	db	114	;'r'
   653   007F5A  6F                 	db	111	;'o'
   654   007F5B  63                 	db	99	;'c'
   655   007F5C  65                 	db	101	;'e'
   656   007F5D  73                 	db	115	;'s'
   657   007F5E  73                 	db	115	;'s'
   658   007F5F  6F                 	db	111	;'o'
   659   007F60  72                 	db	114	;'r'
   660   007F61  0D                 	db	13
   661   007F62  0A                 	db	10
   662   007F63  00                 	db	0
   663   007F64                     STR_20:
   664   007F64  75                 	db	117	;'u'
   665   007F65  70                 	db	112	;'p'
   666   007F66  70                 	db	112	;'p'
   667   007F67  65                 	db	101	;'e'
   668   007F68  72                 	db	114	;'r'
   669   007F69  20                 	db	32
   670   007F6A  74                 	db	116	;'t'
   671   007F6B  72                 	db	114	;'r'
   672   007F6C  69                 	db	105	;'i'
   673   007F6D  67                 	db	103	;'g'
   674   007F6E  67                 	db	103	;'g'
   675   007F6F  65                 	db	101	;'e'
   676   007F70  72                 	db	114	;'r'
   677   007F71  3A                 	db	58	;':'
   678   007F72  20                 	db	32
   679   007F73  25                 	db	37
   680   007F74  75                 	db	117	;'u'
   681   007F75  0A                 	db	10
   682   007F76  0D                 	db	13
   683   007F77  00                 	db	0
   684   007F78                     STR_21:
   685   007F78  6C                 	db	108	;'l'
   686   007F79  6F                 	db	111	;'o'
   687   007F7A  77                 	db	119	;'w'
   688   007F7B  65                 	db	101	;'e'
   689   007F7C  72                 	db	114	;'r'
   690   007F7D  20                 	db	32
   691   007F7E  74                 	db	116	;'t'
   692   007F7F  72                 	db	114	;'r'
   693   007F80  69                 	db	105	;'i'
   694   007F81  67                 	db	103	;'g'
   695   007F82  67                 	db	103	;'g'
   696   007F83  65                 	db	101	;'e'
   697   007F84  72                 	db	114	;'r'
   698   007F85  3A                 	db	58	;':'
   699   007F86  20                 	db	32
   700   007F87  25                 	db	37
   701   007F88  75                 	db	117	;'u'
   702   007F89  0A                 	db	10
   703   007F8A  0D                 	db	13
   704   007F8B  00                 	db	0
   705   007F8C                     STR_24:
   706   007F8C  74                 	db	116	;'t'
   707   007F8D  61                 	db	97	;'a'
   708   007F8E  6B                 	db	107	;'k'
   709   007F8F  69                 	db	105	;'i'
   710   007F90  6E                 	db	110	;'n'
   711   007F91  67                 	db	103	;'g'
   712   007F92  20                 	db	32
   713   007F93  73                 	db	115	;'s'
   714   007F94  61                 	db	97	;'a'
   715   007F95  6D                 	db	109	;'m'
   716   007F96  70                 	db	112	;'p'
   717   007F97  6C                 	db	108	;'l'
   718   007F98  65                 	db	101	;'e'
   719   007F99  73                 	db	115	;'s'
   720   007F9A  3A                 	db	58	;':'
   721   007F9B  20                 	db	32
   722   007F9C  0A                 	db	10
   723   007F9D  0D                 	db	13
   724   007F9E  00                 	db	0
   725   007F9F                     STR_7:
   726   007F9F  3F                 	db	63	;'?'
   727   007FA0  3A                 	db	58	;':'
   728   007FA1  20                 	db	32
   729   007FA2  48                 	db	72	;'H'
   730   007FA3  65                 	db	101	;'e'
   731   007FA4  6C                 	db	108	;'l'
   732   007FA5  70                 	db	112	;'p'
   733   007FA6  20                 	db	32
   734   007FA7  6D                 	db	109	;'m'
   735   007FA8  65                 	db	101	;'e'
   736   007FA9  6E                 	db	110	;'n'
   737   007FAA  75                 	db	117	;'u'
   738   007FAB  0D                 	db	13
   739   007FAC  0A                 	db	10
   740   007FAD  00                 	db	0
   741   007FAE                     STR_39:
   742   007FAE  25                 	db	37
   743   007FAF  75                 	db	117	;'u'
   744   007FB0  20                 	db	32
   745   007FB1  2D                 	db	45
   746   007FB2  20                 	db	32
   747   007FB3  25                 	db	37
   748   007FB4  75                 	db	117	;'u'
   749   007FB5  20                 	db	32
   750   007FB6  3D                 	db	61	;'='
   751   007FB7  20                 	db	32
   752   007FB8  25                 	db	37
   753   007FB9  75                 	db	117	;'u'
   754   007FBA  0A                 	db	10
   755   007FBB  0D                 	db	13
   756   007FBC  00                 	db	0
   757   007FBD                     STR_43:
   758   007FBD  75                 	db	117	;'u'
   759   007FBE  6E                 	db	110	;'n'
   760   007FBF  6B                 	db	107	;'k'
   761   007FC0  6E                 	db	110	;'n'
   762   007FC1  6F                 	db	111	;'o'
   763   007FC2  77                 	db	119	;'w'
   764   007FC3  6E                 	db	110	;'n'
   765   007FC4  20                 	db	32
   766   007FC5  6B                 	db	107	;'k'
   767   007FC6  65                 	db	101	;'e'
   768   007FC7  79                 	db	121	;'y'
   769   007FC8  0D                 	db	13
   770   007FC9  0A                 	db	10
   771   007FCA  00                 	db	0
   772   007FCB                     STR_1:
   773   007FCB  69                 	db	105	;'i'
   774   007FCC  6E                 	db	110	;'n'
   775   007FCD  4C                 	db	76	;'L'
   776   007FCE  61                 	db	97	;'a'
   777   007FCF  62                 	db	98	;'b'
   778   007FD0  20                 	db	32
   779   007FD1  30                 	db	48	;'0'
   780   007FD2  38                 	db	56	;'8'
   781   007FD3  0D                 	db	13
   782   007FD4  0A                 	db	10
   783   007FD5  00                 	db	0
   784   007FD6                     STR_3:
   785   007FD6  44                 	db	68	;'D'
   786   007FD7  65                 	db	101	;'e'
   787   007FD8  76                 	db	118	;'v'
   788   007FD9  27                 	db	39
   789   007FDA  32                 	db	50	;'2'
   790   007FDB  31                 	db	49	;'1'
   791   007FDC  0D                 	db	13
   792   007FDD  0A                 	db	10
   793   007FDE  00                 	db	0
   794   007FDF                     STR_8:
   795   007FDF  6F                 	db	111	;'o'
   796   007FE0  3A                 	db	58	;':'
   797   007FE1  20                 	db	32
   798   007FE2  6B                 	db	107	;'k'
   799   007FE3  0D                 	db	13
   800   007FE4  0A                 	db	10
   801   007FE5  00                 	db	0
   802   007FE6                     STR_27:
   803   007FE6  53                 	db	83	;'S'
   804   007FE7  5B                 	db	91	;'['
   805   007FE8  25                 	db	37
   806   007FE9  75                 	db	117	;'u'
   807   007FEA  5D                 	db	93	;']'
   808   007FEB  20                 	db	32
   809   007FEC  00                 	db	0
   810   007FED                     STR_37:
   811   007FED  0A                 	db	10
   812   007FEE  0D                 	db	13
   813   007FEF  0A                 	db	10
   814   007FF0  0D                 	db	13
   815   007FF1  00                 	db	0
   816   007FF2                     STR_5:
   817   007FF2  25                 	db	37
   818   007FF3  63                 	db	99	;'c'
   819   007FF4  0A                 	db	10
   820   007FF5  0D                 	db	13
   821   007FF6  00                 	db	0
   822   007FF7                     STR_30:
   823   007FF7  25                 	db	37
   824   007FF8  75                 	db	117	;'u'
   825   007FF9  20                 	db	32
   826   007FFA  00                 	db	0
   827   007FFB                     STR_4:
   828   007FFB  3E                 	db	62	;'>'
   829   007FFC  20                 	db	32
   830   007FFD  00                 	db	0
   831   007FFE  00                 	db	0	; dummy byte at the end
   832   000000                     
   833                           ; #config settings
   834                           
   835                           	psect	cinit
   836   001426                     __pcinit:
   837                           	callstack 0
   838   001426                     start_initialization:
   839                           	callstack 0
   840   001426                     __initialization:
   841                           	callstack 0
   842                           
   843                           ; Initialize objects allocated to BANK0 (1 bytes)
   844                           ; load TBLPTR registers with __pidataBANK0
   845   001426  0EF4               	movlw	low __pidataBANK0
   846   001428  6EF6               	movwf	tblptrl,c
   847   00142A  0E16               	movlw	high __pidataBANK0
   848   00142C  6EF7               	movwf	tblptrh,c
   849   00142E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   850   001430  6EF8               	movwf	tblptru,c
   851   001432  0009               	tblrd		*+	;fetch initializer
   852   001434  CFF5 F0C9          	movff	tablat,__pdataBANK0
   853                           
   854                           ; Clear objects allocated to BIGRAM (1024 bytes)
   855   001438  EE00  F0CA         	lfsr	0,__pbssBIGRAM
   856   00143C  EE14 F000          	lfsr	1,1024
   857   001440                     clear_0:
   858   001440  6AEE               	clrf	postinc0,c
   859   001442  50E5               	movf	postdec1,w,c
   860   001444  50E1               	movf	fsr1l,w,c
   861   001446  E1FC               	bnz	clear_0
   862   001448  50E2               	movf	fsr1h,w,c
   863   00144A  E1FA               	bnz	clear_0
   864                           
   865                           ; Clear objects allocated to BANK0 (45 bytes)
   866   00144C  EE00  F09C         	lfsr	0,__pbssBANK0
   867   001450  0E2D               	movlw	45
   868   001452                     clear_1:
   869   001452  6AEE               	clrf	postinc0,c
   870   001454  06E8               	decf	wreg,f,c
   871   001456  E1FD               	bnz	clear_1
   872                           
   873                           ; Clear objects allocated to COMRAM (9 bytes)
   874   001458  EE00  F04C         	lfsr	0,__pbssCOMRAM
   875   00145C  0E09               	movlw	9
   876   00145E                     clear_2:
   877   00145E  6AEE               	clrf	postinc0,c
   878   001460  06E8               	decf	wreg,f,c
   879   001462  E1FD               	bnz	clear_2
   880   001464                     end_of_initialization:
   881                           	callstack 0
   882   001464                     __end_of__initialization:
   883                           	callstack 0
   884   001464  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   885   001466  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   886   001468  0E00               	movlw	low (__Lmediumconst shr (0+16))
   887   00146A  6EF8               	movwf	tblptru,c
   888   00146C  0100               	movlb	0
   889   00146E  EF16  F000         	goto	_main	;jump to C main() function
   890                           
   891                           	psect	bssCOMRAM
   892   00004C                     __pbssCOMRAM:
   893                           	callstack 0
   894   00004C                     _width:
   895                           	callstack 0
   896   00004C                     	ds	2
   897   00004E                     _prec:
   898                           	callstack 0
   899   00004E                     	ds	2
   900   000050                     _timer0ReloadVal:
   901                           	callstack 0
   902   000050                     	ds	2
   903   000052                     sampleTMR0ISR@state:
   904                           	callstack 0
   905   000052                     	ds	1
   906   000053                     _sampling:
   907                           	callstack 0
   908   000053                     	ds	1
   909   000054                     _eusart1RxLastError:
   910                           	callstack 0
   911   000054                     	ds	1
   912                           
   913                           	psect	bssBANK0
   914   00009C                     __pbssBANK0:
   915                           	callstack 0
   916   00009C                     _TMR0_InterruptHandler:
   917                           	callstack 0
   918   00009C                     	ds	2
   919   00009E                     _EUSART1_ErrorHandler:
   920                           	callstack 0
   921   00009E                     	ds	2
   922   0000A0                     _EUSART1_OverrunErrorHandler:
   923                           	callstack 0
   924   0000A0                     	ds	2
   925   0000A2                     _EUSART1_FramingErrorHandler:
   926                           	callstack 0
   927   0000A2                     	ds	2
   928   0000A4                     _ADC_InterruptHandler:
   929                           	callstack 0
   930   0000A4                     	ds	2
   931   0000A6                     _flags:
   932                           	callstack 0
   933   0000A6                     	ds	1
   934   0000A7                     _sampled:
   935                           	callstack 0
   936   0000A7                     	ds	1
   937   0000A8                     _ci:
   938                           	callstack 0
   939   0000A8                     	ds	1
   940   0000A9                     _dbuf:
   941                           	callstack 0
   942   0000A9                     	ds	32
   943                           
   944                           	psect	dataBANK0
   945   0000C9                     __pdataBANK0:
   946                           	callstack 0
   947   0000C9                     _threshold:
   948                           	callstack 0
   949   0000C9                     	ds	1
   950                           
   951                           	psect	bssBIGRAM
   952   0000CA                     __pbssBIGRAM:
   953                           	callstack 0
   954   0000CA                     _crossings:
   955                           	callstack 0
   956   0000CA                     	ds	512
   957   0002CA                     _samples:
   958                           	callstack 0
   959   0002CA                     	ds	512
   960                           
   961                           	psect	cstackBANK0
   962   000060                     __pcstackBANK0:
   963                           	callstack 0
   964   000060                     vfpfcnvrt@fp:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x0
   968   000060                     	ds	2
   969   000062                     vfpfcnvrt@fmt:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x2
   973   000062                     	ds	2
   974   000064                     vfpfcnvrt@ap:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x4
   978   000064                     	ds	2
   979   000066                     ??_vfpfcnvrt:
   980                           
   981                           ; 1 bytes @ 0x6
   982   000066                     	ds	4
   983   00006A                     vfpfcnvrt@c:
   984                           	callstack 0
   985                           
   986                           ; 1 bytes @ 0xA
   987   00006A                     	ds	1
   988   00006B                     vfpfcnvrt@convarg:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0xB
   992   00006B                     	ds	8
   993   000073                     vfpfcnvrt@cp:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x13
   997   000073                     	ds	2
   998   000075                     ?_vfprintf:
   999                           	callstack 0
  1000   000075                     vfprintf@fp:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0x15
  1004   000075                     	ds	2
  1005   000077                     vfprintf@fmt:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x17
  1009   000077                     	ds	2
  1010   000079                     vfprintf@ap:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x19
  1014   000079                     	ds	2
  1015   00007B                     ?_printf:
  1016                           	callstack 0
  1017   00007B                     printf@fmt:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x1B
  1021   00007B                     	ds	8
  1022   000083                     printf@ap:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x23
  1026   000083                     	ds	2
  1027   000085                     ??_main:
  1028                           
  1029                           ; 1 bytes @ 0x25
  1030   000085                     	ds	4
  1031   000089                     main@frequency:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x29
  1035   000089                     	ds	4
  1036   00008D                     _main$1770:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x2D
  1040   00008D                     	ds	4
  1041   000091                     main@avgPeriod:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x31
  1045   000091                     	ds	2
  1046   000093                     main@period:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x33
  1050   000093                     	ds	2
  1051   000095                     main@totPeriod:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x35
  1055   000095                     	ds	2
  1056   000097                     main@cmd:
  1057                           	callstack 0
  1058                           
  1059                           ; 1 bytes @ 0x37
  1060   000097                     	ds	1
  1061   000098                     main@sample:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x38
  1065   000098                     	ds	1
  1066   000099                     main@j:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x39
  1070   000099                     	ds	1
  1071   00009A                     main@i:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x3A
  1075   00009A                     	ds	2
  1076                           
  1077                           	psect	cstackCOMRAM
  1078   000001                     __pcstackCOMRAM:
  1079                           	callstack 0
  1080   000001                     i2TMR0_WriteTimer@timerVal:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x0
  1084   000001                     	ds	2
  1085   000003                     ??_sampleTMR0ISR:
  1086   000003                     
  1087                           ; 1 bytes @ 0x2
  1088   000003                     	ds	5
  1089   000008                     ??_INTERRUPT_InterruptManager:
  1090                           
  1091                           ; 1 bytes @ 0x7
  1092   000008                     	ds	2
  1093   00000A                     ?___wmul:
  1094                           	callstack 0
  1095   00000A                     ?___lmul:
  1096                           	callstack 0
  1097   00000A                     ?___aodiv:
  1098                           	callstack 0
  1099   00000A                     ?___aomod:
  1100                           	callstack 0
  1101   00000A                     ?___lodiv:
  1102                           	callstack 0
  1103   00000A                     ?___lomod:
  1104                           	callstack 0
  1105   00000A                     EUSART1_Write@txData:
  1106                           	callstack 0
  1107   00000A                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1108                           	callstack 0
  1109   00000A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1110                           	callstack 0
  1111   00000A                     EUSART1_SetErrorHandler@interruptHandler:
  1112                           	callstack 0
  1113   00000A                     TMR0_WriteTimer@timerVal:
  1114                           	callstack 0
  1115   00000A                     TMR0_SetInterruptHandler@InterruptHandler:
  1116                           	callstack 0
  1117   00000A                     ___wmul@multiplier:
  1118                           	callstack 0
  1119   00000A                     ___lmul@multiplier:
  1120                           	callstack 0
  1121   00000A                     ___aodiv@dividend:
  1122                           	callstack 0
  1123   00000A                     ___aomod@dividend:
  1124                           	callstack 0
  1125   00000A                     ___lodiv@dividend:
  1126                           	callstack 0
  1127   00000A                     ___lomod@dividend:
  1128                           	callstack 0
  1129                           
  1130                           ; 8 bytes @ 0x9
  1131   00000A                     	ds	1
  1132   00000B                     putch@txData:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0xA
  1136   00000B                     	ds	1
  1137   00000C                     ??_TMR0_Initialize:
  1138   00000C                     ___wmul@multiplicand:
  1139                           	callstack 0
  1140   00000C                     fputc@c:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0xB
  1144   00000C                     	ds	2
  1145   00000E                     ___wmul@product:
  1146                           	callstack 0
  1147   00000E                     fputc@fp:
  1148                           	callstack 0
  1149   00000E                     ___lmul@multiplicand:
  1150                           	callstack 0
  1151                           
  1152                           ; 4 bytes @ 0xD
  1153   00000E                     	ds	2
  1154   000010                     ??_fputc:
  1155   000010                     ?___lwdiv:
  1156                           	callstack 0
  1157   000010                     ___lwdiv@dividend:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0xF
  1161   000010                     	ds	2
  1162   000012                     ___lwdiv@divisor:
  1163                           	callstack 0
  1164   000012                     ___lmul@product:
  1165                           	callstack 0
  1166   000012                     ___aodiv@divisor:
  1167                           	callstack 0
  1168   000012                     ___aomod@divisor:
  1169                           	callstack 0
  1170   000012                     ___lodiv@divisor:
  1171                           	callstack 0
  1172   000012                     ___lomod@divisor:
  1173                           	callstack 0
  1174                           
  1175                           ; 8 bytes @ 0x11
  1176   000012                     	ds	2
  1177   000014                     ___lwdiv@quotient:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x13
  1181   000014                     	ds	1
  1182   000015                     ctoa@fp:
  1183                           	callstack 0
  1184   000015                     fputs@s:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x14
  1188   000015                     	ds	1
  1189   000016                     ?___aldiv:
  1190                           	callstack 0
  1191   000016                     ___lwdiv@counter:
  1192                           	callstack 0
  1193   000016                     ___aldiv@dividend:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x15
  1197   000016                     	ds	1
  1198   000017                     ctoa@c:
  1199                           	callstack 0
  1200   000017                     fputs@fp:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x16
  1204   000017                     	ds	1
  1205   000018                     ??_ctoa:
  1206                           
  1207                           ; 1 bytes @ 0x17
  1208   000018                     	ds	1
  1209   000019                     fputs@c:
  1210                           	callstack 0
  1211   000019                     ctoa@l:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x18
  1215   000019                     	ds	1
  1216   00001A                     ___aodiv@counter:
  1217                           	callstack 0
  1218   00001A                     ___aomod@counter:
  1219                           	callstack 0
  1220   00001A                     ___lomod@counter:
  1221                           	callstack 0
  1222   00001A                     fputs@i:
  1223                           	callstack 0
  1224   00001A                     ___aldiv@divisor:
  1225                           	callstack 0
  1226   00001A                     ___lodiv@quotient:
  1227                           	callstack 0
  1228                           
  1229                           ; 8 bytes @ 0x19
  1230   00001A                     	ds	1
  1231   00001B                     ___aodiv@sign:
  1232                           	callstack 0
  1233   00001B                     ___aomod@sign:
  1234                           	callstack 0
  1235   00001B                     ctoa@w:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x1A
  1239   00001B                     	ds	1
  1240   00001C                     ?_abs:
  1241                           	callstack 0
  1242   00001C                     pad@fp:
  1243                           	callstack 0
  1244   00001C                     abs@a:
  1245                           	callstack 0
  1246   00001C                     ___aodiv@quotient:
  1247                           	callstack 0
  1248                           
  1249                           ; 8 bytes @ 0x1B
  1250   00001C                     	ds	2
  1251   00001E                     ??_abs:
  1252   00001E                     ___aldiv@counter:
  1253                           	callstack 0
  1254   00001E                     pad@buf:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x1D
  1258   00001E                     	ds	1
  1259   00001F                     ___aldiv@sign:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x1E
  1263   00001F                     	ds	1
  1264   000020                     pad@p:
  1265                           	callstack 0
  1266   000020                     ___aldiv@quotient:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x1F
  1270   000020                     	ds	2
  1271   000022                     ??_pad:
  1272   000022                     ___lodiv@counter:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x21
  1276   000022                     	ds	1
  1277   000023                     pad@i:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x22
  1281   000023                     	ds	2
  1282   000025                     pad@w:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x24
  1286   000025                     	ds	2
  1287   000027                     dtoa@fp:
  1288                           	callstack 0
  1289   000027                     utoa@fp:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x26
  1293   000027                     	ds	2
  1294   000029                     dtoa@d:
  1295                           	callstack 0
  1296   000029                     utoa@d:
  1297                           	callstack 0
  1298                           
  1299                           ; 8 bytes @ 0x28
  1300   000029                     	ds	8
  1301   000031                     ??_dtoa:
  1302   000031                     ??_utoa:
  1303                           
  1304                           ; 1 bytes @ 0x30
  1305   000031                     	ds	8
  1306   000039                     _dtoa$1458:
  1307                           	callstack 0
  1308   000039                     utoa@w:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x38
  1312   000039                     	ds	2
  1313   00003B                     dtoa@p:
  1314                           	callstack 0
  1315   00003B                     utoa@p:
  1316                           	callstack 0
  1317                           
  1318                           ; 2 bytes @ 0x3A
  1319   00003B                     	ds	2
  1320   00003D                     dtoa@w:
  1321                           	callstack 0
  1322   00003D                     utoa@n:
  1323                           	callstack 0
  1324                           
  1325                           ; 8 bytes @ 0x3C
  1326   00003D                     	ds	2
  1327   00003F                     dtoa@n:
  1328                           	callstack 0
  1329                           
  1330                           ; 8 bytes @ 0x3E
  1331   00003F                     	ds	6
  1332   000045                     utoa@i:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x44
  1336   000045                     	ds	2
  1337   000047                     dtoa@i:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x46
  1341   000047                     	ds	2
  1342   000049                     dtoa@s:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x48
  1346   000049                     	ds	1
  1347   00004A                     vfprintf@cfmt:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x49
  1351   00004A                     	ds	2
  1352   00004C                     
  1353                           ; 1 bytes @ 0x4B
  1354 ;;
  1355 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1356 ;;
  1357 ;; *************** function _main *****************
  1358 ;; Defined at:
  1359 ;;		line 65 in file "main.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  frequency       4   41[BANK0 ] unsigned long 
  1364 ;;  i               2   58[BANK0 ] unsigned short 
  1365 ;;  totPeriod       2   53[BANK0 ] unsigned short 
  1366 ;;  period          2   51[BANK0 ] unsigned short 
  1367 ;;  avgPeriod       2   49[BANK0 ] unsigned short 
  1368 ;;  j               1   57[BANK0 ] unsigned char 
  1369 ;;  sample          1   56[BANK0 ] unsigned char 
  1370 ;;  cmd             1   55[BANK0 ] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1380 ;;      Params:         0       0       0       0       0       0       0
  1381 ;;      Locals:         0      19       0       0       0       0       0
  1382 ;;      Temps:          0       4       0       0       0       0       0
  1383 ;;      Totals:         0      23       0       0       0       0       0
  1384 ;;Total ram usage:       23 bytes
  1385 ;; Hardware stack levels required when called: 13
  1386 ;; This function calls:
  1387 ;;		_EUSART1_Read
  1388 ;;		_EUSART1_is_rx_ready
  1389 ;;		_SYSTEM_Initialize
  1390 ;;		_TMR0_SetInterruptHandler
  1391 ;;		_TMR0_WriteTimer
  1392 ;;		___aldiv
  1393 ;;		___lmul
  1394 ;;		___lwdiv
  1395 ;;		___wmul
  1396 ;;		_printf
  1397 ;; This function is called by:
  1398 ;;		Startup code after reset
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text0
  1403   00002C                     __ptext0:
  1404                           	callstack 0
  1405   00002C                     _main:
  1406                           	callstack 18
  1407                           
  1408                           ;main.c: 73:     uint16_t avgPeriod = 0;
  1409                           
  1410                           ;incstack = 0
  1411   00002C  0E00               	movlw	0
  1412   00002E  0100               	movlb	0	; () banked
  1413   000030  6F92               	movwf	(main@avgPeriod+1)& (0+255),b
  1414   000032  0E00               	movlw	0
  1415   000034  6F91               	movwf	main@avgPeriod& (0+255),b
  1416                           
  1417                           ;main.c: 74:     uint16_t totPeriod = 0;
  1418   000036  0E00               	movlw	0
  1419   000038  6F96               	movwf	(main@totPeriod+1)& (0+255),b
  1420   00003A  0E00               	movlw	0
  1421   00003C  6F95               	movwf	main@totPeriod& (0+255),b
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;main.c: 75:     uint32_t frequency;;main.c: 77:     SYSTEM_Initialize();
  1425   00003E  EC1D  F00B         	call	_SYSTEM_Initialize	;wreg free
  1426                           
  1427                           ;main.c: 79:     TMR0_WriteTimer(0x0000);
  1428   000042  0E00               	movlw	0
  1429   000044  6E0B               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1430   000046  0E00               	movlw	0
  1431   000048  6E0A               	movwf	TMR0_WriteTimer@timerVal^0,c
  1432   00004A  EC59  F00B         	call	_TMR0_WriteTimer	;wreg free
  1433                           
  1434                           ;main.c: 80:     INTCONbits.TMR0IF = 0;
  1435   00004E  94F2               	bcf	242,2,c	;volatile
  1436   000050                     l294:
  1437   000050  A4F2               	btfss	242,2,c	;volatile
  1438   000052  D7FE               	goto	l294
  1439                           
  1440                           ;main.c: 83:     TMR0_SetInterruptHandler(sampleTMR0ISR);
  1441   000054  0E8E               	movlw	low _sampleTMR0ISR
  1442   000056  6E0A               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1443   000058  0E11               	movlw	high _sampleTMR0ISR
  1444   00005A  6E0B               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1445   00005C  EC5E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1446                           
  1447                           ;main.c: 84:     (INTCONbits.GIE = 1);
  1448   000060  8EF2               	bsf	242,7,c	;volatile
  1449                           
  1450                           ;main.c: 85:     (INTCONbits.PEIE = 1);
  1451   000062  8CF2               	bsf	242,6,c	;volatile
  1452                           
  1453                           ;main.c: 87:     printf("inLab 08\r\n");
  1454   000064  0ECB               	movlw	low STR_1
  1455   000066  0100               	movlb	0	; () banked
  1456   000068  6F7B               	movwf	printf@fmt& (0+255),b
  1457   00006A  0E7F               	movlw	high STR_1
  1458   00006C  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1459   00006E  ECF6  F00A         	call	_printf	;wreg free
  1460                           
  1461                           ;main.c: 88:     printf("Microphone experiments\r\n");
  1462   000072  0EF0               	movlw	low STR_2
  1463   000074  0100               	movlb	0	; () banked
  1464   000076  6F7B               	movwf	printf@fmt& (0+255),b
  1465   000078  0E7E               	movlw	high STR_2
  1466   00007A  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1467   00007C  ECF6  F00A         	call	_printf	;wreg free
  1468                           
  1469                           ;main.c: 89:     printf("Dev'21\r\n");
  1470   000080  0ED6               	movlw	low STR_3
  1471   000082  0100               	movlb	0	; () banked
  1472   000084  6F7B               	movwf	printf@fmt& (0+255),b
  1473   000086  0E7F               	movlw	high STR_3
  1474   000088  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1475   00008A  ECF6  F00A         	call	_printf	;wreg free
  1476                           
  1477                           ;main.c: 90:     printf("> ");
  1478   00008E  0EFB               	movlw	low STR_4
  1479   000090  0100               	movlb	0	; () banked
  1480   000092  6F7B               	movwf	printf@fmt& (0+255),b
  1481   000094  0E7F               	movlw	high STR_4
  1482   000096  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1483   000098  ECF6  F00A         	call	_printf	;wreg free
  1484   00009C                     l2937:
  1485                           
  1486                           ;main.c: 93:     {;main.c: 94:         if ((EUSART1_is_rx_ready()))
  1487   00009C  EC4E  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1488   0000A0  0900               	iorlw	0
  1489   0000A2  B4D8               	btfsc	status,2,c
  1490   0000A4  D7FB               	goto	l2937
  1491                           
  1492                           ;main.c: 95:         {;main.c: 96:             cmd = EUSART1_Read();
  1493   0000A6  EC35  F00B         	call	_EUSART1_Read	;wreg free
  1494   0000AA  0100               	movlb	0	; () banked
  1495   0000AC  6F97               	movwf	main@cmd& (0+255),b
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;main.c: 97:             printf("%c\n\r", cmd);
  1499   0000AE  0EF2               	movlw	low STR_5
  1500   0000B0  6F7B               	movwf	printf@fmt& (0+255),b
  1501   0000B2  0E7F               	movlw	high STR_5
  1502   0000B4  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1503   0000B6  C097  F07D         	movff	main@cmd,?_printf+2
  1504   0000BA  6B7E               	clrf	(?_printf+3)& (0+255),b
  1505   0000BC  ECF6  F00A         	call	_printf	;wreg free
  1506                           
  1507                           ;main.c: 98:             switch (cmd)
  1508   0000C0  D2ED               	goto	l3115
  1509   0000C2                     l2943:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 101:                     printf("------------------------------\r\n");
  1513   0000C2  0E31               	movlw	low STR_6
  1514   0000C4  6F7B               	movwf	printf@fmt& (0+255),b
  1515   0000C6  0E7E               	movlw	high STR_6
  1516   0000C8  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1517   0000CA  ECF6  F00A         	call	_printf	;wreg free
  1518                           
  1519                           ;main.c: 102:                     printf("?: Help menu\r\n");
  1520   0000CE  0E9F               	movlw	low STR_7
  1521   0000D0  0100               	movlb	0	; () banked
  1522   0000D2  6F7B               	movwf	printf@fmt& (0+255),b
  1523   0000D4  0E7F               	movlw	high STR_7
  1524   0000D6  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1525   0000D8  ECF6  F00A         	call	_printf	;wreg free
  1526                           
  1527                           ;main.c: 103:                     printf("o: k\r\n");
  1528   0000DC  0EDF               	movlw	low STR_8
  1529   0000DE  0100               	movlb	0	; () banked
  1530   0000E0  6F7B               	movwf	printf@fmt& (0+255),b
  1531   0000E2  0E7F               	movlw	high STR_8
  1532   0000E4  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1533   0000E6  ECF6  F00A         	call	_printf	;wreg free
  1534                           
  1535                           ;main.c: 104:                     printf("Z: Reset processor\r\n");
  1536   0000EA  0E4F               	movlw	low STR_9
  1537   0000EC  0100               	movlb	0	; () banked
  1538   0000EE  6F7B               	movwf	printf@fmt& (0+255),b
  1539   0000F0  0E7F               	movlw	high STR_9
  1540   0000F2  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1541   0000F4  ECF6  F00A         	call	_printf	;wreg free
  1542                           
  1543                           ;main.c: 105:                     printf("z: Clear the terminal\r\n");
  1544   0000F8  0E09               	movlw	low STR_10
  1545   0000FA  0100               	movlb	0	; () banked
  1546   0000FC  6F7B               	movwf	printf@fmt& (0+255),b
  1547   0000FE  0E7F               	movlw	high STR_10
  1548   000100  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1549   000102  ECF6  F00A         	call	_printf	;wreg free
  1550                           
  1551                           ;main.c: 106:                     printf("T: increase sampling threshold\n\r");
  1552   000106  0E94               	movlw	low STR_11
  1553   000108  0100               	movlb	0	; () banked
  1554   00010A  6F7B               	movwf	printf@fmt& (0+255),b
  1555   00010C  0E7E               	movlw	high STR_11
  1556   00010E  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1557   000110  ECF6  F00A         	call	_printf	;wreg free
  1558                           
  1559                           ;main.c: 107:                     printf("t: decrease sampling threshold\n\r");
  1560   000114  0E73               	movlw	low STR_12
  1561   000116  0100               	movlb	0	; () banked
  1562   000118  6F7B               	movwf	printf@fmt& (0+255),b
  1563   00011A  0E7E               	movlw	high STR_12
  1564   00011C  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1565   00011E  ECF6  F00A         	call	_printf	;wreg free
  1566                           
  1567                           ;main.c: 108:                     printf("f: compute the period from %d samples from ADC
      +                          \r\n", 512);
  1568   000122  0EDB               	movlw	low STR_13
  1569   000124  0100               	movlb	0	; () banked
  1570   000126  6F7B               	movwf	printf@fmt& (0+255),b
  1571   000128  0E7D               	movlw	high STR_13
  1572   00012A  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1573   00012C  0E02               	movlw	2
  1574   00012E  6F7E               	movwf	(?_printf+3)& (0+255),b
  1575   000130  0E00               	movlw	0
  1576   000132  6F7D               	movwf	(?_printf+2)& (0+255),b
  1577   000134  ECF6  F00A         	call	_printf	;wreg free
  1578                           
  1579                           ;main.c: 109:                     printf("s: gather %d samples from ADC\r\n", 512);
  1580   000138  0EB5               	movlw	low STR_14
  1581   00013A  0100               	movlb	0	; () banked
  1582   00013C  6F7B               	movwf	printf@fmt& (0+255),b
  1583   00013E  0E7E               	movlw	high STR_14
  1584   000140  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1585   000142  0E02               	movlw	2
  1586   000144  6F7E               	movwf	(?_printf+3)& (0+255),b
  1587   000146  0E00               	movlw	0
  1588   000148  6F7D               	movwf	(?_printf+2)& (0+255),b
  1589   00014A  ECF6  F00A         	call	_printf	;wreg free
  1590                           
  1591                           ;main.c: 110:                     printf("0-9: switch sampled channel to ANx\r\n");
  1592   00014E  0E0C               	movlw	low STR_15
  1593   000150  0100               	movlb	0	; () banked
  1594   000152  6F7B               	movwf	printf@fmt& (0+255),b
  1595   000154  0E7E               	movlw	high STR_15
  1596   000156  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1597   000158  ECF6  F00A         	call	_printf	;wreg free
  1598                           
  1599                           ;main.c: 111:                     printf("------------------------------\r\n");
  1600   00015C  0E31               	movlw	low STR_6
  1601   00015E  0100               	movlb	0	; () banked
  1602   000160  6F7B               	movwf	printf@fmt& (0+255),b
  1603   000162  0E7E               	movlw	high STR_6
  1604   000164  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1605   000166  ECF6  F00A         	call	_printf	;wreg free
  1606                           
  1607                           ;main.c: 112:                     break;
  1608   00016A  D2BA               	goto	l3117
  1609   00016C                     l2945:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;main.c: 114:                     printf(" k\r\n");
  1613   00016C  0EE1               	movlw	low (STR_8+2)
  1614   00016E  6F7B               	movwf	printf@fmt& (0+255),b
  1615   000170  0E7F               	movlw	high (STR_8+2)
  1616   000172  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1617   000174  ECF6  F00A         	call	_printf	;wreg free
  1618                           
  1619                           ;main.c: 115:                     break;
  1620   000178  D2B3               	goto	l3117
  1621   00017A                     l2947:
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;main.c: 117:                     for (i = 0; i < 40; i++) printf("\n\r");
  1625   00017A  0E00               	movlw	0
  1626   00017C  6F9B               	movwf	(main@i+1)& (0+255),b
  1627   00017E  0E00               	movlw	0
  1628   000180  6F9A               	movwf	main@i& (0+255),b
  1629   000182                     l2953:
  1630                           
  1631                           ; BSR set to: 0
  1632   000182  0EEF               	movlw	low (STR_37+2)
  1633   000184  6F7B               	movwf	printf@fmt& (0+255),b
  1634   000186  0E7F               	movlw	high (STR_37+2)
  1635   000188  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1636   00018A  ECF6  F00A         	call	_printf	;wreg free
  1637   00018E  0100               	movlb	0	; () banked
  1638   000190  4B9A               	infsnz	main@i& (0+255),f,b
  1639   000192  2B9B               	incf	(main@i+1)& (0+255),f,b
  1640                           
  1641                           ; BSR set to: 0
  1642   000194  519B               	movf	(main@i+1)& (0+255),w,b
  1643   000196  E104               	bnz	u1960
  1644   000198  0E28               	movlw	40
  1645   00019A  5D9A               	subwf	main@i& (0+255),w,b
  1646   00019C  A0D8               	btfss	status,0,c
  1647   00019E  D7F1               	goto	l2953
  1648   0001A0                     u1960:
  1649                           
  1650                           ; BSR set to: 0
  1651   0001A0  00FF               	reset		;# 
  1652                           
  1653                           ;main.c: 119:                     break;
  1654   0001A2  D29E               	goto	l3117
  1655   0001A4                     l2959:
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;main.c: 121:                     for (i = 0; i < 40; i++) printf("\n\r");
  1659   0001A4  0E00               	movlw	0
  1660   0001A6  6F9B               	movwf	(main@i+1)& (0+255),b
  1661   0001A8  0E00               	movlw	0
  1662   0001AA  6F9A               	movwf	main@i& (0+255),b
  1663   0001AC                     l2965:
  1664                           
  1665                           ; BSR set to: 0
  1666   0001AC  0EEF               	movlw	low (STR_37+2)
  1667   0001AE  6F7B               	movwf	printf@fmt& (0+255),b
  1668   0001B0  0E7F               	movlw	high (STR_37+2)
  1669   0001B2  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1670   0001B4  ECF6  F00A         	call	_printf	;wreg free
  1671   0001B8  0100               	movlb	0	; () banked
  1672   0001BA  4B9A               	infsnz	main@i& (0+255),f,b
  1673   0001BC  2B9B               	incf	(main@i+1)& (0+255),f,b
  1674                           
  1675                           ; BSR set to: 0
  1676   0001BE  519B               	movf	(main@i+1)& (0+255),w,b
  1677   0001C0  E105               	bnz	u1970
  1678   0001C2  0E28               	movlw	40
  1679   0001C4  5D9A               	subwf	main@i& (0+255),w,b
  1680   0001C6  B0D8               	btfsc	status,0,c
  1681   0001C8  D28B               	goto	l3117
  1682   0001CA  D7F0               	goto	l2965
  1683   0001CC                     u1970:
  1684   0001CC  D289               	goto	l3117
  1685   0001CE                     l2971:
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;main.c: 124:                     threshold += 5;
  1689   0001CE  0E05               	movlw	5
  1690   0001D0  27C9               	addwf	_threshold& (0+255),f,b
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;main.c: 125:                     printf("upper trigger: %u\n\r", (128 + threshold));
  1694   0001D2  0E64               	movlw	low STR_20
  1695   0001D4  6F7B               	movwf	printf@fmt& (0+255),b
  1696   0001D6  0E7F               	movlw	high STR_20
  1697   0001D8  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1698   0001DA  0E80               	movlw	128
  1699   0001DC  25C9               	addwf	_threshold& (0+255),w,b
  1700   0001DE  6F7D               	movwf	(?_printf+2)& (0+255),b
  1701   0001E0  6B7E               	clrf	(?_printf+3)& (0+255),b
  1702   0001E2  0E00               	movlw	0
  1703   0001E4  237E               	addwfc	(?_printf+3)& (0+255),f,b
  1704   0001E6  ECF6  F00A         	call	_printf	;wreg free
  1705                           
  1706                           ;main.c: 126:                     printf("lower trigger: %u\n\r", (128 - threshold));
  1707   0001EA  0E78               	movlw	low STR_21
  1708   0001EC  0100               	movlb	0	; () banked
  1709   0001EE  6F7B               	movwf	printf@fmt& (0+255),b
  1710   0001F0  0E7F               	movlw	high STR_21
  1711   0001F2  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1712   0001F4  51C9               	movf	_threshold& (0+255),w,b
  1713   0001F6  0880               	sublw	128
  1714   0001F8  6F7D               	movwf	(?_printf+2)& (0+255),b
  1715   0001FA  0E00               	movlw	0
  1716   0001FC  A0D8               	btfss	status,0,c
  1717   0001FE  2AE8               	incf	wreg,f,c
  1718   000200  0800               	sublw	0
  1719   000202  6F7E               	movwf	(?_printf+3)& (0+255),b
  1720   000204  ECF6  F00A         	call	_printf	;wreg free
  1721                           
  1722                           ;main.c: 127:                     break;
  1723   000208  D26B               	goto	l3117
  1724   00020A                     l2977:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;main.c: 129:                     threshold -= 5;
  1728   00020A  0E05               	movlw	5
  1729   00020C  5FC9               	subwf	_threshold& (0+255),f,b
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;main.c: 130:                     printf("upper trigger: %u\n\r", (128 + threshold));
  1733   00020E  0E64               	movlw	low STR_20
  1734   000210  6F7B               	movwf	printf@fmt& (0+255),b
  1735   000212  0E7F               	movlw	high STR_20
  1736   000214  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1737   000216  0E80               	movlw	128
  1738   000218  25C9               	addwf	_threshold& (0+255),w,b
  1739   00021A  6F7D               	movwf	(?_printf+2)& (0+255),b
  1740   00021C  6B7E               	clrf	(?_printf+3)& (0+255),b
  1741   00021E  0E00               	movlw	0
  1742   000220  237E               	addwfc	(?_printf+3)& (0+255),f,b
  1743   000222  ECF6  F00A         	call	_printf	;wreg free
  1744                           
  1745                           ;main.c: 131:                     printf("lower trigger: %u\n\r", (128 - threshold));
  1746   000226  0E78               	movlw	low STR_21
  1747   000228  0100               	movlb	0	; () banked
  1748   00022A  6F7B               	movwf	printf@fmt& (0+255),b
  1749   00022C  0E7F               	movlw	high STR_21
  1750   00022E  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1751   000230  51C9               	movf	_threshold& (0+255),w,b
  1752   000232  0880               	sublw	128
  1753   000234  6F7D               	movwf	(?_printf+2)& (0+255),b
  1754   000236  0E00               	movlw	0
  1755   000238  A0D8               	btfss	status,0,c
  1756   00023A  2AE8               	incf	wreg,f,c
  1757   00023C  0800               	sublw	0
  1758   00023E  6F7E               	movwf	(?_printf+3)& (0+255),b
  1759   000240  ECF6  F00A         	call	_printf	;wreg free
  1760                           
  1761                           ;main.c: 132:                     break;
  1762   000244  D24D               	goto	l3117
  1763   000246                     l2983:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;main.c: 135:                     {;main.c: 136:                         printf("taking 
      +                          samples: \n\r");
  1767   000246  0E8C               	movlw	low STR_24
  1768   000248  6F7B               	movwf	printf@fmt& (0+255),b
  1769   00024A  0E7F               	movlw	high STR_24
  1770   00024C  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1771   00024E  ECF6  F00A         	call	_printf	;wreg free
  1772                           
  1773                           ;main.c: 137:                         sampling = 1;
  1774   000252  0E01               	movlw	1
  1775   000254  6E53               	movwf	_sampling^0,c
  1776                           
  1777                           ;main.c: 138:                         for(i = 0; i < 512; i++)
  1778   000256  0E00               	movlw	0
  1779   000258  0100               	movlb	0	; () banked
  1780   00025A  6F9B               	movwf	(main@i+1)& (0+255),b
  1781   00025C  0E00               	movlw	0
  1782   00025E  6F9A               	movwf	main@i& (0+255),b
  1783   000260                     l2993:
  1784                           
  1785                           ; BSR set to: 0
  1786   000260  51A7               	movf	_sampled& (0+255),w,b
  1787   000262  B4D8               	btfsc	status,2,c
  1788   000264  D7FD               	goto	l2993
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 141:                             samples[i] = ADRESH;
  1792   000266  0ECA               	movlw	low _samples
  1793   000268  259A               	addwf	main@i& (0+255),w,b
  1794   00026A  6ED9               	movwf	fsr2l,c
  1795   00026C  0E02               	movlw	high _samples
  1796   00026E  219B               	addwfc	(main@i+1)& (0+255),w,b
  1797   000270  6EDA               	movwf	fsr2h,c
  1798   000272  CFC4 FFDF          	movff	4036,indf2	;volatile
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;main.c: 142:                             sampled = 0;
  1802   000276  0E00               	movlw	0
  1803   000278  6FA7               	movwf	_sampled& (0+255),b
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;main.c: 144:                         }
  1807   00027A  4B9A               	infsnz	main@i& (0+255),f,b
  1808   00027C  2B9B               	incf	(main@i+1)& (0+255),f,b
  1809                           
  1810                           ; BSR set to: 0
  1811   00027E  0E02               	movlw	2
  1812   000280  5D9B               	subwf	(main@i+1)& (0+255),w,b
  1813   000282  A0D8               	btfss	status,0,c
  1814   000284  D7ED               	goto	l2993
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;main.c: 145:                         sampling = 0;
  1818   000286  0E00               	movlw	0
  1819   000288  6E53               	movwf	_sampling^0,c
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;main.c: 147:                     };main.c: 149:                     {;main.c: 150:     
      +                                              printf("finding crossings: \n\r");
  1823   00028A  0E39               	movlw	low STR_25
  1824   00028C  6F7B               	movwf	printf@fmt& (0+255),b
  1825   00028E  0E7F               	movlw	high STR_25
  1826   000290  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1827   000292  ECF6  F00A         	call	_printf	;wreg free
  1828                           
  1829                           ;main.c: 151:                         ci = 0;
  1830   000296  0E00               	movlw	0
  1831   000298  0100               	movlb	0	; () banked
  1832   00029A  6FA8               	movwf	_ci& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;main.c: 152:                         for(i = 1; i < 512; i++)
  1836   00029C  0E00               	movlw	0
  1837   00029E  6F9B               	movwf	(main@i+1)& (0+255),b
  1838   0002A0  0E01               	movlw	1
  1839   0002A2  6F9A               	movwf	main@i& (0+255),b
  1840   0002A4                     l3015:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;main.c: 153:                         {;main.c: 154:                             if((sam
      +                          ples[i-1] <= 128) && (samples[i] > 128))
  1844   0002A4  0EC9               	movlw	low (_samples+65535)
  1845   0002A6  259A               	addwf	main@i& (0+255),w,b
  1846   0002A8  6ED9               	movwf	fsr2l,c
  1847   0002AA  0E02               	movlw	high (_samples+65535)
  1848   0002AC  219B               	addwfc	(main@i+1)& (0+255),w,b
  1849   0002AE  6EDA               	movwf	fsr2h,c
  1850   0002B0  0E81               	movlw	129
  1851   0002B2  60DF               	cpfslt	indf2,c
  1852   0002B4  D016               	goto	l3023
  1853                           
  1854                           ; BSR set to: 0
  1855   0002B6  0ECA               	movlw	low _samples
  1856   0002B8  259A               	addwf	main@i& (0+255),w,b
  1857   0002BA  6ED9               	movwf	fsr2l,c
  1858   0002BC  0E02               	movlw	high _samples
  1859   0002BE  219B               	addwfc	(main@i+1)& (0+255),w,b
  1860   0002C0  6EDA               	movwf	fsr2h,c
  1861   0002C2  0E80               	movlw	128
  1862   0002C4  64DF               	cpfsgt	indf2,c
  1863   0002C6  D00D               	goto	l3023
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 155:                             {;main.c: 157:                                
      +                           crossings[ci] = i;
  1867   0002C8  51A8               	movf	_ci& (0+255),w,b
  1868   0002CA  0D02               	mullw	2
  1869   0002CC  0ECA               	movlw	low _crossings
  1870   0002CE  24F3               	addwf	243,w,c
  1871   0002D0  6ED9               	movwf	fsr2l,c
  1872   0002D2  0E00               	movlw	high _crossings
  1873   0002D4  20F4               	addwfc	prodh,w,c
  1874   0002D6  6EDA               	movwf	fsr2h,c
  1875   0002D8  C09A  FFDE         	movff	main@i,postinc2
  1876   0002DC  C09B  FFDD         	movff	main@i+1,postdec2
  1877                           
  1878                           ; BSR set to: 0
  1879                           ;main.c: 158:                                 ci++;
  1880   0002E0  2BA8               	incf	_ci& (0+255),f,b
  1881   0002E2                     l3023:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;main.c: 160:                         }
  1885   0002E2  4B9A               	infsnz	main@i& (0+255),f,b
  1886   0002E4  2B9B               	incf	(main@i+1)& (0+255),f,b
  1887                           
  1888                           ; BSR set to: 0
  1889   0002E6  0E02               	movlw	2
  1890   0002E8  5D9B               	subwf	(main@i+1)& (0+255),w,b
  1891   0002EA  A0D8               	btfss	status,0,c
  1892   0002EC  D7DB               	goto	l3015
  1893                           
  1894                           ; BSR set to: 0
  1895                           ;main.c: 161:                     };main.c: 163:                     {;main.c: 164:     
      +                                              printf("The last 256 ADC samples from the microphone are:\n\r");
  1896   0002EE  0E73               	movlw	low STR_26
  1897   0002F0  6F7B               	movwf	printf@fmt& (0+255),b
  1898   0002F2  0E7D               	movlw	high STR_26
  1899   0002F4  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1900   0002F6  ECF6  F00A         	call	_printf	;wreg free
  1901                           
  1902                           ;main.c: 165:                         for(i = 0; i < 512/16; i++)
  1903   0002FA  0E00               	movlw	0
  1904   0002FC  0100               	movlb	0	; () banked
  1905   0002FE  6F9B               	movwf	(main@i+1)& (0+255),b
  1906   000300  0E00               	movlw	0
  1907   000302  6F9A               	movwf	main@i& (0+255),b
  1908   000304                     l3035:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;main.c: 166:                         {;main.c: 167:                             printf(
      +                          "S[%u] ", i * 16);
  1912   000304  0EE6               	movlw	low STR_27
  1913   000306  6F7B               	movwf	printf@fmt& (0+255),b
  1914   000308  0E7F               	movlw	high STR_27
  1915   00030A  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1916   00030C  C09A  F085         	movff	main@i,??_main
  1917   000310  C09B  F086         	movff	main@i+1,??_main+1
  1918   000314  3B85               	swapf	??_main& (0+255),f,b
  1919   000316  3B86               	swapf	(??_main+1)& (0+255),f,b
  1920   000318  0EF0               	movlw	240
  1921   00031A  1786               	andwf	(??_main+1)& (0+255),f,b
  1922   00031C  5185               	movf	??_main& (0+255),w,b
  1923   00031E  0B0F               	andlw	15
  1924   000320  1386               	iorwf	(??_main+1)& (0+255),f,b
  1925   000322  0EF0               	movlw	240
  1926   000324  1785               	andwf	??_main& (0+255),f,b
  1927   000326  C085  F07D         	movff	??_main,?_printf+2
  1928   00032A  C086  F07E         	movff	??_main+1,?_printf+3
  1929   00032E  ECF6  F00A         	call	_printf	;wreg free
  1930                           
  1931                           ;main.c: 168:                             if(i*16 < 100) printf(" "); if(i*16 < 10) prin
      +                          tf(" ");
  1932   000332  C09A  F085         	movff	main@i,??_main
  1933   000336  C09B  F086         	movff	main@i+1,??_main+1
  1934   00033A  0100               	movlb	0	; () banked
  1935   00033C  3B85               	swapf	??_main& (0+255),f,b
  1936   00033E  3B86               	swapf	(??_main+1)& (0+255),f,b
  1937   000340  0EF0               	movlw	240
  1938   000342  1786               	andwf	(??_main+1)& (0+255),f,b
  1939   000344  5185               	movf	??_main& (0+255),w,b
  1940   000346  0B0F               	andlw	15
  1941   000348  1386               	iorwf	(??_main+1)& (0+255),f,b
  1942   00034A  0EF0               	movlw	240
  1943   00034C  1785               	andwf	??_main& (0+255),f,b
  1944   00034E  5186               	movf	(??_main+1)& (0+255),w,b
  1945   000350  E10A               	bnz	l3041
  1946   000352  0E64               	movlw	100
  1947   000354  5D85               	subwf	??_main& (0+255),w,b
  1948   000356  B0D8               	btfsc	status,0,c
  1949   000358  D006               	goto	l3041
  1950                           
  1951                           ; BSR set to: 0
  1952   00035A  0EFC               	movlw	low (STR_4+1)
  1953   00035C  6F7B               	movwf	printf@fmt& (0+255),b
  1954   00035E  0E7F               	movlw	high (STR_4+1)
  1955   000360  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1956   000362  ECF6  F00A         	call	_printf	;wreg free
  1957   000366                     l3041:
  1958   000366  C09A  F085         	movff	main@i,??_main
  1959   00036A  C09B  F086         	movff	main@i+1,??_main+1
  1960   00036E  0100               	movlb	0	; () banked
  1961   000370  3B85               	swapf	??_main& (0+255),f,b
  1962   000372  3B86               	swapf	(??_main+1)& (0+255),f,b
  1963   000374  0EF0               	movlw	240
  1964   000376  1786               	andwf	(??_main+1)& (0+255),f,b
  1965   000378  5185               	movf	??_main& (0+255),w,b
  1966   00037A  0B0F               	andlw	15
  1967   00037C  1386               	iorwf	(??_main+1)& (0+255),f,b
  1968   00037E  0EF0               	movlw	240
  1969   000380  1785               	andwf	??_main& (0+255),f,b
  1970   000382  5186               	movf	(??_main+1)& (0+255),w,b
  1971   000384  E10A               	bnz	l3045
  1972   000386  0E0A               	movlw	10
  1973   000388  5D85               	subwf	??_main& (0+255),w,b
  1974   00038A  B0D8               	btfsc	status,0,c
  1975   00038C  D006               	goto	l3045
  1976                           
  1977                           ; BSR set to: 0
  1978   00038E  0EFC               	movlw	low (STR_4+1)
  1979   000390  6F7B               	movwf	printf@fmt& (0+255),b
  1980   000392  0E7F               	movlw	high (STR_4+1)
  1981   000394  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  1982   000396  ECF6  F00A         	call	_printf	;wreg free
  1983   00039A                     l3045:
  1984                           
  1985                           ;main.c: 169:                             for(j = 0; j < 16; j++)
  1986   00039A  0E00               	movlw	0
  1987   00039C  0100               	movlb	0	; () banked
  1988   00039E  6F99               	movwf	main@j& (0+255),b
  1989   0003A0                     l3051:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;main.c: 170:                             {;main.c: 171:                                
      +                           sample = samples[(i * 16) + j];
  1993   0003A0  C09A  F085         	movff	main@i,??_main
  1994   0003A4  C09B  F086         	movff	main@i+1,??_main+1
  1995   0003A8  3B85               	swapf	??_main& (0+255),f,b
  1996   0003AA  3B86               	swapf	(??_main+1)& (0+255),f,b
  1997   0003AC  0EF0               	movlw	240
  1998   0003AE  1786               	andwf	(??_main+1)& (0+255),f,b
  1999   0003B0  5185               	movf	??_main& (0+255),w,b
  2000   0003B2  0B0F               	andlw	15
  2001   0003B4  1386               	iorwf	(??_main+1)& (0+255),f,b
  2002   0003B6  0EF0               	movlw	240
  2003   0003B8  1785               	andwf	??_main& (0+255),f,b
  2004   0003BA  0ECA               	movlw	low _samples
  2005   0003BC  2585               	addwf	??_main& (0+255),w,b
  2006   0003BE  6F87               	movwf	(??_main+2)& (0+255),b
  2007   0003C0  0E02               	movlw	high _samples
  2008   0003C2  2186               	addwfc	(??_main+1)& (0+255),w,b
  2009   0003C4  6F88               	movwf	(??_main+3)& (0+255),b
  2010   0003C6  5199               	movf	main@j& (0+255),w,b
  2011   0003C8  2587               	addwf	(??_main+2)& (0+255),w,b
  2012   0003CA  6ED9               	movwf	fsr2l,c
  2013   0003CC  0E00               	movlw	0
  2014   0003CE  2188               	addwfc	(??_main+3)& (0+255),w,b
  2015   0003D0  6EDA               	movwf	fsr2h,c
  2016   0003D2  50DF               	movf	indf2,w,c
  2017   0003D4  6F98               	movwf	main@sample& (0+255),b
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;main.c: 172:                                 printf("%u ", sample);
  2021   0003D6  0EF7               	movlw	low STR_30
  2022   0003D8  6F7B               	movwf	printf@fmt& (0+255),b
  2023   0003DA  0E7F               	movlw	high STR_30
  2024   0003DC  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2025   0003DE  C098  F07D         	movff	main@sample,?_printf+2
  2026   0003E2  6B7E               	clrf	(?_printf+3)& (0+255),b
  2027   0003E4  ECF6  F00A         	call	_printf	;wreg free
  2028                           
  2029                           ;main.c: 173:                                 if(sample < 100) printf(" "); if(sample < 
      +                          10) printf(" ");
  2030   0003E8  0E64               	movlw	100
  2031   0003EA  0100               	movlb	0	; () banked
  2032   0003EC  6198               	cpfslt	main@sample& (0+255),b
  2033   0003EE  D006               	goto	l3059
  2034                           
  2035                           ; BSR set to: 0
  2036   0003F0  0EFC               	movlw	low (STR_4+1)
  2037   0003F2  6F7B               	movwf	printf@fmt& (0+255),b
  2038   0003F4  0E7F               	movlw	high (STR_4+1)
  2039   0003F6  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2040   0003F8  ECF6  F00A         	call	_printf	;wreg free
  2041   0003FC                     l3059:
  2042   0003FC  0E0A               	movlw	10
  2043   0003FE  0100               	movlb	0	; () banked
  2044   000400  6198               	cpfslt	main@sample& (0+255),b
  2045   000402  D006               	goto	l3063
  2046                           
  2047                           ; BSR set to: 0
  2048   000404  0EFC               	movlw	low (STR_4+1)
  2049   000406  6F7B               	movwf	printf@fmt& (0+255),b
  2050   000408  0E7F               	movlw	high (STR_4+1)
  2051   00040A  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2052   00040C  ECF6  F00A         	call	_printf	;wreg free
  2053   000410                     l3063:
  2054                           
  2055                           ;main.c: 174:                             }
  2056   000410  0100               	movlb	0	; () banked
  2057   000412  2B99               	incf	main@j& (0+255),f,b
  2058                           
  2059                           ; BSR set to: 0
  2060   000414  0E0F               	movlw	15
  2061   000416  6599               	cpfsgt	main@j& (0+255),b
  2062   000418  D7C3               	goto	l3051
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;main.c: 175:                             printf("\n\r");
  2066   00041A  0EEF               	movlw	low (STR_37+2)
  2067   00041C  6F7B               	movwf	printf@fmt& (0+255),b
  2068   00041E  0E7F               	movlw	high (STR_37+2)
  2069   000420  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2070   000422  ECF6  F00A         	call	_printf	;wreg free
  2071                           
  2072                           ;main.c: 176:                         }
  2073   000426  0100               	movlb	0	; () banked
  2074   000428  4B9A               	infsnz	main@i& (0+255),f,b
  2075   00042A  2B9B               	incf	(main@i+1)& (0+255),f,b
  2076                           
  2077                           ; BSR set to: 0
  2078   00042C  519B               	movf	(main@i+1)& (0+255),w,b
  2079   00042E  E104               	bnz	u2080
  2080   000430  0E20               	movlw	32
  2081   000432  5D9A               	subwf	main@i& (0+255),w,b
  2082   000434  A0D8               	btfss	status,0,c
  2083   000436  D766               	goto	l3035
  2084   000438                     u2080:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;main.c: 177:                         printf("\n\r");
  2088   000438  0EEF               	movlw	low (STR_37+2)
  2089   00043A  6F7B               	movwf	printf@fmt& (0+255),b
  2090   00043C  0E7F               	movlw	high (STR_37+2)
  2091   00043E  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2092   000440  ECF6  F00A         	call	_printf	;wreg free
  2093                           
  2094                           ;main.c: 178:                     };main.c: 180:                     {;main.c: 181:     
      +                                              printf("The sound wave crossed at the following indicies:\n\r");
  2095   000444  0EA7               	movlw	low STR_35
  2096   000446  0100               	movlb	0	; () banked
  2097   000448  6F7B               	movwf	printf@fmt& (0+255),b
  2098   00044A  0E7D               	movlw	high STR_35
  2099   00044C  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2100   00044E  ECF6  F00A         	call	_printf	;wreg free
  2101                           
  2102                           ;main.c: 182:                         for(i = 0; i < ci; i++)
  2103   000452  0E00               	movlw	0
  2104   000454  0100               	movlb	0	; () banked
  2105   000456  6F9B               	movwf	(main@i+1)& (0+255),b
  2106   000458  0E00               	movlw	0
  2107   00045A  6F9A               	movwf	main@i& (0+255),b
  2108   00045C  D016               	goto	l3081
  2109   00045E                     l3077:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 183:                         {;main.c: 184:                             printf(
      +                          "%u ", crossings[i]);
  2113   00045E  0EF7               	movlw	low STR_30
  2114   000460  6F7B               	movwf	printf@fmt& (0+255),b
  2115   000462  0E7F               	movlw	high STR_30
  2116   000464  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2117   000466  90D8               	bcf	status,0,c
  2118   000468  359A               	rlcf	main@i& (0+255),w,b
  2119   00046A  6ED9               	movwf	fsr2l,c
  2120   00046C  359B               	rlcf	(main@i+1)& (0+255),w,b
  2121   00046E  6EDA               	movwf	fsr2h,c
  2122   000470  0ECA               	movlw	low _crossings
  2123   000472  26D9               	addwf	fsr2l,f,c
  2124   000474  0E00               	movlw	high _crossings
  2125   000476  22DA               	addwfc	fsr2h,f,c
  2126   000478  CFDE F07D          	movff	postinc2,?_printf+2
  2127   00047C  CFDD F07E          	movff	postdec2,?_printf+3
  2128   000480  ECF6  F00A         	call	_printf	;wreg free
  2129                           
  2130                           ;main.c: 185:                         }
  2131   000484  0100               	movlb	0	; () banked
  2132   000486  4B9A               	infsnz	main@i& (0+255),f,b
  2133   000488  2B9B               	incf	(main@i+1)& (0+255),f,b
  2134   00048A                     l3081:
  2135                           
  2136                           ; BSR set to: 0
  2137   00048A  51A8               	movf	_ci& (0+255),w,b
  2138   00048C  6F85               	movwf	??_main& (0+255),b
  2139   00048E  6B86               	clrf	(??_main+1)& (0+255),b
  2140   000490  5185               	movf	??_main& (0+255),w,b
  2141   000492  5D9A               	subwf	main@i& (0+255),w,b
  2142   000494  5186               	movf	(??_main+1)& (0+255),w,b
  2143   000496  599B               	subwfb	(main@i+1)& (0+255),w,b
  2144   000498  A0D8               	btfss	status,0,c
  2145   00049A  D7E1               	goto	l3077
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;main.c: 186:                         printf("\n\r\n\r");
  2149   00049C  0EED               	movlw	low STR_37
  2150   00049E  6F7B               	movwf	printf@fmt& (0+255),b
  2151   0004A0  0E7F               	movlw	high STR_37
  2152   0004A2  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2153   0004A4  ECF6  F00A         	call	_printf	;wreg free
  2154                           
  2155                           ;main.c: 187:                     };main.c: 189:                     {;main.c: 190:     
      +                                              printf("The sound wave had %u periods:\n\r", ci);
  2156   0004A8  0E52               	movlw	low STR_38
  2157   0004AA  0100               	movlb	0	; () banked
  2158   0004AC  6F7B               	movwf	printf@fmt& (0+255),b
  2159   0004AE  0E7E               	movlw	high STR_38
  2160   0004B0  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2161   0004B2  C0A8  F07D         	movff	_ci,?_printf+2
  2162   0004B6  6B7E               	clrf	(?_printf+3)& (0+255),b
  2163   0004B8  ECF6  F00A         	call	_printf	;wreg free
  2164                           
  2165                           ;main.c: 191:                         totPeriod = 0;
  2166   0004BC  0E00               	movlw	0
  2167   0004BE  0100               	movlb	0	; () banked
  2168   0004C0  6F96               	movwf	(main@totPeriod+1)& (0+255),b
  2169   0004C2  0E00               	movlw	0
  2170   0004C4  6F95               	movwf	main@totPeriod& (0+255),b
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;main.c: 192:                         for(i = 1; i < ci; i++)
  2174   0004C6  0E00               	movlw	0
  2175   0004C8  6F9B               	movwf	(main@i+1)& (0+255),b
  2176   0004CA  0E01               	movlw	1
  2177   0004CC  6F9A               	movwf	main@i& (0+255),b
  2178   0004CE  D04B               	goto	l3097
  2179   0004D0                     l3089:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;main.c: 193:                         {;main.c: 194:                             period 
      +                          = crossings[i] - crossings[i-1];
  2183   0004D0  90D8               	bcf	status,0,c
  2184   0004D2  359A               	rlcf	main@i& (0+255),w,b
  2185   0004D4  6ED9               	movwf	fsr2l,c
  2186   0004D6  359B               	rlcf	(main@i+1)& (0+255),w,b
  2187   0004D8  6EDA               	movwf	fsr2h,c
  2188   0004DA  0EC8               	movlw	low (_crossings+65534)
  2189   0004DC  26D9               	addwf	fsr2l,f,c
  2190   0004DE  0E00               	movlw	high (_crossings+65534)
  2191   0004E0  22DA               	addwfc	fsr2h,f,c
  2192   0004E2  CFDE F085          	movff	postinc2,??_main
  2193   0004E6  CFDD F086          	movff	postdec2,??_main+1
  2194   0004EA  90D8               	bcf	status,0,c
  2195   0004EC  359A               	rlcf	main@i& (0+255),w,b
  2196   0004EE  6ED9               	movwf	fsr2l,c
  2197   0004F0  359B               	rlcf	(main@i+1)& (0+255),w,b
  2198   0004F2  6EDA               	movwf	fsr2h,c
  2199   0004F4  0ECA               	movlw	low _crossings
  2200   0004F6  26D9               	addwf	fsr2l,f,c
  2201   0004F8  0E00               	movlw	high _crossings
  2202   0004FA  22DA               	addwfc	fsr2h,f,c
  2203   0004FC  CFDE F087          	movff	postinc2,??_main+2
  2204   000500  CFDD F088          	movff	postdec2,??_main+3
  2205   000504  5185               	movf	??_main& (0+255),w,b
  2206   000506  5D87               	subwf	(??_main+2)& (0+255),w,b
  2207   000508  6F93               	movwf	main@period& (0+255),b
  2208   00050A  5186               	movf	(??_main+1)& (0+255),w,b
  2209   00050C  5988               	subwfb	(??_main+3)& (0+255),w,b
  2210   00050E  6F94               	movwf	(main@period+1)& (0+255),b
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;main.c: 195:                             totPeriod += period;
  2214   000510  5193               	movf	main@period& (0+255),w,b
  2215   000512  2795               	addwf	main@totPeriod& (0+255),f,b
  2216   000514  5194               	movf	(main@period+1)& (0+255),w,b
  2217   000516  2396               	addwfc	(main@totPeriod+1)& (0+255),f,b
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;main.c: 196:                             printf("%u - %u = %u\n\r", crossings[i], cross
      +                          ings[i-1], period);
  2221   000518  0EAE               	movlw	low STR_39
  2222   00051A  6F7B               	movwf	printf@fmt& (0+255),b
  2223   00051C  0E7F               	movlw	high STR_39
  2224   00051E  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2225   000520  90D8               	bcf	status,0,c
  2226   000522  359A               	rlcf	main@i& (0+255),w,b
  2227   000524  6ED9               	movwf	fsr2l,c
  2228   000526  359B               	rlcf	(main@i+1)& (0+255),w,b
  2229   000528  6EDA               	movwf	fsr2h,c
  2230   00052A  0ECA               	movlw	low _crossings
  2231   00052C  26D9               	addwf	fsr2l,f,c
  2232   00052E  0E00               	movlw	high _crossings
  2233   000530  22DA               	addwfc	fsr2h,f,c
  2234   000532  CFDE F07D          	movff	postinc2,?_printf+2
  2235   000536  CFDD F07E          	movff	postdec2,?_printf+3
  2236   00053A  90D8               	bcf	status,0,c
  2237   00053C  359A               	rlcf	main@i& (0+255),w,b
  2238   00053E  6ED9               	movwf	fsr2l,c
  2239   000540  359B               	rlcf	(main@i+1)& (0+255),w,b
  2240   000542  6EDA               	movwf	fsr2h,c
  2241   000544  0EC8               	movlw	low (_crossings+65534)
  2242   000546  26D9               	addwf	fsr2l,f,c
  2243   000548  0E00               	movlw	high (_crossings+65534)
  2244   00054A  22DA               	addwfc	fsr2h,f,c
  2245   00054C  CFDE F07F          	movff	postinc2,?_printf+4
  2246   000550  CFDD F080          	movff	postdec2,?_printf+5
  2247   000554  C093  F081         	movff	main@period,?_printf+6
  2248   000558  C094  F082         	movff	main@period+1,?_printf+7
  2249   00055C  ECF6  F00A         	call	_printf	;wreg free
  2250                           
  2251                           ;main.c: 197:                         }
  2252   000560  0100               	movlb	0	; () banked
  2253   000562  4B9A               	infsnz	main@i& (0+255),f,b
  2254   000564  2B9B               	incf	(main@i+1)& (0+255),f,b
  2255   000566                     l3097:
  2256                           
  2257                           ; BSR set to: 0
  2258   000566  51A8               	movf	_ci& (0+255),w,b
  2259   000568  6F85               	movwf	??_main& (0+255),b
  2260   00056A  6B86               	clrf	(??_main+1)& (0+255),b
  2261   00056C  5185               	movf	??_main& (0+255),w,b
  2262   00056E  5D9A               	subwf	main@i& (0+255),w,b
  2263   000570  5186               	movf	(??_main+1)& (0+255),w,b
  2264   000572  599B               	subwfb	(main@i+1)& (0+255),w,b
  2265   000574  A0D8               	btfss	status,0,c
  2266   000576  D7AC               	goto	l3089
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;main.c: 198:                         printf("\n\r\n\r");
  2270   000578  0EED               	movlw	low STR_37
  2271   00057A  6F7B               	movwf	printf@fmt& (0+255),b
  2272   00057C  0E7F               	movlw	high STR_37
  2273   00057E  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2274   000580  ECF6  F00A         	call	_printf	;wreg free
  2275                           
  2276                           ;main.c: 199:                         avgPeriod = (totPeriod * 25) / (ci-1);
  2277   000584  C095  F00A         	movff	main@totPeriod,___wmul@multiplier
  2278   000588  C096  F00B         	movff	main@totPeriod+1,___wmul@multiplier+1
  2279   00058C  0E00               	movlw	0
  2280   00058E  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  2281   000590  0E19               	movlw	25
  2282   000592  6E0C               	movwf	___wmul@multiplicand^0,c
  2283   000594  EC0A  F00B         	call	___wmul	;wreg free
  2284   000598  C00A  F010         	movff	?___wmul,___lwdiv@dividend
  2285   00059C  C00B  F011         	movff	?___wmul+1,___lwdiv@dividend+1
  2286   0005A0  0EFF               	movlw	255
  2287   0005A2  0100               	movlb	0	; () banked
  2288   0005A4  25A8               	addwf	_ci& (0+255),w,b
  2289   0005A6  6E12               	movwf	___lwdiv@divisor^0,c
  2290   0005A8  6A13               	clrf	(___lwdiv@divisor+1)^0,c
  2291   0005AA  0EFF               	movlw	255
  2292   0005AC  2213               	addwfc	(___lwdiv@divisor+1)^0,f,c
  2293   0005AE  ECEA  F009         	call	___lwdiv	;wreg free
  2294   0005B2  C010  F091         	movff	?___lwdiv,main@avgPeriod
  2295   0005B6  C011  F092         	movff	?___lwdiv+1,main@avgPeriod+1
  2296                           
  2297                           ;main.c: 200:                         frequency = ((ci-1) * 1000000/25) / totPeriod;
  2298   0005BA  0E19               	movlw	25
  2299   0005BC  6E1A               	movwf	___aldiv@divisor^0,c
  2300   0005BE  0E00               	movlw	0
  2301   0005C0  6E1B               	movwf	(___aldiv@divisor+1)^0,c
  2302   0005C2  0E00               	movlw	0
  2303   0005C4  6E1C               	movwf	(___aldiv@divisor+2)^0,c
  2304   0005C6  0E00               	movlw	0
  2305   0005C8  6E1D               	movwf	(___aldiv@divisor+3)^0,c
  2306   0005CA  0EFF               	movlw	255
  2307   0005CC  0100               	movlb	0	; () banked
  2308   0005CE  25A8               	addwf	_ci& (0+255),w,b
  2309   0005D0  6F85               	movwf	??_main& (0+255),b
  2310   0005D2  6B86               	clrf	(??_main+1)& (0+255),b
  2311   0005D4  0EFF               	movlw	255
  2312   0005D6  2386               	addwfc	(??_main+1)& (0+255),f,b
  2313   0005D8  C085  F00A         	movff	??_main,___lmul@multiplier
  2314   0005DC  C086  F00B         	movff	??_main+1,___lmul@multiplier+1
  2315   0005E0  0E00               	movlw	0
  2316   0005E2  BE0B               	btfsc	(___lmul@multiplier+1)^0,7,c
  2317   0005E4  0EFF               	movlw	-1
  2318   0005E6  6E0C               	movwf	(___lmul@multiplier+2)^0,c
  2319   0005E8  6E0D               	movwf	(___lmul@multiplier+3)^0,c
  2320   0005EA  0E40               	movlw	64
  2321   0005EC  6E0E               	movwf	___lmul@multiplicand^0,c
  2322   0005EE  0E42               	movlw	66
  2323   0005F0  6E0F               	movwf	(___lmul@multiplicand+1)^0,c
  2324   0005F2  0E0F               	movlw	15
  2325   0005F4  6E10               	movwf	(___lmul@multiplicand+2)^0,c
  2326   0005F6  0E00               	movlw	0
  2327   0005F8  6E11               	movwf	(___lmul@multiplicand+3)^0,c
  2328   0005FA  ECBF  F009         	call	___lmul	;wreg free
  2329   0005FE  C00A  F016         	movff	?___lmul,___aldiv@dividend
  2330   000602  C00B  F017         	movff	?___lmul+1,___aldiv@dividend+1
  2331   000606  C00C  F018         	movff	?___lmul+2,___aldiv@dividend+2
  2332   00060A  C00D  F019         	movff	?___lmul+3,___aldiv@dividend+3
  2333   00060E  EC0A  F008         	call	___aldiv	;wreg free
  2334   000612  C016  F08D         	movff	?___aldiv,_main$1770
  2335   000616  C017  F08E         	movff	?___aldiv+1,_main$1770+1
  2336   00061A  C018  F08F         	movff	?___aldiv+2,_main$1770+2
  2337   00061E  C019  F090         	movff	?___aldiv+3,_main$1770+3
  2338                           
  2339                           ;main.c: 200:                         frequency = ((ci-1) * 1000000/25) / totPeriod;
  2340   000622  C08D  F016         	movff	_main$1770,___aldiv@dividend
  2341   000626  C08E  F017         	movff	_main$1770+1,___aldiv@dividend+1
  2342   00062A  C08F  F018         	movff	_main$1770+2,___aldiv@dividend+2
  2343   00062E  C090  F019         	movff	_main$1770+3,___aldiv@dividend+3
  2344   000632  C095  F01A         	movff	main@totPeriod,___aldiv@divisor
  2345   000636  C096  F01B         	movff	main@totPeriod+1,___aldiv@divisor+1
  2346   00063A  6A1C               	clrf	(___aldiv@divisor+2)^0,c
  2347   00063C  6A1D               	clrf	(___aldiv@divisor+3)^0,c
  2348   00063E  EC0A  F008         	call	___aldiv	;wreg free
  2349   000642  C016  F089         	movff	?___aldiv,main@frequency
  2350   000646  C017  F08A         	movff	?___aldiv+1,main@frequency+1
  2351   00064A  C018  F08B         	movff	?___aldiv+2,main@frequency+2
  2352   00064E  C019  F08C         	movff	?___aldiv+3,main@frequency+3
  2353                           
  2354                           ;main.c: 202:                         printf("average period: %u us\n\r", avgPeriod);
  2355   000652  0E21               	movlw	low STR_41
  2356   000654  0100               	movlb	0	; () banked
  2357   000656  6F7B               	movwf	printf@fmt& (0+255),b
  2358   000658  0E7F               	movlw	high STR_41
  2359   00065A  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2360   00065C  C091  F07D         	movff	main@avgPeriod,?_printf+2
  2361   000660  C092  F07E         	movff	main@avgPeriod+1,?_printf+3
  2362   000664  ECF6  F00A         	call	_printf	;wreg free
  2363                           
  2364                           ;main.c: 203:                         printf("average frequency: %u Hz\n\r", frequency);
  2365   000668  0ED5               	movlw	low STR_42
  2366   00066A  0100               	movlb	0	; () banked
  2367   00066C  6F7B               	movwf	printf@fmt& (0+255),b
  2368   00066E  0E7E               	movlw	high STR_42
  2369   000670  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2370   000672  C089  F07D         	movff	main@frequency,?_printf+2
  2371   000676  C08A  F07E         	movff	main@frequency+1,?_printf+3
  2372   00067A  C08B  F07F         	movff	main@frequency+2,?_printf+4
  2373   00067E  C08C  F080         	movff	main@frequency+3,?_printf+5
  2374   000682  ECF6  F00A         	call	_printf	;wreg free
  2375                           
  2376                           ;main.c: 204:                     };main.c: 205:                     break;
  2377   000686  D02C               	goto	l3117
  2378   000688                     l3111:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;main.c: 209:                     printf("unknown key\r\n", cmd);
  2382   000688  0EBD               	movlw	low STR_43
  2383   00068A  6F7B               	movwf	printf@fmt& (0+255),b
  2384   00068C  0E7F               	movlw	high STR_43
  2385   00068E  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2386   000690  C097  F07D         	movff	main@cmd,?_printf+2
  2387   000694  6B7E               	clrf	(?_printf+3)& (0+255),b
  2388   000696  ECF6  F00A         	call	_printf	;wreg free
  2389                           
  2390                           ;main.c: 210:                     break;
  2391   00069A  D022               	goto	l3117
  2392   00069C                     l3115:
  2393   00069C  0100               	movlb	0	; () banked
  2394   00069E  5197               	movf	main@cmd& (0+255),w,b
  2395   0006A0  6F85               	movwf	??_main& (0+255),b
  2396   0006A2  6B86               	clrf	(??_main+1)& (0+255),b
  2397                           
  2398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2399                           ; Switch size 1, requested type "simple"
  2400                           ; Number of cases is 1, Range of values is 0 to 0
  2401                           ; switch strategies available:
  2402                           ; Name         Instructions Cycles
  2403                           ; simple_byte            4     3 (average)
  2404                           ;	Chosen strategy is simple_byte
  2405   0006A4  5186               	movf	(??_main+1)& (0+255),w,b
  2406   0006A6  0A00               	xorlw	0	; case 0
  2407   0006A8  A4D8               	btfss	status,2,c
  2408   0006AA  D7EE               	goto	l3111
  2409                           
  2410                           ; BSR set to: 0
  2411                           ; Switch size 1, requested type "simple"
  2412                           ; Number of cases is 8, Range of values is 0 to 122
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte           25    13 (average)
  2416                           ;	Chosen strategy is simple_byte
  2417   0006AC  5185               	movf	??_main& (0+255),w,b
  2418   0006AE  0A00               	xorlw	0	; case 0
  2419   0006B0  B4D8               	btfsc	status,2,c
  2420   0006B2  D016               	goto	l3117
  2421   0006B4  0A3F               	xorlw	63	; case 63
  2422   0006B6  B4D8               	btfsc	status,2,c
  2423   0006B8  D504               	goto	l2943
  2424   0006BA  0A6B               	xorlw	107	; case 84
  2425   0006BC  B4D8               	btfsc	status,2,c
  2426   0006BE  D587               	goto	l2971
  2427   0006C0  0A0E               	xorlw	14	; case 90
  2428   0006C2  B4D8               	btfsc	status,2,c
  2429   0006C4  D55A               	goto	l2947
  2430   0006C6  0A3C               	xorlw	60	; case 102
  2431   0006C8  B4D8               	btfsc	status,2,c
  2432   0006CA  D5BD               	goto	l2983
  2433   0006CC  0A09               	xorlw	9	; case 111
  2434   0006CE  B4D8               	btfsc	status,2,c
  2435   0006D0  D54D               	goto	l2945
  2436   0006D2  0A1B               	xorlw	27	; case 116
  2437   0006D4  B4D8               	btfsc	status,2,c
  2438   0006D6  D599               	goto	l2977
  2439   0006D8  0A0E               	xorlw	14	; case 122
  2440   0006DA  B4D8               	btfsc	status,2,c
  2441   0006DC  D563               	goto	l2959
  2442   0006DE  D7D4               	goto	l3111
  2443   0006E0                     l3117:
  2444                           
  2445                           ;main.c: 212:             printf("> ");
  2446   0006E0  0EFB               	movlw	low STR_4
  2447   0006E2  0100               	movlb	0	; () banked
  2448   0006E4  6F7B               	movwf	printf@fmt& (0+255),b
  2449   0006E6  0E7F               	movlw	high STR_4
  2450   0006E8  6F7C               	movwf	(printf@fmt+1)& (0+255),b
  2451   0006EA  ECF6  F00A         	call	_printf	;wreg free
  2452   0006EE  D4D6               	goto	l2937
  2453   0006F0                     __end_of_main:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _printf *****************
  2457 ;; Defined at:
  2458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  2461 ;;		 -> STR_44(3), STR_43(14), STR_42(27), STR_41(24), 
  2462 ;;		 -> STR_40(5), STR_39(15), STR_38(33), STR_37(5), 
  2463 ;;		 -> STR_36(4), STR_35(52), STR_34(3), STR_33(3), 
  2464 ;;		 -> STR_32(2), STR_31(2), STR_30(4), STR_29(2), 
  2465 ;;		 -> STR_28(2), STR_27(7), STR_26(52), STR_25(22), 
  2466 ;;		 -> STR_24(19), STR_23(20), STR_22(20), STR_21(20), 
  2467 ;;		 -> STR_20(20), STR_19(3), STR_18(3), STR_17(5), 
  2468 ;;		 -> STR_16(33), STR_15(37), STR_14(32), STR_13(49), 
  2469 ;;		 -> STR_12(33), STR_11(33), STR_10(24), STR_9(21), 
  2470 ;;		 -> STR_8(7), STR_7(15), STR_6(33), STR_5(5), 
  2471 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  ap              2   35[BANK0 ] PTR void [1]
  2474 ;;		 -> ?_printf(2), 
  2475 ;;  ret             2    0        int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2   27[BANK0 ] int 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2485 ;;      Params:         0       8       0       0       0       0       0
  2486 ;;      Locals:         0       2       0       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0       0       0
  2488 ;;      Totals:         0      10       0       0       0       0       0
  2489 ;;Total ram usage:       10 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 12
  2492 ;; This function calls:
  2493 ;;		_vfprintf
  2494 ;; This function is called by:
  2495 ;;		_main
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text1
  2500   0015EC                     __ptext1:
  2501                           	callstack 0
  2502   0015EC                     _printf:
  2503                           	callstack 18
  2504                           
  2505                           ;incstack = 0
  2506   0015EC  0E7D               	movlw	low (?_printf+2)
  2507   0015EE  0100               	movlb	0	; () banked
  2508   0015F0  6F83               	movwf	printf@ap& (0+255),b
  2509   0015F2  0E00               	movlw	high (?_printf+2)
  2510   0015F4  6F84               	movwf	(printf@ap+1)& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513   0015F6  0E00               	movlw	0
  2514   0015F8  6F75               	movwf	vfprintf@fp& (0+255),b
  2515   0015FA  0E00               	movlw	0
  2516   0015FC  6F76               	movwf	(vfprintf@fp+1)& (0+255),b
  2517   0015FE  C07B  F077         	movff	printf@fmt,vfprintf@fmt
  2518   001602  C07C  F078         	movff	printf@fmt+1,vfprintf@fmt+1
  2519   001606  0E83               	movlw	low printf@ap
  2520   001608  6F79               	movwf	vfprintf@ap& (0+255),b
  2521   00160A  0E00               	movlw	high printf@ap
  2522   00160C  6F7A               	movwf	(vfprintf@ap+1)& (0+255),b
  2523   00160E  EC39  F00A         	call	_vfprintf	;wreg free
  2524   001612  0012               	return		;funcret
  2525   001614                     __end_of_printf:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _vfprintf *****************
  2529 ;; Defined at:
  2530 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  fp              2   21[BANK0 ] PTR struct _IO_FILE
  2533 ;;		 -> NULL(0), 
  2534 ;;  fmt             2   23[BANK0 ] PTR const unsigned char 
  2535 ;;		 -> STR_44(3), STR_43(14), STR_42(27), STR_41(24), 
  2536 ;;		 -> STR_40(5), STR_39(15), STR_38(33), STR_37(5), 
  2537 ;;		 -> STR_36(4), STR_35(52), STR_34(3), STR_33(3), 
  2538 ;;		 -> STR_32(2), STR_31(2), STR_30(4), STR_29(2), 
  2539 ;;		 -> STR_28(2), STR_27(7), STR_26(52), STR_25(22), 
  2540 ;;		 -> STR_24(19), STR_23(20), STR_22(20), STR_21(20), 
  2541 ;;		 -> STR_20(20), STR_19(3), STR_18(3), STR_17(5), 
  2542 ;;		 -> STR_16(33), STR_15(37), STR_14(32), STR_13(49), 
  2543 ;;		 -> STR_12(33), STR_11(33), STR_10(24), STR_9(21), 
  2544 ;;		 -> STR_8(7), STR_7(15), STR_6(33), STR_5(5), 
  2545 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2546 ;;  ap              2   25[BANK0 ] PTR PTR void 
  2547 ;;		 -> printf@ap(2), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  cfmt            2   73[COMRAM] PTR unsigned char 
  2550 ;;		 -> STR_44(3), STR_43(14), STR_42(27), STR_41(24), 
  2551 ;;		 -> STR_40(5), STR_39(15), STR_38(33), STR_37(5), 
  2552 ;;		 -> STR_36(4), STR_35(52), STR_34(3), STR_33(3), 
  2553 ;;		 -> STR_32(2), STR_31(2), STR_30(4), STR_29(2), 
  2554 ;;		 -> STR_28(2), STR_27(7), STR_26(52), STR_25(22), 
  2555 ;;		 -> STR_24(19), STR_23(20), STR_22(20), STR_21(20), 
  2556 ;;		 -> STR_20(20), STR_19(3), STR_18(3), STR_17(5), 
  2557 ;;		 -> STR_16(33), STR_15(37), STR_14(32), STR_13(49), 
  2558 ;;		 -> STR_12(33), STR_11(33), STR_10(24), STR_9(21), 
  2559 ;;		 -> STR_8(7), STR_7(15), STR_6(33), STR_5(5), 
  2560 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2   21[BANK0 ] int 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2570 ;;      Params:         0       6       0       0       0       0       0
  2571 ;;      Locals:         2       0       0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0
  2573 ;;      Totals:         2       6       0       0       0       0       0
  2574 ;;Total ram usage:        8 bytes
  2575 ;; Hardware stack levels used: 1
  2576 ;; Hardware stack levels required when called: 11
  2577 ;; This function calls:
  2578 ;;		_vfpfcnvrt
  2579 ;; This function is called by:
  2580 ;;		_printf
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text2
  2585   001472                     __ptext2:
  2586                           	callstack 0
  2587   001472                     _vfprintf:
  2588                           	callstack 18
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2591                           
  2592                           ;incstack = 0
  2593   001472  C077  F04A         	movff	vfprintf@fmt,vfprintf@cfmt
  2594   001476  C078  F04B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2597   00147A  D00F               	goto	l2903
  2598   00147C                     l2901:
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2601   00147C  C075  F060         	movff	vfprintf@fp,vfpfcnvrt@fp
  2602   001480  C076  F061         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2603   001484  0E4A               	movlw	low vfprintf@cfmt
  2604   001486  0100               	movlb	0	; () banked
  2605   001488  6F62               	movwf	vfpfcnvrt@fmt& (0+255),b
  2606   00148A  0E00               	movlw	high vfprintf@cfmt
  2607   00148C  6F63               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2608   00148E  C079  F064         	movff	vfprintf@ap,vfpfcnvrt@ap
  2609   001492  C07A  F065         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2610   001496  EC78  F003         	call	_vfpfcnvrt	;wreg free
  2611   00149A                     l2903:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2614   00149A  C04A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2615   00149E  C04B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2616   0014A2                     	if	0	;tblptru may be non-zero
  2617   0014A2                     	endif
  2618   0014A2                     	if	0	;tblptru may be non-zero
  2619   0014A2                     	endif
  2620   0014A2  0008               	tblrd		*
  2621   0014A4  50F5               	movf	tablat,w,c
  2622   0014A6  0900               	iorlw	0
  2623   0014A8  A4D8               	btfss	status,2,c
  2624   0014AA  D7E8               	goto	l2901
  2625                           
  2626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2627   0014AC  0E00               	movlw	0
  2628   0014AE  0100               	movlb	0	; () banked
  2629   0014B0  6F76               	movwf	(?_vfprintf+1)& (0+255),b
  2630   0014B2  0E00               	movlw	0
  2631   0014B4  6F75               	movwf	?_vfprintf& (0+255),b
  2632                           
  2633                           ; BSR set to: 0
  2634   0014B6  0012               	return		;funcret
  2635   0014B8                     __end_of_vfprintf:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _vfpfcnvrt *****************
  2639 ;; Defined at:
  2640 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2643 ;;		 -> NULL(0), 
  2644 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  2645 ;;		 -> vfprintf@cfmt(2), 
  2646 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2647 ;;		 -> printf@ap(2), 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  convarg         8   11[BANK0 ] struct .
  2650 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  2651 ;;		 -> STR_44(3), STR_43(14), STR_42(27), STR_41(24), 
  2652 ;;		 -> STR_40(5), STR_39(15), STR_38(33), STR_37(5), 
  2653 ;;		 -> STR_36(4), STR_35(52), STR_34(3), STR_33(3), 
  2654 ;;		 -> STR_32(2), STR_31(2), STR_30(4), STR_29(2), 
  2655 ;;		 -> STR_28(2), STR_27(7), STR_26(52), STR_25(22), 
  2656 ;;		 -> STR_24(19), STR_23(20), STR_22(20), STR_21(20), 
  2657 ;;		 -> STR_20(20), STR_19(3), STR_18(3), STR_17(5), 
  2658 ;;		 -> STR_16(33), STR_15(37), STR_14(32), STR_13(49), 
  2659 ;;		 -> STR_12(33), STR_11(33), STR_10(24), STR_9(21), 
  2660 ;;		 -> STR_8(7), STR_7(15), STR_6(33), STR_5(5), 
  2661 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  2662 ;;  i               2    0        int 
  2663 ;;  done            2    0        int 
  2664 ;;  c               1   10[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2674 ;;      Params:         0       6       0       0       0       0       0
  2675 ;;      Locals:         0      11       0       0       0       0       0
  2676 ;;      Temps:          0       4       0       0       0       0       0
  2677 ;;      Totals:         0      21       0       0       0       0       0
  2678 ;;Total ram usage:       21 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 10
  2681 ;; This function calls:
  2682 ;;		_ctoa
  2683 ;;		_dtoa
  2684 ;;		_fputc
  2685 ;;		_utoa
  2686 ;; This function is called by:
  2687 ;;		_vfprintf
  2688 ;; This function uses a non-reentrant model
  2689 ;;
  2690                           
  2691                           	psect	text3
  2692   0006F0                     __ptext3:
  2693                           	callstack 0
  2694   0006F0                     _vfpfcnvrt:
  2695                           	callstack 18
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;incstack = 0
  2701   0006F0  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2702   0006F4  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2703   0006F8  CFDE FFF6          	movff	postinc2,tblptrl
  2704   0006FC  CFDD FFF7          	movff	postdec2,tblptrh
  2705   000700                     	if	0	;tblptru may be non-zero
  2706   000700                     	endif
  2707   000700                     	if	0	;tblptru may be non-zero
  2708   000700                     	endif
  2709   000700  0008               	tblrd		*
  2710   000702  50F5               	movf	tablat,w,c
  2711   000704  0A25               	xorlw	37
  2712   000706  A4D8               	btfss	status,2,c
  2713   000708  D102               	goto	l2889
  2714                           
  2715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2716   00070A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2717   00070E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2718   000712  2ADE               	incf	postinc2,f,c
  2719   000714  0E00               	movlw	0
  2720   000716  22DD               	addwfc	postdec2,f,c
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2723   000718  0E00               	movlw	0
  2724   00071A  6E4D               	movwf	(_width+1)^0,c
  2725   00071C  0E00               	movlw	0
  2726   00071E  6E4C               	movwf	_width^0,c
  2727   000720  C04C  F0A6         	movff	_width,_flags
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2730   000724  684E               	setf	_prec^0,c
  2731   000726  684F               	setf	(_prec+1)^0,c
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2734   000728  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2735   00072C  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2736   000730  CFDE FFF6          	movff	postinc2,tblptrl
  2737   000734  CFDD FFF7          	movff	postdec2,tblptrh
  2738   000738                     	if	0	;tblptru may be non-zero
  2739   000738                     	endif
  2740   000738                     	if	0	;tblptru may be non-zero
  2741   000738                     	endif
  2742   000738  0008               	tblrd		*
  2743   00073A  50F5               	movf	tablat,w,c
  2744   00073C  0A63               	xorlw	99
  2745   00073E  A4D8               	btfss	status,2,c
  2746   000740  D023               	goto	l2861
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2749   000742  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750   000746  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751   00074A  2ADE               	incf	postinc2,f,c
  2752   00074C  0E00               	movlw	0
  2753   00074E  22DD               	addwfc	postdec2,f,c
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2756   000750  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2757   000754  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2758   000758  CFDF F066          	movff	indf2,??_vfpfcnvrt
  2759   00075C  0E02               	movlw	2
  2760   00075E  26DE               	addwf	postinc2,f,c
  2761   000760  CFDF F067          	movff	indf2,??_vfpfcnvrt+1
  2762   000764  0E00               	movlw	0
  2763   000766  22DD               	addwfc	postdec2,f,c
  2764   000768  C066  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2765   00076C  C067  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2766   000770  50DF               	movf	indf2,w,c
  2767   000772  0100               	movlb	0	; () banked
  2768   000774  6F6A               	movwf	vfpfcnvrt@c& (0+255),b
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2772   000776  C060  F015         	movff	vfpfcnvrt@fp,ctoa@fp
  2773   00077A  C061  F016         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2774   00077E  C06A  F017         	movff	vfpfcnvrt@c,ctoa@c
  2775   000782  EC1E  F009         	call	_ctoa	;wreg free
  2776   000786  0012               	return	
  2777   000788                     l2861:
  2778                           
  2779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2780   000788  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2781   00078C  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2782   000790  CFDE F073          	movff	postinc2,vfpfcnvrt@cp
  2783   000794  CFDD F074          	movff	postdec2,vfpfcnvrt@cp+1
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2786   000798  C073  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2787   00079C  C074  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2788   0007A0                     	if	0	;tblptru may be non-zero
  2789   0007A0                     	endif
  2790   0007A0                     	if	0	;tblptru may be non-zero
  2791   0007A0                     	endif
  2792   0007A0  0008               	tblrd		*
  2793   0007A2  50F5               	movf	tablat,w,c
  2794   0007A4  0A64               	xorlw	100
  2795   0007A6  B4D8               	btfsc	status,2,c
  2796   0007A8  D009               	goto	u1910
  2797   0007AA  C073  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2798   0007AE  C074  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2799   0007B2                     	if	0	;tblptru may be non-zero
  2800   0007B2                     	endif
  2801   0007B2                     	if	0	;tblptru may be non-zero
  2802   0007B2                     	endif
  2803   0007B2  0008               	tblrd		*
  2804   0007B4  50F5               	movf	tablat,w,c
  2805   0007B6  0A69               	xorlw	105
  2806   0007B8  A4D8               	btfss	status,2,c
  2807   0007BA  D043               	goto	l2873
  2808   0007BC                     u1910:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2811   0007BC  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2812   0007C0  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2813   0007C4  CFDF F066          	movff	indf2,??_vfpfcnvrt
  2814   0007C8  0E02               	movlw	2
  2815   0007CA  26DE               	addwf	postinc2,f,c
  2816   0007CC  CFDF F067          	movff	indf2,??_vfpfcnvrt+1
  2817   0007D0  0E00               	movlw	0
  2818   0007D2  22DD               	addwfc	postdec2,f,c
  2819   0007D4  C066  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2820   0007D8  C067  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2821   0007DC  CFDE F06B          	movff	postinc2,vfpfcnvrt@convarg
  2822   0007E0  CFDD F06C          	movff	postdec2,vfpfcnvrt@convarg+1
  2823   0007E4  0100               	movlb	0	; () banked
  2824   0007E6  0E00               	movlw	0
  2825   0007E8  BF6C               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2826   0007EA  0EFF               	movlw	-1
  2827   0007EC  6F6D               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2828   0007EE  6F6E               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2829   0007F0  6F6F               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2830   0007F2  6F70               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2831   0007F4  6F71               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2832   0007F6  6F72               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2835   0007F8  0E01               	movlw	1
  2836   0007FA  2573               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2837   0007FC  6F66               	movwf	??_vfpfcnvrt& (0+255),b
  2838   0007FE  0E00               	movlw	0
  2839   000800  2174               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2840   000802  6F67               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2841   000804  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2842   000808  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2843   00080C  C066  FFDE         	movff	??_vfpfcnvrt,postinc2
  2844   000810  C067  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2848   000814  C060  F027         	movff	vfpfcnvrt@fp,dtoa@fp
  2849   000818  C061  F028         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2850   00081C  C06B  F029         	movff	vfpfcnvrt@convarg,dtoa@d
  2851   000820  C06C  F02A         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2852   000824  C06D  F02B         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2853   000828  C06E  F02C         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2854   00082C  C06F  F02D         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2855   000830  C070  F02E         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2856   000834  C071  F02F         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2857   000838  C072  F030         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2858   00083C  EC9A  F004         	call	_dtoa	;wreg free
  2859   000840  0012               	return	
  2860   000842                     l2873:
  2861   000842  C073  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2862   000846  C074  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2863   00084A                     	if	0	;tblptru may be non-zero
  2864   00084A                     	endif
  2865   00084A                     	if	0	;tblptru may be non-zero
  2866   00084A                     	endif
  2867   00084A  0008               	tblrd		*
  2868   00084C  50F5               	movf	tablat,w,c
  2869   00084E  0A75               	xorlw	117
  2870   000850  A4D8               	btfss	status,2,c
  2871   000852  D055               	goto	l2885
  2872                           
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2874   000854  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2875   000858  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2876   00085C  CFDF F066          	movff	indf2,??_vfpfcnvrt
  2877   000860  0E02               	movlw	2
  2878   000862  26DE               	addwf	postinc2,f,c
  2879   000864  CFDF F067          	movff	indf2,??_vfpfcnvrt+1
  2880   000868  0E00               	movlw	0
  2881   00086A  22DD               	addwfc	postdec2,f,c
  2882   00086C  C066  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2883   000870  C067  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2884   000874  CFDE F068          	movff	postinc2,??_vfpfcnvrt+2
  2885   000878  CFDD F069          	movff	postdec2,??_vfpfcnvrt+3
  2886   00087C  C068  F06B         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2887   000880  C069  F06C         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2888   000884  0100               	movlb	0	; () banked
  2889   000886  6B6D               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2890   000888  6B6E               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2891   00088A  6B6F               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2892   00088C  6B70               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2893   00088E  6B71               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2894   000890  6B72               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2895                           
  2896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2897   000892  0E01               	movlw	1
  2898   000894  2573               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2899   000896  6F66               	movwf	??_vfpfcnvrt& (0+255),b
  2900   000898  0E00               	movlw	0
  2901   00089A  2174               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2902   00089C  6F67               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2903   00089E  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904   0008A2  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905   0008A6  C066  FFDE         	movff	??_vfpfcnvrt,postinc2
  2906   0008AA  C067  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2909   0008AE  D017               	goto	l2883
  2910   0008B0                     l2877:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2914   0008B0  C060  F027         	movff	vfpfcnvrt@fp,utoa@fp
  2915   0008B4  C061  F028         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2916   0008B8  C06B  F029         	movff	vfpfcnvrt@convarg,utoa@d
  2917   0008BC  C06C  F02A         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2918   0008C0  C06D  F02B         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2919   0008C4  C06E  F02C         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2920   0008C8  C06F  F02D         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2921   0008CC  C070  F02E         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2922   0008D0  C071  F02F         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2923   0008D4  C072  F030         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2924   0008D8  ECA5  F005         	call	_utoa	;wreg free
  2925   0008DC  0012               	return	
  2926   0008DE                     l2883:
  2927                           
  2928                           ; BSR set to: 0
  2929   0008DE  C073  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2930   0008E2  C074  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2931   0008E6                     	if	0	;tblptru may be non-zero
  2932   0008E6                     	endif
  2933   0008E6                     	if	0	;tblptru may be non-zero
  2934   0008E6                     	endif
  2935   0008E6  0008               	tblrd		*
  2936   0008E8  50F5               	movf	tablat,w,c
  2937   0008EA  6F66               	movwf	??_vfpfcnvrt& (0+255),b
  2938   0008EC  6B67               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2939                           
  2940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2941                           ; Switch size 1, requested type "simple"
  2942                           ; Number of cases is 1, Range of values is 0 to 0
  2943                           ; switch strategies available:
  2944                           ; Name         Instructions Cycles
  2945                           ; simple_byte            4     3 (average)
  2946                           ;	Chosen strategy is simple_byte
  2947   0008EE  5167               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2948   0008F0  0A00               	xorlw	0	; case 0
  2949   0008F2  A4D8               	btfss	status,2,c
  2950   0008F4  D004               	goto	l2885
  2951                           
  2952                           ; BSR set to: 0
  2953                           ; Switch size 1, requested type "simple"
  2954                           ; Number of cases is 1, Range of values is 117 to 117
  2955                           ; switch strategies available:
  2956                           ; Name         Instructions Cycles
  2957                           ; simple_byte            4     3 (average)
  2958                           ;	Chosen strategy is simple_byte
  2959   0008F6  5166               	movf	??_vfpfcnvrt& (0+255),w,b
  2960   0008F8  0A75               	xorlw	117	; case 117
  2961   0008FA  B4D8               	btfsc	status,2,c
  2962   0008FC  D7D9               	goto	l2877
  2963   0008FE                     l2885:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2966   0008FE  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967   000902  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968   000906  2ADE               	incf	postinc2,f,c
  2969   000908  0E00               	movlw	0
  2970   00090A  22DD               	addwfc	postdec2,f,c
  2971   00090C  0012               	return	
  2972   00090E                     l2889:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2975   00090E  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2976   000912  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2977   000916  CFDE FFF6          	movff	postinc2,tblptrl
  2978   00091A  CFDD FFF7          	movff	postdec2,tblptrh
  2979   00091E                     	if	0	;tblptru may be non-zero
  2980   00091E                     	endif
  2981   00091E                     	if	0	;tblptru may be non-zero
  2982   00091E                     	endif
  2983   00091E  0008               	tblrd		*
  2984   000920  50F5               	movf	tablat,w,c
  2985   000922  6E0C               	movwf	fputc@c^0,c
  2986   000924  6A0D               	clrf	(fputc@c+1)^0,c
  2987   000926  C060  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2988   00092A  C061  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2989   00092E  EC58  F009         	call	_fputc	;wreg free
  2990   000932  D7E5               	goto	l2885
  2991   000934                     __end_of_vfpfcnvrt:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _utoa *****************
  2995 ;; Defined at:
  2996 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  2999 ;;		 -> NULL(0), 
  3000 ;;  d               8   40[COMRAM] unsigned long long 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  n               8   60[COMRAM] unsigned long long 
  3003 ;;  i               2   68[COMRAM] int 
  3004 ;;  p               2   58[COMRAM] int 
  3005 ;;  w               2   56[COMRAM] int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3015 ;;      Params:        10       0       0       0       0       0       0
  3016 ;;      Locals:        14       0       0       0       0       0       0
  3017 ;;      Temps:          8       0       0       0       0       0       0
  3018 ;;      Totals:        32       0       0       0       0       0       0
  3019 ;;Total ram usage:       32 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 9
  3022 ;; This function calls:
  3023 ;;		___lodiv
  3024 ;;		___lomod
  3025 ;;		_pad
  3026 ;; This function is called by:
  3027 ;;		_vfpfcnvrt
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text4
  3032   000B4A                     __ptext4:
  3033                           	callstack 0
  3034   000B4A                     _utoa:
  3035                           	callstack 18
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  3038                           
  3039                           ;incstack = 0
  3040   000B4A  BE4F               	btfsc	(_prec+1)^0,7,c
  3041   000B4C  D005               	goto	u1380
  3042   000B4E  504F               	movf	(_prec+1)^0,w,c
  3043   000B50  E108               	bnz	l1100
  3044   000B52  044E               	decf	_prec^0,w,c
  3045   000B54  B0D8               	btfsc	status,0,c
  3046   000B56  D005               	goto	l1100
  3047   000B58                     u1380:
  3048   000B58  0E00               	movlw	0
  3049   000B5A  6E3C               	movwf	(utoa@p+1)^0,c
  3050   000B5C  0E01               	movlw	1
  3051   000B5E  6E3B               	movwf	utoa@p^0,c
  3052   000B60  D004               	goto	l1102
  3053   000B62                     l1100:
  3054   000B62  C04E  F03B         	movff	_prec,utoa@p
  3055   000B66  C04F  F03C         	movff	_prec+1,utoa@p+1
  3056   000B6A                     l1102:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  3059   000B6A  C04C  F039         	movff	_width,utoa@w
  3060   000B6E  C04D  F03A         	movff	_width+1,utoa@w+1
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  3063   000B72  C029  F03D         	movff	utoa@d,utoa@n
  3064   000B76  C02A  F03E         	movff	utoa@d+1,utoa@n+1
  3065   000B7A  C02B  F03F         	movff	utoa@d+2,utoa@n+2
  3066   000B7E  C02C  F040         	movff	utoa@d+3,utoa@n+3
  3067   000B82  C02D  F041         	movff	utoa@d+4,utoa@n+4
  3068   000B86  C02E  F042         	movff	utoa@d+5,utoa@n+5
  3069   000B8A  C02F  F043         	movff	utoa@d+6,utoa@n+6
  3070   000B8E  C030  F044         	movff	utoa@d+7,utoa@n+7
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  3073   000B92  0E00               	movlw	0
  3074   000B94  6E46               	movwf	(utoa@i+1)^0,c
  3075   000B96  0E1F               	movlw	31
  3076   000B98  6E45               	movwf	utoa@i^0,c
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  3079   000B9A  0E00               	movlw	0
  3080   000B9C  0100               	movlb	0	; () banked
  3081   000B9E  6FC8               	movwf	(_dbuf+31)& (0+255),b
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3084   000BA0  D076               	goto	l2287
  3085   000BA2                     l2277:
  3086                           
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  3088   000BA2  0645               	decf	utoa@i^0,f,c
  3089   000BA4  A0D8               	btfss	status,0,c
  3090   000BA6  0646               	decf	(utoa@i+1)^0,f,c
  3091                           
  3092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  3093   000BA8  0EA9               	movlw	low _dbuf
  3094   000BAA  2445               	addwf	utoa@i^0,w,c
  3095   000BAC  6ED9               	movwf	fsr2l,c
  3096   000BAE  0E00               	movlw	high _dbuf
  3097   000BB0  2046               	addwfc	(utoa@i+1)^0,w,c
  3098   000BB2  6EDA               	movwf	fsr2h,c
  3099   000BB4  C03D  F00A         	movff	utoa@n,___lomod@dividend
  3100   000BB8  C03E  F00B         	movff	utoa@n+1,___lomod@dividend+1
  3101   000BBC  C03F  F00C         	movff	utoa@n+2,___lomod@dividend+2
  3102   000BC0  C040  F00D         	movff	utoa@n+3,___lomod@dividend+3
  3103   000BC4  C041  F00E         	movff	utoa@n+4,___lomod@dividend+4
  3104   000BC8  C042  F00F         	movff	utoa@n+5,___lomod@dividend+5
  3105   000BCC  C043  F010         	movff	utoa@n+6,___lomod@dividend+6
  3106   000BD0  C044  F011         	movff	utoa@n+7,___lomod@dividend+7
  3107   000BD4  0E0A               	movlw	10
  3108   000BD6  6E12               	movwf	___lomod@divisor^0,c
  3109   000BD8  0E00               	movlw	0
  3110   000BDA  6E13               	movwf	(___lomod@divisor+1)^0,c
  3111   000BDC  0E00               	movlw	0
  3112   000BDE  6E14               	movwf	(___lomod@divisor+2)^0,c
  3113   000BE0  0E00               	movlw	0
  3114   000BE2  6E15               	movwf	(___lomod@divisor+3)^0,c
  3115   000BE4  0E00               	movlw	0
  3116   000BE6  6E16               	movwf	(___lomod@divisor+4)^0,c
  3117   000BE8  0E00               	movlw	0
  3118   000BEA  6E17               	movwf	(___lomod@divisor+5)^0,c
  3119   000BEC  0E00               	movlw	0
  3120   000BEE  6E18               	movwf	(___lomod@divisor+6)^0,c
  3121   000BF0  0E00               	movlw	0
  3122   000BF2  6E19               	movwf	(___lomod@divisor+7)^0,c
  3123   000BF4  EC70  F008         	call	___lomod	;wreg free
  3124   000BF8  C00A  F031         	movff	?___lomod,??_utoa
  3125   000BFC  C00B  F032         	movff	?___lomod+1,??_utoa+1
  3126   000C00  C00C  F033         	movff	?___lomod+2,??_utoa+2
  3127   000C04  C00D  F034         	movff	?___lomod+3,??_utoa+3
  3128   000C08  C00E  F035         	movff	?___lomod+4,??_utoa+4
  3129   000C0C  C00F  F036         	movff	?___lomod+5,??_utoa+5
  3130   000C10  C010  F037         	movff	?___lomod+6,??_utoa+6
  3131   000C14  C011  F038         	movff	?___lomod+7,??_utoa+7
  3132   000C18  5031               	movf	??_utoa^0,w,c
  3133   000C1A  0F30               	addlw	48
  3134   000C1C  6EDF               	movwf	indf2,c
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3137   000C1E  063B               	decf	utoa@p^0,f,c
  3138   000C20  A0D8               	btfss	status,0,c
  3139   000C22  063C               	decf	(utoa@p+1)^0,f,c
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3142   000C24  0639               	decf	utoa@w^0,f,c
  3143   000C26  A0D8               	btfss	status,0,c
  3144   000C28  063A               	decf	(utoa@w+1)^0,f,c
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3147   000C2A  C03D  F00A         	movff	utoa@n,___lodiv@dividend
  3148   000C2E  C03E  F00B         	movff	utoa@n+1,___lodiv@dividend+1
  3149   000C32  C03F  F00C         	movff	utoa@n+2,___lodiv@dividend+2
  3150   000C36  C040  F00D         	movff	utoa@n+3,___lodiv@dividend+3
  3151   000C3A  C041  F00E         	movff	utoa@n+4,___lodiv@dividend+4
  3152   000C3E  C042  F00F         	movff	utoa@n+5,___lodiv@dividend+5
  3153   000C42  C043  F010         	movff	utoa@n+6,___lodiv@dividend+6
  3154   000C46  C044  F011         	movff	utoa@n+7,___lodiv@dividend+7
  3155   000C4A  0E0A               	movlw	10
  3156   000C4C  6E12               	movwf	___lodiv@divisor^0,c
  3157   000C4E  0E00               	movlw	0
  3158   000C50  6E13               	movwf	(___lodiv@divisor+1)^0,c
  3159   000C52  0E00               	movlw	0
  3160   000C54  6E14               	movwf	(___lodiv@divisor+2)^0,c
  3161   000C56  0E00               	movlw	0
  3162   000C58  6E15               	movwf	(___lodiv@divisor+3)^0,c
  3163   000C5A  0E00               	movlw	0
  3164   000C5C  6E16               	movwf	(___lodiv@divisor+4)^0,c
  3165   000C5E  0E00               	movlw	0
  3166   000C60  6E17               	movwf	(___lodiv@divisor+5)^0,c
  3167   000C62  0E00               	movlw	0
  3168   000C64  6E18               	movwf	(___lodiv@divisor+6)^0,c
  3169   000C66  0E00               	movlw	0
  3170   000C68  6E19               	movwf	(___lodiv@divisor+7)^0,c
  3171   000C6A  ECA3  F007         	call	___lodiv	;wreg free
  3172   000C6E  C00A  F03D         	movff	?___lodiv,utoa@n
  3173   000C72  C00B  F03E         	movff	?___lodiv+1,utoa@n+1
  3174   000C76  C00C  F03F         	movff	?___lodiv+2,utoa@n+2
  3175   000C7A  C00D  F040         	movff	?___lodiv+3,utoa@n+3
  3176   000C7E  C00E  F041         	movff	?___lodiv+4,utoa@n+4
  3177   000C82  C00F  F042         	movff	?___lodiv+5,utoa@n+5
  3178   000C86  C010  F043         	movff	?___lodiv+6,utoa@n+6
  3179   000C8A  C011  F044         	movff	?___lodiv+7,utoa@n+7
  3180   000C8E                     l2287:
  3181                           
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3183   000C8E  5045               	movf	utoa@i^0,w,c
  3184   000C90  1046               	iorwf	(utoa@i+1)^0,w,c
  3185   000C92  B4D8               	btfsc	status,2,c
  3186   000C94  D011               	goto	u1410
  3187   000C96  503D               	movf	utoa@n^0,w,c
  3188   000C98  103E               	iorwf	(utoa@n+1)^0,w,c
  3189   000C9A  103F               	iorwf	(utoa@n+2)^0,w,c
  3190   000C9C  1040               	iorwf	(utoa@n+3)^0,w,c
  3191   000C9E  1041               	iorwf	(utoa@n+4)^0,w,c
  3192   000CA0  1042               	iorwf	(utoa@n+5)^0,w,c
  3193   000CA2  1043               	iorwf	(utoa@n+6)^0,w,c
  3194   000CA4  1044               	iorwf	(utoa@n+7)^0,w,c
  3195   000CA6  A4D8               	btfss	status,2,c
  3196   000CA8  D77C               	goto	l2277
  3197   000CAA  BE3C               	btfsc	(utoa@p+1)^0,7,c
  3198   000CAC  D005               	goto	u1410
  3199   000CAE  503C               	movf	(utoa@p+1)^0,w,c
  3200   000CB0  E102               	bnz	u1411
  3201   000CB2  043B               	decf	utoa@p^0,w,c
  3202   000CB4  B0D8               	btfsc	status,0,c
  3203   000CB6                     u1411:
  3204   000CB6  D775               	goto	l2277
  3205   000CB8                     u1410:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3208   000CB8  C027  F01C         	movff	utoa@fp,pad@fp
  3209   000CBC  C028  F01D         	movff	utoa@fp+1,pad@fp+1
  3210   000CC0  0EA9               	movlw	low _dbuf
  3211   000CC2  2445               	addwf	utoa@i^0,w,c
  3212   000CC4  6E1E               	movwf	pad@buf^0,c
  3213   000CC6  0E00               	movlw	high _dbuf
  3214   000CC8  2046               	addwfc	(utoa@i+1)^0,w,c
  3215   000CCA  6E1F               	movwf	(pad@buf+1)^0,c
  3216   000CCC  C039  F020         	movff	utoa@w,pad@p
  3217   000CD0  C03A  F021         	movff	utoa@w+1,pad@p+1
  3218   000CD4  EC8E  F009         	call	_pad	;wreg free
  3219   000CD8  0012               	return		;funcret
  3220   000CDA                     __end_of_utoa:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function ___lomod *****************
  3224 ;; Defined at:
  3225 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  dividend        8    9[COMRAM] unsigned long long 
  3228 ;;  divisor         8   17[COMRAM] unsigned long long 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  counter         1   25[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  8    9[COMRAM] unsigned long long 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:        16       0       0       0       0       0       0
  3241 ;;      Locals:         1       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0
  3243 ;;      Totals:        17       0       0       0       0       0       0
  3244 ;;Total ram usage:       17 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 4
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_utoa
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text5
  3255   0010E0                     __ptext5:
  3256                           	callstack 0
  3257   0010E0                     ___lomod:
  3258                           	callstack 22
  3259                           
  3260                           ;incstack = 0
  3261   0010E0  5012               	movf	___lomod@divisor^0,w,c
  3262   0010E2  1013               	iorwf	(___lomod@divisor+1)^0,w,c
  3263   0010E4  1014               	iorwf	(___lomod@divisor+2)^0,w,c
  3264   0010E6  1015               	iorwf	(___lomod@divisor+3)^0,w,c
  3265   0010E8  1016               	iorwf	(___lomod@divisor+4)^0,w,c
  3266   0010EA  1017               	iorwf	(___lomod@divisor+5)^0,w,c
  3267   0010EC  1018               	iorwf	(___lomod@divisor+6)^0,w,c
  3268   0010EE  1019               	iorwf	(___lomod@divisor+7)^0,w,c
  3269   0010F0  B4D8               	btfsc	status,2,c
  3270   0010F2  D03C               	goto	l807
  3271   0010F4  0E01               	movlw	1
  3272   0010F6  6E1A               	movwf	___lomod@counter^0,c
  3273   0010F8  D00A               	goto	l2171
  3274   0010FA                     l2169:
  3275   0010FA  90D8               	bcf	status,0,c
  3276   0010FC  3612               	rlcf	___lomod@divisor^0,f,c
  3277   0010FE  3613               	rlcf	(___lomod@divisor+1)^0,f,c
  3278   001100  3614               	rlcf	(___lomod@divisor+2)^0,f,c
  3279   001102  3615               	rlcf	(___lomod@divisor+3)^0,f,c
  3280   001104  3616               	rlcf	(___lomod@divisor+4)^0,f,c
  3281   001106  3617               	rlcf	(___lomod@divisor+5)^0,f,c
  3282   001108  3618               	rlcf	(___lomod@divisor+6)^0,f,c
  3283   00110A  3619               	rlcf	(___lomod@divisor+7)^0,f,c
  3284   00110C  2A1A               	incf	___lomod@counter^0,f,c
  3285   00110E                     l2171:
  3286   00110E  AE19               	btfss	(___lomod@divisor+7)^0,7,c
  3287   001110  D7F4               	goto	l2169
  3288   001112                     u1200:
  3289   001112  5012               	movf	___lomod@divisor^0,w,c
  3290   001114  5C0A               	subwf	___lomod@dividend^0,w,c
  3291   001116  5013               	movf	(___lomod@divisor+1)^0,w,c
  3292   001118  580B               	subwfb	(___lomod@dividend+1)^0,w,c
  3293   00111A  5014               	movf	(___lomod@divisor+2)^0,w,c
  3294   00111C  580C               	subwfb	(___lomod@dividend+2)^0,w,c
  3295   00111E  5015               	movf	(___lomod@divisor+3)^0,w,c
  3296   001120  580D               	subwfb	(___lomod@dividend+3)^0,w,c
  3297   001122  5016               	movf	(___lomod@divisor+4)^0,w,c
  3298   001124  580E               	subwfb	(___lomod@dividend+4)^0,w,c
  3299   001126  5017               	movf	(___lomod@divisor+5)^0,w,c
  3300   001128  580F               	subwfb	(___lomod@dividend+5)^0,w,c
  3301   00112A  5018               	movf	(___lomod@divisor+6)^0,w,c
  3302   00112C  5810               	subwfb	(___lomod@dividend+6)^0,w,c
  3303   00112E  5019               	movf	(___lomod@divisor+7)^0,w,c
  3304   001130  5811               	subwfb	(___lomod@dividend+7)^0,w,c
  3305   001132  A0D8               	btfss	status,0,c
  3306   001134  D010               	goto	l2177
  3307   001136  5012               	movf	___lomod@divisor^0,w,c
  3308   001138  5E0A               	subwf	___lomod@dividend^0,f,c
  3309   00113A  5013               	movf	(___lomod@divisor+1)^0,w,c
  3310   00113C  5A0B               	subwfb	(___lomod@dividend+1)^0,f,c
  3311   00113E  5014               	movf	(___lomod@divisor+2)^0,w,c
  3312   001140  5A0C               	subwfb	(___lomod@dividend+2)^0,f,c
  3313   001142  5015               	movf	(___lomod@divisor+3)^0,w,c
  3314   001144  5A0D               	subwfb	(___lomod@dividend+3)^0,f,c
  3315   001146  5016               	movf	(___lomod@divisor+4)^0,w,c
  3316   001148  5A0E               	subwfb	(___lomod@dividend+4)^0,f,c
  3317   00114A  5017               	movf	(___lomod@divisor+5)^0,w,c
  3318   00114C  5A0F               	subwfb	(___lomod@dividend+5)^0,f,c
  3319   00114E  5018               	movf	(___lomod@divisor+6)^0,w,c
  3320   001150  5A10               	subwfb	(___lomod@dividend+6)^0,f,c
  3321   001152  5019               	movf	(___lomod@divisor+7)^0,w,c
  3322   001154  5A11               	subwfb	(___lomod@dividend+7)^0,f,c
  3323   001156                     l2177:
  3324   001156  90D8               	bcf	status,0,c
  3325   001158  3219               	rrcf	(___lomod@divisor+7)^0,f,c
  3326   00115A  3218               	rrcf	(___lomod@divisor+6)^0,f,c
  3327   00115C  3217               	rrcf	(___lomod@divisor+5)^0,f,c
  3328   00115E  3216               	rrcf	(___lomod@divisor+4)^0,f,c
  3329   001160  3215               	rrcf	(___lomod@divisor+3)^0,f,c
  3330   001162  3214               	rrcf	(___lomod@divisor+2)^0,f,c
  3331   001164  3213               	rrcf	(___lomod@divisor+1)^0,f,c
  3332   001166  3212               	rrcf	___lomod@divisor^0,f,c
  3333   001168  2E1A               	decfsz	___lomod@counter^0,f,c
  3334   00116A  D7D3               	goto	u1200
  3335   00116C                     l807:
  3336   00116C  C00A  F00A         	movff	___lomod@dividend,?___lomod
  3337   001170  C00B  F00B         	movff	___lomod@dividend+1,?___lomod+1
  3338   001174  C00C  F00C         	movff	___lomod@dividend+2,?___lomod+2
  3339   001178  C00D  F00D         	movff	___lomod@dividend+3,?___lomod+3
  3340   00117C  C00E  F00E         	movff	___lomod@dividend+4,?___lomod+4
  3341   001180  C00F  F00F         	movff	___lomod@dividend+5,?___lomod+5
  3342   001184  C010  F010         	movff	___lomod@dividend+6,?___lomod+6
  3343   001188  C011  F011         	movff	___lomod@dividend+7,?___lomod+7
  3344   00118C  0012               	return		;funcret
  3345   00118E                     __end_of___lomod:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function ___lodiv *****************
  3349 ;; Defined at:
  3350 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  dividend        8    9[COMRAM] unsigned long long 
  3353 ;;  divisor         8   17[COMRAM] unsigned long long 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  quotient        8   25[COMRAM] unsigned long long 
  3356 ;;  counter         1   33[COMRAM] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  8    9[COMRAM] unsigned long long 
  3359 ;; Registers used:
  3360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3366 ;;      Params:        16       0       0       0       0       0       0
  3367 ;;      Locals:         9       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0
  3369 ;;      Totals:        25       0       0       0       0       0       0
  3370 ;;Total ram usage:       25 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 4
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_utoa
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text6
  3381   000F46                     __ptext6:
  3382                           	callstack 0
  3383   000F46                     ___lodiv:
  3384                           	callstack 22
  3385                           
  3386                           ;incstack = 0
  3387   000F46  EE20  F01A         	lfsr	2,___lodiv@quotient
  3388   000F4A  0E07               	movlw	7
  3389   000F4C                     u1151:
  3390   000F4C  6ADE               	clrf	postinc2,c
  3391   000F4E  06E8               	decf	wreg,f,c
  3392   000F50  E2FD               	bc	u1151
  3393   000F52  5012               	movf	___lodiv@divisor^0,w,c
  3394   000F54  1013               	iorwf	(___lodiv@divisor+1)^0,w,c
  3395   000F56  1014               	iorwf	(___lodiv@divisor+2)^0,w,c
  3396   000F58  1015               	iorwf	(___lodiv@divisor+3)^0,w,c
  3397   000F5A  1016               	iorwf	(___lodiv@divisor+4)^0,w,c
  3398   000F5C  1017               	iorwf	(___lodiv@divisor+5)^0,w,c
  3399   000F5E  1018               	iorwf	(___lodiv@divisor+6)^0,w,c
  3400   000F60  1019               	iorwf	(___lodiv@divisor+7)^0,w,c
  3401   000F62  B4D8               	btfsc	status,2,c
  3402   000F64  D046               	goto	l797
  3403   000F66  0E01               	movlw	1
  3404   000F68  6E22               	movwf	___lodiv@counter^0,c
  3405   000F6A  D00A               	goto	l2151
  3406   000F6C                     l2149:
  3407   000F6C  90D8               	bcf	status,0,c
  3408   000F6E  3612               	rlcf	___lodiv@divisor^0,f,c
  3409   000F70  3613               	rlcf	(___lodiv@divisor+1)^0,f,c
  3410   000F72  3614               	rlcf	(___lodiv@divisor+2)^0,f,c
  3411   000F74  3615               	rlcf	(___lodiv@divisor+3)^0,f,c
  3412   000F76  3616               	rlcf	(___lodiv@divisor+4)^0,f,c
  3413   000F78  3617               	rlcf	(___lodiv@divisor+5)^0,f,c
  3414   000F7A  3618               	rlcf	(___lodiv@divisor+6)^0,f,c
  3415   000F7C  3619               	rlcf	(___lodiv@divisor+7)^0,f,c
  3416   000F7E  2A22               	incf	___lodiv@counter^0,f,c
  3417   000F80                     l2151:
  3418   000F80  AE19               	btfss	(___lodiv@divisor+7)^0,7,c
  3419   000F82  D7F4               	goto	l2149
  3420   000F84                     u1170:
  3421   000F84  90D8               	bcf	status,0,c
  3422   000F86  361A               	rlcf	___lodiv@quotient^0,f,c
  3423   000F88  361B               	rlcf	(___lodiv@quotient+1)^0,f,c
  3424   000F8A  361C               	rlcf	(___lodiv@quotient+2)^0,f,c
  3425   000F8C  361D               	rlcf	(___lodiv@quotient+3)^0,f,c
  3426   000F8E  361E               	rlcf	(___lodiv@quotient+4)^0,f,c
  3427   000F90  361F               	rlcf	(___lodiv@quotient+5)^0,f,c
  3428   000F92  3620               	rlcf	(___lodiv@quotient+6)^0,f,c
  3429   000F94  3621               	rlcf	(___lodiv@quotient+7)^0,f,c
  3430   000F96  5012               	movf	___lodiv@divisor^0,w,c
  3431   000F98  5C0A               	subwf	___lodiv@dividend^0,w,c
  3432   000F9A  5013               	movf	(___lodiv@divisor+1)^0,w,c
  3433   000F9C  580B               	subwfb	(___lodiv@dividend+1)^0,w,c
  3434   000F9E  5014               	movf	(___lodiv@divisor+2)^0,w,c
  3435   000FA0  580C               	subwfb	(___lodiv@dividend+2)^0,w,c
  3436   000FA2  5015               	movf	(___lodiv@divisor+3)^0,w,c
  3437   000FA4  580D               	subwfb	(___lodiv@dividend+3)^0,w,c
  3438   000FA6  5016               	movf	(___lodiv@divisor+4)^0,w,c
  3439   000FA8  580E               	subwfb	(___lodiv@dividend+4)^0,w,c
  3440   000FAA  5017               	movf	(___lodiv@divisor+5)^0,w,c
  3441   000FAC  580F               	subwfb	(___lodiv@dividend+5)^0,w,c
  3442   000FAE  5018               	movf	(___lodiv@divisor+6)^0,w,c
  3443   000FB0  5810               	subwfb	(___lodiv@dividend+6)^0,w,c
  3444   000FB2  5019               	movf	(___lodiv@divisor+7)^0,w,c
  3445   000FB4  5811               	subwfb	(___lodiv@dividend+7)^0,w,c
  3446   000FB6  A0D8               	btfss	status,0,c
  3447   000FB8  D011               	goto	l2161
  3448   000FBA  5012               	movf	___lodiv@divisor^0,w,c
  3449   000FBC  5E0A               	subwf	___lodiv@dividend^0,f,c
  3450   000FBE  5013               	movf	(___lodiv@divisor+1)^0,w,c
  3451   000FC0  5A0B               	subwfb	(___lodiv@dividend+1)^0,f,c
  3452   000FC2  5014               	movf	(___lodiv@divisor+2)^0,w,c
  3453   000FC4  5A0C               	subwfb	(___lodiv@dividend+2)^0,f,c
  3454   000FC6  5015               	movf	(___lodiv@divisor+3)^0,w,c
  3455   000FC8  5A0D               	subwfb	(___lodiv@dividend+3)^0,f,c
  3456   000FCA  5016               	movf	(___lodiv@divisor+4)^0,w,c
  3457   000FCC  5A0E               	subwfb	(___lodiv@dividend+4)^0,f,c
  3458   000FCE  5017               	movf	(___lodiv@divisor+5)^0,w,c
  3459   000FD0  5A0F               	subwfb	(___lodiv@dividend+5)^0,f,c
  3460   000FD2  5018               	movf	(___lodiv@divisor+6)^0,w,c
  3461   000FD4  5A10               	subwfb	(___lodiv@dividend+6)^0,f,c
  3462   000FD6  5019               	movf	(___lodiv@divisor+7)^0,w,c
  3463   000FD8  5A11               	subwfb	(___lodiv@dividend+7)^0,f,c
  3464   000FDA  801A               	bsf	___lodiv@quotient^0,0,c
  3465   000FDC                     l2161:
  3466   000FDC  90D8               	bcf	status,0,c
  3467   000FDE  3219               	rrcf	(___lodiv@divisor+7)^0,f,c
  3468   000FE0  3218               	rrcf	(___lodiv@divisor+6)^0,f,c
  3469   000FE2  3217               	rrcf	(___lodiv@divisor+5)^0,f,c
  3470   000FE4  3216               	rrcf	(___lodiv@divisor+4)^0,f,c
  3471   000FE6  3215               	rrcf	(___lodiv@divisor+3)^0,f,c
  3472   000FE8  3214               	rrcf	(___lodiv@divisor+2)^0,f,c
  3473   000FEA  3213               	rrcf	(___lodiv@divisor+1)^0,f,c
  3474   000FEC  3212               	rrcf	___lodiv@divisor^0,f,c
  3475   000FEE  2E22               	decfsz	___lodiv@counter^0,f,c
  3476   000FF0  D7C9               	goto	u1170
  3477   000FF2                     l797:
  3478   000FF2  C01A  F00A         	movff	___lodiv@quotient,?___lodiv
  3479   000FF6  C01B  F00B         	movff	___lodiv@quotient+1,?___lodiv+1
  3480   000FFA  C01C  F00C         	movff	___lodiv@quotient+2,?___lodiv+2
  3481   000FFE  C01D  F00D         	movff	___lodiv@quotient+3,?___lodiv+3
  3482   001002  C01E  F00E         	movff	___lodiv@quotient+4,?___lodiv+4
  3483   001006  C01F  F00F         	movff	___lodiv@quotient+5,?___lodiv+5
  3484   00100A  C020  F010         	movff	___lodiv@quotient+6,?___lodiv+6
  3485   00100E  C021  F011         	movff	___lodiv@quotient+7,?___lodiv+7
  3486   001012  0012               	return		;funcret
  3487   001014                     __end_of___lodiv:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _dtoa *****************
  3491 ;; Defined at:
  3492 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  3495 ;;		 -> NULL(0), 
  3496 ;;  d               8   40[COMRAM] long long 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  n               8   62[COMRAM] long long 
  3499 ;;  i               2   70[COMRAM] int 
  3500 ;;  w               2   60[COMRAM] int 
  3501 ;;  p               2   58[COMRAM] int 
  3502 ;;  s               1   72[COMRAM] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3512 ;;      Params:        10       0       0       0       0       0       0
  3513 ;;      Locals:        17       0       0       0       0       0       0
  3514 ;;      Temps:          8       0       0       0       0       0       0
  3515 ;;      Totals:        35       0       0       0       0       0       0
  3516 ;;Total ram usage:       35 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 9
  3519 ;; This function calls:
  3520 ;;		___aodiv
  3521 ;;		___aomod
  3522 ;;		_abs
  3523 ;;		_pad
  3524 ;; This function is called by:
  3525 ;;		_vfpfcnvrt
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text7
  3530   000934                     __ptext7:
  3531                           	callstack 0
  3532   000934                     _dtoa:
  3533                           	callstack 18
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3536                           
  3537                           ;incstack = 0
  3538   000934  C029  F03F         	movff	dtoa@d,dtoa@n
  3539   000938  C02A  F040         	movff	dtoa@d+1,dtoa@n+1
  3540   00093C  C02B  F041         	movff	dtoa@d+2,dtoa@n+2
  3541   000940  C02C  F042         	movff	dtoa@d+3,dtoa@n+3
  3542   000944  C02D  F043         	movff	dtoa@d+4,dtoa@n+4
  3543   000948  C02E  F044         	movff	dtoa@d+5,dtoa@n+5
  3544   00094C  C02F  F045         	movff	dtoa@d+6,dtoa@n+6
  3545   000950  C030  F046         	movff	dtoa@d+7,dtoa@n+7
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3548   000954  AE46               	btfss	(dtoa@n+7)^0,7,c
  3549   000956  D002               	goto	u1280
  3550   000958  0E01               	movlw	1
  3551   00095A  D001               	goto	u1290
  3552   00095C                     u1280:
  3553   00095C  0E00               	movlw	0
  3554   00095E                     u1290:
  3555   00095E  6E49               	movwf	dtoa@s^0,c
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3558   000960  5049               	movf	dtoa@s^0,w,c
  3559   000962  B4D8               	btfsc	status,2,c
  3560   000964  D010               	goto	l2225
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3563   000966  1E46               	comf	(dtoa@n+7)^0,f,c
  3564   000968  1E45               	comf	(dtoa@n+6)^0,f,c
  3565   00096A  1E44               	comf	(dtoa@n+5)^0,f,c
  3566   00096C  1E43               	comf	(dtoa@n+4)^0,f,c
  3567   00096E  1E42               	comf	(dtoa@n+3)^0,f,c
  3568   000970  1E41               	comf	(dtoa@n+2)^0,f,c
  3569   000972  1E40               	comf	(dtoa@n+1)^0,f,c
  3570   000974  6C3F               	negf	dtoa@n^0,c
  3571   000976  0E00               	movlw	0
  3572   000978  2240               	addwfc	(dtoa@n+1)^0,f,c
  3573   00097A  2241               	addwfc	(dtoa@n+2)^0,f,c
  3574   00097C  2242               	addwfc	(dtoa@n+3)^0,f,c
  3575   00097E  2243               	addwfc	(dtoa@n+4)^0,f,c
  3576   000980  2244               	addwfc	(dtoa@n+5)^0,f,c
  3577   000982  2245               	addwfc	(dtoa@n+6)^0,f,c
  3578   000984  2246               	addwfc	(dtoa@n+7)^0,f,c
  3579   000986                     l2225:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3582   000986  BE4F               	btfsc	(_prec+1)^0,7,c
  3583   000988  D005               	goto	u1310
  3584   00098A  504F               	movf	(_prec+1)^0,w,c
  3585   00098C  E108               	bnz	l1082
  3586   00098E  044E               	decf	_prec^0,w,c
  3587   000990  B0D8               	btfsc	status,0,c
  3588   000992  D005               	goto	l1082
  3589   000994                     u1310:
  3590   000994  0E00               	movlw	0
  3591   000996  6E3C               	movwf	(dtoa@p+1)^0,c
  3592   000998  0E01               	movlw	1
  3593   00099A  6E3B               	movwf	dtoa@p^0,c
  3594   00099C  D004               	goto	l1084
  3595   00099E                     l1082:
  3596   00099E  C04E  F03B         	movff	_prec,dtoa@p
  3597   0009A2  C04F  F03C         	movff	_prec+1,dtoa@p+1
  3598   0009A6                     l1084:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3601   0009A6  C04C  F03D         	movff	_width,dtoa@w
  3602   0009AA  C04D  F03E         	movff	_width+1,dtoa@w+1
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3605   0009AE  5049               	movf	dtoa@s^0,w,c
  3606   0009B0  B4D8               	btfsc	status,2,c
  3607   0009B2  D010               	goto	l1085
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3610   0009B4  063D               	decf	dtoa@w^0,f,c
  3611   0009B6  A0D8               	btfss	status,0,c
  3612   0009B8  063E               	decf	(dtoa@w+1)^0,f,c
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3615   0009BA  5049               	movf	dtoa@s^0,w,c
  3616   0009BC  A4D8               	btfss	status,2,c
  3617   0009BE  D004               	goto	l2237
  3618   0009C0  0E00               	movlw	0
  3619   0009C2  6E3A               	movwf	(_dtoa$1458+1)^0,c
  3620   0009C4  0E2B               	movlw	43
  3621   0009C6  D003               	goto	L1
  3622   0009C8                     l2237:
  3623   0009C8  0E00               	movlw	0
  3624   0009CA  6E3A               	movwf	(_dtoa$1458+1)^0,c
  3625   0009CC  0E2D               	movlw	45
  3626   0009CE                     L1:
  3627   0009CE  6E39               	movwf	_dtoa$1458^0,c
  3628   0009D0  C039  F049         	movff	_dtoa$1458,dtoa@s
  3629   0009D4                     l1085:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3632   0009D4  0E00               	movlw	0
  3633   0009D6  6E48               	movwf	(dtoa@i+1)^0,c
  3634   0009D8  0E1F               	movlw	31
  3635   0009DA  6E47               	movwf	dtoa@i^0,c
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3638   0009DC  0E00               	movlw	0
  3639   0009DE  0100               	movlb	0	; () banked
  3640   0009E0  6FC8               	movwf	(_dbuf+31)& (0+255),b
  3641                           
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3643   0009E2  D07C               	goto	l2253
  3644   0009E4                     l2243:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3647   0009E4  0647               	decf	dtoa@i^0,f,c
  3648   0009E6  A0D8               	btfss	status,0,c
  3649   0009E8  0648               	decf	(dtoa@i+1)^0,f,c
  3650                           
  3651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3652   0009EA  0EA9               	movlw	low _dbuf
  3653   0009EC  2447               	addwf	dtoa@i^0,w,c
  3654   0009EE  6ED9               	movwf	fsr2l,c
  3655   0009F0  0E00               	movlw	high _dbuf
  3656   0009F2  2048               	addwfc	(dtoa@i+1)^0,w,c
  3657   0009F4  6EDA               	movwf	fsr2h,c
  3658   0009F6  C03F  F00A         	movff	dtoa@n,___aomod@dividend
  3659   0009FA  C040  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  3660   0009FE  C041  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  3661   000A02  C042  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  3662   000A06  C043  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  3663   000A0A  C044  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  3664   000A0E  C045  F010         	movff	dtoa@n+6,___aomod@dividend+6
  3665   000A12  C046  F011         	movff	dtoa@n+7,___aomod@dividend+7
  3666   000A16  0E0A               	movlw	10
  3667   000A18  6E12               	movwf	___aomod@divisor^0,c
  3668   000A1A  0E00               	movlw	0
  3669   000A1C  6E13               	movwf	(___aomod@divisor+1)^0,c
  3670   000A1E  0E00               	movlw	0
  3671   000A20  6E14               	movwf	(___aomod@divisor+2)^0,c
  3672   000A22  0E00               	movlw	0
  3673   000A24  6E15               	movwf	(___aomod@divisor+3)^0,c
  3674   000A26  0E00               	movlw	0
  3675   000A28  6E16               	movwf	(___aomod@divisor+4)^0,c
  3676   000A2A  0E00               	movlw	0
  3677   000A2C  6E17               	movwf	(___aomod@divisor+5)^0,c
  3678   000A2E  0E00               	movlw	0
  3679   000A30  6E18               	movwf	(___aomod@divisor+6)^0,c
  3680   000A32  0E00               	movlw	0
  3681   000A34  6E19               	movwf	(___aomod@divisor+7)^0,c
  3682   000A36  EC11  F007         	call	___aomod	;wreg free
  3683   000A3A  C00A  F031         	movff	?___aomod,??_dtoa
  3684   000A3E  C00B  F032         	movff	?___aomod+1,??_dtoa+1
  3685   000A42  C00C  F033         	movff	?___aomod+2,??_dtoa+2
  3686   000A46  C00D  F034         	movff	?___aomod+3,??_dtoa+3
  3687   000A4A  C00E  F035         	movff	?___aomod+4,??_dtoa+4
  3688   000A4E  C00F  F036         	movff	?___aomod+5,??_dtoa+5
  3689   000A52  C010  F037         	movff	?___aomod+6,??_dtoa+6
  3690   000A56  C011  F038         	movff	?___aomod+7,??_dtoa+7
  3691   000A5A  C031  F01C         	movff	??_dtoa,abs@a
  3692   000A5E  C032  F01D         	movff	??_dtoa+1,abs@a+1
  3693   000A62  ECB2  F00A         	call	_abs	;wreg free
  3694   000A66  501C               	movf	?_abs^0,w,c
  3695   000A68  0F30               	addlw	48
  3696   000A6A  6EDF               	movwf	indf2,c
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3699   000A6C  063B               	decf	dtoa@p^0,f,c
  3700   000A6E  A0D8               	btfss	status,0,c
  3701   000A70  063C               	decf	(dtoa@p+1)^0,f,c
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3704   000A72  063D               	decf	dtoa@w^0,f,c
  3705   000A74  A0D8               	btfss	status,0,c
  3706   000A76  063E               	decf	(dtoa@w+1)^0,f,c
  3707                           
  3708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3709   000A78  C03F  F00A         	movff	dtoa@n,___aodiv@dividend
  3710   000A7C  C040  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  3711   000A80  C041  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  3712   000A84  C042  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  3713   000A88  C043  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  3714   000A8C  C044  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  3715   000A90  C045  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  3716   000A94  C046  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  3717   000A98  0E0A               	movlw	10
  3718   000A9A  6E12               	movwf	___aodiv@divisor^0,c
  3719   000A9C  0E00               	movlw	0
  3720   000A9E  6E13               	movwf	(___aodiv@divisor+1)^0,c
  3721   000AA0  0E00               	movlw	0
  3722   000AA2  6E14               	movwf	(___aodiv@divisor+2)^0,c
  3723   000AA4  0E00               	movlw	0
  3724   000AA6  6E15               	movwf	(___aodiv@divisor+3)^0,c
  3725   000AA8  0E00               	movlw	0
  3726   000AAA  6E16               	movwf	(___aodiv@divisor+4)^0,c
  3727   000AAC  0E00               	movlw	0
  3728   000AAE  6E17               	movwf	(___aodiv@divisor+5)^0,c
  3729   000AB0  0E00               	movlw	0
  3730   000AB2  6E18               	movwf	(___aodiv@divisor+6)^0,c
  3731   000AB4  0E00               	movlw	0
  3732   000AB6  6E19               	movwf	(___aodiv@divisor+7)^0,c
  3733   000AB8  EC6D  F006         	call	___aodiv	;wreg free
  3734   000ABC  C00A  F03F         	movff	?___aodiv,dtoa@n
  3735   000AC0  C00B  F040         	movff	?___aodiv+1,dtoa@n+1
  3736   000AC4  C00C  F041         	movff	?___aodiv+2,dtoa@n+2
  3737   000AC8  C00D  F042         	movff	?___aodiv+3,dtoa@n+3
  3738   000ACC  C00E  F043         	movff	?___aodiv+4,dtoa@n+4
  3739   000AD0  C00F  F044         	movff	?___aodiv+5,dtoa@n+5
  3740   000AD4  C010  F045         	movff	?___aodiv+6,dtoa@n+6
  3741   000AD8  C011  F046         	movff	?___aodiv+7,dtoa@n+7
  3742   000ADC                     l2253:
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3745   000ADC  BE48               	btfsc	(dtoa@i+1)^0,7,c
  3746   000ADE  D016               	goto	u1360
  3747   000AE0  5048               	movf	(dtoa@i+1)^0,w,c
  3748   000AE2  E103               	bnz	u1340
  3749   000AE4  0447               	decf	dtoa@i^0,w,c
  3750   000AE6  A0D8               	btfss	status,0,c
  3751   000AE8  D011               	goto	u1360
  3752   000AEA                     u1340:
  3753   000AEA  503F               	movf	dtoa@n^0,w,c
  3754   000AEC  1040               	iorwf	(dtoa@n+1)^0,w,c
  3755   000AEE  1041               	iorwf	(dtoa@n+2)^0,w,c
  3756   000AF0  1042               	iorwf	(dtoa@n+3)^0,w,c
  3757   000AF2  1043               	iorwf	(dtoa@n+4)^0,w,c
  3758   000AF4  1044               	iorwf	(dtoa@n+5)^0,w,c
  3759   000AF6  1045               	iorwf	(dtoa@n+6)^0,w,c
  3760   000AF8  1046               	iorwf	(dtoa@n+7)^0,w,c
  3761   000AFA  A4D8               	btfss	status,2,c
  3762   000AFC  D773               	goto	l2243
  3763   000AFE  BE3C               	btfsc	(dtoa@p+1)^0,7,c
  3764   000B00  D005               	goto	u1360
  3765   000B02  503C               	movf	(dtoa@p+1)^0,w,c
  3766   000B04  E102               	bnz	u1361
  3767   000B06  043B               	decf	dtoa@p^0,w,c
  3768   000B08  B0D8               	btfsc	status,0,c
  3769   000B0A                     u1361:
  3770   000B0A  D76C               	goto	l2243
  3771   000B0C                     u1360:
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3774   000B0C  5049               	movf	dtoa@s^0,w,c
  3775   000B0E  B4D8               	btfsc	status,2,c
  3776   000B10  D00B               	goto	l2265
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3779   000B12  0647               	decf	dtoa@i^0,f,c
  3780   000B14  A0D8               	btfss	status,0,c
  3781   000B16  0648               	decf	(dtoa@i+1)^0,f,c
  3782                           
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3784   000B18  0EA9               	movlw	low _dbuf
  3785   000B1A  2447               	addwf	dtoa@i^0,w,c
  3786   000B1C  6ED9               	movwf	fsr2l,c
  3787   000B1E  0E00               	movlw	high _dbuf
  3788   000B20  2048               	addwfc	(dtoa@i+1)^0,w,c
  3789   000B22  6EDA               	movwf	fsr2h,c
  3790   000B24  C049  FFDF         	movff	dtoa@s,indf2
  3791   000B28                     l2265:
  3792                           
  3793                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3794   000B28  C027  F01C         	movff	dtoa@fp,pad@fp
  3795   000B2C  C028  F01D         	movff	dtoa@fp+1,pad@fp+1
  3796   000B30  0EA9               	movlw	low _dbuf
  3797   000B32  2447               	addwf	dtoa@i^0,w,c
  3798   000B34  6E1E               	movwf	pad@buf^0,c
  3799   000B36  0E00               	movlw	high _dbuf
  3800   000B38  2048               	addwfc	(dtoa@i+1)^0,w,c
  3801   000B3A  6E1F               	movwf	(pad@buf+1)^0,c
  3802   000B3C  C03D  F020         	movff	dtoa@w,pad@p
  3803   000B40  C03E  F021         	movff	dtoa@w+1,pad@p+1
  3804   000B44  EC8E  F009         	call	_pad	;wreg free
  3805   000B48  0012               	return		;funcret
  3806   000B4A                     __end_of_dtoa:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _pad *****************
  3810 ;; Defined at:
  3811 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3814 ;;		 -> NULL(0), 
  3815 ;;  buf             2   29[COMRAM] PTR unsigned char 
  3816 ;;		 -> dbuf(32), 
  3817 ;;  p               2   31[COMRAM] int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  w               2   36[COMRAM] int 
  3820 ;;  i               2   34[COMRAM] int 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      void 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3830 ;;      Params:         6       0       0       0       0       0       0
  3831 ;;      Locals:         4       0       0       0       0       0       0
  3832 ;;      Temps:          1       0       0       0       0       0       0
  3833 ;;      Totals:        11       0       0       0       0       0       0
  3834 ;;Total ram usage:       11 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 8
  3837 ;; This function calls:
  3838 ;;		_fputc
  3839 ;;		_fputs
  3840 ;; This function is called by:
  3841 ;;		_dtoa
  3842 ;;		_utoa
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text8
  3847   00131C                     __ptext8:
  3848                           	callstack 0
  3849   00131C                     _pad:
  3850                           	callstack 18
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3853                           
  3854                           ;incstack = 0
  3855   00131C  BE21               	btfsc	(pad@p+1)^0,7,c
  3856   00131E  D005               	goto	l2185
  3857   001320  C020  F025         	movff	pad@p,pad@w
  3858   001324  C021  F026         	movff	pad@p+1,pad@w+1
  3859   001328  D004               	goto	l1059
  3860   00132A                     l2185:
  3861   00132A  0E00               	movlw	0
  3862   00132C  6E26               	movwf	(pad@w+1)^0,c
  3863   00132E  0E00               	movlw	0
  3864   001330  6E25               	movwf	pad@w^0,c
  3865   001332                     l1059:
  3866                           
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3868   001332  0E00               	movlw	0
  3869   001334  6E24               	movwf	(pad@i+1)^0,c
  3870   001336  0E00               	movlw	0
  3871   001338  6E23               	movwf	pad@i^0,c
  3872                           
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3874   00133A  D00C               	goto	l2191
  3875   00133C                     l2187:
  3876                           
  3877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3878   00133C  0E00               	movlw	0
  3879   00133E  6E0D               	movwf	(fputc@c+1)^0,c
  3880   001340  0E20               	movlw	32
  3881   001342  6E0C               	movwf	fputc@c^0,c
  3882   001344  C01C  F00E         	movff	pad@fp,fputc@fp
  3883   001348  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  3884   00134C  EC58  F009         	call	_fputc	;wreg free
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3887   001350  4A23               	infsnz	pad@i^0,f,c
  3888   001352  2A24               	incf	(pad@i+1)^0,f,c
  3889   001354                     l2191:
  3890                           
  3891                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3892   001354  5025               	movf	pad@w^0,w,c
  3893   001356  5C23               	subwf	pad@i^0,w,c
  3894   001358  5024               	movf	(pad@i+1)^0,w,c
  3895   00135A  0A80               	xorlw	128
  3896   00135C  6E22               	movwf	??_pad^0,c
  3897   00135E  5026               	movf	(pad@w+1)^0,w,c
  3898   001360  0A80               	xorlw	128
  3899   001362  5822               	subwfb	??_pad^0,w,c
  3900   001364  A0D8               	btfss	status,0,c
  3901   001366  D7EA               	goto	l2187
  3902                           
  3903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3904   001368  C01E  F015         	movff	pad@buf,fputs@s
  3905   00136C  C01F  F016         	movff	pad@buf+1,fputs@s+1
  3906   001370  C01C  F017         	movff	pad@fp,fputs@fp
  3907   001374  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  3908   001378  EC7B  F00A         	call	_fputs	;wreg free
  3909   00137C  0012               	return		;funcret
  3910   00137E                     __end_of_pad:
  3911                           	callstack 0
  3912                           
  3913 ;; *************** function _fputs *****************
  3914 ;; Defined at:
  3915 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  s               2   20[COMRAM] PTR const unsigned char 
  3918 ;;		 -> dbuf(32), 
  3919 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3920 ;;		 -> NULL(0), 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  i               2   25[COMRAM] int 
  3923 ;;  c               1   24[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  2   20[COMRAM] int 
  3926 ;; Registers used:
  3927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3933 ;;      Params:         4       0       0       0       0       0       0
  3934 ;;      Locals:         3       0       0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0
  3936 ;;      Totals:         7       0       0       0       0       0       0
  3937 ;;Total ram usage:        7 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 7
  3940 ;; This function calls:
  3941 ;;		_fputc
  3942 ;; This function is called by:
  3943 ;;		_pad
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text9
  3948   0014F6                     __ptext9:
  3949                           	callstack 0
  3950   0014F6                     _fputs:
  3951                           	callstack 18
  3952                           
  3953                           ;incstack = 0
  3954   0014F6  0E00               	movlw	0
  3955   0014F8  6E1B               	movwf	(fputs@i+1)^0,c
  3956   0014FA  0E00               	movlw	0
  3957   0014FC  6E1A               	movwf	fputs@i^0,c
  3958   0014FE  D00B               	goto	l2061
  3959   001500                     l2057:
  3960   001500  C019  F00C         	movff	fputs@c,fputc@c
  3961   001504  6A0D               	clrf	(fputc@c+1)^0,c
  3962   001506  C017  F00E         	movff	fputs@fp,fputc@fp
  3963   00150A  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  3964   00150E  EC58  F009         	call	_fputc	;wreg free
  3965   001512  4A1A               	infsnz	fputs@i^0,f,c
  3966   001514  2A1B               	incf	(fputs@i+1)^0,f,c
  3967   001516                     l2061:
  3968   001516  501A               	movf	fputs@i^0,w,c
  3969   001518  2415               	addwf	fputs@s^0,w,c
  3970   00151A  6ED9               	movwf	fsr2l,c
  3971   00151C  501B               	movf	(fputs@i+1)^0,w,c
  3972   00151E  2016               	addwfc	(fputs@s+1)^0,w,c
  3973   001520  6EDA               	movwf	fsr2h,c
  3974   001522  50DF               	movf	indf2,w,c
  3975   001524  6E19               	movwf	fputs@c^0,c
  3976   001526  5019               	movf	fputs@c^0,w,c
  3977   001528  B4D8               	btfsc	status,2,c
  3978   00152A  0012               	return	
  3979   00152C  D7E9               	goto	l2057
  3980   00152E                     __end_of_fputs:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _abs *****************
  3984 ;; Defined at:
  3985 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  a               2   27[COMRAM] int 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;		None
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  2   27[COMRAM] int 
  3992 ;; Registers used:
  3993 ;;		wreg, status,2, status,0
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3999 ;;      Params:         2       0       0       0       0       0       0
  4000 ;;      Locals:         0       0       0       0       0       0       0
  4001 ;;      Temps:          2       0       0       0       0       0       0
  4002 ;;      Totals:         4       0       0       0       0       0       0
  4003 ;;Total ram usage:        4 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 4
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_dtoa
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text10
  4014   001564                     __ptext10:
  4015                           	callstack 0
  4016   001564                     _abs:
  4017                           	callstack 22
  4018                           
  4019                           ;incstack = 0
  4020   001564  BE1D               	btfsc	(abs@a+1)^0,7,c
  4021   001566  D005               	goto	u1240
  4022   001568  501D               	movf	(abs@a+1)^0,w,c
  4023   00156A  E110               	bnz	l1132
  4024   00156C  041C               	decf	abs@a^0,w,c
  4025   00156E  B0D8               	btfsc	status,0,c
  4026   001570  D00D               	goto	l1132
  4027   001572                     u1240:
  4028   001572  C01C  F01E         	movff	abs@a,??_abs
  4029   001576  C01D  F01F         	movff	abs@a+1,??_abs+1
  4030   00157A  1E1E               	comf	??_abs^0,f,c
  4031   00157C  1E1F               	comf	(??_abs+1)^0,f,c
  4032   00157E  4A1E               	infsnz	??_abs^0,f,c
  4033   001580  2A1F               	incf	(??_abs+1)^0,f,c
  4034   001582  C01E  F01C         	movff	??_abs,?_abs
  4035   001586  C01F  F01D         	movff	??_abs+1,?_abs+1
  4036   00158A  0012               	return	
  4037   00158C                     l1132:
  4038   00158C  C01C  F01C         	movff	abs@a,?_abs
  4039   001590  C01D  F01D         	movff	abs@a+1,?_abs+1
  4040   001594  0012               	return		;funcret
  4041   001596                     __end_of_abs:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function ___aomod *****************
  4045 ;; Defined at:
  4046 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  dividend        8    9[COMRAM] long long 
  4049 ;;  divisor         8   17[COMRAM] long long 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  sign            1   26[COMRAM] unsigned char 
  4052 ;;  counter         1   25[COMRAM] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  8    9[COMRAM] long long 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4062 ;;      Params:        16       0       0       0       0       0       0
  4063 ;;      Locals:         2       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0
  4065 ;;      Totals:        18       0       0       0       0       0       0
  4066 ;;Total ram usage:       18 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 4
  4069 ;; This function calls:
  4070 ;;		Nothing
  4071 ;; This function is called by:
  4072 ;;		_dtoa
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text11
  4077   000E22                     __ptext11:
  4078                           	callstack 0
  4079   000E22                     ___aomod:
  4080                           	callstack 22
  4081                           
  4082                           ;incstack = 0
  4083   000E22  0E00               	movlw	0
  4084   000E24  6E1B               	movwf	___aomod@sign^0,c
  4085   000E26  AE11               	btfss	(___aomod@dividend+7)^0,7,c
  4086   000E28  D012               	goto	l2115
  4087   000E2A  1E11               	comf	(___aomod@dividend+7)^0,f,c
  4088   000E2C  1E10               	comf	(___aomod@dividend+6)^0,f,c
  4089   000E2E  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  4090   000E30  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  4091   000E32  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  4092   000E34  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  4093   000E36  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  4094   000E38  6C0A               	negf	___aomod@dividend^0,c
  4095   000E3A  0E00               	movlw	0
  4096   000E3C  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  4097   000E3E  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  4098   000E40  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  4099   000E42  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  4100   000E44  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  4101   000E46  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  4102   000E48  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  4103   000E4A  0E01               	movlw	1
  4104   000E4C  6E1B               	movwf	___aomod@sign^0,c
  4105   000E4E                     l2115:
  4106   000E4E  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  4107   000E50  D010               	goto	l2119
  4108   000E52  1E19               	comf	(___aomod@divisor+7)^0,f,c
  4109   000E54  1E18               	comf	(___aomod@divisor+6)^0,f,c
  4110   000E56  1E17               	comf	(___aomod@divisor+5)^0,f,c
  4111   000E58  1E16               	comf	(___aomod@divisor+4)^0,f,c
  4112   000E5A  1E15               	comf	(___aomod@divisor+3)^0,f,c
  4113   000E5C  1E14               	comf	(___aomod@divisor+2)^0,f,c
  4114   000E5E  1E13               	comf	(___aomod@divisor+1)^0,f,c
  4115   000E60  6C12               	negf	___aomod@divisor^0,c
  4116   000E62  0E00               	movlw	0
  4117   000E64  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  4118   000E66  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  4119   000E68  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  4120   000E6A  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  4121   000E6C  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  4122   000E6E  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  4123   000E70  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  4124   000E72                     l2119:
  4125   000E72  5012               	movf	___aomod@divisor^0,w,c
  4126   000E74  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  4127   000E76  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  4128   000E78  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  4129   000E7A  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  4130   000E7C  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  4131   000E7E  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  4132   000E80  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  4133   000E82  B4D8               	btfsc	status,2,c
  4134   000E84  D03C               	goto	l2135
  4135   000E86  0E01               	movlw	1
  4136   000E88  6E1A               	movwf	___aomod@counter^0,c
  4137   000E8A  D00A               	goto	l2125
  4138   000E8C                     l2123:
  4139   000E8C  90D8               	bcf	status,0,c
  4140   000E8E  3612               	rlcf	___aomod@divisor^0,f,c
  4141   000E90  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  4142   000E92  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  4143   000E94  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  4144   000E96  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  4145   000E98  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  4146   000E9A  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  4147   000E9C  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  4148   000E9E  2A1A               	incf	___aomod@counter^0,f,c
  4149   000EA0                     l2125:
  4150   000EA0  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  4151   000EA2  D7F4               	goto	l2123
  4152   000EA4                     u1120:
  4153   000EA4  5012               	movf	___aomod@divisor^0,w,c
  4154   000EA6  5C0A               	subwf	___aomod@dividend^0,w,c
  4155   000EA8  5013               	movf	(___aomod@divisor+1)^0,w,c
  4156   000EAA  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  4157   000EAC  5014               	movf	(___aomod@divisor+2)^0,w,c
  4158   000EAE  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  4159   000EB0  5015               	movf	(___aomod@divisor+3)^0,w,c
  4160   000EB2  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  4161   000EB4  5016               	movf	(___aomod@divisor+4)^0,w,c
  4162   000EB6  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  4163   000EB8  5017               	movf	(___aomod@divisor+5)^0,w,c
  4164   000EBA  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  4165   000EBC  5018               	movf	(___aomod@divisor+6)^0,w,c
  4166   000EBE  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  4167   000EC0  5019               	movf	(___aomod@divisor+7)^0,w,c
  4168   000EC2  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  4169   000EC4  A0D8               	btfss	status,0,c
  4170   000EC6  D010               	goto	l2131
  4171   000EC8  5012               	movf	___aomod@divisor^0,w,c
  4172   000ECA  5E0A               	subwf	___aomod@dividend^0,f,c
  4173   000ECC  5013               	movf	(___aomod@divisor+1)^0,w,c
  4174   000ECE  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  4175   000ED0  5014               	movf	(___aomod@divisor+2)^0,w,c
  4176   000ED2  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  4177   000ED4  5015               	movf	(___aomod@divisor+3)^0,w,c
  4178   000ED6  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  4179   000ED8  5016               	movf	(___aomod@divisor+4)^0,w,c
  4180   000EDA  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  4181   000EDC  5017               	movf	(___aomod@divisor+5)^0,w,c
  4182   000EDE  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  4183   000EE0  5018               	movf	(___aomod@divisor+6)^0,w,c
  4184   000EE2  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  4185   000EE4  5019               	movf	(___aomod@divisor+7)^0,w,c
  4186   000EE6  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  4187   000EE8                     l2131:
  4188   000EE8  90D8               	bcf	status,0,c
  4189   000EEA  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  4190   000EEC  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  4191   000EEE  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  4192   000EF0  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  4193   000EF2  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  4194   000EF4  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  4195   000EF6  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  4196   000EF8  3212               	rrcf	___aomod@divisor^0,f,c
  4197   000EFA  2E1A               	decfsz	___aomod@counter^0,f,c
  4198   000EFC  D7D3               	goto	u1120
  4199   000EFE                     l2135:
  4200   000EFE  501B               	movf	___aomod@sign^0,w,c
  4201   000F00  B4D8               	btfsc	status,2,c
  4202   000F02  D010               	goto	l2139
  4203   000F04  1E11               	comf	(___aomod@dividend+7)^0,f,c
  4204   000F06  1E10               	comf	(___aomod@dividend+6)^0,f,c
  4205   000F08  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  4206   000F0A  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  4207   000F0C  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  4208   000F0E  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  4209   000F10  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  4210   000F12  6C0A               	negf	___aomod@dividend^0,c
  4211   000F14  0E00               	movlw	0
  4212   000F16  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  4213   000F18  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  4214   000F1A  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  4215   000F1C  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  4216   000F1E  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  4217   000F20  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  4218   000F22  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  4219   000F24                     l2139:
  4220   000F24  C00A  F00A         	movff	___aomod@dividend,?___aomod
  4221   000F28  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  4222   000F2C  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  4223   000F30  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  4224   000F34  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  4225   000F38  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  4226   000F3C  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  4227   000F40  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  4228   000F44  0012               	return		;funcret
  4229   000F46                     __end_of___aomod:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function ___aodiv *****************
  4233 ;; Defined at:
  4234 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  dividend        8    9[COMRAM] long long 
  4237 ;;  divisor         8   17[COMRAM] long long 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  quotient        8   27[COMRAM] long long 
  4240 ;;  sign            1   26[COMRAM] unsigned char 
  4241 ;;  counter         1   25[COMRAM] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  8    9[COMRAM] long long 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4251 ;;      Params:        16       0       0       0       0       0       0
  4252 ;;      Locals:        10       0       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0
  4254 ;;      Totals:        26       0       0       0       0       0       0
  4255 ;;Total ram usage:       26 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 4
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_dtoa
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text12
  4266   000CDA                     __ptext12:
  4267                           	callstack 0
  4268   000CDA                     ___aodiv:
  4269                           	callstack 22
  4270                           
  4271                           ;incstack = 0
  4272   000CDA  0E00               	movlw	0
  4273   000CDC  6E1B               	movwf	___aodiv@sign^0,c
  4274   000CDE  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  4275   000CE0  D012               	goto	l2071
  4276   000CE2  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  4277   000CE4  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  4278   000CE6  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  4279   000CE8  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  4280   000CEA  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  4281   000CEC  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  4282   000CEE  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  4283   000CF0  6C12               	negf	___aodiv@divisor^0,c
  4284   000CF2  0E00               	movlw	0
  4285   000CF4  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  4286   000CF6  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  4287   000CF8  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  4288   000CFA  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  4289   000CFC  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  4290   000CFE  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  4291   000D00  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  4292   000D02  0E01               	movlw	1
  4293   000D04  6E1B               	movwf	___aodiv@sign^0,c
  4294   000D06                     l2071:
  4295   000D06  AE11               	btfss	(___aodiv@dividend+7)^0,7,c
  4296   000D08  D012               	goto	l2077
  4297   000D0A  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  4298   000D0C  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  4299   000D0E  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  4300   000D10  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  4301   000D12  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  4302   000D14  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  4303   000D16  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  4304   000D18  6C0A               	negf	___aodiv@dividend^0,c
  4305   000D1A  0E00               	movlw	0
  4306   000D1C  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  4307   000D1E  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  4308   000D20  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  4309   000D22  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  4310   000D24  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  4311   000D26  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  4312   000D28  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  4313   000D2A  0E01               	movlw	1
  4314   000D2C  1A1B               	xorwf	___aodiv@sign^0,f,c
  4315   000D2E                     l2077:
  4316   000D2E  EE20  F01C         	lfsr	2,___aodiv@quotient
  4317   000D32  0E07               	movlw	7
  4318   000D34                     u1041:
  4319   000D34  6ADE               	clrf	postinc2,c
  4320   000D36  06E8               	decf	wreg,f,c
  4321   000D38  E2FD               	bc	u1041
  4322   000D3A  5012               	movf	___aodiv@divisor^0,w,c
  4323   000D3C  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  4324   000D3E  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  4325   000D40  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  4326   000D42  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  4327   000D44  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  4328   000D46  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  4329   000D48  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  4330   000D4A  B4D8               	btfsc	status,2,c
  4331   000D4C  D046               	goto	l2099
  4332   000D4E  0E01               	movlw	1
  4333   000D50  6E1A               	movwf	___aodiv@counter^0,c
  4334   000D52  D00A               	goto	l2085
  4335   000D54                     l2083:
  4336   000D54  90D8               	bcf	status,0,c
  4337   000D56  3612               	rlcf	___aodiv@divisor^0,f,c
  4338   000D58  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  4339   000D5A  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  4340   000D5C  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  4341   000D5E  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  4342   000D60  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  4343   000D62  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  4344   000D64  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  4345   000D66  2A1A               	incf	___aodiv@counter^0,f,c
  4346   000D68                     l2085:
  4347   000D68  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  4348   000D6A  D7F4               	goto	l2083
  4349   000D6C                     u1060:
  4350   000D6C  90D8               	bcf	status,0,c
  4351   000D6E  361C               	rlcf	___aodiv@quotient^0,f,c
  4352   000D70  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  4353   000D72  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  4354   000D74  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  4355   000D76  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  4356   000D78  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  4357   000D7A  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  4358   000D7C  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  4359   000D7E  5012               	movf	___aodiv@divisor^0,w,c
  4360   000D80  5C0A               	subwf	___aodiv@dividend^0,w,c
  4361   000D82  5013               	movf	(___aodiv@divisor+1)^0,w,c
  4362   000D84  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  4363   000D86  5014               	movf	(___aodiv@divisor+2)^0,w,c
  4364   000D88  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  4365   000D8A  5015               	movf	(___aodiv@divisor+3)^0,w,c
  4366   000D8C  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  4367   000D8E  5016               	movf	(___aodiv@divisor+4)^0,w,c
  4368   000D90  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  4369   000D92  5017               	movf	(___aodiv@divisor+5)^0,w,c
  4370   000D94  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  4371   000D96  5018               	movf	(___aodiv@divisor+6)^0,w,c
  4372   000D98  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  4373   000D9A  5019               	movf	(___aodiv@divisor+7)^0,w,c
  4374   000D9C  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  4375   000D9E  A0D8               	btfss	status,0,c
  4376   000DA0  D011               	goto	l2095
  4377   000DA2  5012               	movf	___aodiv@divisor^0,w,c
  4378   000DA4  5E0A               	subwf	___aodiv@dividend^0,f,c
  4379   000DA6  5013               	movf	(___aodiv@divisor+1)^0,w,c
  4380   000DA8  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  4381   000DAA  5014               	movf	(___aodiv@divisor+2)^0,w,c
  4382   000DAC  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  4383   000DAE  5015               	movf	(___aodiv@divisor+3)^0,w,c
  4384   000DB0  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  4385   000DB2  5016               	movf	(___aodiv@divisor+4)^0,w,c
  4386   000DB4  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  4387   000DB6  5017               	movf	(___aodiv@divisor+5)^0,w,c
  4388   000DB8  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  4389   000DBA  5018               	movf	(___aodiv@divisor+6)^0,w,c
  4390   000DBC  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  4391   000DBE  5019               	movf	(___aodiv@divisor+7)^0,w,c
  4392   000DC0  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  4393   000DC2  801C               	bsf	___aodiv@quotient^0,0,c
  4394   000DC4                     l2095:
  4395   000DC4  90D8               	bcf	status,0,c
  4396   000DC6  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  4397   000DC8  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  4398   000DCA  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  4399   000DCC  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  4400   000DCE  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  4401   000DD0  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  4402   000DD2  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  4403   000DD4  3212               	rrcf	___aodiv@divisor^0,f,c
  4404   000DD6  2E1A               	decfsz	___aodiv@counter^0,f,c
  4405   000DD8  D7C9               	goto	u1060
  4406   000DDA                     l2099:
  4407   000DDA  501B               	movf	___aodiv@sign^0,w,c
  4408   000DDC  B4D8               	btfsc	status,2,c
  4409   000DDE  D010               	goto	l2103
  4410   000DE0  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  4411   000DE2  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  4412   000DE4  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  4413   000DE6  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  4414   000DE8  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  4415   000DEA  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  4416   000DEC  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  4417   000DEE  6C1C               	negf	___aodiv@quotient^0,c
  4418   000DF0  0E00               	movlw	0
  4419   000DF2  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  4420   000DF4  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  4421   000DF6  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  4422   000DF8  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  4423   000DFA  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  4424   000DFC  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  4425   000DFE  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  4426   000E00                     l2103:
  4427   000E00  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  4428   000E04  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  4429   000E08  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  4430   000E0C  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  4431   000E10  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  4432   000E14  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  4433   000E18  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  4434   000E1C  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  4435   000E20  0012               	return		;funcret
  4436   000E22                     __end_of___aodiv:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function _ctoa *****************
  4440 ;; Defined at:
  4441 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4444 ;;		 -> NULL(0), 
  4445 ;;  c               1   22[COMRAM] unsigned char 
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;  w               2   26[COMRAM] int 
  4448 ;;  l               2   24[COMRAM] int 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4458 ;;      Params:         3       0       0       0       0       0       0
  4459 ;;      Locals:         4       0       0       0       0       0       0
  4460 ;;      Temps:          1       0       0       0       0       0       0
  4461 ;;      Totals:         8       0       0       0       0       0       0
  4462 ;;Total ram usage:        8 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 7
  4465 ;; This function calls:
  4466 ;;		_fputc
  4467 ;; This function is called by:
  4468 ;;		_vfpfcnvrt
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text13
  4473   00123C                     __ptext13:
  4474                           	callstack 0
  4475   00123C                     _ctoa:
  4476                           	callstack 20
  4477                           
  4478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  4479                           
  4480                           ;incstack = 0
  4481   00123C  504C               	movf	_width^0,w,c
  4482   00123E  104D               	iorwf	(_width+1)^0,w,c
  4483   001240  A4D8               	btfss	status,2,c
  4484   001242  D005               	goto	l2203
  4485   001244  C04C  F01B         	movff	_width,ctoa@w
  4486   001248  C04D  F01C         	movff	_width+1,ctoa@w+1
  4487   00124C  D006               	goto	l1069
  4488   00124E                     l2203:
  4489   00124E  0EFF               	movlw	255
  4490   001250  244C               	addwf	_width^0,w,c
  4491   001252  6E1B               	movwf	ctoa@w^0,c
  4492   001254  0EFF               	movlw	255
  4493   001256  204D               	addwfc	(_width+1)^0,w,c
  4494   001258  6E1C               	movwf	(ctoa@w+1)^0,c
  4495   00125A                     l1069:
  4496                           
  4497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  4498   00125A  AE1C               	btfss	(ctoa@w+1)^0,7,c
  4499   00125C  D004               	goto	l1073
  4500   00125E  0E00               	movlw	0
  4501   001260  6E1C               	movwf	(ctoa@w+1)^0,c
  4502   001262  0E00               	movlw	0
  4503   001264  6E1B               	movwf	ctoa@w^0,c
  4504   001266                     l1073:
  4505                           
  4506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  4507   001266  0E00               	movlw	0
  4508   001268  6E1A               	movwf	(ctoa@l+1)^0,c
  4509   00126A  0E00               	movlw	0
  4510   00126C  6E19               	movwf	ctoa@l^0,c
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4513   00126E  D00C               	goto	l2213
  4514   001270                     l2209:
  4515                           
  4516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  4517   001270  0E00               	movlw	0
  4518   001272  6E0D               	movwf	(fputc@c+1)^0,c
  4519   001274  0E20               	movlw	32
  4520   001276  6E0C               	movwf	fputc@c^0,c
  4521   001278  C015  F00E         	movff	ctoa@fp,fputc@fp
  4522   00127C  C016  F00F         	movff	ctoa@fp+1,fputc@fp+1
  4523   001280  EC58  F009         	call	_fputc	;wreg free
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  4526   001284  4A19               	infsnz	ctoa@l^0,f,c
  4527   001286  2A1A               	incf	(ctoa@l+1)^0,f,c
  4528   001288                     l2213:
  4529                           
  4530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4531   001288  501B               	movf	ctoa@w^0,w,c
  4532   00128A  5C19               	subwf	ctoa@l^0,w,c
  4533   00128C  501A               	movf	(ctoa@l+1)^0,w,c
  4534   00128E  0A80               	xorlw	128
  4535   001290  6E18               	movwf	??_ctoa^0,c
  4536   001292  501C               	movf	(ctoa@w+1)^0,w,c
  4537   001294  0A80               	xorlw	128
  4538   001296  5818               	subwfb	??_ctoa^0,w,c
  4539   001298  A0D8               	btfss	status,0,c
  4540   00129A  D7EA               	goto	l2209
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  4543   00129C  C017  F00C         	movff	ctoa@c,fputc@c
  4544   0012A0  6A0D               	clrf	(fputc@c+1)^0,c
  4545   0012A2  C015  F00E         	movff	ctoa@fp,fputc@fp
  4546   0012A6  C016  F00F         	movff	ctoa@fp+1,fputc@fp+1
  4547   0012AA  EC58  F009         	call	_fputc	;wreg free
  4548   0012AE  0012               	return		;funcret
  4549   0012B0                     __end_of_ctoa:
  4550                           	callstack 0
  4551                           
  4552 ;; *************** function _fputc *****************
  4553 ;; Defined at:
  4554 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  c               2   11[COMRAM] int 
  4557 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4558 ;;		 -> NULL(0), 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2   11[COMRAM] int 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4570 ;;      Params:         4       0       0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0
  4572 ;;      Temps:          5       0       0       0       0       0       0
  4573 ;;      Totals:         9       0       0       0       0       0       0
  4574 ;;Total ram usage:        9 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 6
  4577 ;; This function calls:
  4578 ;;		_putch
  4579 ;; This function is called by:
  4580 ;;		_pad
  4581 ;;		_ctoa
  4582 ;;		_vfpfcnvrt
  4583 ;;		_fputs
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           	psect	text14
  4588   0012B0                     __ptext14:
  4589                           	callstack 0
  4590   0012B0                     _fputc:
  4591                           	callstack 18
  4592                           
  4593                           ;incstack = 0
  4594   0012B0  500E               	movf	fputc@fp^0,w,c
  4595   0012B2  100F               	iorwf	(fputc@fp+1)^0,w,c
  4596   0012B4  B4D8               	btfsc	status,2,c
  4597   0012B6  D004               	goto	u980
  4598   0012B8  500E               	movf	fputc@fp^0,w,c
  4599   0012BA  100F               	iorwf	(fputc@fp+1)^0,w,c
  4600   0012BC  A4D8               	btfss	status,2,c
  4601   0012BE  D004               	goto	l2047
  4602   0012C0                     u980:
  4603   0012C0  500C               	movf	fputc@c^0,w,c
  4604   0012C2  EC54  F00B         	call	_putch
  4605   0012C6  0012               	return	
  4606   0012C8                     l2047:
  4607   0012C8  EE20 F009          	lfsr	2,9
  4608   0012CC  500E               	movf	fputc@fp^0,w,c
  4609   0012CE  26D9               	addwf	fsr2l,f,c
  4610   0012D0  500F               	movf	(fputc@fp+1)^0,w,c
  4611   0012D2  22DA               	addwfc	fsr2h,f,c
  4612   0012D4  50DE               	movf	postinc2,w,c
  4613   0012D6  10DE               	iorwf	postinc2,w,c
  4614   0012D8  B4D8               	btfsc	status,2,c
  4615   0012DA  D016               	goto	u1000
  4616   0012DC  EE20 F009          	lfsr	2,9
  4617   0012E0  500E               	movf	fputc@fp^0,w,c
  4618   0012E2  26D9               	addwf	fsr2l,f,c
  4619   0012E4  500F               	movf	(fputc@fp+1)^0,w,c
  4620   0012E6  22DA               	addwfc	fsr2h,f,c
  4621   0012E8  EE10 F003          	lfsr	1,3
  4622   0012EC  500E               	movf	fputc@fp^0,w,c
  4623   0012EE  26E1               	addwf	fsr1l,f,c
  4624   0012F0  500F               	movf	(fputc@fp+1)^0,w,c
  4625   0012F2  22E2               	addwfc	fsr1h,f,c
  4626   0012F4  50DE               	movf	postinc2,w,c
  4627   0012F6  5CE6               	subwf	postinc1,w,c
  4628   0012F8  50E6               	movf	postinc1,w,c
  4629   0012FA  0A80               	xorlw	128
  4630   0012FC  6E14               	movwf	(??_fputc+4)^0,c
  4631   0012FE  50DE               	movf	postinc2,w,c
  4632   001300  0A80               	xorlw	128
  4633   001302  5814               	subwfb	(??_fputc+4)^0,w,c
  4634   001304  B0D8               	btfsc	status,0,c
  4635   001306  0012               	return	
  4636   001308                     u1000:
  4637   001308  EE20 F003          	lfsr	2,3
  4638   00130C  500E               	movf	fputc@fp^0,w,c
  4639   00130E  26D9               	addwf	fsr2l,f,c
  4640   001310  500F               	movf	(fputc@fp+1)^0,w,c
  4641   001312  22DA               	addwfc	fsr2h,f,c
  4642   001314  2ADE               	incf	postinc2,f,c
  4643   001316  0E00               	movlw	0
  4644   001318  22DD               	addwfc	postdec2,f,c
  4645   00131A  0012               	return		;funcret
  4646   00131C                     __end_of_fputc:
  4647                           	callstack 0
  4648                           
  4649 ;; *************** function _putch *****************
  4650 ;; Defined at:
  4651 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  txData          1    wreg     unsigned char 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  txData          1   10[COMRAM] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  1    wreg      void 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4665 ;;      Params:         0       0       0       0       0       0       0
  4666 ;;      Locals:         1       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0
  4668 ;;      Totals:         1       0       0       0       0       0       0
  4669 ;;Total ram usage:        1 bytes
  4670 ;; Hardware stack levels used: 1
  4671 ;; Hardware stack levels required when called: 5
  4672 ;; This function calls:
  4673 ;;		_EUSART1_Write
  4674 ;; This function is called by:
  4675 ;;		_fputc
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text15
  4680   0016A8                     __ptext15:
  4681                           	callstack 0
  4682   0016A8                     _putch:
  4683                           	callstack 18
  4684                           
  4685                           ;incstack = 0
  4686                           ;putch@txData stored from wreg
  4687   0016A8  6E0B               	movwf	putch@txData^0,c
  4688                           
  4689                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4690   0016AA  500B               	movf	putch@txData^0,w,c
  4691   0016AC  EC48  F00B         	call	_EUSART1_Write
  4692   0016B0  0012               	return		;funcret
  4693   0016B2                     __end_of_putch:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _EUSART1_Write *****************
  4697 ;; Defined at:
  4698 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  txData          1    wreg     unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  txData          1    9[COMRAM] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4712 ;;      Params:         0       0       0       0       0       0       0
  4713 ;;      Locals:         1       0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0
  4715 ;;      Totals:         1       0       0       0       0       0       0
  4716 ;;Total ram usage:        1 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; Hardware stack levels required when called: 4
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_putch
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           	psect	text16
  4727   001690                     __ptext16:
  4728                           	callstack 0
  4729   001690                     _EUSART1_Write:
  4730                           	callstack 18
  4731                           
  4732                           ;incstack = 0
  4733                           ;EUSART1_Write@txData stored from wreg
  4734   001690  6E0A               	movwf	EUSART1_Write@txData^0,c
  4735   001692                     
  4736                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4737                           
  4738                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  4739   001692  A89E               	btfss	158,4,c	;volatile
  4740   001694  D7FE               	goto	l2035
  4741                           
  4742                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4743   001696  C00A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4744   00169A  0012               	return		;funcret
  4745   00169C                     __end_of_EUSART1_Write:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function ___wmul *****************
  4749 ;; Defined at:
  4750 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  multiplier      2    9[COMRAM] unsigned int 
  4753 ;;  multiplicand    2   11[COMRAM] unsigned int 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  product         2   13[COMRAM] unsigned int 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  2    9[COMRAM] unsigned int 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, prodl, prodh
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4765 ;;      Params:         4       0       0       0       0       0       0
  4766 ;;      Locals:         2       0       0       0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0
  4768 ;;      Totals:         6       0       0       0       0       0       0
  4769 ;;Total ram usage:        6 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 4
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_main
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text17
  4780   001614                     __ptext17:
  4781                           	callstack 0
  4782   001614                     ___wmul:
  4783                           	callstack 26
  4784                           
  4785                           ;incstack = 0
  4786   001614  500A               	movf	___wmul@multiplier^0,w,c
  4787   001616  020C               	mulwf	___wmul@multiplicand^0,c
  4788   001618  CFF3 F00E          	movff	prodl,___wmul@product
  4789   00161C  CFF4 F00F          	movff	prodh,___wmul@product+1
  4790   001620  500A               	movf	___wmul@multiplier^0,w,c
  4791   001622  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  4792   001624  50F3               	movf	243,w,c
  4793   001626  260F               	addwf	(___wmul@product+1)^0,f,c
  4794   001628  500B               	movf	(___wmul@multiplier+1)^0,w,c
  4795   00162A  020C               	mulwf	___wmul@multiplicand^0,c
  4796   00162C  50F3               	movf	243,w,c
  4797   00162E  260F               	addwf	(___wmul@product+1)^0,f,c
  4798   001630  C00E  F00A         	movff	___wmul@product,?___wmul
  4799   001634  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  4800   001638  0012               	return		;funcret
  4801   00163A                     __end_of___wmul:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function ___lwdiv *****************
  4805 ;; Defined at:
  4806 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  dividend        2   15[COMRAM] unsigned int 
  4809 ;;  divisor         2   17[COMRAM] unsigned int 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  quotient        2   19[COMRAM] unsigned int 
  4812 ;;  counter         1   21[COMRAM] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  2   15[COMRAM] unsigned int 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4822 ;;      Params:         4       0       0       0       0       0       0
  4823 ;;      Locals:         3       0       0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0       0       0
  4825 ;;      Totals:         7       0       0       0       0       0       0
  4826 ;;Total ram usage:        7 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 4
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text18
  4837   0013D4                     __ptext18:
  4838                           	callstack 0
  4839   0013D4                     ___lwdiv:
  4840                           	callstack 26
  4841                           
  4842                           ;incstack = 0
  4843   0013D4  0E00               	movlw	0
  4844   0013D6  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  4845   0013D8  0E00               	movlw	0
  4846   0013DA  6E14               	movwf	___lwdiv@quotient^0,c
  4847   0013DC  5012               	movf	___lwdiv@divisor^0,w,c
  4848   0013DE  1013               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4849   0013E0  B4D8               	btfsc	status,2,c
  4850   0013E2  D01C               	goto	l850
  4851   0013E4  0E01               	movlw	1
  4852   0013E6  6E16               	movwf	___lwdiv@counter^0,c
  4853   0013E8  D004               	goto	l2553
  4854   0013EA                     l2551:
  4855   0013EA  90D8               	bcf	status,0,c
  4856   0013EC  3612               	rlcf	___lwdiv@divisor^0,f,c
  4857   0013EE  3613               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4858   0013F0  2A16               	incf	___lwdiv@counter^0,f,c
  4859   0013F2                     l2553:
  4860   0013F2  AE13               	btfss	(___lwdiv@divisor+1)^0,7,c
  4861   0013F4  D7FA               	goto	l2551
  4862   0013F6                     u1670:
  4863   0013F6  90D8               	bcf	status,0,c
  4864   0013F8  3614               	rlcf	___lwdiv@quotient^0,f,c
  4865   0013FA  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4866   0013FC  5012               	movf	___lwdiv@divisor^0,w,c
  4867   0013FE  5C10               	subwf	___lwdiv@dividend^0,w,c
  4868   001400  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  4869   001402  5811               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4870   001404  A0D8               	btfss	status,0,c
  4871   001406  D005               	goto	l2563
  4872   001408  5012               	movf	___lwdiv@divisor^0,w,c
  4873   00140A  5E10               	subwf	___lwdiv@dividend^0,f,c
  4874   00140C  5013               	movf	(___lwdiv@divisor+1)^0,w,c
  4875   00140E  5A11               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4876   001410  8014               	bsf	___lwdiv@quotient^0,0,c
  4877   001412                     l2563:
  4878   001412  90D8               	bcf	status,0,c
  4879   001414  3213               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4880   001416  3212               	rrcf	___lwdiv@divisor^0,f,c
  4881   001418  2E16               	decfsz	___lwdiv@counter^0,f,c
  4882   00141A  D7ED               	goto	u1670
  4883   00141C                     l850:
  4884   00141C  C014  F010         	movff	___lwdiv@quotient,?___lwdiv
  4885   001420  C015  F011         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4886   001424  0012               	return		;funcret
  4887   001426                     __end_of___lwdiv:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function ___lmul *****************
  4891 ;; Defined at:
  4892 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  multiplier      4    9[COMRAM] unsigned long 
  4895 ;;  multiplicand    4   13[COMRAM] unsigned long 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  product         4   17[COMRAM] unsigned long 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  4    9[COMRAM] unsigned long 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4907 ;;      Params:         8       0       0       0       0       0       0
  4908 ;;      Locals:         4       0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0
  4910 ;;      Totals:        12       0       0       0       0       0       0
  4911 ;;Total ram usage:       12 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 4
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_main
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text19
  4922   00137E                     __ptext19:
  4923                           	callstack 0
  4924   00137E                     ___lmul:
  4925                           	callstack 26
  4926                           
  4927                           ;incstack = 0
  4928   00137E  0E00               	movlw	0
  4929   001380  6E12               	movwf	___lmul@product^0,c
  4930   001382  0E00               	movlw	0
  4931   001384  6E13               	movwf	(___lmul@product+1)^0,c
  4932   001386  0E00               	movlw	0
  4933   001388  6E14               	movwf	(___lmul@product+2)^0,c
  4934   00138A  0E00               	movlw	0
  4935   00138C  6E15               	movwf	(___lmul@product+3)^0,c
  4936   00138E                     l2493:
  4937   00138E  A00A               	btfss	___lmul@multiplier^0,0,c
  4938   001390  D008               	goto	l2497
  4939   001392  500E               	movf	___lmul@multiplicand^0,w,c
  4940   001394  2612               	addwf	___lmul@product^0,f,c
  4941   001396  500F               	movf	(___lmul@multiplicand+1)^0,w,c
  4942   001398  2213               	addwfc	(___lmul@product+1)^0,f,c
  4943   00139A  5010               	movf	(___lmul@multiplicand+2)^0,w,c
  4944   00139C  2214               	addwfc	(___lmul@product+2)^0,f,c
  4945   00139E  5011               	movf	(___lmul@multiplicand+3)^0,w,c
  4946   0013A0  2215               	addwfc	(___lmul@product+3)^0,f,c
  4947   0013A2                     l2497:
  4948   0013A2  90D8               	bcf	status,0,c
  4949   0013A4  360E               	rlcf	___lmul@multiplicand^0,f,c
  4950   0013A6  360F               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4951   0013A8  3610               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4952   0013AA  3611               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4953   0013AC  90D8               	bcf	status,0,c
  4954   0013AE  320D               	rrcf	(___lmul@multiplier+3)^0,f,c
  4955   0013B0  320C               	rrcf	(___lmul@multiplier+2)^0,f,c
  4956   0013B2  320B               	rrcf	(___lmul@multiplier+1)^0,f,c
  4957   0013B4  320A               	rrcf	___lmul@multiplier^0,f,c
  4958   0013B6  500A               	movf	___lmul@multiplier^0,w,c
  4959   0013B8  100B               	iorwf	(___lmul@multiplier+1)^0,w,c
  4960   0013BA  100C               	iorwf	(___lmul@multiplier+2)^0,w,c
  4961   0013BC  100D               	iorwf	(___lmul@multiplier+3)^0,w,c
  4962   0013BE  A4D8               	btfss	status,2,c
  4963   0013C0  D7E6               	goto	l2493
  4964   0013C2  C012  F00A         	movff	___lmul@product,?___lmul
  4965   0013C6  C013  F00B         	movff	___lmul@product+1,?___lmul+1
  4966   0013CA  C014  F00C         	movff	___lmul@product+2,?___lmul+2
  4967   0013CE  C015  F00D         	movff	___lmul@product+3,?___lmul+3
  4968   0013D2  0012               	return		;funcret
  4969   0013D4                     __end_of___lmul:
  4970                           	callstack 0
  4971                           
  4972 ;; *************** function ___aldiv *****************
  4973 ;; Defined at:
  4974 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aldiv.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  dividend        4   21[COMRAM] long 
  4977 ;;  divisor         4   25[COMRAM] long 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  quotient        4   31[COMRAM] long 
  4980 ;;  sign            1   30[COMRAM] unsigned char 
  4981 ;;  counter         1   29[COMRAM] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  4   21[COMRAM] long 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4991 ;;      Params:         8       0       0       0       0       0       0
  4992 ;;      Locals:         6       0       0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0
  4994 ;;      Totals:        14       0       0       0       0       0       0
  4995 ;;Total ram usage:       14 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; Hardware stack levels required when called: 4
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text20
  5006   001014                     __ptext20:
  5007                           	callstack 0
  5008   001014                     ___aldiv:
  5009                           	callstack 26
  5010                           
  5011                           ;incstack = 0
  5012   001014  0E00               	movlw	0
  5013   001016  6E1F               	movwf	___aldiv@sign^0,c
  5014   001018  AE1D               	btfss	(___aldiv@divisor+3)^0,7,c
  5015   00101A  D00A               	goto	l2509
  5016   00101C  1E1D               	comf	(___aldiv@divisor+3)^0,f,c
  5017   00101E  1E1C               	comf	(___aldiv@divisor+2)^0,f,c
  5018   001020  1E1B               	comf	(___aldiv@divisor+1)^0,f,c
  5019   001022  6C1A               	negf	___aldiv@divisor^0,c
  5020   001024  0E00               	movlw	0
  5021   001026  221B               	addwfc	(___aldiv@divisor+1)^0,f,c
  5022   001028  221C               	addwfc	(___aldiv@divisor+2)^0,f,c
  5023   00102A  221D               	addwfc	(___aldiv@divisor+3)^0,f,c
  5024   00102C  0E01               	movlw	1
  5025   00102E  6E1F               	movwf	___aldiv@sign^0,c
  5026   001030                     l2509:
  5027   001030  AE19               	btfss	(___aldiv@dividend+3)^0,7,c
  5028   001032  D00A               	goto	l2515
  5029   001034  1E19               	comf	(___aldiv@dividend+3)^0,f,c
  5030   001036  1E18               	comf	(___aldiv@dividend+2)^0,f,c
  5031   001038  1E17               	comf	(___aldiv@dividend+1)^0,f,c
  5032   00103A  6C16               	negf	___aldiv@dividend^0,c
  5033   00103C  0E00               	movlw	0
  5034   00103E  2217               	addwfc	(___aldiv@dividend+1)^0,f,c
  5035   001040  2218               	addwfc	(___aldiv@dividend+2)^0,f,c
  5036   001042  2219               	addwfc	(___aldiv@dividend+3)^0,f,c
  5037   001044  0E01               	movlw	1
  5038   001046  1A1F               	xorwf	___aldiv@sign^0,f,c
  5039   001048                     l2515:
  5040   001048  0E00               	movlw	0
  5041   00104A  6E20               	movwf	___aldiv@quotient^0,c
  5042   00104C  0E00               	movlw	0
  5043   00104E  6E21               	movwf	(___aldiv@quotient+1)^0,c
  5044   001050  0E00               	movlw	0
  5045   001052  6E22               	movwf	(___aldiv@quotient+2)^0,c
  5046   001054  0E00               	movlw	0
  5047   001056  6E23               	movwf	(___aldiv@quotient+3)^0,c
  5048   001058  501A               	movf	___aldiv@divisor^0,w,c
  5049   00105A  101B               	iorwf	(___aldiv@divisor+1)^0,w,c
  5050   00105C  101C               	iorwf	(___aldiv@divisor+2)^0,w,c
  5051   00105E  101D               	iorwf	(___aldiv@divisor+3)^0,w,c
  5052   001060  B4D8               	btfsc	status,2,c
  5053   001062  D02A               	goto	l2537
  5054   001064  0E01               	movlw	1
  5055   001066  6E1E               	movwf	___aldiv@counter^0,c
  5056   001068  D006               	goto	l2523
  5057   00106A                     l2521:
  5058   00106A  90D8               	bcf	status,0,c
  5059   00106C  361A               	rlcf	___aldiv@divisor^0,f,c
  5060   00106E  361B               	rlcf	(___aldiv@divisor+1)^0,f,c
  5061   001070  361C               	rlcf	(___aldiv@divisor+2)^0,f,c
  5062   001072  361D               	rlcf	(___aldiv@divisor+3)^0,f,c
  5063   001074  2A1E               	incf	___aldiv@counter^0,f,c
  5064   001076                     l2523:
  5065   001076  AE1D               	btfss	(___aldiv@divisor+3)^0,7,c
  5066   001078  D7F8               	goto	l2521
  5067   00107A                     u1630:
  5068   00107A  90D8               	bcf	status,0,c
  5069   00107C  3620               	rlcf	___aldiv@quotient^0,f,c
  5070   00107E  3621               	rlcf	(___aldiv@quotient+1)^0,f,c
  5071   001080  3622               	rlcf	(___aldiv@quotient+2)^0,f,c
  5072   001082  3623               	rlcf	(___aldiv@quotient+3)^0,f,c
  5073   001084  501A               	movf	___aldiv@divisor^0,w,c
  5074   001086  5C16               	subwf	___aldiv@dividend^0,w,c
  5075   001088  501B               	movf	(___aldiv@divisor+1)^0,w,c
  5076   00108A  5817               	subwfb	(___aldiv@dividend+1)^0,w,c
  5077   00108C  501C               	movf	(___aldiv@divisor+2)^0,w,c
  5078   00108E  5818               	subwfb	(___aldiv@dividend+2)^0,w,c
  5079   001090  501D               	movf	(___aldiv@divisor+3)^0,w,c
  5080   001092  5819               	subwfb	(___aldiv@dividend+3)^0,w,c
  5081   001094  A0D8               	btfss	status,0,c
  5082   001096  D009               	goto	l2533
  5083   001098  501A               	movf	___aldiv@divisor^0,w,c
  5084   00109A  5E16               	subwf	___aldiv@dividend^0,f,c
  5085   00109C  501B               	movf	(___aldiv@divisor+1)^0,w,c
  5086   00109E  5A17               	subwfb	(___aldiv@dividend+1)^0,f,c
  5087   0010A0  501C               	movf	(___aldiv@divisor+2)^0,w,c
  5088   0010A2  5A18               	subwfb	(___aldiv@dividend+2)^0,f,c
  5089   0010A4  501D               	movf	(___aldiv@divisor+3)^0,w,c
  5090   0010A6  5A19               	subwfb	(___aldiv@dividend+3)^0,f,c
  5091   0010A8  8020               	bsf	___aldiv@quotient^0,0,c
  5092   0010AA                     l2533:
  5093   0010AA  90D8               	bcf	status,0,c
  5094   0010AC  321D               	rrcf	(___aldiv@divisor+3)^0,f,c
  5095   0010AE  321C               	rrcf	(___aldiv@divisor+2)^0,f,c
  5096   0010B0  321B               	rrcf	(___aldiv@divisor+1)^0,f,c
  5097   0010B2  321A               	rrcf	___aldiv@divisor^0,f,c
  5098   0010B4  2E1E               	decfsz	___aldiv@counter^0,f,c
  5099   0010B6  D7E1               	goto	u1630
  5100   0010B8                     l2537:
  5101   0010B8  501F               	movf	___aldiv@sign^0,w,c
  5102   0010BA  B4D8               	btfsc	status,2,c
  5103   0010BC  D008               	goto	l2541
  5104   0010BE  1E23               	comf	(___aldiv@quotient+3)^0,f,c
  5105   0010C0  1E22               	comf	(___aldiv@quotient+2)^0,f,c
  5106   0010C2  1E21               	comf	(___aldiv@quotient+1)^0,f,c
  5107   0010C4  6C20               	negf	___aldiv@quotient^0,c
  5108   0010C6  0E00               	movlw	0
  5109   0010C8  2221               	addwfc	(___aldiv@quotient+1)^0,f,c
  5110   0010CA  2222               	addwfc	(___aldiv@quotient+2)^0,f,c
  5111   0010CC  2223               	addwfc	(___aldiv@quotient+3)^0,f,c
  5112   0010CE                     l2541:
  5113   0010CE  C020  F016         	movff	___aldiv@quotient,?___aldiv
  5114   0010D2  C021  F017         	movff	___aldiv@quotient+1,?___aldiv+1
  5115   0010D6  C022  F018         	movff	___aldiv@quotient+2,?___aldiv+2
  5116   0010DA  C023  F019         	movff	___aldiv@quotient+3,?___aldiv+3
  5117   0010DE  0012               	return		;funcret
  5118   0010E0                     __end_of___aldiv:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function _TMR0_WriteTimer *****************
  5122 ;; Defined at:
  5123 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  timerVal        2    9[COMRAM] unsigned short 
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5137 ;;      Params:         2       0       0       0       0       0       0
  5138 ;;      Locals:         0       0       0       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0
  5140 ;;      Totals:         2       0       0       0       0       0       0
  5141 ;;Total ram usage:        2 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 4
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_main
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text21
  5152   0016B2                     __ptext21:
  5153                           	callstack 0
  5154   0016B2                     _TMR0_WriteTimer:
  5155                           	callstack 26
  5156                           
  5157                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5158                           
  5159                           ;incstack = 0
  5160   0016B2  500B               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  5161   0016B4  6ED7               	movwf	215,c	;volatile
  5162                           
  5163                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5164   0016B6  C00A  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  5165   0016BA  0012               	return		;funcret
  5166   0016BC                     __end_of_TMR0_WriteTimer:
  5167                           	callstack 0
  5168                           
  5169 ;; *************** function _SYSTEM_Initialize *****************
  5170 ;; Defined at:
  5171 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;		None
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5185 ;;      Params:         0       0       0       0       0       0       0
  5186 ;;      Locals:         0       0       0       0       0       0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0
  5188 ;;      Totals:         0       0       0       0       0       0       0
  5189 ;;Total ram usage:        0 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 6
  5192 ;; This function calls:
  5193 ;;		_ADC_Initialize
  5194 ;;		_EUSART1_Initialize
  5195 ;;		_INTERRUPT_Initialize
  5196 ;;		_OSCILLATOR_Initialize
  5197 ;;		_PIN_MANAGER_Initialize
  5198 ;;		_TMR0_Initialize
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text22
  5205   00163A                     __ptext22:
  5206                           	callstack 0
  5207   00163A                     _SYSTEM_Initialize:
  5208                           	callstack 24
  5209                           
  5210                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5211                           
  5212                           ;incstack = 0
  5213   00163A  EC77  F00B         	call	_INTERRUPT_Initialize	;wreg free
  5214                           
  5215                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5216   00163E  ECE1  F00A         	call	_PIN_MANAGER_Initialize	;wreg free
  5217                           
  5218                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5219   001642  EC3F  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  5220                           
  5221                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  5222   001646  EC97  F00A         	call	_TMR0_Initialize	;wreg free
  5223                           
  5224                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  5225   00164A  EC2A  F00B         	call	_ADC_Initialize	;wreg free
  5226                           
  5227                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  5228   00164E  EC5C  F00A         	call	_EUSART1_Initialize	;wreg free
  5229   001652  0012               	return		;funcret
  5230   001654                     __end_of_SYSTEM_Initialize:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function _TMR0_Initialize *****************
  5234 ;; Defined at:
  5235 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;		None
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;		None
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5249 ;;      Params:         0       0       0       0       0       0       0
  5250 ;;      Locals:         0       0       0       0       0       0       0
  5251 ;;      Temps:          2       0       0       0       0       0       0
  5252 ;;      Totals:         2       0       0       0       0       0       0
  5253 ;;Total ram usage:        2 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 5
  5256 ;; This function calls:
  5257 ;;		_TMR0_SetInterruptHandler
  5258 ;; This function is called by:
  5259 ;;		_SYSTEM_Initialize
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text23
  5264   00152E                     __ptext23:
  5265                           	callstack 0
  5266   00152E                     _TMR0_Initialize:
  5267                           	callstack 24
  5268                           
  5269                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5270                           
  5271                           ;incstack = 0
  5272   00152E  9CD5               	bcf	213,6,c	;volatile
  5273                           
  5274                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  5275   001530  0E00               	movlw	0
  5276   001532  6ED7               	movwf	215,c	;volatile
  5277                           
  5278                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  5279   001534  0E00               	movlw	0
  5280   001536  6ED6               	movwf	214,c	;volatile
  5281                           
  5282                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5283   001538  50D6               	movf	214,w,c	;volatile
  5284   00153A  CFD7 F00C          	movff	4055,??_TMR0_Initialize	;volatile
  5285   00153E  6A0D               	clrf	(??_TMR0_Initialize+1)^0,c
  5286   001540  C00C  F00D         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5287   001544  6A0C               	clrf	??_TMR0_Initialize^0,c
  5288   001546  100C               	iorwf	??_TMR0_Initialize^0,w,c
  5289   001548  6E50               	movwf	_timer0ReloadVal^0,c	;volatile
  5290   00154A  500D               	movf	(??_TMR0_Initialize+1)^0,w,c
  5291   00154C  6E51               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5292                           
  5293                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5294   00154E  94F2               	bcf	242,2,c	;volatile
  5295                           
  5296                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5297   001550  8AF2               	bsf	242,5,c	;volatile
  5298                           
  5299                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5300   001552  0EF2               	movlw	low _TMR0_DefaultInterruptHandler
  5301   001554  6E0A               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5302   001556  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  5303   001558  6E0B               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5304   00155A  EC5E  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  5305                           
  5306                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  5307   00155E  0E9F               	movlw	159
  5308   001560  6ED5               	movwf	213,c	;volatile
  5309   001562  0012               	return		;funcret
  5310   001564                     __end_of_TMR0_Initialize:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function _TMR0_SetInterruptHandler *****************
  5314 ;; Defined at:
  5315 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  InterruptHan    2    9[COMRAM] PTR FTN()void 
  5318 ;;		 -> sampleTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5330 ;;      Params:         2       0       0       0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0
  5333 ;;      Totals:         2       0       0       0       0       0       0
  5334 ;;Total ram usage:        2 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 4
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_TMR0_Initialize
  5341 ;;		_main
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           	psect	text24
  5346   0016BC                     __ptext24:
  5347                           	callstack 0
  5348   0016BC                     _TMR0_SetInterruptHandler:
  5349                           	callstack 26
  5350                           
  5351                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5352                           
  5353                           ;incstack = 0
  5354   0016BC  C00A  F09C         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5355   0016C0  C00B  F09D         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5356   0016C4  0012               	return		;funcret
  5357   0016C6                     __end_of_TMR0_SetInterruptHandler:
  5358                           	callstack 0
  5359                           
  5360 ;; *************** function _PIN_MANAGER_Initialize *****************
  5361 ;; Defined at:
  5362 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5376 ;;      Params:         0       0       0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0
  5379 ;;      Totals:         0       0       0       0       0       0       0
  5380 ;;Total ram usage:        0 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; Hardware stack levels required when called: 4
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_SYSTEM_Initialize
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text25
  5391   0015C2                     __ptext25:
  5392                           	callstack 0
  5393   0015C2                     _PIN_MANAGER_Initialize:
  5394                           	callstack 25
  5395                           
  5396                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5397                           
  5398                           ;incstack = 0
  5399   0015C2  0E00               	movlw	0
  5400   0015C4  6E89               	movwf	137,c	;volatile
  5401                           
  5402                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5403   0015C6  0E00               	movlw	0
  5404   0015C8  6E8A               	movwf	138,c	;volatile
  5405                           
  5406                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5407   0015CA  0E00               	movlw	0
  5408   0015CC  6E8B               	movwf	139,c	;volatile
  5409                           
  5410                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5411   0015CE  6892               	setf	146,c	;volatile
  5412                           
  5413                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5414   0015D0  6893               	setf	147,c	;volatile
  5415                           
  5416                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  5417   0015D2  0EBF               	movlw	191
  5418   0015D4  6E94               	movwf	148,c	;volatile
  5419                           
  5420                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5421   0015D6  0E3C               	movlw	60
  5422   0015D8  010F               	movlb	15	; () banked
  5423   0015DA  6F3A               	movwf	58,b	;volatile
  5424                           
  5425                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5426   0015DC  0E3F               	movlw	63
  5427   0015DE  6F39               	movwf	57,b	;volatile
  5428                           
  5429                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5430   0015E0  0E2F               	movlw	47
  5431   0015E2  6F38               	movwf	56,b	;volatile
  5432                           
  5433                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5434   0015E4  0E00               	movlw	0
  5435   0015E6  6E61               	movwf	97,c	;volatile
  5436                           
  5437                           ; BSR set to: 15
  5438                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5439   0015E8  8EF1               	bsf	241,7,c	;volatile
  5440                           
  5441                           ; BSR set to: 15
  5442   0015EA  0012               	return		;funcret
  5443   0015EC                     __end_of_PIN_MANAGER_Initialize:
  5444                           	callstack 0
  5445                           
  5446 ;; *************** function _OSCILLATOR_Initialize *****************
  5447 ;; Defined at:
  5448 ;;		line 61 in file "mcc_generated_files/mcc.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;		None
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, status,2
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5462 ;;      Params:         0       0       0       0       0       0       0
  5463 ;;      Locals:         0       0       0       0       0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0
  5465 ;;      Totals:         0       0       0       0       0       0       0
  5466 ;;Total ram usage:        0 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; Hardware stack levels required when called: 4
  5469 ;; This function calls:
  5470 ;;		Nothing
  5471 ;; This function is called by:
  5472 ;;		_SYSTEM_Initialize
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text26
  5477   00167E                     __ptext26:
  5478                           	callstack 0
  5479   00167E                     _OSCILLATOR_Initialize:
  5480                           	callstack 25
  5481                           
  5482                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  5483                           
  5484                           ; BSR set to: 15
  5485                           ;incstack = 0
  5486   00167E  0E70               	movlw	112
  5487   001680  6ED3               	movwf	211,c	;volatile
  5488                           
  5489                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  5490   001682  0E04               	movlw	4
  5491   001684  6ED2               	movwf	210,c	;volatile
  5492                           
  5493                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  5494   001686  0E40               	movlw	64
  5495   001688  6E9B               	movwf	155,c	;volatile
  5496   00168A                     l72:
  5497                           
  5498                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  5499   00168A  BED2               	btfsc	4050,7,c	;volatile
  5500   00168C  0012               	return	
  5501   00168E  D7FD               	goto	l72
  5502   001690                     __end_of_OSCILLATOR_Initialize:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function _INTERRUPT_Initialize *****************
  5506 ;; Defined at:
  5507 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		None
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5521 ;;      Params:         0       0       0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; Hardware stack levels required when called: 4
  5528 ;; This function calls:
  5529 ;;		Nothing
  5530 ;; This function is called by:
  5531 ;;		_SYSTEM_Initialize
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text27
  5536   0016EE                     __ptext27:
  5537                           	callstack 0
  5538   0016EE                     _INTERRUPT_Initialize:
  5539                           	callstack 25
  5540                           
  5541                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5542                           
  5543                           ;incstack = 0
  5544   0016EE  9ED0               	bcf	208,7,c	;volatile
  5545   0016F0  0012               	return		;funcret
  5546   0016F2                     __end_of_INTERRUPT_Initialize:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function _EUSART1_Initialize *****************
  5550 ;; Defined at:
  5551 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5565 ;;      Params:         0       0       0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used: 1
  5571 ;; Hardware stack levels required when called: 5
  5572 ;; This function calls:
  5573 ;;		_EUSART1_SetErrorHandler
  5574 ;;		_EUSART1_SetFramingErrorHandler
  5575 ;;		_EUSART1_SetOverrunErrorHandler
  5576 ;; This function is called by:
  5577 ;;		_SYSTEM_Initialize
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text28
  5582   0014B8                     __ptext28:
  5583                           	callstack 0
  5584   0014B8                     _EUSART1_Initialize:
  5585                           	callstack 24
  5586                           
  5587                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5588                           
  5589                           ;incstack = 0
  5590   0014B8  0E08               	movlw	8
  5591   0014BA  6EB8               	movwf	184,c	;volatile
  5592                           
  5593                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5594   0014BC  0E90               	movlw	144
  5595   0014BE  6EAB               	movwf	171,c	;volatile
  5596                           
  5597                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5598   0014C0  0E24               	movlw	36
  5599   0014C2  6EAC               	movwf	172,c	;volatile
  5600                           
  5601                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5602   0014C4  0E82               	movlw	130
  5603   0014C6  6EAF               	movwf	175,c	;volatile
  5604                           
  5605                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5606   0014C8  0E06               	movlw	6
  5607   0014CA  6EB0               	movwf	176,c	;volatile
  5608                           
  5609                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5610   0014CC  0E00               	movlw	0
  5611   0014CE  6E0A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5612   0014D0  0E00               	movlw	0
  5613   0014D2  6E0B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5614   0014D4  EC68  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5615                           
  5616                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5617   0014D8  0E00               	movlw	0
  5618   0014DA  6E0A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5619   0014DC  0E00               	movlw	0
  5620   0014DE  6E0B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5621   0014E0  EC63  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5622                           
  5623                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5624   0014E4  0E00               	movlw	0
  5625   0014E6  6E0A               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5626   0014E8  0E00               	movlw	0
  5627   0014EA  6E0B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5628   0014EC  EC6D  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5629                           
  5630                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5631   0014F0  0E00               	movlw	0
  5632   0014F2  6E54               	movwf	_eusart1RxLastError^0,c	;volatile
  5633   0014F4  0012               	return		;funcret
  5634   0014F6                     __end_of_EUSART1_Initialize:
  5635                           	callstack 0
  5636                           
  5637 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5638 ;; Defined at:
  5639 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  5642 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5654 ;;      Params:         2       0       0       0       0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0
  5657 ;;      Totals:         2       0       0       0       0       0       0
  5658 ;;Total ram usage:        2 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 4
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_EUSART1_Initialize
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text29
  5669   0016C6                     __ptext29:
  5670                           	callstack 0
  5671   0016C6                     _EUSART1_SetOverrunErrorHandler:
  5672                           	callstack 24
  5673                           
  5674                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5675                           
  5676                           ;incstack = 0
  5677   0016C6  C00A  F0A0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5678   0016CA  C00B  F0A1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5679   0016CE  0012               	return		;funcret
  5680   0016D0                     __end_of_EUSART1_SetOverrunErrorHandler:
  5681                           	callstack 0
  5682                           
  5683 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5684 ;; Defined at:
  5685 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5686 ;; Parameters:    Size  Location     Type
  5687 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  5688 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;		None
  5691 ;; Return value:  Size  Location     Type
  5692 ;;                  1    wreg      void 
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5700 ;;      Params:         2       0       0       0       0       0       0
  5701 ;;      Locals:         0       0       0       0       0       0       0
  5702 ;;      Temps:          0       0       0       0       0       0       0
  5703 ;;      Totals:         2       0       0       0       0       0       0
  5704 ;;Total ram usage:        2 bytes
  5705 ;; Hardware stack levels used: 1
  5706 ;; Hardware stack levels required when called: 4
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_EUSART1_Initialize
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text30
  5715   0016D0                     __ptext30:
  5716                           	callstack 0
  5717   0016D0                     _EUSART1_SetFramingErrorHandler:
  5718                           	callstack 24
  5719                           
  5720                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5721                           
  5722                           ;incstack = 0
  5723   0016D0  C00A  F0A2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5724   0016D4  C00B  F0A3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5725   0016D8  0012               	return		;funcret
  5726   0016DA                     __end_of_EUSART1_SetFramingErrorHandler:
  5727                           	callstack 0
  5728                           
  5729 ;; *************** function _EUSART1_SetErrorHandler *****************
  5730 ;; Defined at:
  5731 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  interruptHan    2    9[COMRAM] PTR FTN()void 
  5734 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, status,2, status,0
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5746 ;;      Params:         2       0       0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0
  5749 ;;      Totals:         2       0       0       0       0       0       0
  5750 ;;Total ram usage:        2 bytes
  5751 ;; Hardware stack levels used: 1
  5752 ;; Hardware stack levels required when called: 4
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_EUSART1_Initialize
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text31
  5761   0016DA                     __ptext31:
  5762                           	callstack 0
  5763   0016DA                     _EUSART1_SetErrorHandler:
  5764                           	callstack 24
  5765                           
  5766                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5767                           
  5768                           ;incstack = 0
  5769   0016DA  C00A  F09E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5770   0016DE  C00B  F09F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5771   0016E2  0012               	return		;funcret
  5772   0016E4                     __end_of_EUSART1_SetErrorHandler:
  5773                           	callstack 0
  5774                           
  5775 ;; *************** function _ADC_Initialize *****************
  5776 ;; Defined at:
  5777 ;;		line 62 in file "mcc_generated_files/adc.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5791 ;;      Params:         0       0       0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; Hardware stack levels required when called: 4
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_SYSTEM_Initialize
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text32
  5806   001654                     __ptext32:
  5807                           	callstack 0
  5808   001654                     _ADC_Initialize:
  5809                           	callstack 25
  5810                           
  5811                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5812                           
  5813                           ;incstack = 0
  5814   001654  0E00               	movlw	0
  5815   001656  6EC1               	movwf	193,c	;volatile
  5816                           
  5817                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5818   001658  0E26               	movlw	38
  5819   00165A  6EC0               	movwf	192,c	;volatile
  5820                           
  5821                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5822   00165C  0E00               	movlw	0
  5823   00165E  6EC3               	movwf	195,c	;volatile
  5824                           
  5825                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5826   001660  0E00               	movlw	0
  5827   001662  6EC4               	movwf	196,c	;volatile
  5828                           
  5829                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5830   001664  0E11               	movlw	17
  5831   001666  6EC2               	movwf	194,c	;volatile
  5832   001668  0012               	return		;funcret
  5833   00166A                     __end_of_ADC_Initialize:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _EUSART1_is_rx_ready *****************
  5837 ;; Defined at:
  5838 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      _Bool 
  5845 ;; Registers used:
  5846 ;;		wreg
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5852 ;;      Params:         0       0       0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 4
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_main
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text33
  5867   00169C                     __ptext33:
  5868                           	callstack 0
  5869   00169C                     _EUSART1_is_rx_ready:
  5870                           	callstack 26
  5871                           
  5872                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5873                           
  5874                           ;incstack = 0
  5875   00169C  AA9E               	btfss	158,5,c	;volatile
  5876   00169E  D002               	goto	u1550
  5877   0016A0  0E01               	movlw	1
  5878   0016A2  0012               	return	
  5879   0016A4                     u1550:
  5880   0016A4  0E00               	movlw	0
  5881   0016A6  0012               	return		;funcret
  5882   0016A8                     __end_of_EUSART1_is_rx_ready:
  5883                           	callstack 0
  5884                           
  5885 ;; *************** function _EUSART1_Read *****************
  5886 ;; Defined at:
  5887 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;		None
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1    wreg      unsigned char 
  5894 ;; Registers used:
  5895 ;;		wreg, status,2
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 0/0
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5901 ;;      Params:         0       0       0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used: 1
  5907 ;; Hardware stack levels required when called: 4
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_main
  5912 ;;		_getch
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text34
  5917   00166A                     __ptext34:
  5918                           	callstack 0
  5919   00166A                     _EUSART1_Read:
  5920                           	callstack 26
  5921                           
  5922                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5923                           
  5924                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
  5925                           
  5926                           ;incstack = 0
  5927   00166A  AA9E               	btfss	158,5,c	;volatile
  5928   00166C  D7FE               	goto	__ptext34
  5929                           
  5930                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5931   00166E  0E00               	movlw	0
  5932   001670  6E54               	movwf	_eusart1RxLastError^0,c	;volatile
  5933                           
  5934                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5935   001672  A2AB               	btfss	171,1,c	;volatile
  5936   001674  D002               	goto	l2471
  5937                           
  5938                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5939   001676  98AB               	bcf	171,4,c	;volatile
  5940                           
  5941                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5942   001678  88AB               	bsf	171,4,c	;volatile
  5943   00167A                     l2471:
  5944                           
  5945                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5946   00167A  50AE               	movf	174,w,c	;volatile
  5947   00167C  0012               	return		;funcret
  5948   00167E                     __end_of_EUSART1_Read:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function _INTERRUPT_InterruptManager *****************
  5952 ;; Defined at:
  5953 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;		None
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5967 ;;      Params:         0       0       0       0       0       0       0
  5968 ;;      Locals:         0       0       0       0       0       0       0
  5969 ;;      Temps:          2       0       0       0       0       0       0
  5970 ;;      Totals:         2       0       0       0       0       0       0
  5971 ;;Total ram usage:        2 bytes
  5972 ;; Hardware stack levels used: 1
  5973 ;; Hardware stack levels required when called: 3
  5974 ;; This function calls:
  5975 ;;		_TMR0_ISR
  5976 ;; This function is called by:
  5977 ;;		Interrupt level 2
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	intcode
  5982   000008                     __pintcode:
  5983                           	callstack 0
  5984   000008                     _INTERRUPT_InterruptManager:
  5985                           	callstack 18
  5986                           
  5987                           ;incstack = 0
  5988   000008  8255               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5989   00000A  CFFA F008          	movff	pclath,??_INTERRUPT_InterruptManager
  5990   00000E  CFFB F009          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5991                           
  5992                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5993   000012  BAF2               	btfsc	242,5,c	;volatile
  5994   000014  A4F2               	btfss	242,2,c	;volatile
  5995   000016  D002               	goto	i2l16
  5996                           
  5997                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5998   000018  ECCB  F00A         	call	_TMR0_ISR	;wreg free
  5999   00001C                     i2l16:
  6000   00001C  C009  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6001   000020  C008  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6002   000024  9255               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  6003   000026  0011               	retfie		f
  6004   000028                     __end_of_INTERRUPT_InterruptManager:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function _TMR0_ISR *****************
  6008 ;; Defined at:
  6009 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6023 ;;      Params:         0       0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used: 1
  6029 ;; Hardware stack levels required when called: 2
  6030 ;; This function calls:
  6031 ;;		Absolute function
  6032 ;;		_TMR0_DefaultInterruptHandler
  6033 ;;		_sampleTMR0ISR
  6034 ;; This function is called by:
  6035 ;;		_INTERRUPT_InterruptManager
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text36
  6040   001596                     __ptext36:
  6041                           	callstack 0
  6042   001596                     _TMR0_ISR:
  6043                           	callstack 18
  6044                           
  6045                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  6046                           
  6047                           ;incstack = 0
  6048   001596  94F2               	bcf	242,2,c	;volatile
  6049                           
  6050                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  6051   001598  5051               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6052   00159A  6ED7               	movwf	215,c	;volatile
  6053                           
  6054                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  6055   00159C  C050  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6056                           
  6057                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  6058   0015A0  0100               	movlb	0	; () banked
  6059   0015A2  519C               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6060   0015A4  119D               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6061   0015A6  B4D8               	btfsc	status,2,c
  6062   0015A8  0012               	return	
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  6066   0015AA  D801               	call	i2u154_48
  6067   0015AC  0012               	return	
  6068   0015AE                     i2u154_48:
  6069   0015AE  0005               	push	
  6070   0015B0  6EFA               	movwf	pclath,c
  6071   0015B2  519C               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6072   0015B4  6EFD               	movwf	tosl,c
  6073   0015B6  519D               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6074   0015B8  6EFE               	movwf	tosh,c
  6075   0015BA  50F8               	movf	tblptru,w,c
  6076   0015BC  6EFF               	movwf	tosu,c
  6077   0015BE  50FA               	movf	pclath,w,c
  6078   0015C0  0012               	return		;indir
  6079   0015C2                     __end_of_TMR0_ISR:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6083 ;; Defined at:
  6084 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		None
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6098 ;;      Params:         0       0       0       0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0
  6101 ;;      Totals:         0       0       0       0       0       0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; This function calls:
  6105 ;;		Nothing
  6106 ;; This function is called by:
  6107 ;;		_TMR0_Initialize
  6108 ;;		_TMR0_ISR
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text37
  6113   0016F2                     __ptext37:
  6114                           	callstack 0
  6115   0016F2                     _TMR0_DefaultInterruptHandler:
  6116                           	callstack 19
  6117                           
  6118                           ;incstack = 0
  6119   0016F2  0012               	return		;funcret
  6120   0016F4                     __end_of_TMR0_DefaultInterruptHandler:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _sampleTMR0ISR *****************
  6124 ;; Defined at:
  6125 ;;		line 218 in file "main.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, status,2, status,0, cstack
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6139 ;;      Params:         0       0       0       0       0       0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0
  6141 ;;      Temps:          5       0       0       0       0       0       0
  6142 ;;      Totals:         5       0       0       0       0       0       0
  6143 ;;Total ram usage:        5 bytes
  6144 ;; Hardware stack levels used: 1
  6145 ;; Hardware stack levels required when called: 1
  6146 ;; This function calls:
  6147 ;;		i2_TMR0_WriteTimer
  6148 ;; This function is called by:
  6149 ;;		_main
  6150 ;;		_TMR0_ISR
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text38
  6155   00118E                     __ptext38:
  6156                           	callstack 0
  6157   00118E                     _sampleTMR0ISR:
  6158                           	callstack 18
  6159                           
  6160                           ;incstack = 0
  6161                           ;main.c: 222:     static sampleState_t state = MICIDLE;;main.c: 224:     do { LATAbits.L
      +                          ATA6 = 1; } while(0);
  6162   00118E  8C89               	bsf	137,6,c	;volatile
  6163   001190  D03B               	goto	i2l2417
  6164   001192                     i2l2401:
  6165                           
  6166                           ;main.c: 228:             if(sampling == 1) state = MICTRIGGER;
  6167   001192  0453               	decf	_sampling^0,w,c
  6168   001194  A4D8               	btfss	status,2,c
  6169   001196  D049               	goto	i2l347
  6170   001198  0E01               	movlw	1
  6171   00119A  D02B               	goto	L2
  6172   00119C                     i2l2405:
  6173                           
  6174                           ;main.c: 231:             if((ADRESH > (128 + threshold)) || (ADRESH < (128 - threshold)
      +                          )) state = MICACQUIRE;
  6175   00119C  50C4               	movf	196,w,c	;volatile
  6176   00119E  6E03               	movwf	??_sampleTMR0ISR^0,c
  6177   0011A0  6A04               	clrf	(??_sampleTMR0ISR+1)^0,c
  6178   0011A2  0100               	movlb	0	; () banked
  6179   0011A4  51C9               	movf	_threshold& (0+255),w,b
  6180   0011A6  6E05               	movwf	(??_sampleTMR0ISR+2)^0,c
  6181   0011A8  6A06               	clrf	(??_sampleTMR0ISR+3)^0,c
  6182   0011AA  0E80               	movlw	128
  6183   0011AC  2605               	addwf	(??_sampleTMR0ISR+2)^0,f,c
  6184   0011AE  0E00               	movlw	0
  6185   0011B0  2206               	addwfc	(??_sampleTMR0ISR+3)^0,f,c
  6186   0011B2  5003               	movf	??_sampleTMR0ISR^0,w,c
  6187   0011B4  5C05               	subwf	(??_sampleTMR0ISR+2)^0,w,c
  6188   0011B6  5006               	movf	(??_sampleTMR0ISR+3)^0,w,c
  6189   0011B8  0A80               	xorlw	128
  6190   0011BA  6E07               	movwf	(??_sampleTMR0ISR+4)^0,c
  6191   0011BC  5004               	movf	(??_sampleTMR0ISR+1)^0,w,c
  6192   0011BE  0A80               	xorlw	128
  6193   0011C0  5807               	subwfb	(??_sampleTMR0ISR+4)^0,w,c
  6194   0011C2  A0D8               	btfss	status,0,c
  6195   0011C4  D015               	goto	i2u150_40
  6196                           
  6197                           ; BSR set to: 0
  6198   0011C6  0E80               	movlw	128
  6199   0011C8  6E03               	movwf	??_sampleTMR0ISR^0,c
  6200   0011CA  0E00               	movlw	0
  6201   0011CC  6E04               	movwf	(??_sampleTMR0ISR+1)^0,c
  6202   0011CE  51C9               	movf	_threshold& (0+255),w,b
  6203   0011D0  5E03               	subwf	??_sampleTMR0ISR^0,f,c
  6204   0011D2  0E00               	movlw	0
  6205   0011D4  5A04               	subwfb	(??_sampleTMR0ISR+1)^0,f,c
  6206   0011D6  50C4               	movf	196,w,c	;volatile
  6207   0011D8  6E05               	movwf	(??_sampleTMR0ISR+2)^0,c
  6208   0011DA  6A06               	clrf	(??_sampleTMR0ISR+3)^0,c
  6209   0011DC  5003               	movf	??_sampleTMR0ISR^0,w,c
  6210   0011DE  5C05               	subwf	(??_sampleTMR0ISR+2)^0,w,c
  6211   0011E0  5006               	movf	(??_sampleTMR0ISR+3)^0,w,c
  6212   0011E2  0A80               	xorlw	128
  6213   0011E4  6E07               	movwf	(??_sampleTMR0ISR+4)^0,c
  6214   0011E6  5004               	movf	(??_sampleTMR0ISR+1)^0,w,c
  6215   0011E8  0A80               	xorlw	128
  6216   0011EA  5807               	subwfb	(??_sampleTMR0ISR+4)^0,w,c
  6217   0011EC  B0D8               	btfsc	status,0,c
  6218   0011EE  D01D               	goto	i2l347
  6219   0011F0                     i2u150_40:
  6220                           
  6221                           ; BSR set to: 0
  6222   0011F0  0E02               	movlw	2
  6223   0011F2                     L2:
  6224   0011F2  6E52               	movwf	sampleTMR0ISR@state^0,c
  6225   0011F4  D01A               	goto	i2l347
  6226   0011F6                     i2l2411:
  6227                           
  6228                           ;main.c: 234:             if(sampling == 0) state = MICIDLE;
  6229   0011F6  5053               	movf	_sampling^0,w,c
  6230   0011F8  A4D8               	btfss	status,2,c
  6231   0011FA  D002               	goto	i2l353
  6232   0011FC  0E00               	movlw	0
  6233   0011FE  6E52               	movwf	sampleTMR0ISR@state^0,c
  6234   001200                     i2l353:
  6235                           
  6236                           ;main.c: 235:             sampled = 1;
  6237   001200  0E01               	movlw	1
  6238   001202  0100               	movlb	0	; () banked
  6239   001204  6FA7               	movwf	_sampled& (0+255),b
  6240                           
  6241                           ;main.c: 236:             break;
  6242   001206  D011               	goto	i2l347
  6243   001208                     i2l2417:
  6244   001208  5052               	movf	sampleTMR0ISR@state^0,w,c
  6245   00120A  6E03               	movwf	??_sampleTMR0ISR^0,c
  6246   00120C  6A04               	clrf	(??_sampleTMR0ISR+1)^0,c
  6247                           
  6248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6249                           ; Switch size 1, requested type "simple"
  6250                           ; Number of cases is 1, Range of values is 0 to 0
  6251                           ; switch strategies available:
  6252                           ; Name         Instructions Cycles
  6253                           ; simple_byte            4     3 (average)
  6254                           ;	Chosen strategy is simple_byte
  6255   00120E  5004               	movf	(??_sampleTMR0ISR+1)^0,w,c
  6256   001210  0A00               	xorlw	0	; case 0
  6257   001212  A4D8               	btfss	status,2,c
  6258   001214  D00A               	goto	i2l347
  6259                           
  6260                           ; Switch size 1, requested type "simple"
  6261                           ; Number of cases is 3, Range of values is 0 to 2
  6262                           ; switch strategies available:
  6263                           ; Name         Instructions Cycles
  6264                           ; simple_byte           10     6 (average)
  6265                           ;	Chosen strategy is simple_byte
  6266   001216  5003               	movf	??_sampleTMR0ISR^0,w,c
  6267   001218  0A00               	xorlw	0	; case 0
  6268   00121A  B4D8               	btfsc	status,2,c
  6269   00121C  D7BA               	goto	i2l2401
  6270   00121E  0A01               	xorlw	1	; case 1
  6271   001220  B4D8               	btfsc	status,2,c
  6272   001222  D7BC               	goto	i2l2405
  6273   001224  0A03               	xorlw	3	; case 2
  6274   001226  B4D8               	btfsc	status,2,c
  6275   001228  D7E6               	goto	i2l2411
  6276   00122A                     i2l347:
  6277                           
  6278                           ;main.c: 238:     ADCON0bits.GO_NOT_DONE = 1;
  6279   00122A  82C2               	bsf	194,1,c	;volatile
  6280                           
  6281                           ;main.c: 240:     TMR0_WriteTimer(0x10000 - (400 - 75));
  6282   00122C  0EFE               	movlw	254
  6283   00122E  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6284   001230  0EBB               	movlw	187
  6285   001232  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6286   001234  EC72  F00B         	call	i2_TMR0_WriteTimer	;wreg free
  6287   001238  9C89               	bcf	137,6,c	;volatile
  6288   00123A  0012               	return		;funcret
  6289   00123C                     __end_of_sampleTMR0ISR:
  6290                           	callstack 0
  6291                           
  6292 ;; *************** function i2_TMR0_WriteTimer *****************
  6293 ;; Defined at:
  6294 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  timerVal        2    0[COMRAM] unsigned short 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      void 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6308 ;;      Params:         2       0       0       0       0       0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0
  6311 ;;      Totals:         2       0       0       0       0       0       0
  6312 ;;Total ram usage:        2 bytes
  6313 ;; Hardware stack levels used: 1
  6314 ;; This function calls:
  6315 ;;		Nothing
  6316 ;; This function is called by:
  6317 ;;		_sampleTMR0ISR
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text39
  6322   0016E4                     __ptext39:
  6323                           	callstack 0
  6324   0016E4                     i2_TMR0_WriteTimer:
  6325                           	callstack 18
  6326                           
  6327                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  6328                           
  6329                           ;incstack = 0
  6330   0016E4  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  6331   0016E6  6ED7               	movwf	215,c	;volatile
  6332                           
  6333                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6334   0016E8  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  6335   0016EC  0012               	return		;funcret
  6336   0016EE                     __end_ofi2_TMR0_WriteTimer:
  6337                           	callstack 0
  6338                           
  6339                           	psect	text40
  6340   000000                     __ptext40:
  6341                           	callstack 0
  6342                           
  6343                           	psect	rparam
  6344   000000                     
  6345                           	psect	temp
  6346   000055                     btemp:
  6347                           	callstack 0
  6348   000055                     	ds	1
  6349   000000                     int$flags	set	btemp
  6350   000000                     wtemp8	set	btemp+1
  6351   000000                     ttemp5	set	btemp+1
  6352   000000                     ttemp6	set	btemp+4
  6353   000000                     ttemp7	set	btemp+8
  6354                           
  6355                           	psect	idloc
  6356                           
  6357                           ;Config register IDLOC0 @ 0x200000
  6358                           ;	unspecified, using default values
  6359   200000                     	org	2097152
  6360   200000  FF                 	db	255
  6361                           
  6362                           ;Config register IDLOC1 @ 0x200001
  6363                           ;	unspecified, using default values
  6364   200001                     	org	2097153
  6365   200001  FF                 	db	255
  6366                           
  6367                           ;Config register IDLOC2 @ 0x200002
  6368                           ;	unspecified, using default values
  6369   200002                     	org	2097154
  6370   200002  FF                 	db	255
  6371                           
  6372                           ;Config register IDLOC3 @ 0x200003
  6373                           ;	unspecified, using default values
  6374   200003                     	org	2097155
  6375   200003  FF                 	db	255
  6376                           
  6377                           ;Config register IDLOC4 @ 0x200004
  6378                           ;	unspecified, using default values
  6379   200004                     	org	2097156
  6380   200004  FF                 	db	255
  6381                           
  6382                           ;Config register IDLOC5 @ 0x200005
  6383                           ;	unspecified, using default values
  6384   200005                     	org	2097157
  6385   200005  FF                 	db	255
  6386                           
  6387                           ;Config register IDLOC6 @ 0x200006
  6388                           ;	unspecified, using default values
  6389   200006                     	org	2097158
  6390   200006  FF                 	db	255
  6391                           
  6392                           ;Config register IDLOC7 @ 0x200007
  6393                           ;	unspecified, using default values
  6394   200007                     	org	2097159
  6395   200007  FF                 	db	255
  6396                           
  6397                           	psect	config
  6398                           
  6399                           ; Padding undefined space
  6400   300000                     	org	3145728
  6401   300000  FF                 	db	255
  6402                           
  6403                           ;Config register CONFIG1H @ 0x300001
  6404                           ;	Oscillator Selection bits
  6405                           ;	FOSC = INTIO67, Internal oscillator block
  6406                           ;	4X PLL Enable
  6407                           ;	PLLCFG = OFF, Oscillator used directly
  6408                           ;	Primary clock enable bit
  6409                           ;	PRICLKEN = ON, Primary clock enabled
  6410                           ;	Fail-Safe Clock Monitor Enable bit
  6411                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6412                           ;	Internal/External Oscillator Switchover bit
  6413                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6414   300001                     	org	3145729
  6415   300001  28                 	db	40
  6416                           
  6417                           ;Config register CONFIG2L @ 0x300002
  6418                           ;	Power-up Timer Enable bit
  6419                           ;	PWRTEN = OFF, Power up timer disabled
  6420                           ;	Brown-out Reset Enable bits
  6421                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6422                           ;	Brown Out Reset Voltage bits
  6423                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6424   300002                     	org	3145730
  6425   300002  1F                 	db	31
  6426                           
  6427                           ;Config register CONFIG2H @ 0x300003
  6428                           ;	Watchdog Timer Enable bits
  6429                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6430                           ;	Watchdog Timer Postscale Select bits
  6431                           ;	WDTPS = 32768, 1:32768
  6432   300003                     	org	3145731
  6433   300003  3C                 	db	60
  6434                           
  6435                           ; Padding undefined space
  6436   300004                     	org	3145732
  6437   300004  FF                 	db	255
  6438                           
  6439                           ;Config register CONFIG3H @ 0x300005
  6440                           ;	CCP2 MUX bit
  6441                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6442                           ;	PORTB A/D Enable bit
  6443                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6444                           ;	P3A/CCP3 Mux bit
  6445                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6446                           ;	HFINTOSC Fast Start-up
  6447                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6448                           ;	Timer3 Clock input mux bit
  6449                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6450                           ;	ECCP2 B output mux bit
  6451                           ;	P2BMX = PORTB5, P2B is on RB5
  6452                           ;	MCLR Pin Enable bit
  6453                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6454   300005                     	org	3145733
  6455   300005  BF                 	db	191
  6456                           
  6457                           ;Config register CONFIG4L @ 0x300006
  6458                           ;	Stack Full/Underflow Reset Enable bit
  6459                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6460                           ;	Single-Supply ICSP Enable bit
  6461                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6462                           ;	Extended Instruction Set Enable bit
  6463                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6464                           ;	Background Debug
  6465                           ;	DEBUG = OFF, Disabled
  6466   300006                     	org	3145734
  6467   300006  85                 	db	133
  6468                           
  6469                           ; Padding undefined space
  6470   300007                     	org	3145735
  6471   300007  FF                 	db	255
  6472                           
  6473                           ;Config register CONFIG5L @ 0x300008
  6474                           ;	Code Protection Block 0
  6475                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6476                           ;	Code Protection Block 1
  6477                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6478                           ;	Code Protection Block 2
  6479                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6480                           ;	Code Protection Block 3
  6481                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6482   300008                     	org	3145736
  6483   300008  0F                 	db	15
  6484                           
  6485                           ;Config register CONFIG5H @ 0x300009
  6486                           ;	Boot Block Code Protection bit
  6487                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6488                           ;	Data EEPROM Code Protection bit
  6489                           ;	CPD = OFF, Data EEPROM not code-protected
  6490   300009                     	org	3145737
  6491   300009  C0                 	db	192
  6492                           
  6493                           ;Config register CONFIG6L @ 0x30000A
  6494                           ;	Write Protection Block 0
  6495                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6496                           ;	Write Protection Block 1
  6497                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6498                           ;	Write Protection Block 2
  6499                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6500                           ;	Write Protection Block 3
  6501                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6502   30000A                     	org	3145738
  6503   30000A  0F                 	db	15
  6504                           
  6505                           ;Config register CONFIG6H @ 0x30000B
  6506                           ;	Configuration Register Write Protection bit
  6507                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6508                           ;	Boot Block Write Protection bit
  6509                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6510                           ;	Data EEPROM Write Protection bit
  6511                           ;	WRTD = OFF, Data EEPROM not write-protected
  6512   30000B                     	org	3145739
  6513   30000B  E0                 	db	224
  6514                           
  6515                           ;Config register CONFIG7L @ 0x30000C
  6516                           ;	Table Read Protection Block 0
  6517                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6518                           ;	Table Read Protection Block 1
  6519                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6520                           ;	Table Read Protection Block 2
  6521                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6522                           ;	Table Read Protection Block 3
  6523                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6524   30000C                     	org	3145740
  6525   30000C  0F                 	db	15
  6526                           
  6527                           ;Config register CONFIG7H @ 0x30000D
  6528                           ;	Boot Block Table Read Protection bit
  6529                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6530   30000D                     	org	3145741
  6531   30000D  40                 	db	64
  6532                           tosu	equ	0xFFF
  6533                           tosh	equ	0xFFE
  6534                           tosl	equ	0xFFD
  6535                           stkptr	equ	0xFFC
  6536                           pclatu	equ	0xFFB
  6537                           pclath	equ	0xFFA
  6538                           pcl	equ	0xFF9
  6539                           tblptru	equ	0xFF8
  6540                           tblptrh	equ	0xFF7
  6541                           tblptrl	equ	0xFF6
  6542                           tablat	equ	0xFF5
  6543                           prodh	equ	0xFF4
  6544                           prodl	equ	0xFF3
  6545                           indf0	equ	0xFEF
  6546                           postinc0	equ	0xFEE
  6547                           postdec0	equ	0xFED
  6548                           preinc0	equ	0xFEC
  6549                           plusw0	equ	0xFEB
  6550                           fsr0h	equ	0xFEA
  6551                           fsr0l	equ	0xFE9
  6552                           wreg	equ	0xFE8
  6553                           indf1	equ	0xFE7
  6554                           postinc1	equ	0xFE6
  6555                           postdec1	equ	0xFE5
  6556                           preinc1	equ	0xFE4
  6557                           plusw1	equ	0xFE3
  6558                           fsr1h	equ	0xFE2
  6559                           fsr1l	equ	0xFE1
  6560                           bsr	equ	0xFE0
  6561                           indf2	equ	0xFDF
  6562                           postinc2	equ	0xFDE
  6563                           postdec2	equ	0xFDD
  6564                           preinc2	equ	0xFDC
  6565                           plusw2	equ	0xFDB
  6566                           fsr2h	equ	0xFDA
  6567                           fsr2l	equ	0xFD9
  6568                           status	equ	0xFD8

Data Sizes:
    Strings     651
    Constant    0
    Data        1
    BSS         1078
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      84
    BANK0           160     60     106
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1385$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1385$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_44(CODE[3]), STR_43(CODE[14]), STR_42(CODE[27]), STR_41(CODE[24]), 
		 -> STR_40(CODE[5]), STR_39(CODE[15]), STR_38(CODE[33]), STR_37(CODE[5]), 
		 -> STR_36(CODE[4]), STR_35(CODE[52]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[4]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[7]), STR_26(CODE[52]), STR_25(CODE[22]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), 
		 -> STR_16(CODE[33]), STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), 
		 -> STR_12(CODE[33]), STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), 
		 -> STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_44(CODE[3]), STR_43(CODE[14]), STR_42(CODE[27]), STR_41(CODE[24]), 
		 -> STR_40(CODE[5]), STR_39(CODE[15]), STR_38(CODE[33]), STR_37(CODE[5]), 
		 -> STR_36(CODE[4]), STR_35(CODE[52]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[4]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[7]), STR_26(CODE[52]), STR_25(CODE[22]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), 
		 -> STR_16(CODE[33]), STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), 
		 -> STR_12(CODE[33]), STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), 
		 -> STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_44(CODE[3]), STR_43(CODE[14]), STR_42(CODE[27]), STR_41(CODE[24]), 
		 -> STR_40(CODE[5]), STR_39(CODE[15]), STR_38(CODE[33]), STR_37(CODE[5]), 
		 -> STR_36(CODE[4]), STR_35(CODE[52]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[4]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[7]), STR_26(CODE[52]), STR_25(CODE[22]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), 
		 -> STR_16(CODE[33]), STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), 
		 -> STR_12(CODE[33]), STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), 
		 -> STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1425$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_44(CODE[3]), STR_43(CODE[14]), STR_42(CODE[27]), STR_41(CODE[24]), 
		 -> STR_40(CODE[5]), STR_39(CODE[15]), STR_38(CODE[33]), STR_37(CODE[5]), 
		 -> STR_36(CODE[4]), STR_35(CODE[52]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[4]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[7]), STR_26(CODE[52]), STR_25(CODE[22]), 
		 -> STR_24(CODE[19]), STR_23(CODE[20]), STR_22(CODE[20]), STR_21(CODE[20]), 
		 -> STR_20(CODE[20]), STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), 
		 -> STR_16(CODE[33]), STR_15(CODE[37]), STR_14(CODE[32]), STR_13(CODE[49]), 
		 -> STR_12(CODE[33]), STR_11(CODE[33]), STR_10(CODE[24]), STR_9(CODE[21]), 
		 -> STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), STR_5(CODE[5]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sampleTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sampleTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    ___lwdiv->___wmul
    ___aldiv->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_sampleTMR0ISR
    _sampleTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   19903
                                             37 BANK0     23    23      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                            ___aldiv
                             ___lmul
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   16094
                                             27 BANK0     10     2      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   12041
                                             73 COMRAM     2     2      0
                                             21 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   11565
                                              0 BANK0     21    15      6
                               _ctoa
                               _dtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    3819
                                             38 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              9 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              9 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4441
                                             38 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2791
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1253
                                             20 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     964
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                             10 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     357
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             15 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              9 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     604
                                             21 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             11 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0      70
                                              7 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0      70
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _sampleTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _sampleTMR0ISR                                       5     5      0      70
                                              2 COMRAM     5     5      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   ___aldiv
     ___lmul (ARG)
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _utoa
           ___lodiv
           ___lomod
           _pad

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _sampleTMR0ISR *
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     400      29       66.7%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3C      6A       4       66.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      54       1       89.4%
BITBIGSFRllhh       27      0       0      26        0.0%
BITBIGSFRllhl       26      0       0      27        0.0%
BITBIGSFRhlhhh      19      0       0      16        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRlhhhll      C      0       0      22        0.0%
BITBIGSFRlhhhhh      B      0       0      19        0.0%
BITBIGSFRlhhhll      7      0       0      21        0.0%
BITBIGSFRlhhhlh      7      0       0      20        0.0%
BITBIGSFRlhhl        6      0       0      24        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRlhhhll      2      0       0      23        0.0%
BITBIGSFRhlhl        1      0       0      17        0.0%
BITBIGSFRhll         1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BE      28        0.0%
DATA                 0      0     4BE      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 06 15:34:42 2023

                                            l72 168A                                              _ci 00A8  
                           ___wmul@multiplicand 000C                                 _timer0ReloadVal 0050  
                                           l294 0050                                             l807 116C  
                                           l850 141C                                             l797 0FF2  
                                           u980 12C0                                             _abs 1564  
                                           _pad 131C                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1100 0B62  
                                          l1102 0B6A                                            ?_abs 001C  
                                          l1132 158C                                            l2103 0E00  
                                          l1073 1266                                            l1082 099E  
                                          l2035 1692                                            l2203 124E  
                                          l2131 0EE8                                            l2123 0E8C  
                                          l2115 0E4E                                            l1059 1332  
                                          l1084 09A6                                            l2213 1288  
                                          l1069 125A                                            l2125 0EA0  
                                          l2061 1516                                            l1085 09D4  
                                          l2047 12C8                                            l2071 0D06  
                                          l2135 0EFE                                            l2119 0E72  
                                          l2151 0F80                                            l3111 0688  
                                          l3023 02E2                                            l3015 02A4  
                                          l2209 1270                                            l2057 1500  
                                          l2225 0986                                            l2161 0FDC  
                                          l3041 0366                                            l2083 0D54  
                                          l2139 0F24                                            l2243 09E4  
                                          l2171 110E                                            l3051 03A0  
                                          l3035 0304                                            l3115 069C  
                                          l2085 0D68                                            l2077 0D2E  
                                          l2253 0ADC                                            l2237 09C8  
                                          l2149 0F6C                                            l3045 039A  
                                          l3117 06E0                                            l2095 0DC4  
                                          l2191 1354                                            l3063 0410  
                                          l2521 106A                                            l2185 132A  
                                          l2265 0B28                                            l2177 1156  
                                          l2169 10FA                                            l3081 048A  
                                          l2523 1076                                            l2515 1048  
                                          l2099 0DDA                                            l2187 133C  
                                          l3059 03FC                                            l2541 10CE  
                                          l2533 10AA                                            l2509 1030  
                                          l2277 0BA2                                            l3077 045E  
                                          l2471 167A                                            l2551 13EA  
                                          l2287 0C8E                                            l2537 10B8  
                                          l2553 13F2                                            l3089 04D0  
                                          l3097 0566                                            l2563 1412  
                                          l2493 138E                                            l2901 147C  
                                          l2903 149A                                            l2497 13A2  
                                          l2861 0788                                            ?_pad 001C  
                                          l2943 00C2                                            l2873 0842  
                                          l2953 0182                                            l2945 016C  
                                          l2937 009C                                            l2883 08DE  
                                          l2971 01CE                                            l2947 017A  
                                          l2877 08B0                                            l2885 08FE  
                                          l2965 01AC                                            l2983 0246  
                                          l2959 01A4                                            l2889 090E  
                                          l2993 0260                                            l2977 020A  
                                          STR_1 7FCB                                            STR_2 7EF0  
                                          STR_3 7FD6                                            STR_4 7FFB  
                                          STR_5 7FF2                                            STR_6 7E31  
                                          STR_7 7F9F                                            STR_8 7FDF  
                                          STR_9 7F4F                                            u1000 1308  
                                          u1120 0EA4                                            u1200 1112  
                                          u1041 0D34                                            u1060 0D6C  
                                          u1310 0994                                            u1151 0F4C  
                                          u1240 1572                                            u1170 0F84  
                                          u1410 0CB8                                            u1411 0CB6  
                                          u1340 0AEA                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u1360 0B0C                                            u1280 095C  
                                          u2080 0438                                            u1361 0B0A  
                                          u1290 095E                                            u1380 0B58  
                                          u1550 16A4                                            u1630 107A  
                                          u1670 13F6                                            u1910 07BC  
                                          u1960 01A0                                            u1970 01CC  
                                          i2l16 001C                                            _WPUB 000F61  
                                 _EUSART1_Write 1690                                            abs@a 001C  
                                          _dbuf 00A9                                            _ctoa 123C  
                                          _main 002C                                            _dtoa 0934  
                                 ?_EUSART1_Read 0001                                            _prec 004E  
                                          pad@i 0023                                            pad@p 0020  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0025                                            fsr2l 000FD9  
                                          btemp 0055                                            _utoa 0B4A  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0028                                    ___param_bank 000000  
                                         ??_abs 001E                                           ??_pad 0022  
                       __end_of_TMR0_Initialize 1564                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 1690                                 __end_of___aldiv 10E0  
                               __end_of___aodiv 0E22                                           ?_ctoa 0015  
                                         ?_main 0001                                           ?_dtoa 0027  
                               __end_of___aomod 0F46                                           STR_10 7F09  
                                         STR_11 7E94                                           STR_20 7F64  
                                         STR_12 7E73                                           STR_21 7F78  
                                         STR_13 7DDB                                           STR_22 7F64  
                                         STR_30 7FF7                                           STR_14 7EB5  
                                         STR_23 7F78                                           STR_31 7FFC  
                                         STR_15 7E0C                                           STR_16 7E31  
                                         STR_40 7FED                                           STR_32 7FFC  
                                         STR_24 7F8C                                           STR_17 7FE1  
                                         STR_33 7FEF                                           STR_25 7F39  
                                         STR_41 7F21                                           STR_34 7FEF  
                                         STR_18 7FEF                                           STR_42 7ED5  
                                         STR_26 7D73                                           STR_19 7FEF  
                                         STR_27 7FE6                                           STR_43 7FBD  
                                         STR_35 7DA7                                           STR_28 7FFC  
                                         STR_44 7FFB                                           STR_36 7FF7  
                                         STR_29 7FFC                                           STR_37 7FED  
                                         STR_38 7E52                                           STR_39 7FAE  
                                         ?_utoa 0027                                           _T0CON 000FD5  
                               __end_of___lodiv 1014                                 __end_of___lomod 118E  
                               __end_of___lwdiv 1426                                 _TMR0_WriteTimer 16B2  
                                         i2l353 1200                                           i2l347 122A  
                                  vfpfcnvrt@fmt 0062                                           _TMR0H 000FD7  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                         __end_of_sampleTMR0ISR 123C                             ___lmul@multiplicand 000E  
                     ?_TMR0_SetInterruptHandler 000A                                __end_of_TMR0_ISR 15C2  
                                         _flags 00A6                                           _fputc 12B0  
                                         _fputs 14F6                                           pad@fp 001C  
                                         _width 004C                                           ctoa@c 0017  
                                         _putch 16A8                                           ctoa@l 0019  
                                         ctoa@w 001B                                           main@i 009A  
                                         main@j 0099                                           dtoa@d 0029  
                                         dtoa@i 0047                                           dtoa@n 003F  
                                         dtoa@p 003B                                           dtoa@s 0049  
                                         dtoa@w 003D                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000A  
                                         ttemp5 0056                                           ttemp6 0059  
                                         ttemp7 005D                                           utoa@d 0029  
                                         utoa@i 0045                                           utoa@n 003D  
                                         utoa@p 003B                                           utoa@w 0039  
                                         status 000FD8                                           wtemp8 0056  
                              ___lodiv@dividend 000A              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 1426                                    __end_of_ctoa 12B0  
                    __end_of_EUSART1_Initialize 14F6                                    __end_of_main 06F0  
                                  __end_of_dtoa 0B4A                                    __end_of_utoa 0CDA  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_ctoa 0018  
                                        ??_main 0085                                          ??_dtoa 0031  
                                 main@avgPeriod 0091                                          ??_utoa 0031  
                                 __activetblptr 000002                                ___lodiv@quotient 001A  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 000C  
                                        ?_fputs 0015                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l2401 1192  
                                        i2l2411 11F6                                          i2l2405 119C  
                                        i2l2417 1208                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                 main@frequency 0089                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    vfprintf@cfmt 004A  
                                        ___lmul 137E                                       ??___aldiv 001E  
                                     ??___aodiv 001A                                       ??___aomod 001A  
                                        ___wmul 1614                         __end_of_TMR0_WriteTimer 16BC  
                                     ??___lodiv 001A                                       ??___lomod 001A  
                                     ??___lwdiv 0014                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 000A                                ?_TMR0_Initialize 0001  
                                        clear_0 1440                                          clear_1 1452  
                                        clear_2 145E                                          isa$std 000001  
                                        _printf 15EC                                          pad@buf 001E  
              ??_EUSART1_SetOverrunErrorHandler 000C                 ?_EUSART1_SetOverrunErrorHandler 000A  
                                        ctoa@fp 0015                                          dtoa@fp 0027  
                                        fputc@c 000C                                          fputs@c 0019  
                                        fputs@i 001A                                          fputs@s 0015  
                                  __mediumconst 7D72                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                                 main@totPeriod 0095                                __end_of_vfprintf 14B8  
                               ??_EUSART1_Write 000A                                          utoa@fp 0027  
      TMR0_SetInterruptHandler@InterruptHandler 000A                               _SYSTEM_Initialize 163A  
                                    __accesstop 0060                         __end_of__initialization 1464  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 16F4  
                           ??_SYSTEM_Initialize 000E                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 131C                                   __end_of_fputs 152E  
                                 __end_of_putch 16B2                            __end_of_EUSART1_Read 167E  
                                       ??_fputc 0010                       __end_of_SYSTEM_Initialize 1654  
                                       ??_fputs 0019                                         ??_putch 000B  
                                    __pbssBANK0 009C                 __end_of_EUSART1_SetErrorHandler 16E4  
              __end_of_TMR0_SetInterruptHandler 16C6                                         ?___lmul 000A  
                                       ?___wmul 000A                                      ??_TMR0_ISR 0008  
                              ?_TMR0_WriteTimer 000A                                  ___lmul@product 0012  
                                       ?_printf 007B          __end_of_EUSART1_SetFramingErrorHandler 16DA  
                _EUSART1_SetFramingErrorHandler 16D0                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                              ___lomod@dividend 000A                            _ADC_InterruptHandler 00A4  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aldiv 1014                                         ___aodiv 0CDA  
                                       ___aomod 0E22                                         ___lodiv 0F46  
                                       ___lomod 10E0                                         ___lwdiv 13D4  
                                     ?_vfprintf 0075                             _EUSART1_is_rx_ready 169C  
                                       __pcinit 1426                                         __ramtop 0600  
                                       __ptext0 002C                                         __ptext1 15EC  
                                       __ptext2 1472                                         __ptext3 06F0  
                                       __ptext4 0B4A                                         __ptext5 10E0  
                                       __ptext6 0F46                                         __ptext7 0934  
                                       __ptext8 131C                                         __ptext9 14F6  
                                     _T0CONbits 000FD5                           _OSCILLATOR_Initialize 167E  
                              ___aldiv@dividend 0016                              _EUSART1_Initialize 14B8  
                      ??_PIN_MANAGER_Initialize 000A                                         _sampled 00A7  
                                       _samples 02CA                                         main@cmd 0097  
                          end_of_initialization 1464                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 000E  
                                 __Lmediumconst 7D72                     _EUSART1_OverrunErrorHandler 00A0  
                                       fputs@fp 0017                               __end_of_vfpfcnvrt 0934  
                              ___aldiv@quotient 0020                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 006B                                      ??_vfprintf 004A  
                          ??_EUSART1_Initialize 000C                        _TMR0_SetInterruptHandler 16BC  
                           EUSART1_Write@txData 000A                           ??_EUSART1_is_rx_ready 000A  
                                  _EUSART1_Read 166A                                      main@period 0093  
                                    main@sample 0098                    __end_of_INTERRUPT_Initialize 16F2  
                                __end_of___lmul 13D4                                     vfpfcnvrt@ap 0064  
                                   vfpfcnvrt@cp 0073                                     vfpfcnvrt@fp 0060  
                                __end_of___wmul 163A                                  _ADC_Initialize 1654  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1614  
                           start_initialization 1426                                 ___lodiv@divisor 0012  
                               ___lodiv@counter 0022                                   _sampleTMR0ISR 118E  
                                   __end_of_abs 1596                                     __end_of_pad 137E  
                                   putch@txData 000B                           __end_of_EUSART1_Write 169C  
                                   vfprintf@fmt 0077                                        ??___lmul 0012  
                                      ??___wmul 000E                          __end_of_ADC_Initialize 166A  
                                   __pdataBANK0 00C9                                        ??_printf 004C  
                                   __pbssBIGRAM 00CA                                     __pbssCOMRAM 004C  
                                ?_sampleTMR0ISR 0001                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 000A                ??_EUSART1_SetFramingErrorHandler 000C  
               ?_EUSART1_SetFramingErrorHandler 000A                           _TMR0_InterruptHandler 009C  
                                     _main$1770 008D                                ___lwdiv@dividend 0010  
                        _PIN_MANAGER_Initialize 15C2                                       _dtoa$1458 0039  
                                     __pintcode 0008                                   __pmediumconst 7D72  
                                      ?___aldiv 0016                                        ?___aodiv 000A  
                                      ?___aomod 000A                                ___aodiv@quotient 001C  
                                      ?___lodiv 000A                                        ?___lomod 000A  
                                      ?___lwdiv 0010                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0008                                 ___lomod@divisor 0012  
                               ___lomod@counter 001A                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                            _EUSART1_ErrorHandler 009E  
                       _EUSART1_SetErrorHandler 16DA                                       _crossings 00CA  
                              ___lwdiv@quotient 0014                            _INTERRUPT_Initialize 16EE  
                               ___aldiv@divisor 001A                               ??_TMR0_Initialize 000C  
                               ___aldiv@counter 001E                                  ___wmul@product 000E  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 000A  
                                      i2u150_40 11F0                                        i2u154_48 15AE  
                    ??_TMR0_SetInterruptHandler 000C                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 1596  
                                     _threshold 00C9                                       _vfpfcnvrt 06F0  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 000A  
                               ??_sampleTMR0ISR 0003                               i2_TMR0_WriteTimer 16E4  
                                    vfpfcnvrt@c 006A                              ?i2_TMR0_WriteTimer 0001  
                             ___lmul@multiplier 000A                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                      vfprintf@ap 0079  
                                      __Lrparam 0000                                      vfprintf@fp 0075  
                       ??_OSCILLATOR_Initialize 000A                                      ?_vfpfcnvrt 0060  
                               ___aodiv@divisor 0012                                 ___aodiv@counter 001A  
                     __end_ofi2_TMR0_WriteTimer 16EE                       ??_EUSART1_SetErrorHandler 000C  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 16A8  
                               ___lwdiv@divisor 0012                                 ___lwdiv@counter 0016  
                                      __ptext10 1564                                        __ptext11 0E22  
                                      __ptext20 1014                                        __ptext12 0CDA  
                                      __ptext21 16B2                                        __ptext13 123C  
                                      __ptext30 16D0                                        __ptext22 163A  
                                      __ptext14 12B0                                        __ptext31 16DA  
                                      __ptext23 152E                                        __ptext15 16A8  
                                      __ptext40 0000                                        __ptext32 1654  
                                      __ptext24 16BC                                        __ptext16 1690  
                                      __ptext33 169C                                        __ptext25 15C2  
                                      __ptext17 1614                                        __ptext34 166A  
                                      __ptext26 167E                                        __ptext18 13D4  
                                      __ptext27 16EE                                        __ptext19 137E  
                                      __ptext36 1596                                        __ptext28 14B8  
                                      __ptext37 16F2                                        __ptext29 16C6  
                                      __ptext38 118E                                        __ptext39 16E4  
                       TMR0_WriteTimer@timerVal 000A                               ??_TMR0_WriteTimer 000C  
          __end_of_TMR0_DefaultInterruptHandler 16F4                    _TMR0_DefaultInterruptHandler 16F2  
                                      _sampling 0053  EUSART1_SetOverrunErrorHandler@interruptHandler 000A  
                                      isa$xinst 000000                                        int$flags 0055  
                                      _vfprintf 1472              __end_of_INTERRUPT_InterruptManager 0028  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 007B  
                   _EUSART1_FramingErrorHandler 00A2                                ___aomod@dividend 000A  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000A  
                                      intlevel2 0000                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 16D0                  _EUSART1_SetOverrunErrorHandler 16C6  
                                    _RCSTA1bits 000FAB                                ??_ADC_Initialize 000A  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 0083  
EUSART1_SetFramingErrorHandler@interruptHandler 000A                                 ___aomod@divisor 0012  
                                   ??_vfpfcnvrt 0066                                 ___aomod@counter 001A  
                            _eusart1RxLastError 0054                              sampleTMR0ISR@state 0052  
                               _TMR0_Initialize 152E                                    ___aldiv@sign 001F  
                                  ___aodiv@sign 001B                  __end_of_PIN_MANAGER_Initialize 15EC  
                                  ___aomod@sign 001B  
