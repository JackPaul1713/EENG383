

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 15:44:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 06/04/2022 GMT
    54                           ; 
    55                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F25K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     
    88 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    89   000000                     
    90 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    91   000000                     
    92 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    93   000000                     _TMR0L	set	4054
    94   000000                     _TMR0H	set	4055
    95   000000                     _TXREG1	set	4013
    96   000000                     _RCREG1	set	4014
    97   000000                     _SPBRG1	set	4015
    98   000000                     _TXSTA1	set	4012
    99   000000                     _ADCON0	set	4034
   100   000000                     _ADRESL	set	4035
   101   000000                     _ANSELA	set	3896
   102   000000                     _ANSELB	set	3897
   103   000000                     _ANSELC	set	3898
   104   000000                     _LATA	set	3977
   105   000000                     _RCONbits	set	4048
   106   000000                     _LATAbits	set	3977
   107   000000                     _T0CON	set	4053
   108   000000                     _RCSTA1bits	set	4011
   109   000000                     _TXSTA1bits	set	4012
   110   000000                     _ADCON0bits	set	4034
   111   000000                     _PLLRDY	set	32407
   112   000000                     _OSCCON2	set	4050
   113   000000                     _OSCCON	set	4051
   114   000000                     _INTCON2bits	set	4081
   115   000000                     _INTCONbits	set	4082
   116   000000                     _TRISA	set	3986
   117   000000                     _LATC	set	3979
   118   000000                     _LATB	set	3978
   119   000000                     _OSCTUNE	set	3995
   120   000000                     _TRISC	set	3988
   121   000000                     _TRISB	set	3987
   122   000000                     _WPUB	set	3937
   123   000000                     _T0CONbits	set	4053
   124   000000                     _PIR1bits	set	3998
   125   000000                     _RCSTA1	set	4011
   126   000000                     _BAUDCON1	set	4024
   127   000000                     _ADCON2	set	4032
   128   000000                     _ADCON1	set	4033
   129   000000                     _ADRESH	set	4036
   130   000000                     _SPBRGH1	set	4016
   131                           
   132                           	psect	mediumconst
   133   007EB8                     __pmediumconst:
   134                           	callstack 0
   135   007EB8  00                 	db	0
   136   007EB9                     STR_16:
   137   007EB9  54                 	db	84	;'T'
   138   007EBA  68                 	db	104	;'h'
   139   007EBB  65                 	db	101	;'e'
   140   007EBC  20                 	db	32
   141   007EBD  6C                 	db	108	;'l'
   142   007EBE  61                 	db	97	;'a'
   143   007EBF  73                 	db	115	;'s'
   144   007EC0  74                 	db	116	;'t'
   145   007EC1  20                 	db	32
   146   007EC2  25                 	db	37
   147   007EC3  64                 	db	100	;'d'
   148   007EC4  20                 	db	32
   149   007EC5  41                 	db	65	;'A'
   150   007EC6  44                 	db	68	;'D'
   151   007EC7  43                 	db	67	;'C'
   152   007EC8  20                 	db	32
   153   007EC9  73                 	db	115	;'s'
   154   007ECA  61                 	db	97	;'a'
   155   007ECB  6D                 	db	109	;'m'
   156   007ECC  70                 	db	112	;'p'
   157   007ECD  6C                 	db	108	;'l'
   158   007ECE  65                 	db	101	;'e'
   159   007ECF  73                 	db	115	;'s'
   160   007ED0  20                 	db	32
   161   007ED1  66                 	db	102	;'f'
   162   007ED2  72                 	db	114	;'r'
   163   007ED3  6F                 	db	111	;'o'
   164   007ED4  6D                 	db	109	;'m'
   165   007ED5  20                 	db	32
   166   007ED6  74                 	db	116	;'t'
   167   007ED7  68                 	db	104	;'h'
   168   007ED8  65                 	db	101	;'e'
   169   007ED9  20                 	db	32
   170   007EDA  6D                 	db	109	;'m'
   171   007EDB  69                 	db	105	;'i'
   172   007EDC  63                 	db	99	;'c'
   173   007EDD  72                 	db	114	;'r'
   174   007EDE  6F                 	db	111	;'o'
   175   007EDF  70                 	db	112	;'p'
   176   007EE0  68                 	db	104	;'h'
   177   007EE1  6F                 	db	111	;'o'
   178   007EE2  6E                 	db	110	;'n'
   179   007EE3  65                 	db	101	;'e'
   180   007EE4  20                 	db	32
   181   007EE5  61                 	db	97	;'a'
   182   007EE6  72                 	db	114	;'r'
   183   007EE7  65                 	db	101	;'e'
   184   007EE8  3A                 	db	58	;':'
   185   007EE9  0D                 	db	13
   186   007EEA  0A                 	db	10
   187   007EEB  00                 	db	0
   188   007EEC                     STR_11:
   189   007EEC  30                 	db	48	;'0'
   190   007EED  2D                 	db	45
   191   007EEE  39                 	db	57	;'9'
   192   007EEF  3A                 	db	58	;':'
   193   007EF0  20                 	db	32
   194   007EF1  73                 	db	115	;'s'
   195   007EF2  77                 	db	119	;'w'
   196   007EF3  69                 	db	105	;'i'
   197   007EF4  74                 	db	116	;'t'
   198   007EF5  63                 	db	99	;'c'
   199   007EF6  68                 	db	104	;'h'
   200   007EF7  20                 	db	32
   201   007EF8  73                 	db	115	;'s'
   202   007EF9  61                 	db	97	;'a'
   203   007EFA  6D                 	db	109	;'m'
   204   007EFB  70                 	db	112	;'p'
   205   007EFC  6C                 	db	108	;'l'
   206   007EFD  65                 	db	101	;'e'
   207   007EFE  64                 	db	100	;'d'
   208   007EFF  20                 	db	32
   209   007F00  63                 	db	99	;'c'
   210   007F01  68                 	db	104	;'h'
   211   007F02  61                 	db	97	;'a'
   212   007F03  6E                 	db	110	;'n'
   213   007F04  6E                 	db	110	;'n'
   214   007F05  65                 	db	101	;'e'
   215   007F06  6C                 	db	108	;'l'
   216   007F07  20                 	db	32
   217   007F08  74                 	db	116	;'t'
   218   007F09  6F                 	db	111	;'o'
   219   007F0A  20                 	db	32
   220   007F0B  41                 	db	65	;'A'
   221   007F0C  4E                 	db	78	;'N'
   222   007F0D  78                 	db	120	;'x'
   223   007F0E  0D                 	db	13
   224   007F0F  0A                 	db	10
   225   007F10  00                 	db	0
   226   007F11                     STR_5:
   227   007F11  2D                 	db	45
   228   007F12  2D                 	db	45
   229   007F13  2D                 	db	45
   230   007F14  2D                 	db	45
   231   007F15  2D                 	db	45
   232   007F16  2D                 	db	45
   233   007F17  2D                 	db	45
   234   007F18  2D                 	db	45
   235   007F19  2D                 	db	45
   236   007F1A  2D                 	db	45
   237   007F1B  2D                 	db	45
   238   007F1C  2D                 	db	45
   239   007F1D  2D                 	db	45
   240   007F1E  2D                 	db	45
   241   007F1F  2D                 	db	45
   242   007F20  2D                 	db	45
   243   007F21  2D                 	db	45
   244   007F22  2D                 	db	45
   245   007F23  2D                 	db	45
   246   007F24  2D                 	db	45
   247   007F25  2D                 	db	45
   248   007F26  2D                 	db	45
   249   007F27  2D                 	db	45
   250   007F28  2D                 	db	45
   251   007F29  2D                 	db	45
   252   007F2A  2D                 	db	45
   253   007F2B  2D                 	db	45
   254   007F2C  2D                 	db	45
   255   007F2D  2D                 	db	45
   256   007F2E  2D                 	db	45
   257   007F2F  0D                 	db	13
   258   007F30  0A                 	db	10
   259   007F31  00                 	db	0
   260   007F32                     STR_10:
   261   007F32  73                 	db	115	;'s'
   262   007F33  3A                 	db	58	;':'
   263   007F34  20                 	db	32
   264   007F35  67                 	db	103	;'g'
   265   007F36  61                 	db	97	;'a'
   266   007F37  74                 	db	116	;'t'
   267   007F38  68                 	db	104	;'h'
   268   007F39  65                 	db	101	;'e'
   269   007F3A  72                 	db	114	;'r'
   270   007F3B  20                 	db	32
   271   007F3C  25                 	db	37
   272   007F3D  64                 	db	100	;'d'
   273   007F3E  20                 	db	32
   274   007F3F  73                 	db	115	;'s'
   275   007F40  61                 	db	97	;'a'
   276   007F41  6D                 	db	109	;'m'
   277   007F42  70                 	db	112	;'p'
   278   007F43  6C                 	db	108	;'l'
   279   007F44  65                 	db	101	;'e'
   280   007F45  73                 	db	115	;'s'
   281   007F46  20                 	db	32
   282   007F47  66                 	db	102	;'f'
   283   007F48  72                 	db	114	;'r'
   284   007F49  6F                 	db	111	;'o'
   285   007F4A  6D                 	db	109	;'m'
   286   007F4B  20                 	db	32
   287   007F4C  41                 	db	65	;'A'
   288   007F4D  44                 	db	68	;'D'
   289   007F4E  43                 	db	67	;'C'
   290   007F4F  0D                 	db	13
   291   007F50  0A                 	db	10
   292   007F51  00                 	db	0
   293   007F52                     STR_19:
   294   007F52  54                 	db	84	;'T'
   295   007F53  68                 	db	104	;'h'
   296   007F54  65                 	db	101	;'e'
   297   007F55  20                 	db	32
   298   007F56  41                 	db	65	;'A'
   299   007F57  44                 	db	68	;'D'
   300   007F58  43                 	db	67	;'C'
   301   007F59  20                 	db	32
   302   007F5A  69                 	db	105	;'i'
   303   007F5B  73                 	db	115	;'s'
   304   007F5C  20                 	db	32
   305   007F5D  6E                 	db	110	;'n'
   306   007F5E  6F                 	db	111	;'o'
   307   007F5F  77                 	db	119	;'w'
   308   007F60  20                 	db	32
   309   007F61  73                 	db	115	;'s'
   310   007F62  61                 	db	97	;'a'
   311   007F63  6D                 	db	109	;'m'
   312   007F64  70                 	db	112	;'p'
   313   007F65  6C                 	db	108	;'l'
   314   007F66  69                 	db	105	;'i'
   315   007F67  6E                 	db	110	;'n'
   316   007F68  67                 	db	103	;'g'
   317   007F69  20                 	db	32
   318   007F6A  41                 	db	65	;'A'
   319   007F6B  4E                 	db	78	;'N'
   320   007F6C  25                 	db	37
   321   007F6D  63                 	db	99	;'c'
   322   007F6E  0D                 	db	13
   323   007F6F  0A                 	db	10
   324   007F70  00                 	db	0
   325   007F71                     STR_2:
   326   007F71  4D                 	db	77	;'M'
   327   007F72  69                 	db	105	;'i'
   328   007F73  63                 	db	99	;'c'
   329   007F74  72                 	db	114	;'r'
   330   007F75  6F                 	db	111	;'o'
   331   007F76  70                 	db	112	;'p'
   332   007F77  68                 	db	104	;'h'
   333   007F78  6F                 	db	111	;'o'
   334   007F79  6E                 	db	110	;'n'
   335   007F7A  65                 	db	101	;'e'
   336   007F7B  20                 	db	32
   337   007F7C  65                 	db	101	;'e'
   338   007F7D  78                 	db	120	;'x'
   339   007F7E  70                 	db	112	;'p'
   340   007F7F  65                 	db	101	;'e'
   341   007F80  72                 	db	114	;'r'
   342   007F81  69                 	db	105	;'i'
   343   007F82  6D                 	db	109	;'m'
   344   007F83  65                 	db	101	;'e'
   345   007F84  6E                 	db	110	;'n'
   346   007F85  74                 	db	116	;'t'
   347   007F86  73                 	db	115	;'s'
   348   007F87  0D                 	db	13
   349   007F88  0A                 	db	10
   350   007F89  00                 	db	0
   351   007F8A                     STR_9:
   352   007F8A  7A                 	db	122	;'z'
   353   007F8B  3A                 	db	58	;':'
   354   007F8C  20                 	db	32
   355   007F8D  43                 	db	67	;'C'
   356   007F8E  6C                 	db	108	;'l'
   357   007F8F  65                 	db	101	;'e'
   358   007F90  61                 	db	97	;'a'
   359   007F91  72                 	db	114	;'r'
   360   007F92  20                 	db	32
   361   007F93  74                 	db	116	;'t'
   362   007F94  68                 	db	104	;'h'
   363   007F95  65                 	db	101	;'e'
   364   007F96  20                 	db	32
   365   007F97  74                 	db	116	;'t'
   366   007F98  65                 	db	101	;'e'
   367   007F99  72                 	db	114	;'r'
   368   007F9A  6D                 	db	109	;'m'
   369   007F9B  69                 	db	105	;'i'
   370   007F9C  6E                 	db	110	;'n'
   371   007F9D  61                 	db	97	;'a'
   372   007F9E  6C                 	db	108	;'l'
   373   007F9F  0D                 	db	13
   374   007FA0  0A                 	db	10
   375   007FA1  00                 	db	0
   376   007FA2                     STR_8:
   377   007FA2  5A                 	db	90	;'Z'
   378   007FA3  3A                 	db	58	;':'
   379   007FA4  20                 	db	32
   380   007FA5  52                 	db	82	;'R'
   381   007FA6  65                 	db	101	;'e'
   382   007FA7  73                 	db	115	;'s'
   383   007FA8  65                 	db	101	;'e'
   384   007FA9  74                 	db	116	;'t'
   385   007FAA  20                 	db	32
   386   007FAB  70                 	db	112	;'p'
   387   007FAC  72                 	db	114	;'r'
   388   007FAD  6F                 	db	111	;'o'
   389   007FAE  63                 	db	99	;'c'
   390   007FAF  65                 	db	101	;'e'
   391   007FB0  73                 	db	115	;'s'
   392   007FB1  73                 	db	115	;'s'
   393   007FB2  6F                 	db	111	;'o'
   394   007FB3  72                 	db	114	;'r'
   395   007FB4  0D                 	db	13
   396   007FB5  0A                 	db	10
   397   007FB6  00                 	db	0
   398   007FB7                     STR_20:
   399   007FB7  55                 	db	85	;'U'
   400   007FB8  6E                 	db	110	;'n'
   401   007FB9  6B                 	db	107	;'k'
   402   007FBA  6E                 	db	110	;'n'
   403   007FBB  6F                 	db	111	;'o'
   404   007FBC  77                 	db	119	;'w'
   405   007FBD  6E                 	db	110	;'n'
   406   007FBE  20                 	db	32
   407   007FBF  6B                 	db	107	;'k'
   408   007FC0  65                 	db	101	;'e'
   409   007FC1  79                 	db	121	;'y'
   410   007FC2  20                 	db	32
   411   007FC3  25                 	db	37
   412   007FC4  63                 	db	99	;'c'
   413   007FC5  0D                 	db	13
   414   007FC6  0A                 	db	10
   415   007FC7  00                 	db	0
   416   007FC8                     STR_6:
   417   007FC8  3F                 	db	63	;'?'
   418   007FC9  3A                 	db	58	;':'
   419   007FCA  20                 	db	32
   420   007FCB  48                 	db	72	;'H'
   421   007FCC  65                 	db	101	;'e'
   422   007FCD  6C                 	db	108	;'l'
   423   007FCE  70                 	db	112	;'p'
   424   007FCF  20                 	db	32
   425   007FD0  6D                 	db	109	;'m'
   426   007FD1  65                 	db	101	;'e'
   427   007FD2  6E                 	db	110	;'n'
   428   007FD3  75                 	db	117	;'u'
   429   007FD4  0D                 	db	13
   430   007FD5  0A                 	db	10
   431   007FD6  00                 	db	0
   432   007FD7                     STR_1:
   433   007FD7  69                 	db	105	;'i'
   434   007FD8  6E                 	db	110	;'n'
   435   007FD9  4C                 	db	76	;'L'
   436   007FDA  61                 	db	97	;'a'
   437   007FDB  62                 	db	98	;'b'
   438   007FDC  20                 	db	32
   439   007FDD  30                 	db	48	;'0'
   440   007FDE  38                 	db	56	;'8'
   441   007FDF  0D                 	db	13
   442   007FE0  0A                 	db	10
   443   007FE1  00                 	db	0
   444   007FE2                     STR_3:
   445   007FE2  44                 	db	68	;'D'
   446   007FE3  65                 	db	101	;'e'
   447   007FE4  76                 	db	118	;'v'
   448   007FE5  27                 	db	39
   449   007FE6  32                 	db	50	;'2'
   450   007FE7  31                 	db	49	;'1'
   451   007FE8  0D                 	db	13
   452   007FE9  0A                 	db	10
   453   007FEA  00                 	db	0
   454   007FEB                     STR_7:
   455   007FEB  6F                 	db	111	;'o'
   456   007FEC  3A                 	db	58	;':'
   457   007FED  20                 	db	32
   458   007FEE  6B                 	db	107	;'k'
   459   007FEF  0D                 	db	13
   460   007FF0  0A                 	db	10
   461   007FF1  00                 	db	0
   462   007FF2                     STR_13:
   463   007FF2  20                 	db	32
   464   007FF3  6B                 	db	107	;'k'
   465   007FF4  0D                 	db	13
   466   007FF5  0A                 	db	10
   467   007FF6  3E                 	db	62	;'>'
   468   007FF7  00                 	db	0
   469   007FF8                     STR_17:
   470   007FF8  25                 	db	37
   471   007FF9  64                 	db	100	;'d'
   472   007FFA  20                 	db	32
   473   007FFB  00                 	db	0
   474   007FFC                     STR_4:
   475   007FFC  3E                 	db	62	;'>'
   476   007FFD  20                 	db	32
   477   007FFE  00                 	db	0
   478   007FFF  00                 	db	0	; dummy byte at the end
   479   000000                     
   480                           ; #config settings
   481                           
   482                           	psect	cinit
   483   000DD6                     __pcinit:
   484                           	callstack 0
   485   000DD6                     start_initialization:
   486                           	callstack 0
   487   000DD6                     __initialization:
   488                           	callstack 0
   489                           
   490                           ; Clear objects allocated to BANK0 (39 bytes)
   491   000DD6  EE00  F09C         	lfsr	0,__pbssBANK0
   492   000DDA  0E27               	movlw	39
   493   000DDC                     clear_0:
   494   000DDC  6AEE               	clrf	postinc0,c
   495   000DDE  06E8               	decf	wreg,f,c
   496   000DE0  E1FD               	bnz	clear_0
   497                           
   498                           ; Clear objects allocated to COMRAM (12 bytes)
   499   000DE2  EE00  F046         	lfsr	0,__pbssCOMRAM
   500   000DE6  0E0C               	movlw	12
   501   000DE8                     clear_1:
   502   000DE8  6AEE               	clrf	postinc0,c
   503   000DEA  06E8               	decf	wreg,f,c
   504   000DEC  E1FD               	bnz	clear_1
   505   000DEE                     end_of_initialization:
   506                           	callstack 0
   507   000DEE                     __end_of__initialization:
   508                           	callstack 0
   509   000DEE  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   510   000DF0  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   511   000DF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   512   000DF4  6EF8               	movwf	tblptru,c
   513   000DF6  0100               	movlb	0
   514   000DF8  EF21  F000         	goto	_main	;jump to C main() function
   515                           
   516                           	psect	bssCOMRAM
   517   000046                     __pbssCOMRAM:
   518                           	callstack 0
   519   000046                     _width:
   520                           	callstack 0
   521   000046                     	ds	2
   522   000048                     _prec:
   523                           	callstack 0
   524   000048                     	ds	2
   525   00004A                     _timer0ReloadVal:
   526                           	callstack 0
   527   00004A                     	ds	2
   528   00004C                     _TMR0_InterruptHandler:
   529                           	callstack 0
   530   00004C                     	ds	2
   531   00004E                     _ADC_InterruptHandler:
   532                           	callstack 0
   533   00004E                     	ds	2
   534   000050                     _flags:
   535                           	callstack 0
   536   000050                     	ds	1
   537   000051                     _eusart1RxLastError:
   538                           	callstack 0
   539   000051                     	ds	1
   540                           
   541                           	psect	bssBANK0
   542   00009C                     __pbssBANK0:
   543                           	callstack 0
   544   00009C                     _EUSART1_ErrorHandler:
   545                           	callstack 0
   546   00009C                     	ds	2
   547   00009E                     _EUSART1_OverrunErrorHandler:
   548                           	callstack 0
   549   00009E                     	ds	2
   550   0000A0                     _EUSART1_FramingErrorHandler:
   551                           	callstack 0
   552   0000A0                     	ds	2
   553   0000A2                     _NEW_SAMPLE:
   554                           	callstack 0
   555   0000A2                     	ds	1
   556   0000A3                     _dbuf:
   557                           	callstack 0
   558   0000A3                     	ds	32
   559                           
   560                           	psect	cstackBANK0
   561   000060                     __pcstackBANK0:
   562                           	callstack 0
   563   000060                     _dtoa$1429:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x0
   567   000060                     	ds	2
   568   000062                     dtoa@p:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2
   572   000062                     	ds	2
   573   000064                     dtoa@w:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x4
   577   000064                     	ds	2
   578   000066                     dtoa@n:
   579                           	callstack 0
   580                           
   581                           ; 8 bytes @ 0x6
   582   000066                     	ds	8
   583   00006E                     dtoa@s:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0xE
   587   00006E                     	ds	1
   588   00006F                     dtoa@i:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0xF
   592   00006F                     	ds	2
   593   000071                     vfpfcnvrt@convarg:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x11
   597   000071                     	ds	8
   598   000079                     vfpfcnvrt@c:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x19
   602   000079                     	ds	1
   603   00007A                     vfpfcnvrt@cp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1A
   607   00007A                     	ds	2
   608   00007C                     ?_vfprintf:
   609                           	callstack 0
   610   00007C                     vfprintf@fp:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x1C
   614   00007C                     	ds	2
   615   00007E                     vfprintf@fmt:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x1E
   619   00007E                     	ds	2
   620   000080                     vfprintf@ap:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x20
   624   000080                     	ds	2
   625   000082                     ?_printf:
   626                           	callstack 0
   627   000082                     printf@fmt:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x22
   631   000082                     	ds	4
   632   000086                     printf@ap:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x26
   636   000086                     	ds	2
   637   000088                     ??_main:
   638                           
   639                           ; 1 bytes @ 0x28
   640   000088                     	ds	2
   641   00008A                     main@adc_reading:
   642                           	callstack 0
   643                           
   644                           ; 16 bytes @ 0x2A
   645   00008A                     	ds	16
   646   00009A                     main@cmd:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x3A
   650   00009A                     	ds	1
   651   00009B                     main@i:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x3B
   655   00009B                     	ds	1
   656                           
   657                           	psect	cstackCOMRAM
   658   000001                     __pcstackCOMRAM:
   659                           	callstack 0
   660   000001                     ?_TMR0_ReadTimer:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x0
   664   000001                     	ds	2
   665   000003                     ??_TMR0_ReadTimer:
   666                           
   667                           ; 1 bytes @ 0x2
   668   000003                     	ds	2
   669   000005                     TMR0_ReadTimer@readVal:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x4
   673   000005                     	ds	2
   674   000007                     TMR0_ReadTimer@readValLow:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x6
   678   000007                     	ds	1
   679   000008                     TMR0_ReadTimer@readValHigh:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x7
   683   000008                     	ds	1
   684   000009                     i2TMR0_WriteTimer@timerVal:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x8
   688   000009                     	ds	2
   689   00000B                     ??_INTERRUPT_InterruptManager:
   690   00000B                     
   691                           ; 1 bytes @ 0xA
   692   00000B                     	ds	2
   693   00000D                     ??_ADC_SelectChannel:
   694   00000D                     ?___aodiv:
   695                           	callstack 0
   696   00000D                     ?___aomod:
   697                           	callstack 0
   698   00000D                     EUSART1_Write@txData:
   699                           	callstack 0
   700   00000D                     EUSART1_SetFramingErrorHandler@interruptHandler:
   701                           	callstack 0
   702   00000D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   703                           	callstack 0
   704   00000D                     EUSART1_SetErrorHandler@interruptHandler:
   705                           	callstack 0
   706   00000D                     TMR0_WriteTimer@timerVal:
   707                           	callstack 0
   708   00000D                     TMR0_SetInterruptHandler@InterruptHandler:
   709                           	callstack 0
   710   00000D                     ___aodiv@dividend:
   711                           	callstack 0
   712   00000D                     ___aomod@dividend:
   713                           	callstack 0
   714                           
   715                           ; 8 bytes @ 0xC
   716   00000D                     	ds	1
   717   00000E                     ADC_SelectChannel@channel:
   718                           	callstack 0
   719   00000E                     putch@txData:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0xD
   723   00000E                     	ds	1
   724   00000F                     ??_TMR0_Initialize:
   725   00000F                     fputc@c:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0xE
   729   00000F                     	ds	2
   730   000011                     fputc@fp:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x10
   734   000011                     	ds	2
   735   000013                     ??_fputc:
   736                           
   737                           ; 1 bytes @ 0x12
   738   000013                     	ds	2
   739   000015                     ___aodiv@divisor:
   740                           	callstack 0
   741   000015                     ___aomod@divisor:
   742                           	callstack 0
   743                           
   744                           ; 8 bytes @ 0x14
   745   000015                     	ds	3
   746   000018                     ctoa@fp:
   747                           	callstack 0
   748   000018                     fputs@s:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x17
   752   000018                     	ds	2
   753   00001A                     ctoa@c:
   754                           	callstack 0
   755   00001A                     fputs@fp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x19
   759   00001A                     	ds	1
   760   00001B                     ??_ctoa:
   761                           
   762                           ; 1 bytes @ 0x1A
   763   00001B                     	ds	1
   764   00001C                     fputs@c:
   765                           	callstack 0
   766   00001C                     ctoa@l:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x1B
   770   00001C                     	ds	1
   771   00001D                     ___aodiv@counter:
   772                           	callstack 0
   773   00001D                     ___aomod@counter:
   774                           	callstack 0
   775   00001D                     fputs@i:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x1C
   779   00001D                     	ds	1
   780   00001E                     ___aodiv@sign:
   781                           	callstack 0
   782   00001E                     ___aomod@sign:
   783                           	callstack 0
   784   00001E                     ctoa@w:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x1D
   788   00001E                     	ds	1
   789   00001F                     ?_abs:
   790                           	callstack 0
   791   00001F                     pad@fp:
   792                           	callstack 0
   793   00001F                     abs@a:
   794                           	callstack 0
   795   00001F                     ___aodiv@quotient:
   796                           	callstack 0
   797                           
   798                           ; 8 bytes @ 0x1E
   799   00001F                     	ds	2
   800   000021                     ??_abs:
   801   000021                     pad@buf:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x20
   805   000021                     	ds	2
   806   000023                     pad@p:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x22
   810   000023                     	ds	2
   811   000025                     ??_pad:
   812                           
   813                           ; 1 bytes @ 0x24
   814   000025                     	ds	1
   815   000026                     pad@i:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x25
   819   000026                     	ds	2
   820   000028                     pad@w:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x27
   824   000028                     	ds	2
   825   00002A                     dtoa@fp:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x29
   829   00002A                     	ds	2
   830   00002C                     dtoa@d:
   831                           	callstack 0
   832                           
   833                           ; 8 bytes @ 0x2B
   834   00002C                     	ds	8
   835   000034                     ??_dtoa:
   836                           
   837                           ; 1 bytes @ 0x33
   838   000034                     	ds	8
   839   00003C                     vfpfcnvrt@fp:
   840                           	callstack 0
   841                           
   842                           ; 2 bytes @ 0x3B
   843   00003C                     	ds	2
   844   00003E                     vfpfcnvrt@fmt:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0x3D
   848   00003E                     	ds	2
   849   000040                     vfpfcnvrt@ap:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x3F
   853   000040                     	ds	2
   854   000042                     ??_vfpfcnvrt:
   855                           
   856                           ; 1 bytes @ 0x41
   857   000042                     	ds	2
   858   000044                     vfprintf@cfmt:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x43
   862   000044                     	ds	2
   863   000046                     
   864                           ; 1 bytes @ 0x45
   865 ;;
   866 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   867 ;;
   868 ;; *************** function _main *****************
   869 ;; Defined at:
   870 ;;		line 36 in file "main.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  adc_reading    16   42[BANK0 ] unsigned char [16]
   875 ;;  i               1   59[BANK0 ] unsigned char 
   876 ;;  cmd             1   58[BANK0 ] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   886 ;;      Params:         0       0       0       0       0       0       0
   887 ;;      Locals:         0      18       0       0       0       0       0
   888 ;;      Temps:          0       2       0       0       0       0       0
   889 ;;      Totals:         0      20       0       0       0       0       0
   890 ;;Total ram usage:       20 bytes
   891 ;; Hardware stack levels required when called: 13
   892 ;; This function calls:
   893 ;;		_ADC_SelectChannel
   894 ;;		_EUSART1_Read
   895 ;;		_EUSART1_is_rx_ready
   896 ;;		_SYSTEM_Initialize
   897 ;;		_TMR0_SetInterruptHandler
   898 ;;		_TMR0_WriteTimer
   899 ;;		_printf
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text0
   906   000042                     __ptext0:
   907                           	callstack 0
   908   000042                     _main:
   909                           	callstack 18
   910   000042                     
   911                           ;main.c: 38: ;main.c: 39:                 case '?':;main.c: 41:                     prin
      +                          tf("?: Help menu\r\n");
   912   000042  EC2C  F007         	call	_SYSTEM_Initialize	;wreg free
   913   000046                     
   914                           ;main.c: 46:                     printf("0-9: switch sampled channel to ANx\r\n");
   915   000046  0E00               	movlw	0
   916   000048  6E0E               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
   917   00004A  0E00               	movlw	0
   918   00004C  6E0D               	movwf	TMR0_WriteTimer@timerVal^0,c
   919   00004E  EC6A  F007         	call	_TMR0_WriteTimer	;wreg free
   920   000052                     
   921                           ;main.c: 47:                     printf("------------------------------\r\n");
   922   000052  94F2               	bcf	242,2,c	;volatile
   923   000054                     l288:
   924   000054  A4F2               	btfss	242,2,c	;volatile
   925   000056  EF2F  F000         	goto	u1541
   926   00005A  EF31  F000         	goto	u1540
   927   00005E                     u1541:
   928   00005E  EF2A  F000         	goto	l288
   929   000062                     u1540:
   930   000062                     
   931                           ;main.c: 50: 
   932   000062  0EFC               	movlw	low _myTMR0ISR
   933   000064  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   934   000066  0E0D               	movlw	high _myTMR0ISR
   935   000068  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   936   00006A  EC6F  F007         	call	_TMR0_SetInterruptHandler	;wreg free
   937   00006E                     
   938                           ;main.c: 51: 
   939   00006E  8EF2               	bsf	242,7,c	;volatile
   940   000070                     
   941                           ;main.c: 52: 
   942   000070  8CF2               	bsf	242,6,c	;volatile
   943   000072                     
   944                           ;main.c: 54:                     printf(" k\r\n>");
   945   000072  0ED7               	movlw	low STR_1
   946   000074  0100               	movlb	0	; () banked
   947   000076  6F82               	movwf	printf@fmt& (0+255),b
   948   000078  0E7F               	movlw	high STR_1
   949   00007A  6F83               	movwf	(printf@fmt+1)& (0+255),b
   950   00007C  ECC3  F006         	call	_printf	;wreg free
   951   000080                     
   952                           ;main.c: 55:                     break;
   953   000080  0E71               	movlw	low STR_2
   954   000082  0100               	movlb	0	; () banked
   955   000084  6F82               	movwf	printf@fmt& (0+255),b
   956   000086  0E7F               	movlw	high STR_2
   957   000088  6F83               	movwf	(printf@fmt+1)& (0+255),b
   958   00008A  ECC3  F006         	call	_printf	;wreg free
   959   00008E                     
   960                           ;main.c: 56: 
   961   00008E  0EE2               	movlw	low STR_3
   962   000090  0100               	movlb	0	; () banked
   963   000092  6F82               	movwf	printf@fmt& (0+255),b
   964   000094  0E7F               	movlw	high STR_3
   965   000096  6F83               	movwf	(printf@fmt+1)& (0+255),b
   966   000098  ECC3  F006         	call	_printf	;wreg free
   967   00009C                     
   968                           ;main.c: 57: 
   969   00009C  0EFC               	movlw	low STR_4
   970   00009E  0100               	movlb	0	; () banked
   971   0000A0  6F82               	movwf	printf@fmt& (0+255),b
   972   0000A2  0E7F               	movlw	high STR_4
   973   0000A4  6F83               	movwf	(printf@fmt+1)& (0+255),b
   974   0000A6  ECC3  F006         	call	_printf	;wreg free
   975   0000AA                     l2429:
   976                           
   977                           ;main.c: 61:                     for (i = 0; i < 40; i++) printf("\n");
   978   0000AA  EC5B  F007         	call	_EUSART1_is_rx_ready	;wreg free
   979   0000AE  0900               	iorlw	0
   980   0000B0  B4D8               	btfsc	status,2,c
   981   0000B2  EF5D  F000         	goto	u1551
   982   0000B6  EF5F  F000         	goto	u1550
   983   0000BA                     u1551:
   984   0000BA  EF55  F000         	goto	l2429
   985   0000BE                     u1550:
   986   0000BE                     
   987                           ;main.c: 62:                     __asm("reset");
   988   0000BE  ECD7  F006         	call	_EUSART1_Read	;wreg free
   989   0000C2  0100               	movlb	0	; () banked
   990   0000C4  6F9A               	movwf	main@cmd& (0+255),b
   991                           
   992                           ;main.c: 63:                     break;
   993   0000C6  EF3B  F001         	goto	l2501
   994   0000CA                     l2433:
   995                           
   996                           ; BSR set to: 0
   997                           ;main.c: 66: 
   998   0000CA  0E11               	movlw	low STR_5
   999   0000CC  6F82               	movwf	printf@fmt& (0+255),b
  1000   0000CE  0E7F               	movlw	high STR_5
  1001   0000D0  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1002   0000D2  ECC3  F006         	call	_printf	;wreg free
  1003                           
  1004                           ;main.c: 67: 
  1005   0000D6  0EC8               	movlw	low STR_6
  1006   0000D8  0100               	movlb	0	; () banked
  1007   0000DA  6F82               	movwf	printf@fmt& (0+255),b
  1008   0000DC  0E7F               	movlw	high STR_6
  1009   0000DE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1010   0000E0  ECC3  F006         	call	_printf	;wreg free
  1011                           
  1012                           ;main.c: 68:                 case 'z':
  1013   0000E4  0EEB               	movlw	low STR_7
  1014   0000E6  0100               	movlb	0	; () banked
  1015   0000E8  6F82               	movwf	printf@fmt& (0+255),b
  1016   0000EA  0E7F               	movlw	high STR_7
  1017   0000EC  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1018   0000EE  ECC3  F006         	call	_printf	;wreg free
  1019                           
  1020                           ;main.c: 69:                     for (i = 0; i < 40; i++) printf("\n>");
  1021   0000F2  0EA2               	movlw	low STR_8
  1022   0000F4  0100               	movlb	0	; () banked
  1023   0000F6  6F82               	movwf	printf@fmt& (0+255),b
  1024   0000F8  0E7F               	movlw	high STR_8
  1025   0000FA  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1026   0000FC  ECC3  F006         	call	_printf	;wreg free
  1027                           
  1028                           ;main.c: 70:                     break;
  1029   000100  0E8A               	movlw	low STR_9
  1030   000102  0100               	movlb	0	; () banked
  1031   000104  6F82               	movwf	printf@fmt& (0+255),b
  1032   000106  0E7F               	movlw	high STR_9
  1033   000108  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1034   00010A  ECC3  F006         	call	_printf	;wreg free
  1035                           
  1036                           ;main.c: 71: 
  1037   00010E  0E32               	movlw	low STR_10
  1038   000110  0100               	movlb	0	; () banked
  1039   000112  6F82               	movwf	printf@fmt& (0+255),b
  1040   000114  0E7F               	movlw	high STR_10
  1041   000116  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1042   000118  0E00               	movlw	0
  1043   00011A  6F85               	movwf	(?_printf+3)& (0+255),b
  1044   00011C  0E10               	movlw	16
  1045   00011E  6F84               	movwf	(?_printf+2)& (0+255),b
  1046   000120  ECC3  F006         	call	_printf	;wreg free
  1047                           
  1048                           ;main.c: 72: 
  1049   000124  0EEC               	movlw	low STR_11
  1050   000126  0100               	movlb	0	; () banked
  1051   000128  6F82               	movwf	printf@fmt& (0+255),b
  1052   00012A  0E7E               	movlw	high STR_11
  1053   00012C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1054   00012E  ECC3  F006         	call	_printf	;wreg free
  1055                           
  1056                           ;main.c: 73: 
  1057   000132  0E11               	movlw	low STR_5
  1058   000134  0100               	movlb	0	; () banked
  1059   000136  6F82               	movwf	printf@fmt& (0+255),b
  1060   000138  0E7F               	movlw	high STR_5
  1061   00013A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1062   00013C  ECC3  F006         	call	_printf	;wreg free
  1063                           
  1064                           ;main.c: 74: 
  1065   000140  EF55  F000         	goto	l2429
  1066   000144                     l2435:
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;main.c: 80:                         adc_reading[i] = ADRESH;
  1070   000144  0EF2               	movlw	low STR_13
  1071   000146  6F82               	movwf	printf@fmt& (0+255),b
  1072   000148  0E7F               	movlw	high STR_13
  1073   00014A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1074   00014C  ECC3  F006         	call	_printf	;wreg free
  1075                           
  1076                           ;main.c: 81:                     }
  1077   000150  EF55  F000         	goto	l2429
  1078   000154                     l2437:
  1079                           
  1080                           ; BSR set to: 0
  1081                           ;main.c: 87:                     break;
  1082   000154  0E00               	movlw	0
  1083   000156  6F9B               	movwf	main@i& (0+255),b
  1084   000158                     l2443:
  1085                           
  1086                           ; BSR set to: 0
  1087   000158  0E30               	movlw	low (STR_5+31)
  1088   00015A  6F82               	movwf	printf@fmt& (0+255),b
  1089   00015C  0E7F               	movlw	high (STR_5+31)
  1090   00015E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1091   000160  ECC3  F006         	call	_printf	;wreg free
  1092   000164  0100               	movlb	0	; () banked
  1093   000166  2B9B               	incf	main@i& (0+255),f,b
  1094   000168                     
  1095                           ; BSR set to: 0
  1096   000168  0E27               	movlw	39
  1097   00016A  659B               	cpfsgt	main@i& (0+255),b
  1098   00016C  EFBA  F000         	goto	u1561
  1099   000170  EFBC  F000         	goto	u1560
  1100   000174                     u1561:
  1101   000174  EFAC  F000         	goto	l2443
  1102   000178                     u1560:
  1103   000178                     
  1104                           ; BSR set to: 0
  1105   000178  00FF               	reset		;# 
  1106                           
  1107                           ;main.c: 89:                 case '0':
  1108   00017A  EF55  F000         	goto	l2429
  1109   00017E                     l2449:
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;main.c: 95:                 case '6':
  1113   00017E  0E00               	movlw	0
  1114   000180  6F9B               	movwf	main@i& (0+255),b
  1115   000182                     l2455:
  1116                           
  1117                           ; BSR set to: 0
  1118   000182  0EF5               	movlw	low (STR_13+3)
  1119   000184  6F82               	movwf	printf@fmt& (0+255),b
  1120   000186  0E7F               	movlw	high (STR_13+3)
  1121   000188  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1122   00018A  ECC3  F006         	call	_printf	;wreg free
  1123   00018E  0100               	movlb	0	; () banked
  1124   000190  2B9B               	incf	main@i& (0+255),f,b
  1125   000192                     
  1126                           ; BSR set to: 0
  1127   000192  0E27               	movlw	39
  1128   000194  659B               	cpfsgt	main@i& (0+255),b
  1129   000196  EFCF  F000         	goto	u1571
  1130   00019A  EFD1  F000         	goto	u1570
  1131   00019E                     u1571:
  1132   00019E  EFC1  F000         	goto	l2455
  1133   0001A2                     u1570:
  1134   0001A2  EF55  F000         	goto	l2429
  1135   0001A6                     l2461:
  1136                           
  1137                           ; BSR set to: 0
  1138                           ;main.c: 103: 
  1139   0001A6  0E00               	movlw	0
  1140   0001A8  6F9B               	movwf	main@i& (0+255),b
  1141   0001AA                     l2467:
  1142                           
  1143                           ; BSR set to: 0
  1144   0001AA  51A2               	movf	_NEW_SAMPLE& (0+255),w,b
  1145   0001AC  B4D8               	btfsc	status,2,c
  1146   0001AE  EFDB  F000         	goto	u1581
  1147   0001B2  EFDD  F000         	goto	u1580
  1148   0001B6                     u1581:
  1149   0001B6  EFD5  F000         	goto	l2467
  1150   0001BA                     u1580:
  1151   0001BA                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 105: 
  1154   0001BA  0E00               	movlw	0
  1155   0001BC  6FA2               	movwf	_NEW_SAMPLE& (0+255),b
  1156   0001BE                     
  1157                           ; BSR set to: 0
  1158                           ;main.c: 106:                 default:
  1159   0001BE  0E8A               	movlw	low main@adc_reading
  1160   0001C0  259B               	addwf	main@i& (0+255),w,b
  1161   0001C2  6ED9               	movwf	fsr2l,c
  1162   0001C4  6ADA               	clrf	fsr2h,c
  1163   0001C6  0E00               	movlw	high main@adc_reading
  1164   0001C8  22DA               	addwfc	fsr2h,f,c
  1165   0001CA  CFC4 FFDF          	movff	4036,indf2	;volatile
  1166   0001CE                     
  1167                           ; BSR set to: 0
  1168                           ;main.c: 107:                     printf("Unknown key %c\r\n", cmd);
  1169   0001CE  2B9B               	incf	main@i& (0+255),f,b
  1170   0001D0                     
  1171                           ; BSR set to: 0
  1172   0001D0  0E0F               	movlw	15
  1173   0001D2  659B               	cpfsgt	main@i& (0+255),b
  1174   0001D4  EFEE  F000         	goto	u1591
  1175   0001D8  EFF0  F000         	goto	u1590
  1176   0001DC                     u1591:
  1177   0001DC  EFD5  F000         	goto	l2467
  1178   0001E0                     u1590:
  1179   0001E0                     
  1180                           ; BSR set to: 0
  1181                           ;main.c: 109:             }
  1182   0001E0  0EB9               	movlw	low STR_16
  1183   0001E2  6F82               	movwf	printf@fmt& (0+255),b
  1184   0001E4  0E7E               	movlw	high STR_16
  1185   0001E6  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1186   0001E8  0E00               	movlw	0
  1187   0001EA  6F85               	movwf	(?_printf+3)& (0+255),b
  1188   0001EC  0E10               	movlw	16
  1189   0001EE  6F84               	movwf	(?_printf+2)& (0+255),b
  1190   0001F0  ECC3  F006         	call	_printf	;wreg free
  1191   0001F4                     
  1192                           ;main.c: 110:         }
  1193   0001F4  0E00               	movlw	0
  1194   0001F6  0100               	movlb	0	; () banked
  1195   0001F8  6F9B               	movwf	main@i& (0+255),b
  1196   0001FA                     l2485:
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 111:     }
  1200   0001FA  0EF8               	movlw	low STR_17
  1201   0001FC  6F82               	movwf	printf@fmt& (0+255),b
  1202   0001FE  0E7F               	movlw	high STR_17
  1203   000200  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1204   000202  0E8A               	movlw	low main@adc_reading
  1205   000204  259B               	addwf	main@i& (0+255),w,b
  1206   000206  6ED9               	movwf	fsr2l,c
  1207   000208  6ADA               	clrf	fsr2h,c
  1208   00020A  0E00               	movlw	high main@adc_reading
  1209   00020C  22DA               	addwfc	fsr2h,f,c
  1210   00020E  50DF               	movf	indf2,w,c
  1211   000210  6F88               	movwf	??_main& (0+255),b
  1212   000212  5188               	movf	??_main& (0+255),w,b
  1213   000214  6F84               	movwf	(?_printf+2)& (0+255),b
  1214   000216  6B85               	clrf	(?_printf+3)& (0+255),b
  1215   000218  ECC3  F006         	call	_printf	;wreg free
  1216   00021C  0100               	movlb	0	; () banked
  1217   00021E  2B9B               	incf	main@i& (0+255),f,b
  1218   000220                     
  1219                           ; BSR set to: 0
  1220   000220  0E0F               	movlw	15
  1221   000222  659B               	cpfsgt	main@i& (0+255),b
  1222   000224  EF16  F001         	goto	u1601
  1223   000228  EF18  F001         	goto	u1600
  1224   00022C                     u1601:
  1225   00022C  EFFD  F000         	goto	l2485
  1226   000230                     u1600:
  1227   000230                     
  1228                           ; BSR set to: 0
  1229                           ;main.c: 112: 
  1230   000230  0E2F               	movlw	low (STR_5+30)
  1231   000232  6F82               	movwf	printf@fmt& (0+255),b
  1232   000234  0E7F               	movlw	high (STR_5+30)
  1233   000236  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1234   000238  ECC3  F006         	call	_printf	;wreg free
  1235                           
  1236                           ;main.c: 113: }
  1237   00023C  EF55  F000         	goto	l2429
  1238   000240                     l314:
  1239   000240                     l2493:
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;main.c: 125:     TMR0_WriteTimer(0x10000 - (1600 - TMR0_ReadTimer()));
  1243   000240  519A               	movf	main@cmd& (0+255),w,b
  1244   000242  0FD0               	addlw	208
  1245   000244  EC39  F007         	call	_ADC_SelectChannel
  1246   000248                     
  1247                           ;main.c: 126:     do { LATAbits.LATA6 = 0; } while(0);
  1248   000248  0E52               	movlw	low STR_19
  1249   00024A  0100               	movlb	0	; () banked
  1250   00024C  6F82               	movwf	printf@fmt& (0+255),b
  1251   00024E  0E7F               	movlw	high STR_19
  1252   000250  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1253   000252  C09A  F084         	movff	main@cmd,?_printf+2
  1254   000256  6B85               	clrf	(?_printf+3)& (0+255),b
  1255   000258  ECC3  F006         	call	_printf	;wreg free
  1256                           
  1257                           ;main.c: 127: 
  1258   00025C  EF55  F000         	goto	l2429
  1259   000260                     l2497:
  1260                           
  1261                           ; BSR set to: 0
  1262   000260  0EB7               	movlw	low STR_20
  1263   000262  6F82               	movwf	printf@fmt& (0+255),b
  1264   000264  0E7F               	movlw	high STR_20
  1265   000266  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1266   000268  C09A  F084         	movff	main@cmd,?_printf+2
  1267   00026C  6B85               	clrf	(?_printf+3)& (0+255),b
  1268   00026E  ECC3  F006         	call	_printf	;wreg free
  1269   000272  EF55  F000         	goto	l2429
  1270   000276                     l2501:
  1271                           
  1272                           ; BSR set to: 0
  1273   000276  519A               	movf	main@cmd& (0+255),w,b
  1274   000278  6F88               	movwf	??_main& (0+255),b
  1275   00027A  6B89               	clrf	(??_main+1)& (0+255),b
  1276                           
  1277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1278                           ; Switch size 1, requested type "simple"
  1279                           ; Number of cases is 1, Range of values is 0 to 0
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte            4     3 (average)
  1283                           ;	Chosen strategy is simple_byte
  1284   00027C  5189               	movf	(??_main+1)& (0+255),w,b
  1285   00027E  0A00               	xorlw	0	; case 0
  1286   000280  B4D8               	btfsc	status,2,c
  1287   000282  EF45  F001         	goto	l2539
  1288   000286  EF30  F001         	goto	l2497
  1289   00028A                     l2539:
  1290                           
  1291                           ; BSR set to: 0
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 15, Range of values is 48 to 122
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte           46    24 (average)
  1297                           ;	Chosen strategy is simple_byte
  1298   00028A  5188               	movf	??_main& (0+255),w,b
  1299   00028C  0A30               	xorlw	48	; case 48
  1300   00028E  B4D8               	btfsc	status,2,c
  1301   000290  EF20  F001         	goto	l314
  1302   000294  0A01               	xorlw	1	; case 49
  1303   000296  B4D8               	btfsc	status,2,c
  1304   000298  EF20  F001         	goto	l314
  1305   00029C  0A03               	xorlw	3	; case 50
  1306   00029E  B4D8               	btfsc	status,2,c
  1307   0002A0  EF20  F001         	goto	l2493
  1308   0002A4  0A01               	xorlw	1	; case 51
  1309   0002A6  B4D8               	btfsc	status,2,c
  1310   0002A8  EF20  F001         	goto	l2493
  1311   0002AC  0A07               	xorlw	7	; case 52
  1312   0002AE  B4D8               	btfsc	status,2,c
  1313   0002B0  EF20  F001         	goto	l2493
  1314   0002B4  0A01               	xorlw	1	; case 53
  1315   0002B6  B4D8               	btfsc	status,2,c
  1316   0002B8  EF20  F001         	goto	l2493
  1317   0002BC  0A03               	xorlw	3	; case 54
  1318   0002BE  B4D8               	btfsc	status,2,c
  1319   0002C0  EF20  F001         	goto	l2493
  1320   0002C4  0A01               	xorlw	1	; case 55
  1321   0002C6  B4D8               	btfsc	status,2,c
  1322   0002C8  EF20  F001         	goto	l2493
  1323   0002CC  0A0F               	xorlw	15	; case 56
  1324   0002CE  B4D8               	btfsc	status,2,c
  1325   0002D0  EF20  F001         	goto	l2493
  1326   0002D4  0A01               	xorlw	1	; case 57
  1327   0002D6  B4D8               	btfsc	status,2,c
  1328   0002D8  EF20  F001         	goto	l2493
  1329   0002DC  0A06               	xorlw	6	; case 63
  1330   0002DE  B4D8               	btfsc	status,2,c
  1331   0002E0  EF65  F000         	goto	l2433
  1332   0002E4  0A65               	xorlw	101	; case 90
  1333   0002E6  B4D8               	btfsc	status,2,c
  1334   0002E8  EFAA  F000         	goto	l2437
  1335   0002EC  0A35               	xorlw	53	; case 111
  1336   0002EE  B4D8               	btfsc	status,2,c
  1337   0002F0  EFA2  F000         	goto	l2435
  1338   0002F4  0A1C               	xorlw	28	; case 115
  1339   0002F6  B4D8               	btfsc	status,2,c
  1340   0002F8  EFD3  F000         	goto	l2461
  1341   0002FC  0A09               	xorlw	9	; case 122
  1342   0002FE  B4D8               	btfsc	status,2,c
  1343   000300  EFBF  F000         	goto	l2449
  1344   000304  EF30  F001         	goto	l2497
  1345   000308  EF1F  F000         	goto	start
  1346   00030C                     __end_of_main:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _printf *****************
  1350 ;; Defined at:
  1351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  1354 ;;		 -> STR_20(17), STR_19(31), STR_18(3), STR_17(4), 
  1355 ;;		 -> STR_16(51), STR_15(3), STR_14(2), STR_13(6), 
  1356 ;;		 -> STR_12(33), STR_11(37), STR_10(32), STR_9(24), 
  1357 ;;		 -> STR_8(21), STR_7(7), STR_6(15), STR_5(33), 
  1358 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  ap              2   38[BANK0 ] PTR void [1]
  1361 ;;		 -> ?_printf(2), 
  1362 ;;  ret             2    0        int 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  2   34[BANK0 ] int 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1372 ;;      Params:         0       4       0       0       0       0       0
  1373 ;;      Locals:         0       2       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0
  1375 ;;      Totals:         0       6       0       0       0       0       0
  1376 ;;Total ram usage:        6 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 12
  1379 ;; This function calls:
  1380 ;;		_vfprintf
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text1
  1387   000D86                     __ptext1:
  1388                           	callstack 0
  1389   000D86                     _printf:
  1390                           	callstack 18
  1391   000D86  0E84               	movlw	low (?_printf+2)
  1392   000D88  0100               	movlb	0	; () banked
  1393   000D8A  6F86               	movwf	printf@ap& (0+255),b
  1394   000D8C  0E00               	movlw	high (?_printf+2)
  1395   000D8E  6F87               	movwf	(printf@ap+1)& (0+255),b
  1396   000D90                     
  1397                           ; BSR set to: 0
  1398   000D90  0E00               	movlw	0
  1399   000D92  6F7C               	movwf	vfprintf@fp& (0+255),b
  1400   000D94  0E00               	movlw	0
  1401   000D96  6F7D               	movwf	(vfprintf@fp+1)& (0+255),b
  1402   000D98  C082  F07E         	movff	printf@fmt,vfprintf@fmt
  1403   000D9C  C083  F07F         	movff	printf@fmt+1,vfprintf@fmt+1
  1404   000DA0  0E86               	movlw	low printf@ap
  1405   000DA2  6F80               	movwf	vfprintf@ap& (0+255),b
  1406   000DA4  0E00               	movlw	high printf@ap
  1407   000DA6  6F81               	movwf	(vfprintf@ap+1)& (0+255),b
  1408   000DA8  ECEE  F005         	call	_vfprintf	;wreg free
  1409   000DAC  0012               	return		;funcret
  1410   000DAE                     __end_of_printf:
  1411                           	callstack 0
  1412                           
  1413 ;; *************** function _vfprintf *****************
  1414 ;; Defined at:
  1415 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  1418 ;;		 -> NULL(0), 
  1419 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  1420 ;;		 -> STR_20(17), STR_19(31), STR_18(3), STR_17(4), 
  1421 ;;		 -> STR_16(51), STR_15(3), STR_14(2), STR_13(6), 
  1422 ;;		 -> STR_12(33), STR_11(37), STR_10(32), STR_9(24), 
  1423 ;;		 -> STR_8(21), STR_7(7), STR_6(15), STR_5(33), 
  1424 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  1425 ;;  ap              2   32[BANK0 ] PTR PTR void 
  1426 ;;		 -> printf@ap(2), 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  cfmt            2   67[COMRAM] PTR unsigned char 
  1429 ;;		 -> STR_20(17), STR_19(31), STR_18(3), STR_17(4), 
  1430 ;;		 -> STR_16(51), STR_15(3), STR_14(2), STR_13(6), 
  1431 ;;		 -> STR_12(33), STR_11(37), STR_10(32), STR_9(24), 
  1432 ;;		 -> STR_8(21), STR_7(7), STR_6(15), STR_5(33), 
  1433 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  2   28[BANK0 ] int 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1443 ;;      Params:         0       6       0       0       0       0       0
  1444 ;;      Locals:         2       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0
  1446 ;;      Totals:         2       6       0       0       0       0       0
  1447 ;;Total ram usage:        8 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 11
  1450 ;; This function calls:
  1451 ;;		_vfpfcnvrt
  1452 ;; This function is called by:
  1453 ;;		_printf
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text2
  1458   000BDC                     __ptext2:
  1459                           	callstack 0
  1460   000BDC                     _vfprintf:
  1461                           	callstack 18
  1462   000BDC                     
  1463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1464   000BDC  C07E  F044         	movff	vfprintf@fmt,vfprintf@cfmt
  1465   000BE0  C07F  F045         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1466                           
  1467                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1468   000BE4  EF02  F006         	goto	l2397
  1469   000BE8                     l2395:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1472   000BE8  C07C  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1473   000BEC  C07D  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1474   000BF0  0E44               	movlw	low vfprintf@cfmt
  1475   000BF2  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1476   000BF4  0E00               	movlw	high vfprintf@cfmt
  1477   000BF6  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1478   000BF8  C080  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1479   000BFC  C081  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1480   000C00  ECC6  F002         	call	_vfpfcnvrt	;wreg free
  1481   000C04                     l2397:
  1482                           
  1483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1484   000C04  C044  FFF6         	movff	vfprintf@cfmt,tblptrl
  1485   000C08  C045  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1486   000C0C                     	if	0	;tblptru may be non-zero
  1487   000C0C                     	endif
  1488   000C0C                     	if	0	;tblptru may be non-zero
  1489   000C0C                     	endif
  1490   000C0C  0008               	tblrd		*
  1491   000C0E  50F5               	movf	tablat,w,c
  1492   000C10  0900               	iorlw	0
  1493   000C12  A4D8               	btfss	status,2,c
  1494   000C14  EF0E  F006         	goto	u1531
  1495   000C18  EF10  F006         	goto	u1530
  1496   000C1C                     u1531:
  1497   000C1C  EFF4  F005         	goto	l2395
  1498   000C20                     u1530:
  1499   000C20                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1501   000C20  0E00               	movlw	0
  1502   000C22  0100               	movlb	0	; () banked
  1503   000C24  6F7D               	movwf	(?_vfprintf+1)& (0+255),b
  1504   000C26  0E00               	movlw	0
  1505   000C28  6F7C               	movwf	?_vfprintf& (0+255),b
  1506   000C2A                     
  1507                           ; BSR set to: 0
  1508   000C2A  0012               	return		;funcret
  1509   000C2C                     __end_of_vfprintf:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _vfpfcnvrt *****************
  1513 ;; Defined at:
  1514 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1517 ;;		 -> NULL(0), 
  1518 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1519 ;;		 -> vfprintf@cfmt(2), 
  1520 ;;  ap              2   63[COMRAM] PTR PTR void 
  1521 ;;		 -> printf@ap(2), 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  convarg         8   17[BANK0 ] struct .
  1524 ;;  cp              2   26[BANK0 ] PTR unsigned char 
  1525 ;;		 -> STR_20(17), STR_19(31), STR_18(3), STR_17(4), 
  1526 ;;		 -> STR_16(51), STR_15(3), STR_14(2), STR_13(6), 
  1527 ;;		 -> STR_12(33), STR_11(37), STR_10(32), STR_9(24), 
  1528 ;;		 -> STR_8(21), STR_7(7), STR_6(15), STR_5(33), 
  1529 ;;		 -> STR_4(3), STR_3(9), STR_2(25), STR_1(11), 
  1530 ;;  i               2    0        int 
  1531 ;;  done            2    0        int 
  1532 ;;  c               1   25[BANK0 ] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1542 ;;      Params:         6       0       0       0       0       0       0
  1543 ;;      Locals:         0      11       0       0       0       0       0
  1544 ;;      Temps:          2       0       0       0       0       0       0
  1545 ;;      Totals:         8      11       0       0       0       0       0
  1546 ;;Total ram usage:       19 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 10
  1549 ;; This function calls:
  1550 ;;		_ctoa
  1551 ;;		_dtoa
  1552 ;;		_fputc
  1553 ;; This function is called by:
  1554 ;;		_vfprintf
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text3
  1559   00058C                     __ptext3:
  1560                           	callstack 0
  1561   00058C                     _vfpfcnvrt:
  1562                           	callstack 18
  1563   00058C                     
  1564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1565   00058C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1566   000590  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1567   000594  CFDE FFF6          	movff	postinc2,tblptrl
  1568   000598  CFDD FFF7          	movff	postdec2,tblptrh
  1569   00059C                     	if	0	;tblptru may be non-zero
  1570   00059C                     	endif
  1571   00059C                     	if	0	;tblptru may be non-zero
  1572   00059C                     	endif
  1573   00059C  0008               	tblrd		*
  1574   00059E  50F5               	movf	tablat,w,c
  1575   0005A0  0A25               	xorlw	37
  1576   0005A2  A4D8               	btfss	status,2,c
  1577   0005A4  EFD6  F002         	goto	u1491
  1578   0005A8  EFD8  F002         	goto	u1490
  1579   0005AC                     u1491:
  1580   0005AC  EF8E  F003         	goto	l2387
  1581   0005B0                     u1490:
  1582   0005B0                     
  1583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1584   0005B0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1585   0005B4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1586   0005B8  2ADE               	incf	postinc2,f,c
  1587   0005BA  0E00               	movlw	0
  1588   0005BC  22DD               	addwfc	postdec2,f,c
  1589   0005BE                     
  1590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1591   0005BE  0E00               	movlw	0
  1592   0005C0  6E47               	movwf	(_width+1)^0,c
  1593   0005C2  0E00               	movlw	0
  1594   0005C4  6E46               	movwf	_width^0,c
  1595   0005C6  C046  F050         	movff	_width,_flags
  1596   0005CA                     
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1598   0005CA  6848               	setf	_prec^0,c
  1599   0005CC  6849               	setf	(_prec+1)^0,c
  1600   0005CE                     
  1601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  1602   0005CE  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1603   0005D2  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1604   0005D6  CFDE FFF6          	movff	postinc2,tblptrl
  1605   0005DA  CFDD FFF7          	movff	postdec2,tblptrh
  1606   0005DE                     	if	0	;tblptru may be non-zero
  1607   0005DE                     	endif
  1608   0005DE                     	if	0	;tblptru may be non-zero
  1609   0005DE                     	endif
  1610   0005DE  0008               	tblrd		*
  1611   0005E0  50F5               	movf	tablat,w,c
  1612   0005E2  0A63               	xorlw	99
  1613   0005E4  A4D8               	btfss	status,2,c
  1614   0005E6  EFF7  F002         	goto	u1501
  1615   0005EA  EFF9  F002         	goto	u1500
  1616   0005EE                     u1501:
  1617   0005EE  EF1D  F003         	goto	l2371
  1618   0005F2                     u1500:
  1619   0005F2                     
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  1621   0005F2  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1622   0005F6  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1623   0005FA  2ADE               	incf	postinc2,f,c
  1624   0005FC  0E00               	movlw	0
  1625   0005FE  22DD               	addwfc	postdec2,f,c
  1626                           
  1627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1628   000600  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1629   000604  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1630   000608  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1631   00060C  0E02               	movlw	2
  1632   00060E  26DE               	addwf	postinc2,f,c
  1633   000610  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1634   000614  0E00               	movlw	0
  1635   000616  22DD               	addwfc	postdec2,f,c
  1636   000618  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1637   00061C  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1638   000620  50DF               	movf	indf2,w,c
  1639   000622  0100               	movlb	0	; () banked
  1640   000624  6F79               	movwf	vfpfcnvrt@c& (0+255),b
  1641   000626                     
  1642                           ; BSR set to: 0
  1643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  1644   000626  C03C  F018         	movff	vfpfcnvrt@fp,ctoa@fp
  1645   00062A  C03D  F019         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1646   00062E  C079  F01A         	movff	vfpfcnvrt@c,ctoa@c
  1647   000632  EC19  F005         	call	_ctoa	;wreg free
  1648   000636  EFA2  F003         	goto	l1075
  1649   00063A                     l2371:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1652   00063A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1653   00063E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1654   000642  CFDE F07A          	movff	postinc2,vfpfcnvrt@cp
  1655   000646  CFDD F07B          	movff	postdec2,vfpfcnvrt@cp+1
  1656   00064A                     
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1658   00064A  C07A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1659   00064E  C07B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1660   000652                     	if	0	;tblptru may be non-zero
  1661   000652                     	endif
  1662   000652                     	if	0	;tblptru may be non-zero
  1663   000652                     	endif
  1664   000652  0008               	tblrd		*
  1665   000654  50F5               	movf	tablat,w,c
  1666   000656  0A64               	xorlw	100
  1667   000658  B4D8               	btfsc	status,2,c
  1668   00065A  EF31  F003         	goto	u1511
  1669   00065E  EF33  F003         	goto	u1510
  1670   000662                     u1511:
  1671   000662  EF41  F003         	goto	l2377
  1672   000666                     u1510:
  1673   000666  C07A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1674   00066A  C07B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1675   00066E                     	if	0	;tblptru may be non-zero
  1676   00066E                     	endif
  1677   00066E                     	if	0	;tblptru may be non-zero
  1678   00066E                     	endif
  1679   00066E  0008               	tblrd		*
  1680   000670  50F5               	movf	tablat,w,c
  1681   000672  0A69               	xorlw	105
  1682   000674  A4D8               	btfss	status,2,c
  1683   000676  EF3F  F003         	goto	u1521
  1684   00067A  EF41  F003         	goto	u1520
  1685   00067E                     u1521:
  1686   00067E  EF85  F003         	goto	l2383
  1687   000682                     u1520:
  1688   000682                     l2377:
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1691   000682  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1692   000686  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1693   00068A  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1694   00068E  0E02               	movlw	2
  1695   000690  26DE               	addwf	postinc2,f,c
  1696   000692  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1697   000696  0E00               	movlw	0
  1698   000698  22DD               	addwfc	postdec2,f,c
  1699   00069A  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1700   00069E  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1701   0006A2  CFDE F071          	movff	postinc2,vfpfcnvrt@convarg
  1702   0006A6  CFDD F072          	movff	postdec2,vfpfcnvrt@convarg+1
  1703   0006AA  0100               	movlb	0	; () banked
  1704   0006AC  0E00               	movlw	0
  1705   0006AE  BF72               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1706   0006B0  0EFF               	movlw	-1
  1707   0006B2  6F73               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1708   0006B4  6F74               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1709   0006B6  6F75               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1710   0006B8  6F76               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1711   0006BA  6F77               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1712   0006BC  6F78               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1715   0006BE  0E01               	movlw	1
  1716   0006C0  257A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1717   0006C2  6E42               	movwf	??_vfpfcnvrt^0,c
  1718   0006C4  0E00               	movlw	0
  1719   0006C6  217B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1720   0006C8  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1721   0006CA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1722   0006CE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1723   0006D2  C042  FFDE         	movff	??_vfpfcnvrt,postinc2
  1724   0006D6  C043  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1725   0006DA                     
  1726                           ; BSR set to: 0
  1727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1728   0006DA  C03C  F02A         	movff	vfpfcnvrt@fp,dtoa@fp
  1729   0006DE  C03D  F02B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1730   0006E2  C071  F02C         	movff	vfpfcnvrt@convarg,dtoa@d
  1731   0006E6  C072  F02D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1732   0006EA  C073  F02E         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1733   0006EE  C074  F02F         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1734   0006F2  C075  F030         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1735   0006F6  C076  F031         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1736   0006FA  C077  F032         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1737   0006FE  C078  F033         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1738   000702  EC86  F001         	call	_dtoa	;wreg free
  1739   000706  EFA2  F003         	goto	l1075
  1740   00070A                     l2383:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1743   00070A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1744   00070E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1745   000712  2ADE               	incf	postinc2,f,c
  1746   000714  0E00               	movlw	0
  1747   000716  22DD               	addwfc	postdec2,f,c
  1748   000718  EFA2  F003         	goto	l1075
  1749   00071C                     l2387:
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1752   00071C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1753   000720  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1754   000724  CFDE FFF6          	movff	postinc2,tblptrl
  1755   000728  CFDD FFF7          	movff	postdec2,tblptrh
  1756   00072C                     	if	0	;tblptru may be non-zero
  1757   00072C                     	endif
  1758   00072C                     	if	0	;tblptru may be non-zero
  1759   00072C                     	endif
  1760   00072C  0008               	tblrd		*
  1761   00072E  50F5               	movf	tablat,w,c
  1762   000730  6E0F               	movwf	fputc@c^0,c
  1763   000732  6A10               	clrf	(fputc@c+1)^0,c
  1764   000734  C03C  F011         	movff	vfpfcnvrt@fp,fputc@fp
  1765   000738  C03D  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1766   00073C  EC66  F005         	call	_fputc	;wreg free
  1767   000740  EF85  F003         	goto	l2383
  1768   000744                     l1075:
  1769   000744  0012               	return		;funcret
  1770   000746                     __end_of_vfpfcnvrt:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _dtoa *****************
  1774 ;; Defined at:
  1775 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  1778 ;;		 -> NULL(0), 
  1779 ;;  d               8   43[COMRAM] long long 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;  n               8    6[BANK0 ] long long 
  1782 ;;  i               2   15[BANK0 ] int 
  1783 ;;  w               2    4[BANK0 ] int 
  1784 ;;  p               2    2[BANK0 ] int 
  1785 ;;  s               1   14[BANK0 ] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  1    wreg      void 
  1788 ;; Registers used:
  1789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1795 ;;      Params:        10       0       0       0       0       0       0
  1796 ;;      Locals:         0      17       0       0       0       0       0
  1797 ;;      Temps:          8       0       0       0       0       0       0
  1798 ;;      Totals:        18      17       0       0       0       0       0
  1799 ;;Total ram usage:       35 bytes
  1800 ;; Hardware stack levels used: 1
  1801 ;; Hardware stack levels required when called: 9
  1802 ;; This function calls:
  1803 ;;		___aodiv
  1804 ;;		___aomod
  1805 ;;		_abs
  1806 ;;		_pad
  1807 ;; This function is called by:
  1808 ;;		_vfpfcnvrt
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text4
  1813   00030C                     __ptext4:
  1814                           	callstack 0
  1815   00030C                     _dtoa:
  1816                           	callstack 18
  1817   00030C                     
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1819   00030C  C02C  F066         	movff	dtoa@d,dtoa@n
  1820   000310  C02D  F067         	movff	dtoa@d+1,dtoa@n+1
  1821   000314  C02E  F068         	movff	dtoa@d+2,dtoa@n+2
  1822   000318  C02F  F069         	movff	dtoa@d+3,dtoa@n+3
  1823   00031C  C030  F06A         	movff	dtoa@d+4,dtoa@n+4
  1824   000320  C031  F06B         	movff	dtoa@d+5,dtoa@n+5
  1825   000324  C032  F06C         	movff	dtoa@d+6,dtoa@n+6
  1826   000328  C033  F06D         	movff	dtoa@d+7,dtoa@n+7
  1827   00032C                     
  1828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1829   00032C  0100               	movlb	0	; () banked
  1830   00032E  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  1831   000330  EF9C  F001         	goto	u1391
  1832   000334  EF9F  F001         	goto	u1390
  1833   000338                     u1391:
  1834   000338  0E01               	movlw	1
  1835   00033A  EFA0  F001         	goto	u1400
  1836   00033E                     u1390:
  1837   00033E  0E00               	movlw	0
  1838   000340                     u1400:
  1839   000340  6F6E               	movwf	dtoa@s& (0+255),b
  1840   000342                     
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1843   000342  516E               	movf	dtoa@s& (0+255),w,b
  1844   000344  B4D8               	btfsc	status,2,c
  1845   000346  EFA7  F001         	goto	u1411
  1846   00034A  EFA9  F001         	goto	u1410
  1847   00034E                     u1411:
  1848   00034E  EFB9  F001         	goto	l2311
  1849   000352                     u1410:
  1850   000352                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1853   000352  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  1854   000354  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  1855   000356  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  1856   000358  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  1857   00035A  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  1858   00035C  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  1859   00035E  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  1860   000360  6D66               	negf	dtoa@n& (0+255),b
  1861   000362  0E00               	movlw	0
  1862   000364  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  1863   000366  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  1864   000368  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  1865   00036A  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  1866   00036C  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  1867   00036E  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  1868   000370  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  1869   000372                     l2311:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1873   000372  BE49               	btfsc	(_prec+1)^0,7,c
  1874   000374  EFC6  F001         	goto	u1420
  1875   000378  5049               	movf	(_prec+1)^0,w,c
  1876   00037A  E106               	bnz	u1421
  1877   00037C  0448               	decf	_prec^0,w,c
  1878   00037E  B0D8               	btfsc	status,0,c
  1879   000380  EFC4  F001         	goto	u1421
  1880   000384  EFC6  F001         	goto	u1420
  1881   000388                     u1421:
  1882   000388  EFCC  F001         	goto	l1056
  1883   00038C                     u1420:
  1884   00038C                     
  1885                           ; BSR set to: 0
  1886   00038C  0E00               	movlw	0
  1887   00038E  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1888   000390  0E01               	movlw	1
  1889   000392  6F62               	movwf	dtoa@p& (0+255),b
  1890   000394  EFD0  F001         	goto	l1058
  1891   000398                     l1056:
  1892                           
  1893                           ; BSR set to: 0
  1894   000398  C048  F062         	movff	_prec,dtoa@p
  1895   00039C  C049  F063         	movff	_prec+1,dtoa@p+1
  1896   0003A0                     l1058:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1900   0003A0  C046  F064         	movff	_width,dtoa@w
  1901   0003A4  C047  F065         	movff	_width+1,dtoa@w+1
  1902   0003A8                     
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1905   0003A8  516E               	movf	dtoa@s& (0+255),w,b
  1906   0003AA  B4D8               	btfsc	status,2,c
  1907   0003AC  EFDA  F001         	goto	u1431
  1908   0003B0  EFDC  F001         	goto	u1430
  1909   0003B4                     u1431:
  1910   0003B4  EFF3  F001         	goto	l1059
  1911   0003B8                     u1430:
  1912   0003B8                     
  1913                           ; BSR set to: 0
  1914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1915   0003B8  0764               	decf	dtoa@w& (0+255),f,b
  1916   0003BA  A0D8               	btfss	status,0,c
  1917   0003BC  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1918   0003BE                     
  1919                           ; BSR set to: 0
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1921   0003BE  516E               	movf	dtoa@s& (0+255),w,b
  1922   0003C0  A4D8               	btfss	status,2,c
  1923   0003C2  EFE5  F001         	goto	u1441
  1924   0003C6  EFE7  F001         	goto	u1440
  1925   0003CA                     u1441:
  1926   0003CA  EFED  F001         	goto	l2323
  1927   0003CE                     u1440:
  1928   0003CE                     
  1929                           ; BSR set to: 0
  1930   0003CE  0E00               	movlw	0
  1931   0003D0  6F61               	movwf	(_dtoa$1429+1)& (0+255),b
  1932   0003D2  0E2B               	movlw	43
  1933   0003D4  6F60               	movwf	_dtoa$1429& (0+255),b
  1934   0003D6  EFF1  F001         	goto	l2325
  1935   0003DA                     l2323:
  1936                           
  1937                           ; BSR set to: 0
  1938   0003DA  0E00               	movlw	0
  1939   0003DC  6F61               	movwf	(_dtoa$1429+1)& (0+255),b
  1940   0003DE  0E2D               	movlw	45
  1941   0003E0  6F60               	movwf	_dtoa$1429& (0+255),b
  1942   0003E2                     l2325:
  1943                           
  1944                           ; BSR set to: 0
  1945   0003E2  C060  F06E         	movff	_dtoa$1429,dtoa@s
  1946   0003E6                     l1059:
  1947                           
  1948                           ; BSR set to: 0
  1949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1950   0003E6  0E00               	movlw	0
  1951   0003E8  6F70               	movwf	(dtoa@i+1)& (0+255),b
  1952   0003EA  0E1F               	movlw	31
  1953   0003EC  6F6F               	movwf	dtoa@i& (0+255),b
  1954   0003EE                     
  1955                           ; BSR set to: 0
  1956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1957   0003EE  0E00               	movlw	0
  1958   0003F0  6FC2               	movwf	(_dbuf+31)& (0+255),b
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1961   0003F2  EF78  F002         	goto	l2339
  1962   0003F6                     l2329:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1966   0003F6  076F               	decf	dtoa@i& (0+255),f,b
  1967   0003F8  A0D8               	btfss	status,0,c
  1968   0003FA  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1969   0003FC                     
  1970                           ; BSR set to: 0
  1971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1972   0003FC  0EA3               	movlw	low _dbuf
  1973   0003FE  256F               	addwf	dtoa@i& (0+255),w,b
  1974   000400  6ED9               	movwf	fsr2l,c
  1975   000402  0E00               	movlw	high _dbuf
  1976   000404  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1977   000406  6EDA               	movwf	fsr2h,c
  1978   000408  C066  F00D         	movff	dtoa@n,___aomod@dividend
  1979   00040C  C067  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  1980   000410  C068  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  1981   000414  C069  F010         	movff	dtoa@n+3,___aomod@dividend+3
  1982   000418  C06A  F011         	movff	dtoa@n+4,___aomod@dividend+4
  1983   00041C  C06B  F012         	movff	dtoa@n+5,___aomod@dividend+5
  1984   000420  C06C  F013         	movff	dtoa@n+6,___aomod@dividend+6
  1985   000424  C06D  F014         	movff	dtoa@n+7,___aomod@dividend+7
  1986   000428  0E0A               	movlw	10
  1987   00042A  6E15               	movwf	___aomod@divisor^0,c
  1988   00042C  0E00               	movlw	0
  1989   00042E  6E16               	movwf	(___aomod@divisor+1)^0,c
  1990   000430  0E00               	movlw	0
  1991   000432  6E17               	movwf	(___aomod@divisor+2)^0,c
  1992   000434  0E00               	movlw	0
  1993   000436  6E18               	movwf	(___aomod@divisor+3)^0,c
  1994   000438  0E00               	movlw	0
  1995   00043A  6E19               	movwf	(___aomod@divisor+4)^0,c
  1996   00043C  0E00               	movlw	0
  1997   00043E  6E1A               	movwf	(___aomod@divisor+5)^0,c
  1998   000440  0E00               	movlw	0
  1999   000442  6E1B               	movwf	(___aomod@divisor+6)^0,c
  2000   000444  0E00               	movlw	0
  2001   000446  6E1C               	movwf	(___aomod@divisor+7)^0,c
  2002   000448  EC67  F004         	call	___aomod	;wreg free
  2003   00044C  C00D  F034         	movff	?___aomod,??_dtoa
  2004   000450  C00E  F035         	movff	?___aomod+1,??_dtoa+1
  2005   000454  C00F  F036         	movff	?___aomod+2,??_dtoa+2
  2006   000458  C010  F037         	movff	?___aomod+3,??_dtoa+3
  2007   00045C  C011  F038         	movff	?___aomod+4,??_dtoa+4
  2008   000460  C012  F039         	movff	?___aomod+5,??_dtoa+5
  2009   000464  C013  F03A         	movff	?___aomod+6,??_dtoa+6
  2010   000468  C014  F03B         	movff	?___aomod+7,??_dtoa+7
  2011   00046C  C034  F01F         	movff	??_dtoa,abs@a
  2012   000470  C035  F020         	movff	??_dtoa+1,abs@a+1
  2013   000474  EC38  F006         	call	_abs	;wreg free
  2014   000478  501F               	movf	?_abs^0,w,c
  2015   00047A  0F30               	addlw	48
  2016   00047C  6EDF               	movwf	indf2,c
  2017   00047E                     
  2018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2019   00047E  0100               	movlb	0	; () banked
  2020   000480  0762               	decf	dtoa@p& (0+255),f,b
  2021   000482  A0D8               	btfss	status,0,c
  2022   000484  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2023   000486                     
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2026   000486  0764               	decf	dtoa@w& (0+255),f,b
  2027   000488  A0D8               	btfss	status,0,c
  2028   00048A  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2029   00048C                     
  2030                           ; BSR set to: 0
  2031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2032   00048C  C066  F00D         	movff	dtoa@n,___aodiv@dividend
  2033   000490  C067  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  2034   000494  C068  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  2035   000498  C069  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  2036   00049C  C06A  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  2037   0004A0  C06B  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  2038   0004A4  C06C  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  2039   0004A8  C06D  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  2040   0004AC  0E0A               	movlw	10
  2041   0004AE  6E15               	movwf	___aodiv@divisor^0,c
  2042   0004B0  0E00               	movlw	0
  2043   0004B2  6E16               	movwf	(___aodiv@divisor+1)^0,c
  2044   0004B4  0E00               	movlw	0
  2045   0004B6  6E17               	movwf	(___aodiv@divisor+2)^0,c
  2046   0004B8  0E00               	movlw	0
  2047   0004BA  6E18               	movwf	(___aodiv@divisor+3)^0,c
  2048   0004BC  0E00               	movlw	0
  2049   0004BE  6E19               	movwf	(___aodiv@divisor+4)^0,c
  2050   0004C0  0E00               	movlw	0
  2051   0004C2  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  2052   0004C4  0E00               	movlw	0
  2053   0004C6  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  2054   0004C8  0E00               	movlw	0
  2055   0004CA  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  2056   0004CC  ECA3  F003         	call	___aodiv	;wreg free
  2057   0004D0  C00D  F066         	movff	?___aodiv,dtoa@n
  2058   0004D4  C00E  F067         	movff	?___aodiv+1,dtoa@n+1
  2059   0004D8  C00F  F068         	movff	?___aodiv+2,dtoa@n+2
  2060   0004DC  C010  F069         	movff	?___aodiv+3,dtoa@n+3
  2061   0004E0  C011  F06A         	movff	?___aodiv+4,dtoa@n+4
  2062   0004E4  C012  F06B         	movff	?___aodiv+5,dtoa@n+5
  2063   0004E8  C013  F06C         	movff	?___aodiv+6,dtoa@n+6
  2064   0004EC  C014  F06D         	movff	?___aodiv+7,dtoa@n+7
  2065   0004F0                     l2339:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2068   0004F0  0100               	movlb	0	; () banked
  2069   0004F2  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  2070   0004F4  EF84  F002         	goto	u1451
  2071   0004F8  5170               	movf	(dtoa@i+1)& (0+255),w,b
  2072   0004FA  E108               	bnz	u1450
  2073   0004FC  056F               	decf	dtoa@i& (0+255),w,b
  2074   0004FE  A0D8               	btfss	status,0,c
  2075   000500  EF84  F002         	goto	u1451
  2076   000504  EF86  F002         	goto	u1450
  2077   000508                     u1451:
  2078   000508  EFA2  F002         	goto	l2345
  2079   00050C                     u1450:
  2080   00050C                     
  2081                           ; BSR set to: 0
  2082   00050C  5166               	movf	dtoa@n& (0+255),w,b
  2083   00050E  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  2084   000510  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  2085   000512  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  2086   000514  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  2087   000516  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  2088   000518  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  2089   00051A  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  2090   00051C  A4D8               	btfss	status,2,c
  2091   00051E  EF93  F002         	goto	u1461
  2092   000522  EF95  F002         	goto	u1460
  2093   000526                     u1461:
  2094   000526  EFFB  F001         	goto	l2329
  2095   00052A                     u1460:
  2096   00052A                     
  2097                           ; BSR set to: 0
  2098   00052A  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  2099   00052C  EFA2  F002         	goto	u1470
  2100   000530  5163               	movf	(dtoa@p+1)& (0+255),w,b
  2101   000532  E106               	bnz	u1471
  2102   000534  0562               	decf	dtoa@p& (0+255),w,b
  2103   000536  B0D8               	btfsc	status,0,c
  2104   000538  EFA0  F002         	goto	u1471
  2105   00053C  EFA2  F002         	goto	u1470
  2106   000540                     u1471:
  2107   000540  EFFB  F001         	goto	l2329
  2108   000544                     u1470:
  2109   000544                     l2345:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2113   000544  516E               	movf	dtoa@s& (0+255),w,b
  2114   000546  B4D8               	btfsc	status,2,c
  2115   000548  EFA8  F002         	goto	u1481
  2116   00054C  EFAA  F002         	goto	u1480
  2117   000550                     u1481:
  2118   000550  EFB5  F002         	goto	l2351
  2119   000554                     u1480:
  2120   000554                     
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2123   000554  076F               	decf	dtoa@i& (0+255),f,b
  2124   000556  A0D8               	btfss	status,0,c
  2125   000558  0770               	decf	(dtoa@i+1)& (0+255),f,b
  2126   00055A                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2129   00055A  0EA3               	movlw	low _dbuf
  2130   00055C  256F               	addwf	dtoa@i& (0+255),w,b
  2131   00055E  6ED9               	movwf	fsr2l,c
  2132   000560  0E00               	movlw	high _dbuf
  2133   000562  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  2134   000564  6EDA               	movwf	fsr2h,c
  2135   000566  C06E  FFDF         	movff	dtoa@s,indf2
  2136   00056A                     l2351:
  2137                           
  2138                           ; BSR set to: 0
  2139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2140   00056A  C02A  F01F         	movff	dtoa@fp,pad@fp
  2141   00056E  C02B  F020         	movff	dtoa@fp+1,pad@fp+1
  2142   000572  0EA3               	movlw	low _dbuf
  2143   000574  256F               	addwf	dtoa@i& (0+255),w,b
  2144   000576  6E21               	movwf	pad@buf^0,c
  2145   000578  0E00               	movlw	high _dbuf
  2146   00057A  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  2147   00057C  6E22               	movwf	(pad@buf+1)^0,c
  2148   00057E  C064  F023         	movff	dtoa@w,pad@p
  2149   000582  C065  F024         	movff	dtoa@w+1,pad@p+1
  2150   000586  ECB1  F005         	call	_pad	;wreg free
  2151   00058A  0012               	return		;funcret
  2152   00058C                     __end_of_dtoa:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _pad *****************
  2156 ;; Defined at:
  2157 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2160 ;;		 -> NULL(0), 
  2161 ;;  buf             2   32[COMRAM] PTR unsigned char 
  2162 ;;		 -> dbuf(32), 
  2163 ;;  p               2   34[COMRAM] int 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  w               2   39[COMRAM] int 
  2166 ;;  i               2   37[COMRAM] int 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2176 ;;      Params:         6       0       0       0       0       0       0
  2177 ;;      Locals:         4       0       0       0       0       0       0
  2178 ;;      Temps:          1       0       0       0       0       0       0
  2179 ;;      Totals:        11       0       0       0       0       0       0
  2180 ;;Total ram usage:       11 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 8
  2183 ;; This function calls:
  2184 ;;		_fputc
  2185 ;;		_fputs
  2186 ;; This function is called by:
  2187 ;;		_dtoa
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text5
  2192   000B62                     __ptext5:
  2193                           	callstack 0
  2194   000B62                     _pad:
  2195                           	callstack 18
  2196   000B62                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2198   000B62  BE24               	btfsc	(pad@p+1)^0,7,c
  2199   000B64  EFB6  F005         	goto	u1331
  2200   000B68  EFB8  F005         	goto	u1330
  2201   000B6C                     u1331:
  2202   000B6C  EFBE  F005         	goto	l2271
  2203   000B70                     u1330:
  2204   000B70  C023  F028         	movff	pad@p,pad@w
  2205   000B74  C024  F029         	movff	pad@p+1,pad@w+1
  2206   000B78  EFC2  F005         	goto	l1033
  2207   000B7C                     l2271:
  2208   000B7C  0E00               	movlw	0
  2209   000B7E  6E29               	movwf	(pad@w+1)^0,c
  2210   000B80  0E00               	movlw	0
  2211   000B82  6E28               	movwf	pad@w^0,c
  2212   000B84                     l1033:
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2215   000B84  0E00               	movlw	0
  2216   000B86  6E27               	movwf	(pad@i+1)^0,c
  2217   000B88  0E00               	movlw	0
  2218   000B8A  6E26               	movwf	pad@i^0,c
  2219                           
  2220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2221   000B8C  EFD4  F005         	goto	l2277
  2222   000B90                     l2273:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2225   000B90  0E00               	movlw	0
  2226   000B92  6E10               	movwf	(fputc@c+1)^0,c
  2227   000B94  0E20               	movlw	32
  2228   000B96  6E0F               	movwf	fputc@c^0,c
  2229   000B98  C01F  F011         	movff	pad@fp,fputc@fp
  2230   000B9C  C020  F012         	movff	pad@fp+1,fputc@fp+1
  2231   000BA0  EC66  F005         	call	_fputc	;wreg free
  2232   000BA4                     
  2233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2234   000BA4  4A26               	infsnz	pad@i^0,f,c
  2235   000BA6  2A27               	incf	(pad@i+1)^0,f,c
  2236   000BA8                     l2277:
  2237                           
  2238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2239   000BA8  5028               	movf	pad@w^0,w,c
  2240   000BAA  5C26               	subwf	pad@i^0,w,c
  2241   000BAC  5027               	movf	(pad@i+1)^0,w,c
  2242   000BAE  0A80               	xorlw	128
  2243   000BB0  6E25               	movwf	??_pad^0,c
  2244   000BB2  5029               	movf	(pad@w+1)^0,w,c
  2245   000BB4  0A80               	xorlw	128
  2246   000BB6  5825               	subwfb	??_pad^0,w,c
  2247   000BB8  A0D8               	btfss	status,0,c
  2248   000BBA  EFE1  F005         	goto	u1341
  2249   000BBE  EFE3  F005         	goto	u1340
  2250   000BC2                     u1341:
  2251   000BC2  EFC8  F005         	goto	l2273
  2252   000BC6                     u1340:
  2253   000BC6                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2255   000BC6  C021  F018         	movff	pad@buf,fputs@s
  2256   000BCA  C022  F019         	movff	pad@buf+1,fputs@s+1
  2257   000BCE  C01F  F01A         	movff	pad@fp,fputs@fp
  2258   000BD2  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  2259   000BD6  EC16  F006         	call	_fputs	;wreg free
  2260   000BDA  0012               	return		;funcret
  2261   000BDC                     __end_of_pad:
  2262                           	callstack 0
  2263                           
  2264 ;; *************** function _fputs *****************
  2265 ;; Defined at:
  2266 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2269 ;;		 -> dbuf(32), 
  2270 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  2271 ;;		 -> NULL(0), 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  i               2   28[COMRAM] int 
  2274 ;;  c               1   27[COMRAM] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2   23[COMRAM] int 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2284 ;;      Params:         4       0       0       0       0       0       0
  2285 ;;      Locals:         3       0       0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0
  2287 ;;      Totals:         7       0       0       0       0       0       0
  2288 ;;Total ram usage:        7 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 7
  2291 ;; This function calls:
  2292 ;;		_fputc
  2293 ;; This function is called by:
  2294 ;;		_pad
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	text6
  2299   000C2C                     __ptext6:
  2300                           	callstack 0
  2301   000C2C                     _fputs:
  2302                           	callstack 18
  2303   000C2C  0E00               	movlw	0
  2304   000C2E  6E1E               	movwf	(fputs@i+1)^0,c
  2305   000C30  0E00               	movlw	0
  2306   000C32  6E1D               	movwf	fputs@i^0,c
  2307   000C34  EF27  F006         	goto	l2185
  2308   000C38                     l2181:
  2309   000C38  C01C  F00F         	movff	fputs@c,fputc@c
  2310   000C3C  6A10               	clrf	(fputc@c+1)^0,c
  2311   000C3E  C01A  F011         	movff	fputs@fp,fputc@fp
  2312   000C42  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
  2313   000C46  EC66  F005         	call	_fputc	;wreg free
  2314   000C4A  4A1D               	infsnz	fputs@i^0,f,c
  2315   000C4C  2A1E               	incf	(fputs@i+1)^0,f,c
  2316   000C4E                     l2185:
  2317   000C4E  501D               	movf	fputs@i^0,w,c
  2318   000C50  2418               	addwf	fputs@s^0,w,c
  2319   000C52  6ED9               	movwf	fsr2l,c
  2320   000C54  501E               	movf	(fputs@i+1)^0,w,c
  2321   000C56  2019               	addwfc	(fputs@s+1)^0,w,c
  2322   000C58  6EDA               	movwf	fsr2h,c
  2323   000C5A  50DF               	movf	indf2,w,c
  2324   000C5C  6E1C               	movwf	fputs@c^0,c
  2325   000C5E  501C               	movf	fputs@c^0,w,c
  2326   000C60  A4D8               	btfss	status,2,c
  2327   000C62  EF35  F006         	goto	u1191
  2328   000C66  EF37  F006         	goto	u1190
  2329   000C6A                     u1191:
  2330   000C6A  EF1C  F006         	goto	l2181
  2331   000C6E                     u1190:
  2332   000C6E  0012               	return		;funcret
  2333   000C70                     __end_of_fputs:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _abs *****************
  2337 ;; Defined at:
  2338 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  a               2   30[COMRAM] int 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2   30[COMRAM] int 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2352 ;;      Params:         2       0       0       0       0       0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0
  2354 ;;      Temps:          2       0       0       0       0       0       0
  2355 ;;      Totals:         4       0       0       0       0       0       0
  2356 ;;Total ram usage:        4 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 4
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_dtoa
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text7
  2367   000C70                     __ptext7:
  2368                           	callstack 0
  2369   000C70                     _abs:
  2370                           	callstack 22
  2371   000C70  BE20               	btfsc	(abs@a+1)^0,7,c
  2372   000C72  EF45  F006         	goto	u1350
  2373   000C76  5020               	movf	(abs@a+1)^0,w,c
  2374   000C78  E106               	bnz	u1351
  2375   000C7A  041F               	decf	abs@a^0,w,c
  2376   000C7C  B0D8               	btfsc	status,0,c
  2377   000C7E  EF43  F006         	goto	u1351
  2378   000C82  EF45  F006         	goto	u1350
  2379   000C86                     u1351:
  2380   000C86  EF53  F006         	goto	l1088
  2381   000C8A                     u1350:
  2382   000C8A  C01F  F021         	movff	abs@a,??_abs
  2383   000C8E  C020  F022         	movff	abs@a+1,??_abs+1
  2384   000C92  1E21               	comf	??_abs^0,f,c
  2385   000C94  1E22               	comf	(??_abs+1)^0,f,c
  2386   000C96  4A21               	infsnz	??_abs^0,f,c
  2387   000C98  2A22               	incf	(??_abs+1)^0,f,c
  2388   000C9A  C021  F01F         	movff	??_abs,?_abs
  2389   000C9E  C022  F020         	movff	??_abs+1,?_abs+1
  2390   000CA2  EF57  F006         	goto	l1091
  2391   000CA6                     l1088:
  2392   000CA6  C01F  F01F         	movff	abs@a,?_abs
  2393   000CAA  C020  F020         	movff	abs@a+1,?_abs+1
  2394   000CAE                     l1091:
  2395   000CAE  0012               	return		;funcret
  2396   000CB0                     __end_of_abs:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function ___aomod *****************
  2400 ;; Defined at:
  2401 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  dividend        8   12[COMRAM] long long 
  2404 ;;  divisor         8   20[COMRAM] long long 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  sign            1   29[COMRAM] unsigned char 
  2407 ;;  counter         1   28[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  8   12[COMRAM] long long 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2417 ;;      Params:        16       0       0       0       0       0       0
  2418 ;;      Locals:         2       0       0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0
  2420 ;;      Totals:        18       0       0       0       0       0       0
  2421 ;;Total ram usage:       18 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 4
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_dtoa
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text8
  2432   0008CE                     __ptext8:
  2433                           	callstack 0
  2434   0008CE                     ___aomod:
  2435                           	callstack 22
  2436   0008CE  0E00               	movlw	0
  2437   0008D0  6E1E               	movwf	___aomod@sign^0,c
  2438   0008D2  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2439   0008D4  EF70  F004         	goto	u1270
  2440   0008D8  EF6E  F004         	goto	u1271
  2441   0008DC                     u1271:
  2442   0008DC  EF82  F004         	goto	l2239
  2443   0008E0                     u1270:
  2444   0008E0  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2445   0008E2  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2446   0008E4  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2447   0008E6  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2448   0008E8  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2449   0008EA  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2450   0008EC  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2451   0008EE  6C0D               	negf	___aomod@dividend^0,c
  2452   0008F0  0E00               	movlw	0
  2453   0008F2  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2454   0008F4  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2455   0008F6  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2456   0008F8  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2457   0008FA  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2458   0008FC  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2459   0008FE  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2460   000900  0E01               	movlw	1
  2461   000902  6E1E               	movwf	___aomod@sign^0,c
  2462   000904                     l2239:
  2463   000904  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2464   000906  EF89  F004         	goto	u1280
  2465   00090A  EF87  F004         	goto	u1281
  2466   00090E                     u1281:
  2467   00090E  EF99  F004         	goto	l2243
  2468   000912                     u1280:
  2469   000912  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2470   000914  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2471   000916  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2472   000918  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2473   00091A  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2474   00091C  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2475   00091E  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2476   000920  6C15               	negf	___aomod@divisor^0,c
  2477   000922  0E00               	movlw	0
  2478   000924  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2479   000926  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2480   000928  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2481   00092A  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2482   00092C  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2483   00092E  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2484   000930  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2485   000932                     l2243:
  2486   000932  5015               	movf	___aomod@divisor^0,w,c
  2487   000934  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2488   000936  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2489   000938  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2490   00093A  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2491   00093C  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2492   00093E  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2493   000940  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2494   000942  B4D8               	btfsc	status,2,c
  2495   000944  EFA6  F004         	goto	u1291
  2496   000948  EFA8  F004         	goto	u1290
  2497   00094C                     u1291:
  2498   00094C  EFF0  F004         	goto	l2259
  2499   000950                     u1290:
  2500   000950  0E01               	movlw	1
  2501   000952  6E1D               	movwf	___aomod@counter^0,c
  2502   000954  EFB6  F004         	goto	l2249
  2503   000958                     l2247:
  2504   000958  90D8               	bcf	status,0,c
  2505   00095A  3615               	rlcf	___aomod@divisor^0,f,c
  2506   00095C  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2507   00095E  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2508   000960  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2509   000962  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2510   000964  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2511   000966  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2512   000968  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2513   00096A  2A1D               	incf	___aomod@counter^0,f,c
  2514   00096C                     l2249:
  2515   00096C  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2516   00096E  EFBB  F004         	goto	u1301
  2517   000972  EFBD  F004         	goto	u1300
  2518   000976                     u1301:
  2519   000976  EFAC  F004         	goto	l2247
  2520   00097A                     u1300:
  2521   00097A                     l2251:
  2522   00097A  5015               	movf	___aomod@divisor^0,w,c
  2523   00097C  5C0D               	subwf	___aomod@dividend^0,w,c
  2524   00097E  5016               	movf	(___aomod@divisor+1)^0,w,c
  2525   000980  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2526   000982  5017               	movf	(___aomod@divisor+2)^0,w,c
  2527   000984  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2528   000986  5018               	movf	(___aomod@divisor+3)^0,w,c
  2529   000988  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2530   00098A  5019               	movf	(___aomod@divisor+4)^0,w,c
  2531   00098C  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2532   00098E  501A               	movf	(___aomod@divisor+5)^0,w,c
  2533   000990  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2534   000992  501B               	movf	(___aomod@divisor+6)^0,w,c
  2535   000994  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2536   000996  501C               	movf	(___aomod@divisor+7)^0,w,c
  2537   000998  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2538   00099A  A0D8               	btfss	status,0,c
  2539   00099C  EFD2  F004         	goto	u1311
  2540   0009A0  EFD4  F004         	goto	u1310
  2541   0009A4                     u1311:
  2542   0009A4  EFE4  F004         	goto	l2255
  2543   0009A8                     u1310:
  2544   0009A8  5015               	movf	___aomod@divisor^0,w,c
  2545   0009AA  5E0D               	subwf	___aomod@dividend^0,f,c
  2546   0009AC  5016               	movf	(___aomod@divisor+1)^0,w,c
  2547   0009AE  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2548   0009B0  5017               	movf	(___aomod@divisor+2)^0,w,c
  2549   0009B2  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2550   0009B4  5018               	movf	(___aomod@divisor+3)^0,w,c
  2551   0009B6  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2552   0009B8  5019               	movf	(___aomod@divisor+4)^0,w,c
  2553   0009BA  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2554   0009BC  501A               	movf	(___aomod@divisor+5)^0,w,c
  2555   0009BE  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2556   0009C0  501B               	movf	(___aomod@divisor+6)^0,w,c
  2557   0009C2  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2558   0009C4  501C               	movf	(___aomod@divisor+7)^0,w,c
  2559   0009C6  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2560   0009C8                     l2255:
  2561   0009C8  90D8               	bcf	status,0,c
  2562   0009CA  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2563   0009CC  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2564   0009CE  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2565   0009D0  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2566   0009D2  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2567   0009D4  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2568   0009D6  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2569   0009D8  3215               	rrcf	___aomod@divisor^0,f,c
  2570   0009DA  2E1D               	decfsz	___aomod@counter^0,f,c
  2571   0009DC  EFBD  F004         	goto	l2251
  2572   0009E0                     l2259:
  2573   0009E0  501E               	movf	___aomod@sign^0,w,c
  2574   0009E2  B4D8               	btfsc	status,2,c
  2575   0009E4  EFF6  F004         	goto	u1321
  2576   0009E8  EFF8  F004         	goto	u1320
  2577   0009EC                     u1321:
  2578   0009EC  EF08  F005         	goto	l2263
  2579   0009F0                     u1320:
  2580   0009F0  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2581   0009F2  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2582   0009F4  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2583   0009F6  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2584   0009F8  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2585   0009FA  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2586   0009FC  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2587   0009FE  6C0D               	negf	___aomod@dividend^0,c
  2588   000A00  0E00               	movlw	0
  2589   000A02  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2590   000A04  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2591   000A06  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2592   000A08  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2593   000A0A  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2594   000A0C  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2595   000A0E  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2596   000A10                     l2263:
  2597   000A10  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2598   000A14  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2599   000A18  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2600   000A1C  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2601   000A20  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2602   000A24  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2603   000A28  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2604   000A2C  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2605   000A30  0012               	return		;funcret
  2606   000A32                     __end_of___aomod:
  2607                           	callstack 0
  2608                           
  2609 ;; *************** function ___aodiv *****************
  2610 ;; Defined at:
  2611 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;  dividend        8   12[COMRAM] long long 
  2614 ;;  divisor         8   20[COMRAM] long long 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  quotient        8   30[COMRAM] long long 
  2617 ;;  sign            1   29[COMRAM] unsigned char 
  2618 ;;  counter         1   28[COMRAM] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  8   12[COMRAM] long long 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2628 ;;      Params:        16       0       0       0       0       0       0
  2629 ;;      Locals:        10       0       0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0
  2631 ;;      Totals:        26       0       0       0       0       0       0
  2632 ;;Total ram usage:       26 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 4
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_dtoa
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text9
  2643   000746                     __ptext9:
  2644                           	callstack 0
  2645   000746                     ___aodiv:
  2646                           	callstack 22
  2647   000746  0E00               	movlw	0
  2648   000748  6E1E               	movwf	___aodiv@sign^0,c
  2649   00074A  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2650   00074C  EFAC  F003         	goto	u1200
  2651   000750  EFAA  F003         	goto	u1201
  2652   000754                     u1201:
  2653   000754  EFBE  F003         	goto	l2195
  2654   000758                     u1200:
  2655   000758  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2656   00075A  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2657   00075C  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2658   00075E  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2659   000760  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2660   000762  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2661   000764  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2662   000766  6C15               	negf	___aodiv@divisor^0,c
  2663   000768  0E00               	movlw	0
  2664   00076A  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2665   00076C  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2666   00076E  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2667   000770  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2668   000772  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2669   000774  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2670   000776  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2671   000778  0E01               	movlw	1
  2672   00077A  6E1E               	movwf	___aodiv@sign^0,c
  2673   00077C                     l2195:
  2674   00077C  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2675   00077E  EFC5  F003         	goto	u1210
  2676   000782  EFC3  F003         	goto	u1211
  2677   000786                     u1211:
  2678   000786  EFD7  F003         	goto	l2201
  2679   00078A                     u1210:
  2680   00078A  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2681   00078C  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2682   00078E  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2683   000790  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2684   000792  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2685   000794  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2686   000796  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2687   000798  6C0D               	negf	___aodiv@dividend^0,c
  2688   00079A  0E00               	movlw	0
  2689   00079C  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2690   00079E  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2691   0007A0  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2692   0007A2  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2693   0007A4  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2694   0007A6  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2695   0007A8  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2696   0007AA  0E01               	movlw	1
  2697   0007AC  1A1E               	xorwf	___aodiv@sign^0,f,c
  2698   0007AE                     l2201:
  2699   0007AE  EE20  F01F         	lfsr	2,___aodiv@quotient
  2700   0007B2  0E07               	movlw	7
  2701   0007B4                     u1221:
  2702   0007B4  6ADE               	clrf	postinc2,c
  2703   0007B6  06E8               	decf	wreg,f,c
  2704   0007B8  E2FD               	bc	u1221
  2705   0007BA  5015               	movf	___aodiv@divisor^0,w,c
  2706   0007BC  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2707   0007BE  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2708   0007C0  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2709   0007C2  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2710   0007C4  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2711   0007C6  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2712   0007C8  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2713   0007CA  B4D8               	btfsc	status,2,c
  2714   0007CC  EFEA  F003         	goto	u1231
  2715   0007D0  EFEC  F003         	goto	u1230
  2716   0007D4                     u1231:
  2717   0007D4  EF3E  F004         	goto	l2223
  2718   0007D8                     u1230:
  2719   0007D8  0E01               	movlw	1
  2720   0007DA  6E1D               	movwf	___aodiv@counter^0,c
  2721   0007DC  EFFA  F003         	goto	l2209
  2722   0007E0                     l2207:
  2723   0007E0  90D8               	bcf	status,0,c
  2724   0007E2  3615               	rlcf	___aodiv@divisor^0,f,c
  2725   0007E4  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2726   0007E6  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2727   0007E8  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2728   0007EA  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2729   0007EC  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2730   0007EE  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2731   0007F0  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2732   0007F2  2A1D               	incf	___aodiv@counter^0,f,c
  2733   0007F4                     l2209:
  2734   0007F4  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2735   0007F6  EFFF  F003         	goto	u1241
  2736   0007FA  EF01  F004         	goto	u1240
  2737   0007FE                     u1241:
  2738   0007FE  EFF0  F003         	goto	l2207
  2739   000802                     u1240:
  2740   000802                     l2211:
  2741   000802  90D8               	bcf	status,0,c
  2742   000804  361F               	rlcf	___aodiv@quotient^0,f,c
  2743   000806  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2744   000808  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2745   00080A  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2746   00080C  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2747   00080E  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2748   000810  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2749   000812  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2750   000814  5015               	movf	___aodiv@divisor^0,w,c
  2751   000816  5C0D               	subwf	___aodiv@dividend^0,w,c
  2752   000818  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2753   00081A  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2754   00081C  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2755   00081E  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2756   000820  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2757   000822  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2758   000824  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2759   000826  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2760   000828  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2761   00082A  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2762   00082C  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2763   00082E  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2764   000830  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2765   000832  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2766   000834  A0D8               	btfss	status,0,c
  2767   000836  EF1F  F004         	goto	u1251
  2768   00083A  EF21  F004         	goto	u1250
  2769   00083E                     u1251:
  2770   00083E  EF32  F004         	goto	l2219
  2771   000842                     u1250:
  2772   000842  5015               	movf	___aodiv@divisor^0,w,c
  2773   000844  5E0D               	subwf	___aodiv@dividend^0,f,c
  2774   000846  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2775   000848  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2776   00084A  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2777   00084C  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2778   00084E  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2779   000850  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2780   000852  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2781   000854  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2782   000856  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2783   000858  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2784   00085A  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2785   00085C  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2786   00085E  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2787   000860  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2788   000862  801F               	bsf	___aodiv@quotient^0,0,c
  2789   000864                     l2219:
  2790   000864  90D8               	bcf	status,0,c
  2791   000866  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2792   000868  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  2793   00086A  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  2794   00086C  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  2795   00086E  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  2796   000870  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  2797   000872  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  2798   000874  3215               	rrcf	___aodiv@divisor^0,f,c
  2799   000876  2E1D               	decfsz	___aodiv@counter^0,f,c
  2800   000878  EF01  F004         	goto	l2211
  2801   00087C                     l2223:
  2802   00087C  501E               	movf	___aodiv@sign^0,w,c
  2803   00087E  B4D8               	btfsc	status,2,c
  2804   000880  EF44  F004         	goto	u1261
  2805   000884  EF46  F004         	goto	u1260
  2806   000888                     u1261:
  2807   000888  EF56  F004         	goto	l2227
  2808   00088C                     u1260:
  2809   00088C  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  2810   00088E  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  2811   000890  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  2812   000892  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  2813   000894  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  2814   000896  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  2815   000898  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  2816   00089A  6C1F               	negf	___aodiv@quotient^0,c
  2817   00089C  0E00               	movlw	0
  2818   00089E  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  2819   0008A0  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  2820   0008A2  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  2821   0008A4  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  2822   0008A6  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  2823   0008A8  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  2824   0008AA  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  2825   0008AC                     l2227:
  2826   0008AC  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  2827   0008B0  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  2828   0008B4  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  2829   0008B8  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  2830   0008BC  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  2831   0008C0  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  2832   0008C4  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  2833   0008C8  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  2834   0008CC  0012               	return		;funcret
  2835   0008CE                     __end_of___aodiv:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _ctoa *****************
  2839 ;; Defined at:
  2840 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2843 ;;		 -> NULL(0), 
  2844 ;;  c               1   25[COMRAM] unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  w               2   29[COMRAM] int 
  2847 ;;  l               2   27[COMRAM] int 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2857 ;;      Params:         3       0       0       0       0       0       0
  2858 ;;      Locals:         4       0       0       0       0       0       0
  2859 ;;      Temps:          1       0       0       0       0       0       0
  2860 ;;      Totals:         8       0       0       0       0       0       0
  2861 ;;Total ram usage:        8 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 7
  2864 ;; This function calls:
  2865 ;;		_fputc
  2866 ;; This function is called by:
  2867 ;;		_vfpfcnvrt
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text10
  2872   000A32                     __ptext10:
  2873                           	callstack 0
  2874   000A32                     _ctoa:
  2875                           	callstack 20
  2876   000A32                     
  2877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  2878   000A32  5046               	movf	_width^0,w,c
  2879   000A34  1047               	iorwf	(_width+1)^0,w,c
  2880   000A36  A4D8               	btfss	status,2,c
  2881   000A38  EF20  F005         	goto	u1361
  2882   000A3C  EF22  F005         	goto	u1360
  2883   000A40                     u1361:
  2884   000A40  EF28  F005         	goto	l2289
  2885   000A44                     u1360:
  2886   000A44  C046  F01E         	movff	_width,ctoa@w
  2887   000A48  C047  F01F         	movff	_width+1,ctoa@w+1
  2888   000A4C  EF2E  F005         	goto	l1043
  2889   000A50                     l2289:
  2890   000A50  0EFF               	movlw	255
  2891   000A52  2446               	addwf	_width^0,w,c
  2892   000A54  6E1E               	movwf	ctoa@w^0,c
  2893   000A56  0EFF               	movlw	255
  2894   000A58  2047               	addwfc	(_width+1)^0,w,c
  2895   000A5A  6E1F               	movwf	(ctoa@w+1)^0,c
  2896   000A5C                     l1043:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  2899   000A5C  BE1F               	btfsc	(ctoa@w+1)^0,7,c
  2900   000A5E  EF33  F005         	goto	u1371
  2901   000A62  EF35  F005         	goto	u1370
  2902   000A66                     u1371:
  2903   000A66  EF37  F005         	goto	l2293
  2904   000A6A                     u1370:
  2905   000A6A  EF3B  F005         	goto	l1047
  2906   000A6E                     l2293:
  2907   000A6E  0E00               	movlw	0
  2908   000A70  6E1F               	movwf	(ctoa@w+1)^0,c
  2909   000A72  0E00               	movlw	0
  2910   000A74  6E1E               	movwf	ctoa@w^0,c
  2911   000A76                     l1047:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  2914   000A76  0E00               	movlw	0
  2915   000A78  6E1D               	movwf	(ctoa@l+1)^0,c
  2916   000A7A  0E00               	movlw	0
  2917   000A7C  6E1C               	movwf	ctoa@l^0,c
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  2920   000A7E  EF4D  F005         	goto	l2299
  2921   000A82                     l2295:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  2924   000A82  0E00               	movlw	0
  2925   000A84  6E10               	movwf	(fputc@c+1)^0,c
  2926   000A86  0E20               	movlw	32
  2927   000A88  6E0F               	movwf	fputc@c^0,c
  2928   000A8A  C018  F011         	movff	ctoa@fp,fputc@fp
  2929   000A8E  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  2930   000A92  EC66  F005         	call	_fputc	;wreg free
  2931   000A96                     
  2932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  2933   000A96  4A1C               	infsnz	ctoa@l^0,f,c
  2934   000A98  2A1D               	incf	(ctoa@l+1)^0,f,c
  2935   000A9A                     l2299:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  2938   000A9A  501E               	movf	ctoa@w^0,w,c
  2939   000A9C  5C1C               	subwf	ctoa@l^0,w,c
  2940   000A9E  501D               	movf	(ctoa@l+1)^0,w,c
  2941   000AA0  0A80               	xorlw	128
  2942   000AA2  6E1B               	movwf	??_ctoa^0,c
  2943   000AA4  501F               	movf	(ctoa@w+1)^0,w,c
  2944   000AA6  0A80               	xorlw	128
  2945   000AA8  581B               	subwfb	??_ctoa^0,w,c
  2946   000AAA  A0D8               	btfss	status,0,c
  2947   000AAC  EF5A  F005         	goto	u1381
  2948   000AB0  EF5C  F005         	goto	u1380
  2949   000AB4                     u1381:
  2950   000AB4  EF41  F005         	goto	l2295
  2951   000AB8                     u1380:
  2952   000AB8                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  2954   000AB8  C01A  F00F         	movff	ctoa@c,fputc@c
  2955   000ABC  6A10               	clrf	(fputc@c+1)^0,c
  2956   000ABE  C018  F011         	movff	ctoa@fp,fputc@fp
  2957   000AC2  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  2958   000AC6  EC66  F005         	call	_fputc	;wreg free
  2959   000ACA  0012               	return		;funcret
  2960   000ACC                     __end_of_ctoa:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _fputc *****************
  2964 ;; Defined at:
  2965 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  c               2   14[COMRAM] int 
  2968 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2969 ;;		 -> NULL(0), 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  2   14[COMRAM] int 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2981 ;;      Params:         4       0       0       0       0       0       0
  2982 ;;      Locals:         0       0       0       0       0       0       0
  2983 ;;      Temps:          5       0       0       0       0       0       0
  2984 ;;      Totals:         9       0       0       0       0       0       0
  2985 ;;Total ram usage:        9 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 6
  2988 ;; This function calls:
  2989 ;;		_putch
  2990 ;; This function is called by:
  2991 ;;		_pad
  2992 ;;		_ctoa
  2993 ;;		_vfpfcnvrt
  2994 ;;		_fputs
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text11
  2999   000ACC                     __ptext11:
  3000                           	callstack 0
  3001   000ACC                     _fputc:
  3002                           	callstack 21
  3003   000ACC  5011               	movf	fputc@fp^0,w,c
  3004   000ACE  1012               	iorwf	(fputc@fp+1)^0,w,c
  3005   000AD0  B4D8               	btfsc	status,2,c
  3006   000AD2  EF6D  F005         	goto	u1151
  3007   000AD6  EF6F  F005         	goto	u1150
  3008   000ADA                     u1151:
  3009   000ADA  EF78  F005         	goto	l2169
  3010   000ADE                     u1150:
  3011   000ADE  5011               	movf	fputc@fp^0,w,c
  3012   000AE0  1012               	iorwf	(fputc@fp+1)^0,w,c
  3013   000AE2  A4D8               	btfss	status,2,c
  3014   000AE4  EF76  F005         	goto	u1161
  3015   000AE8  EF78  F005         	goto	u1160
  3016   000AEC                     u1161:
  3017   000AEC  EF7D  F005         	goto	l2171
  3018   000AF0                     u1160:
  3019   000AF0                     l2169:
  3020   000AF0  500F               	movf	fputc@c^0,w,c
  3021   000AF2  EC65  F007         	call	_putch
  3022   000AF6  EFB0  F005         	goto	l1103
  3023   000AFA                     l2171:
  3024   000AFA  EE20 F009          	lfsr	2,9
  3025   000AFE  5011               	movf	fputc@fp^0,w,c
  3026   000B00  26D9               	addwf	fsr2l,f,c
  3027   000B02  5012               	movf	(fputc@fp+1)^0,w,c
  3028   000B04  22DA               	addwfc	fsr2h,f,c
  3029   000B06  50DE               	movf	postinc2,w,c
  3030   000B08  10DE               	iorwf	postinc2,w,c
  3031   000B0A  B4D8               	btfsc	status,2,c
  3032   000B0C  EF8A  F005         	goto	u1171
  3033   000B10  EF8C  F005         	goto	u1170
  3034   000B14                     u1171:
  3035   000B14  EFA7  F005         	goto	l2175
  3036   000B18                     u1170:
  3037   000B18  EE20 F009          	lfsr	2,9
  3038   000B1C  5011               	movf	fputc@fp^0,w,c
  3039   000B1E  26D9               	addwf	fsr2l,f,c
  3040   000B20  5012               	movf	(fputc@fp+1)^0,w,c
  3041   000B22  22DA               	addwfc	fsr2h,f,c
  3042   000B24  EE10 F003          	lfsr	1,3
  3043   000B28  5011               	movf	fputc@fp^0,w,c
  3044   000B2A  26E1               	addwf	fsr1l,f,c
  3045   000B2C  5012               	movf	(fputc@fp+1)^0,w,c
  3046   000B2E  22E2               	addwfc	fsr1h,f,c
  3047   000B30  50DE               	movf	postinc2,w,c
  3048   000B32  5CE6               	subwf	postinc1,w,c
  3049   000B34  50E6               	movf	postinc1,w,c
  3050   000B36  0A80               	xorlw	128
  3051   000B38  6E17               	movwf	(??_fputc+4)^0,c
  3052   000B3A  50DE               	movf	postinc2,w,c
  3053   000B3C  0A80               	xorlw	128
  3054   000B3E  5817               	subwfb	(??_fputc+4)^0,w,c
  3055   000B40  B0D8               	btfsc	status,0,c
  3056   000B42  EFA5  F005         	goto	u1181
  3057   000B46  EFA7  F005         	goto	u1180
  3058   000B4A                     u1181:
  3059   000B4A  EFB0  F005         	goto	l1103
  3060   000B4E                     u1180:
  3061   000B4E                     l2175:
  3062   000B4E  EE20 F003          	lfsr	2,3
  3063   000B52  5011               	movf	fputc@fp^0,w,c
  3064   000B54  26D9               	addwf	fsr2l,f,c
  3065   000B56  5012               	movf	(fputc@fp+1)^0,w,c
  3066   000B58  22DA               	addwfc	fsr2h,f,c
  3067   000B5A  2ADE               	incf	postinc2,f,c
  3068   000B5C  0E00               	movlw	0
  3069   000B5E  22DD               	addwfc	postdec2,f,c
  3070   000B60                     l1103:
  3071   000B60  0012               	return		;funcret
  3072   000B62                     __end_of_fputc:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _putch *****************
  3076 ;; Defined at:
  3077 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  txData          1    wreg     unsigned char 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  txData          1   13[COMRAM] unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3091 ;;      Params:         0       0       0       0       0       0       0
  3092 ;;      Locals:         1       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0
  3094 ;;      Totals:         1       0       0       0       0       0       0
  3095 ;;Total ram usage:        1 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 5
  3098 ;; This function calls:
  3099 ;;		_EUSART1_Write
  3100 ;; This function is called by:
  3101 ;;		_fputc
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text12
  3106   000ECA                     __ptext12:
  3107                           	callstack 0
  3108   000ECA                     _putch:
  3109                           	callstack 21
  3110                           
  3111                           ;incstack = 0
  3112                           ;putch@txData stored from wreg
  3113   000ECA  6E0E               	movwf	putch@txData^0,c
  3114   000ECC                     
  3115                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3116   000ECC  500E               	movf	putch@txData^0,w,c
  3117   000ECE  EC45  F007         	call	_EUSART1_Write
  3118   000ED2  0012               	return		;funcret
  3119   000ED4                     __end_of_putch:
  3120                           	callstack 0
  3121                           
  3122 ;; *************** function _EUSART1_Write *****************
  3123 ;; Defined at:
  3124 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  txData          1    wreg     unsigned char 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  txData          1   12[COMRAM] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3138 ;;      Params:         0       0       0       0       0       0       0
  3139 ;;      Locals:         1       0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0       0
  3141 ;;      Totals:         1       0       0       0       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 4
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_putch
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           	psect	text13
  3153   000E8A                     __ptext13:
  3154                           	callstack 0
  3155   000E8A                     _EUSART1_Write:
  3156                           	callstack 21
  3157                           
  3158                           ;incstack = 0
  3159                           ;EUSART1_Write@txData stored from wreg
  3160   000E8A  6E0D               	movwf	EUSART1_Write@txData^0,c
  3161   000E8C                     l182:
  3162                           
  3163                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3164   000E8C  A89E               	btfss	158,4,c	;volatile
  3165   000E8E  EF4B  F007         	goto	u1141
  3166   000E92  EF4D  F007         	goto	u1140
  3167   000E96                     u1141:
  3168   000E96  EF46  F007         	goto	l182
  3169   000E9A                     u1140:
  3170   000E9A                     
  3171                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3172   000E9A  C00D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3173   000E9E  0012               	return		;funcret
  3174   000EA0                     __end_of_EUSART1_Write:
  3175                           	callstack 0
  3176                           
  3177 ;; *************** function _TMR0_WriteTimer *****************
  3178 ;; Defined at:
  3179 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  timerVal        2   12[COMRAM] unsigned short 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3193 ;;      Params:         2       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0
  3196 ;;      Totals:         2       0       0       0       0       0       0
  3197 ;;Total ram usage:        2 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 4
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text14
  3208   000ED4                     __ptext14:
  3209                           	callstack 0
  3210   000ED4                     _TMR0_WriteTimer:
  3211                           	callstack 26
  3212   000ED4                     
  3213                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3214   000ED4  500E               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3215   000ED6  6ED7               	movwf	215,c	;volatile
  3216   000ED8                     
  3217                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3218   000ED8  C00D  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3219   000EDC  0012               	return		;funcret
  3220   000EDE                     __end_of_TMR0_WriteTimer:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _SYSTEM_Initialize *****************
  3224 ;; Defined at:
  3225 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3239 ;;      Params:         0       0       0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 6
  3246 ;; This function calls:
  3247 ;;		_ADC_Initialize
  3248 ;;		_EUSART1_Initialize
  3249 ;;		_INTERRUPT_Initialize
  3250 ;;		_OSCILLATOR_Initialize
  3251 ;;		_PIN_MANAGER_Initialize
  3252 ;;		_TMR0_Initialize
  3253 ;; This function is called by:
  3254 ;;		_main
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text15
  3259   000E58                     __ptext15:
  3260                           	callstack 0
  3261   000E58                     _SYSTEM_Initialize:
  3262                           	callstack 24
  3263   000E58                     
  3264                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3265   000E58  EC88  F007         	call	_INTERRUPT_Initialize	;wreg free
  3266   000E5C                     
  3267                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3268   000E5C  ECAE  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3269   000E60                     
  3270                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3271   000E60  EC1E  F007         	call	_OSCILLATOR_Initialize	;wreg free
  3272   000E64                     
  3273                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  3274   000E64  EC93  F006         	call	_TMR0_Initialize	;wreg free
  3275   000E68                     
  3276                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3277   000E68  EC50  F007         	call	_ADC_Initialize	;wreg free
  3278   000E6C                     
  3279                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3280   000E6C  EC58  F006         	call	_EUSART1_Initialize	;wreg free
  3281   000E70  0012               	return		;funcret
  3282   000E72                     __end_of_SYSTEM_Initialize:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _TMR0_Initialize *****************
  3286 ;; Defined at:
  3287 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;		None
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3301 ;;      Params:         0       0       0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0
  3303 ;;      Temps:          2       0       0       0       0       0       0
  3304 ;;      Totals:         2       0       0       0       0       0       0
  3305 ;;Total ram usage:        2 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 5
  3308 ;; This function calls:
  3309 ;;		_TMR0_SetInterruptHandler
  3310 ;; This function is called by:
  3311 ;;		_SYSTEM_Initialize
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text16
  3316   000D26                     __ptext16:
  3317                           	callstack 0
  3318   000D26                     _TMR0_Initialize:
  3319                           	callstack 24
  3320   000D26                     
  3321                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3322   000D26  9CD5               	bcf	213,6,c	;volatile
  3323   000D28                     
  3324                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3325   000D28  0E00               	movlw	0
  3326   000D2A  6ED7               	movwf	215,c	;volatile
  3327                           
  3328                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3329   000D2C  0E00               	movlw	0
  3330   000D2E  6ED6               	movwf	214,c	;volatile
  3331   000D30                     
  3332                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3333   000D30  50D6               	movf	214,w,c	;volatile
  3334   000D32  CFD7 F00F          	movff	4055,??_TMR0_Initialize	;volatile
  3335   000D36  6A10               	clrf	(??_TMR0_Initialize+1)^0,c
  3336   000D38  C00F  F010         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3337   000D3C  6A0F               	clrf	??_TMR0_Initialize^0,c
  3338   000D3E  100F               	iorwf	??_TMR0_Initialize^0,w,c
  3339   000D40  6E4A               	movwf	_timer0ReloadVal^0,c	;volatile
  3340   000D42  5010               	movf	(??_TMR0_Initialize+1)^0,w,c
  3341   000D44  6E4B               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3342   000D46                     
  3343                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3344   000D46  94F2               	bcf	242,2,c	;volatile
  3345   000D48                     
  3346                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3347   000D48  8AF2               	bsf	242,5,c	;volatile
  3348   000D4A                     
  3349                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3350   000D4A  0E14               	movlw	low _TMR0_DefaultInterruptHandler
  3351   000D4C  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3352   000D4E  0E0F               	movlw	high _TMR0_DefaultInterruptHandler
  3353   000D50  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3354   000D52  EC6F  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  3355   000D56                     
  3356                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3357   000D56  0E9F               	movlw	159
  3358   000D58  6ED5               	movwf	213,c	;volatile
  3359   000D5A  0012               	return		;funcret
  3360   000D5C                     __end_of_TMR0_Initialize:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _TMR0_SetInterruptHandler *****************
  3364 ;; Defined at:
  3365 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  InterruptHan    2   12[COMRAM] PTR FTN()void 
  3368 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3380 ;;      Params:         2       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0
  3382 ;;      Temps:          0       0       0       0       0       0       0
  3383 ;;      Totals:         2       0       0       0       0       0       0
  3384 ;;Total ram usage:        2 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 4
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_TMR0_Initialize
  3391 ;;		_main
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text17
  3396   000EDE                     __ptext17:
  3397                           	callstack 0
  3398   000EDE                     _TMR0_SetInterruptHandler:
  3399                           	callstack 26
  3400   000EDE                     
  3401                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3402   000EDE  C00D  F04C         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3403   000EE2  C00E  F04D         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3404   000EE6  0012               	return		;funcret
  3405   000EE8                     __end_of_TMR0_SetInterruptHandler:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _PIN_MANAGER_Initialize *****************
  3409 ;; Defined at:
  3410 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, status,2
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3424 ;;      Params:         0       0       0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0
  3427 ;;      Totals:         0       0       0       0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 4
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_SYSTEM_Initialize
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text18
  3439   000D5C                     __ptext18:
  3440                           	callstack 0
  3441   000D5C                     _PIN_MANAGER_Initialize:
  3442                           	callstack 25
  3443   000D5C                     
  3444                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3445   000D5C  0E00               	movlw	0
  3446   000D5E  6E89               	movwf	137,c	;volatile
  3447                           
  3448                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3449   000D60  0E00               	movlw	0
  3450   000D62  6E8A               	movwf	138,c	;volatile
  3451                           
  3452                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3453   000D64  0E00               	movlw	0
  3454   000D66  6E8B               	movwf	139,c	;volatile
  3455   000D68                     
  3456                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3457   000D68  6892               	setf	146,c	;volatile
  3458   000D6A                     
  3459                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3460   000D6A  6893               	setf	147,c	;volatile
  3461                           
  3462                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3463   000D6C  0EBF               	movlw	191
  3464   000D6E  6E94               	movwf	148,c	;volatile
  3465                           
  3466                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3467   000D70  0E3C               	movlw	60
  3468   000D72  010F               	movlb	15	; () banked
  3469   000D74  6F3A               	movwf	58,b	;volatile
  3470                           
  3471                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3472   000D76  0E3F               	movlw	63
  3473   000D78  6F39               	movwf	57,b	;volatile
  3474                           
  3475                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3476   000D7A  0E2F               	movlw	47
  3477   000D7C  6F38               	movwf	56,b	;volatile
  3478                           
  3479                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3480   000D7E  0E00               	movlw	0
  3481   000D80  6E61               	movwf	97,c	;volatile
  3482   000D82                     
  3483                           ; BSR set to: 15
  3484                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3485   000D82  8EF1               	bsf	241,7,c	;volatile
  3486   000D84                     
  3487                           ; BSR set to: 15
  3488   000D84  0012               	return		;funcret
  3489   000D86                     __end_of_PIN_MANAGER_Initialize:
  3490                           	callstack 0
  3491                           
  3492 ;; *************** function _OSCILLATOR_Initialize *****************
  3493 ;; Defined at:
  3494 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;		None
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;		None
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3508 ;;      Params:         0       0       0       0       0       0       0
  3509 ;;      Locals:         0       0       0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0
  3511 ;;      Totals:         0       0       0       0       0       0       0
  3512 ;;Total ram usage:        0 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 4
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_SYSTEM_Initialize
  3519 ;; This function uses a non-reentrant model
  3520 ;;
  3521                           
  3522                           	psect	text19
  3523   000E3C                     __ptext19:
  3524                           	callstack 0
  3525   000E3C                     _OSCILLATOR_Initialize:
  3526                           	callstack 25
  3527   000E3C                     
  3528                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3529   000E3C  0E70               	movlw	112
  3530   000E3E  6ED3               	movwf	211,c	;volatile
  3531                           
  3532                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3533   000E40  0E04               	movlw	4
  3534   000E42  6ED2               	movwf	210,c	;volatile
  3535                           
  3536                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3537   000E44  0E40               	movlw	64
  3538   000E46  6E9B               	movwf	155,c	;volatile
  3539   000E48                     l72:
  3540                           
  3541                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3542   000E48  AED2               	btfss	4050,7,c	;volatile
  3543   000E4A  EF29  F007         	goto	u981
  3544   000E4E  EF2B  F007         	goto	u980
  3545   000E52                     u981:
  3546   000E52  EF24  F007         	goto	l72
  3547   000E56                     u980:
  3548   000E56  0012               	return		;funcret
  3549   000E58                     __end_of_OSCILLATOR_Initialize:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _INTERRUPT_Initialize *****************
  3553 ;; Defined at:
  3554 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		None
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3568 ;;      Params:         0       0       0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 4
  3575 ;; This function calls:
  3576 ;;		Nothing
  3577 ;; This function is called by:
  3578 ;;		_SYSTEM_Initialize
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text20
  3583   000F10                     __ptext20:
  3584                           	callstack 0
  3585   000F10                     _INTERRUPT_Initialize:
  3586                           	callstack 25
  3587   000F10                     
  3588                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3589   000F10  9ED0               	bcf	208,7,c	;volatile
  3590   000F12  0012               	return		;funcret
  3591   000F14                     __end_of_INTERRUPT_Initialize:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _EUSART1_Initialize *****************
  3595 ;; Defined at:
  3596 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3610 ;;      Params:         0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0
  3613 ;;      Totals:         0       0       0       0       0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 5
  3617 ;; This function calls:
  3618 ;;		_EUSART1_SetErrorHandler
  3619 ;;		_EUSART1_SetFramingErrorHandler
  3620 ;;		_EUSART1_SetOverrunErrorHandler
  3621 ;; This function is called by:
  3622 ;;		_SYSTEM_Initialize
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text21
  3627   000CB0                     __ptext21:
  3628                           	callstack 0
  3629   000CB0                     _EUSART1_Initialize:
  3630                           	callstack 24
  3631   000CB0                     
  3632                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3633   000CB0  0E08               	movlw	8
  3634   000CB2  6EB8               	movwf	184,c	;volatile
  3635                           
  3636                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3637   000CB4  0E90               	movlw	144
  3638   000CB6  6EAB               	movwf	171,c	;volatile
  3639                           
  3640                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3641   000CB8  0E24               	movlw	36
  3642   000CBA  6EAC               	movwf	172,c	;volatile
  3643                           
  3644                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3645   000CBC  0E82               	movlw	130
  3646   000CBE  6EAF               	movwf	175,c	;volatile
  3647                           
  3648                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3649   000CC0  0E06               	movlw	6
  3650   000CC2  6EB0               	movwf	176,c	;volatile
  3651   000CC4                     
  3652                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3653   000CC4  0E00               	movlw	0
  3654   000CC6  6E0D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3655   000CC8  0E00               	movlw	0
  3656   000CCA  6E0E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3657   000CCC  EC79  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3658   000CD0                     
  3659                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3660   000CD0  0E00               	movlw	0
  3661   000CD2  6E0D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3662   000CD4  0E00               	movlw	0
  3663   000CD6  6E0E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3664   000CD8  EC74  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3665   000CDC                     
  3666                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3667   000CDC  0E00               	movlw	0
  3668   000CDE  6E0D               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3669   000CE0  0E00               	movlw	0
  3670   000CE2  6E0E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3671   000CE4  EC7E  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3672   000CE8                     
  3673                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3674   000CE8  0E00               	movlw	0
  3675   000CEA  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  3676   000CEC  0012               	return		;funcret
  3677   000CEE                     __end_of_EUSART1_Initialize:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3681 ;; Defined at:
  3682 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3685 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;		None
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3697 ;;      Params:         2       0       0       0       0       0       0
  3698 ;;      Locals:         0       0       0       0       0       0       0
  3699 ;;      Temps:          0       0       0       0       0       0       0
  3700 ;;      Totals:         2       0       0       0       0       0       0
  3701 ;;Total ram usage:        2 bytes
  3702 ;; Hardware stack levels used: 1
  3703 ;; Hardware stack levels required when called: 4
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_EUSART1_Initialize
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text22
  3712   000EE8                     __ptext22:
  3713                           	callstack 0
  3714   000EE8                     _EUSART1_SetOverrunErrorHandler:
  3715                           	callstack 24
  3716   000EE8                     
  3717                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3718   000EE8  C00D  F09E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3719   000EEC  C00E  F09F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3720   000EF0  0012               	return		;funcret
  3721   000EF2                     __end_of_EUSART1_SetOverrunErrorHandler:
  3722                           	callstack 0
  3723                           
  3724 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3725 ;; Defined at:
  3726 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3729 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  1    wreg      void 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3741 ;;      Params:         2       0       0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0
  3743 ;;      Temps:          0       0       0       0       0       0       0
  3744 ;;      Totals:         2       0       0       0       0       0       0
  3745 ;;Total ram usage:        2 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 4
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_EUSART1_Initialize
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text23
  3756   000EF2                     __ptext23:
  3757                           	callstack 0
  3758   000EF2                     _EUSART1_SetFramingErrorHandler:
  3759                           	callstack 24
  3760   000EF2                     
  3761                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3762   000EF2  C00D  F0A0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3763   000EF6  C00E  F0A1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3764   000EFA  0012               	return		;funcret
  3765   000EFC                     __end_of_EUSART1_SetFramingErrorHandler:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _EUSART1_SetErrorHandler *****************
  3769 ;; Defined at:
  3770 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3773 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3785 ;;      Params:         2       0       0       0       0       0       0
  3786 ;;      Locals:         0       0       0       0       0       0       0
  3787 ;;      Temps:          0       0       0       0       0       0       0
  3788 ;;      Totals:         2       0       0       0       0       0       0
  3789 ;;Total ram usage:        2 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 4
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_EUSART1_Initialize
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text24
  3800   000EFC                     __ptext24:
  3801                           	callstack 0
  3802   000EFC                     _EUSART1_SetErrorHandler:
  3803                           	callstack 24
  3804   000EFC                     
  3805                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3806   000EFC  C00D  F09C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3807   000F00  C00E  F09D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3808   000F04  0012               	return		;funcret
  3809   000F06                     __end_of_EUSART1_SetErrorHandler:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _ADC_Initialize *****************
  3813 ;; Defined at:
  3814 ;;		line 62 in file "mcc_generated_files/adc.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3828 ;;      Params:         0       0       0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0
  3831 ;;      Totals:         0       0       0       0       0       0       0
  3832 ;;Total ram usage:        0 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 4
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_SYSTEM_Initialize
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text25
  3843   000EA0                     __ptext25:
  3844                           	callstack 0
  3845   000EA0                     _ADC_Initialize:
  3846                           	callstack 25
  3847   000EA0                     
  3848                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  3849   000EA0  0E00               	movlw	0
  3850   000EA2  6EC1               	movwf	193,c	;volatile
  3851                           
  3852                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  3853   000EA4  0E26               	movlw	38
  3854   000EA6  6EC0               	movwf	192,c	;volatile
  3855                           
  3856                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  3857   000EA8  0E00               	movlw	0
  3858   000EAA  6EC3               	movwf	195,c	;volatile
  3859                           
  3860                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  3861   000EAC  0E00               	movlw	0
  3862   000EAE  6EC4               	movwf	196,c	;volatile
  3863                           
  3864                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  3865   000EB0  0E11               	movlw	17
  3866   000EB2  6EC2               	movwf	194,c	;volatile
  3867   000EB4  0012               	return		;funcret
  3868   000EB6                     __end_of_ADC_Initialize:
  3869                           	callstack 0
  3870                           
  3871 ;; *************** function _EUSART1_is_rx_ready *****************
  3872 ;; Defined at:
  3873 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;		None
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;		None
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      _Bool 
  3880 ;; Registers used:
  3881 ;;		wreg
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3887 ;;      Params:         0       0       0       0       0       0       0
  3888 ;;      Locals:         0       0       0       0       0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0
  3890 ;;      Totals:         0       0       0       0       0       0       0
  3891 ;;Total ram usage:        0 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 4
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_main
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text26
  3902   000EB6                     __ptext26:
  3903                           	callstack 0
  3904   000EB6                     _EUSART1_is_rx_ready:
  3905                           	callstack 26
  3906   000EB6                     
  3907                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  3908   000EB6  BA9E               	btfsc	158,5,c	;volatile
  3909   000EB8  EF60  F007         	goto	u1021
  3910   000EBC  EF63  F007         	goto	u1020
  3911   000EC0                     u1021:
  3912   000EC0  0E01               	movlw	1
  3913   000EC2  EF64  F007         	goto	u1026
  3914   000EC6                     u1020:
  3915   000EC6  0E00               	movlw	0
  3916   000EC8                     u1026:
  3917   000EC8  0012               	return		;funcret
  3918   000ECA                     __end_of_EUSART1_is_rx_ready:
  3919                           	callstack 0
  3920                           
  3921 ;; *************** function _EUSART1_Read *****************
  3922 ;; Defined at:
  3923 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      unsigned char 
  3930 ;; Registers used:
  3931 ;;		wreg, status,2
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3937 ;;      Params:         0       0       0       0       0       0       0
  3938 ;;      Locals:         0       0       0       0       0       0       0
  3939 ;;      Temps:          0       0       0       0       0       0       0
  3940 ;;      Totals:         0       0       0       0       0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used: 1
  3943 ;; Hardware stack levels required when called: 4
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_main
  3948 ;;		_getch
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text27
  3953   000DAE                     __ptext27:
  3954                           	callstack 0
  3955   000DAE                     _EUSART1_Read:
  3956                           	callstack 26
  3957   000DAE                     l175:
  3958                           
  3959                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  3960   000DAE  AA9E               	btfss	158,5,c	;volatile
  3961   000DB0  EFDC  F006         	goto	u1031
  3962   000DB4  EFDE  F006         	goto	u1030
  3963   000DB8                     u1031:
  3964   000DB8  EFD7  F006         	goto	l175
  3965   000DBC                     u1030:
  3966   000DBC                     
  3967                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  3968   000DBC  0E00               	movlw	0
  3969   000DBE  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  3970   000DC0                     
  3971                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  3972   000DC0  A2AB               	btfss	171,1,c	;volatile
  3973   000DC2  EFE5  F006         	goto	u1041
  3974   000DC6  EFE7  F006         	goto	u1040
  3975   000DCA                     u1041:
  3976   000DCA  EFE9  F006         	goto	l2005
  3977   000DCE                     u1040:
  3978   000DCE                     
  3979                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  3980   000DCE  98AB               	bcf	171,4,c	;volatile
  3981                           
  3982                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  3983   000DD0  88AB               	bsf	171,4,c	;volatile
  3984   000DD2                     l2005:
  3985                           
  3986                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  3987   000DD2  50AE               	movf	174,w,c	;volatile
  3988   000DD4  0012               	return		;funcret
  3989   000DD6                     __end_of_EUSART1_Read:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _ADC_SelectChannel *****************
  3993 ;; Defined at:
  3994 ;;		line 83 in file "mcc_generated_files/adc.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  channel         1    wreg     enum E5749
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  channel         1   13[COMRAM] enum E5749
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         0       0       0       0       0       0       0
  4009 ;;      Locals:         1       0       0       0       0       0       0
  4010 ;;      Temps:          1       0       0       0       0       0       0
  4011 ;;      Totals:         2       0       0       0       0       0       0
  4012 ;;Total ram usage:        2 bytes
  4013 ;; Hardware stack levels used: 1
  4014 ;; Hardware stack levels required when called: 4
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text28
  4023   000E72                     __ptext28:
  4024                           	callstack 0
  4025   000E72                     _ADC_SelectChannel:
  4026                           	callstack 26
  4027                           
  4028                           ;incstack = 0
  4029                           ;ADC_SelectChannel@channel stored from wreg
  4030   000E72  6E0E               	movwf	ADC_SelectChannel@channel^0,c
  4031   000E74                     
  4032                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  4033   000E74  C00E  F00D         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4034   000E78  460D               	rlncf	??_ADC_SelectChannel^0,f,c
  4035   000E7A  460D               	rlncf	??_ADC_SelectChannel^0,f,c
  4036   000E7C  50C2               	movf	194,w,c	;volatile
  4037   000E7E  180D               	xorwf	??_ADC_SelectChannel^0,w,c
  4038   000E80  0B83               	andlw	-125
  4039   000E82  180D               	xorwf	??_ADC_SelectChannel^0,w,c
  4040   000E84  6EC2               	movwf	194,c	;volatile
  4041   000E86                     
  4042                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  4043   000E86  80C2               	bsf	194,0,c	;volatile
  4044   000E88  0012               	return		;funcret
  4045   000E8A                     __end_of_ADC_SelectChannel:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _INTERRUPT_InterruptManager *****************
  4049 ;; Defined at:
  4050 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4064 ;;      Params:         0       0       0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0
  4066 ;;      Temps:          2       0       0       0       0       0       0
  4067 ;;      Totals:         2       0       0       0       0       0       0
  4068 ;;Total ram usage:        2 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 3
  4071 ;; This function calls:
  4072 ;;		_TMR0_ISR
  4073 ;; This function is called by:
  4074 ;;		Interrupt level 2
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077                           
  4078                           	psect	intcode
  4079   000008                     __pintcode:
  4080                           	callstack 0
  4081   000008                     _INTERRUPT_InterruptManager:
  4082                           	callstack 18
  4083                           
  4084                           ;incstack = 0
  4085   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4086   00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManager
  4087   00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4088   000012                     
  4089                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4090   000012  AAF2               	btfss	242,5,c	;volatile
  4091   000014  EF0E  F000         	goto	i2u105_41
  4092   000018  EF10  F000         	goto	i2u105_40
  4093   00001C                     i2u105_41:
  4094   00001C  EF19  F000         	goto	i2l16
  4095   000020                     i2u105_40:
  4096   000020  A4F2               	btfss	242,2,c	;volatile
  4097   000022  EF15  F000         	goto	i2u106_41
  4098   000026  EF17  F000         	goto	i2u106_40
  4099   00002A                     i2u106_41:
  4100   00002A  EF19  F000         	goto	i2l16
  4101   00002E                     i2u106_40:
  4102   00002E                     
  4103                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4104   00002E  EC77  F006         	call	_TMR0_ISR	;wreg free
  4105   000032                     i2l16:
  4106   000032  C00C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4107   000036  C00B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4108   00003A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4109   00003C  0011               	retfie		f
  4110   00003E                     __end_of_INTERRUPT_InterruptManager:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _TMR0_ISR *****************
  4114 ;; Defined at:
  4115 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;		None
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4129 ;;      Params:         0       0       0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0
  4132 ;;      Totals:         0       0       0       0       0       0       0
  4133 ;;Total ram usage:        0 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 2
  4136 ;; This function calls:
  4137 ;;		Absolute function
  4138 ;;		_TMR0_DefaultInterruptHandler
  4139 ;;		_myTMR0ISR
  4140 ;; This function is called by:
  4141 ;;		_INTERRUPT_InterruptManager
  4142 ;; This function uses a non-reentrant model
  4143 ;;
  4144                           
  4145                           	psect	text30
  4146   000CEE                     __ptext30:
  4147                           	callstack 0
  4148   000CEE                     _TMR0_ISR:
  4149                           	callstack 18
  4150   000CEE                     
  4151                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4152   000CEE  94F2               	bcf	242,2,c	;volatile
  4153   000CF0                     
  4154                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4155   000CF0  504B               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4156   000CF2  6ED7               	movwf	215,c	;volatile
  4157   000CF4                     
  4158                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4159   000CF4  C04A  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4160   000CF8                     
  4161                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4162   000CF8  504C               	movf	_TMR0_InterruptHandler^0,w,c
  4163   000CFA  104D               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  4164   000CFC  B4D8               	btfsc	status,2,c
  4165   000CFE  EF83  F006         	goto	i2u100_41
  4166   000D02  EF85  F006         	goto	i2u100_40
  4167   000D06                     i2u100_41:
  4168   000D06  EF92  F006         	goto	i2l249
  4169   000D0A                     i2u100_40:
  4170   000D0A                     
  4171                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4172   000D0A  D802               	call	i2u101_48
  4173   000D0C  EF92  F006         	goto	i2u101_49
  4174   000D10                     i2u101_48:
  4175   000D10  0005               	push	
  4176   000D12  6EFA               	movwf	pclath,c
  4177   000D14  504C               	movf	_TMR0_InterruptHandler^0,w,c
  4178   000D16  6EFD               	movwf	tosl,c
  4179   000D18  504D               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  4180   000D1A  6EFE               	movwf	tosh,c
  4181   000D1C  50F8               	movf	tblptru,w,c
  4182   000D1E  6EFF               	movwf	tosu,c
  4183   000D20  50FA               	movf	pclath,w,c
  4184   000D22  0012               	return		;indir
  4185   000D24                     i2u101_49:
  4186   000D24                     i2l249:
  4187   000D24  0012               	return		;funcret
  4188   000D26                     __end_of_TMR0_ISR:
  4189                           	callstack 0
  4190                           
  4191 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4192 ;; Defined at:
  4193 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		None
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4207 ;;      Params:         0       0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_TMR0_Initialize
  4217 ;;		_TMR0_ISR
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text31
  4222   000F14                     __ptext31:
  4223                           	callstack 0
  4224   000F14                     _TMR0_DefaultInterruptHandler:
  4225                           	callstack 19
  4226   000F14  0012               	return		;funcret
  4227   000F16                     __end_of_TMR0_DefaultInterruptHandler:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _myTMR0ISR *****************
  4231 ;; Defined at:
  4232 ;;		line 146 in file "main.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;		None
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, status,2, status,0, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4246 ;;      Params:         0       0       0       0       0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0
  4249 ;;      Totals:         0       0       0       0       0       0       0
  4250 ;;Total ram usage:        0 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 1
  4253 ;; This function calls:
  4254 ;;		_TMR0_ReadTimer
  4255 ;;		i2_TMR0_WriteTimer
  4256 ;; This function is called by:
  4257 ;;		_main
  4258 ;;		_TMR0_ISR
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text32
  4263   000DFC                     __ptext32:
  4264                           	callstack 0
  4265   000DFC                     _myTMR0ISR:
  4266                           	callstack 18
  4267   000DFC  8C89               	bsf	137,6,c	;volatile
  4268   000DFE  82C2               	bsf	194,1,c	;volatile
  4269   000E00  0E01               	movlw	1
  4270   000E02  0100               	movlb	0	; () banked
  4271   000E04  6FA2               	movwf	_NEW_SAMPLE& (0+255),b
  4272   000E06                     
  4273                           ; BSR set to: 0
  4274   000E06  EC0F  F007         	call	_TMR0_ReadTimer	;wreg free
  4275   000E0A  0EC0               	movlw	192
  4276   000E0C  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  4277   000E0E  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  4278   000E10  0EF9               	movlw	249
  4279   000E12  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  4280   000E14  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  4281   000E16  EC83  F007         	call	i2_TMR0_WriteTimer	;wreg free
  4282   000E1A  9C89               	bcf	137,6,c	;volatile
  4283   000E1C  0012               	return		;funcret
  4284   000E1E                     __end_of_myTMR0ISR:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function i2_TMR0_WriteTimer *****************
  4288 ;; Defined at:
  4289 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  timerVal        2    8[COMRAM] unsigned short 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4303 ;;      Params:         2       0       0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0
  4306 ;;      Totals:         2       0       0       0       0       0       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_myTMR0ISR
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text33
  4317   000F06                     __ptext33:
  4318                           	callstack 0
  4319   000F06                     i2_TMR0_WriteTimer:
  4320                           	callstack 18
  4321   000F06                     
  4322                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4323   000F06  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  4324   000F08  6ED7               	movwf	215,c	;volatile
  4325   000F0A                     
  4326                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4327   000F0A  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  4328   000F0E  0012               	return		;funcret
  4329   000F10                     __end_ofi2_TMR0_WriteTimer:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _TMR0_ReadTimer *****************
  4333 ;; Defined at:
  4334 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  readVal         2    4[COMRAM] unsigned short 
  4339 ;;  readValHigh     1    7[COMRAM] unsigned char 
  4340 ;;  readValLow      1    6[COMRAM] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  2    0[COMRAM] unsigned short 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4350 ;;      Params:         2       0       0       0       0       0       0
  4351 ;;      Locals:         4       0       0       0       0       0       0
  4352 ;;      Temps:          2       0       0       0       0       0       0
  4353 ;;      Totals:         8       0       0       0       0       0       0
  4354 ;;Total ram usage:        8 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_myTMR0ISR
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text34
  4364   000E1E                     __ptext34:
  4365                           	callstack 0
  4366   000E1E                     _TMR0_ReadTimer:
  4367                           	callstack 18
  4368   000E1E                     
  4369                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  4370   000E1E  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  4371                           
  4372                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  4373   000E22  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  4374   000E26                     
  4375                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  4376   000E26  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  4377   000E28  6E03               	movwf	??_TMR0_ReadTimer^0,c
  4378   000E2A  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  4379   000E2C  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  4380   000E2E  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  4381   000E32                     
  4382                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  4383   000E32  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  4384   000E36  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  4385   000E3A  0012               	return		;funcret
  4386   000E3C                     __end_of_TMR0_ReadTimer:
  4387                           	callstack 0
  4388                           
  4389                           	psect	text35
  4390   000000                     __ptext35:
  4391                           	callstack 0
  4392   000000                     
  4393                           	psect	rparam
  4394   000000                     
  4395                           	psect	temp
  4396   000052                     btemp:
  4397                           	callstack 0
  4398   000052                     	ds	1
  4399   000000                     int$flags	set	btemp
  4400   000000                     wtemp8	set	btemp+1
  4401   000000                     ttemp5	set	btemp+1
  4402   000000                     ttemp6	set	btemp+4
  4403   000000                     ttemp7	set	btemp+8
  4404                           
  4405                           	psect	idloc
  4406                           
  4407                           ;Config register IDLOC0 @ 0x200000
  4408                           ;	unspecified, using default values
  4409   200000                     	org	2097152
  4410   200000  FF                 	db	255
  4411                           
  4412                           ;Config register IDLOC1 @ 0x200001
  4413                           ;	unspecified, using default values
  4414   200001                     	org	2097153
  4415   200001  FF                 	db	255
  4416                           
  4417                           ;Config register IDLOC2 @ 0x200002
  4418                           ;	unspecified, using default values
  4419   200002                     	org	2097154
  4420   200002  FF                 	db	255
  4421                           
  4422                           ;Config register IDLOC3 @ 0x200003
  4423                           ;	unspecified, using default values
  4424   200003                     	org	2097155
  4425   200003  FF                 	db	255
  4426                           
  4427                           ;Config register IDLOC4 @ 0x200004
  4428                           ;	unspecified, using default values
  4429   200004                     	org	2097156
  4430   200004  FF                 	db	255
  4431                           
  4432                           ;Config register IDLOC5 @ 0x200005
  4433                           ;	unspecified, using default values
  4434   200005                     	org	2097157
  4435   200005  FF                 	db	255
  4436                           
  4437                           ;Config register IDLOC6 @ 0x200006
  4438                           ;	unspecified, using default values
  4439   200006                     	org	2097158
  4440   200006  FF                 	db	255
  4441                           
  4442                           ;Config register IDLOC7 @ 0x200007
  4443                           ;	unspecified, using default values
  4444   200007                     	org	2097159
  4445   200007  FF                 	db	255
  4446                           
  4447                           	psect	config
  4448                           
  4449                           ; Padding undefined space
  4450   300000                     	org	3145728
  4451   300000  FF                 	db	255
  4452                           
  4453                           ;Config register CONFIG1H @ 0x300001
  4454                           ;	Oscillator Selection bits
  4455                           ;	FOSC = INTIO67, Internal oscillator block
  4456                           ;	4X PLL Enable
  4457                           ;	PLLCFG = OFF, Oscillator used directly
  4458                           ;	Primary clock enable bit
  4459                           ;	PRICLKEN = ON, Primary clock enabled
  4460                           ;	Fail-Safe Clock Monitor Enable bit
  4461                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4462                           ;	Internal/External Oscillator Switchover bit
  4463                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4464   300001                     	org	3145729
  4465   300001  28                 	db	40
  4466                           
  4467                           ;Config register CONFIG2L @ 0x300002
  4468                           ;	Power-up Timer Enable bit
  4469                           ;	PWRTEN = OFF, Power up timer disabled
  4470                           ;	Brown-out Reset Enable bits
  4471                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4472                           ;	Brown Out Reset Voltage bits
  4473                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4474   300002                     	org	3145730
  4475   300002  1F                 	db	31
  4476                           
  4477                           ;Config register CONFIG2H @ 0x300003
  4478                           ;	Watchdog Timer Enable bits
  4479                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4480                           ;	Watchdog Timer Postscale Select bits
  4481                           ;	WDTPS = 32768, 1:32768
  4482   300003                     	org	3145731
  4483   300003  3C                 	db	60
  4484                           
  4485                           ; Padding undefined space
  4486   300004                     	org	3145732
  4487   300004  FF                 	db	255
  4488                           
  4489                           ;Config register CONFIG3H @ 0x300005
  4490                           ;	CCP2 MUX bit
  4491                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4492                           ;	PORTB A/D Enable bit
  4493                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4494                           ;	P3A/CCP3 Mux bit
  4495                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4496                           ;	HFINTOSC Fast Start-up
  4497                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4498                           ;	Timer3 Clock input mux bit
  4499                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4500                           ;	ECCP2 B output mux bit
  4501                           ;	P2BMX = PORTB5, P2B is on RB5
  4502                           ;	MCLR Pin Enable bit
  4503                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4504   300005                     	org	3145733
  4505   300005  BF                 	db	191
  4506                           
  4507                           ;Config register CONFIG4L @ 0x300006
  4508                           ;	Stack Full/Underflow Reset Enable bit
  4509                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4510                           ;	Single-Supply ICSP Enable bit
  4511                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4512                           ;	Extended Instruction Set Enable bit
  4513                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4514                           ;	Background Debug
  4515                           ;	DEBUG = OFF, Disabled
  4516   300006                     	org	3145734
  4517   300006  85                 	db	133
  4518                           
  4519                           ; Padding undefined space
  4520   300007                     	org	3145735
  4521   300007  FF                 	db	255
  4522                           
  4523                           ;Config register CONFIG5L @ 0x300008
  4524                           ;	Code Protection Block 0
  4525                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4526                           ;	Code Protection Block 1
  4527                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4528                           ;	Code Protection Block 2
  4529                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4530                           ;	Code Protection Block 3
  4531                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4532   300008                     	org	3145736
  4533   300008  0F                 	db	15
  4534                           
  4535                           ;Config register CONFIG5H @ 0x300009
  4536                           ;	Boot Block Code Protection bit
  4537                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4538                           ;	Data EEPROM Code Protection bit
  4539                           ;	CPD = OFF, Data EEPROM not code-protected
  4540   300009                     	org	3145737
  4541   300009  C0                 	db	192
  4542                           
  4543                           ;Config register CONFIG6L @ 0x30000A
  4544                           ;	Write Protection Block 0
  4545                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4546                           ;	Write Protection Block 1
  4547                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4548                           ;	Write Protection Block 2
  4549                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4550                           ;	Write Protection Block 3
  4551                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4552   30000A                     	org	3145738
  4553   30000A  0F                 	db	15
  4554                           
  4555                           ;Config register CONFIG6H @ 0x30000B
  4556                           ;	Configuration Register Write Protection bit
  4557                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4558                           ;	Boot Block Write Protection bit
  4559                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4560                           ;	Data EEPROM Write Protection bit
  4561                           ;	WRTD = OFF, Data EEPROM not write-protected
  4562   30000B                     	org	3145739
  4563   30000B  E0                 	db	224
  4564                           
  4565                           ;Config register CONFIG7L @ 0x30000C
  4566                           ;	Table Read Protection Block 0
  4567                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4568                           ;	Table Read Protection Block 1
  4569                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4570                           ;	Table Read Protection Block 2
  4571                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4572                           ;	Table Read Protection Block 3
  4573                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4574   30000C                     	org	3145740
  4575   30000C  0F                 	db	15
  4576                           
  4577                           ;Config register CONFIG7H @ 0x30000D
  4578                           ;	Boot Block Table Read Protection bit
  4579                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4580   30000D                     	org	3145741
  4581   30000D  40                 	db	64
  4582                           tosu	equ	0xFFF
  4583                           tosh	equ	0xFFE
  4584                           tosl	equ	0xFFD
  4585                           stkptr	equ	0xFFC
  4586                           pclatu	equ	0xFFB
  4587                           pclath	equ	0xFFA
  4588                           pcl	equ	0xFF9
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           prodh	equ	0xFF4
  4594                           prodl	equ	0xFF3
  4595                           indf0	equ	0xFEF
  4596                           postinc0	equ	0xFEE
  4597                           postdec0	equ	0xFED
  4598                           preinc0	equ	0xFEC
  4599                           plusw0	equ	0xFEB
  4600                           fsr0h	equ	0xFEA
  4601                           fsr0l	equ	0xFE9
  4602                           wreg	equ	0xFE8
  4603                           indf1	equ	0xFE7
  4604                           postinc1	equ	0xFE6
  4605                           postdec1	equ	0xFE5
  4606                           preinc1	equ	0xFE4
  4607                           plusw1	equ	0xFE3
  4608                           fsr1h	equ	0xFE2
  4609                           fsr1l	equ	0xFE1
  4610                           bsr	equ	0xFE0
  4611                           indf2	equ	0xFDF
  4612                           postinc2	equ	0xFDE
  4613                           postdec2	equ	0xFDD
  4614                           preinc2	equ	0xFDC
  4615                           plusw2	equ	0xFDB
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8

Data Sizes:
    Strings     326
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      81
    BANK0           160     60      99
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1356$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1356$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_20(CODE[17]), STR_19(CODE[31]), STR_18(CODE[3]), STR_17(CODE[4]), 
		 -> STR_16(CODE[51]), STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), 
		 -> STR_12(CODE[33]), STR_11(CODE[37]), STR_10(CODE[32]), STR_9(CODE[24]), 
		 -> STR_8(CODE[21]), STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_20(CODE[17]), STR_19(CODE[31]), STR_18(CODE[3]), STR_17(CODE[4]), 
		 -> STR_16(CODE[51]), STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), 
		 -> STR_12(CODE[33]), STR_11(CODE[37]), STR_10(CODE[32]), STR_9(CODE[24]), 
		 -> STR_8(CODE[21]), STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_20(CODE[17]), STR_19(CODE[31]), STR_18(CODE[3]), STR_17(CODE[4]), 
		 -> STR_16(CODE[51]), STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), 
		 -> STR_12(CODE[33]), STR_11(CODE[37]), STR_10(CODE[32]), STR_9(CODE[24]), 
		 -> STR_8(CODE[21]), STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1396$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_20(CODE[17]), STR_19(CODE[31]), STR_18(CODE[3]), STR_17(CODE[4]), 
		 -> STR_16(CODE[51]), STR_15(CODE[3]), STR_14(CODE[2]), STR_13(CODE[6]), 
		 -> STR_12(CODE[33]), STR_11(CODE[37]), STR_10(CODE[32]), STR_9(CODE[24]), 
		 -> STR_8(CODE[21]), STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[33]), 
		 -> STR_4(CODE[3]), STR_3(CODE[9]), STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   12804
                                             40 BANK0     20    20      0
                  _ADC_SelectChannel
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   11438
                                             34 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9551
                                             67 COMRAM     2     2      0
                                             28 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    9081
                                             59 COMRAM     8     2      6
                                             17 BANK0     11    11      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5460
                                             41 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3191
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1567
                                             23 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1186
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             13 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             14 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     139
                                             10 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     139
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           0     0      0     139
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SelectChannel
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3C      63       4       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      51       1       86.2%
BITBIGSFRllhh       27      0       0      26        0.0%
BITBIGSFRllhl       26      0       0      27        0.0%
BITBIGSFRhlhhh      19      0       0      16        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRlhhhll      C      0       0      22        0.0%
BITBIGSFRlhhhhh      B      0       0      19        0.0%
BITBIGSFRlhhhll      7      0       0      21        0.0%
BITBIGSFRlhhhlh      7      0       0      20        0.0%
BITBIGSFRlhhl        6      0       0      24        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRlhhhll      2      0       0      23        0.0%
BITBIGSFRhlhl        1      0       0      17        0.0%
BITBIGSFRhll         1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4      28        0.0%
DATA                 0      0      B4      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 15:44:10 2023

                                             l9 0F12                                              l43 0D84  
                                            l72 0E48                                              l75 0E56  
                                            l69 0E70                                              l94 0EB4  
                                            l97 0E88                                 _timer0ReloadVal 004A  
                                           l203 0EFA                                             l206 0EF0  
                                           l230 0D5A                                             l209 0F04  
                                           l242 0EDC                                             l314 0240  
                                           l252 0EE6                                             l166 0EC8  
                                           l158 0CEC                                             l182 0E8C  
                                           l175 0DAE                                             l191 0ED2  
                                           l185 0E9E                                             l179 0DD4  
                                           l460 0A30                                             l447 08CC  
                                           l288 0054                                             l299 0178  
                                           u980 0E56                                             u981 0E52  
                                           _abs 0C70                                             _pad 0B62  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1011 0DAC  
                                          l1103 0B60                                            l1111 0C6E  
                                          l2001 0DC0                                            l1033 0B84  
                                          l2003 0DCE                                            l2011 0ED8  
                                          l1051 0ACA                                            l1043 0A5C  
                                          ?_abs 001F                                            l2005 0DD2  
                                          l1037 0BDA                                            l1070 058A  
                                          l1047 0A76                                            l1056 0398  
                                          l2009 0ED4                                            l2201 07AE  
                                          l1058 03A0                                            l2211 0802  
                                          l2203 07BA                                            l1091 0CAE  
                                          l1059 03E6                                            l1075 0744  
                                          l1084 0C2A                                            l2301 0AB8  
                                          l2221 0876                                            l2213 0814  
                                          l2205 07D8                                            l2215 0842  
                                          l2207 07E0                                            l2223 087C  
                                          l2231 08CE                                            l2311 0372  
                                          l2303 030C                                            l1088 0CA6  
                                          l2161 0E9A                                            l2225 088C  
                                          l2217 0862                                            l2209 07F4  
                                          l2241 0912                                            l2233 08D2  
                                          l2321 03CE                                            l2313 038C  
                                          l2305 032C                                            l2163 0ECC  
                                          l2171 0AFA                                            l2227 08AC  
                                          l2219 0864                                            l2251 097A  
                                          l2243 0932                                            l2235 08E0  
                                          l2331 03FC                                            l2323 03DA  
                                          l2315 03A8                                            l2307 0342  
                                          l2403 0D86                                            l2411 0046  
                                          l2173 0B18                                            l2165 0ACC  
                                          l2261 09F0                                            l2253 09A8  
                                          l2245 0950                                            l2237 0900  
                                          l2181 0C38                                            l2341 050C  
                                          l2333 047E                                            l2325 03E2  
                                          l2317 03B8                                            l2309 0352  
                                          l2405 0D90                                            l2501 0276  
                                          l2421 0072                                            l2413 0052  
                                          l2159 0E8C                                            l2175 0B4E  
                                          l2167 0ADE                                            l2191 0758  
                                          l2263 0A10                                            l2255 09C8  
                                          l2247 0958                                            l2239 0904  
                                          l2183 0C4A                                            l2271 0B7C  
                                          l2351 056A                                            l2343 052A  
                                          l2335 0486                                            l2327 03EE  
                                          l2319 03BE                                            l2431 00BE  
                                          l2423 0080                                            l2415 0062  
                                          l2169 0AF0                                            l2193 0778  
                                          l2257 09DA                                            l2249 096C  
                                          l2281 0C70                                            l2185 0C4E  
                                          l2273 0B90                                            l2345 0544  
                                          l2337 048C                                            l2329 03F6  
                                          l2361 05CA                                            l2433 00CA  
                                          l2425 008E                                            l2417 006E  
                                          l2409 0042                                            l2195 077C  
                                          l2187 0746                                            l2259 09E0  
                                          l2283 0C8A                                            l2179 0C2C  
                                          l2275 0BA4                                            l2267 0B62  
                                          l2347 0554                                            l2339 04F0  
                                          l2371 063A                                            l2363 05CE  
                                          l2355 058C                                            l2443 0158  
                                          l2435 0144                                            l2427 009C  
                                          l2419 0070                                            l2293 0A6E  
                                          l2285 0A32                                            l2197 078A  
                                          l2189 074A                                            l2277 0BA8  
                                          l2269 0B70                                            l2349 055A  
                                          l2373 064A                                            l2365 05F2  
                                          l2357 05B0                                            l2461 01A6  
                                          l2445 0164                                            l2437 0154  
                                          l2429 00AA                                            l2295 0A82  
                                          l2287 0A44                                            l2199 07AA  
                                          l2279 0BC6                                            l2383 070A  
                                          l2375 0666                                            l2367 0626  
                                          l2359 05BE                                            l2471 01BE  
                                          l2455 0182                                            l2447 0168  
                                          l1913 0F10                                            l1921 0D82  
                                          l2297 0A96                                            l2289 0A50  
                                          l2377 0682                                            l2393 0BDC  
                                          l2473 01CE                                            l2457 018E  
                                          l2449 017E                                            l1923 0E3C  
                                          l1915 0D5C                                            l1931 0D46  
                                          l2299 0A9A                                            l2379 06DA  
                                          l2387 071C                                            l2395 0BE8  
                                          l2539 028A                                            l2491 0230  
                                          l2475 01D0                                            l2467 01AA  
                                          l2459 0192                                            l1941 0CB0  
                                          l1917 0D68                                            l1861 0EDE  
                                          l1933 0D48                                            l1925 0D26  
                                          l2397 0C04                                            l2493 0240  
                                          l2485 01FA                                            l2477 01E0  
                                          l2469 01BA                                            l1855 0EF2  
                                          l1943 0CC4                                            l1919 0D6A  
                                          l1935 0D4A                                            l1927 0D28  
                                          l2399 0C20                                            l2495 0248  
                                          l2487 021C                                            l2479 01F4  
                                          l1857 0EE8                                            l1945 0CD0  
                                          l1937 0D56                                            l1929 0D30  
                                          l2497 0260                                            l2489 0220  
                                          l1939 0EA0                                            l1859 0EFC  
                                          l1947 0CDC                                            l1949 0CE8  
                                          l1981 0E60                                            ?_pad 001F  
                                          l1991 0E86                                            l1983 0E64  
                                          l1993 0EB6                                            l1985 0E68  
                                          l1977 0E58                                            l1987 0E6C  
                                          l1979 0E5C                                            l1989 0E74  
                                          l1997 0DAE                                            l1999 0DBC  
                                          STR_1 7FD7                                            STR_2 7F71  
                                          STR_3 7FE2                                            STR_4 7FFC  
                                          STR_5 7F11                                            STR_6 7FC8  
                                          STR_7 7FEB                                            STR_8 7FA2  
                                          STR_9 7F8A                                            u1020 0EC6  
                                          u1021 0EC0                                            u1030 0DBC  
                                          u1031 0DB8                                            u1040 0DCE  
                                          u1200 0758                                            u1041 0DCA  
                                          u1201 0754                                            u1026 0EC8  
                                          u1210 078A                                            u1211 0786  
                                          u1140 0E9A                                            u1300 097A  
                                          u1141 0E96                                            u1221 07B4  
                                          u1301 0976                                            u1150 0ADE  
                                          u1230 07D8                                            u1310 09A8  
                                          u1151 0ADA                                            u1231 07D4  
                                          u1311 09A4                                            u1160 0AF0  
                                          u1240 0802                                            u1320 09F0  
                                          u1400 0340                                            u1161 0AEC  
                                          u1241 07FE                                            u1321 09EC  
                                          u1170 0B18                                            u1250 0842  
                                          u1330 0B70                                            u1410 0352  
                                          u1171 0B14                                            u1251 083E  
                                          u1331 0B6C                                            u1411 034E  
                                          u1180 0B4E                                            u1260 088C  
                                          u1340 0BC6                                            u1420 038C  
                                          u1500 05F2                                            u1181 0B4A  
                                          u1261 0888                                            u1341 0BC2  
                                          u1421 0388                                            u1501 05EE  
                                          _LATA 000F89                                            u1270 08E0  
                                          u1350 0C8A                                            u1190 0C6E  
                                          u1430 03B8                                            u1510 0666  
                                          _LATB 000F8A                                            u1271 08DC  
                                          u1351 0C86                                            u1191 0C6A  
                                          u1431 03B4                                            u1511 0662  
                                          _LATC 000F8B                                            u1360 0A44  
                                          u1280 0912                                            u1440 03CE  
                                          u1520 0682                                            u1600 0230  
                                          u1361 0A40                                            u1281 090E  
                                          u1441 03CA                                            u1521 067E  
                                          u1601 022C                                            u1370 0A6A  
                                          u1290 0950                                            u1450 050C  
                                          u1530 0C20                                            u1371 0A66  
                                          u1291 094C                                            u1451 0508  
                                          u1531 0C1C                                            u1380 0AB8  
                                          u1460 052A                                            u1540 0062  
                                          u1381 0AB4                                            u1461 0526  
                                          u1541 005E                                            u1470 0544  
                                          u1390 033E                                            u1550 00BE  
                                          u1471 0540                                            u1391 0338  
                                          u1551 00BA                                            u1480 0554  
                                          u1560 0178                                            u1481 0550  
                                          u1561 0174                                            u1490 05B0  
                                          u1570 01A2                                            u1491 05AC  
                                          u1571 019E                                            u1580 01BA  
                                          u1581 01B6                                            u1590 01E0  
                                          u1591 01DC                                            i2l16 0032  
                                          _WPUB 000F61                                   _EUSART1_Write 0E8A  
                                          abs@a 001F                                            _dbuf 00A3  
                                          _ctoa 0A32                                            _main 0042  
                                          _dtoa 030C                                   ?_EUSART1_Read 0001  
                                          _prec 0048                                            pad@i 0026  
                                          pad@p 0023                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0028  
                                          fsr2l 000FD9                                            btemp 0052  
                                          start 003E                                    ___param_bank 000000  
                                         ??_abs 0021                                           ??_pad 0025  
                       __end_of_TMR0_Initialize 0D5C                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 0E58                                 __end_of___aodiv 08CE  
                                         ?_ctoa 0018                                           ?_main 0001  
                                         ?_dtoa 002A                                 __end_of___aomod 0A32  
                                         STR_10 7F32                                           STR_11 7EEC  
                                         STR_12 7F11                                           STR_20 7FB7  
                                         STR_13 7FF2                                           STR_14 7F30  
                                         STR_15 7FF5                                           STR_16 7EB9  
                                         STR_17 7FF8                                           STR_18 7F2F  
                                         STR_19 7F52                       TMR0_ReadTimer@readValHigh 0008  
                                         _T0CON 000FD5                                           i2l242 0F0E  
                                         i2l330 0E1C                                 _TMR0_WriteTimer 0ED4  
                                         i2l326 0DFC                                           i2l239 0E3A  
                                         i2l327 0DFE                                           i2l255 0F14  
                                         i2l249 0D24                                    vfpfcnvrt@fmt 003E  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                       ?_TMR0_SetInterruptHandler 000D  
                              __end_of_TMR0_ISR 0D26                                           _flags 0050  
                                         _fputc 0ACC                                           _fputs 0C2C  
                                         pad@fp 001F                                           _width 0046  
                                         ctoa@c 001A                                           _putch 0ECA  
                                         ctoa@l 001C                                           ctoa@w 001E  
                                         main@i 009B                                           dtoa@d 002C  
                                         dtoa@i 006F                                           dtoa@n 0066  
                                         dtoa@p 0062                                           dtoa@s 006E  
                                         dtoa@w 0064                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000D  
                                         ttemp5 0053                                           ttemp6 0056  
                                         ttemp7 005A                                           status 000FD8  
                                         wtemp8 0053              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 0DD6                                    __end_of_ctoa 0ACC  
                    __end_of_EUSART1_Initialize 0CEE                                    __end_of_main 030C  
                                  __end_of_dtoa 058C                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 001B                                          ??_main 0088  
                                        ??_dtoa 0034                                   __activetblptr 000002  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 000F  
                                        ?_fputs 0018                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l2021 0020  
                                        i2l2023 002E                                          i2l2019 0012  
                                        i2l1911 0F0A                                          i2l1909 0F06  
                                        i2l1863 0E1E                                          i2l1951 0E00  
                                        i2l1865 0E26                                          i2l1953 0E06  
                                        i2l1867 0E32                                          i2l1955 0E1A  
                                        i2l1971 0CF4                                          i2l1973 0CF8  
                                        i2l1975 0D0A                                          i2l1967 0CEE  
                                        i2l1969 0CF0                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0044                                       ??___aodiv 001D  
                                     ??___aomod 001D                         __end_of_TMR0_WriteTimer 0EDE  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 000D  
                              ?_TMR0_Initialize 0001                                          clear_0 0DDC  
                                        clear_1 0DE8                                          isa$std 000001  
                                        _printf 0D86                                          pad@buf 0021  
              ??_EUSART1_SetOverrunErrorHandler 000F                 ?_EUSART1_SetOverrunErrorHandler 000D  
                                        ctoa@fp 0018                                          dtoa@fp 002A  
                                        fputc@c 000F                                          fputs@c 001C  
                                        fputs@i 001D                                          fputs@s 0018  
                                  __mediumconst 7EB8                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0C2C                                 ??_EUSART1_Write 000D  
      TMR0_SetInterruptHandler@InterruptHandler 000D                               _SYSTEM_Initialize 0E58  
                                    __accesstop 0060                         __end_of__initialization 0DEE  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0011  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 0B62  
                                 __end_of_fputs 0C70                                   __end_of_putch 0ED4  
                          __end_of_EUSART1_Read 0DD6                                         ??_fputc 0013  
                     __end_of_SYSTEM_Initialize 0E72                                         ??_fputs 001C  
                                       ??_putch 000E                                      __pbssBANK0 009C  
               __end_of_EUSART1_SetErrorHandler 0F06                __end_of_TMR0_SetInterruptHandler 0EE8  
                                    ??_TMR0_ISR 000B                                ?_TMR0_WriteTimer 000D  
                                       ?_printf 0082          __end_of_EUSART1_SetFramingErrorHandler 0EFC  
                _EUSART1_SetFramingErrorHandler 0EF2                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 004E                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0746  
                                       ___aomod 08CE                               __end_of_myTMR0ISR 0E1E  
                                     ?_vfprintf 007C                             _EUSART1_is_rx_ready 0EB6  
                                       __pcinit 0DD6                                         __ramtop 0600  
                                       __ptext0 0042                                         __ptext1 0D86  
                                       __ptext2 0BDC                                         __ptext3 058C  
                                       __ptext4 030C                                         __ptext5 0B62  
                                       __ptext6 0C2C                                         __ptext7 0C70  
                                       __ptext8 08CE                                         __ptext9 0746  
                                     _T0CONbits 000FD5                           _OSCILLATOR_Initialize 0E3C  
                            _EUSART1_Initialize 0CB0                        ??_PIN_MANAGER_Initialize 000D  
                                       main@cmd 009A                            end_of_initialization 0DEE  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0011                                   __Lmediumconst 7EB8  
                   _EUSART1_OverrunErrorHandler 009E                                         fputs@fp 001A  
                             __end_of_vfpfcnvrt 0746                           TMR0_ReadTimer@readVal 0005  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0071                                      ??_vfprintf 0044  
                                _TMR0_ReadTimer 0E1E                            ??_EUSART1_Initialize 000F  
                               main@adc_reading 008A                        _TMR0_SetInterruptHandler 0EDE  
                           EUSART1_Write@txData 000D                           ??_EUSART1_is_rx_ready 000D  
                                  _EUSART1_Read 0DAE                          __end_of_TMR0_ReadTimer 0E3C  
                  __end_of_INTERRUPT_Initialize 0F14                                     vfpfcnvrt@ap 0040  
                                   vfpfcnvrt@cp 007A                                     vfpfcnvrt@fp 003C  
                                _ADC_Initialize 0EA0                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 0DAE                             start_initialization 0DD6  
                                   __end_of_abs 0CB0                                     __end_of_pad 0BDC  
                                   putch@txData 000E                           __end_of_EUSART1_Write 0EA0  
                                   vfprintf@fmt 007E                                 ?_TMR0_ReadTimer 0001  
                        __end_of_ADC_Initialize 0EB6                                        ??_printf 0046  
                                   __pbssCOMRAM 0046                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 000D                ??_EUSART1_SetFramingErrorHandler 000F  
               ?_EUSART1_SetFramingErrorHandler 000D                           _TMR0_InterruptHandler 004C  
                        _PIN_MANAGER_Initialize 0D5C                                       _dtoa$1429 0060  
                                     __pintcode 0008                               _ADC_SelectChannel 0E72  
                                 __pmediumconst 7EB8                                        ?___aodiv 000D  
                                      ?___aomod 000D                                ___aodiv@quotient 001F  
                               ?_ADC_Initialize 0001                              ?_ADC_SelectChannel 0001  
                  ??_INTERRUPT_InterruptManager 000B                                       _myTMR0ISR 0DFC  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                           ??_ADC_SelectChannel 000D                            _EUSART1_ErrorHandler 009C  
                       _EUSART1_SetErrorHandler 0EFC                            _INTERRUPT_Initialize 0F10  
                             ??_TMR0_Initialize 000F                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 000D                       __end_of_ADC_SelectChannel 0E8A  
                                      i2u100_40 0D0A                                        i2u100_41 0D06  
                                      i2u101_48 0D10                                        i2u101_49 0D24  
                                      i2u105_40 0020                                        i2u105_41 001C  
                                      i2u106_40 002E                                        i2u106_41 002A  
                    ??_TMR0_SetInterruptHandler 000F                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 0CEE  
                                     _vfpfcnvrt 058C                        TMR0_ReadTimer@readValLow 0007  
                                    _ADCON0bits 000FC2                                      ?_myTMR0ISR 0001  
                      ADC_SelectChannel@channel 000E                               i2_TMR0_WriteTimer 0F06  
                                    vfpfcnvrt@c 0079                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 0080                                        __Lrparam 0000  
                                    vfprintf@fp 007C                         ??_OSCILLATOR_Initialize 000D  
                                    ?_vfpfcnvrt 003C                                 ___aodiv@divisor 0015  
                               ___aodiv@counter 001D                       __end_ofi2_TMR0_WriteTimer 0F10  
                     ??_EUSART1_SetErrorHandler 000F                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 0ECA                                        __ptext10 0A32  
                                      __ptext11 0ACC                                        __ptext20 0F10  
                                      __ptext12 0ECA                                        __ptext21 0CB0  
                                      __ptext13 0E8A                                        __ptext30 0CEE  
                                      __ptext22 0EE8                                        __ptext14 0ED4  
                                      __ptext31 0F14                                        __ptext23 0EF2  
                                      __ptext15 0E58                                        __ptext32 0DFC  
                                      __ptext24 0EFC                                        __ptext16 0D26  
                                      __ptext33 0F06                                        __ptext25 0EA0  
                                      __ptext17 0EDE                                        __ptext34 0E1E  
                                      __ptext26 0EB6                                        __ptext18 0D5C  
                                      __ptext35 0000                                        __ptext27 0DAE  
                                      __ptext19 0E3C                                        __ptext28 0E72  
                       TMR0_WriteTimer@timerVal 000D                               ??_TMR0_WriteTimer 000F  
                              ??_TMR0_ReadTimer 0003            __end_of_TMR0_DefaultInterruptHandler 0F16  
                  _TMR0_DefaultInterruptHandler 0F14  EUSART1_SetOverrunErrorHandler@interruptHandler 000D  
                                      isa$xinst 000000                                        int$flags 0052  
                                      _vfprintf 0BDC              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0082  
                   _EUSART1_FramingErrorHandler 00A0                                ___aomod@dividend 000D  
                                   ??_myTMR0ISR 000B                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000D                                        intlevel2 0000  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0EF2  
                _EUSART1_SetOverrunErrorHandler 0EE8                                      _RCSTA1bits 000FAB  
                                    _NEW_SAMPLE 00A2                                ??_ADC_Initialize 000D  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 0086  EUSART1_SetFramingErrorHandler@interruptHandler 000D  
                               ___aomod@divisor 0015                                     ??_vfpfcnvrt 0042  
                               ___aomod@counter 001D                              _eusart1RxLastError 0051  
                               _TMR0_Initialize 0D26                                    ___aodiv@sign 001E  
                __end_of_PIN_MANAGER_Initialize 0D86                                    ___aomod@sign 001E  
                                  fp__myTMR0ISR 0000  
