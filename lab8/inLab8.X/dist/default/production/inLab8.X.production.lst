

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 16:49:20 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 06/04/2022 GMT
    54                           ; 
    55                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F25K22 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     
    88 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    89   000000                     
    90 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    91   000000                     
    92 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    93   000000                     _TMR0L	set	4054
    94   000000                     _TMR0H	set	4055
    95   000000                     _TXREG1	set	4013
    96   000000                     _RCREG1	set	4014
    97   000000                     _SPBRG1	set	4015
    98   000000                     _TXSTA1	set	4012
    99   000000                     _ADCON0	set	4034
   100   000000                     _ADRESL	set	4035
   101   000000                     _ANSELA	set	3896
   102   000000                     _ANSELB	set	3897
   103   000000                     _ANSELC	set	3898
   104   000000                     _LATA	set	3977
   105   000000                     _RCONbits	set	4048
   106   000000                     _LATAbits	set	3977
   107   000000                     _T0CON	set	4053
   108   000000                     _RCSTA1bits	set	4011
   109   000000                     _TXSTA1bits	set	4012
   110   000000                     _ADCON0bits	set	4034
   111   000000                     _PLLRDY	set	32407
   112   000000                     _OSCCON2	set	4050
   113   000000                     _OSCCON	set	4051
   114   000000                     _INTCON2bits	set	4081
   115   000000                     _INTCONbits	set	4082
   116   000000                     _TRISA	set	3986
   117   000000                     _LATC	set	3979
   118   000000                     _LATB	set	3978
   119   000000                     _OSCTUNE	set	3995
   120   000000                     _TRISC	set	3988
   121   000000                     _TRISB	set	3987
   122   000000                     _WPUB	set	3937
   123   000000                     _T0CONbits	set	4053
   124   000000                     _PIR1bits	set	3998
   125   000000                     _RCSTA1	set	4011
   126   000000                     _BAUDCON1	set	4024
   127   000000                     _ADCON2	set	4032
   128   000000                     _ADCON1	set	4033
   129   000000                     _ADRESH	set	4036
   130   000000                     _SPBRGH1	set	4016
   131                           
   132                           	psect	mediumconst
   133   007EB8                     __pmediumconst:
   134                           	callstack 0
   135   007EB8  00                 	db	0
   136   007EB9                     STR_17:
   137   007EB9  54                 	db	84	;'T'
   138   007EBA  68                 	db	104	;'h'
   139   007EBB  65                 	db	101	;'e'
   140   007EBC  20                 	db	32
   141   007EBD  6C                 	db	108	;'l'
   142   007EBE  61                 	db	97	;'a'
   143   007EBF  73                 	db	115	;'s'
   144   007EC0  74                 	db	116	;'t'
   145   007EC1  20                 	db	32
   146   007EC2  25                 	db	37
   147   007EC3  64                 	db	100	;'d'
   148   007EC4  20                 	db	32
   149   007EC5  41                 	db	65	;'A'
   150   007EC6  44                 	db	68	;'D'
   151   007EC7  43                 	db	67	;'C'
   152   007EC8  20                 	db	32
   153   007EC9  73                 	db	115	;'s'
   154   007ECA  61                 	db	97	;'a'
   155   007ECB  6D                 	db	109	;'m'
   156   007ECC  70                 	db	112	;'p'
   157   007ECD  6C                 	db	108	;'l'
   158   007ECE  65                 	db	101	;'e'
   159   007ECF  73                 	db	115	;'s'
   160   007ED0  20                 	db	32
   161   007ED1  66                 	db	102	;'f'
   162   007ED2  72                 	db	114	;'r'
   163   007ED3  6F                 	db	111	;'o'
   164   007ED4  6D                 	db	109	;'m'
   165   007ED5  20                 	db	32
   166   007ED6  74                 	db	116	;'t'
   167   007ED7  68                 	db	104	;'h'
   168   007ED8  65                 	db	101	;'e'
   169   007ED9  20                 	db	32
   170   007EDA  6D                 	db	109	;'m'
   171   007EDB  69                 	db	105	;'i'
   172   007EDC  63                 	db	99	;'c'
   173   007EDD  72                 	db	114	;'r'
   174   007EDE  6F                 	db	111	;'o'
   175   007EDF  70                 	db	112	;'p'
   176   007EE0  68                 	db	104	;'h'
   177   007EE1  6F                 	db	111	;'o'
   178   007EE2  6E                 	db	110	;'n'
   179   007EE3  65                 	db	101	;'e'
   180   007EE4  20                 	db	32
   181   007EE5  61                 	db	97	;'a'
   182   007EE6  72                 	db	114	;'r'
   183   007EE7  65                 	db	101	;'e'
   184   007EE8  3A                 	db	58	;':'
   185   007EE9  0D                 	db	13
   186   007EEA  0A                 	db	10
   187   007EEB  00                 	db	0
   188   007EEC                     STR_12:
   189   007EEC  30                 	db	48	;'0'
   190   007EED  2D                 	db	45
   191   007EEE  39                 	db	57	;'9'
   192   007EEF  3A                 	db	58	;':'
   193   007EF0  20                 	db	32
   194   007EF1  73                 	db	115	;'s'
   195   007EF2  77                 	db	119	;'w'
   196   007EF3  69                 	db	105	;'i'
   197   007EF4  74                 	db	116	;'t'
   198   007EF5  63                 	db	99	;'c'
   199   007EF6  68                 	db	104	;'h'
   200   007EF7  20                 	db	32
   201   007EF8  73                 	db	115	;'s'
   202   007EF9  61                 	db	97	;'a'
   203   007EFA  6D                 	db	109	;'m'
   204   007EFB  70                 	db	112	;'p'
   205   007EFC  6C                 	db	108	;'l'
   206   007EFD  65                 	db	101	;'e'
   207   007EFE  64                 	db	100	;'d'
   208   007EFF  20                 	db	32
   209   007F00  63                 	db	99	;'c'
   210   007F01  68                 	db	104	;'h'
   211   007F02  61                 	db	97	;'a'
   212   007F03  6E                 	db	110	;'n'
   213   007F04  6E                 	db	110	;'n'
   214   007F05  65                 	db	101	;'e'
   215   007F06  6C                 	db	108	;'l'
   216   007F07  20                 	db	32
   217   007F08  74                 	db	116	;'t'
   218   007F09  6F                 	db	111	;'o'
   219   007F0A  20                 	db	32
   220   007F0B  41                 	db	65	;'A'
   221   007F0C  4E                 	db	78	;'N'
   222   007F0D  78                 	db	120	;'x'
   223   007F0E  0D                 	db	13
   224   007F0F  0A                 	db	10
   225   007F10  00                 	db	0
   226   007F11                     STR_6:
   227   007F11  2D                 	db	45
   228   007F12  2D                 	db	45
   229   007F13  2D                 	db	45
   230   007F14  2D                 	db	45
   231   007F15  2D                 	db	45
   232   007F16  2D                 	db	45
   233   007F17  2D                 	db	45
   234   007F18  2D                 	db	45
   235   007F19  2D                 	db	45
   236   007F1A  2D                 	db	45
   237   007F1B  2D                 	db	45
   238   007F1C  2D                 	db	45
   239   007F1D  2D                 	db	45
   240   007F1E  2D                 	db	45
   241   007F1F  2D                 	db	45
   242   007F20  2D                 	db	45
   243   007F21  2D                 	db	45
   244   007F22  2D                 	db	45
   245   007F23  2D                 	db	45
   246   007F24  2D                 	db	45
   247   007F25  2D                 	db	45
   248   007F26  2D                 	db	45
   249   007F27  2D                 	db	45
   250   007F28  2D                 	db	45
   251   007F29  2D                 	db	45
   252   007F2A  2D                 	db	45
   253   007F2B  2D                 	db	45
   254   007F2C  2D                 	db	45
   255   007F2D  2D                 	db	45
   256   007F2E  2D                 	db	45
   257   007F2F  0D                 	db	13
   258   007F30  0A                 	db	10
   259   007F31  00                 	db	0
   260   007F32                     STR_11:
   261   007F32  73                 	db	115	;'s'
   262   007F33  3A                 	db	58	;':'
   263   007F34  20                 	db	32
   264   007F35  67                 	db	103	;'g'
   265   007F36  61                 	db	97	;'a'
   266   007F37  74                 	db	116	;'t'
   267   007F38  68                 	db	104	;'h'
   268   007F39  65                 	db	101	;'e'
   269   007F3A  72                 	db	114	;'r'
   270   007F3B  20                 	db	32
   271   007F3C  25                 	db	37
   272   007F3D  64                 	db	100	;'d'
   273   007F3E  20                 	db	32
   274   007F3F  73                 	db	115	;'s'
   275   007F40  61                 	db	97	;'a'
   276   007F41  6D                 	db	109	;'m'
   277   007F42  70                 	db	112	;'p'
   278   007F43  6C                 	db	108	;'l'
   279   007F44  65                 	db	101	;'e'
   280   007F45  73                 	db	115	;'s'
   281   007F46  20                 	db	32
   282   007F47  66                 	db	102	;'f'
   283   007F48  72                 	db	114	;'r'
   284   007F49  6F                 	db	111	;'o'
   285   007F4A  6D                 	db	109	;'m'
   286   007F4B  20                 	db	32
   287   007F4C  41                 	db	65	;'A'
   288   007F4D  44                 	db	68	;'D'
   289   007F4E  43                 	db	67	;'C'
   290   007F4F  0D                 	db	13
   291   007F50  0A                 	db	10
   292   007F51  00                 	db	0
   293   007F52                     STR_20:
   294   007F52  54                 	db	84	;'T'
   295   007F53  68                 	db	104	;'h'
   296   007F54  65                 	db	101	;'e'
   297   007F55  20                 	db	32
   298   007F56  41                 	db	65	;'A'
   299   007F57  44                 	db	68	;'D'
   300   007F58  43                 	db	67	;'C'
   301   007F59  20                 	db	32
   302   007F5A  69                 	db	105	;'i'
   303   007F5B  73                 	db	115	;'s'
   304   007F5C  20                 	db	32
   305   007F5D  6E                 	db	110	;'n'
   306   007F5E  6F                 	db	111	;'o'
   307   007F5F  77                 	db	119	;'w'
   308   007F60  20                 	db	32
   309   007F61  73                 	db	115	;'s'
   310   007F62  61                 	db	97	;'a'
   311   007F63  6D                 	db	109	;'m'
   312   007F64  70                 	db	112	;'p'
   313   007F65  6C                 	db	108	;'l'
   314   007F66  69                 	db	105	;'i'
   315   007F67  6E                 	db	110	;'n'
   316   007F68  67                 	db	103	;'g'
   317   007F69  20                 	db	32
   318   007F6A  41                 	db	65	;'A'
   319   007F6B  4E                 	db	78	;'N'
   320   007F6C  25                 	db	37
   321   007F6D  63                 	db	99	;'c'
   322   007F6E  0D                 	db	13
   323   007F6F  0A                 	db	10
   324   007F70  00                 	db	0
   325   007F71                     STR_2:
   326   007F71  4D                 	db	77	;'M'
   327   007F72  69                 	db	105	;'i'
   328   007F73  63                 	db	99	;'c'
   329   007F74  72                 	db	114	;'r'
   330   007F75  6F                 	db	111	;'o'
   331   007F76  70                 	db	112	;'p'
   332   007F77  68                 	db	104	;'h'
   333   007F78  6F                 	db	111	;'o'
   334   007F79  6E                 	db	110	;'n'
   335   007F7A  65                 	db	101	;'e'
   336   007F7B  20                 	db	32
   337   007F7C  65                 	db	101	;'e'
   338   007F7D  78                 	db	120	;'x'
   339   007F7E  70                 	db	112	;'p'
   340   007F7F  65                 	db	101	;'e'
   341   007F80  72                 	db	114	;'r'
   342   007F81  69                 	db	105	;'i'
   343   007F82  6D                 	db	109	;'m'
   344   007F83  65                 	db	101	;'e'
   345   007F84  6E                 	db	110	;'n'
   346   007F85  74                 	db	116	;'t'
   347   007F86  73                 	db	115	;'s'
   348   007F87  0D                 	db	13
   349   007F88  0A                 	db	10
   350   007F89  00                 	db	0
   351   007F8A                     STR_10:
   352   007F8A  7A                 	db	122	;'z'
   353   007F8B  3A                 	db	58	;':'
   354   007F8C  20                 	db	32
   355   007F8D  43                 	db	67	;'C'
   356   007F8E  6C                 	db	108	;'l'
   357   007F8F  65                 	db	101	;'e'
   358   007F90  61                 	db	97	;'a'
   359   007F91  72                 	db	114	;'r'
   360   007F92  20                 	db	32
   361   007F93  74                 	db	116	;'t'
   362   007F94  68                 	db	104	;'h'
   363   007F95  65                 	db	101	;'e'
   364   007F96  20                 	db	32
   365   007F97  74                 	db	116	;'t'
   366   007F98  65                 	db	101	;'e'
   367   007F99  72                 	db	114	;'r'
   368   007F9A  6D                 	db	109	;'m'
   369   007F9B  69                 	db	105	;'i'
   370   007F9C  6E                 	db	110	;'n'
   371   007F9D  61                 	db	97	;'a'
   372   007F9E  6C                 	db	108	;'l'
   373   007F9F  0D                 	db	13
   374   007FA0  0A                 	db	10
   375   007FA1  00                 	db	0
   376   007FA2                     STR_9:
   377   007FA2  5A                 	db	90	;'Z'
   378   007FA3  3A                 	db	58	;':'
   379   007FA4  20                 	db	32
   380   007FA5  52                 	db	82	;'R'
   381   007FA6  65                 	db	101	;'e'
   382   007FA7  73                 	db	115	;'s'
   383   007FA8  65                 	db	101	;'e'
   384   007FA9  74                 	db	116	;'t'
   385   007FAA  20                 	db	32
   386   007FAB  70                 	db	112	;'p'
   387   007FAC  72                 	db	114	;'r'
   388   007FAD  6F                 	db	111	;'o'
   389   007FAE  63                 	db	99	;'c'
   390   007FAF  65                 	db	101	;'e'
   391   007FB0  73                 	db	115	;'s'
   392   007FB1  73                 	db	115	;'s'
   393   007FB2  6F                 	db	111	;'o'
   394   007FB3  72                 	db	114	;'r'
   395   007FB4  0D                 	db	13
   396   007FB5  0A                 	db	10
   397   007FB6  00                 	db	0
   398   007FB7                     STR_21:
   399   007FB7  55                 	db	85	;'U'
   400   007FB8  6E                 	db	110	;'n'
   401   007FB9  6B                 	db	107	;'k'
   402   007FBA  6E                 	db	110	;'n'
   403   007FBB  6F                 	db	111	;'o'
   404   007FBC  77                 	db	119	;'w'
   405   007FBD  6E                 	db	110	;'n'
   406   007FBE  20                 	db	32
   407   007FBF  6B                 	db	107	;'k'
   408   007FC0  65                 	db	101	;'e'
   409   007FC1  79                 	db	121	;'y'
   410   007FC2  20                 	db	32
   411   007FC3  25                 	db	37
   412   007FC4  63                 	db	99	;'c'
   413   007FC5  0D                 	db	13
   414   007FC6  0A                 	db	10
   415   007FC7  00                 	db	0
   416   007FC8                     STR_7:
   417   007FC8  3F                 	db	63	;'?'
   418   007FC9  3A                 	db	58	;':'
   419   007FCA  20                 	db	32
   420   007FCB  48                 	db	72	;'H'
   421   007FCC  65                 	db	101	;'e'
   422   007FCD  6C                 	db	108	;'l'
   423   007FCE  70                 	db	112	;'p'
   424   007FCF  20                 	db	32
   425   007FD0  6D                 	db	109	;'m'
   426   007FD1  65                 	db	101	;'e'
   427   007FD2  6E                 	db	110	;'n'
   428   007FD3  75                 	db	117	;'u'
   429   007FD4  0D                 	db	13
   430   007FD5  0A                 	db	10
   431   007FD6  00                 	db	0
   432   007FD7                     STR_1:
   433   007FD7  69                 	db	105	;'i'
   434   007FD8  6E                 	db	110	;'n'
   435   007FD9  4C                 	db	76	;'L'
   436   007FDA  61                 	db	97	;'a'
   437   007FDB  62                 	db	98	;'b'
   438   007FDC  20                 	db	32
   439   007FDD  30                 	db	48	;'0'
   440   007FDE  38                 	db	56	;'8'
   441   007FDF  0D                 	db	13
   442   007FE0  0A                 	db	10
   443   007FE1  00                 	db	0
   444   007FE2                     STR_3:
   445   007FE2  44                 	db	68	;'D'
   446   007FE3  65                 	db	101	;'e'
   447   007FE4  76                 	db	118	;'v'
   448   007FE5  27                 	db	39
   449   007FE6  32                 	db	50	;'2'
   450   007FE7  31                 	db	49	;'1'
   451   007FE8  0D                 	db	13
   452   007FE9  0A                 	db	10
   453   007FEA  00                 	db	0
   454   007FEB                     STR_8:
   455   007FEB  6F                 	db	111	;'o'
   456   007FEC  3A                 	db	58	;':'
   457   007FED  20                 	db	32
   458   007FEE  6B                 	db	107	;'k'
   459   007FEF  0D                 	db	13
   460   007FF0  0A                 	db	10
   461   007FF1  00                 	db	0
   462   007FF2                     STR_5:
   463   007FF2  25                 	db	37
   464   007FF3  63                 	db	99	;'c'
   465   007FF4  0A                 	db	10
   466   007FF5  0D                 	db	13
   467   007FF6  00                 	db	0
   468   007FF7                     STR_18:
   469   007FF7  25                 	db	37
   470   007FF8  64                 	db	100	;'d'
   471   007FF9  20                 	db	32
   472   007FFA  00                 	db	0
   473   007FFB                     STR_4:
   474   007FFB  3E                 	db	62	;'>'
   475   007FFC  20                 	db	32
   476   007FFD  00                 	db	0
   477   007FFE  00                 	db	0	; dummy byte at the end
   478   000000                     
   479                           ; #config settings
   480                           
   481                           	psect	cinit
   482   000DFC                     __pcinit:
   483                           	callstack 0
   484   000DFC                     start_initialization:
   485                           	callstack 0
   486   000DFC                     __initialization:
   487                           	callstack 0
   488                           
   489                           ; Clear objects allocated to BANK0 (39 bytes)
   490   000DFC  EE00  F09C         	lfsr	0,__pbssBANK0
   491   000E00  0E27               	movlw	39
   492   000E02                     clear_0:
   493   000E02  6AEE               	clrf	postinc0,c
   494   000E04  06E8               	decf	wreg,f,c
   495   000E06  E1FD               	bnz	clear_0
   496                           
   497                           ; Clear objects allocated to COMRAM (12 bytes)
   498   000E08  EE00  F046         	lfsr	0,__pbssCOMRAM
   499   000E0C  0E0C               	movlw	12
   500   000E0E                     clear_1:
   501   000E0E  6AEE               	clrf	postinc0,c
   502   000E10  06E8               	decf	wreg,f,c
   503   000E12  E1FD               	bnz	clear_1
   504   000E14                     end_of_initialization:
   505                           	callstack 0
   506   000E14                     __end_of__initialization:
   507                           	callstack 0
   508   000E14  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   509   000E16  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   510   000E18  0E00               	movlw	low (__Lmediumconst shr (0+16))
   511   000E1A  6EF8               	movwf	tblptru,c
   512   000E1C  0100               	movlb	0
   513   000E1E  EF21  F000         	goto	_main	;jump to C main() function
   514                           
   515                           	psect	bssCOMRAM
   516   000046                     __pbssCOMRAM:
   517                           	callstack 0
   518   000046                     _width:
   519                           	callstack 0
   520   000046                     	ds	2
   521   000048                     _prec:
   522                           	callstack 0
   523   000048                     	ds	2
   524   00004A                     _timer0ReloadVal:
   525                           	callstack 0
   526   00004A                     	ds	2
   527   00004C                     _TMR0_InterruptHandler:
   528                           	callstack 0
   529   00004C                     	ds	2
   530   00004E                     _ADC_InterruptHandler:
   531                           	callstack 0
   532   00004E                     	ds	2
   533   000050                     _flags:
   534                           	callstack 0
   535   000050                     	ds	1
   536   000051                     _eusart1RxLastError:
   537                           	callstack 0
   538   000051                     	ds	1
   539                           
   540                           	psect	bssBANK0
   541   00009C                     __pbssBANK0:
   542                           	callstack 0
   543   00009C                     _EUSART1_ErrorHandler:
   544                           	callstack 0
   545   00009C                     	ds	2
   546   00009E                     _EUSART1_OverrunErrorHandler:
   547                           	callstack 0
   548   00009E                     	ds	2
   549   0000A0                     _EUSART1_FramingErrorHandler:
   550                           	callstack 0
   551   0000A0                     	ds	2
   552   0000A2                     _NEW_SAMPLE:
   553                           	callstack 0
   554   0000A2                     	ds	1
   555   0000A3                     _dbuf:
   556                           	callstack 0
   557   0000A3                     	ds	32
   558                           
   559                           	psect	cstackBANK0
   560   000060                     __pcstackBANK0:
   561                           	callstack 0
   562   000060                     _dtoa$1431:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x0
   566   000060                     	ds	2
   567   000062                     dtoa@p:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x2
   571   000062                     	ds	2
   572   000064                     dtoa@w:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x4
   576   000064                     	ds	2
   577   000066                     dtoa@n:
   578                           	callstack 0
   579                           
   580                           ; 8 bytes @ 0x6
   581   000066                     	ds	8
   582   00006E                     dtoa@s:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0xE
   586   00006E                     	ds	1
   587   00006F                     dtoa@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xF
   591   00006F                     	ds	2
   592   000071                     vfpfcnvrt@convarg:
   593                           	callstack 0
   594                           
   595                           ; 8 bytes @ 0x11
   596   000071                     	ds	8
   597   000079                     vfpfcnvrt@c:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x19
   601   000079                     	ds	1
   602   00007A                     vfpfcnvrt@cp:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x1A
   606   00007A                     	ds	2
   607   00007C                     ?_vfprintf:
   608                           	callstack 0
   609   00007C                     vfprintf@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x1C
   613   00007C                     	ds	2
   614   00007E                     vfprintf@fmt:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x1E
   618   00007E                     	ds	2
   619   000080                     vfprintf@ap:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x20
   623   000080                     	ds	2
   624   000082                     ?_printf:
   625                           	callstack 0
   626   000082                     printf@fmt:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x22
   630   000082                     	ds	4
   631   000086                     printf@ap:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x26
   635   000086                     	ds	2
   636   000088                     ??_main:
   637                           
   638                           ; 1 bytes @ 0x28
   639   000088                     	ds	2
   640   00008A                     main@adc_reading:
   641                           	callstack 0
   642                           
   643                           ; 16 bytes @ 0x2A
   644   00008A                     	ds	16
   645   00009A                     main@cmd:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x3A
   649   00009A                     	ds	1
   650   00009B                     main@i:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x3B
   654   00009B                     	ds	1
   655                           
   656                           	psect	cstackCOMRAM
   657   000001                     __pcstackCOMRAM:
   658                           	callstack 0
   659   000001                     ?_TMR0_ReadTimer:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x0
   663   000001                     	ds	2
   664   000003                     ??_TMR0_ReadTimer:
   665                           
   666                           ; 1 bytes @ 0x2
   667   000003                     	ds	2
   668   000005                     TMR0_ReadTimer@readVal:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x4
   672   000005                     	ds	2
   673   000007                     TMR0_ReadTimer@readValLow:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x6
   677   000007                     	ds	1
   678   000008                     TMR0_ReadTimer@readValHigh:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x7
   682   000008                     	ds	1
   683   000009                     i2TMR0_WriteTimer@timerVal:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x8
   687   000009                     	ds	2
   688   00000B                     ??_INTERRUPT_InterruptManager:
   689   00000B                     
   690                           ; 1 bytes @ 0xA
   691   00000B                     	ds	2
   692   00000D                     ??_ADC_SelectChannel:
   693   00000D                     ?___aodiv:
   694                           	callstack 0
   695   00000D                     ?___aomod:
   696                           	callstack 0
   697   00000D                     EUSART1_Write@txData:
   698                           	callstack 0
   699   00000D                     EUSART1_SetFramingErrorHandler@interruptHandler:
   700                           	callstack 0
   701   00000D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   702                           	callstack 0
   703   00000D                     EUSART1_SetErrorHandler@interruptHandler:
   704                           	callstack 0
   705   00000D                     TMR0_WriteTimer@timerVal:
   706                           	callstack 0
   707   00000D                     TMR0_SetInterruptHandler@InterruptHandler:
   708                           	callstack 0
   709   00000D                     ___aodiv@dividend:
   710                           	callstack 0
   711   00000D                     ___aomod@dividend:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0xC
   715   00000D                     	ds	1
   716   00000E                     ADC_SelectChannel@channel:
   717                           	callstack 0
   718   00000E                     putch@txData:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0xD
   722   00000E                     	ds	1
   723   00000F                     ??_TMR0_Initialize:
   724   00000F                     fputc@c:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0xE
   728   00000F                     	ds	2
   729   000011                     fputc@fp:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x10
   733   000011                     	ds	2
   734   000013                     ??_fputc:
   735                           
   736                           ; 1 bytes @ 0x12
   737   000013                     	ds	2
   738   000015                     ___aodiv@divisor:
   739                           	callstack 0
   740   000015                     ___aomod@divisor:
   741                           	callstack 0
   742                           
   743                           ; 8 bytes @ 0x14
   744   000015                     	ds	3
   745   000018                     ctoa@fp:
   746                           	callstack 0
   747   000018                     fputs@s:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x17
   751   000018                     	ds	2
   752   00001A                     ctoa@c:
   753                           	callstack 0
   754   00001A                     fputs@fp:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x19
   758   00001A                     	ds	1
   759   00001B                     ??_ctoa:
   760                           
   761                           ; 1 bytes @ 0x1A
   762   00001B                     	ds	1
   763   00001C                     fputs@c:
   764                           	callstack 0
   765   00001C                     ctoa@l:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x1B
   769   00001C                     	ds	1
   770   00001D                     ___aodiv@counter:
   771                           	callstack 0
   772   00001D                     ___aomod@counter:
   773                           	callstack 0
   774   00001D                     fputs@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x1C
   778   00001D                     	ds	1
   779   00001E                     ___aodiv@sign:
   780                           	callstack 0
   781   00001E                     ___aomod@sign:
   782                           	callstack 0
   783   00001E                     ctoa@w:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1D
   787   00001E                     	ds	1
   788   00001F                     ?_abs:
   789                           	callstack 0
   790   00001F                     pad@fp:
   791                           	callstack 0
   792   00001F                     abs@a:
   793                           	callstack 0
   794   00001F                     ___aodiv@quotient:
   795                           	callstack 0
   796                           
   797                           ; 8 bytes @ 0x1E
   798   00001F                     	ds	2
   799   000021                     ??_abs:
   800   000021                     pad@buf:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x20
   804   000021                     	ds	2
   805   000023                     pad@p:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x22
   809   000023                     	ds	2
   810   000025                     ??_pad:
   811                           
   812                           ; 1 bytes @ 0x24
   813   000025                     	ds	1
   814   000026                     pad@i:
   815                           	callstack 0
   816                           
   817                           ; 2 bytes @ 0x25
   818   000026                     	ds	2
   819   000028                     pad@w:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x27
   823   000028                     	ds	2
   824   00002A                     dtoa@fp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x29
   828   00002A                     	ds	2
   829   00002C                     dtoa@d:
   830                           	callstack 0
   831                           
   832                           ; 8 bytes @ 0x2B
   833   00002C                     	ds	8
   834   000034                     ??_dtoa:
   835                           
   836                           ; 1 bytes @ 0x33
   837   000034                     	ds	8
   838   00003C                     vfpfcnvrt@fp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x3B
   842   00003C                     	ds	2
   843   00003E                     vfpfcnvrt@fmt:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x3D
   847   00003E                     	ds	2
   848   000040                     vfpfcnvrt@ap:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x3F
   852   000040                     	ds	2
   853   000042                     ??_vfpfcnvrt:
   854                           
   855                           ; 1 bytes @ 0x41
   856   000042                     	ds	2
   857   000044                     vfprintf@cfmt:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x43
   861   000044                     	ds	2
   862   000046                     
   863                           ; 1 bytes @ 0x45
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   866 ;;
   867 ;; *************** function _main *****************
   868 ;; Defined at:
   869 ;;		line 36 in file "main.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  adc_reading    16   42[BANK0 ] unsigned char [16]
   874 ;;  i               1   59[BANK0 ] unsigned char 
   875 ;;  cmd             1   58[BANK0 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   885 ;;      Params:         0       0       0       0       0       0       0
   886 ;;      Locals:         0      18       0       0       0       0       0
   887 ;;      Temps:          0       2       0       0       0       0       0
   888 ;;      Totals:         0      20       0       0       0       0       0
   889 ;;Total ram usage:       20 bytes
   890 ;; Hardware stack levels required when called: 13
   891 ;; This function calls:
   892 ;;		_ADC_SelectChannel
   893 ;;		_EUSART1_Read
   894 ;;		_EUSART1_is_rx_ready
   895 ;;		_SYSTEM_Initialize
   896 ;;		_TMR0_SetInterruptHandler
   897 ;;		_TMR0_WriteTimer
   898 ;;		_printf
   899 ;; This function is called by:
   900 ;;		Startup code after reset
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text0
   905   000042                     __ptext0:
   906                           	callstack 0
   907   000042                     _main:
   908                           	callstack 18
   909   000042                     
   910                           ;main.c: 38:             switch (cmd) {;main.c: 39: ;main.c: 41:                     pri
      +                          ntf("------------------------------\r\n");
   911   000042  EC3F  F007         	call	_SYSTEM_Initialize	;wreg free
   912   000046                     
   913                           ;main.c: 46:                     printf("s: gather %d samples from ADC\r\n", 16);
   914   000046  0E00               	movlw	0
   915   000048  6E0E               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
   916   00004A  0E00               	movlw	0
   917   00004C  6E0D               	movwf	TMR0_WriteTimer@timerVal^0,c
   918   00004E  EC7D  F007         	call	_TMR0_WriteTimer	;wreg free
   919   000052                     
   920                           ;main.c: 47:                     printf("0-9: switch sampled channel to ANx\r\n");
   921   000052  94F2               	bcf	242,2,c	;volatile
   922   000054                     l288:
   923   000054  A4F2               	btfss	242,2,c	;volatile
   924   000056  EF2F  F000         	goto	u1541
   925   00005A  EF31  F000         	goto	u1540
   926   00005E                     u1541:
   927   00005E  EF2A  F000         	goto	l288
   928   000062                     u1540:
   929   000062                     
   930                           ;main.c: 50: 
   931   000062  0E22               	movlw	low _myTMR0ISR
   932   000064  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
   933   000066  0E0E               	movlw	high _myTMR0ISR
   934   000068  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
   935   00006A  EC82  F007         	call	_TMR0_SetInterruptHandler	;wreg free
   936   00006E                     
   937                           ;main.c: 51: 
   938   00006E  8EF2               	bsf	242,7,c	;volatile
   939   000070                     
   940                           ;main.c: 52: 
   941   000070  8CF2               	bsf	242,6,c	;volatile
   942   000072                     
   943                           ;main.c: 54:                 case 'o':
   944   000072  0ED7               	movlw	low STR_1
   945   000074  0100               	movlb	0	; () banked
   946   000076  6F82               	movwf	printf@fmt& (0+255),b
   947   000078  0E7F               	movlw	high STR_1
   948   00007A  6F83               	movwf	(printf@fmt+1)& (0+255),b
   949   00007C  ECD6  F006         	call	_printf	;wreg free
   950   000080                     
   951                           ;main.c: 55:                     printf(" k\r\n");
   952   000080  0E71               	movlw	low STR_2
   953   000082  0100               	movlb	0	; () banked
   954   000084  6F82               	movwf	printf@fmt& (0+255),b
   955   000086  0E7F               	movlw	high STR_2
   956   000088  6F83               	movwf	(printf@fmt+1)& (0+255),b
   957   00008A  ECD6  F006         	call	_printf	;wreg free
   958   00008E                     
   959                           ;main.c: 56:                     break;
   960   00008E  0EE2               	movlw	low STR_3
   961   000090  0100               	movlb	0	; () banked
   962   000092  6F82               	movwf	printf@fmt& (0+255),b
   963   000094  0E7F               	movlw	high STR_3
   964   000096  6F83               	movwf	(printf@fmt+1)& (0+255),b
   965   000098  ECD6  F006         	call	_printf	;wreg free
   966   00009C                     
   967                           ;main.c: 57: 
   968   00009C  0EFB               	movlw	low STR_4
   969   00009E  0100               	movlb	0	; () banked
   970   0000A0  6F82               	movwf	printf@fmt& (0+255),b
   971   0000A2  0E7F               	movlw	high STR_4
   972   0000A4  6F83               	movwf	(printf@fmt+1)& (0+255),b
   973   0000A6  ECD6  F006         	call	_printf	;wreg free
   974   0000AA                     l2437:
   975                           
   976                           ;main.c: 61:                 case 'Z':
   977   0000AA  EC6E  F007         	call	_EUSART1_is_rx_ready	;wreg free
   978   0000AE  0900               	iorlw	0
   979   0000B0  B4D8               	btfsc	status,2,c
   980   0000B2  EF5D  F000         	goto	u1551
   981   0000B6  EF5F  F000         	goto	u1550
   982   0000BA                     u1551:
   983   0000BA  EF55  F000         	goto	l2437
   984   0000BE                     u1550:
   985   0000BE                     
   986                           ;main.c: 62:                     for (i = 0; i < 40; i++) printf("\n\r");
   987   0000BE  ECEA  F006         	call	_EUSART1_Read	;wreg free
   988   0000C2  0100               	movlb	0	; () banked
   989   0000C4  6F9A               	movwf	main@cmd& (0+255),b
   990   0000C6                     
   991                           ; BSR set to: 0
   992                           ;main.c: 63:                     __asm("reset");
   993   0000C6  0EF2               	movlw	low STR_5
   994   0000C8  6F82               	movwf	printf@fmt& (0+255),b
   995   0000CA  0E7F               	movlw	high STR_5
   996   0000CC  6F83               	movwf	(printf@fmt+1)& (0+255),b
   997   0000CE  C09A  F084         	movff	main@cmd,?_printf+2
   998   0000D2  6B85               	clrf	(?_printf+3)& (0+255),b
   999   0000D4  ECD6  F006         	call	_printf	;wreg free
  1000                           
  1001                           ;main.c: 64:                     break;
  1002   0000D8  EF44  F001         	goto	l2511
  1003   0000DC                     l2443:
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;main.c: 67: 
  1007   0000DC  0E11               	movlw	low STR_6
  1008   0000DE  6F82               	movwf	printf@fmt& (0+255),b
  1009   0000E0  0E7F               	movlw	high STR_6
  1010   0000E2  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1011   0000E4  ECD6  F006         	call	_printf	;wreg free
  1012                           
  1013                           ;main.c: 68: 
  1014   0000E8  0EC8               	movlw	low STR_7
  1015   0000EA  0100               	movlb	0	; () banked
  1016   0000EC  6F82               	movwf	printf@fmt& (0+255),b
  1017   0000EE  0E7F               	movlw	high STR_7
  1018   0000F0  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1019   0000F2  ECD6  F006         	call	_printf	;wreg free
  1020                           
  1021                           ;main.c: 69:                 case 'z':
  1022   0000F6  0EEB               	movlw	low STR_8
  1023   0000F8  0100               	movlb	0	; () banked
  1024   0000FA  6F82               	movwf	printf@fmt& (0+255),b
  1025   0000FC  0E7F               	movlw	high STR_8
  1026   0000FE  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1027   000100  ECD6  F006         	call	_printf	;wreg free
  1028                           
  1029                           ;main.c: 70:                     for (i = 0; i < 40; i++) printf("\n\r");
  1030   000104  0EA2               	movlw	low STR_9
  1031   000106  0100               	movlb	0	; () banked
  1032   000108  6F82               	movwf	printf@fmt& (0+255),b
  1033   00010A  0E7F               	movlw	high STR_9
  1034   00010C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1035   00010E  ECD6  F006         	call	_printf	;wreg free
  1036                           
  1037                           ;main.c: 71:                     break;
  1038   000112  0E8A               	movlw	low STR_10
  1039   000114  0100               	movlb	0	; () banked
  1040   000116  6F82               	movwf	printf@fmt& (0+255),b
  1041   000118  0E7F               	movlw	high STR_10
  1042   00011A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1043   00011C  ECD6  F006         	call	_printf	;wreg free
  1044                           
  1045                           ;main.c: 72: 
  1046   000120  0E32               	movlw	low STR_11
  1047   000122  0100               	movlb	0	; () banked
  1048   000124  6F82               	movwf	printf@fmt& (0+255),b
  1049   000126  0E7F               	movlw	high STR_11
  1050   000128  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1051   00012A  0E00               	movlw	0
  1052   00012C  6F85               	movwf	(?_printf+3)& (0+255),b
  1053   00012E  0E10               	movlw	16
  1054   000130  6F84               	movwf	(?_printf+2)& (0+255),b
  1055   000132  ECD6  F006         	call	_printf	;wreg free
  1056                           
  1057                           ;main.c: 73: 
  1058   000136  0EEC               	movlw	low STR_12
  1059   000138  0100               	movlb	0	; () banked
  1060   00013A  6F82               	movwf	printf@fmt& (0+255),b
  1061   00013C  0E7E               	movlw	high STR_12
  1062   00013E  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1063   000140  ECD6  F006         	call	_printf	;wreg free
  1064                           
  1065                           ;main.c: 74: 
  1066   000144  0E11               	movlw	low STR_6
  1067   000146  0100               	movlb	0	; () banked
  1068   000148  6F82               	movwf	printf@fmt& (0+255),b
  1069   00014A  0E7F               	movlw	high STR_6
  1070   00014C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1071   00014E  ECD6  F006         	call	_printf	;wreg free
  1072                           
  1073                           ;main.c: 75: 
  1074   000152  EF8E  F001         	goto	l2513
  1075   000156                     l2445:
  1076                           
  1077                           ; BSR set to: 0
  1078                           ;main.c: 81:                         adc_reading[i] = ADRESH;
  1079   000156  0EED               	movlw	low (STR_8+2)
  1080   000158  6F82               	movwf	printf@fmt& (0+255),b
  1081   00015A  0E7F               	movlw	high (STR_8+2)
  1082   00015C  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1083   00015E  ECD6  F006         	call	_printf	;wreg free
  1084                           
  1085                           ;main.c: 82:                     }
  1086   000162  EF8E  F001         	goto	l2513
  1087   000166                     l2447:
  1088                           
  1089                           ; BSR set to: 0
  1090                           ;main.c: 88:                     break;
  1091   000166  0E00               	movlw	0
  1092   000168  6F9B               	movwf	main@i& (0+255),b
  1093   00016A                     l2453:
  1094                           
  1095                           ; BSR set to: 0
  1096   00016A  0EF4               	movlw	low (STR_5+2)
  1097   00016C  6F82               	movwf	printf@fmt& (0+255),b
  1098   00016E  0E7F               	movlw	high (STR_5+2)
  1099   000170  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1100   000172  ECD6  F006         	call	_printf	;wreg free
  1101   000176  0100               	movlb	0	; () banked
  1102   000178  2B9B               	incf	main@i& (0+255),f,b
  1103   00017A                     
  1104                           ; BSR set to: 0
  1105   00017A  0E27               	movlw	39
  1106   00017C  659B               	cpfsgt	main@i& (0+255),b
  1107   00017E  EFC3  F000         	goto	u1561
  1108   000182  EFC5  F000         	goto	u1560
  1109   000186                     u1561:
  1110   000186  EFB5  F000         	goto	l2453
  1111   00018A                     u1560:
  1112   00018A                     
  1113                           ; BSR set to: 0
  1114   00018A  00FF               	reset		;# 
  1115                           
  1116                           ;main.c: 90:                 case '0':
  1117   00018C  EF8E  F001         	goto	l2513
  1118   000190                     l2459:
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 96:                 case '6':
  1122   000190  0E00               	movlw	0
  1123   000192  6F9B               	movwf	main@i& (0+255),b
  1124   000194                     l2465:
  1125                           
  1126                           ; BSR set to: 0
  1127   000194  0EF4               	movlw	low (STR_5+2)
  1128   000196  6F82               	movwf	printf@fmt& (0+255),b
  1129   000198  0E7F               	movlw	high (STR_5+2)
  1130   00019A  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1131   00019C  ECD6  F006         	call	_printf	;wreg free
  1132   0001A0  0100               	movlb	0	; () banked
  1133   0001A2  2B9B               	incf	main@i& (0+255),f,b
  1134   0001A4                     
  1135                           ; BSR set to: 0
  1136   0001A4  0E27               	movlw	39
  1137   0001A6  659B               	cpfsgt	main@i& (0+255),b
  1138   0001A8  EFD8  F000         	goto	u1571
  1139   0001AC  EFDA  F000         	goto	u1570
  1140   0001B0                     u1571:
  1141   0001B0  EFCA  F000         	goto	l2465
  1142   0001B4                     u1570:
  1143   0001B4  EF8E  F001         	goto	l2513
  1144   0001B8                     l2471:
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 104: 
  1148   0001B8  0E00               	movlw	0
  1149   0001BA  6F9B               	movwf	main@i& (0+255),b
  1150   0001BC                     l2477:
  1151                           
  1152                           ; BSR set to: 0
  1153   0001BC  51A2               	movf	_NEW_SAMPLE& (0+255),w,b
  1154   0001BE  B4D8               	btfsc	status,2,c
  1155   0001C0  EFE4  F000         	goto	u1581
  1156   0001C4  EFE6  F000         	goto	u1580
  1157   0001C8                     u1581:
  1158   0001C8  EFDE  F000         	goto	l2477
  1159   0001CC                     u1580:
  1160   0001CC                     
  1161                           ; BSR set to: 0
  1162                           ;main.c: 106: 
  1163   0001CC  0E00               	movlw	0
  1164   0001CE  6FA2               	movwf	_NEW_SAMPLE& (0+255),b
  1165   0001D0                     
  1166                           ; BSR set to: 0
  1167                           ;main.c: 107:                 default:
  1168   0001D0  0E8A               	movlw	low main@adc_reading
  1169   0001D2  259B               	addwf	main@i& (0+255),w,b
  1170   0001D4  6ED9               	movwf	fsr2l,c
  1171   0001D6  6ADA               	clrf	fsr2h,c
  1172   0001D8  0E00               	movlw	high main@adc_reading
  1173   0001DA  22DA               	addwfc	fsr2h,f,c
  1174   0001DC  CFC4 FFDF          	movff	4036,indf2	;volatile
  1175   0001E0                     
  1176                           ; BSR set to: 0
  1177                           ;main.c: 108:                     printf("Unknown key %c\r\n", cmd);
  1178   0001E0  2B9B               	incf	main@i& (0+255),f,b
  1179   0001E2                     
  1180                           ; BSR set to: 0
  1181   0001E2  0E0F               	movlw	15
  1182   0001E4  659B               	cpfsgt	main@i& (0+255),b
  1183   0001E6  EFF7  F000         	goto	u1591
  1184   0001EA  EFF9  F000         	goto	u1590
  1185   0001EE                     u1591:
  1186   0001EE  EFDE  F000         	goto	l2477
  1187   0001F2                     u1590:
  1188   0001F2                     
  1189                           ; BSR set to: 0
  1190                           ;main.c: 110:             }
  1191   0001F2  0EB9               	movlw	low STR_17
  1192   0001F4  6F82               	movwf	printf@fmt& (0+255),b
  1193   0001F6  0E7E               	movlw	high STR_17
  1194   0001F8  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1195   0001FA  0E00               	movlw	0
  1196   0001FC  6F85               	movwf	(?_printf+3)& (0+255),b
  1197   0001FE  0E10               	movlw	16
  1198   000200  6F84               	movwf	(?_printf+2)& (0+255),b
  1199   000202  ECD6  F006         	call	_printf	;wreg free
  1200   000206                     
  1201                           ;main.c: 111:             printf("> ");
  1202   000206  0E00               	movlw	0
  1203   000208  0100               	movlb	0	; () banked
  1204   00020A  6F9B               	movwf	main@i& (0+255),b
  1205   00020C                     l2495:
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;main.c: 112:         }
  1209   00020C  0EF7               	movlw	low STR_18
  1210   00020E  6F82               	movwf	printf@fmt& (0+255),b
  1211   000210  0E7F               	movlw	high STR_18
  1212   000212  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1213   000214  0E8A               	movlw	low main@adc_reading
  1214   000216  259B               	addwf	main@i& (0+255),w,b
  1215   000218  6ED9               	movwf	fsr2l,c
  1216   00021A  6ADA               	clrf	fsr2h,c
  1217   00021C  0E00               	movlw	high main@adc_reading
  1218   00021E  22DA               	addwfc	fsr2h,f,c
  1219   000220  50DF               	movf	indf2,w,c
  1220   000222  6F88               	movwf	??_main& (0+255),b
  1221   000224  5188               	movf	??_main& (0+255),w,b
  1222   000226  6F84               	movwf	(?_printf+2)& (0+255),b
  1223   000228  6B85               	clrf	(?_printf+3)& (0+255),b
  1224   00022A  ECD6  F006         	call	_printf	;wreg free
  1225   00022E  0100               	movlb	0	; () banked
  1226   000230  2B9B               	incf	main@i& (0+255),f,b
  1227   000232                     
  1228                           ; BSR set to: 0
  1229   000232  0E0F               	movlw	15
  1230   000234  659B               	cpfsgt	main@i& (0+255),b
  1231   000236  EF1F  F001         	goto	u1601
  1232   00023A  EF21  F001         	goto	u1600
  1233   00023E                     u1601:
  1234   00023E  EF06  F001         	goto	l2495
  1235   000242                     u1600:
  1236   000242                     
  1237                           ; BSR set to: 0
  1238                           ;main.c: 113:     }
  1239   000242  0E2F               	movlw	low (STR_6+30)
  1240   000244  6F82               	movwf	printf@fmt& (0+255),b
  1241   000246  0E7F               	movlw	high (STR_6+30)
  1242   000248  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1243   00024A  ECD6  F006         	call	_printf	;wreg free
  1244                           
  1245                           ;main.c: 114: 
  1246   00024E  EF8E  F001         	goto	l2513
  1247   000252                     l314:
  1248   000252                     l2503:
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;main.c: 126:     NEW_SAMPLE = 1;
  1252   000252  519A               	movf	main@cmd& (0+255),w,b
  1253   000254  0FD0               	addlw	208
  1254   000256  EC4C  F007         	call	_ADC_SelectChannel
  1255   00025A                     
  1256                           ;main.c: 127:     TMR0_WriteTimer(0x10000 - (1600 - TMR0_ReadTimer()));
  1257   00025A  0E52               	movlw	low STR_20
  1258   00025C  0100               	movlb	0	; () banked
  1259   00025E  6F82               	movwf	printf@fmt& (0+255),b
  1260   000260  0E7F               	movlw	high STR_20
  1261   000262  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1262   000264  C09A  F084         	movff	main@cmd,?_printf+2
  1263   000268  6B85               	clrf	(?_printf+3)& (0+255),b
  1264   00026A  ECD6  F006         	call	_printf	;wreg free
  1265                           
  1266                           ;main.c: 128:     do { LATAbits.LATA6 = 0; } while(0);
  1267   00026E  EF8E  F001         	goto	l2513
  1268   000272                     l2507:
  1269                           
  1270                           ; BSR set to: 0
  1271   000272  0EB7               	movlw	low STR_21
  1272   000274  6F82               	movwf	printf@fmt& (0+255),b
  1273   000276  0E7F               	movlw	high STR_21
  1274   000278  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1275   00027A  C09A  F084         	movff	main@cmd,?_printf+2
  1276   00027E  6B85               	clrf	(?_printf+3)& (0+255),b
  1277   000280  ECD6  F006         	call	_printf	;wreg free
  1278   000284  EF8E  F001         	goto	l2513
  1279   000288                     l2511:
  1280   000288  0100               	movlb	0	; () banked
  1281   00028A  519A               	movf	main@cmd& (0+255),w,b
  1282   00028C  6F88               	movwf	??_main& (0+255),b
  1283   00028E  6B89               	clrf	(??_main+1)& (0+255),b
  1284                           
  1285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1286                           ; Switch size 1, requested type "simple"
  1287                           ; Number of cases is 1, Range of values is 0 to 0
  1288                           ; switch strategies available:
  1289                           ; Name         Instructions Cycles
  1290                           ; simple_byte            4     3 (average)
  1291                           ;	Chosen strategy is simple_byte
  1292   000290  5189               	movf	(??_main+1)& (0+255),w,b
  1293   000292  0A00               	xorlw	0	; case 0
  1294   000294  B4D8               	btfsc	status,2,c
  1295   000296  EF4F  F001         	goto	l2551
  1296   00029A  EF39  F001         	goto	l2507
  1297   00029E                     l2551:
  1298                           
  1299                           ; BSR set to: 0
  1300                           ; Switch size 1, requested type "simple"
  1301                           ; Number of cases is 15, Range of values is 48 to 122
  1302                           ; switch strategies available:
  1303                           ; Name         Instructions Cycles
  1304                           ; simple_byte           46    24 (average)
  1305                           ;	Chosen strategy is simple_byte
  1306   00029E  5188               	movf	??_main& (0+255),w,b
  1307   0002A0  0A30               	xorlw	48	; case 48
  1308   0002A2  B4D8               	btfsc	status,2,c
  1309   0002A4  EF29  F001         	goto	l314
  1310   0002A8  0A01               	xorlw	1	; case 49
  1311   0002AA  B4D8               	btfsc	status,2,c
  1312   0002AC  EF29  F001         	goto	l314
  1313   0002B0  0A03               	xorlw	3	; case 50
  1314   0002B2  B4D8               	btfsc	status,2,c
  1315   0002B4  EF29  F001         	goto	l2503
  1316   0002B8  0A01               	xorlw	1	; case 51
  1317   0002BA  B4D8               	btfsc	status,2,c
  1318   0002BC  EF29  F001         	goto	l2503
  1319   0002C0  0A07               	xorlw	7	; case 52
  1320   0002C2  B4D8               	btfsc	status,2,c
  1321   0002C4  EF29  F001         	goto	l2503
  1322   0002C8  0A01               	xorlw	1	; case 53
  1323   0002CA  B4D8               	btfsc	status,2,c
  1324   0002CC  EF29  F001         	goto	l2503
  1325   0002D0  0A03               	xorlw	3	; case 54
  1326   0002D2  B4D8               	btfsc	status,2,c
  1327   0002D4  EF29  F001         	goto	l2503
  1328   0002D8  0A01               	xorlw	1	; case 55
  1329   0002DA  B4D8               	btfsc	status,2,c
  1330   0002DC  EF29  F001         	goto	l2503
  1331   0002E0  0A0F               	xorlw	15	; case 56
  1332   0002E2  B4D8               	btfsc	status,2,c
  1333   0002E4  EF29  F001         	goto	l2503
  1334   0002E8  0A01               	xorlw	1	; case 57
  1335   0002EA  B4D8               	btfsc	status,2,c
  1336   0002EC  EF29  F001         	goto	l2503
  1337   0002F0  0A06               	xorlw	6	; case 63
  1338   0002F2  B4D8               	btfsc	status,2,c
  1339   0002F4  EF6E  F000         	goto	l2443
  1340   0002F8  0A65               	xorlw	101	; case 90
  1341   0002FA  B4D8               	btfsc	status,2,c
  1342   0002FC  EFB3  F000         	goto	l2447
  1343   000300  0A35               	xorlw	53	; case 111
  1344   000302  B4D8               	btfsc	status,2,c
  1345   000304  EFAB  F000         	goto	l2445
  1346   000308  0A1C               	xorlw	28	; case 115
  1347   00030A  B4D8               	btfsc	status,2,c
  1348   00030C  EFDC  F000         	goto	l2471
  1349   000310  0A09               	xorlw	9	; case 122
  1350   000312  B4D8               	btfsc	status,2,c
  1351   000314  EFC8  F000         	goto	l2459
  1352   000318  EF39  F001         	goto	l2507
  1353   00031C                     l2513:
  1354   00031C  0EFB               	movlw	low STR_4
  1355   00031E  0100               	movlb	0	; () banked
  1356   000320  6F82               	movwf	printf@fmt& (0+255),b
  1357   000322  0E7F               	movlw	high STR_4
  1358   000324  6F83               	movwf	(printf@fmt+1)& (0+255),b
  1359   000326  ECD6  F006         	call	_printf	;wreg free
  1360   00032A  EF55  F000         	goto	l2437
  1361   00032E  EF1F  F000         	goto	start
  1362   000332                     __end_of_main:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _printf *****************
  1366 ;; Defined at:
  1367 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  fmt             2   34[BANK0 ] PTR const unsigned char 
  1370 ;;		 -> STR_22(3), STR_21(17), STR_20(31), STR_19(3), 
  1371 ;;		 -> STR_18(4), STR_17(51), STR_16(3), STR_15(3), 
  1372 ;;		 -> STR_14(5), STR_13(33), STR_12(37), STR_11(32), 
  1373 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  1374 ;;		 -> STR_6(33), STR_5(5), STR_4(3), STR_3(9), 
  1375 ;;		 -> STR_2(25), STR_1(11), 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  ap              2   38[BANK0 ] PTR void [1]
  1378 ;;		 -> ?_printf(2), 
  1379 ;;  ret             2    0        int 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  2   34[BANK0 ] int 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1389 ;;      Params:         0       4       0       0       0       0       0
  1390 ;;      Locals:         0       2       0       0       0       0       0
  1391 ;;      Temps:          0       0       0       0       0       0       0
  1392 ;;      Totals:         0       6       0       0       0       0       0
  1393 ;;Total ram usage:        6 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 12
  1396 ;; This function calls:
  1397 ;;		_vfprintf
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text1
  1404   000DAC                     __ptext1:
  1405                           	callstack 0
  1406   000DAC                     _printf:
  1407                           	callstack 18
  1408   000DAC  0E84               	movlw	low (?_printf+2)
  1409   000DAE  0100               	movlb	0	; () banked
  1410   000DB0  6F86               	movwf	printf@ap& (0+255),b
  1411   000DB2  0E00               	movlw	high (?_printf+2)
  1412   000DB4  6F87               	movwf	(printf@ap+1)& (0+255),b
  1413   000DB6                     
  1414                           ; BSR set to: 0
  1415   000DB6  0E00               	movlw	0
  1416   000DB8  6F7C               	movwf	vfprintf@fp& (0+255),b
  1417   000DBA  0E00               	movlw	0
  1418   000DBC  6F7D               	movwf	(vfprintf@fp+1)& (0+255),b
  1419   000DBE  C082  F07E         	movff	printf@fmt,vfprintf@fmt
  1420   000DC2  C083  F07F         	movff	printf@fmt+1,vfprintf@fmt+1
  1421   000DC6  0E86               	movlw	low printf@ap
  1422   000DC8  6F80               	movwf	vfprintf@ap& (0+255),b
  1423   000DCA  0E00               	movlw	high printf@ap
  1424   000DCC  6F81               	movwf	(vfprintf@ap+1)& (0+255),b
  1425   000DCE  EC01  F006         	call	_vfprintf	;wreg free
  1426   000DD2  0012               	return		;funcret
  1427   000DD4                     __end_of_printf:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _vfprintf *****************
  1431 ;; Defined at:
  1432 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  1435 ;;		 -> NULL(0), 
  1436 ;;  fmt             2   30[BANK0 ] PTR const unsigned char 
  1437 ;;		 -> STR_22(3), STR_21(17), STR_20(31), STR_19(3), 
  1438 ;;		 -> STR_18(4), STR_17(51), STR_16(3), STR_15(3), 
  1439 ;;		 -> STR_14(5), STR_13(33), STR_12(37), STR_11(32), 
  1440 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  1441 ;;		 -> STR_6(33), STR_5(5), STR_4(3), STR_3(9), 
  1442 ;;		 -> STR_2(25), STR_1(11), 
  1443 ;;  ap              2   32[BANK0 ] PTR PTR void 
  1444 ;;		 -> printf@ap(2), 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  cfmt            2   67[COMRAM] PTR unsigned char 
  1447 ;;		 -> STR_22(3), STR_21(17), STR_20(31), STR_19(3), 
  1448 ;;		 -> STR_18(4), STR_17(51), STR_16(3), STR_15(3), 
  1449 ;;		 -> STR_14(5), STR_13(33), STR_12(37), STR_11(32), 
  1450 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  1451 ;;		 -> STR_6(33), STR_5(5), STR_4(3), STR_3(9), 
  1452 ;;		 -> STR_2(25), STR_1(11), 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2   28[BANK0 ] int 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1462 ;;      Params:         0       6       0       0       0       0       0
  1463 ;;      Locals:         2       0       0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0
  1465 ;;      Totals:         2       6       0       0       0       0       0
  1466 ;;Total ram usage:        8 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 11
  1469 ;; This function calls:
  1470 ;;		_vfpfcnvrt
  1471 ;; This function is called by:
  1472 ;;		_printf
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text2
  1477   000C02                     __ptext2:
  1478                           	callstack 0
  1479   000C02                     _vfprintf:
  1480                           	callstack 18
  1481   000C02                     
  1482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1483   000C02  C07E  F044         	movff	vfprintf@fmt,vfprintf@cfmt
  1484   000C06  C07F  F045         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1487   000C0A  EF15  F006         	goto	l2405
  1488   000C0E                     l2403:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1491   000C0E  C07C  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1492   000C12  C07D  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1493   000C16  0E44               	movlw	low vfprintf@cfmt
  1494   000C18  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1495   000C1A  0E00               	movlw	high vfprintf@cfmt
  1496   000C1C  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1497   000C1E  C080  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1498   000C22  C081  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1499   000C26  ECD9  F002         	call	_vfpfcnvrt	;wreg free
  1500   000C2A                     l2405:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1503   000C2A  C044  FFF6         	movff	vfprintf@cfmt,tblptrl
  1504   000C2E  C045  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1505   000C32                     	if	0	;tblptru may be non-zero
  1506   000C32                     	endif
  1507   000C32                     	if	0	;tblptru may be non-zero
  1508   000C32                     	endif
  1509   000C32  0008               	tblrd		*
  1510   000C34  50F5               	movf	tablat,w,c
  1511   000C36  0900               	iorlw	0
  1512   000C38  A4D8               	btfss	status,2,c
  1513   000C3A  EF21  F006         	goto	u1531
  1514   000C3E  EF23  F006         	goto	u1530
  1515   000C42                     u1531:
  1516   000C42  EF07  F006         	goto	l2403
  1517   000C46                     u1530:
  1518   000C46                     
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1520   000C46  0E00               	movlw	0
  1521   000C48  0100               	movlb	0	; () banked
  1522   000C4A  6F7D               	movwf	(?_vfprintf+1)& (0+255),b
  1523   000C4C  0E00               	movlw	0
  1524   000C4E  6F7C               	movwf	?_vfprintf& (0+255),b
  1525   000C50                     
  1526                           ; BSR set to: 0
  1527   000C50  0012               	return		;funcret
  1528   000C52                     __end_of_vfprintf:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _vfpfcnvrt *****************
  1532 ;; Defined at:
  1533 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1536 ;;		 -> NULL(0), 
  1537 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1538 ;;		 -> vfprintf@cfmt(2), 
  1539 ;;  ap              2   63[COMRAM] PTR PTR void 
  1540 ;;		 -> printf@ap(2), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  convarg         8   17[BANK0 ] struct .
  1543 ;;  cp              2   26[BANK0 ] PTR unsigned char 
  1544 ;;		 -> STR_22(3), STR_21(17), STR_20(31), STR_19(3), 
  1545 ;;		 -> STR_18(4), STR_17(51), STR_16(3), STR_15(3), 
  1546 ;;		 -> STR_14(5), STR_13(33), STR_12(37), STR_11(32), 
  1547 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  1548 ;;		 -> STR_6(33), STR_5(5), STR_4(3), STR_3(9), 
  1549 ;;		 -> STR_2(25), STR_1(11), 
  1550 ;;  i               2    0        int 
  1551 ;;  done            2    0        int 
  1552 ;;  c               1   25[BANK0 ] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         6       0       0       0       0       0       0
  1563 ;;      Locals:         0      11       0       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0       0       0
  1565 ;;      Totals:         8      11       0       0       0       0       0
  1566 ;;Total ram usage:       19 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 10
  1569 ;; This function calls:
  1570 ;;		_ctoa
  1571 ;;		_dtoa
  1572 ;;		_fputc
  1573 ;; This function is called by:
  1574 ;;		_vfprintf
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           	psect	text3
  1579   0005B2                     __ptext3:
  1580                           	callstack 0
  1581   0005B2                     _vfpfcnvrt:
  1582                           	callstack 18
  1583   0005B2                     
  1584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1585   0005B2  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1586   0005B6  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1587   0005BA  CFDE FFF6          	movff	postinc2,tblptrl
  1588   0005BE  CFDD FFF7          	movff	postdec2,tblptrh
  1589   0005C2                     	if	0	;tblptru may be non-zero
  1590   0005C2                     	endif
  1591   0005C2                     	if	0	;tblptru may be non-zero
  1592   0005C2                     	endif
  1593   0005C2  0008               	tblrd		*
  1594   0005C4  50F5               	movf	tablat,w,c
  1595   0005C6  0A25               	xorlw	37
  1596   0005C8  A4D8               	btfss	status,2,c
  1597   0005CA  EFE9  F002         	goto	u1491
  1598   0005CE  EFEB  F002         	goto	u1490
  1599   0005D2                     u1491:
  1600   0005D2  EFA1  F003         	goto	l2395
  1601   0005D6                     u1490:
  1602   0005D6                     
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1604   0005D6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1605   0005DA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1606   0005DE  2ADE               	incf	postinc2,f,c
  1607   0005E0  0E00               	movlw	0
  1608   0005E2  22DD               	addwfc	postdec2,f,c
  1609   0005E4                     
  1610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1611   0005E4  0E00               	movlw	0
  1612   0005E6  6E47               	movwf	(_width+1)^0,c
  1613   0005E8  0E00               	movlw	0
  1614   0005EA  6E46               	movwf	_width^0,c
  1615   0005EC  C046  F050         	movff	_width,_flags
  1616   0005F0                     
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1618   0005F0  6848               	setf	_prec^0,c
  1619   0005F2  6849               	setf	(_prec+1)^0,c
  1620   0005F4                     
  1621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  1622   0005F4  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1623   0005F8  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1624   0005FC  CFDE FFF6          	movff	postinc2,tblptrl
  1625   000600  CFDD FFF7          	movff	postdec2,tblptrh
  1626   000604                     	if	0	;tblptru may be non-zero
  1627   000604                     	endif
  1628   000604                     	if	0	;tblptru may be non-zero
  1629   000604                     	endif
  1630   000604  0008               	tblrd		*
  1631   000606  50F5               	movf	tablat,w,c
  1632   000608  0A63               	xorlw	99
  1633   00060A  A4D8               	btfss	status,2,c
  1634   00060C  EF0A  F003         	goto	u1501
  1635   000610  EF0C  F003         	goto	u1500
  1636   000614                     u1501:
  1637   000614  EF30  F003         	goto	l2379
  1638   000618                     u1500:
  1639   000618                     
  1640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  1641   000618  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1642   00061C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1643   000620  2ADE               	incf	postinc2,f,c
  1644   000622  0E00               	movlw	0
  1645   000624  22DD               	addwfc	postdec2,f,c
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1648   000626  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1649   00062A  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1650   00062E  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1651   000632  0E02               	movlw	2
  1652   000634  26DE               	addwf	postinc2,f,c
  1653   000636  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1654   00063A  0E00               	movlw	0
  1655   00063C  22DD               	addwfc	postdec2,f,c
  1656   00063E  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1657   000642  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1658   000646  50DF               	movf	indf2,w,c
  1659   000648  0100               	movlb	0	; () banked
  1660   00064A  6F79               	movwf	vfpfcnvrt@c& (0+255),b
  1661   00064C                     
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  1664   00064C  C03C  F018         	movff	vfpfcnvrt@fp,ctoa@fp
  1665   000650  C03D  F019         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1666   000654  C079  F01A         	movff	vfpfcnvrt@c,ctoa@c
  1667   000658  EC2C  F005         	call	_ctoa	;wreg free
  1668   00065C  EFB5  F003         	goto	l1075
  1669   000660                     l2379:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1672   000660  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1673   000664  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1674   000668  CFDE F07A          	movff	postinc2,vfpfcnvrt@cp
  1675   00066C  CFDD F07B          	movff	postdec2,vfpfcnvrt@cp+1
  1676   000670                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1678   000670  C07A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1679   000674  C07B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1680   000678                     	if	0	;tblptru may be non-zero
  1681   000678                     	endif
  1682   000678                     	if	0	;tblptru may be non-zero
  1683   000678                     	endif
  1684   000678  0008               	tblrd		*
  1685   00067A  50F5               	movf	tablat,w,c
  1686   00067C  0A64               	xorlw	100
  1687   00067E  B4D8               	btfsc	status,2,c
  1688   000680  EF44  F003         	goto	u1511
  1689   000684  EF46  F003         	goto	u1510
  1690   000688                     u1511:
  1691   000688  EF54  F003         	goto	l2385
  1692   00068C                     u1510:
  1693   00068C  C07A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1694   000690  C07B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1695   000694                     	if	0	;tblptru may be non-zero
  1696   000694                     	endif
  1697   000694                     	if	0	;tblptru may be non-zero
  1698   000694                     	endif
  1699   000694  0008               	tblrd		*
  1700   000696  50F5               	movf	tablat,w,c
  1701   000698  0A69               	xorlw	105
  1702   00069A  A4D8               	btfss	status,2,c
  1703   00069C  EF52  F003         	goto	u1521
  1704   0006A0  EF54  F003         	goto	u1520
  1705   0006A4                     u1521:
  1706   0006A4  EF98  F003         	goto	l2391
  1707   0006A8                     u1520:
  1708   0006A8                     l2385:
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1711   0006A8  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1712   0006AC  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1713   0006B0  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1714   0006B4  0E02               	movlw	2
  1715   0006B6  26DE               	addwf	postinc2,f,c
  1716   0006B8  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1717   0006BC  0E00               	movlw	0
  1718   0006BE  22DD               	addwfc	postdec2,f,c
  1719   0006C0  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1720   0006C4  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1721   0006C8  CFDE F071          	movff	postinc2,vfpfcnvrt@convarg
  1722   0006CC  CFDD F072          	movff	postdec2,vfpfcnvrt@convarg+1
  1723   0006D0  0100               	movlb	0	; () banked
  1724   0006D2  0E00               	movlw	0
  1725   0006D4  BF72               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1726   0006D6  0EFF               	movlw	-1
  1727   0006D8  6F73               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1728   0006DA  6F74               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1729   0006DC  6F75               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1730   0006DE  6F76               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1731   0006E0  6F77               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1732   0006E2  6F78               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1733                           
  1734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1735   0006E4  0E01               	movlw	1
  1736   0006E6  257A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1737   0006E8  6E42               	movwf	??_vfpfcnvrt^0,c
  1738   0006EA  0E00               	movlw	0
  1739   0006EC  217B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1740   0006EE  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1741   0006F0  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742   0006F4  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743   0006F8  C042  FFDE         	movff	??_vfpfcnvrt,postinc2
  1744   0006FC  C043  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1745   000700                     
  1746                           ; BSR set to: 0
  1747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1748   000700  C03C  F02A         	movff	vfpfcnvrt@fp,dtoa@fp
  1749   000704  C03D  F02B         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1750   000708  C071  F02C         	movff	vfpfcnvrt@convarg,dtoa@d
  1751   00070C  C072  F02D         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1752   000710  C073  F02E         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1753   000714  C074  F02F         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1754   000718  C075  F030         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1755   00071C  C076  F031         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1756   000720  C077  F032         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1757   000724  C078  F033         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1758   000728  EC99  F001         	call	_dtoa	;wreg free
  1759   00072C  EFB5  F003         	goto	l1075
  1760   000730                     l2391:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1763   000730  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1764   000734  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1765   000738  2ADE               	incf	postinc2,f,c
  1766   00073A  0E00               	movlw	0
  1767   00073C  22DD               	addwfc	postdec2,f,c
  1768   00073E  EFB5  F003         	goto	l1075
  1769   000742                     l2395:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1772   000742  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1773   000746  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1774   00074A  CFDE FFF6          	movff	postinc2,tblptrl
  1775   00074E  CFDD FFF7          	movff	postdec2,tblptrh
  1776   000752                     	if	0	;tblptru may be non-zero
  1777   000752                     	endif
  1778   000752                     	if	0	;tblptru may be non-zero
  1779   000752                     	endif
  1780   000752  0008               	tblrd		*
  1781   000754  50F5               	movf	tablat,w,c
  1782   000756  6E0F               	movwf	fputc@c^0,c
  1783   000758  6A10               	clrf	(fputc@c+1)^0,c
  1784   00075A  C03C  F011         	movff	vfpfcnvrt@fp,fputc@fp
  1785   00075E  C03D  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1786   000762  EC79  F005         	call	_fputc	;wreg free
  1787   000766  EF98  F003         	goto	l2391
  1788   00076A                     l1075:
  1789   00076A  0012               	return		;funcret
  1790   00076C                     __end_of_vfpfcnvrt:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _dtoa *****************
  1794 ;; Defined at:
  1795 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  1798 ;;		 -> NULL(0), 
  1799 ;;  d               8   43[COMRAM] long long 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  n               8    6[BANK0 ] long long 
  1802 ;;  i               2   15[BANK0 ] int 
  1803 ;;  w               2    4[BANK0 ] int 
  1804 ;;  p               2    2[BANK0 ] int 
  1805 ;;  s               1   14[BANK0 ] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:        10       0       0       0       0       0       0
  1816 ;;      Locals:         0      17       0       0       0       0       0
  1817 ;;      Temps:          8       0       0       0       0       0       0
  1818 ;;      Totals:        18      17       0       0       0       0       0
  1819 ;;Total ram usage:       35 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 9
  1822 ;; This function calls:
  1823 ;;		___aodiv
  1824 ;;		___aomod
  1825 ;;		_abs
  1826 ;;		_pad
  1827 ;; This function is called by:
  1828 ;;		_vfpfcnvrt
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text4
  1833   000332                     __ptext4:
  1834                           	callstack 0
  1835   000332                     _dtoa:
  1836                           	callstack 18
  1837   000332                     
  1838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1839   000332  C02C  F066         	movff	dtoa@d,dtoa@n
  1840   000336  C02D  F067         	movff	dtoa@d+1,dtoa@n+1
  1841   00033A  C02E  F068         	movff	dtoa@d+2,dtoa@n+2
  1842   00033E  C02F  F069         	movff	dtoa@d+3,dtoa@n+3
  1843   000342  C030  F06A         	movff	dtoa@d+4,dtoa@n+4
  1844   000346  C031  F06B         	movff	dtoa@d+5,dtoa@n+5
  1845   00034A  C032  F06C         	movff	dtoa@d+6,dtoa@n+6
  1846   00034E  C033  F06D         	movff	dtoa@d+7,dtoa@n+7
  1847   000352                     
  1848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1849   000352  0100               	movlb	0	; () banked
  1850   000354  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  1851   000356  EFAF  F001         	goto	u1391
  1852   00035A  EFB2  F001         	goto	u1390
  1853   00035E                     u1391:
  1854   00035E  0E01               	movlw	1
  1855   000360  EFB3  F001         	goto	u1400
  1856   000364                     u1390:
  1857   000364  0E00               	movlw	0
  1858   000366                     u1400:
  1859   000366  6F6E               	movwf	dtoa@s& (0+255),b
  1860   000368                     
  1861                           ; BSR set to: 0
  1862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1863   000368  516E               	movf	dtoa@s& (0+255),w,b
  1864   00036A  B4D8               	btfsc	status,2,c
  1865   00036C  EFBA  F001         	goto	u1411
  1866   000370  EFBC  F001         	goto	u1410
  1867   000374                     u1411:
  1868   000374  EFCC  F001         	goto	l2319
  1869   000378                     u1410:
  1870   000378                     
  1871                           ; BSR set to: 0
  1872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1873   000378  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  1874   00037A  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  1875   00037C  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  1876   00037E  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  1877   000380  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  1878   000382  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  1879   000384  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  1880   000386  6D66               	negf	dtoa@n& (0+255),b
  1881   000388  0E00               	movlw	0
  1882   00038A  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  1883   00038C  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  1884   00038E  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  1885   000390  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  1886   000392  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  1887   000394  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  1888   000396  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  1889   000398                     l2319:
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1893   000398  BE49               	btfsc	(_prec+1)^0,7,c
  1894   00039A  EFD9  F001         	goto	u1420
  1895   00039E  5049               	movf	(_prec+1)^0,w,c
  1896   0003A0  E106               	bnz	u1421
  1897   0003A2  0448               	decf	_prec^0,w,c
  1898   0003A4  B0D8               	btfsc	status,0,c
  1899   0003A6  EFD7  F001         	goto	u1421
  1900   0003AA  EFD9  F001         	goto	u1420
  1901   0003AE                     u1421:
  1902   0003AE  EFDF  F001         	goto	l1056
  1903   0003B2                     u1420:
  1904   0003B2                     
  1905                           ; BSR set to: 0
  1906   0003B2  0E00               	movlw	0
  1907   0003B4  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1908   0003B6  0E01               	movlw	1
  1909   0003B8  6F62               	movwf	dtoa@p& (0+255),b
  1910   0003BA  EFE3  F001         	goto	l1058
  1911   0003BE                     l1056:
  1912                           
  1913                           ; BSR set to: 0
  1914   0003BE  C048  F062         	movff	_prec,dtoa@p
  1915   0003C2  C049  F063         	movff	_prec+1,dtoa@p+1
  1916   0003C6                     l1058:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1920   0003C6  C046  F064         	movff	_width,dtoa@w
  1921   0003CA  C047  F065         	movff	_width+1,dtoa@w+1
  1922   0003CE                     
  1923                           ; BSR set to: 0
  1924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1925   0003CE  516E               	movf	dtoa@s& (0+255),w,b
  1926   0003D0  B4D8               	btfsc	status,2,c
  1927   0003D2  EFED  F001         	goto	u1431
  1928   0003D6  EFEF  F001         	goto	u1430
  1929   0003DA                     u1431:
  1930   0003DA  EF06  F002         	goto	l1059
  1931   0003DE                     u1430:
  1932   0003DE                     
  1933                           ; BSR set to: 0
  1934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1935   0003DE  0764               	decf	dtoa@w& (0+255),f,b
  1936   0003E0  A0D8               	btfss	status,0,c
  1937   0003E2  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1938   0003E4                     
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1941   0003E4  516E               	movf	dtoa@s& (0+255),w,b
  1942   0003E6  A4D8               	btfss	status,2,c
  1943   0003E8  EFF8  F001         	goto	u1441
  1944   0003EC  EFFA  F001         	goto	u1440
  1945   0003F0                     u1441:
  1946   0003F0  EF00  F002         	goto	l2331
  1947   0003F4                     u1440:
  1948   0003F4                     
  1949                           ; BSR set to: 0
  1950   0003F4  0E00               	movlw	0
  1951   0003F6  6F61               	movwf	(_dtoa$1431+1)& (0+255),b
  1952   0003F8  0E2B               	movlw	43
  1953   0003FA  6F60               	movwf	_dtoa$1431& (0+255),b
  1954   0003FC  EF04  F002         	goto	l2333
  1955   000400                     l2331:
  1956                           
  1957                           ; BSR set to: 0
  1958   000400  0E00               	movlw	0
  1959   000402  6F61               	movwf	(_dtoa$1431+1)& (0+255),b
  1960   000404  0E2D               	movlw	45
  1961   000406  6F60               	movwf	_dtoa$1431& (0+255),b
  1962   000408                     l2333:
  1963                           
  1964                           ; BSR set to: 0
  1965   000408  C060  F06E         	movff	_dtoa$1431,dtoa@s
  1966   00040C                     l1059:
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1970   00040C  0E00               	movlw	0
  1971   00040E  6F70               	movwf	(dtoa@i+1)& (0+255),b
  1972   000410  0E1F               	movlw	31
  1973   000412  6F6F               	movwf	dtoa@i& (0+255),b
  1974   000414                     
  1975                           ; BSR set to: 0
  1976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1977   000414  0E00               	movlw	0
  1978   000416  6FC2               	movwf	(_dbuf+31)& (0+255),b
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1981   000418  EF8B  F002         	goto	l2347
  1982   00041C                     l2337:
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1986   00041C  076F               	decf	dtoa@i& (0+255),f,b
  1987   00041E  A0D8               	btfss	status,0,c
  1988   000420  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1989   000422                     
  1990                           ; BSR set to: 0
  1991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1992   000422  0EA3               	movlw	low _dbuf
  1993   000424  256F               	addwf	dtoa@i& (0+255),w,b
  1994   000426  6ED9               	movwf	fsr2l,c
  1995   000428  0E00               	movlw	high _dbuf
  1996   00042A  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1997   00042C  6EDA               	movwf	fsr2h,c
  1998   00042E  C066  F00D         	movff	dtoa@n,___aomod@dividend
  1999   000432  C067  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  2000   000436  C068  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  2001   00043A  C069  F010         	movff	dtoa@n+3,___aomod@dividend+3
  2002   00043E  C06A  F011         	movff	dtoa@n+4,___aomod@dividend+4
  2003   000442  C06B  F012         	movff	dtoa@n+5,___aomod@dividend+5
  2004   000446  C06C  F013         	movff	dtoa@n+6,___aomod@dividend+6
  2005   00044A  C06D  F014         	movff	dtoa@n+7,___aomod@dividend+7
  2006   00044E  0E0A               	movlw	10
  2007   000450  6E15               	movwf	___aomod@divisor^0,c
  2008   000452  0E00               	movlw	0
  2009   000454  6E16               	movwf	(___aomod@divisor+1)^0,c
  2010   000456  0E00               	movlw	0
  2011   000458  6E17               	movwf	(___aomod@divisor+2)^0,c
  2012   00045A  0E00               	movlw	0
  2013   00045C  6E18               	movwf	(___aomod@divisor+3)^0,c
  2014   00045E  0E00               	movlw	0
  2015   000460  6E19               	movwf	(___aomod@divisor+4)^0,c
  2016   000462  0E00               	movlw	0
  2017   000464  6E1A               	movwf	(___aomod@divisor+5)^0,c
  2018   000466  0E00               	movlw	0
  2019   000468  6E1B               	movwf	(___aomod@divisor+6)^0,c
  2020   00046A  0E00               	movlw	0
  2021   00046C  6E1C               	movwf	(___aomod@divisor+7)^0,c
  2022   00046E  EC7A  F004         	call	___aomod	;wreg free
  2023   000472  C00D  F034         	movff	?___aomod,??_dtoa
  2024   000476  C00E  F035         	movff	?___aomod+1,??_dtoa+1
  2025   00047A  C00F  F036         	movff	?___aomod+2,??_dtoa+2
  2026   00047E  C010  F037         	movff	?___aomod+3,??_dtoa+3
  2027   000482  C011  F038         	movff	?___aomod+4,??_dtoa+4
  2028   000486  C012  F039         	movff	?___aomod+5,??_dtoa+5
  2029   00048A  C013  F03A         	movff	?___aomod+6,??_dtoa+6
  2030   00048E  C014  F03B         	movff	?___aomod+7,??_dtoa+7
  2031   000492  C034  F01F         	movff	??_dtoa,abs@a
  2032   000496  C035  F020         	movff	??_dtoa+1,abs@a+1
  2033   00049A  EC4B  F006         	call	_abs	;wreg free
  2034   00049E  501F               	movf	?_abs^0,w,c
  2035   0004A0  0F30               	addlw	48
  2036   0004A2  6EDF               	movwf	indf2,c
  2037   0004A4                     
  2038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2039   0004A4  0100               	movlb	0	; () banked
  2040   0004A6  0762               	decf	dtoa@p& (0+255),f,b
  2041   0004A8  A0D8               	btfss	status,0,c
  2042   0004AA  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2043   0004AC                     
  2044                           ; BSR set to: 0
  2045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2046   0004AC  0764               	decf	dtoa@w& (0+255),f,b
  2047   0004AE  A0D8               	btfss	status,0,c
  2048   0004B0  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2049   0004B2                     
  2050                           ; BSR set to: 0
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2052   0004B2  C066  F00D         	movff	dtoa@n,___aodiv@dividend
  2053   0004B6  C067  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  2054   0004BA  C068  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  2055   0004BE  C069  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  2056   0004C2  C06A  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  2057   0004C6  C06B  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  2058   0004CA  C06C  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  2059   0004CE  C06D  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  2060   0004D2  0E0A               	movlw	10
  2061   0004D4  6E15               	movwf	___aodiv@divisor^0,c
  2062   0004D6  0E00               	movlw	0
  2063   0004D8  6E16               	movwf	(___aodiv@divisor+1)^0,c
  2064   0004DA  0E00               	movlw	0
  2065   0004DC  6E17               	movwf	(___aodiv@divisor+2)^0,c
  2066   0004DE  0E00               	movlw	0
  2067   0004E0  6E18               	movwf	(___aodiv@divisor+3)^0,c
  2068   0004E2  0E00               	movlw	0
  2069   0004E4  6E19               	movwf	(___aodiv@divisor+4)^0,c
  2070   0004E6  0E00               	movlw	0
  2071   0004E8  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  2072   0004EA  0E00               	movlw	0
  2073   0004EC  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  2074   0004EE  0E00               	movlw	0
  2075   0004F0  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  2076   0004F2  ECB6  F003         	call	___aodiv	;wreg free
  2077   0004F6  C00D  F066         	movff	?___aodiv,dtoa@n
  2078   0004FA  C00E  F067         	movff	?___aodiv+1,dtoa@n+1
  2079   0004FE  C00F  F068         	movff	?___aodiv+2,dtoa@n+2
  2080   000502  C010  F069         	movff	?___aodiv+3,dtoa@n+3
  2081   000506  C011  F06A         	movff	?___aodiv+4,dtoa@n+4
  2082   00050A  C012  F06B         	movff	?___aodiv+5,dtoa@n+5
  2083   00050E  C013  F06C         	movff	?___aodiv+6,dtoa@n+6
  2084   000512  C014  F06D         	movff	?___aodiv+7,dtoa@n+7
  2085   000516                     l2347:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2088   000516  0100               	movlb	0	; () banked
  2089   000518  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  2090   00051A  EF97  F002         	goto	u1451
  2091   00051E  5170               	movf	(dtoa@i+1)& (0+255),w,b
  2092   000520  E108               	bnz	u1450
  2093   000522  056F               	decf	dtoa@i& (0+255),w,b
  2094   000524  A0D8               	btfss	status,0,c
  2095   000526  EF97  F002         	goto	u1451
  2096   00052A  EF99  F002         	goto	u1450
  2097   00052E                     u1451:
  2098   00052E  EFB5  F002         	goto	l2353
  2099   000532                     u1450:
  2100   000532                     
  2101                           ; BSR set to: 0
  2102   000532  5166               	movf	dtoa@n& (0+255),w,b
  2103   000534  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  2104   000536  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  2105   000538  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  2106   00053A  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  2107   00053C  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  2108   00053E  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  2109   000540  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  2110   000542  A4D8               	btfss	status,2,c
  2111   000544  EFA6  F002         	goto	u1461
  2112   000548  EFA8  F002         	goto	u1460
  2113   00054C                     u1461:
  2114   00054C  EF0E  F002         	goto	l2337
  2115   000550                     u1460:
  2116   000550                     
  2117                           ; BSR set to: 0
  2118   000550  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  2119   000552  EFB5  F002         	goto	u1470
  2120   000556  5163               	movf	(dtoa@p+1)& (0+255),w,b
  2121   000558  E106               	bnz	u1471
  2122   00055A  0562               	decf	dtoa@p& (0+255),w,b
  2123   00055C  B0D8               	btfsc	status,0,c
  2124   00055E  EFB3  F002         	goto	u1471
  2125   000562  EFB5  F002         	goto	u1470
  2126   000566                     u1471:
  2127   000566  EF0E  F002         	goto	l2337
  2128   00056A                     u1470:
  2129   00056A                     l2353:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2133   00056A  516E               	movf	dtoa@s& (0+255),w,b
  2134   00056C  B4D8               	btfsc	status,2,c
  2135   00056E  EFBB  F002         	goto	u1481
  2136   000572  EFBD  F002         	goto	u1480
  2137   000576                     u1481:
  2138   000576  EFC8  F002         	goto	l2359
  2139   00057A                     u1480:
  2140   00057A                     
  2141                           ; BSR set to: 0
  2142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2143   00057A  076F               	decf	dtoa@i& (0+255),f,b
  2144   00057C  A0D8               	btfss	status,0,c
  2145   00057E  0770               	decf	(dtoa@i+1)& (0+255),f,b
  2146   000580                     
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2149   000580  0EA3               	movlw	low _dbuf
  2150   000582  256F               	addwf	dtoa@i& (0+255),w,b
  2151   000584  6ED9               	movwf	fsr2l,c
  2152   000586  0E00               	movlw	high _dbuf
  2153   000588  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  2154   00058A  6EDA               	movwf	fsr2h,c
  2155   00058C  C06E  FFDF         	movff	dtoa@s,indf2
  2156   000590                     l2359:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2160   000590  C02A  F01F         	movff	dtoa@fp,pad@fp
  2161   000594  C02B  F020         	movff	dtoa@fp+1,pad@fp+1
  2162   000598  0EA3               	movlw	low _dbuf
  2163   00059A  256F               	addwf	dtoa@i& (0+255),w,b
  2164   00059C  6E21               	movwf	pad@buf^0,c
  2165   00059E  0E00               	movlw	high _dbuf
  2166   0005A0  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  2167   0005A2  6E22               	movwf	(pad@buf+1)^0,c
  2168   0005A4  C064  F023         	movff	dtoa@w,pad@p
  2169   0005A8  C065  F024         	movff	dtoa@w+1,pad@p+1
  2170   0005AC  ECC4  F005         	call	_pad	;wreg free
  2171   0005B0  0012               	return		;funcret
  2172   0005B2                     __end_of_dtoa:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _pad *****************
  2176 ;; Defined at:
  2177 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2180 ;;		 -> NULL(0), 
  2181 ;;  buf             2   32[COMRAM] PTR unsigned char 
  2182 ;;		 -> dbuf(32), 
  2183 ;;  p               2   34[COMRAM] int 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  w               2   39[COMRAM] int 
  2186 ;;  i               2   37[COMRAM] int 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2196 ;;      Params:         6       0       0       0       0       0       0
  2197 ;;      Locals:         4       0       0       0       0       0       0
  2198 ;;      Temps:          1       0       0       0       0       0       0
  2199 ;;      Totals:        11       0       0       0       0       0       0
  2200 ;;Total ram usage:       11 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 8
  2203 ;; This function calls:
  2204 ;;		_fputc
  2205 ;;		_fputs
  2206 ;; This function is called by:
  2207 ;;		_dtoa
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text5
  2212   000B88                     __ptext5:
  2213                           	callstack 0
  2214   000B88                     _pad:
  2215                           	callstack 18
  2216   000B88                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2218   000B88  BE24               	btfsc	(pad@p+1)^0,7,c
  2219   000B8A  EFC9  F005         	goto	u1331
  2220   000B8E  EFCB  F005         	goto	u1330
  2221   000B92                     u1331:
  2222   000B92  EFD1  F005         	goto	l2279
  2223   000B96                     u1330:
  2224   000B96  C023  F028         	movff	pad@p,pad@w
  2225   000B9A  C024  F029         	movff	pad@p+1,pad@w+1
  2226   000B9E  EFD5  F005         	goto	l1033
  2227   000BA2                     l2279:
  2228   000BA2  0E00               	movlw	0
  2229   000BA4  6E29               	movwf	(pad@w+1)^0,c
  2230   000BA6  0E00               	movlw	0
  2231   000BA8  6E28               	movwf	pad@w^0,c
  2232   000BAA                     l1033:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2235   000BAA  0E00               	movlw	0
  2236   000BAC  6E27               	movwf	(pad@i+1)^0,c
  2237   000BAE  0E00               	movlw	0
  2238   000BB0  6E26               	movwf	pad@i^0,c
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2241   000BB2  EFE7  F005         	goto	l2285
  2242   000BB6                     l2281:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2245   000BB6  0E00               	movlw	0
  2246   000BB8  6E10               	movwf	(fputc@c+1)^0,c
  2247   000BBA  0E20               	movlw	32
  2248   000BBC  6E0F               	movwf	fputc@c^0,c
  2249   000BBE  C01F  F011         	movff	pad@fp,fputc@fp
  2250   000BC2  C020  F012         	movff	pad@fp+1,fputc@fp+1
  2251   000BC6  EC79  F005         	call	_fputc	;wreg free
  2252   000BCA                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2254   000BCA  4A26               	infsnz	pad@i^0,f,c
  2255   000BCC  2A27               	incf	(pad@i+1)^0,f,c
  2256   000BCE                     l2285:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2259   000BCE  5028               	movf	pad@w^0,w,c
  2260   000BD0  5C26               	subwf	pad@i^0,w,c
  2261   000BD2  5027               	movf	(pad@i+1)^0,w,c
  2262   000BD4  0A80               	xorlw	128
  2263   000BD6  6E25               	movwf	??_pad^0,c
  2264   000BD8  5029               	movf	(pad@w+1)^0,w,c
  2265   000BDA  0A80               	xorlw	128
  2266   000BDC  5825               	subwfb	??_pad^0,w,c
  2267   000BDE  A0D8               	btfss	status,0,c
  2268   000BE0  EFF4  F005         	goto	u1341
  2269   000BE4  EFF6  F005         	goto	u1340
  2270   000BE8                     u1341:
  2271   000BE8  EFDB  F005         	goto	l2281
  2272   000BEC                     u1340:
  2273   000BEC                     
  2274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2275   000BEC  C021  F018         	movff	pad@buf,fputs@s
  2276   000BF0  C022  F019         	movff	pad@buf+1,fputs@s+1
  2277   000BF4  C01F  F01A         	movff	pad@fp,fputs@fp
  2278   000BF8  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  2279   000BFC  EC29  F006         	call	_fputs	;wreg free
  2280   000C00  0012               	return		;funcret
  2281   000C02                     __end_of_pad:
  2282                           	callstack 0
  2283                           
  2284 ;; *************** function _fputs *****************
  2285 ;; Defined at:
  2286 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2289 ;;		 -> dbuf(32), 
  2290 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  2291 ;;		 -> NULL(0), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  i               2   28[COMRAM] int 
  2294 ;;  c               1   27[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2   23[COMRAM] int 
  2297 ;; Registers used:
  2298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2304 ;;      Params:         4       0       0       0       0       0       0
  2305 ;;      Locals:         3       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0
  2307 ;;      Totals:         7       0       0       0       0       0       0
  2308 ;;Total ram usage:        7 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 7
  2311 ;; This function calls:
  2312 ;;		_fputc
  2313 ;; This function is called by:
  2314 ;;		_pad
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text6
  2319   000C52                     __ptext6:
  2320                           	callstack 0
  2321   000C52                     _fputs:
  2322                           	callstack 18
  2323   000C52  0E00               	movlw	0
  2324   000C54  6E1E               	movwf	(fputs@i+1)^0,c
  2325   000C56  0E00               	movlw	0
  2326   000C58  6E1D               	movwf	fputs@i^0,c
  2327   000C5A  EF3A  F006         	goto	l2193
  2328   000C5E                     l2189:
  2329   000C5E  C01C  F00F         	movff	fputs@c,fputc@c
  2330   000C62  6A10               	clrf	(fputc@c+1)^0,c
  2331   000C64  C01A  F011         	movff	fputs@fp,fputc@fp
  2332   000C68  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
  2333   000C6C  EC79  F005         	call	_fputc	;wreg free
  2334   000C70  4A1D               	infsnz	fputs@i^0,f,c
  2335   000C72  2A1E               	incf	(fputs@i+1)^0,f,c
  2336   000C74                     l2193:
  2337   000C74  501D               	movf	fputs@i^0,w,c
  2338   000C76  2418               	addwf	fputs@s^0,w,c
  2339   000C78  6ED9               	movwf	fsr2l,c
  2340   000C7A  501E               	movf	(fputs@i+1)^0,w,c
  2341   000C7C  2019               	addwfc	(fputs@s+1)^0,w,c
  2342   000C7E  6EDA               	movwf	fsr2h,c
  2343   000C80  50DF               	movf	indf2,w,c
  2344   000C82  6E1C               	movwf	fputs@c^0,c
  2345   000C84  501C               	movf	fputs@c^0,w,c
  2346   000C86  A4D8               	btfss	status,2,c
  2347   000C88  EF48  F006         	goto	u1191
  2348   000C8C  EF4A  F006         	goto	u1190
  2349   000C90                     u1191:
  2350   000C90  EF2F  F006         	goto	l2189
  2351   000C94                     u1190:
  2352   000C94  0012               	return		;funcret
  2353   000C96                     __end_of_fputs:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _abs *****************
  2357 ;; Defined at:
  2358 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  a               2   30[COMRAM] int 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  2   30[COMRAM] int 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2372 ;;      Params:         2       0       0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0
  2374 ;;      Temps:          2       0       0       0       0       0       0
  2375 ;;      Totals:         4       0       0       0       0       0       0
  2376 ;;Total ram usage:        4 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 4
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_dtoa
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text7
  2387   000C96                     __ptext7:
  2388                           	callstack 0
  2389   000C96                     _abs:
  2390                           	callstack 22
  2391   000C96  BE20               	btfsc	(abs@a+1)^0,7,c
  2392   000C98  EF58  F006         	goto	u1350
  2393   000C9C  5020               	movf	(abs@a+1)^0,w,c
  2394   000C9E  E106               	bnz	u1351
  2395   000CA0  041F               	decf	abs@a^0,w,c
  2396   000CA2  B0D8               	btfsc	status,0,c
  2397   000CA4  EF56  F006         	goto	u1351
  2398   000CA8  EF58  F006         	goto	u1350
  2399   000CAC                     u1351:
  2400   000CAC  EF66  F006         	goto	l1088
  2401   000CB0                     u1350:
  2402   000CB0  C01F  F021         	movff	abs@a,??_abs
  2403   000CB4  C020  F022         	movff	abs@a+1,??_abs+1
  2404   000CB8  1E21               	comf	??_abs^0,f,c
  2405   000CBA  1E22               	comf	(??_abs+1)^0,f,c
  2406   000CBC  4A21               	infsnz	??_abs^0,f,c
  2407   000CBE  2A22               	incf	(??_abs+1)^0,f,c
  2408   000CC0  C021  F01F         	movff	??_abs,?_abs
  2409   000CC4  C022  F020         	movff	??_abs+1,?_abs+1
  2410   000CC8  EF6A  F006         	goto	l1091
  2411   000CCC                     l1088:
  2412   000CCC  C01F  F01F         	movff	abs@a,?_abs
  2413   000CD0  C020  F020         	movff	abs@a+1,?_abs+1
  2414   000CD4                     l1091:
  2415   000CD4  0012               	return		;funcret
  2416   000CD6                     __end_of_abs:
  2417                           	callstack 0
  2418                           
  2419 ;; *************** function ___aomod *****************
  2420 ;; Defined at:
  2421 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  dividend        8   12[COMRAM] long long 
  2424 ;;  divisor         8   20[COMRAM] long long 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  sign            1   29[COMRAM] unsigned char 
  2427 ;;  counter         1   28[COMRAM] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  8   12[COMRAM] long long 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0
  2432 ;; Tracked objects:
  2433 ;;		On entry : 0/0
  2434 ;;		On exit  : 0/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2437 ;;      Params:        16       0       0       0       0       0       0
  2438 ;;      Locals:         2       0       0       0       0       0       0
  2439 ;;      Temps:          0       0       0       0       0       0       0
  2440 ;;      Totals:        18       0       0       0       0       0       0
  2441 ;;Total ram usage:       18 bytes
  2442 ;; Hardware stack levels used: 1
  2443 ;; Hardware stack levels required when called: 4
  2444 ;; This function calls:
  2445 ;;		Nothing
  2446 ;; This function is called by:
  2447 ;;		_dtoa
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           	psect	text8
  2452   0008F4                     __ptext8:
  2453                           	callstack 0
  2454   0008F4                     ___aomod:
  2455                           	callstack 22
  2456   0008F4  0E00               	movlw	0
  2457   0008F6  6E1E               	movwf	___aomod@sign^0,c
  2458   0008F8  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2459   0008FA  EF83  F004         	goto	u1270
  2460   0008FE  EF81  F004         	goto	u1271
  2461   000902                     u1271:
  2462   000902  EF95  F004         	goto	l2247
  2463   000906                     u1270:
  2464   000906  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2465   000908  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2466   00090A  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2467   00090C  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2468   00090E  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2469   000910  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2470   000912  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2471   000914  6C0D               	negf	___aomod@dividend^0,c
  2472   000916  0E00               	movlw	0
  2473   000918  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2474   00091A  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2475   00091C  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2476   00091E  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2477   000920  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2478   000922  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2479   000924  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2480   000926  0E01               	movlw	1
  2481   000928  6E1E               	movwf	___aomod@sign^0,c
  2482   00092A                     l2247:
  2483   00092A  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2484   00092C  EF9C  F004         	goto	u1280
  2485   000930  EF9A  F004         	goto	u1281
  2486   000934                     u1281:
  2487   000934  EFAC  F004         	goto	l2251
  2488   000938                     u1280:
  2489   000938  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2490   00093A  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2491   00093C  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2492   00093E  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2493   000940  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2494   000942  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2495   000944  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2496   000946  6C15               	negf	___aomod@divisor^0,c
  2497   000948  0E00               	movlw	0
  2498   00094A  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2499   00094C  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2500   00094E  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2501   000950  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2502   000952  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2503   000954  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2504   000956  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2505   000958                     l2251:
  2506   000958  5015               	movf	___aomod@divisor^0,w,c
  2507   00095A  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2508   00095C  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2509   00095E  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2510   000960  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2511   000962  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2512   000964  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2513   000966  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2514   000968  B4D8               	btfsc	status,2,c
  2515   00096A  EFB9  F004         	goto	u1291
  2516   00096E  EFBB  F004         	goto	u1290
  2517   000972                     u1291:
  2518   000972  EF03  F005         	goto	l2267
  2519   000976                     u1290:
  2520   000976  0E01               	movlw	1
  2521   000978  6E1D               	movwf	___aomod@counter^0,c
  2522   00097A  EFC9  F004         	goto	l2257
  2523   00097E                     l2255:
  2524   00097E  90D8               	bcf	status,0,c
  2525   000980  3615               	rlcf	___aomod@divisor^0,f,c
  2526   000982  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2527   000984  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2528   000986  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2529   000988  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2530   00098A  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2531   00098C  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2532   00098E  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2533   000990  2A1D               	incf	___aomod@counter^0,f,c
  2534   000992                     l2257:
  2535   000992  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2536   000994  EFCE  F004         	goto	u1301
  2537   000998  EFD0  F004         	goto	u1300
  2538   00099C                     u1301:
  2539   00099C  EFBF  F004         	goto	l2255
  2540   0009A0                     u1300:
  2541   0009A0                     l2259:
  2542   0009A0  5015               	movf	___aomod@divisor^0,w,c
  2543   0009A2  5C0D               	subwf	___aomod@dividend^0,w,c
  2544   0009A4  5016               	movf	(___aomod@divisor+1)^0,w,c
  2545   0009A6  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2546   0009A8  5017               	movf	(___aomod@divisor+2)^0,w,c
  2547   0009AA  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2548   0009AC  5018               	movf	(___aomod@divisor+3)^0,w,c
  2549   0009AE  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2550   0009B0  5019               	movf	(___aomod@divisor+4)^0,w,c
  2551   0009B2  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2552   0009B4  501A               	movf	(___aomod@divisor+5)^0,w,c
  2553   0009B6  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2554   0009B8  501B               	movf	(___aomod@divisor+6)^0,w,c
  2555   0009BA  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2556   0009BC  501C               	movf	(___aomod@divisor+7)^0,w,c
  2557   0009BE  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2558   0009C0  A0D8               	btfss	status,0,c
  2559   0009C2  EFE5  F004         	goto	u1311
  2560   0009C6  EFE7  F004         	goto	u1310
  2561   0009CA                     u1311:
  2562   0009CA  EFF7  F004         	goto	l2263
  2563   0009CE                     u1310:
  2564   0009CE  5015               	movf	___aomod@divisor^0,w,c
  2565   0009D0  5E0D               	subwf	___aomod@dividend^0,f,c
  2566   0009D2  5016               	movf	(___aomod@divisor+1)^0,w,c
  2567   0009D4  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2568   0009D6  5017               	movf	(___aomod@divisor+2)^0,w,c
  2569   0009D8  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2570   0009DA  5018               	movf	(___aomod@divisor+3)^0,w,c
  2571   0009DC  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2572   0009DE  5019               	movf	(___aomod@divisor+4)^0,w,c
  2573   0009E0  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2574   0009E2  501A               	movf	(___aomod@divisor+5)^0,w,c
  2575   0009E4  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2576   0009E6  501B               	movf	(___aomod@divisor+6)^0,w,c
  2577   0009E8  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2578   0009EA  501C               	movf	(___aomod@divisor+7)^0,w,c
  2579   0009EC  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2580   0009EE                     l2263:
  2581   0009EE  90D8               	bcf	status,0,c
  2582   0009F0  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2583   0009F2  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2584   0009F4  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2585   0009F6  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2586   0009F8  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2587   0009FA  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2588   0009FC  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2589   0009FE  3215               	rrcf	___aomod@divisor^0,f,c
  2590   000A00  2E1D               	decfsz	___aomod@counter^0,f,c
  2591   000A02  EFD0  F004         	goto	l2259
  2592   000A06                     l2267:
  2593   000A06  501E               	movf	___aomod@sign^0,w,c
  2594   000A08  B4D8               	btfsc	status,2,c
  2595   000A0A  EF09  F005         	goto	u1321
  2596   000A0E  EF0B  F005         	goto	u1320
  2597   000A12                     u1321:
  2598   000A12  EF1B  F005         	goto	l2271
  2599   000A16                     u1320:
  2600   000A16  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2601   000A18  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2602   000A1A  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2603   000A1C  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2604   000A1E  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2605   000A20  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2606   000A22  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2607   000A24  6C0D               	negf	___aomod@dividend^0,c
  2608   000A26  0E00               	movlw	0
  2609   000A28  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2610   000A2A  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2611   000A2C  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2612   000A2E  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2613   000A30  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2614   000A32  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2615   000A34  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2616   000A36                     l2271:
  2617   000A36  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2618   000A3A  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2619   000A3E  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2620   000A42  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2621   000A46  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2622   000A4A  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2623   000A4E  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2624   000A52  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2625   000A56  0012               	return		;funcret
  2626   000A58                     __end_of___aomod:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function ___aodiv *****************
  2630 ;; Defined at:
  2631 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  dividend        8   12[COMRAM] long long 
  2634 ;;  divisor         8   20[COMRAM] long long 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  quotient        8   30[COMRAM] long long 
  2637 ;;  sign            1   29[COMRAM] unsigned char 
  2638 ;;  counter         1   28[COMRAM] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  8   12[COMRAM] long long 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2648 ;;      Params:        16       0       0       0       0       0       0
  2649 ;;      Locals:        10       0       0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0
  2651 ;;      Totals:        26       0       0       0       0       0       0
  2652 ;;Total ram usage:       26 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 4
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_dtoa
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text9
  2663   00076C                     __ptext9:
  2664                           	callstack 0
  2665   00076C                     ___aodiv:
  2666                           	callstack 22
  2667   00076C  0E00               	movlw	0
  2668   00076E  6E1E               	movwf	___aodiv@sign^0,c
  2669   000770  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2670   000772  EFBF  F003         	goto	u1200
  2671   000776  EFBD  F003         	goto	u1201
  2672   00077A                     u1201:
  2673   00077A  EFD1  F003         	goto	l2203
  2674   00077E                     u1200:
  2675   00077E  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2676   000780  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2677   000782  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2678   000784  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2679   000786  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2680   000788  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2681   00078A  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2682   00078C  6C15               	negf	___aodiv@divisor^0,c
  2683   00078E  0E00               	movlw	0
  2684   000790  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2685   000792  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2686   000794  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2687   000796  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2688   000798  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2689   00079A  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2690   00079C  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2691   00079E  0E01               	movlw	1
  2692   0007A0  6E1E               	movwf	___aodiv@sign^0,c
  2693   0007A2                     l2203:
  2694   0007A2  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2695   0007A4  EFD8  F003         	goto	u1210
  2696   0007A8  EFD6  F003         	goto	u1211
  2697   0007AC                     u1211:
  2698   0007AC  EFEA  F003         	goto	l2209
  2699   0007B0                     u1210:
  2700   0007B0  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2701   0007B2  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2702   0007B4  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2703   0007B6  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2704   0007B8  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2705   0007BA  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2706   0007BC  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2707   0007BE  6C0D               	negf	___aodiv@dividend^0,c
  2708   0007C0  0E00               	movlw	0
  2709   0007C2  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2710   0007C4  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2711   0007C6  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2712   0007C8  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2713   0007CA  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2714   0007CC  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2715   0007CE  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2716   0007D0  0E01               	movlw	1
  2717   0007D2  1A1E               	xorwf	___aodiv@sign^0,f,c
  2718   0007D4                     l2209:
  2719   0007D4  EE20  F01F         	lfsr	2,___aodiv@quotient
  2720   0007D8  0E07               	movlw	7
  2721   0007DA                     u1221:
  2722   0007DA  6ADE               	clrf	postinc2,c
  2723   0007DC  06E8               	decf	wreg,f,c
  2724   0007DE  E2FD               	bc	u1221
  2725   0007E0  5015               	movf	___aodiv@divisor^0,w,c
  2726   0007E2  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2727   0007E4  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2728   0007E6  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2729   0007E8  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2730   0007EA  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2731   0007EC  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2732   0007EE  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2733   0007F0  B4D8               	btfsc	status,2,c
  2734   0007F2  EFFD  F003         	goto	u1231
  2735   0007F6  EFFF  F003         	goto	u1230
  2736   0007FA                     u1231:
  2737   0007FA  EF51  F004         	goto	l2231
  2738   0007FE                     u1230:
  2739   0007FE  0E01               	movlw	1
  2740   000800  6E1D               	movwf	___aodiv@counter^0,c
  2741   000802  EF0D  F004         	goto	l2217
  2742   000806                     l2215:
  2743   000806  90D8               	bcf	status,0,c
  2744   000808  3615               	rlcf	___aodiv@divisor^0,f,c
  2745   00080A  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2746   00080C  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2747   00080E  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2748   000810  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2749   000812  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2750   000814  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2751   000816  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2752   000818  2A1D               	incf	___aodiv@counter^0,f,c
  2753   00081A                     l2217:
  2754   00081A  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2755   00081C  EF12  F004         	goto	u1241
  2756   000820  EF14  F004         	goto	u1240
  2757   000824                     u1241:
  2758   000824  EF03  F004         	goto	l2215
  2759   000828                     u1240:
  2760   000828                     l2219:
  2761   000828  90D8               	bcf	status,0,c
  2762   00082A  361F               	rlcf	___aodiv@quotient^0,f,c
  2763   00082C  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2764   00082E  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2765   000830  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2766   000832  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2767   000834  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2768   000836  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2769   000838  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2770   00083A  5015               	movf	___aodiv@divisor^0,w,c
  2771   00083C  5C0D               	subwf	___aodiv@dividend^0,w,c
  2772   00083E  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2773   000840  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2774   000842  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2775   000844  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2776   000846  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2777   000848  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2778   00084A  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2779   00084C  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2780   00084E  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2781   000850  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2782   000852  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2783   000854  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2784   000856  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2785   000858  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2786   00085A  A0D8               	btfss	status,0,c
  2787   00085C  EF32  F004         	goto	u1251
  2788   000860  EF34  F004         	goto	u1250
  2789   000864                     u1251:
  2790   000864  EF45  F004         	goto	l2227
  2791   000868                     u1250:
  2792   000868  5015               	movf	___aodiv@divisor^0,w,c
  2793   00086A  5E0D               	subwf	___aodiv@dividend^0,f,c
  2794   00086C  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2795   00086E  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2796   000870  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2797   000872  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2798   000874  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2799   000876  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2800   000878  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2801   00087A  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2802   00087C  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2803   00087E  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2804   000880  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2805   000882  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2806   000884  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2807   000886  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2808   000888  801F               	bsf	___aodiv@quotient^0,0,c
  2809   00088A                     l2227:
  2810   00088A  90D8               	bcf	status,0,c
  2811   00088C  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2812   00088E  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  2813   000890  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  2814   000892  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  2815   000894  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  2816   000896  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  2817   000898  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  2818   00089A  3215               	rrcf	___aodiv@divisor^0,f,c
  2819   00089C  2E1D               	decfsz	___aodiv@counter^0,f,c
  2820   00089E  EF14  F004         	goto	l2219
  2821   0008A2                     l2231:
  2822   0008A2  501E               	movf	___aodiv@sign^0,w,c
  2823   0008A4  B4D8               	btfsc	status,2,c
  2824   0008A6  EF57  F004         	goto	u1261
  2825   0008AA  EF59  F004         	goto	u1260
  2826   0008AE                     u1261:
  2827   0008AE  EF69  F004         	goto	l2235
  2828   0008B2                     u1260:
  2829   0008B2  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  2830   0008B4  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  2831   0008B6  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  2832   0008B8  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  2833   0008BA  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  2834   0008BC  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  2835   0008BE  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  2836   0008C0  6C1F               	negf	___aodiv@quotient^0,c
  2837   0008C2  0E00               	movlw	0
  2838   0008C4  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  2839   0008C6  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  2840   0008C8  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  2841   0008CA  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  2842   0008CC  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  2843   0008CE  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  2844   0008D0  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  2845   0008D2                     l2235:
  2846   0008D2  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  2847   0008D6  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  2848   0008DA  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  2849   0008DE  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  2850   0008E2  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  2851   0008E6  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  2852   0008EA  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  2853   0008EE  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  2854   0008F2  0012               	return		;funcret
  2855   0008F4                     __end_of___aodiv:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _ctoa *****************
  2859 ;; Defined at:
  2860 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2863 ;;		 -> NULL(0), 
  2864 ;;  c               1   25[COMRAM] unsigned char 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  w               2   29[COMRAM] int 
  2867 ;;  l               2   27[COMRAM] int 
  2868 ;; Return value:  Size  Location     Type
  2869 ;;                  1    wreg      void 
  2870 ;; Registers used:
  2871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2877 ;;      Params:         3       0       0       0       0       0       0
  2878 ;;      Locals:         4       0       0       0       0       0       0
  2879 ;;      Temps:          1       0       0       0       0       0       0
  2880 ;;      Totals:         8       0       0       0       0       0       0
  2881 ;;Total ram usage:        8 bytes
  2882 ;; Hardware stack levels used: 1
  2883 ;; Hardware stack levels required when called: 7
  2884 ;; This function calls:
  2885 ;;		_fputc
  2886 ;; This function is called by:
  2887 ;;		_vfpfcnvrt
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text10
  2892   000A58                     __ptext10:
  2893                           	callstack 0
  2894   000A58                     _ctoa:
  2895                           	callstack 20
  2896   000A58                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  2898   000A58  5046               	movf	_width^0,w,c
  2899   000A5A  1047               	iorwf	(_width+1)^0,w,c
  2900   000A5C  A4D8               	btfss	status,2,c
  2901   000A5E  EF33  F005         	goto	u1361
  2902   000A62  EF35  F005         	goto	u1360
  2903   000A66                     u1361:
  2904   000A66  EF3B  F005         	goto	l2297
  2905   000A6A                     u1360:
  2906   000A6A  C046  F01E         	movff	_width,ctoa@w
  2907   000A6E  C047  F01F         	movff	_width+1,ctoa@w+1
  2908   000A72  EF41  F005         	goto	l1043
  2909   000A76                     l2297:
  2910   000A76  0EFF               	movlw	255
  2911   000A78  2446               	addwf	_width^0,w,c
  2912   000A7A  6E1E               	movwf	ctoa@w^0,c
  2913   000A7C  0EFF               	movlw	255
  2914   000A7E  2047               	addwfc	(_width+1)^0,w,c
  2915   000A80  6E1F               	movwf	(ctoa@w+1)^0,c
  2916   000A82                     l1043:
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  2919   000A82  BE1F               	btfsc	(ctoa@w+1)^0,7,c
  2920   000A84  EF46  F005         	goto	u1371
  2921   000A88  EF48  F005         	goto	u1370
  2922   000A8C                     u1371:
  2923   000A8C  EF4A  F005         	goto	l2301
  2924   000A90                     u1370:
  2925   000A90  EF4E  F005         	goto	l1047
  2926   000A94                     l2301:
  2927   000A94  0E00               	movlw	0
  2928   000A96  6E1F               	movwf	(ctoa@w+1)^0,c
  2929   000A98  0E00               	movlw	0
  2930   000A9A  6E1E               	movwf	ctoa@w^0,c
  2931   000A9C                     l1047:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  2934   000A9C  0E00               	movlw	0
  2935   000A9E  6E1D               	movwf	(ctoa@l+1)^0,c
  2936   000AA0  0E00               	movlw	0
  2937   000AA2  6E1C               	movwf	ctoa@l^0,c
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  2940   000AA4  EF60  F005         	goto	l2307
  2941   000AA8                     l2303:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  2944   000AA8  0E00               	movlw	0
  2945   000AAA  6E10               	movwf	(fputc@c+1)^0,c
  2946   000AAC  0E20               	movlw	32
  2947   000AAE  6E0F               	movwf	fputc@c^0,c
  2948   000AB0  C018  F011         	movff	ctoa@fp,fputc@fp
  2949   000AB4  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  2950   000AB8  EC79  F005         	call	_fputc	;wreg free
  2951   000ABC                     
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  2953   000ABC  4A1C               	infsnz	ctoa@l^0,f,c
  2954   000ABE  2A1D               	incf	(ctoa@l+1)^0,f,c
  2955   000AC0                     l2307:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  2958   000AC0  501E               	movf	ctoa@w^0,w,c
  2959   000AC2  5C1C               	subwf	ctoa@l^0,w,c
  2960   000AC4  501D               	movf	(ctoa@l+1)^0,w,c
  2961   000AC6  0A80               	xorlw	128
  2962   000AC8  6E1B               	movwf	??_ctoa^0,c
  2963   000ACA  501F               	movf	(ctoa@w+1)^0,w,c
  2964   000ACC  0A80               	xorlw	128
  2965   000ACE  581B               	subwfb	??_ctoa^0,w,c
  2966   000AD0  A0D8               	btfss	status,0,c
  2967   000AD2  EF6D  F005         	goto	u1381
  2968   000AD6  EF6F  F005         	goto	u1380
  2969   000ADA                     u1381:
  2970   000ADA  EF54  F005         	goto	l2303
  2971   000ADE                     u1380:
  2972   000ADE                     
  2973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  2974   000ADE  C01A  F00F         	movff	ctoa@c,fputc@c
  2975   000AE2  6A10               	clrf	(fputc@c+1)^0,c
  2976   000AE4  C018  F011         	movff	ctoa@fp,fputc@fp
  2977   000AE8  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  2978   000AEC  EC79  F005         	call	_fputc	;wreg free
  2979   000AF0  0012               	return		;funcret
  2980   000AF2                     __end_of_ctoa:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _fputc *****************
  2984 ;; Defined at:
  2985 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  c               2   14[COMRAM] int 
  2988 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2989 ;;		 -> NULL(0), 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  2   14[COMRAM] int 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3001 ;;      Params:         4       0       0       0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0
  3003 ;;      Temps:          5       0       0       0       0       0       0
  3004 ;;      Totals:         9       0       0       0       0       0       0
  3005 ;;Total ram usage:        9 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 6
  3008 ;; This function calls:
  3009 ;;		_putch
  3010 ;; This function is called by:
  3011 ;;		_pad
  3012 ;;		_ctoa
  3013 ;;		_vfpfcnvrt
  3014 ;;		_fputs
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text11
  3019   000AF2                     __ptext11:
  3020                           	callstack 0
  3021   000AF2                     _fputc:
  3022                           	callstack 21
  3023   000AF2  5011               	movf	fputc@fp^0,w,c
  3024   000AF4  1012               	iorwf	(fputc@fp+1)^0,w,c
  3025   000AF6  B4D8               	btfsc	status,2,c
  3026   000AF8  EF80  F005         	goto	u1151
  3027   000AFC  EF82  F005         	goto	u1150
  3028   000B00                     u1151:
  3029   000B00  EF8B  F005         	goto	l2177
  3030   000B04                     u1150:
  3031   000B04  5011               	movf	fputc@fp^0,w,c
  3032   000B06  1012               	iorwf	(fputc@fp+1)^0,w,c
  3033   000B08  A4D8               	btfss	status,2,c
  3034   000B0A  EF89  F005         	goto	u1161
  3035   000B0E  EF8B  F005         	goto	u1160
  3036   000B12                     u1161:
  3037   000B12  EF90  F005         	goto	l2179
  3038   000B16                     u1160:
  3039   000B16                     l2177:
  3040   000B16  500F               	movf	fputc@c^0,w,c
  3041   000B18  EC78  F007         	call	_putch
  3042   000B1C  EFC3  F005         	goto	l1103
  3043   000B20                     l2179:
  3044   000B20  EE20 F009          	lfsr	2,9
  3045   000B24  5011               	movf	fputc@fp^0,w,c
  3046   000B26  26D9               	addwf	fsr2l,f,c
  3047   000B28  5012               	movf	(fputc@fp+1)^0,w,c
  3048   000B2A  22DA               	addwfc	fsr2h,f,c
  3049   000B2C  50DE               	movf	postinc2,w,c
  3050   000B2E  10DE               	iorwf	postinc2,w,c
  3051   000B30  B4D8               	btfsc	status,2,c
  3052   000B32  EF9D  F005         	goto	u1171
  3053   000B36  EF9F  F005         	goto	u1170
  3054   000B3A                     u1171:
  3055   000B3A  EFBA  F005         	goto	l2183
  3056   000B3E                     u1170:
  3057   000B3E  EE20 F009          	lfsr	2,9
  3058   000B42  5011               	movf	fputc@fp^0,w,c
  3059   000B44  26D9               	addwf	fsr2l,f,c
  3060   000B46  5012               	movf	(fputc@fp+1)^0,w,c
  3061   000B48  22DA               	addwfc	fsr2h,f,c
  3062   000B4A  EE10 F003          	lfsr	1,3
  3063   000B4E  5011               	movf	fputc@fp^0,w,c
  3064   000B50  26E1               	addwf	fsr1l,f,c
  3065   000B52  5012               	movf	(fputc@fp+1)^0,w,c
  3066   000B54  22E2               	addwfc	fsr1h,f,c
  3067   000B56  50DE               	movf	postinc2,w,c
  3068   000B58  5CE6               	subwf	postinc1,w,c
  3069   000B5A  50E6               	movf	postinc1,w,c
  3070   000B5C  0A80               	xorlw	128
  3071   000B5E  6E17               	movwf	(??_fputc+4)^0,c
  3072   000B60  50DE               	movf	postinc2,w,c
  3073   000B62  0A80               	xorlw	128
  3074   000B64  5817               	subwfb	(??_fputc+4)^0,w,c
  3075   000B66  B0D8               	btfsc	status,0,c
  3076   000B68  EFB8  F005         	goto	u1181
  3077   000B6C  EFBA  F005         	goto	u1180
  3078   000B70                     u1181:
  3079   000B70  EFC3  F005         	goto	l1103
  3080   000B74                     u1180:
  3081   000B74                     l2183:
  3082   000B74  EE20 F003          	lfsr	2,3
  3083   000B78  5011               	movf	fputc@fp^0,w,c
  3084   000B7A  26D9               	addwf	fsr2l,f,c
  3085   000B7C  5012               	movf	(fputc@fp+1)^0,w,c
  3086   000B7E  22DA               	addwfc	fsr2h,f,c
  3087   000B80  2ADE               	incf	postinc2,f,c
  3088   000B82  0E00               	movlw	0
  3089   000B84  22DD               	addwfc	postdec2,f,c
  3090   000B86                     l1103:
  3091   000B86  0012               	return		;funcret
  3092   000B88                     __end_of_fputc:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _putch *****************
  3096 ;; Defined at:
  3097 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  txData          1    wreg     unsigned char 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  txData          1   13[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         0       0       0       0       0       0       0
  3112 ;;      Locals:         1       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0
  3114 ;;      Totals:         1       0       0       0       0       0       0
  3115 ;;Total ram usage:        1 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 5
  3118 ;; This function calls:
  3119 ;;		_EUSART1_Write
  3120 ;; This function is called by:
  3121 ;;		_fputc
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text12
  3126   000EF0                     __ptext12:
  3127                           	callstack 0
  3128   000EF0                     _putch:
  3129                           	callstack 21
  3130                           
  3131                           ;incstack = 0
  3132                           ;putch@txData stored from wreg
  3133   000EF0  6E0E               	movwf	putch@txData^0,c
  3134   000EF2                     
  3135                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3136   000EF2  500E               	movf	putch@txData^0,w,c
  3137   000EF4  EC58  F007         	call	_EUSART1_Write
  3138   000EF8  0012               	return		;funcret
  3139   000EFA                     __end_of_putch:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _EUSART1_Write *****************
  3143 ;; Defined at:
  3144 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  txData          1    wreg     unsigned char 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  txData          1   12[COMRAM] unsigned char 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3158 ;;      Params:         0       0       0       0       0       0       0
  3159 ;;      Locals:         1       0       0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0
  3161 ;;      Totals:         1       0       0       0       0       0       0
  3162 ;;Total ram usage:        1 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 4
  3165 ;; This function calls:
  3166 ;;		Nothing
  3167 ;; This function is called by:
  3168 ;;		_putch
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text13
  3173   000EB0                     __ptext13:
  3174                           	callstack 0
  3175   000EB0                     _EUSART1_Write:
  3176                           	callstack 21
  3177                           
  3178                           ;incstack = 0
  3179                           ;EUSART1_Write@txData stored from wreg
  3180   000EB0  6E0D               	movwf	EUSART1_Write@txData^0,c
  3181   000EB2                     l182:
  3182                           
  3183                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3184   000EB2  A89E               	btfss	158,4,c	;volatile
  3185   000EB4  EF5E  F007         	goto	u1141
  3186   000EB8  EF60  F007         	goto	u1140
  3187   000EBC                     u1141:
  3188   000EBC  EF59  F007         	goto	l182
  3189   000EC0                     u1140:
  3190   000EC0                     
  3191                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3192   000EC0  C00D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3193   000EC4  0012               	return		;funcret
  3194   000EC6                     __end_of_EUSART1_Write:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _TMR0_WriteTimer *****************
  3198 ;; Defined at:
  3199 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  timerVal        2   12[COMRAM] unsigned short 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3213 ;;      Params:         2       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0
  3216 ;;      Totals:         2       0       0       0       0       0       0
  3217 ;;Total ram usage:        2 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 4
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_main
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text14
  3228   000EFA                     __ptext14:
  3229                           	callstack 0
  3230   000EFA                     _TMR0_WriteTimer:
  3231                           	callstack 26
  3232   000EFA                     
  3233                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3234   000EFA  500E               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3235   000EFC  6ED7               	movwf	215,c	;volatile
  3236   000EFE                     
  3237                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3238   000EFE  C00D  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3239   000F02  0012               	return		;funcret
  3240   000F04                     __end_of_TMR0_WriteTimer:
  3241                           	callstack 0
  3242                           
  3243 ;; *************** function _SYSTEM_Initialize *****************
  3244 ;; Defined at:
  3245 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3259 ;;      Params:         0       0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 6
  3266 ;; This function calls:
  3267 ;;		_ADC_Initialize
  3268 ;;		_EUSART1_Initialize
  3269 ;;		_INTERRUPT_Initialize
  3270 ;;		_OSCILLATOR_Initialize
  3271 ;;		_PIN_MANAGER_Initialize
  3272 ;;		_TMR0_Initialize
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text15
  3279   000E7E                     __ptext15:
  3280                           	callstack 0
  3281   000E7E                     _SYSTEM_Initialize:
  3282                           	callstack 24
  3283   000E7E                     
  3284                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3285   000E7E  EC9B  F007         	call	_INTERRUPT_Initialize	;wreg free
  3286   000E82                     
  3287                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3288   000E82  ECC1  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  3289   000E86                     
  3290                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3291   000E86  EC31  F007         	call	_OSCILLATOR_Initialize	;wreg free
  3292   000E8A                     
  3293                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  3294   000E8A  ECA6  F006         	call	_TMR0_Initialize	;wreg free
  3295   000E8E                     
  3296                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3297   000E8E  EC63  F007         	call	_ADC_Initialize	;wreg free
  3298   000E92                     
  3299                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3300   000E92  EC6B  F006         	call	_EUSART1_Initialize	;wreg free
  3301   000E96  0012               	return		;funcret
  3302   000E98                     __end_of_SYSTEM_Initialize:
  3303                           	callstack 0
  3304                           
  3305 ;; *************** function _TMR0_Initialize *****************
  3306 ;; Defined at:
  3307 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2, status,0, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3321 ;;      Params:         0       0       0       0       0       0       0
  3322 ;;      Locals:         0       0       0       0       0       0       0
  3323 ;;      Temps:          2       0       0       0       0       0       0
  3324 ;;      Totals:         2       0       0       0       0       0       0
  3325 ;;Total ram usage:        2 bytes
  3326 ;; Hardware stack levels used: 1
  3327 ;; Hardware stack levels required when called: 5
  3328 ;; This function calls:
  3329 ;;		_TMR0_SetInterruptHandler
  3330 ;; This function is called by:
  3331 ;;		_SYSTEM_Initialize
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text16
  3336   000D4C                     __ptext16:
  3337                           	callstack 0
  3338   000D4C                     _TMR0_Initialize:
  3339                           	callstack 24
  3340   000D4C                     
  3341                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3342   000D4C  9CD5               	bcf	213,6,c	;volatile
  3343   000D4E                     
  3344                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3345   000D4E  0E00               	movlw	0
  3346   000D50  6ED7               	movwf	215,c	;volatile
  3347                           
  3348                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3349   000D52  0E00               	movlw	0
  3350   000D54  6ED6               	movwf	214,c	;volatile
  3351   000D56                     
  3352                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3353   000D56  50D6               	movf	214,w,c	;volatile
  3354   000D58  CFD7 F00F          	movff	4055,??_TMR0_Initialize	;volatile
  3355   000D5C  6A10               	clrf	(??_TMR0_Initialize+1)^0,c
  3356   000D5E  C00F  F010         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3357   000D62  6A0F               	clrf	??_TMR0_Initialize^0,c
  3358   000D64  100F               	iorwf	??_TMR0_Initialize^0,w,c
  3359   000D66  6E4A               	movwf	_timer0ReloadVal^0,c	;volatile
  3360   000D68  5010               	movf	(??_TMR0_Initialize+1)^0,w,c
  3361   000D6A  6E4B               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3362   000D6C                     
  3363                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3364   000D6C  94F2               	bcf	242,2,c	;volatile
  3365   000D6E                     
  3366                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3367   000D6E  8AF2               	bsf	242,5,c	;volatile
  3368   000D70                     
  3369                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3370   000D70  0E3A               	movlw	low _TMR0_DefaultInterruptHandler
  3371   000D72  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3372   000D74  0E0F               	movlw	high _TMR0_DefaultInterruptHandler
  3373   000D76  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3374   000D78  EC82  F007         	call	_TMR0_SetInterruptHandler	;wreg free
  3375   000D7C                     
  3376                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3377   000D7C  0E9F               	movlw	159
  3378   000D7E  6ED5               	movwf	213,c	;volatile
  3379   000D80  0012               	return		;funcret
  3380   000D82                     __end_of_TMR0_Initialize:
  3381                           	callstack 0
  3382                           
  3383 ;; *************** function _TMR0_SetInterruptHandler *****************
  3384 ;; Defined at:
  3385 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  InterruptHan    2   12[COMRAM] PTR FTN()void 
  3388 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;		None
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      void 
  3393 ;; Registers used:
  3394 ;;		wreg, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3400 ;;      Params:         2       0       0       0       0       0       0
  3401 ;;      Locals:         0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0
  3403 ;;      Totals:         2       0       0       0       0       0       0
  3404 ;;Total ram usage:        2 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 4
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_TMR0_Initialize
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text17
  3416   000F04                     __ptext17:
  3417                           	callstack 0
  3418   000F04                     _TMR0_SetInterruptHandler:
  3419                           	callstack 26
  3420   000F04                     
  3421                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3422   000F04  C00D  F04C         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3423   000F08  C00E  F04D         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3424   000F0C  0012               	return		;funcret
  3425   000F0E                     __end_of_TMR0_SetInterruptHandler:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _PIN_MANAGER_Initialize *****************
  3429 ;; Defined at:
  3430 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3444 ;;      Params:         0       0       0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0       0       0
  3446 ;;      Temps:          0       0       0       0       0       0       0
  3447 ;;      Totals:         0       0       0       0       0       0       0
  3448 ;;Total ram usage:        0 bytes
  3449 ;; Hardware stack levels used: 1
  3450 ;; Hardware stack levels required when called: 4
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_SYSTEM_Initialize
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text18
  3459   000D82                     __ptext18:
  3460                           	callstack 0
  3461   000D82                     _PIN_MANAGER_Initialize:
  3462                           	callstack 25
  3463   000D82                     
  3464                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3465   000D82  0E00               	movlw	0
  3466   000D84  6E89               	movwf	137,c	;volatile
  3467                           
  3468                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3469   000D86  0E00               	movlw	0
  3470   000D88  6E8A               	movwf	138,c	;volatile
  3471                           
  3472                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3473   000D8A  0E00               	movlw	0
  3474   000D8C  6E8B               	movwf	139,c	;volatile
  3475   000D8E                     
  3476                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3477   000D8E  6892               	setf	146,c	;volatile
  3478   000D90                     
  3479                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  3480   000D90  6893               	setf	147,c	;volatile
  3481                           
  3482                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  3483   000D92  0EBF               	movlw	191
  3484   000D94  6E94               	movwf	148,c	;volatile
  3485                           
  3486                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3487   000D96  0E3C               	movlw	60
  3488   000D98  010F               	movlb	15	; () banked
  3489   000D9A  6F3A               	movwf	58,b	;volatile
  3490                           
  3491                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3492   000D9C  0E3F               	movlw	63
  3493   000D9E  6F39               	movwf	57,b	;volatile
  3494                           
  3495                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3496   000DA0  0E2F               	movlw	47
  3497   000DA2  6F38               	movwf	56,b	;volatile
  3498                           
  3499                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3500   000DA4  0E00               	movlw	0
  3501   000DA6  6E61               	movwf	97,c	;volatile
  3502   000DA8                     
  3503                           ; BSR set to: 15
  3504                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3505   000DA8  8EF1               	bsf	241,7,c	;volatile
  3506   000DAA                     
  3507                           ; BSR set to: 15
  3508   000DAA  0012               	return		;funcret
  3509   000DAC                     __end_of_PIN_MANAGER_Initialize:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _OSCILLATOR_Initialize *****************
  3513 ;; Defined at:
  3514 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;		None
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3528 ;;      Params:         0       0       0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0
  3531 ;;      Totals:         0       0       0       0       0       0       0
  3532 ;;Total ram usage:        0 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 4
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_SYSTEM_Initialize
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text19
  3543   000E62                     __ptext19:
  3544                           	callstack 0
  3545   000E62                     _OSCILLATOR_Initialize:
  3546                           	callstack 25
  3547   000E62                     
  3548                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3549   000E62  0E70               	movlw	112
  3550   000E64  6ED3               	movwf	211,c	;volatile
  3551                           
  3552                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3553   000E66  0E04               	movlw	4
  3554   000E68  6ED2               	movwf	210,c	;volatile
  3555                           
  3556                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3557   000E6A  0E40               	movlw	64
  3558   000E6C  6E9B               	movwf	155,c	;volatile
  3559   000E6E                     l72:
  3560                           
  3561                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3562   000E6E  AED2               	btfss	4050,7,c	;volatile
  3563   000E70  EF3C  F007         	goto	u981
  3564   000E74  EF3E  F007         	goto	u980
  3565   000E78                     u981:
  3566   000E78  EF37  F007         	goto	l72
  3567   000E7C                     u980:
  3568   000E7C  0012               	return		;funcret
  3569   000E7E                     __end_of_OSCILLATOR_Initialize:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _INTERRUPT_Initialize *****************
  3573 ;; Defined at:
  3574 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		None
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3588 ;;      Params:         0       0       0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0
  3591 ;;      Totals:         0       0       0       0       0       0       0
  3592 ;;Total ram usage:        0 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 4
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_SYSTEM_Initialize
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text20
  3603   000F36                     __ptext20:
  3604                           	callstack 0
  3605   000F36                     _INTERRUPT_Initialize:
  3606                           	callstack 25
  3607   000F36                     
  3608                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3609   000F36  9ED0               	bcf	208,7,c	;volatile
  3610   000F38  0012               	return		;funcret
  3611   000F3A                     __end_of_INTERRUPT_Initialize:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _EUSART1_Initialize *****************
  3615 ;; Defined at:
  3616 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3630 ;;      Params:         0       0       0       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0
  3633 ;;      Totals:         0       0       0       0       0       0       0
  3634 ;;Total ram usage:        0 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 5
  3637 ;; This function calls:
  3638 ;;		_EUSART1_SetErrorHandler
  3639 ;;		_EUSART1_SetFramingErrorHandler
  3640 ;;		_EUSART1_SetOverrunErrorHandler
  3641 ;; This function is called by:
  3642 ;;		_SYSTEM_Initialize
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text21
  3647   000CD6                     __ptext21:
  3648                           	callstack 0
  3649   000CD6                     _EUSART1_Initialize:
  3650                           	callstack 24
  3651   000CD6                     
  3652                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3653   000CD6  0E08               	movlw	8
  3654   000CD8  6EB8               	movwf	184,c	;volatile
  3655                           
  3656                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3657   000CDA  0E90               	movlw	144
  3658   000CDC  6EAB               	movwf	171,c	;volatile
  3659                           
  3660                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3661   000CDE  0E24               	movlw	36
  3662   000CE0  6EAC               	movwf	172,c	;volatile
  3663                           
  3664                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3665   000CE2  0E82               	movlw	130
  3666   000CE4  6EAF               	movwf	175,c	;volatile
  3667                           
  3668                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3669   000CE6  0E06               	movlw	6
  3670   000CE8  6EB0               	movwf	176,c	;volatile
  3671   000CEA                     
  3672                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3673   000CEA  0E00               	movlw	0
  3674   000CEC  6E0D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3675   000CEE  0E00               	movlw	0
  3676   000CF0  6E0E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3677   000CF2  EC8C  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3678   000CF6                     
  3679                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3680   000CF6  0E00               	movlw	0
  3681   000CF8  6E0D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3682   000CFA  0E00               	movlw	0
  3683   000CFC  6E0E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3684   000CFE  EC87  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3685   000D02                     
  3686                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3687   000D02  0E00               	movlw	0
  3688   000D04  6E0D               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3689   000D06  0E00               	movlw	0
  3690   000D08  6E0E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3691   000D0A  EC91  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  3692   000D0E                     
  3693                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3694   000D0E  0E00               	movlw	0
  3695   000D10  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  3696   000D12  0012               	return		;funcret
  3697   000D14                     __end_of_EUSART1_Initialize:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3701 ;; Defined at:
  3702 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3705 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3717 ;;      Params:         2       0       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0
  3720 ;;      Totals:         2       0       0       0       0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 4
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_EUSART1_Initialize
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text22
  3732   000F0E                     __ptext22:
  3733                           	callstack 0
  3734   000F0E                     _EUSART1_SetOverrunErrorHandler:
  3735                           	callstack 24
  3736   000F0E                     
  3737                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3738   000F0E  C00D  F09E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3739   000F12  C00E  F09F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3740   000F16  0012               	return		;funcret
  3741   000F18                     __end_of_EUSART1_SetOverrunErrorHandler:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3745 ;; Defined at:
  3746 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3749 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;		None
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, status,0
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3761 ;;      Params:         2       0       0       0       0       0       0
  3762 ;;      Locals:         0       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0
  3764 ;;      Totals:         2       0       0       0       0       0       0
  3765 ;;Total ram usage:        2 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 4
  3768 ;; This function calls:
  3769 ;;		Nothing
  3770 ;; This function is called by:
  3771 ;;		_EUSART1_Initialize
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text23
  3776   000F18                     __ptext23:
  3777                           	callstack 0
  3778   000F18                     _EUSART1_SetFramingErrorHandler:
  3779                           	callstack 24
  3780   000F18                     
  3781                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3782   000F18  C00D  F0A0         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3783   000F1C  C00E  F0A1         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3784   000F20  0012               	return		;funcret
  3785   000F22                     __end_of_EUSART1_SetFramingErrorHandler:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _EUSART1_SetErrorHandler *****************
  3789 ;; Defined at:
  3790 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3793 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3805 ;;      Params:         2       0       0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0
  3808 ;;      Totals:         2       0       0       0       0       0       0
  3809 ;;Total ram usage:        2 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 4
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_EUSART1_Initialize
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text24
  3820   000F22                     __ptext24:
  3821                           	callstack 0
  3822   000F22                     _EUSART1_SetErrorHandler:
  3823                           	callstack 24
  3824   000F22                     
  3825                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3826   000F22  C00D  F09C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3827   000F26  C00E  F09D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3828   000F2A  0012               	return		;funcret
  3829   000F2C                     __end_of_EUSART1_SetErrorHandler:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _ADC_Initialize *****************
  3833 ;; Defined at:
  3834 ;;		line 62 in file "mcc_generated_files/adc.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3848 ;;      Params:         0       0       0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0       0       0
  3851 ;;      Totals:         0       0       0       0       0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 4
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_SYSTEM_Initialize
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           	psect	text25
  3863   000EC6                     __ptext25:
  3864                           	callstack 0
  3865   000EC6                     _ADC_Initialize:
  3866                           	callstack 25
  3867   000EC6                     
  3868                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  3869   000EC6  0E00               	movlw	0
  3870   000EC8  6EC1               	movwf	193,c	;volatile
  3871                           
  3872                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  3873   000ECA  0E26               	movlw	38
  3874   000ECC  6EC0               	movwf	192,c	;volatile
  3875                           
  3876                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  3877   000ECE  0E00               	movlw	0
  3878   000ED0  6EC3               	movwf	195,c	;volatile
  3879                           
  3880                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  3881   000ED2  0E00               	movlw	0
  3882   000ED4  6EC4               	movwf	196,c	;volatile
  3883                           
  3884                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  3885   000ED6  0E11               	movlw	17
  3886   000ED8  6EC2               	movwf	194,c	;volatile
  3887   000EDA  0012               	return		;funcret
  3888   000EDC                     __end_of_ADC_Initialize:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _EUSART1_is_rx_ready *****************
  3892 ;; Defined at:
  3893 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      _Bool 
  3900 ;; Registers used:
  3901 ;;		wreg
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3907 ;;      Params:         0       0       0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 4
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text26
  3922   000EDC                     __ptext26:
  3923                           	callstack 0
  3924   000EDC                     _EUSART1_is_rx_ready:
  3925                           	callstack 26
  3926   000EDC                     
  3927                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  3928   000EDC  BA9E               	btfsc	158,5,c	;volatile
  3929   000EDE  EF73  F007         	goto	u1021
  3930   000EE2  EF76  F007         	goto	u1020
  3931   000EE6                     u1021:
  3932   000EE6  0E01               	movlw	1
  3933   000EE8  EF77  F007         	goto	u1026
  3934   000EEC                     u1020:
  3935   000EEC  0E00               	movlw	0
  3936   000EEE                     u1026:
  3937   000EEE  0012               	return		;funcret
  3938   000EF0                     __end_of_EUSART1_is_rx_ready:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _EUSART1_Read *****************
  3942 ;; Defined at:
  3943 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      unsigned char 
  3950 ;; Registers used:
  3951 ;;		wreg, status,2
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3957 ;;      Params:         0       0       0       0       0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 4
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;;		_getch
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text27
  3973   000DD4                     __ptext27:
  3974                           	callstack 0
  3975   000DD4                     _EUSART1_Read:
  3976                           	callstack 26
  3977   000DD4                     l175:
  3978                           
  3979                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  3980   000DD4  AA9E               	btfss	158,5,c	;volatile
  3981   000DD6  EFEF  F006         	goto	u1031
  3982   000DDA  EFF1  F006         	goto	u1030
  3983   000DDE                     u1031:
  3984   000DDE  EFEA  F006         	goto	l175
  3985   000DE2                     u1030:
  3986   000DE2                     
  3987                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  3988   000DE2  0E00               	movlw	0
  3989   000DE4  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  3990   000DE6                     
  3991                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  3992   000DE6  A2AB               	btfss	171,1,c	;volatile
  3993   000DE8  EFF8  F006         	goto	u1041
  3994   000DEC  EFFA  F006         	goto	u1040
  3995   000DF0                     u1041:
  3996   000DF0  EFFC  F006         	goto	l2009
  3997   000DF4                     u1040:
  3998   000DF4                     
  3999                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4000   000DF4  98AB               	bcf	171,4,c	;volatile
  4001                           
  4002                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4003   000DF6  88AB               	bsf	171,4,c	;volatile
  4004   000DF8                     l2009:
  4005                           
  4006                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4007   000DF8  50AE               	movf	174,w,c	;volatile
  4008   000DFA  0012               	return		;funcret
  4009   000DFC                     __end_of_EUSART1_Read:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function _ADC_SelectChannel *****************
  4013 ;; Defined at:
  4014 ;;		line 83 in file "mcc_generated_files/adc.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  channel         1    wreg     enum E5749
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  channel         1   13[COMRAM] enum E5749
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  1    wreg      void 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4028 ;;      Params:         0       0       0       0       0       0       0
  4029 ;;      Locals:         1       0       0       0       0       0       0
  4030 ;;      Temps:          1       0       0       0       0       0       0
  4031 ;;      Totals:         2       0       0       0       0       0       0
  4032 ;;Total ram usage:        2 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 4
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_main
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text28
  4043   000E98                     __ptext28:
  4044                           	callstack 0
  4045   000E98                     _ADC_SelectChannel:
  4046                           	callstack 26
  4047                           
  4048                           ;incstack = 0
  4049                           ;ADC_SelectChannel@channel stored from wreg
  4050   000E98  6E0E               	movwf	ADC_SelectChannel@channel^0,c
  4051   000E9A                     
  4052                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  4053   000E9A  C00E  F00D         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  4054   000E9E  460D               	rlncf	??_ADC_SelectChannel^0,f,c
  4055   000EA0  460D               	rlncf	??_ADC_SelectChannel^0,f,c
  4056   000EA2  50C2               	movf	194,w,c	;volatile
  4057   000EA4  180D               	xorwf	??_ADC_SelectChannel^0,w,c
  4058   000EA6  0B83               	andlw	-125
  4059   000EA8  180D               	xorwf	??_ADC_SelectChannel^0,w,c
  4060   000EAA  6EC2               	movwf	194,c	;volatile
  4061   000EAC                     
  4062                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  4063   000EAC  80C2               	bsf	194,0,c	;volatile
  4064   000EAE  0012               	return		;funcret
  4065   000EB0                     __end_of_ADC_SelectChannel:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _INTERRUPT_InterruptManager *****************
  4069 ;; Defined at:
  4070 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4084 ;;      Params:         0       0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0
  4086 ;;      Temps:          2       0       0       0       0       0       0
  4087 ;;      Totals:         2       0       0       0       0       0       0
  4088 ;;Total ram usage:        2 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 3
  4091 ;; This function calls:
  4092 ;;		_TMR0_ISR
  4093 ;; This function is called by:
  4094 ;;		Interrupt level 2
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	intcode
  4099   000008                     __pintcode:
  4100                           	callstack 0
  4101   000008                     _INTERRUPT_InterruptManager:
  4102                           	callstack 18
  4103                           
  4104                           ;incstack = 0
  4105   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4106   00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManager
  4107   00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4108   000012                     
  4109                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4110   000012  AAF2               	btfss	242,5,c	;volatile
  4111   000014  EF0E  F000         	goto	i2u105_41
  4112   000018  EF10  F000         	goto	i2u105_40
  4113   00001C                     i2u105_41:
  4114   00001C  EF19  F000         	goto	i2l16
  4115   000020                     i2u105_40:
  4116   000020  A4F2               	btfss	242,2,c	;volatile
  4117   000022  EF15  F000         	goto	i2u106_41
  4118   000026  EF17  F000         	goto	i2u106_40
  4119   00002A                     i2u106_41:
  4120   00002A  EF19  F000         	goto	i2l16
  4121   00002E                     i2u106_40:
  4122   00002E                     
  4123                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4124   00002E  EC8A  F006         	call	_TMR0_ISR	;wreg free
  4125   000032                     i2l16:
  4126   000032  C00C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4127   000036  C00B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4128   00003A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4129   00003C  0011               	retfie		f
  4130   00003E                     __end_of_INTERRUPT_InterruptManager:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function _TMR0_ISR *****************
  4134 ;; Defined at:
  4135 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4149 ;;      Params:         0       0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 2
  4156 ;; This function calls:
  4157 ;;		Absolute function
  4158 ;;		_TMR0_DefaultInterruptHandler
  4159 ;;		_myTMR0ISR
  4160 ;; This function is called by:
  4161 ;;		_INTERRUPT_InterruptManager
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text30
  4166   000D14                     __ptext30:
  4167                           	callstack 0
  4168   000D14                     _TMR0_ISR:
  4169                           	callstack 18
  4170   000D14                     
  4171                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4172   000D14  94F2               	bcf	242,2,c	;volatile
  4173   000D16                     
  4174                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4175   000D16  504B               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4176   000D18  6ED7               	movwf	215,c	;volatile
  4177   000D1A                     
  4178                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4179   000D1A  C04A  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4180   000D1E                     
  4181                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4182   000D1E  504C               	movf	_TMR0_InterruptHandler^0,w,c
  4183   000D20  104D               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  4184   000D22  B4D8               	btfsc	status,2,c
  4185   000D24  EF96  F006         	goto	i2u100_41
  4186   000D28  EF98  F006         	goto	i2u100_40
  4187   000D2C                     i2u100_41:
  4188   000D2C  EFA5  F006         	goto	i2l249
  4189   000D30                     i2u100_40:
  4190   000D30                     
  4191                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4192   000D30  D802               	call	i2u101_48
  4193   000D32  EFA5  F006         	goto	i2u101_49
  4194   000D36                     i2u101_48:
  4195   000D36  0005               	push	
  4196   000D38  6EFA               	movwf	pclath,c
  4197   000D3A  504C               	movf	_TMR0_InterruptHandler^0,w,c
  4198   000D3C  6EFD               	movwf	tosl,c
  4199   000D3E  504D               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  4200   000D40  6EFE               	movwf	tosh,c
  4201   000D42  50F8               	movf	tblptru,w,c
  4202   000D44  6EFF               	movwf	tosu,c
  4203   000D46  50FA               	movf	pclath,w,c
  4204   000D48  0012               	return		;indir
  4205   000D4A                     i2u101_49:
  4206   000D4A                     i2l249:
  4207   000D4A  0012               	return		;funcret
  4208   000D4C                     __end_of_TMR0_ISR:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4212 ;; Defined at:
  4213 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;		None
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;		None
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      void 
  4220 ;; Registers used:
  4221 ;;		None
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4227 ;;      Params:         0       0       0       0       0       0       0
  4228 ;;      Locals:         0       0       0       0       0       0       0
  4229 ;;      Temps:          0       0       0       0       0       0       0
  4230 ;;      Totals:         0       0       0       0       0       0       0
  4231 ;;Total ram usage:        0 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_TMR0_Initialize
  4237 ;;		_TMR0_ISR
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text31
  4242   000F3A                     __ptext31:
  4243                           	callstack 0
  4244   000F3A                     _TMR0_DefaultInterruptHandler:
  4245                           	callstack 19
  4246   000F3A  0012               	return		;funcret
  4247   000F3C                     __end_of_TMR0_DefaultInterruptHandler:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _myTMR0ISR *****************
  4251 ;; Defined at:
  4252 ;;		line 148 in file "main.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      void 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4266 ;;      Params:         0       0       0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 1
  4273 ;; This function calls:
  4274 ;;		_TMR0_ReadTimer
  4275 ;;		i2_TMR0_WriteTimer
  4276 ;; This function is called by:
  4277 ;;		_main
  4278 ;;		_TMR0_ISR
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text32
  4283   000E22                     __ptext32:
  4284                           	callstack 0
  4285   000E22                     _myTMR0ISR:
  4286                           	callstack 18
  4287   000E22  8C89               	bsf	137,6,c	;volatile
  4288   000E24  82C2               	bsf	194,1,c	;volatile
  4289   000E26  0E01               	movlw	1
  4290   000E28  0100               	movlb	0	; () banked
  4291   000E2A  6FA2               	movwf	_NEW_SAMPLE& (0+255),b
  4292   000E2C                     
  4293                           ; BSR set to: 0
  4294   000E2C  EC22  F007         	call	_TMR0_ReadTimer	;wreg free
  4295   000E30  0EC0               	movlw	192
  4296   000E32  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  4297   000E34  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  4298   000E36  0EF9               	movlw	249
  4299   000E38  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  4300   000E3A  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  4301   000E3C  EC96  F007         	call	i2_TMR0_WriteTimer	;wreg free
  4302   000E40  9C89               	bcf	137,6,c	;volatile
  4303   000E42  0012               	return		;funcret
  4304   000E44                     __end_of_myTMR0ISR:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function i2_TMR0_WriteTimer *****************
  4308 ;; Defined at:
  4309 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  timerVal        2    8[COMRAM] unsigned short 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         2       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0
  4326 ;;      Totals:         2       0       0       0       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_myTMR0ISR
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text33
  4337   000F2C                     __ptext33:
  4338                           	callstack 0
  4339   000F2C                     i2_TMR0_WriteTimer:
  4340                           	callstack 18
  4341   000F2C                     
  4342                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4343   000F2C  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  4344   000F2E  6ED7               	movwf	215,c	;volatile
  4345   000F30                     
  4346                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4347   000F30  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  4348   000F34  0012               	return		;funcret
  4349   000F36                     __end_ofi2_TMR0_WriteTimer:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _TMR0_ReadTimer *****************
  4353 ;; Defined at:
  4354 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  readVal         2    4[COMRAM] unsigned short 
  4359 ;;  readValHigh     1    7[COMRAM] unsigned char 
  4360 ;;  readValLow      1    6[COMRAM] unsigned char 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  2    0[COMRAM] unsigned short 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4370 ;;      Params:         2       0       0       0       0       0       0
  4371 ;;      Locals:         4       0       0       0       0       0       0
  4372 ;;      Temps:          2       0       0       0       0       0       0
  4373 ;;      Totals:         8       0       0       0       0       0       0
  4374 ;;Total ram usage:        8 bytes
  4375 ;; Hardware stack levels used: 1
  4376 ;; This function calls:
  4377 ;;		Nothing
  4378 ;; This function is called by:
  4379 ;;		_myTMR0ISR
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text34
  4384   000E44                     __ptext34:
  4385                           	callstack 0
  4386   000E44                     _TMR0_ReadTimer:
  4387                           	callstack 18
  4388   000E44                     
  4389                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  4390   000E44  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  4391                           
  4392                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  4393   000E48  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  4394   000E4C                     
  4395                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  4396   000E4C  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  4397   000E4E  6E03               	movwf	??_TMR0_ReadTimer^0,c
  4398   000E50  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  4399   000E52  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  4400   000E54  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  4401   000E58                     
  4402                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  4403   000E58  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  4404   000E5C  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  4405   000E60  0012               	return		;funcret
  4406   000E62                     __end_of_TMR0_ReadTimer:
  4407                           	callstack 0
  4408                           
  4409                           	psect	text35
  4410   000000                     __ptext35:
  4411                           	callstack 0
  4412   000000                     
  4413                           	psect	rparam
  4414   000000                     
  4415                           	psect	temp
  4416   000052                     btemp:
  4417                           	callstack 0
  4418   000052                     	ds	1
  4419   000000                     int$flags	set	btemp
  4420   000000                     wtemp8	set	btemp+1
  4421   000000                     ttemp5	set	btemp+1
  4422   000000                     ttemp6	set	btemp+4
  4423   000000                     ttemp7	set	btemp+8
  4424                           
  4425                           	psect	idloc
  4426                           
  4427                           ;Config register IDLOC0 @ 0x200000
  4428                           ;	unspecified, using default values
  4429   200000                     	org	2097152
  4430   200000  FF                 	db	255
  4431                           
  4432                           ;Config register IDLOC1 @ 0x200001
  4433                           ;	unspecified, using default values
  4434   200001                     	org	2097153
  4435   200001  FF                 	db	255
  4436                           
  4437                           ;Config register IDLOC2 @ 0x200002
  4438                           ;	unspecified, using default values
  4439   200002                     	org	2097154
  4440   200002  FF                 	db	255
  4441                           
  4442                           ;Config register IDLOC3 @ 0x200003
  4443                           ;	unspecified, using default values
  4444   200003                     	org	2097155
  4445   200003  FF                 	db	255
  4446                           
  4447                           ;Config register IDLOC4 @ 0x200004
  4448                           ;	unspecified, using default values
  4449   200004                     	org	2097156
  4450   200004  FF                 	db	255
  4451                           
  4452                           ;Config register IDLOC5 @ 0x200005
  4453                           ;	unspecified, using default values
  4454   200005                     	org	2097157
  4455   200005  FF                 	db	255
  4456                           
  4457                           ;Config register IDLOC6 @ 0x200006
  4458                           ;	unspecified, using default values
  4459   200006                     	org	2097158
  4460   200006  FF                 	db	255
  4461                           
  4462                           ;Config register IDLOC7 @ 0x200007
  4463                           ;	unspecified, using default values
  4464   200007                     	org	2097159
  4465   200007  FF                 	db	255
  4466                           
  4467                           	psect	config
  4468                           
  4469                           ; Padding undefined space
  4470   300000                     	org	3145728
  4471   300000  FF                 	db	255
  4472                           
  4473                           ;Config register CONFIG1H @ 0x300001
  4474                           ;	Oscillator Selection bits
  4475                           ;	FOSC = INTIO67, Internal oscillator block
  4476                           ;	4X PLL Enable
  4477                           ;	PLLCFG = OFF, Oscillator used directly
  4478                           ;	Primary clock enable bit
  4479                           ;	PRICLKEN = ON, Primary clock enabled
  4480                           ;	Fail-Safe Clock Monitor Enable bit
  4481                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4482                           ;	Internal/External Oscillator Switchover bit
  4483                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4484   300001                     	org	3145729
  4485   300001  28                 	db	40
  4486                           
  4487                           ;Config register CONFIG2L @ 0x300002
  4488                           ;	Power-up Timer Enable bit
  4489                           ;	PWRTEN = OFF, Power up timer disabled
  4490                           ;	Brown-out Reset Enable bits
  4491                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4492                           ;	Brown Out Reset Voltage bits
  4493                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4494   300002                     	org	3145730
  4495   300002  1F                 	db	31
  4496                           
  4497                           ;Config register CONFIG2H @ 0x300003
  4498                           ;	Watchdog Timer Enable bits
  4499                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4500                           ;	Watchdog Timer Postscale Select bits
  4501                           ;	WDTPS = 32768, 1:32768
  4502   300003                     	org	3145731
  4503   300003  3C                 	db	60
  4504                           
  4505                           ; Padding undefined space
  4506   300004                     	org	3145732
  4507   300004  FF                 	db	255
  4508                           
  4509                           ;Config register CONFIG3H @ 0x300005
  4510                           ;	CCP2 MUX bit
  4511                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4512                           ;	PORTB A/D Enable bit
  4513                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4514                           ;	P3A/CCP3 Mux bit
  4515                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4516                           ;	HFINTOSC Fast Start-up
  4517                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4518                           ;	Timer3 Clock input mux bit
  4519                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4520                           ;	ECCP2 B output mux bit
  4521                           ;	P2BMX = PORTB5, P2B is on RB5
  4522                           ;	MCLR Pin Enable bit
  4523                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4524   300005                     	org	3145733
  4525   300005  BF                 	db	191
  4526                           
  4527                           ;Config register CONFIG4L @ 0x300006
  4528                           ;	Stack Full/Underflow Reset Enable bit
  4529                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4530                           ;	Single-Supply ICSP Enable bit
  4531                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4532                           ;	Extended Instruction Set Enable bit
  4533                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4534                           ;	Background Debug
  4535                           ;	DEBUG = OFF, Disabled
  4536   300006                     	org	3145734
  4537   300006  85                 	db	133
  4538                           
  4539                           ; Padding undefined space
  4540   300007                     	org	3145735
  4541   300007  FF                 	db	255
  4542                           
  4543                           ;Config register CONFIG5L @ 0x300008
  4544                           ;	Code Protection Block 0
  4545                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4546                           ;	Code Protection Block 1
  4547                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4548                           ;	Code Protection Block 2
  4549                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4550                           ;	Code Protection Block 3
  4551                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4552   300008                     	org	3145736
  4553   300008  0F                 	db	15
  4554                           
  4555                           ;Config register CONFIG5H @ 0x300009
  4556                           ;	Boot Block Code Protection bit
  4557                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4558                           ;	Data EEPROM Code Protection bit
  4559                           ;	CPD = OFF, Data EEPROM not code-protected
  4560   300009                     	org	3145737
  4561   300009  C0                 	db	192
  4562                           
  4563                           ;Config register CONFIG6L @ 0x30000A
  4564                           ;	Write Protection Block 0
  4565                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4566                           ;	Write Protection Block 1
  4567                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4568                           ;	Write Protection Block 2
  4569                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4570                           ;	Write Protection Block 3
  4571                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4572   30000A                     	org	3145738
  4573   30000A  0F                 	db	15
  4574                           
  4575                           ;Config register CONFIG6H @ 0x30000B
  4576                           ;	Configuration Register Write Protection bit
  4577                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4578                           ;	Boot Block Write Protection bit
  4579                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4580                           ;	Data EEPROM Write Protection bit
  4581                           ;	WRTD = OFF, Data EEPROM not write-protected
  4582   30000B                     	org	3145739
  4583   30000B  E0                 	db	224
  4584                           
  4585                           ;Config register CONFIG7L @ 0x30000C
  4586                           ;	Table Read Protection Block 0
  4587                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4588                           ;	Table Read Protection Block 1
  4589                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4590                           ;	Table Read Protection Block 2
  4591                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4592                           ;	Table Read Protection Block 3
  4593                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4594   30000C                     	org	3145740
  4595   30000C  0F                 	db	15
  4596                           
  4597                           ;Config register CONFIG7H @ 0x30000D
  4598                           ;	Boot Block Table Read Protection bit
  4599                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4600   30000D                     	org	3145741
  4601   30000D  40                 	db	64
  4602                           tosu	equ	0xFFF
  4603                           tosh	equ	0xFFE
  4604                           tosl	equ	0xFFD
  4605                           stkptr	equ	0xFFC
  4606                           pclatu	equ	0xFFB
  4607                           pclath	equ	0xFFA
  4608                           pcl	equ	0xFF9
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           prodh	equ	0xFF4
  4614                           prodl	equ	0xFF3
  4615                           indf0	equ	0xFEF
  4616                           postinc0	equ	0xFEE
  4617                           postdec0	equ	0xFED
  4618                           preinc0	equ	0xFEC
  4619                           plusw0	equ	0xFEB
  4620                           fsr0h	equ	0xFEA
  4621                           fsr0l	equ	0xFE9
  4622                           wreg	equ	0xFE8
  4623                           indf1	equ	0xFE7
  4624                           postinc1	equ	0xFE6
  4625                           postdec1	equ	0xFE5
  4626                           preinc1	equ	0xFE4
  4627                           plusw1	equ	0xFE3
  4628                           fsr1h	equ	0xFE2
  4629                           fsr1l	equ	0xFE1
  4630                           bsr	equ	0xFE0
  4631                           indf2	equ	0xFDF
  4632                           postinc2	equ	0xFDE
  4633                           postdec2	equ	0xFDD
  4634                           preinc2	equ	0xFDC
  4635                           plusw2	equ	0xFDB
  4636                           fsr2h	equ	0xFDA
  4637                           fsr2l	equ	0xFD9
  4638                           status	equ	0xFD8

Data Sizes:
    Strings     325
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      81
    BANK0           160     60      99
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1358$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1358$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_22(CODE[3]), STR_21(CODE[17]), STR_20(CODE[31]), STR_19(CODE[3]), 
		 -> STR_18(CODE[4]), STR_17(CODE[51]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[5]), STR_13(CODE[33]), STR_12(CODE[37]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_22(CODE[3]), STR_21(CODE[17]), STR_20(CODE[31]), STR_19(CODE[3]), 
		 -> STR_18(CODE[4]), STR_17(CODE[51]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[5]), STR_13(CODE[33]), STR_12(CODE[37]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_22(CODE[3]), STR_21(CODE[17]), STR_20(CODE[31]), STR_19(CODE[3]), 
		 -> STR_18(CODE[4]), STR_17(CODE[51]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[5]), STR_13(CODE[33]), STR_12(CODE[37]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1398$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_22(CODE[3]), STR_21(CODE[17]), STR_20(CODE[31]), STR_19(CODE[3]), 
		 -> STR_18(CODE[4]), STR_17(CODE[51]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[5]), STR_13(CODE[33]), STR_12(CODE[37]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[33]), STR_5(CODE[5]), STR_4(CODE[3]), STR_3(CODE[9]), 
		 -> STR_2(CODE[25]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   13015
                                             40 BANK0     20    20      0
                  _ADC_SelectChannel
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   11618
                                             34 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9551
                                             67 COMRAM     2     2      0
                                             28 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    9081
                                             59 COMRAM     8     2      6
                                             17 BANK0     11    11      0
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5460
                                             41 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3191
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1567
                                             23 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1186
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      62
                                             13 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      31
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             14 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     139
                                             10 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     139
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           0     0      0     139
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (13) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_SelectChannel
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     3C      63       4       61.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      51       1       86.2%
BITBIGSFRllhh       27      0       0      26        0.0%
BITBIGSFRllhl       26      0       0      27        0.0%
BITBIGSFRhlhhh      19      0       0      16        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRlhhhll      C      0       0      22        0.0%
BITBIGSFRlhhhhh      B      0       0      19        0.0%
BITBIGSFRlhhhll      7      0       0      21        0.0%
BITBIGSFRlhhhlh      7      0       0      20        0.0%
BITBIGSFRlhhl        6      0       0      24        0.0%
BITBIGSFRlhl         6      0       0      25        0.0%
BITBIGSFRlhhhll      2      0       0      23        0.0%
BITBIGSFRhlhl        1      0       0      17        0.0%
BITBIGSFRhll         1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B4      28        0.0%
DATA                 0      0      B4      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 16:49:20 2023

                                             l9 0F38                                              l43 0DAA  
                                            l72 0E6E                                              l75 0E7C  
                                            l69 0E96                                              l94 0EDA  
                                            l97 0EAE                                 _timer0ReloadVal 004A  
                                           l203 0F20                                             l206 0F16  
                                           l230 0D80                                             l209 0F2A  
                                           l242 0F02                                             l314 0252  
                                           l252 0F0C                                             l166 0EEE  
                                           l158 0D12                                             l182 0EB2  
                                           l175 0DD4                                             l191 0EF8  
                                           l185 0EC4                                             l179 0DFA  
                                           l460 0A56                                             l447 08F2  
                                           l288 0054                                             l299 018A  
                                           u980 0E7C                                             u981 0E78  
                                           _abs 0C96                                             _pad 0B88  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1011 0DD2  
                                          l1103 0B86                                            l1111 0C94  
                                          l2001 0DD4                                            l1033 0BAA  
                                          l2003 0DE2                                            l1051 0AF0  
                                          l1043 0A82                                            ?_abs 001F  
                                          l2005 0DE6                                            l2013 0EFA  
                                          l1037 0C00                                            l1070 05B0  
                                          l2007 0DF4                                            l2015 0EFE  
                                          l1047 0A9C                                            l1056 03BE  
                                          l2009 0DF8                                            l2201 079E  
                                          l1058 03C6                                            l2211 07E0  
                                          l2203 07A2                                            l1091 0CD4  
                                          l1059 040C                                            l1075 076A  
                                          l1084 0C50                                            l2301 0A94  
                                          l2221 083A                                            l2213 07FE  
                                          l2205 07B0                                            l2303 0AA8  
                                          l2223 0868                                            l2215 0806  
                                          l2231 08A2                                            l2207 07D0  
                                          l2311 0332                                            l1088 0CCC  
                                          l2305 0ABC                                            l2233 08B2  
                                          l2225 0888                                            l2217 081A  
                                          l2209 07D4                                            l2241 08F8  
                                          l2321 03B2                                            l2313 0352  
                                          l2401 0C02                                            l2171 0EF2  
                                          l2307 0AC0                                            l2235 08D2  
                                          l2227 088A                                            l2219 0828  
                                          l2251 0958                                            l2243 0906  
                                          l2331 0400                                            l2323 03CE  
                                          l2315 0368                                            l2403 0C0E  
                                          l2411 0DAC                                            l2181 0B3E  
                                          l2173 0AF2                                            l2309 0ADE  
                                          l2229 089C                                            l2261 09CE  
                                          l2253 0976                                            l2245 0926  
                                          l2341 04A4                                            l2333 0408  
                                          l2325 03DE                                            l2317 0378  
                                          l2405 0C2A                                            l2413 0DB6  
                                          l2501 0242                                            l2421 0052  
                                          l2167 0EB2                                            l2183 0B74  
                                          l2175 0B04                                            l2271 0A36  
                                          l2263 09EE                                            l2255 097E  
                                          l2247 092A                                            l2239 08F4  
                                          l2191 0C70                                            l2351 0550  
                                          l2343 04AC                                            l2335 0414  
                                          l2327 03E4                                            l2319 0398  
                                          l2407 0C46                                            l2503 0252  
                                          l2511 0288                                            l2431 0080  
                                          l2423 0062                                            l2169 0EC0  
                                          l2177 0B16                                            l2265 0A00  
                                          l2257 0992                                            l2249 0938  
                                          l2193 0C74                                            l2281 0BB6  
                                          l2353 056A                                            l2345 04B2  
                                          l2337 041C                                            l2329 03F4  
                                          l2505 025A                                            l2513 031C  
                                          l2441 00C6                                            l2433 008E  
                                          l2425 006E                                            l2417 0042  
                                          l2179 0B20                                            l2195 076C  
                                          l2259 09A0                                            l2267 0A06  
                                          l2291 0CB0                                            l2187 0C52  
                                          l2283 0BCA                                            l2275 0B88  
                                          l2355 057A                                            l2339 0422  
                                          l2347 0516                                            l2371 05F4  
                                          l2363 05B2                                            l2507 0272  
                                          l2443 00DC                                            l2435 009C  
                                          l2427 0070                                            l2419 0046  
                                          l2293 0A58                                            l2197 0770  
                                          l2269 0A16                                            l2189 0C5E  
                                          l2285 0BCE                                            l2277 0B96  
                                          l2357 0580                                            l2349 0532  
                                          l2381 0670                                            l2373 0618  
                                          l2365 05D6                                            l2453 016A  
                                          l2445 0156                                            l2437 00AA  
                                          l2429 0072                                            l2295 0A6A  
                                          l2199 077E                                            l2287 0BEC  
                                          l2279 0BA2                                            l2359 0590  
                                          l2391 0730                                            l2383 068C  
                                          l2375 064C                                            l2367 05E4  
                                          l2551 029E                                            l2471 01B8  
                                          l2455 0176                                            l2447 0166  
                                          l2439 00BE                                            l1921 0D8E  
                                          l2297 0A76                                            l2289 0C96  
                                          l2385 06A8                                            l2369 05F0  
                                          l2481 01D0                                            l2465 0194  
                                          l2457 017A                                            l1923 0D90  
                                          l1931 0D4E                                            l2387 0700  
                                          l2379 0660                                            l2395 0742  
                                          l2483 01E0                                            l2467 01A0  
                                          l2459 0190                                            l1861 0F0E  
                                          l1917 0F36                                            l1925 0DA8  
                                          l1941 0D7C                                            l1933 0D56  
                                          l2485 01E2                                            l2477 01BC  
                                          l2469 01A4                                            l1943 0EC6  
                                          l1863 0F22                                            l1951 0D02  
                                          l1927 0E62                                            l1919 0D82  
                                          l1935 0D6C                                            l2495 020C  
                                          l2487 01F2                                            l2479 01CC  
                                          l1953 0D0E                                            l1945 0CD6  
                                          l1865 0F04                                            l1937 0D6E  
                                          l1929 0D4C                                            l2497 022E  
                                          l2489 0206                                            l1859 0F18  
                                          l1947 0CEA                                            l1939 0D70  
                                          l2499 0232                                            l1949 0CF6  
                                          l1981 0E7E                                            ?_pad 001F  
                                          l1991 0E92                                            l1983 0E82  
                                          l1993 0E9A                                            l1985 0E86  
                                          l1995 0EAC                                            l1987 0E8A  
                                          l1997 0EDC                                            l1989 0E8E  
                                          STR_1 7FD7                                            STR_2 7F71  
                                          STR_3 7FE2                                            STR_4 7FFB  
                                          STR_5 7FF2                                            STR_6 7F11  
                                          STR_7 7FC8                                            STR_8 7FEB  
                                          STR_9 7FA2                                            u1020 0EEC  
                                          u1021 0EE6                                            u1030 0DE2  
                                          u1031 0DDE                                            u1040 0DF4  
                                          u1200 077E                                            u1041 0DF0  
                                          u1201 077A                                            u1026 0EEE  
                                          u1210 07B0                                            u1211 07AC  
                                          u1140 0EC0                                            u1300 09A0  
                                          u1141 0EBC                                            u1221 07DA  
                                          u1301 099C                                            u1150 0B04  
                                          u1230 07FE                                            u1310 09CE  
                                          u1151 0B00                                            u1231 07FA  
                                          u1311 09CA                                            u1160 0B16  
                                          u1240 0828                                            u1320 0A16  
                                          u1400 0366                                            u1161 0B12  
                                          u1241 0824                                            u1321 0A12  
                                          u1170 0B3E                                            u1250 0868  
                                          u1330 0B96                                            u1410 0378  
                                          u1171 0B3A                                            u1251 0864  
                                          u1331 0B92                                            u1411 0374  
                                          u1180 0B74                                            u1260 08B2  
                                          u1340 0BEC                                            u1420 03B2  
                                          u1500 0618                                            u1181 0B70  
                                          u1261 08AE                                            u1341 0BE8  
                                          u1421 03AE                                            u1501 0614  
                                          _LATA 000F89                                            u1270 0906  
                                          u1350 0CB0                                            u1190 0C94  
                                          u1430 03DE                                            u1510 068C  
                                          _LATB 000F8A                                            u1271 0902  
                                          u1351 0CAC                                            u1191 0C90  
                                          u1431 03DA                                            u1511 0688  
                                          _LATC 000F8B                                            u1360 0A6A  
                                          u1280 0938                                            u1440 03F4  
                                          u1520 06A8                                            u1600 0242  
                                          u1361 0A66                                            u1281 0934  
                                          u1441 03F0                                            u1521 06A4  
                                          u1601 023E                                            u1370 0A90  
                                          u1290 0976                                            u1450 0532  
                                          u1530 0C46                                            u1371 0A8C  
                                          u1291 0972                                            u1451 052E  
                                          u1531 0C42                                            u1380 0ADE  
                                          u1460 0550                                            u1540 0062  
                                          u1381 0ADA                                            u1461 054C  
                                          u1541 005E                                            u1470 056A  
                                          u1390 0364                                            u1550 00BE  
                                          u1471 0566                                            u1391 035E  
                                          u1551 00BA                                            u1480 057A  
                                          u1560 018A                                            u1481 0576  
                                          u1561 0186                                            u1490 05D6  
                                          u1570 01B4                                            u1491 05D2  
                                          u1571 01B0                                            u1580 01CC  
                                          u1581 01C8                                            u1590 01F2  
                                          u1591 01EE                                            i2l16 0032  
                                          _WPUB 000F61                                   _EUSART1_Write 0EB0  
                                          abs@a 001F                                            _dbuf 00A3  
                                          _ctoa 0A58                                            _main 0042  
                                          _dtoa 0332                                   ?_EUSART1_Read 0001  
                                          _prec 0048                                            pad@i 0026  
                                          pad@p 0023                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0028  
                                          fsr2l 000FD9                                            btemp 0052  
                                          start 003E                                    ___param_bank 000000  
                                         ??_abs 0021                                           ??_pad 0025  
                       __end_of_TMR0_Initialize 0D82                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 0E7E                                 __end_of___aodiv 08F4  
                                         ?_ctoa 0018                                           ?_main 0001  
                                         ?_dtoa 002A                                 __end_of___aomod 0A58  
                                         STR_10 7F8A                                           STR_11 7F32  
                                         STR_20 7F52                                           STR_12 7EEC  
                                         STR_13 7F11                                           STR_21 7FB7  
                                         STR_14 7FED                                           STR_22 7FFB  
                                         STR_15 7FF4                                           STR_16 7FF4  
                                         STR_17 7EB9                                           STR_18 7FF7  
                                         STR_19 7F2F                       TMR0_ReadTimer@readValHigh 0008  
                                         _T0CON 000FD5                                           i2l242 0F34  
                                         i2l330 0E42                                 _TMR0_WriteTimer 0EFA  
                                         i2l326 0E22                                           i2l239 0E60  
                                         i2l327 0E24                                           i2l255 0F3A  
                                         i2l249 0D4A                                    vfpfcnvrt@fmt 003E  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                       ?_TMR0_SetInterruptHandler 000D  
                              __end_of_TMR0_ISR 0D4C                                           _flags 0050  
                                         _fputc 0AF2                                           _fputs 0C52  
                                         pad@fp 001F                                           _width 0046  
                                         ctoa@c 001A                                           _putch 0EF0  
                                         ctoa@l 001C                                           ctoa@w 001E  
                                         main@i 009B                                           dtoa@d 002C  
                                         dtoa@i 006F                                           dtoa@n 0066  
                                         dtoa@p 0062                                           dtoa@s 006E  
                                         dtoa@w 0064                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000D  
                                         ttemp5 0053                                           ttemp6 0056  
                                         ttemp7 005A                                           status 000FD8  
                                         wtemp8 0053              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 0DFC                                    __end_of_ctoa 0AF2  
                    __end_of_EUSART1_Initialize 0D14                                    __end_of_main 0332  
                                  __end_of_dtoa 05B2                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_ctoa 001B                                          ??_main 0088  
                                        ??_dtoa 0034                                   __activetblptr 000002  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 000F  
                                        ?_fputs 0018                                          _ADRESH 000FC4  
                                        _ADRESL 000FC3                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l2023 0012  
                                        i2l2025 0020                                          i2l2027 002E  
                                        i2l1913 0F2C                                          i2l1915 0F30  
                                        i2l1871 0E58                                          i2l1867 0E44  
                                        i2l1955 0E26                                          i2l1971 0D14  
                                        i2l1869 0E4C                                          i2l1957 0E2C  
                                        i2l1973 0D16                                          i2l1959 0E40  
                                        i2l1975 0D1A                                          i2l1977 0D1E  
                                        i2l1979 0D30                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  vfprintf@cfmt 0044                                       ??___aodiv 001D  
                                     ??___aomod 001D                         __end_of_TMR0_WriteTimer 0F04  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 000D  
                              ?_TMR0_Initialize 0001                                          clear_0 0E02  
                                        clear_1 0E0E                                          isa$std 000001  
                                        _printf 0DAC                                          pad@buf 0021  
              ??_EUSART1_SetOverrunErrorHandler 000F                 ?_EUSART1_SetOverrunErrorHandler 000D  
                                        ctoa@fp 0018                                          dtoa@fp 002A  
                                        fputc@c 000F                                          fputs@c 001C  
                                        fputs@i 001D                                          fputs@s 0018  
                                  __mediumconst 7EB8                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0C52                                 ??_EUSART1_Write 000D  
      TMR0_SetInterruptHandler@InterruptHandler 000D                               _SYSTEM_Initialize 0E7E  
                                    __accesstop 0060                         __end_of__initialization 0E14  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0011  
                                     ?_TMR0_ISR 0001                                   __end_of_fputc 0B88  
                                 __end_of_fputs 0C96                                   __end_of_putch 0EFA  
                          __end_of_EUSART1_Read 0DFC                                         ??_fputc 0013  
                     __end_of_SYSTEM_Initialize 0E98                                         ??_fputs 001C  
                                       ??_putch 000E                                      __pbssBANK0 009C  
               __end_of_EUSART1_SetErrorHandler 0F2C                __end_of_TMR0_SetInterruptHandler 0F0E  
                                    ??_TMR0_ISR 000B                                ?_TMR0_WriteTimer 000D  
                                       ?_printf 0082          __end_of_EUSART1_SetFramingErrorHandler 0F22  
                _EUSART1_SetFramingErrorHandler 0F18                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                          _ADC_InterruptHandler 004E                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 076C  
                                       ___aomod 08F4                               __end_of_myTMR0ISR 0E44  
                                     ?_vfprintf 007C                             _EUSART1_is_rx_ready 0EDC  
                                       __pcinit 0DFC                                         __ramtop 0600  
                                       __ptext0 0042                                         __ptext1 0DAC  
                                       __ptext2 0C02                                         __ptext3 05B2  
                                       __ptext4 0332                                         __ptext5 0B88  
                                       __ptext6 0C52                                         __ptext7 0C96  
                                       __ptext8 08F4                                         __ptext9 076C  
                                     _T0CONbits 000FD5                           _OSCILLATOR_Initialize 0E62  
                            _EUSART1_Initialize 0CD6                        ??_PIN_MANAGER_Initialize 000D  
                                       main@cmd 009A                            end_of_initialization 0E14  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0011                                   __Lmediumconst 7EB8  
                   _EUSART1_OverrunErrorHandler 009E                                         fputs@fp 001A  
                             __end_of_vfpfcnvrt 076C                           TMR0_ReadTimer@readVal 0005  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0071                                      ??_vfprintf 0044  
                                _TMR0_ReadTimer 0E44                            ??_EUSART1_Initialize 000F  
                               main@adc_reading 008A                        _TMR0_SetInterruptHandler 0F04  
                           EUSART1_Write@txData 000D                           ??_EUSART1_is_rx_ready 000D  
                                  _EUSART1_Read 0DD4                          __end_of_TMR0_ReadTimer 0E62  
                  __end_of_INTERRUPT_Initialize 0F3A                                     vfpfcnvrt@ap 0040  
                                   vfpfcnvrt@cp 007A                                     vfpfcnvrt@fp 003C  
                                _ADC_Initialize 0EC6                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 0DD4                             start_initialization 0DFC  
                                   __end_of_abs 0CD6                                     __end_of_pad 0C02  
                                   putch@txData 000E                           __end_of_EUSART1_Write 0EC6  
                                   vfprintf@fmt 007E                                 ?_TMR0_ReadTimer 0001  
                        __end_of_ADC_Initialize 0EDC                                        ??_printf 0046  
                                   __pbssCOMRAM 0046                                   __pcstackBANK0 0060  
                              ___aodiv@dividend 000D                ??_EUSART1_SetFramingErrorHandler 000F  
               ?_EUSART1_SetFramingErrorHandler 000D                           _TMR0_InterruptHandler 004C  
                        _PIN_MANAGER_Initialize 0D82                                       _dtoa$1431 0060  
                                     __pintcode 0008                               _ADC_SelectChannel 0E98  
                                 __pmediumconst 7EB8                                        ?___aodiv 000D  
                                      ?___aomod 000D                                ___aodiv@quotient 001F  
                               ?_ADC_Initialize 0001                              ?_ADC_SelectChannel 0001  
                  ??_INTERRUPT_InterruptManager 000B                                       _myTMR0ISR 0E22  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                           ??_ADC_SelectChannel 000D                            _EUSART1_ErrorHandler 009C  
                       _EUSART1_SetErrorHandler 0F22                            _INTERRUPT_Initialize 0F36  
                             ??_TMR0_Initialize 000F                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 000D                       __end_of_ADC_SelectChannel 0EB0  
                                      i2u100_40 0D30                                        i2u100_41 0D2C  
                                      i2u101_48 0D36                                        i2u101_49 0D4A  
                                      i2u105_40 0020                                        i2u105_41 001C  
                                      i2u106_40 002E                                        i2u106_41 002A  
                    ??_TMR0_SetInterruptHandler 000F                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 0D14  
                                     _vfpfcnvrt 05B2                        TMR0_ReadTimer@readValLow 0007  
                                    _ADCON0bits 000FC2                                      ?_myTMR0ISR 0001  
                      ADC_SelectChannel@channel 000E                               i2_TMR0_WriteTimer 0F2C  
                                    vfpfcnvrt@c 0079                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 0080                                        __Lrparam 0000  
                                    vfprintf@fp 007C                         ??_OSCILLATOR_Initialize 000D  
                                    ?_vfpfcnvrt 003C                                 ___aodiv@divisor 0015  
                               ___aodiv@counter 001D                       __end_ofi2_TMR0_WriteTimer 0F36  
                     ??_EUSART1_SetErrorHandler 000F                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 0EF0                                        __ptext10 0A58  
                                      __ptext11 0AF2                                        __ptext20 0F36  
                                      __ptext12 0EF0                                        __ptext21 0CD6  
                                      __ptext13 0EB0                                        __ptext30 0D14  
                                      __ptext22 0F0E                                        __ptext14 0EFA  
                                      __ptext31 0F3A                                        __ptext23 0F18  
                                      __ptext15 0E7E                                        __ptext32 0E22  
                                      __ptext24 0F22                                        __ptext16 0D4C  
                                      __ptext33 0F2C                                        __ptext25 0EC6  
                                      __ptext17 0F04                                        __ptext34 0E44  
                                      __ptext26 0EDC                                        __ptext18 0D82  
                                      __ptext35 0000                                        __ptext27 0DD4  
                                      __ptext19 0E62                                        __ptext28 0E98  
                       TMR0_WriteTimer@timerVal 000D                               ??_TMR0_WriteTimer 000F  
                              ??_TMR0_ReadTimer 0003            __end_of_TMR0_DefaultInterruptHandler 0F3C  
                  _TMR0_DefaultInterruptHandler 0F3A  EUSART1_SetOverrunErrorHandler@interruptHandler 000D  
                                      isa$xinst 000000                                        int$flags 0052  
                                      _vfprintf 0C02              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0082  
                   _EUSART1_FramingErrorHandler 00A0                                ___aomod@dividend 000D  
                                   ??_myTMR0ISR 000B                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000D                                        intlevel2 0000  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 0F18  
                _EUSART1_SetOverrunErrorHandler 0F0E                                      _RCSTA1bits 000FAB  
                                    _NEW_SAMPLE 00A2                                ??_ADC_Initialize 000D  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 0086  EUSART1_SetFramingErrorHandler@interruptHandler 000D  
                               ___aomod@divisor 0015                                     ??_vfpfcnvrt 0042  
                               ___aomod@counter 001D                              _eusart1RxLastError 0051  
                               _TMR0_Initialize 0D4C                                    ___aodiv@sign 001E  
                __end_of_PIN_MANAGER_Initialize 0DAC                                    ___aomod@sign 001E  
                                  fp__myTMR0ISR 0000  
