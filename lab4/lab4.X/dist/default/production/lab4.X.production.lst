

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 05 23:36:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64   000000                     
    65                           ; Generated 06/04/2022 GMT
    66                           ; 
    67                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    68                           ; All rights reserved.
    69                           ; 
    70                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    71                           ; 
    72                           ; Redistribution and use in source and binary forms, with or without modification, are
    73                           ; permitted provided that the following conditions are met:
    74                           ; 
    75                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    76                           ;        conditions and the following disclaimer.
    77                           ; 
    78                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    79                           ;        of conditions and the following disclaimer in the documentation and/or other
    80                           ;        materials provided with the distribution. Publication is not required when
    81                           ;        this file is used in an embedded application.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F25K22 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99   000000                     
   100 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   101   000000                     
   102 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   103   000000                     
   104 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   105   000000                     
   106                           	psect	idataBANK0
   107   001378                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for myTMR1ISR@notes
   111   001378  1C                 	db	28
   112   001379  08                 	db	8
   113   00137A  00                 	db	0
   114   00137B  1C                 	db	28
   115   00137C  08                 	db	8
   116   00137D  1C                 	db	28
   117   00137E  00                 	db	0
   118   00137F  1A                 	db	26
   119   001380  1C                 	db	28
   120   001381  08                 	db	8
   121   001382  00                 	db	0
   122   001383  1C                 	db	28
   123   001384  06                 	db	6
   124   001385  1D                 	db	29
   125   001386  16                 	db	22
   126   001387  00                 	db	0
   127   001388  00                 	db	0
   128   001389  00                 	db	0
   129   00138A  00                 	db	0
   130   00138B  00                 	db	0
   131   00138C  00                 	db	0
   132   00138D  00                 	db	0
   133   00138E  00                 	db	0
   134   00138F  00                 	db	0
   135   001390  02                 	db	2
   136   001391  0B                 	db	11
   137   001392  17                 	db	23
   138   001393  15                 	db	21
   139   001394  00                 	db	0
   140   001395  00                 	db	0
   141   001396  00                 	db	0
   142   001397  00                 	db	0
   143   001398  00                 	db	0
   144   001399  00                 	db	0
   145   00139A  00                 	db	0
   146   00139B  00                 	db	0
   147                           
   148                           	psect	idataBANK1
   149   000F80                     __pidataBANK1:
   150                           	callstack 0
   151                           
   152                           ;initializer for _duration
   153   000F80  3A98               	dw	15000
   154   000F82  3A98               	dw	15000
   155   000F84  EA60               	dw	60000
   156   000F86  3A98               	dw	15000
   157   000F88  3A98               	dw	15000
   158   000F8A  EA60               	dw	60000
   159   000F8C  7530               	dw	30000
   160   000F8E  3A98               	dw	15000
   161   000F90  3A98               	dw	15000
   162   000F92  3A98               	dw	15000
   163   000F94  EA60               	dw	60000
   164   000F96  3A98               	dw	15000
   165   000F98  7530               	dw	30000
   166   000F9A  7530               	dw	30000
   167   000F9C  7530               	dw	30000
   168   000F9E  00                 	db	0
   169   000F9F  00                 	db	0
   170   000FA0  00                 	db	0
   171   000FA1  00                 	db	0
   172   000FA2  00                 	db	0
   173   000FA3  00                 	db	0
   174   000FA4  00                 	db	0
   175   000FA5  00                 	db	0
   176   000FA6  00                 	db	0
   177   000FA7  00                 	db	0
   178   000FA8  00                 	db	0
   179   000FA9  00                 	db	0
   180   000FAA  00                 	db	0
   181   000FAB  00                 	db	0
   182   000FAC  00                 	db	0
   183   000FAD  00                 	db	0
   184   000FAE  00                 	db	0
   185   000FAF  00                 	db	0
   186   000FB0  7530               	dw	30000
   187   000FB2  3A98               	dw	15000
   188   000FB4  7530               	dw	30000
   189   000FB6  EA60               	dw	60000
   190   000FB8  00                 	db	0
   191   000FB9  00                 	db	0
   192   000FBA  00                 	db	0
   193   000FBB  00                 	db	0
   194   000FBC  00                 	db	0
   195   000FBD  00                 	db	0
   196   000FBE  00                 	db	0
   197   000FBF  00                 	db	0
   198   000FC0  00                 	db	0
   199   000FC1  00                 	db	0
   200   000FC2  00                 	db	0
   201   000FC3  00                 	db	0
   202   000FC4  00                 	db	0
   203   000FC5  00                 	db	0
   204   000FC6  00                 	db	0
   205   000FC7  00                 	db	0
   206                           
   207                           ;initializer for myTMR1ISR@scale
   208   000FC8  4710               	dw	18192
   209   000FCA  4310               	dw	17168
   210   000FCC  3F40               	dw	16192
   211   000FCE  3BC0               	dw	15296
   212   000FD0  3870               	dw	14448
   213   000FD2  3540               	dw	13632
   214   000FD4  3240               	dw	12864
   215   000FD6  2F70               	dw	12144
   216   000FD8  2CD0               	dw	11472
   217   000FDA  2A40               	dw	10816
   218   000FDC  27E0               	dw	10208
   219   000FDE  25A0               	dw	9632
   220   000FE0  2380               	dw	9088
   221   000FE2  2190               	dw	8592
   222   000FE4  1FB0               	dw	8112
   223   000FE6  1DE0               	dw	7648
   224   000FE8  1C40               	dw	7232
   225   000FEA  1AA0               	dw	6816
   226   000FEC  1920               	dw	6432
   227   000FEE  17C0               	dw	6080
   228   000FF0  1660               	dw	5728
   229   000FF2  1520               	dw	5408
   230   000FF4  13F0               	dw	5104
   231   000FF6  12D0               	dw	4816
   232   000FF8  11D0               	dw	4560
   233   000FFA  10C0               	dw	4288
   234   000FFC  0FD0               	dw	4048
   235   000FFE  0EF0               	dw	3824
   236   001000  0E20               	dw	3616
   237   001002  0D50               	dw	3408
   238   000000                     _TXREG1	set	4013
   239   000000                     _RCREG1	set	4014
   240   000000                     _SPBRG1	set	4015
   241   000000                     _TXSTA1	set	4012
   242   000000                     _ANSELA	set	3896
   243   000000                     _ANSELB	set	3897
   244   000000                     _ANSELC	set	3898
   245   000000                     _LATA	set	3977
   246   000000                     _T1CON	set	4045
   247   000000                     _TMR1L	set	4046
   248   000000                     _TMR1H	set	4047
   249   000000                     _TMR0L	set	4054
   250   000000                     _TMR0H	set	4055
   251   000000                     _OSCTUNE	set	3995
   252   000000                     _OSCCON2	set	4050
   253   000000                     _OSCCON	set	4051
   254                           
   255                           	psect	nvCOMRAM
   256   00004D                     __pnvCOMRAM:
   257                           	callstack 0
   258   00004D                     _timer1ReloadVal:
   259                           	callstack 0
   260   00004D                     	ds	2
   261   00004F                     _timer0ReloadVal:
   262                           	callstack 0
   263   00004F                     	ds	2
   264                           
   265                           	psect	nvBANK0
   266   0000EE                     __pnvBANK0:
   267                           	callstack 0
   268   0000EE                     _EUSART1_ErrorHandler:
   269                           	callstack 0
   270   0000EE                     	ds	2
   271   0000F0                     _EUSART1_OverrunErrorHandler:
   272                           	callstack 0
   273   0000F0                     	ds	2
   274   0000F2                     _EUSART1_FramingErrorHandler:
   275                           	callstack 0
   276   0000F2                     	ds	2
   277   0000F4                     _TMR1_InterruptHandler:
   278                           	callstack 0
   279   0000F4                     	ds	2
   280   0000F6                     _TMR0_InterruptHandler:
   281                           	callstack 0
   282   0000F6                     	ds	2
   283   000000                     _TMR1	set	4046
   284   000000                     _RCSTA1bits	set	4011
   285   000000                     _TXSTA1bits	set	4012
   286   000000                     _LATBbits	set	3978
   287   000000                     _T1GCONbits	set	4044
   288   000000                     _T1CONbits	set	4045
   289   000000                     _T0CON	set	4053
   290   000000                     _T0CONbits	set	4053
   291   000000                     _INTCONbits	set	4082
   292   000000                     _PIE1bits	set	3997
   293   000000                     _RCONbits	set	4048
   294   000000                     _RCSTA1	set	4011
   295   000000                     _BAUDCON1	set	4024
   296   000000                     _T1GCON	set	4044
   297   000000                     _PIR1bits	set	3998
   298   000000                     _INTCON2bits	set	4081
   299   000000                     _TRISA	set	3986
   300   000000                     _LATC	set	3979
   301   000000                     _LATB	set	3978
   302   000000                     _TRISC	set	3988
   303   000000                     _TRISB	set	3987
   304   000000                     _WPUB	set	3937
   305   000000                     _PORTAbits	set	3968
   306   000000                     _SPBRGH1	set	4016
   307                           
   308                           	psect	mediumconst
   309   007E40                     __pmediumconst:
   310                           	callstack 0
   311   007E40  00                 	db	0
   312   007E41                     STR_24:
   313   007E41  55                 	db	85	;'U'
   314   007E42  73                 	db	115	;'s'
   315   007E43  65                 	db	101	;'e'
   316   007E44  20                 	db	32
   317   007E45  74                 	db	116	;'t'
   318   007E46  68                 	db	104	;'h'
   319   007E47  65                 	db	101	;'e'
   320   007E48  20                 	db	32
   321   007E49  75                 	db	117	;'u'
   322   007E4A  70                 	db	112	;'p'
   323   007E4B  70                 	db	112	;'p'
   324   007E4C  65                 	db	101	;'e'
   325   007E4D  72                 	db	114	;'r'
   326   007E4E  20                 	db	32
   327   007E4F  62                 	db	98	;'b'
   328   007E50  75                 	db	117	;'u'
   329   007E51  74                 	db	116	;'t'
   330   007E52  74                 	db	116	;'t'
   331   007E53  6F                 	db	111	;'o'
   332   007E54  6E                 	db	110	;'n'
   333   007E55  20                 	db	32
   334   007E56  74                 	db	116	;'t'
   335   007E57  6F                 	db	111	;'o'
   336   007E58  20                 	db	32
   337   007E59  72                 	db	114	;'r'
   338   007E5A  65                 	db	101	;'e'
   339   007E5B  70                 	db	112	;'p'
   340   007E5C  72                 	db	114	;'r'
   341   007E5D  6F                 	db	111	;'o'
   342   007E5E  64                 	db	100	;'d'
   343   007E5F  75                 	db	117	;'u'
   344   007E60  63                 	db	99	;'c'
   345   007E61  65                 	db	101	;'e'
   346   007E62  20                 	db	32
   347   007E63  74                 	db	116	;'t'
   348   007E64  68                 	db	104	;'h'
   349   007E65  69                 	db	105	;'i'
   350   007E66  73                 	db	115	;'s'
   351   007E67  20                 	db	32
   352   007E68  70                 	db	112	;'p'
   353   007E69  61                 	db	97	;'a'
   354   007E6A  74                 	db	116	;'t'
   355   007E6B  74                 	db	116	;'t'
   356   007E6C  65                 	db	101	;'e'
   357   007E6D  72                 	db	114	;'r'
   358   007E6E  6E                 	db	110	;'n'
   359   007E6F  2E                 	db	46
   360   007E70  0D                 	db	13
   361   007E71  0A                 	db	10
   362   007E72  00                 	db	0
   363   007E73                     STR_5:
   364   007E73  52                 	db	82	;'R'
   365   007E74  42                 	db	66	;'B'
   366   007E75  35                 	db	53	;'5'
   367   007E76  20                 	db	32
   368   007E77  2D                 	db	45
   369   007E78  3E                 	db	62	;'>'
   370   007E79  20                 	db	32
   371   007E7A  4C                 	db	76	;'L'
   372   007E7B  50                 	db	80	;'P'
   373   007E7C  46                 	db	70	;'F'
   374   007E7D  69                 	db	105	;'i'
   375   007E7E  6E                 	db	110	;'n'
   376   007E7F  20                 	db	32
   377   007E80  61                 	db	97	;'a'
   378   007E81  6E                 	db	110	;'n'
   379   007E82  64                 	db	100	;'d'
   380   007E83  20                 	db	32
   381   007E84  69                 	db	105	;'i'
   382   007E85  6E                 	db	110	;'n'
   383   007E86  73                 	db	115	;'s'
   384   007E87  74                 	db	116	;'t'
   385   007E88  61                 	db	97	;'a'
   386   007E89  6C                 	db	108	;'l'
   387   007E8A  6C                 	db	108	;'l'
   388   007E8B  20                 	db	32
   389   007E8C  4C                 	db	76	;'L'
   390   007E8D  50                 	db	80	;'P'
   391   007E8E  46                 	db	70	;'F'
   392   007E8F  6F                 	db	111	;'o'
   393   007E90  75                 	db	117	;'u'
   394   007E91  74                 	db	116	;'t'
   395   007E92  2F                 	db	47
   396   007E93  41                 	db	65	;'A'
   397   007E94  4D                 	db	77	;'M'
   398   007E95  50                 	db	80	;'P'
   399   007E96  69                 	db	105	;'i'
   400   007E97  6E                 	db	110	;'n'
   401   007E98  20                 	db	32
   402   007E99  6A                 	db	106	;'j'
   403   007E9A  75                 	db	117	;'u'
   404   007E9B  6D                 	db	109	;'m'
   405   007E9C  70                 	db	112	;'p'
   406   007E9D  65                 	db	101	;'e'
   407   007E9E  72                 	db	114	;'r'
   408   007E9F  00                 	db	0
   409   007EA0                     STR_7:
   410   007EA0  2D                 	db	45
   411   007EA1  2D                 	db	45
   412   007EA2  2D                 	db	45
   413   007EA3  2D                 	db	45
   414   007EA4  2D                 	db	45
   415   007EA5  2D                 	db	45
   416   007EA6  2D                 	db	45
   417   007EA7  2D                 	db	45
   418   007EA8  2D                 	db	45
   419   007EA9  2D                 	db	45
   420   007EAA  2D                 	db	45
   421   007EAB  2D                 	db	45
   422   007EAC  2D                 	db	45
   423   007EAD  2D                 	db	45
   424   007EAE  2D                 	db	45
   425   007EAF  2D                 	db	45
   426   007EB0  2D                 	db	45
   427   007EB1  2D                 	db	45
   428   007EB2  2D                 	db	45
   429   007EB3  2D                 	db	45
   430   007EB4  2D                 	db	45
   431   007EB5  2D                 	db	45
   432   007EB6  2D                 	db	45
   433   007EB7  2D                 	db	45
   434   007EB8  2D                 	db	45
   435   007EB9  2D                 	db	45
   436   007EBA  2D                 	db	45
   437   007EBB  2D                 	db	45
   438   007EBC  2D                 	db	45
   439   007EBD  2D                 	db	45
   440   007EBE  0D                 	db	13
   441   007EBF  0A                 	db	10
   442   007EC0  00                 	db	0
   443   007EC1                     STR_23:
   444   007EC1  4C                 	db	76	;'L'
   445   007EC2  69                 	db	105	;'i'
   446   007EC3  73                 	db	115	;'s'
   447   007EC4  74                 	db	116	;'t'
   448   007EC5  65                 	db	101	;'e'
   449   007EC6  6E                 	db	110	;'n'
   450   007EC7  20                 	db	32
   451   007EC8  74                 	db	116	;'t'
   452   007EC9  6F                 	db	111	;'o'
   453   007ECA  20                 	db	32
   454   007ECB  74                 	db	116	;'t'
   455   007ECC  68                 	db	104	;'h'
   456   007ECD  65                 	db	101	;'e'
   457   007ECE  20                 	db	32
   458   007ECF  62                 	db	98	;'b'
   459   007ED0  65                 	db	101	;'e'
   460   007ED1  61                 	db	97	;'a'
   461   007ED2  74                 	db	116	;'t'
   462   007ED3  20                 	db	32
   463   007ED4  70                 	db	112	;'p'
   464   007ED5  61                 	db	97	;'a'
   465   007ED6  74                 	db	116	;'t'
   466   007ED7  74                 	db	116	;'t'
   467   007ED8  65                 	db	101	;'e'
   468   007ED9  72                 	db	114	;'r'
   469   007EDA  6E                 	db	110	;'n'
   470   007EDB  2E                 	db	46
   471   007EDC  0D                 	db	13
   472   007EDD  0A                 	db	10
   473   007EDE  00                 	db	0
   474   007EDF                     STR_13:
   475   007EDF  7A                 	db	122	;'z'
   476   007EE0  3A                 	db	58	;':'
   477   007EE1  20                 	db	32
   478   007EE2  43                 	db	67	;'C'
   479   007EE3  6C                 	db	108	;'l'
   480   007EE4  65                 	db	101	;'e'
   481   007EE5  61                 	db	97	;'a'
   482   007EE6  72                 	db	114	;'r'
   483   007EE7  20                 	db	32
   484   007EE8  74                 	db	116	;'t'
   485   007EE9  68                 	db	104	;'h'
   486   007EEA  65                 	db	101	;'e'
   487   007EEB  20                 	db	32
   488   007EEC  74                 	db	116	;'t'
   489   007EED  65                 	db	101	;'e'
   490   007EEE  72                 	db	114	;'r'
   491   007EEF  6D                 	db	109	;'m'
   492   007EF0  69                 	db	105	;'i'
   493   007EF1  6E                 	db	110	;'n'
   494   007EF2  61                 	db	97	;'a'
   495   007EF3  6C                 	db	108	;'l'
   496   007EF4  0D                 	db	13
   497   007EF5  0A                 	db	10
   498   007EF6  00                 	db	0
   499   007EF7                     STR_8:
   500   007EF7  20                 	db	32
   501   007EF8  20                 	db	32
   502   007EF9  20                 	db	32
   503   007EFA  20                 	db	32
   504   007EFB  20                 	db	32
   505   007EFC  20                 	db	32
   506   007EFD  20                 	db	32
   507   007EFE  20                 	db	32
   508   007EFF  54                 	db	84	;'T'
   509   007F00  4D                 	db	77	;'M'
   510   007F01  52                 	db	82	;'R'
   511   007F02  31                 	db	49	;'1'
   512   007F03  20                 	db	32
   513   007F04  3D                 	db	61	;'='
   514   007F05  20                 	db	32
   515   007F06  30                 	db	48	;'0'
   516   007F07  78                 	db	120	;'x'
   517   007F08  25                 	db	37
   518   007F09  30                 	db	48	;'0'
   519   007F0A  34                 	db	52	;'4'
   520   007F0B  78                 	db	120	;'x'
   521   007F0C  0D                 	db	13
   522   007F0D  0A                 	db	10
   523   007F0E  00                 	db	0
   524   007F0F                     STR_2:
   525   007F0F  49                 	db	73	;'I'
   526   007F10  6E                 	db	110	;'n'
   527   007F11  74                 	db	116	;'t'
   528   007F12  65                 	db	101	;'e'
   529   007F13  72                 	db	114	;'r'
   530   007F14  72                 	db	114	;'r'
   531   007F15  75                 	db	117	;'u'
   532   007F16  70                 	db	112	;'p'
   533   007F17  74                 	db	116	;'t'
   534   007F18  20                 	db	32
   535   007F19  4D                 	db	77	;'M'
   536   007F1A  75                 	db	117	;'u'
   537   007F1B  73                 	db	115	;'s'
   538   007F1C  69                 	db	105	;'i'
   539   007F1D  63                 	db	99	;'c'
   540   007F1E  20                 	db	32
   541   007F1F  42                 	db	66	;'B'
   542   007F20  6F                 	db	111	;'o'
   543   007F21  78                 	db	120	;'x'
   544   007F22  0D                 	db	13
   545   007F23  0A                 	db	10
   546   007F24  00                 	db	0
   547   007F25                     STR_15:
   548   007F25  72                 	db	114	;'r'
   549   007F26  3A                 	db	58	;':'
   550   007F27  20                 	db	32
   551   007F28  52                 	db	82	;'R'
   552   007F29  68                 	db	104	;'h'
   553   007F2A  79                 	db	121	;'y'
   554   007F2B  74                 	db	116	;'t'
   555   007F2C  68                 	db	104	;'h'
   556   007F2D  6D                 	db	109	;'m'
   557   007F2E  20                 	db	32
   558   007F2F  70                 	db	112	;'p'
   559   007F30  72                 	db	114	;'r'
   560   007F31  61                 	db	97	;'a'
   561   007F32  63                 	db	99	;'c'
   562   007F33  74                 	db	116	;'t'
   563   007F34  69                 	db	105	;'i'
   564   007F35  63                 	db	99	;'c'
   565   007F36  65                 	db	101	;'e'
   566   007F37  0D                 	db	13
   567   007F38  0A                 	db	10
   568   007F39  00                 	db	0
   569   007F3A                     STR_12:
   570   007F3A  5A                 	db	90	;'Z'
   571   007F3B  3A                 	db	58	;':'
   572   007F3C  20                 	db	32
   573   007F3D  52                 	db	82	;'R'
   574   007F3E  65                 	db	101	;'e'
   575   007F3F  73                 	db	115	;'s'
   576   007F40  65                 	db	101	;'e'
   577   007F41  74                 	db	116	;'t'
   578   007F42  20                 	db	32
   579   007F43  70                 	db	112	;'p'
   580   007F44  72                 	db	114	;'r'
   581   007F45  6F                 	db	111	;'o'
   582   007F46  63                 	db	99	;'c'
   583   007F47  65                 	db	101	;'e'
   584   007F48  73                 	db	115	;'s'
   585   007F49  73                 	db	115	;'s'
   586   007F4A  6F                 	db	111	;'o'
   587   007F4B  72                 	db	114	;'r'
   588   007F4C  0D                 	db	13
   589   007F4D  0A                 	db	10
   590   007F4E  00                 	db	0
   591   007F4F                     STR_14:
   592   007F4F  70                 	db	112	;'p'
   593   007F50  3A                 	db	58	;':'
   594   007F51  20                 	db	32
   595   007F52  70                 	db	112	;'p'
   596   007F53  6C                 	db	108	;'l'
   597   007F54  61                 	db	97	;'a'
   598   007F55  79                 	db	121	;'y'
   599   007F56  20                 	db	32
   600   007F57  73                 	db	115	;'s'
   601   007F58  6F                 	db	111	;'o'
   602   007F59  6E                 	db	110	;'n'
   603   007F5A  67                 	db	103	;'g'
   604   007F5B  20                 	db	32
   605   007F5C  6F                 	db	111	;'o'
   606   007F5D  6E                 	db	110	;'n'
   607   007F5E  63                 	db	99	;'c'
   608   007F5F  65                 	db	101	;'e'
   609   007F60  0D                 	db	13
   610   007F61  0A                 	db	10
   611   007F62  00                 	db	0
   612   007F63                     STR_22:
   613   007F63  52                 	db	82	;'R'
   614   007F64  68                 	db	104	;'h'
   615   007F65  79                 	db	121	;'y'
   616   007F66  74                 	db	116	;'t'
   617   007F67  68                 	db	104	;'h'
   618   007F68  6D                 	db	109	;'m'
   619   007F69  20                 	db	32
   620   007F6A  70                 	db	112	;'p'
   621   007F6B  72                 	db	114	;'r'
   622   007F6C  61                 	db	97	;'a'
   623   007F6D  63                 	db	99	;'c'
   624   007F6E  74                 	db	116	;'t'
   625   007F6F  69                 	db	105	;'i'
   626   007F70  63                 	db	99	;'c'
   627   007F71  65                 	db	101	;'e'
   628   007F72  2E                 	db	46
   629   007F73  0D                 	db	13
   630   007F74  0A                 	db	10
   631   007F75  00                 	db	0
   632   007F76                     STR_20:
   633   007F76  50                 	db	80	;'P'
   634   007F77  6C                 	db	108	;'l'
   635   007F78  61                 	db	97	;'a'
   636   007F79  79                 	db	121	;'y'
   637   007F7A  20                 	db	32
   638   007F7B  73                 	db	115	;'s'
   639   007F7C  6F                 	db	111	;'o'
   640   007F7D  6E                 	db	110	;'n'
   641   007F7E  67                 	db	103	;'g'
   642   007F7F  20                 	db	32
   643   007F80  6F                 	db	111	;'o'
   644   007F81  6E                 	db	110	;'n'
   645   007F82  63                 	db	99	;'c'
   646   007F83  65                 	db	101	;'e'
   647   007F84  2E                 	db	46
   648   007F85  0D                 	db	13
   649   007F86  0A                 	db	10
   650   007F87  00                 	db	0
   651   007F88                     STR_27:
   652   007F88  55                 	db	85	;'U'
   653   007F89  6E                 	db	110	;'n'
   654   007F8A  6B                 	db	107	;'k'
   655   007F8B  6E                 	db	110	;'n'
   656   007F8C  6F                 	db	111	;'o'
   657   007F8D  77                 	db	119	;'w'
   658   007F8E  6E                 	db	110	;'n'
   659   007F8F  20                 	db	32
   660   007F90  6B                 	db	107	;'k'
   661   007F91  65                 	db	101	;'e'
   662   007F92  79                 	db	121	;'y'
   663   007F93  20                 	db	32
   664   007F94  25                 	db	37
   665   007F95  63                 	db	99	;'c'
   666   007F96  0D                 	db	13
   667   007F97  0A                 	db	10
   668   007F98  00                 	db	0
   669   007F99                     STR_4:
   670   007F99  42                 	db	66	;'B'
   671   007F9A  6F                 	db	111	;'o'
   672   007F9B  61                 	db	97	;'a'
   673   007F9C  72                 	db	114	;'r'
   674   007F9D  64                 	db	100	;'d'
   675   007F9E  20                 	db	32
   676   007F9F  77                 	db	119	;'w'
   677   007FA0  69                 	db	105	;'i'
   678   007FA1  72                 	db	114	;'r'
   679   007FA2  69                 	db	105	;'i'
   680   007FA3  6E                 	db	110	;'n'
   681   007FA4  67                 	db	103	;'g'
   682   007FA5  0D                 	db	13
   683   007FA6  0A                 	db	10
   684   007FA7  00                 	db	0
   685   007FA8                     STR_10:
   686   007FA8  3F                 	db	63	;'?'
   687   007FA9  3A                 	db	58	;':'
   688   007FAA  20                 	db	32
   689   007FAB  48                 	db	72	;'H'
   690   007FAC  65                 	db	101	;'e'
   691   007FAD  6C                 	db	108	;'l'
   692   007FAE  70                 	db	112	;'p'
   693   007FAF  20                 	db	32
   694   007FB0  6D                 	db	109	;'m'
   695   007FB1  65                 	db	101	;'e'
   696   007FB2  6E                 	db	110	;'n'
   697   007FB3  75                 	db	117	;'u'
   698   007FB4  0D                 	db	13
   699   007FB5  0A                 	db	10
   700   007FB6  00                 	db	0
   701   007FB7                     STR_26:
   702   007FB7  59                 	db	89	;'Y'
   703   007FB8  6F                 	db	111	;'o'
   704   007FB9  75                 	db	117	;'u'
   705   007FBA  20                 	db	32
   706   007FBB  6C                 	db	108	;'l'
   707   007FBC  6F                 	db	111	;'o'
   708   007FBD  73                 	db	115	;'s'
   709   007FBE  65                 	db	101	;'e'
   710   007FBF  2E                 	db	46
   711   007FC0  0D                 	db	13
   712   007FC1  0A                 	db	10
   713   007FC2  00                 	db	0
   714   007FC3                     STR_21:
   715   007FC3  50                 	db	80	;'P'
   716   007FC4  6C                 	db	108	;'l'
   717   007FC5  61                 	db	97	;'a'
   718   007FC6  79                 	db	121	;'y'
   719   007FC7  69                 	db	105	;'i'
   720   007FC8  6E                 	db	110	;'n'
   721   007FC9  67                 	db	103	;'g'
   722   007FCA  2E                 	db	46
   723   007FCB  0D                 	db	13
   724   007FCC  0A                 	db	10
   725   007FCD  00                 	db	0
   726   007FCE                     STR_25:
   727   007FCE  59                 	db	89	;'Y'
   728   007FCF  6F                 	db	111	;'o'
   729   007FD0  75                 	db	117	;'u'
   730   007FD1  20                 	db	32
   731   007FD2  77                 	db	119	;'w'
   732   007FD3  69                 	db	105	;'i'
   733   007FD4  6E                 	db	110	;'n'
   734   007FD5  2E                 	db	46
   735   007FD6  0D                 	db	13
   736   007FD7  0A                 	db	10
   737   007FD8  00                 	db	0
   738   007FD9                     STR_1:
   739   007FD9  69                 	db	105	;'i'
   740   007FDA  6E                 	db	110	;'n'
   741   007FDB  4C                 	db	76	;'L'
   742   007FDC  61                 	db	97	;'a'
   743   007FDD  62                 	db	98	;'b'
   744   007FDE  20                 	db	32
   745   007FDF  30                 	db	48	;'0'
   746   007FE0  34                 	db	52	;'4'
   747   007FE1  0D                 	db	13
   748   007FE2  0A                 	db	10
   749   007FE3  00                 	db	0
   750   007FE4                     STR_3:
   751   007FE4  44                 	db	68	;'D'
   752   007FE5  65                 	db	101	;'e'
   753   007FE6  76                 	db	118	;'v'
   754   007FE7  27                 	db	39
   755   007FE8  32                 	db	50	;'2'
   756   007FE9  31                 	db	49	;'1'
   757   007FEA  0D                 	db	13
   758   007FEB  0A                 	db	10
   759   007FEC  00                 	db	0
   760   007FED                     STR_11:
   761   007FED  6F                 	db	111	;'o'
   762   007FEE  3A                 	db	58	;':'
   763   007FEF  20                 	db	32
   764   007FF0  6B                 	db	107	;'k'
   765   007FF1  0D                 	db	13
   766   007FF2  0A                 	db	10
   767   007FF3  00                 	db	0
   768   007FF4                     STR_17:
   769   007FF4  6B                 	db	107	;'k'
   770   007FF5  2E                 	db	46
   771   007FF6  0D                 	db	13
   772   007FF7  0A                 	db	10
   773   007FF8  00                 	db	0
   774   007FF9                     STR_6:
   775   007FF9  0D                 	db	13
   776   007FFA  0A                 	db	10
   777   007FFB  3E                 	db	62	;'>'
   778   007FFC  20                 	db	32
   779   007FFD  00                 	db	0
   780   007FFE  00                 	db	0	; dummy byte at the end
   781   000000                     
   782                           ; #config settings
   783                           
   784                           	psect	cinit
   785   001004                     __pcinit:
   786                           	callstack 0
   787   001004                     start_initialization:
   788                           	callstack 0
   789   001004                     __initialization:
   790                           	callstack 0
   791                           
   792                           ; Initialize objects allocated to BANK1 (132 bytes)
   793                           ; load TBLPTR registers with __pidataBANK1
   794   001004  0E80               	movlw	low __pidataBANK1
   795   001006  6EF6               	movwf	tblptrl,c
   796   001008  0E0F               	movlw	high __pidataBANK1
   797   00100A  6EF7               	movwf	tblptrh,c
   798   00100C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   799   00100E  6EF8               	movwf	tblptru,c
   800   001010  EE01  F000         	lfsr	0,__pdataBANK1
   801   001014  EE10 F084          	lfsr	1,132
   802   001018                     copy_data0:
   803   001018  0009               	tblrd		*+
   804   00101A  CFF5 FFEE          	movff	tablat,postinc0
   805   00101E  50E5               	movf	postdec1,w,c
   806   001020  50E1               	movf	fsr1l,w,c
   807   001022  E1FA               	bnz	copy_data0
   808                           
   809                           ; Initialize objects allocated to BANK0 (36 bytes)
   810                           ; load TBLPTR registers with __pidataBANK0
   811   001024  0E78               	movlw	low __pidataBANK0
   812   001026  6EF6               	movwf	tblptrl,c
   813   001028  0E13               	movlw	high __pidataBANK0
   814   00102A  6EF7               	movwf	tblptrh,c
   815   00102C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   816   00102E  6EF8               	movwf	tblptru,c
   817   001030  EE00  F0A7         	lfsr	0,__pdataBANK0
   818   001034  EE10 F024          	lfsr	1,36
   819   001038                     copy_data1:
   820   001038  0009               	tblrd		*+
   821   00103A  CFF5 FFEE          	movff	tablat,postinc0
   822   00103E  50E5               	movf	postdec1,w,c
   823   001040  50E1               	movf	fsr1l,w,c
   824   001042  E1FA               	bnz	copy_data1
   825                           
   826                           ; Clear objects allocated to BANK0 (35 bytes)
   827   001044  EE00  F0CB         	lfsr	0,__pbssBANK0
   828   001048  0E23               	movlw	35
   829   00104A                     clear_0:
   830   00104A  6AEE               	clrf	postinc0,c
   831   00104C  06E8               	decf	wreg,f,c
   832   00104E  E1FD               	bnz	clear_0
   833                           
   834                           ; Clear objects allocated to COMRAM (9 bytes)
   835   001050  EE00  F044         	lfsr	0,__pbssCOMRAM
   836   001054  0E09               	movlw	9
   837   001056                     clear_1:
   838   001056  6AEE               	clrf	postinc0,c
   839   001058  06E8               	decf	wreg,f,c
   840   00105A  E1FD               	bnz	clear_1
   841   00105C                     end_of_initialization:
   842                           	callstack 0
   843   00105C                     __end_of__initialization:
   844                           	callstack 0
   845   00105C  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   846   00105E  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   847   001060  0E00               	movlw	low (__Lmediumconst shr (0+16))
   848   001062  6EF8               	movwf	tblptru,c
   849   001064  0100               	movlb	0
   850   001066  EF4C  F000         	goto	_main	;jump to C main() function
   851                           
   852                           	psect	bssCOMRAM
   853   000044                     __pbssCOMRAM:
   854                           	callstack 0
   855   000044                     _width:
   856                           	callstack 0
   857   000044                     	ds	2
   858   000046                     _prec:
   859                           	callstack 0
   860   000046                     	ds	2
   861   000048                     _flags:
   862                           	callstack 0
   863   000048                     	ds	1
   864   000049                     _eusart1RxLastError:
   865                           	callstack 0
   866   000049                     	ds	1
   867   00004A                     myTMR0ISR@tmr0State:
   868                           	callstack 0
   869   00004A                     	ds	1
   870   00004B                     _playNote:
   871                           	callstack 0
   872   00004B                     	ds	1
   873   00004C                     _noteIndex:
   874                           	callstack 0
   875   00004C                     	ds	1
   876                           
   877                           	psect	bssBANK0
   878   0000CB                     __pbssBANK0:
   879                           	callstack 0
   880   0000CB                     _playSong:
   881                           	callstack 0
   882   0000CB                     	ds	1
   883   0000CC                     _songLength:
   884                           	callstack 0
   885   0000CC                     	ds	1
   886   0000CD                     _songSelection:
   887                           	callstack 0
   888   0000CD                     	ds	1
   889   0000CE                     _dbuf:
   890                           	callstack 0
   891   0000CE                     	ds	32
   892                           
   893                           	psect	dataBANK0
   894   0000A7                     __pdataBANK0:
   895                           	callstack 0
   896   0000A7                     myTMR1ISR@notes:
   897                           	callstack 0
   898   0000A7                     	ds	36
   899                           
   900                           	psect	dataBANK1
   901   000100                     __pdataBANK1:
   902                           	callstack 0
   903   000100                     _duration:
   904                           	callstack 0
   905   000100                     	ds	72
   906   000148                     myTMR1ISR@scale:
   907                           	callstack 0
   908   000148                     	ds	60
   909                           
   910                           	psect	cstackBANK0
   911   000060                     __pcstackBANK0:
   912                           	callstack 0
   913   000060                     _xtoa$1741:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x0
   917   000060                     	ds	2
   918   000062                     xtoa@p:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x2
   922   000062                     	ds	2
   923   000064                     xtoa@w:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x4
   927   000064                     	ds	2
   928   000066                     xtoa@n:
   929                           	callstack 0
   930                           
   931                           ; 8 bytes @ 0x6
   932   000066                     	ds	8
   933   00006E                     xtoa@i:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0xE
   937   00006E                     	ds	2
   938   000070                     xtoa@c:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x10
   942   000070                     	ds	1
   943   000071                     vfpfcnvrt@fp:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x11
   947   000071                     	ds	2
   948   000073                     vfpfcnvrt@fmt:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x13
   952   000073                     	ds	2
   953   000075                     vfpfcnvrt@ap:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x15
   957   000075                     	ds	2
   958   000077                     vfpfcnvrt@convarg:
   959                           	callstack 0
   960                           
   961                           ; 8 bytes @ 0x17
   962   000077                     	ds	8
   963   00007F                     vfpfcnvrt@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x1F
   967   00007F                     	ds	1
   968   000080                     vfpfcnvrt@done:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x20
   972   000080                     	ds	2
   973   000082                     vfpfcnvrt@cp:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x22
   977   000082                     	ds	2
   978   000084                     ?_vfprintf:
   979                           	callstack 0
   980   000084                     vfprintf@fp:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x24
   984   000084                     	ds	2
   985   000086                     vfprintf@fmt:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x26
   989   000086                     	ds	2
   990   000088                     vfprintf@ap:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x28
   994   000088                     	ds	2
   995   00008A                     ?_printf:
   996                           	callstack 0
   997   00008A                     printf@fmt:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x2A
  1001   00008A                     	ds	4
  1002   00008E                     ??_main:
  1003                           
  1004                           ; 1 bytes @ 0x2E
  1005   00008E                     	ds	8
  1006   000096                     main@startTime:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x36
  1010   000096                     	ds	2
  1011   000098                     main@stopTime:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x38
  1015   000098                     	ds	2
  1016   00009A                     main@mintime:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x3A
  1020   00009A                     	ds	4
  1021   00009E                     main@maxtime:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x3E
  1025   00009E                     	ds	4
  1026   0000A2                     main@cmd:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x42
  1030   0000A2                     	ds	1
  1031   0000A3                     main@overallTime:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x43
  1035   0000A3                     	ds	2
  1036   0000A5                     main@i_961:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x45
  1040   0000A5                     	ds	1
  1041   0000A6                     main@i:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x46
  1045   0000A6                     	ds	1
  1046                           
  1047                           	psect	cstackCOMRAM
  1048   000001                     __pcstackCOMRAM:
  1049                           	callstack 0
  1050   000001                     i2TMR0_WriteTimer@timerVal:
  1051                           	callstack 0
  1052   000001                     i2TMR1_WriteTimer@timerVal:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x0
  1056   000001                     	ds	2
  1057   000003                     ??_myTMR0ISR:
  1058   000003                     ??_myTMR1ISR:
  1059   000003                     
  1060                           ; 1 bytes @ 0x2
  1061   000003                     	ds	5
  1062   000008                     
  1063                           ; 1 bytes @ 0x7
  1064   000008                     	ds	1
  1065   000009                     ??_INTERRUPT_InterruptManager:
  1066                           
  1067                           ; 1 bytes @ 0x8
  1068   000009                     	ds	6
  1069   00000F                     ?_isdigit:
  1070                           	callstack 0
  1071   00000F                     ?_isspace:
  1072                           	callstack 0
  1073   00000F                     ?_TMR0_ReadTimer:
  1074                           	callstack 0
  1075   00000F                     ?_TMR1_ReadTimer:
  1076                           	callstack 0
  1077   00000F                     ?___wmul:
  1078                           	callstack 0
  1079   00000F                     TMR0_WriteTimer@timerVal:
  1080                           	callstack 0
  1081   00000F                     TMR0_SetInterruptHandler@InterruptHandler:
  1082                           	callstack 0
  1083   00000F                     TMR1_WriteTimer@timerVal:
  1084                           	callstack 0
  1085   00000F                     TMR1_SetInterruptHandler@InterruptHandler:
  1086                           	callstack 0
  1087   00000F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1088                           	callstack 0
  1089   00000F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1090                           	callstack 0
  1091   00000F                     EUSART1_SetErrorHandler@interruptHandler:
  1092                           	callstack 0
  1093   00000F                     ___wmul@multiplier:
  1094                           	callstack 0
  1095   00000F                     isdigit@c:
  1096                           	callstack 0
  1097   00000F                     isspace@c:
  1098                           	callstack 0
  1099   00000F                     fputc@c:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0xE
  1103   00000F                     	ds	2
  1104   000011                     ??_TMR0_Initialize:
  1105   000011                     ??_isdigit:
  1106   000011                     ??_isspace:
  1107   000011                     ??_TMR0_ReadTimer:
  1108   000011                     ??_TMR1_ReadTimer:
  1109   000011                     ___wmul@multiplicand:
  1110                           	callstack 0
  1111   000011                     fputc@fp:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x10
  1115   000011                     	ds	2
  1116   000013                     ??_fputc:
  1117   000013                     _isspace$1789:
  1118                           	callstack 0
  1119   000013                     TMR0_ReadTimer@readVal:
  1120                           	callstack 0
  1121   000013                     TMR1_ReadTimer@readVal:
  1122                           	callstack 0
  1123   000013                     ___wmul@product:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x12
  1127   000013                     	ds	2
  1128   000015                     ?_atoi:
  1129                           	callstack 0
  1130   000015                     TMR0_ReadTimer@readValLow:
  1131                           	callstack 0
  1132   000015                     TMR1_ReadTimer@readValHigh:
  1133                           	callstack 0
  1134   000015                     atoi@s:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x14
  1138   000015                     	ds	1
  1139   000016                     TMR0_ReadTimer@readValHigh:
  1140                           	callstack 0
  1141   000016                     TMR1_ReadTimer@readValLow:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x15
  1145   000016                     	ds	1
  1146   000017                     ??_atoi:
  1147                           
  1148                           ; 1 bytes @ 0x16
  1149   000017                     	ds	1
  1150   000018                     ctoa@fp:
  1151                           	callstack 0
  1152   000018                     fputs@s:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x17
  1156   000018                     	ds	2
  1157   00001A                     ctoa@c:
  1158                           	callstack 0
  1159   00001A                     atoi@neg:
  1160                           	callstack 0
  1161   00001A                     fputs@fp:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x19
  1165   00001A                     	ds	1
  1166   00001B                     ??_ctoa:
  1167                           
  1168                           ; 1 bytes @ 0x1A
  1169   00001B                     	ds	1
  1170   00001C                     fputs@c:
  1171                           	callstack 0
  1172   00001C                     ctoa@l:
  1173                           	callstack 0
  1174   00001C                     atoi@n:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x1B
  1178   00001C                     	ds	1
  1179   00001D                     fputs@i:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x1C
  1183   00001D                     	ds	1
  1184   00001E                     ctoa@w:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x1D
  1188   00001E                     	ds	1
  1189   00001F                     pad@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x1E
  1193   00001F                     	ds	2
  1194   000021                     pad@buf:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x20
  1198   000021                     	ds	2
  1199   000023                     pad@p:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x22
  1203   000023                     	ds	2
  1204   000025                     ??_pad:
  1205                           
  1206                           ; 1 bytes @ 0x24
  1207   000025                     	ds	1
  1208   000026                     pad@i:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x25
  1212   000026                     	ds	2
  1213   000028                     pad@w:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x27
  1217   000028                     	ds	2
  1218   00002A                     xtoa@fp:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x29
  1222   00002A                     	ds	2
  1223   00002C                     xtoa@d:
  1224                           	callstack 0
  1225                           
  1226                           ; 8 bytes @ 0x2B
  1227   00002C                     	ds	8
  1228   000034                     ??_xtoa:
  1229                           
  1230                           ; 1 bytes @ 0x33
  1231   000034                     	ds	8
  1232   00003C                     ??_vfpfcnvrt:
  1233                           
  1234                           ; 1 bytes @ 0x3B
  1235   00003C                     	ds	4
  1236   000040                     vfprintf@cfmt:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x3F
  1240   000040                     	ds	2
  1241   000042                     printf@ap:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x41
  1245   000042                     	ds	2
  1246                           
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 106 in file "main.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  i               1   69[BANK0 ] unsigned char 
  1257 ;;  maxtime         4   62[BANK0 ] unsigned long 
  1258 ;;  mintime         4   58[BANK0 ] unsigned long 
  1259 ;;  overallTime     2   67[BANK0 ] unsigned short 
  1260 ;;  stopTime        2   56[BANK0 ] unsigned short 
  1261 ;;  startTime       2   54[BANK0 ] unsigned short 
  1262 ;;  i               1   70[BANK0 ] unsigned char 
  1263 ;;  cmd             1   66[BANK0 ] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1273 ;;      Params:         0       0       0       0       0       0       0
  1274 ;;      Locals:         0      17       0       0       0       0       0
  1275 ;;      Temps:          0       8       0       0       0       0       0
  1276 ;;      Totals:         0      25       0       0       0       0       0
  1277 ;;Total ram usage:       25 bytes
  1278 ;; Hardware stack levels required when called: 12
  1279 ;; This function calls:
  1280 ;;		_EUSART1_Read
  1281 ;;		_EUSART1_is_rx_ready
  1282 ;;		_SYSTEM_Initialize
  1283 ;;		_TMR0_ReadTimer
  1284 ;;		_TMR0_SetInterruptHandler
  1285 ;;		_TMR0_WriteTimer
  1286 ;;		_TMR1_ReadTimer
  1287 ;;		_TMR1_SetInterruptHandler
  1288 ;;		_TMR1_WriteTimer
  1289 ;;		_printf
  1290 ;; This function is called by:
  1291 ;;		Startup code after reset
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text0
  1296   000098                     __ptext0:
  1297                           	callstack 0
  1298   000098                     _main:
  1299                           	callstack 19
  1300   000098                     
  1301                           ;main.c: 112:     uint16_t stopTime = 0;
  1302   000098  0E00               	movlw	0
  1303   00009A  0100               	movlb	0	; () banked
  1304   00009C  6F99               	movwf	(main@stopTime+1)& (0+255),b
  1305   00009E  0E00               	movlw	0
  1306   0000A0  6F98               	movwf	main@stopTime& (0+255),b
  1307                           
  1308                           ;main.c: 113:     uint16_t overallTime = 0;
  1309   0000A2  0E00               	movlw	0
  1310   0000A4  6FA4               	movwf	(main@overallTime+1)& (0+255),b
  1311   0000A6  0E00               	movlw	0
  1312   0000A8  6FA3               	movwf	main@overallTime& (0+255),b
  1313                           
  1314                           ;main.c: 114:     uint32_t mintime = 0;
  1315   0000AA  0E00               	movlw	0
  1316   0000AC  6F9A               	movwf	main@mintime& (0+255),b
  1317   0000AE  0E00               	movlw	0
  1318   0000B0  6F9B               	movwf	(main@mintime+1)& (0+255),b
  1319   0000B2  0E00               	movlw	0
  1320   0000B4  6F9C               	movwf	(main@mintime+2)& (0+255),b
  1321   0000B6  0E00               	movlw	0
  1322   0000B8  6F9D               	movwf	(main@mintime+3)& (0+255),b
  1323                           
  1324                           ;main.c: 115:     uint32_t maxtime = 0;
  1325   0000BA  0E00               	movlw	0
  1326   0000BC  6F9E               	movwf	main@maxtime& (0+255),b
  1327   0000BE  0E00               	movlw	0
  1328   0000C0  6F9F               	movwf	(main@maxtime+1)& (0+255),b
  1329   0000C2  0E00               	movlw	0
  1330   0000C4  6FA0               	movwf	(main@maxtime+2)& (0+255),b
  1331   0000C6  0E00               	movlw	0
  1332   0000C8  6FA1               	movwf	(main@maxtime+3)& (0+255),b
  1333   0000CA                     
  1334                           ; BSR set to: 0
  1335                           ;main.c: 117:     SYSTEM_Initialize();
  1336   0000CA  ECED  F009         	call	_SYSTEM_Initialize	;wreg free
  1337   0000CE                     
  1338                           ;main.c: 119:     TMR0_WriteTimer(0x0000);
  1339   0000CE  0E00               	movlw	0
  1340   0000D0  6E10               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1341   0000D2  0E00               	movlw	0
  1342   0000D4  6E0F               	movwf	TMR0_WriteTimer@timerVal^0,c
  1343   0000D6  EC0B  F00A         	call	_TMR0_WriteTimer	;wreg free
  1344   0000DA                     
  1345                           ;main.c: 120:     TMR1_WriteTimer(0x0000);
  1346   0000DA  0E00               	movlw	0
  1347   0000DC  6E10               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  1348   0000DE  0E00               	movlw	0
  1349   0000E0  6E0F               	movwf	TMR1_WriteTimer@timerVal^0,c
  1350   0000E2  EC6D  F009         	call	_TMR1_WriteTimer	;wreg free
  1351   0000E6                     
  1352                           ;main.c: 121:     INTCONbits.TMR0IF = 0;
  1353   0000E6  94F2               	bcf	242,2,c	;volatile
  1354   0000E8                     l237:
  1355   0000E8  A4F2               	btfss	242,2,c	;volatile
  1356   0000EA  EF79  F000         	goto	u1911
  1357   0000EE  EF7B  F000         	goto	u1910
  1358   0000F2                     u1911:
  1359   0000F2  EF74  F000         	goto	l237
  1360   0000F6                     u1910:
  1361   0000F6                     
  1362                           ;main.c: 124:     TMR0_SetInterruptHandler(myTMR0ISR);
  1363   0000F6  0EC4               	movlw	low _myTMR0ISR
  1364   0000F8  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1365   0000FA  0E0B               	movlw	high _myTMR0ISR
  1366   0000FC  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1367   0000FE  EC15  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  1368                           
  1369                           ;main.c: 125:     TMR1_SetInterruptHandler(myTMR1ISR);
  1370   000102  0EFA               	movlw	low _myTMR1ISR
  1371   000104  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  1372   000106  0E0E               	movlw	high _myTMR1ISR
  1373   000108  6E10               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  1374   00010A  EC10  F00A         	call	_TMR1_SetInterruptHandler	;wreg free
  1375   00010E                     
  1376                           ;main.c: 126:     (INTCONbits.GIE = 1);
  1377   00010E  8EF2               	bsf	242,7,c	;volatile
  1378   000110                     
  1379                           ;main.c: 127:     (INTCONbits.PEIE = 1);
  1380   000110  8CF2               	bsf	242,6,c	;volatile
  1381   000112                     
  1382                           ;main.c: 129:     printf("inLab 04\r\n");
  1383   000112  0ED9               	movlw	low STR_1
  1384   000114  0100               	movlb	0	; () banked
  1385   000116  6F8A               	movwf	printf@fmt& (0+255),b
  1386   000118  0E7F               	movlw	high STR_1
  1387   00011A  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1388   00011C  EC59  F009         	call	_printf	;wreg free
  1389   000120                     
  1390                           ;main.c: 130:     printf("Interrupt Music Box\r\n");
  1391   000120  0E0F               	movlw	low STR_2
  1392   000122  0100               	movlb	0	; () banked
  1393   000124  6F8A               	movwf	printf@fmt& (0+255),b
  1394   000126  0E7F               	movlw	high STR_2
  1395   000128  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1396   00012A  EC59  F009         	call	_printf	;wreg free
  1397   00012E                     
  1398                           ;main.c: 131:     printf("Dev'21\r\n");
  1399   00012E  0EE4               	movlw	low STR_3
  1400   000130  0100               	movlb	0	; () banked
  1401   000132  6F8A               	movwf	printf@fmt& (0+255),b
  1402   000134  0E7F               	movlw	high STR_3
  1403   000136  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1404   000138  EC59  F009         	call	_printf	;wreg free
  1405   00013C                     
  1406                           ;main.c: 132:     printf("Board wiring\r\n");
  1407   00013C  0E99               	movlw	low STR_4
  1408   00013E  0100               	movlb	0	; () banked
  1409   000140  6F8A               	movwf	printf@fmt& (0+255),b
  1410   000142  0E7F               	movlw	high STR_4
  1411   000144  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1412   000146  EC59  F009         	call	_printf	;wreg free
  1413   00014A                     
  1414                           ;main.c: 133:     printf("RB5 -> LPFin and install LPFout/AMPin jumper");
  1415   00014A  0E73               	movlw	low STR_5
  1416   00014C  0100               	movlb	0	; () banked
  1417   00014E  6F8A               	movwf	printf@fmt& (0+255),b
  1418   000150  0E7E               	movlw	high STR_5
  1419   000152  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1420   000154  EC59  F009         	call	_printf	;wreg free
  1421   000158                     
  1422                           ;main.c: 134:     printf("\r\n> ");
  1423   000158  0EF9               	movlw	low STR_6
  1424   00015A  0100               	movlb	0	; () banked
  1425   00015C  6F8A               	movwf	printf@fmt& (0+255),b
  1426   00015E  0E7F               	movlw	high STR_6
  1427   000160  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1428   000162  EC59  F009         	call	_printf	;wreg free
  1429   000166                     l3062:
  1430                           
  1431                           ;main.c: 137:     {;main.c: 138:         if((EUSART1_is_rx_ready()))
  1432   000166  ECFA  F009         	call	_EUSART1_is_rx_ready	;wreg free
  1433   00016A  0900               	iorlw	0
  1434   00016C  B4D8               	btfsc	status,2,c
  1435   00016E  EFBB  F000         	goto	u1921
  1436   000172  EFBD  F000         	goto	u1920
  1437   000176                     u1921:
  1438   000176  EFB3  F000         	goto	l3062
  1439   00017A                     u1920:
  1440   00017A                     
  1441                           ;main.c: 139:         {;main.c: 141:             cmd = EUSART1_Read();
  1442   00017A  EC81  F009         	call	_EUSART1_Read	;wreg free
  1443   00017E  0100               	movlb	0	; () banked
  1444   000180  6FA2               	movwf	main@cmd& (0+255),b
  1445                           
  1446                           ;main.c: 143:             switch (cmd)
  1447   000182  EF9F  F002         	goto	l3170
  1448   000186                     l3066:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 146:                     printf("------------------------------\r\n");
  1452   000186  0EA0               	movlw	low STR_7
  1453   000188  6F8A               	movwf	printf@fmt& (0+255),b
  1454   00018A  0E7E               	movlw	high STR_7
  1455   00018C  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1456   00018E  EC59  F009         	call	_printf	;wreg free
  1457                           
  1458                           ;main.c: 147:                     printf("        TMR1 = 0x%04x\r\n", TMR1_ReadTimer());
  1459   000192  0EF7               	movlw	low STR_8
  1460   000194  0100               	movlb	0	; () banked
  1461   000196  6F8A               	movwf	printf@fmt& (0+255),b
  1462   000198  0E7E               	movlw	high STR_8
  1463   00019A  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1464   00019C  ECCE  F009         	call	_TMR1_ReadTimer	;wreg free
  1465   0001A0  C00F  F08C         	movff	?_TMR1_ReadTimer,?_printf+2
  1466   0001A4  C010  F08D         	movff	?_TMR1_ReadTimer+1,?_printf+3
  1467   0001A8  EC59  F009         	call	_printf	;wreg free
  1468                           
  1469                           ;main.c: 148:                     printf("------------------------------\r\n");
  1470   0001AC  0EA0               	movlw	low STR_7
  1471   0001AE  0100               	movlb	0	; () banked
  1472   0001B0  6F8A               	movwf	printf@fmt& (0+255),b
  1473   0001B2  0E7E               	movlw	high STR_7
  1474   0001B4  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1475   0001B6  EC59  F009         	call	_printf	;wreg free
  1476                           
  1477                           ;main.c: 149:                     printf("?: Help menu\r\n");
  1478   0001BA  0EA8               	movlw	low STR_10
  1479   0001BC  0100               	movlb	0	; () banked
  1480   0001BE  6F8A               	movwf	printf@fmt& (0+255),b
  1481   0001C0  0E7F               	movlw	high STR_10
  1482   0001C2  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1483   0001C4  EC59  F009         	call	_printf	;wreg free
  1484                           
  1485                           ;main.c: 150:                     printf("o: k\r\n");
  1486   0001C8  0EED               	movlw	low STR_11
  1487   0001CA  0100               	movlb	0	; () banked
  1488   0001CC  6F8A               	movwf	printf@fmt& (0+255),b
  1489   0001CE  0E7F               	movlw	high STR_11
  1490   0001D0  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1491   0001D2  EC59  F009         	call	_printf	;wreg free
  1492                           
  1493                           ;main.c: 151:                     printf("Z: Reset processor\r\n");
  1494   0001D6  0E3A               	movlw	low STR_12
  1495   0001D8  0100               	movlb	0	; () banked
  1496   0001DA  6F8A               	movwf	printf@fmt& (0+255),b
  1497   0001DC  0E7F               	movlw	high STR_12
  1498   0001DE  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1499   0001E0  EC59  F009         	call	_printf	;wreg free
  1500                           
  1501                           ;main.c: 152:                     printf("z: Clear the terminal\r\n");
  1502   0001E4  0EDF               	movlw	low STR_13
  1503   0001E6  0100               	movlb	0	; () banked
  1504   0001E8  6F8A               	movwf	printf@fmt& (0+255),b
  1505   0001EA  0E7E               	movlw	high STR_13
  1506   0001EC  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1507   0001EE  EC59  F009         	call	_printf	;wreg free
  1508                           
  1509                           ;main.c: 153:                     printf("p: play song once\r\n");
  1510   0001F2  0E4F               	movlw	low STR_14
  1511   0001F4  0100               	movlb	0	; () banked
  1512   0001F6  6F8A               	movwf	printf@fmt& (0+255),b
  1513   0001F8  0E7F               	movlw	high STR_14
  1514   0001FA  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1515   0001FC  EC59  F009         	call	_printf	;wreg free
  1516                           
  1517                           ;main.c: 154:                     printf("r: Rhythm practice\r\n");
  1518   000200  0E25               	movlw	low STR_15
  1519   000202  0100               	movlb	0	; () banked
  1520   000204  6F8A               	movwf	printf@fmt& (0+255),b
  1521   000206  0E7F               	movlw	high STR_15
  1522   000208  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1523   00020A  EC59  F009         	call	_printf	;wreg free
  1524                           
  1525                           ;main.c: 155:                     printf("------------------------------\r\n");
  1526   00020E  0EA0               	movlw	low STR_7
  1527   000210  0100               	movlb	0	; () banked
  1528   000212  6F8A               	movwf	printf@fmt& (0+255),b
  1529   000214  0E7E               	movlw	high STR_7
  1530   000216  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1531   000218  EC59  F009         	call	_printf	;wreg free
  1532                           
  1533                           ;main.c: 156:                     break;
  1534   00021C  EFB3  F000         	goto	l3062
  1535   000220                     l3068:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;main.c: 158:                     printf("k.\r\n");
  1539   000220  0EF4               	movlw	low STR_17
  1540   000222  6F8A               	movwf	printf@fmt& (0+255),b
  1541   000224  0E7F               	movlw	high STR_17
  1542   000226  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1543   000228  EC59  F009         	call	_printf	;wreg free
  1544                           
  1545                           ;main.c: 159:                     break;
  1546   00022C  EFB3  F000         	goto	l3062
  1547   000230                     l3070:
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;main.c: 161:                     for (i = 0; i < 40; i++) printf("\r\n");
  1551   000230  0E00               	movlw	0
  1552   000232  6FA6               	movwf	main@i& (0+255),b
  1553   000234                     l3076:
  1554                           
  1555                           ; BSR set to: 0
  1556   000234  0EBE               	movlw	low (STR_7+30)
  1557   000236  6F8A               	movwf	printf@fmt& (0+255),b
  1558   000238  0E7E               	movlw	high (STR_7+30)
  1559   00023A  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1560   00023C  EC59  F009         	call	_printf	;wreg free
  1561   000240  0100               	movlb	0	; () banked
  1562   000242  2BA6               	incf	main@i& (0+255),f,b
  1563   000244                     
  1564                           ; BSR set to: 0
  1565   000244  0E27               	movlw	39
  1566   000246  65A6               	cpfsgt	main@i& (0+255),b
  1567   000248  EF28  F001         	goto	u1931
  1568   00024C  EF2A  F001         	goto	u1930
  1569   000250                     u1931:
  1570   000250  EF1A  F001         	goto	l3076
  1571   000254                     u1930:
  1572   000254                     
  1573                           ; BSR set to: 0
  1574   000254  00FF               	reset		;# 
  1575                           
  1576                           ;main.c: 163:                     break;
  1577   000256  EFB3  F000         	goto	l3062
  1578   00025A                     l3082:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 165:                     for (i = 0; i < 40; i++) printf("\r\n");
  1582   00025A  0E00               	movlw	0
  1583   00025C  6FA6               	movwf	main@i& (0+255),b
  1584   00025E                     l3088:
  1585                           
  1586                           ; BSR set to: 0
  1587   00025E  0EBE               	movlw	low (STR_7+30)
  1588   000260  6F8A               	movwf	printf@fmt& (0+255),b
  1589   000262  0E7E               	movlw	high (STR_7+30)
  1590   000264  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1591   000266  EC59  F009         	call	_printf	;wreg free
  1592   00026A  0100               	movlb	0	; () banked
  1593   00026C  2BA6               	incf	main@i& (0+255),f,b
  1594   00026E                     
  1595                           ; BSR set to: 0
  1596   00026E  0E27               	movlw	39
  1597   000270  65A6               	cpfsgt	main@i& (0+255),b
  1598   000272  EF3D  F001         	goto	u1941
  1599   000276  EF3F  F001         	goto	u1940
  1600   00027A                     u1941:
  1601   00027A  EF2F  F001         	goto	l3088
  1602   00027E                     u1940:
  1603   00027E  EFB3  F000         	goto	l3062
  1604   000282                     l3094:
  1605                           
  1606                           ; BSR set to: 0
  1607                           ;main.c: 169:                     printf("Play song once.\r\n");
  1608   000282  0E76               	movlw	low STR_20
  1609   000284  6F8A               	movwf	printf@fmt& (0+255),b
  1610   000286  0E7F               	movlw	high STR_20
  1611   000288  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1612   00028A  EC59  F009         	call	_printf	;wreg free
  1613                           
  1614                           ;main.c: 170:                     printf("Playing.\r\n");
  1615   00028E  0EC3               	movlw	low STR_21
  1616   000290  0100               	movlb	0	; () banked
  1617   000292  6F8A               	movwf	printf@fmt& (0+255),b
  1618   000294  0E7F               	movlw	high STR_21
  1619   000296  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1620   000298  EC59  F009         	call	_printf	;wreg free
  1621   00029C                     
  1622                           ;main.c: 172:                     songSelection = 1;
  1623   00029C  0E01               	movlw	1
  1624   00029E  0100               	movlb	0	; () banked
  1625   0002A0  6FCD               	movwf	_songSelection& (0+255),b
  1626   0002A2                     
  1627                           ; BSR set to: 0
  1628                           ;main.c: 173:                     songLength = 3;
  1629   0002A2  0E03               	movlw	3
  1630   0002A4  6FCC               	movwf	_songLength& (0+255),b
  1631   0002A6                     
  1632                           ; BSR set to: 0
  1633                           ;main.c: 174:                     playSong = 1;
  1634   0002A6  0E01               	movlw	1
  1635   0002A8  6FCB               	movwf	_playSong& (0+255),b
  1636                           
  1637                           ;main.c: 175:                     break;
  1638   0002AA  EFB3  F000         	goto	l3062
  1639   0002AE                     l3102:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 178:                     printf("Rhythm practice.\r\n");
  1643   0002AE  0E63               	movlw	low STR_22
  1644   0002B0  6F8A               	movwf	printf@fmt& (0+255),b
  1645   0002B2  0E7F               	movlw	high STR_22
  1646   0002B4  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1647   0002B6  EC59  F009         	call	_printf	;wreg free
  1648                           
  1649                           ;main.c: 180:                     printf("Listen to the beat pattern.\r\n");
  1650   0002BA  0EC1               	movlw	low STR_23
  1651   0002BC  0100               	movlb	0	; () banked
  1652   0002BE  6F8A               	movwf	printf@fmt& (0+255),b
  1653   0002C0  0E7E               	movlw	high STR_23
  1654   0002C2  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1655   0002C4  EC59  F009         	call	_printf	;wreg free
  1656   0002C8                     
  1657                           ;main.c: 182:                     songSelection = 1;
  1658   0002C8  0E01               	movlw	1
  1659   0002CA  0100               	movlb	0	; () banked
  1660   0002CC  6FCD               	movwf	_songSelection& (0+255),b
  1661   0002CE                     
  1662                           ; BSR set to: 0
  1663                           ;main.c: 183:                     songLength = 3;
  1664   0002CE  0E03               	movlw	3
  1665   0002D0  6FCC               	movwf	_songLength& (0+255),b
  1666   0002D2                     
  1667                           ; BSR set to: 0
  1668                           ;main.c: 184:                     playSong = 1;
  1669   0002D2  0E01               	movlw	1
  1670   0002D4  6FCB               	movwf	_playSong& (0+255),b
  1671   0002D6                     l3110:
  1672                           
  1673                           ; BSR set to: 0
  1674   0002D6  05CB               	decf	_playSong& (0+255),w,b
  1675   0002D8  B4D8               	btfsc	status,2,c
  1676   0002DA  EF71  F001         	goto	u1951
  1677   0002DE  EF73  F001         	goto	u1950
  1678   0002E2                     u1951:
  1679   0002E2  EF6B  F001         	goto	l3110
  1680   0002E6                     u1950:
  1681   0002E6                     
  1682                           ; BSR set to: 0
  1683                           ;main.c: 187:                     printf("Use the upper button to reproduce this pattern
      +                          .\r\n");
  1684   0002E6  0E41               	movlw	low STR_24
  1685   0002E8  6F8A               	movwf	printf@fmt& (0+255),b
  1686   0002EA  0E7E               	movlw	high STR_24
  1687   0002EC  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1688   0002EE  EC59  F009         	call	_printf	;wreg free
  1689   0002F2                     
  1690                           ;main.c: 189:                     for (uint8_t i = 0; i < songLength; i++)
  1691   0002F2  0E00               	movlw	0
  1692   0002F4  0100               	movlb	0	; () banked
  1693   0002F6  6FA5               	movwf	main@i_961& (0+255),b
  1694   0002F8  EF89  F002         	goto	l3164
  1695   0002FC                     l258:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;main.c: 190:                     {;main.c: 192:                         (INTCONbits.GIE
      +                           = 0);
  1699   0002FC  9EF2               	bcf	242,7,c	;volatile
  1700                           
  1701                           ;main.c: 193:                         (INTCONbits.PEIE = 0);
  1702   0002FE  9CF2               	bcf	242,6,c	;volatile
  1703   000300                     l259:
  1704   000300  BA80               	btfsc	128,5,c	;volatile
  1705   000302  EF85  F001         	goto	u1961
  1706   000306  EF87  F001         	goto	u1960
  1707   00030A                     u1961:
  1708   00030A  EF80  F001         	goto	l259
  1709   00030E                     u1960:
  1710   00030E                     
  1711                           ;main.c: 195:                         TMR0_WriteTimer(0x10000);
  1712   00030E  0E00               	movlw	0
  1713   000310  6E10               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1714   000312  0E00               	movlw	0
  1715   000314  6E0F               	movwf	TMR0_WriteTimer@timerVal^0,c
  1716   000316  EC0B  F00A         	call	_TMR0_WriteTimer	;wreg free
  1717                           
  1718                           ;main.c: 196:                         startTime = TMR0_ReadTimer();
  1719   00031A  ECDE  F009         	call	_TMR0_ReadTimer	;wreg free
  1720   00031E  C00F  F096         	movff	?_TMR0_ReadTimer,main@startTime
  1721   000322  C010  F097         	movff	?_TMR0_ReadTimer+1,main@startTime+1
  1722   000326                     l262:
  1723   000326  AA80               	btfss	128,5,c	;volatile
  1724   000328  EF98  F001         	goto	u1971
  1725   00032C  EF9A  F001         	goto	u1970
  1726   000330                     u1971:
  1727   000330  EF93  F001         	goto	l262
  1728   000334                     u1970:
  1729   000334                     
  1730                           ;main.c: 198:                         stopTime = TMR0_ReadTimer();
  1731   000334  ECDE  F009         	call	_TMR0_ReadTimer	;wreg free
  1732   000338  C00F  F098         	movff	?_TMR0_ReadTimer,main@stopTime
  1733   00033C  C010  F099         	movff	?_TMR0_ReadTimer+1,main@stopTime+1
  1734   000340                     
  1735                           ;main.c: 199:                         (INTCONbits.GIE = 1);
  1736   000340  8EF2               	bsf	242,7,c	;volatile
  1737   000342                     
  1738                           ;main.c: 200:                         (INTCONbits.PEIE = 1);
  1739   000342  8CF2               	bsf	242,6,c	;volatile
  1740   000344                     
  1741                           ;main.c: 201:                         overallTime = stopTime - startTime;
  1742   000344  0100               	movlb	0	; () banked
  1743   000346  5196               	movf	main@startTime& (0+255),w,b
  1744   000348  5D98               	subwf	main@stopTime& (0+255),w,b
  1745   00034A  6FA3               	movwf	main@overallTime& (0+255),b
  1746   00034C  5197               	movf	(main@startTime+1)& (0+255),w,b
  1747   00034E  5999               	subwfb	(main@stopTime+1)& (0+255),w,b
  1748   000350  6FA4               	movwf	(main@overallTime+1)& (0+255),b
  1749   000352                     
  1750                           ; BSR set to: 0
  1751                           ;main.c: 203:                         mintime = duration[songSelection][i] - 5000;
  1752   000352  51A5               	movf	main@i_961& (0+255),w,b
  1753   000354  0D02               	mullw	2
  1754   000356  CFF3 F08E          	movff	prodl,??_main
  1755   00035A  CFF4 F08F          	movff	prodh,??_main+1
  1756   00035E  51CD               	movf	_songSelection& (0+255),w,b
  1757   000360  0D18               	mullw	24
  1758   000362  0E00               	movlw	low _duration
  1759   000364  24F3               	addwf	243,w,c
  1760   000366  6F90               	movwf	(??_main+2)& (0+255),b
  1761   000368  0E01               	movlw	high _duration
  1762   00036A  20F4               	addwfc	prodh,w,c
  1763   00036C  6F91               	movwf	(??_main+3)& (0+255),b
  1764   00036E  518E               	movf	??_main& (0+255),w,b
  1765   000370  2590               	addwf	(??_main+2)& (0+255),w,b
  1766   000372  6ED9               	movwf	fsr2l,c
  1767   000374  518F               	movf	(??_main+1)& (0+255),w,b
  1768   000376  2191               	addwfc	(??_main+3)& (0+255),w,b
  1769   000378  6EDA               	movwf	fsr2h,c
  1770   00037A  CFDE F092          	movff	postinc2,??_main+4
  1771   00037E  CFDD F093          	movff	postdec2,??_main+5
  1772   000382  0E78               	movlw	120
  1773   000384  2592               	addwf	(??_main+4)& (0+255),w,b
  1774   000386  6F94               	movwf	(??_main+6)& (0+255),b
  1775   000388  0EEC               	movlw	236
  1776   00038A  2193               	addwfc	(??_main+5)& (0+255),w,b
  1777   00038C  6F95               	movwf	(??_main+7)& (0+255),b
  1778   00038E  C094  F09A         	movff	??_main+6,main@mintime
  1779   000392  C095  F09B         	movff	??_main+7,main@mintime+1
  1780   000396  6B9C               	clrf	(main@mintime+2)& (0+255),b
  1781   000398  6B9D               	clrf	(main@mintime+3)& (0+255),b
  1782   00039A                     
  1783                           ; BSR set to: 0
  1784                           ;main.c: 204:                         maxtime = duration[songSelection][i] + 5000;
  1785   00039A  51A5               	movf	main@i_961& (0+255),w,b
  1786   00039C  0D02               	mullw	2
  1787   00039E  CFF3 F08E          	movff	prodl,??_main
  1788   0003A2  CFF4 F08F          	movff	prodh,??_main+1
  1789   0003A6  51CD               	movf	_songSelection& (0+255),w,b
  1790   0003A8  0D18               	mullw	24
  1791   0003AA  0E00               	movlw	low _duration
  1792   0003AC  24F3               	addwf	243,w,c
  1793   0003AE  6F90               	movwf	(??_main+2)& (0+255),b
  1794   0003B0  0E01               	movlw	high _duration
  1795   0003B2  20F4               	addwfc	prodh,w,c
  1796   0003B4  6F91               	movwf	(??_main+3)& (0+255),b
  1797   0003B6  518E               	movf	??_main& (0+255),w,b
  1798   0003B8  2590               	addwf	(??_main+2)& (0+255),w,b
  1799   0003BA  6ED9               	movwf	fsr2l,c
  1800   0003BC  518F               	movf	(??_main+1)& (0+255),w,b
  1801   0003BE  2191               	addwfc	(??_main+3)& (0+255),w,b
  1802   0003C0  6EDA               	movwf	fsr2h,c
  1803   0003C2  CFDE F092          	movff	postinc2,??_main+4
  1804   0003C6  CFDD F093          	movff	postdec2,??_main+5
  1805   0003CA  0E88               	movlw	136
  1806   0003CC  2592               	addwf	(??_main+4)& (0+255),w,b
  1807   0003CE  6F94               	movwf	(??_main+6)& (0+255),b
  1808   0003D0  0E13               	movlw	19
  1809   0003D2  2193               	addwfc	(??_main+5)& (0+255),w,b
  1810   0003D4  6F95               	movwf	(??_main+7)& (0+255),b
  1811   0003D6  C094  F09E         	movff	??_main+6,main@maxtime
  1812   0003DA  C095  F09F         	movff	??_main+7,main@maxtime+1
  1813   0003DE  6BA0               	clrf	(main@maxtime+2)& (0+255),b
  1814   0003E0  6BA1               	clrf	(main@maxtime+3)& (0+255),b
  1815   0003E2                     
  1816                           ; BSR set to: 0
  1817                           ;main.c: 206:                         if((overallTime > mintime) && (overallTime < maxti
      +                          me) && (i == songLength-1))
  1818   0003E2  51A3               	movf	main@overallTime& (0+255),w,b
  1819   0003E4  6F8E               	movwf	??_main& (0+255),b
  1820   0003E6  51A4               	movf	(main@overallTime+1)& (0+255),w,b
  1821   0003E8  6F8F               	movwf	(??_main+1)& (0+255),b
  1822   0003EA  6B90               	clrf	(??_main+2)& (0+255),b
  1823   0003EC  6B91               	clrf	(??_main+3)& (0+255),b
  1824   0003EE  518E               	movf	??_main& (0+255),w,b
  1825   0003F0  5D9A               	subwf	main@mintime& (0+255),w,b
  1826   0003F2  518F               	movf	(??_main+1)& (0+255),w,b
  1827   0003F4  599B               	subwfb	(main@mintime+1)& (0+255),w,b
  1828   0003F6  5190               	movf	(??_main+2)& (0+255),w,b
  1829   0003F8  599C               	subwfb	(main@mintime+2)& (0+255),w,b
  1830   0003FA  5191               	movf	(??_main+3)& (0+255),w,b
  1831   0003FC  599D               	subwfb	(main@mintime+3)& (0+255),w,b
  1832   0003FE  B0D8               	btfsc	status,0,c
  1833   000400  EF04  F002         	goto	u1981
  1834   000404  EF06  F002         	goto	u1980
  1835   000408                     u1981:
  1836   000408  EF47  F002         	goto	l3148
  1837   00040C                     u1980:
  1838   00040C                     
  1839                           ; BSR set to: 0
  1840   00040C  51A3               	movf	main@overallTime& (0+255),w,b
  1841   00040E  6F8E               	movwf	??_main& (0+255),b
  1842   000410  51A4               	movf	(main@overallTime+1)& (0+255),w,b
  1843   000412  6F8F               	movwf	(??_main+1)& (0+255),b
  1844   000414  6B90               	clrf	(??_main+2)& (0+255),b
  1845   000416  6B91               	clrf	(??_main+3)& (0+255),b
  1846   000418  519E               	movf	main@maxtime& (0+255),w,b
  1847   00041A  5D8E               	subwf	??_main& (0+255),w,b
  1848   00041C  519F               	movf	(main@maxtime+1)& (0+255),w,b
  1849   00041E  598F               	subwfb	(??_main+1)& (0+255),w,b
  1850   000420  51A0               	movf	(main@maxtime+2)& (0+255),w,b
  1851   000422  5990               	subwfb	(??_main+2)& (0+255),w,b
  1852   000424  51A1               	movf	(main@maxtime+3)& (0+255),w,b
  1853   000426  5991               	subwfb	(??_main+3)& (0+255),w,b
  1854   000428  B0D8               	btfsc	status,0,c
  1855   00042A  EF19  F002         	goto	u1991
  1856   00042E  EF1B  F002         	goto	u1990
  1857   000432                     u1991:
  1858   000432  EF47  F002         	goto	l3148
  1859   000436                     u1990:
  1860   000436                     
  1861                           ; BSR set to: 0
  1862   000436  51A5               	movf	main@i_961& (0+255),w,b
  1863   000438  6F8E               	movwf	??_main& (0+255),b
  1864   00043A  6B8F               	clrf	(??_main+1)& (0+255),b
  1865   00043C  0EFF               	movlw	255
  1866   00043E  25CC               	addwf	_songLength& (0+255),w,b
  1867   000440  6F90               	movwf	(??_main+2)& (0+255),b
  1868   000442  6B91               	clrf	(??_main+3)& (0+255),b
  1869   000444  0EFF               	movlw	255
  1870   000446  2391               	addwfc	(??_main+3)& (0+255),f,b
  1871   000448  518E               	movf	??_main& (0+255),w,b
  1872   00044A  1990               	xorwf	(??_main+2)& (0+255),w,b
  1873   00044C  E107               	bnz	u2001
  1874   00044E  518F               	movf	(??_main+1)& (0+255),w,b
  1875   000450  1991               	xorwf	(??_main+3)& (0+255),w,b
  1876   000452  A4D8               	btfss	status,2,c
  1877   000454  EF2E  F002         	goto	u2001
  1878   000458  EF30  F002         	goto	u2000
  1879   00045C                     u2001:
  1880   00045C  EF47  F002         	goto	l3148
  1881   000460                     u2000:
  1882   000460                     
  1883                           ; BSR set to: 0
  1884                           ;main.c: 207:                         {;main.c: 208:                             printf(
      +                          "You win.\r\n");
  1885   000460  0ECE               	movlw	low STR_25
  1886   000462  6F8A               	movwf	printf@fmt& (0+255),b
  1887   000464  0E7F               	movlw	high STR_25
  1888   000466  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1889   000468  EC59  F009         	call	_printf	;wreg free
  1890   00046C                     
  1891                           ;main.c: 210:                             songSelection = 0;
  1892   00046C  0E00               	movlw	0
  1893   00046E  0100               	movlb	0	; () banked
  1894   000470  6FCD               	movwf	_songSelection& (0+255),b
  1895   000472                     
  1896                           ; BSR set to: 0
  1897                           ;main.c: 211:                             songLength = 12;
  1898   000472  0E0C               	movlw	12
  1899   000474  6FCC               	movwf	_songLength& (0+255),b
  1900   000476                     
  1901                           ; BSR set to: 0
  1902                           ;main.c: 212:                             playSong = 1;
  1903   000476  0E01               	movlw	1
  1904   000478  6FCB               	movwf	_playSong& (0+255),b
  1905   00047A                     l3144:
  1906                           
  1907                           ; BSR set to: 0
  1908   00047A  05CB               	decf	_playSong& (0+255),w,b
  1909   00047C  B4D8               	btfsc	status,2,c
  1910   00047E  EF43  F002         	goto	u2011
  1911   000482  EF45  F002         	goto	u2010
  1912   000486                     u2011:
  1913   000486  EF3D  F002         	goto	l3144
  1914   00048A                     u2010:
  1915   00048A  EFB3  F000         	goto	l3062
  1916   00048E                     l3148:
  1917                           
  1918                           ; BSR set to: 0
  1919   00048E  51A3               	movf	main@overallTime& (0+255),w,b
  1920   000490  6F8E               	movwf	??_main& (0+255),b
  1921   000492  51A4               	movf	(main@overallTime+1)& (0+255),w,b
  1922   000494  6F8F               	movwf	(??_main+1)& (0+255),b
  1923   000496  6B90               	clrf	(??_main+2)& (0+255),b
  1924   000498  6B91               	clrf	(??_main+3)& (0+255),b
  1925   00049A  519A               	movf	main@mintime& (0+255),w,b
  1926   00049C  5D8E               	subwf	??_main& (0+255),w,b
  1927   00049E  519B               	movf	(main@mintime+1)& (0+255),w,b
  1928   0004A0  598F               	subwfb	(??_main+1)& (0+255),w,b
  1929   0004A2  519C               	movf	(main@mintime+2)& (0+255),w,b
  1930   0004A4  5990               	subwfb	(??_main+2)& (0+255),w,b
  1931   0004A6  519D               	movf	(main@mintime+3)& (0+255),w,b
  1932   0004A8  5991               	subwfb	(??_main+3)& (0+255),w,b
  1933   0004AA  A0D8               	btfss	status,0,c
  1934   0004AC  EF5A  F002         	goto	u2021
  1935   0004B0  EF5C  F002         	goto	u2020
  1936   0004B4                     u2021:
  1937   0004B4  EF71  F002         	goto	l3152
  1938   0004B8                     u2020:
  1939   0004B8                     
  1940                           ; BSR set to: 0
  1941   0004B8  51A3               	movf	main@overallTime& (0+255),w,b
  1942   0004BA  6F8E               	movwf	??_main& (0+255),b
  1943   0004BC  51A4               	movf	(main@overallTime+1)& (0+255),w,b
  1944   0004BE  6F8F               	movwf	(??_main+1)& (0+255),b
  1945   0004C0  6B90               	clrf	(??_main+2)& (0+255),b
  1946   0004C2  6B91               	clrf	(??_main+3)& (0+255),b
  1947   0004C4  518E               	movf	??_main& (0+255),w,b
  1948   0004C6  5D9E               	subwf	main@maxtime& (0+255),w,b
  1949   0004C8  518F               	movf	(??_main+1)& (0+255),w,b
  1950   0004CA  599F               	subwfb	(main@maxtime+1)& (0+255),w,b
  1951   0004CC  5190               	movf	(??_main+2)& (0+255),w,b
  1952   0004CE  59A0               	subwfb	(main@maxtime+2)& (0+255),w,b
  1953   0004D0  5191               	movf	(??_main+3)& (0+255),w,b
  1954   0004D2  59A1               	subwfb	(main@maxtime+3)& (0+255),w,b
  1955   0004D4  B0D8               	btfsc	status,0,c
  1956   0004D6  EF6F  F002         	goto	u2031
  1957   0004DA  EF71  F002         	goto	u2030
  1958   0004DE                     u2031:
  1959   0004DE  EF88  F002         	goto	l3162
  1960   0004E2                     u2030:
  1961   0004E2                     l3152:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 217:                         {;main.c: 218:                             printf(
      +                          "You lose.\r\n");
  1965   0004E2  0EB7               	movlw	low STR_26
  1966   0004E4  6F8A               	movwf	printf@fmt& (0+255),b
  1967   0004E6  0E7F               	movlw	high STR_26
  1968   0004E8  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  1969   0004EA  EC59  F009         	call	_printf	;wreg free
  1970   0004EE                     
  1971                           ;main.c: 220:                             songSelection = 2;
  1972   0004EE  0E02               	movlw	2
  1973   0004F0  0100               	movlb	0	; () banked
  1974   0004F2  6FCD               	movwf	_songSelection& (0+255),b
  1975   0004F4                     
  1976                           ; BSR set to: 0
  1977                           ;main.c: 221:                             songLength = 4;
  1978   0004F4  0E04               	movlw	4
  1979   0004F6  6FCC               	movwf	_songLength& (0+255),b
  1980   0004F8                     
  1981                           ; BSR set to: 0
  1982                           ;main.c: 222:                             playSong = 1;
  1983   0004F8  0E01               	movlw	1
  1984   0004FA  6FCB               	movwf	_playSong& (0+255),b
  1985   0004FC                     l3160:
  1986                           
  1987                           ; BSR set to: 0
  1988   0004FC  05CB               	decf	_playSong& (0+255),w,b
  1989   0004FE  B4D8               	btfsc	status,2,c
  1990   000500  EF84  F002         	goto	u2041
  1991   000504  EF86  F002         	goto	u2040
  1992   000508                     u2041:
  1993   000508  EF7E  F002         	goto	l3160
  1994   00050C                     u2040:
  1995   00050C  EFB3  F000         	goto	l3062
  1996   000510                     l3162:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;main.c: 226:                     }
  2000   000510  2BA5               	incf	main@i_961& (0+255),f,b
  2001   000512                     l3164:
  2002                           
  2003                           ; BSR set to: 0
  2004   000512  51CC               	movf	_songLength& (0+255),w,b
  2005   000514  5DA5               	subwf	main@i_961& (0+255),w,b
  2006   000516  A0D8               	btfss	status,0,c
  2007   000518  EF90  F002         	goto	u2051
  2008   00051C  EF92  F002         	goto	u2050
  2009   000520                     u2051:
  2010   000520  EF7E  F001         	goto	l258
  2011   000524                     u2050:
  2012   000524  EFB3  F000         	goto	l3062
  2013   000528                     l3166:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 229:                     printf("Unknown key %c\r\n", cmd);
  2017   000528  0E88               	movlw	low STR_27
  2018   00052A  6F8A               	movwf	printf@fmt& (0+255),b
  2019   00052C  0E7F               	movlw	high STR_27
  2020   00052E  6F8B               	movwf	(printf@fmt+1)& (0+255),b
  2021   000530  C0A2  F08C         	movff	main@cmd,?_printf+2
  2022   000534  6B8D               	clrf	(?_printf+3)& (0+255),b
  2023   000536  EC59  F009         	call	_printf	;wreg free
  2024                           
  2025                           ;main.c: 230:                     break;
  2026   00053A  EFB3  F000         	goto	l3062
  2027   00053E                     l3170:
  2028                           
  2029                           ; BSR set to: 0
  2030   00053E  51A2               	movf	main@cmd& (0+255),w,b
  2031   000540  6F8E               	movwf	??_main& (0+255),b
  2032   000542  6B8F               	clrf	(??_main+1)& (0+255),b
  2033                           
  2034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2035                           ; Switch size 1, requested type "simple"
  2036                           ; Number of cases is 1, Range of values is 0 to 0
  2037                           ; switch strategies available:
  2038                           ; Name         Instructions Cycles
  2039                           ; simple_byte            4     3 (average)
  2040                           ;	Chosen strategy is simple_byte
  2041   000544  518F               	movf	(??_main+1)& (0+255),w,b
  2042   000546  0A00               	xorlw	0	; case 0
  2043   000548  B4D8               	btfsc	status,2,c
  2044   00054A  EFA9  F002         	goto	l3328
  2045   00054E  EF94  F002         	goto	l3166
  2046   000552                     l3328:
  2047                           
  2048                           ; BSR set to: 0
  2049                           ; Switch size 1, requested type "simple"
  2050                           ; Number of cases is 6, Range of values is 63 to 122
  2051                           ; switch strategies available:
  2052                           ; Name         Instructions Cycles
  2053                           ; simple_byte           19    10 (average)
  2054                           ;	Chosen strategy is simple_byte
  2055   000552  518E               	movf	??_main& (0+255),w,b
  2056   000554  0A3F               	xorlw	63	; case 63
  2057   000556  B4D8               	btfsc	status,2,c
  2058   000558  EFC3  F000         	goto	l3066
  2059   00055C  0A65               	xorlw	101	; case 90
  2060   00055E  B4D8               	btfsc	status,2,c
  2061   000560  EF18  F001         	goto	l3070
  2062   000564  0A35               	xorlw	53	; case 111
  2063   000566  B4D8               	btfsc	status,2,c
  2064   000568  EF10  F001         	goto	l3068
  2065   00056C  0A1F               	xorlw	31	; case 112
  2066   00056E  B4D8               	btfsc	status,2,c
  2067   000570  EF41  F001         	goto	l3094
  2068   000574  0A02               	xorlw	2	; case 114
  2069   000576  B4D8               	btfsc	status,2,c
  2070   000578  EF57  F001         	goto	l3102
  2071   00057C  0A08               	xorlw	8	; case 122
  2072   00057E  B4D8               	btfsc	status,2,c
  2073   000580  EF2D  F001         	goto	l3082
  2074   000584  EF94  F002         	goto	l3166
  2075   000588  EF4A  F000         	goto	start
  2076   00058C                     __end_of_main:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _printf *****************
  2080 ;; Defined at:
  2081 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  fmt             2   42[BANK0 ] PTR const unsigned char 
  2084 ;;		 -> STR_27(17), STR_26(12), STR_25(11), STR_24(50), 
  2085 ;;		 -> STR_23(30), STR_22(19), STR_21(11), STR_20(18), 
  2086 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2087 ;;		 -> STR_15(21), STR_14(20), STR_13(24), STR_12(21), 
  2088 ;;		 -> STR_11(7), STR_10(15), STR_9(33), STR_8(24), 
  2089 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  2090 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  ap              2   65[COMRAM] PTR void [1]
  2093 ;;		 -> ?_printf(2), 
  2094 ;;  ret             2    0        int 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  2   42[BANK0 ] int 
  2097 ;; Registers used:
  2098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2104 ;;      Params:         0       4       0       0       0       0       0
  2105 ;;      Locals:         2       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0
  2107 ;;      Totals:         2       4       0       0       0       0       0
  2108 ;;Total ram usage:        6 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 11
  2111 ;; This function calls:
  2112 ;;		_vfprintf
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text1
  2119   0012B2                     __ptext1:
  2120                           	callstack 0
  2121   0012B2                     _printf:
  2122                           	callstack 19
  2123   0012B2  0E8C               	movlw	low (?_printf+2)
  2124   0012B4  6E42               	movwf	printf@ap^0,c
  2125   0012B6  0E00               	movlw	high (?_printf+2)
  2126   0012B8  6E43               	movwf	(printf@ap+1)^0,c
  2127   0012BA  0E00               	movlw	0
  2128   0012BC  0100               	movlb	0	; () banked
  2129   0012BE  6F84               	movwf	vfprintf@fp& (0+255),b
  2130   0012C0  0E00               	movlw	0
  2131   0012C2  6F85               	movwf	(vfprintf@fp+1)& (0+255),b
  2132   0012C4  C08A  F086         	movff	printf@fmt,vfprintf@fmt
  2133   0012C8  C08B  F087         	movff	printf@fmt+1,vfprintf@fmt+1
  2134   0012CC  0E42               	movlw	low printf@ap
  2135   0012CE  6F88               	movwf	vfprintf@ap& (0+255),b
  2136   0012D0  0E00               	movlw	high printf@ap
  2137   0012D2  6F89               	movwf	(vfprintf@ap+1)& (0+255),b
  2138   0012D4  EC35  F008         	call	_vfprintf	;wreg free
  2139   0012D8  0012               	return		;funcret
  2140   0012DA                     __end_of_printf:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _vfprintf *****************
  2144 ;; Defined at:
  2145 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  2148 ;;		 -> NULL(0), 
  2149 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  2150 ;;		 -> STR_27(17), STR_26(12), STR_25(11), STR_24(50), 
  2151 ;;		 -> STR_23(30), STR_22(19), STR_21(11), STR_20(18), 
  2152 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2153 ;;		 -> STR_15(21), STR_14(20), STR_13(24), STR_12(21), 
  2154 ;;		 -> STR_11(7), STR_10(15), STR_9(33), STR_8(24), 
  2155 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  2156 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  2157 ;;  ap              2   40[BANK0 ] PTR PTR void 
  2158 ;;		 -> printf@ap(2), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  cfmt            2   63[COMRAM] PTR unsigned char 
  2161 ;;		 -> STR_27(17), STR_26(12), STR_25(11), STR_24(50), 
  2162 ;;		 -> STR_23(30), STR_22(19), STR_21(11), STR_20(18), 
  2163 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2164 ;;		 -> STR_15(21), STR_14(20), STR_13(24), STR_12(21), 
  2165 ;;		 -> STR_11(7), STR_10(15), STR_9(33), STR_8(24), 
  2166 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  2167 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  2   36[BANK0 ] int 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2177 ;;      Params:         0       6       0       0       0       0       0
  2178 ;;      Locals:         2       0       0       0       0       0       0
  2179 ;;      Temps:          0       0       0       0       0       0       0
  2180 ;;      Totals:         2       6       0       0       0       0       0
  2181 ;;Total ram usage:        8 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 10
  2184 ;; This function calls:
  2185 ;;		_vfpfcnvrt
  2186 ;; This function is called by:
  2187 ;;		_printf
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text2
  2192   00106A                     __ptext2:
  2193                           	callstack 0
  2194   00106A                     _vfprintf:
  2195                           	callstack 19
  2196   00106A                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2198   00106A  C086  F040         	movff	vfprintf@fmt,vfprintf@cfmt
  2199   00106E  C087  F041         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2202   001072  EF4A  F008         	goto	l3022
  2203   001076                     l3020:
  2204                           
  2205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2206   001076  C084  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  2207   00107A  C085  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2208   00107E  0E40               	movlw	low vfprintf@cfmt
  2209   001080  0100               	movlb	0	; () banked
  2210   001082  6F73               	movwf	vfpfcnvrt@fmt& (0+255),b
  2211   001084  0E00               	movlw	high vfprintf@cfmt
  2212   001086  6F74               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2213   001088  C088  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  2214   00108C  C089  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2215   001090  ECC6  F002         	call	_vfpfcnvrt	;wreg free
  2216   001094                     l3022:
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2219   001094  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
  2220   001098  C041  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2221   00109C                     	if	0	;tblptru may be non-zero
  2222   00109C                     	endif
  2223   00109C                     	if	0	;tblptru may be non-zero
  2224   00109C                     	endif
  2225   00109C  0008               	tblrd		*
  2226   00109E  50F5               	movf	tablat,w,c
  2227   0010A0  0900               	iorlw	0
  2228   0010A2  A4D8               	btfss	status,2,c
  2229   0010A4  EF56  F008         	goto	u1901
  2230   0010A8  EF58  F008         	goto	u1900
  2231   0010AC                     u1901:
  2232   0010AC  EF3B  F008         	goto	l3020
  2233   0010B0                     u1900:
  2234   0010B0                     
  2235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2236   0010B0  0E00               	movlw	0
  2237   0010B2  0100               	movlb	0	; () banked
  2238   0010B4  6F85               	movwf	(?_vfprintf+1)& (0+255),b
  2239   0010B6  0E00               	movlw	0
  2240   0010B8  6F84               	movwf	?_vfprintf& (0+255),b
  2241   0010BA                     
  2242                           ; BSR set to: 0
  2243   0010BA  0012               	return		;funcret
  2244   0010BC                     __end_of_vfprintf:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _vfpfcnvrt *****************
  2248 ;; Defined at:
  2249 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  2252 ;;		 -> NULL(0), 
  2253 ;;  fmt             2   19[BANK0 ] PTR PTR unsigned char 
  2254 ;;		 -> vfprintf@cfmt(2), 
  2255 ;;  ap              2   21[BANK0 ] PTR PTR void 
  2256 ;;		 -> printf@ap(2), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  convarg         8   23[BANK0 ] struct .
  2259 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  2260 ;;		 -> STR_27(17), STR_26(12), STR_25(11), STR_24(50), 
  2261 ;;		 -> STR_23(30), STR_22(19), STR_21(11), STR_20(18), 
  2262 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  2263 ;;		 -> STR_15(21), STR_14(20), STR_13(24), STR_12(21), 
  2264 ;;		 -> STR_11(7), STR_10(15), STR_9(33), STR_8(24), 
  2265 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  2266 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  2267 ;;  done            2   32[BANK0 ] int 
  2268 ;;  i               2    0        int 
  2269 ;;  c               1   31[BANK0 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2279 ;;      Params:         0       6       0       0       0       0       0
  2280 ;;      Locals:         0      13       0       0       0       0       0
  2281 ;;      Temps:          4       0       0       0       0       0       0
  2282 ;;      Totals:         4      19       0       0       0       0       0
  2283 ;;Total ram usage:       23 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 9
  2286 ;; This function calls:
  2287 ;;		_atoi
  2288 ;;		_ctoa
  2289 ;;		_fputc
  2290 ;;		_isdigit
  2291 ;;		_xtoa
  2292 ;; This function is called by:
  2293 ;;		_vfprintf
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text3
  2298   00058C                     __ptext3:
  2299                           	callstack 0
  2300   00058C                     _vfpfcnvrt:
  2301                           	callstack 19
  2302   00058C                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2304   00058C  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2305   000590  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2306   000594  CFDE FFF6          	movff	postinc2,tblptrl
  2307   000598  CFDD FFF7          	movff	postdec2,tblptrh
  2308   00059C                     	if	0	;tblptru may be non-zero
  2309   00059C                     	endif
  2310   00059C                     	if	0	;tblptru may be non-zero
  2311   00059C                     	endif
  2312   00059C  0008               	tblrd		*
  2313   00059E  50F5               	movf	tablat,w,c
  2314   0005A0  0A25               	xorlw	37
  2315   0005A2  A4D8               	btfss	status,2,c
  2316   0005A4  EFD6  F002         	goto	u1831
  2317   0005A8  EFD8  F002         	goto	u1830
  2318   0005AC                     u1831:
  2319   0005AC  EF41  F004         	goto	l2996
  2320   0005B0                     u1830:
  2321   0005B0                     
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2323   0005B0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324   0005B4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325   0005B8  2ADE               	incf	postinc2,f,c
  2326   0005BA  0E00               	movlw	0
  2327   0005BC  22DD               	addwfc	postdec2,f,c
  2328   0005BE                     
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2330   0005BE  0E00               	movlw	0
  2331   0005C0  6E45               	movwf	(_width+1)^0,c
  2332   0005C2  0E00               	movlw	0
  2333   0005C4  6E44               	movwf	_width^0,c
  2334   0005C6  C044  F048         	movff	_width,_flags
  2335   0005CA                     
  2336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2337   0005CA  6846               	setf	_prec^0,c
  2338   0005CC  6847               	setf	(_prec+1)^0,c
  2339   0005CE                     
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2341   0005CE  0E00               	movlw	0
  2342   0005D0  0100               	movlb	0	; () banked
  2343   0005D2  6F81               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2344   0005D4  0E00               	movlw	0
  2345   0005D6  6F80               	movwf	vfpfcnvrt@done& (0+255),b
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2348   0005D8  EF18  F003         	goto	l2952
  2349   0005DC                     l2942:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2353   0005DC  8248               	bsf	_flags^0,1,c
  2354   0005DE                     
  2355                           ; BSR set to: 0
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2357   0005DE  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2358   0005E2  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2359   0005E6  2ADE               	incf	postinc2,f,c
  2360   0005E8  0E00               	movlw	0
  2361   0005EA  22DD               	addwfc	postdec2,f,c
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2364   0005EC  EF18  F003         	goto	l2952
  2365   0005F0                     l2946:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2369   0005F0  0E00               	movlw	0
  2370   0005F2  6F81               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2371   0005F4  0E01               	movlw	1
  2372   0005F6  6F80               	movwf	vfpfcnvrt@done& (0+255),b
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2375   0005F8  EF18  F003         	goto	l2952
  2376   0005FC                     l2950:
  2377                           
  2378                           ; BSR set to: 0
  2379   0005FC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2380   000600  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2381   000604  CFDE FFF6          	movff	postinc2,tblptrl
  2382   000608  CFDD FFF7          	movff	postdec2,tblptrh
  2383   00060C                     	if	0	;tblptru may be non-zero
  2384   00060C                     	endif
  2385   00060C                     	if	0	;tblptru may be non-zero
  2386   00060C                     	endif
  2387   00060C  0008               	tblrd		*
  2388   00060E  50F5               	movf	tablat,w,c
  2389   000610  6E3C               	movwf	??_vfpfcnvrt^0,c
  2390   000612  6A3D               	clrf	(??_vfpfcnvrt+1)^0,c
  2391                           
  2392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2393                           ; Switch size 1, requested type "simple"
  2394                           ; Number of cases is 1, Range of values is 0 to 0
  2395                           ; switch strategies available:
  2396                           ; Name         Instructions Cycles
  2397                           ; simple_byte            4     3 (average)
  2398                           ;	Chosen strategy is simple_byte
  2399   000614  503D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2400   000616  0A00               	xorlw	0	; case 0
  2401   000618  B4D8               	btfsc	status,2,c
  2402   00061A  EF11  F003         	goto	l3330
  2403   00061E  EFF8  F002         	goto	l2946
  2404   000622                     l3330:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ; Switch size 1, requested type "simple"
  2408                           ; Number of cases is 1, Range of values is 48 to 48
  2409                           ; switch strategies available:
  2410                           ; Name         Instructions Cycles
  2411                           ; simple_byte            4     3 (average)
  2412                           ;	Chosen strategy is simple_byte
  2413   000622  503C               	movf	??_vfpfcnvrt^0,w,c
  2414   000624  0A30               	xorlw	48	; case 48
  2415   000626  B4D8               	btfsc	status,2,c
  2416   000628  EFEE  F002         	goto	l2942
  2417   00062C  EFF8  F002         	goto	l2946
  2418   000630                     l2952:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2422   000630  5180               	movf	vfpfcnvrt@done& (0+255),w,b
  2423   000632  1181               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2424   000634  B4D8               	btfsc	status,2,c
  2425   000636  EF1F  F003         	goto	u1841
  2426   00063A  EF21  F003         	goto	u1840
  2427   00063E                     u1841:
  2428   00063E  EFFE  F002         	goto	l2950
  2429   000642                     u1840:
  2430   000642                     
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2433   000642  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2434   000646  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2435   00064A  CFDE FFF6          	movff	postinc2,tblptrl
  2436   00064E  CFDD FFF7          	movff	postdec2,tblptrh
  2437   000652                     	if	0	;tblptru may be non-zero
  2438   000652                     	endif
  2439   000652                     	if	0	;tblptru may be non-zero
  2440   000652                     	endif
  2441   000652  0008               	tblrd		*
  2442   000654  50F5               	movf	tablat,w,c
  2443   000656  0A2A               	xorlw	42
  2444   000658  A4D8               	btfss	status,2,c
  2445   00065A  EF31  F003         	goto	u1851
  2446   00065E  EF33  F003         	goto	u1850
  2447   000662                     u1851:
  2448   000662  EF5C  F003         	goto	l2962
  2449   000666                     u1850:
  2450   000666                     
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2453   000666  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2454   00066A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2455   00066E  2ADE               	incf	postinc2,f,c
  2456   000670  0E00               	movlw	0
  2457   000672  22DD               	addwfc	postdec2,f,c
  2458                           
  2459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2460   000674  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2461   000678  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2462   00067C  CFDF F03C          	movff	indf2,??_vfpfcnvrt
  2463   000680  0E02               	movlw	2
  2464   000682  26DE               	addwf	postinc2,f,c
  2465   000684  CFDF F03D          	movff	indf2,??_vfpfcnvrt+1
  2466   000688  0E00               	movlw	0
  2467   00068A  22DD               	addwfc	postdec2,f,c
  2468   00068C  C03C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2469   000690  C03D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2470   000694  CFDE F044          	movff	postinc2,_width
  2471   000698  CFDD F045          	movff	postdec2,_width+1
  2472   00069C                     
  2473                           ; BSR set to: 0
  2474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2475   00069C  BE45               	btfsc	(_width+1)^0,7,c
  2476   00069E  EF55  F003         	goto	u1860
  2477   0006A2  EF53  F003         	goto	u1861
  2478   0006A6                     u1861:
  2479   0006A6  EF8F  F003         	goto	l2970
  2480   0006AA                     u1860:
  2481   0006AA                     
  2482                           ; BSR set to: 0
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2484   0006AA  8048               	bsf	_flags^0,0,c
  2485                           
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2487   0006AC  6C44               	negf	_width^0,c
  2488   0006AE  1E45               	comf	(_width+1)^0,f,c
  2489   0006B0  B0D8               	btfsc	status,0,c
  2490   0006B2  2A45               	incf	(_width+1)^0,f,c
  2491   0006B4  EF8F  F003         	goto	l2970
  2492   0006B8                     l2962:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2496   0006B8  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2497   0006BC  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2498   0006C0  CFDE F015          	movff	postinc2,atoi@s
  2499   0006C4  CFDD F016          	movff	postdec2,atoi@s+1
  2500   0006C8  EC3D  F005         	call	_atoi	;wreg free
  2501   0006CC  C015  F044         	movff	?_atoi,_width
  2502   0006D0  C016  F045         	movff	?_atoi+1,_width+1
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2505   0006D4  EF73  F003         	goto	l2968
  2506   0006D8                     l2964:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2509   0006D8  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2510   0006DC  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2511   0006E0  2ADE               	incf	postinc2,f,c
  2512   0006E2  0E00               	movlw	0
  2513   0006E4  22DD               	addwfc	postdec2,f,c
  2514   0006E6                     l2968:
  2515   0006E6  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2516   0006EA  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2517   0006EE  CFDE FFF6          	movff	postinc2,tblptrl
  2518   0006F2  CFDD FFF7          	movff	postdec2,tblptrh
  2519   0006F6                     	if	0	;tblptru may be non-zero
  2520   0006F6                     	endif
  2521   0006F6                     	if	0	;tblptru may be non-zero
  2522   0006F6                     	endif
  2523   0006F6  0008               	tblrd		*
  2524   0006F8  CFF5 F03C          	movff	tablat,??_vfpfcnvrt
  2525   0006FC  0ED0               	movlw	208
  2526   0006FE  243C               	addwf	??_vfpfcnvrt^0,w,c
  2527   000700  6E3D               	movwf	(??_vfpfcnvrt+1)^0,c
  2528   000702  6A3E               	clrf	(??_vfpfcnvrt+2)^0,c
  2529   000704  0EFF               	movlw	255
  2530   000706  223E               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2531   000708  503E               	movf	(??_vfpfcnvrt+2)^0,w,c
  2532   00070A  E109               	bnz	u1870
  2533   00070C  0E0A               	movlw	10
  2534   00070E  5C3D               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2535   000710  A0D8               	btfss	status,0,c
  2536   000712  EF8D  F003         	goto	u1871
  2537   000716  EF8F  F003         	goto	u1870
  2538   00071A                     u1871:
  2539   00071A  EF6C  F003         	goto	l2964
  2540   00071E                     u1870:
  2541   00071E                     l2970:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2544   00071E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2545   000722  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2546   000726  CFDE FFF6          	movff	postinc2,tblptrl
  2547   00072A  CFDD FFF7          	movff	postdec2,tblptrh
  2548   00072E                     	if	0	;tblptru may be non-zero
  2549   00072E                     	endif
  2550   00072E                     	if	0	;tblptru may be non-zero
  2551   00072E                     	endif
  2552   00072E  0008               	tblrd		*
  2553   000730  50F5               	movf	tablat,w,c
  2554   000732  0A63               	xorlw	99
  2555   000734  A4D8               	btfss	status,2,c
  2556   000736  EF9F  F003         	goto	u1881
  2557   00073A  EFA1  F003         	goto	u1880
  2558   00073E                     u1881:
  2559   00073E  EFC5  F003         	goto	l2978
  2560   000742                     u1880:
  2561   000742                     
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2563   000742  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564   000746  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565   00074A  2ADE               	incf	postinc2,f,c
  2566   00074C  0E00               	movlw	0
  2567   00074E  22DD               	addwfc	postdec2,f,c
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2570   000750  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2571   000754  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2572   000758  CFDF F03C          	movff	indf2,??_vfpfcnvrt
  2573   00075C  0E02               	movlw	2
  2574   00075E  26DE               	addwf	postinc2,f,c
  2575   000760  CFDF F03D          	movff	indf2,??_vfpfcnvrt+1
  2576   000764  0E00               	movlw	0
  2577   000766  22DD               	addwfc	postdec2,f,c
  2578   000768  C03C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2579   00076C  C03D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2580   000770  50DF               	movf	indf2,w,c
  2581   000772  0100               	movlb	0	; () banked
  2582   000774  6F7F               	movwf	vfpfcnvrt@c& (0+255),b
  2583   000776                     
  2584                           ; BSR set to: 0
  2585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2586   000776  C071  F018         	movff	vfpfcnvrt@fp,ctoa@fp
  2587   00077A  C072  F019         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2588   00077E  C07F  F01A         	movff	vfpfcnvrt@c,ctoa@c
  2589   000782  EC79  F006         	call	_ctoa	;wreg free
  2590   000786  EF55  F004         	goto	l1158
  2591   00078A                     l2978:
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  2594   00078A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2595   00078E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2596   000792  CFDE F082          	movff	postinc2,vfpfcnvrt@cp
  2597   000796  CFDD F083          	movff	postdec2,vfpfcnvrt@cp+1
  2598   00079A  C082  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2599   00079E  C083  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2600   0007A2                     	if	0	;tblptru may be non-zero
  2601   0007A2                     	endif
  2602   0007A2                     	if	0	;tblptru may be non-zero
  2603   0007A2                     	endif
  2604   0007A2  0008               	tblrd		*
  2605   0007A4  50F5               	movf	tablat,w,c
  2606   0007A6  0A78               	xorlw	120
  2607   0007A8  A4D8               	btfss	status,2,c
  2608   0007AA  EFD9  F003         	goto	u1891
  2609   0007AE  EFDB  F003         	goto	u1890
  2610   0007B2                     u1891:
  2611   0007B2  EF38  F004         	goto	l2992
  2612   0007B6                     u1890:
  2613   0007B6                     
  2614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2615   0007B6  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2616   0007BA  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2617   0007BE  CFDF F03C          	movff	indf2,??_vfpfcnvrt
  2618   0007C2  0E02               	movlw	2
  2619   0007C4  26DE               	addwf	postinc2,f,c
  2620   0007C6  CFDF F03D          	movff	indf2,??_vfpfcnvrt+1
  2621   0007CA  0E00               	movlw	0
  2622   0007CC  22DD               	addwfc	postdec2,f,c
  2623   0007CE  C03C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2624   0007D2  C03D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2625   0007D6  CFDE F03E          	movff	postinc2,??_vfpfcnvrt+2
  2626   0007DA  CFDD F03F          	movff	postdec2,??_vfpfcnvrt+3
  2627   0007DE  C03E  F077         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2628   0007E2  C03F  F078         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2629   0007E6  0100               	movlb	0	; () banked
  2630   0007E8  6B79               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2631   0007EA  6B7A               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2632   0007EC  6B7B               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2633   0007EE  6B7C               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2634   0007F0  6B7D               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2635   0007F2  6B7E               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2638   0007F4  0E01               	movlw	1
  2639   0007F6  2582               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2640   0007F8  6E3C               	movwf	??_vfpfcnvrt^0,c
  2641   0007FA  0E00               	movlw	0
  2642   0007FC  2183               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2643   0007FE  6E3D               	movwf	(??_vfpfcnvrt+1)^0,c
  2644   000800  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2645   000804  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2646   000808  C03C  FFDE         	movff	??_vfpfcnvrt,postinc2
  2647   00080C  C03D  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2650   000810  EF22  F004         	goto	l2990
  2651   000814                     l2984:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  2655   000814  C071  F02A         	movff	vfpfcnvrt@fp,xtoa@fp
  2656   000818  C072  F02B         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2657   00081C  C077  F02C         	movff	vfpfcnvrt@convarg,xtoa@d
  2658   000820  C078  F02D         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2659   000824  C079  F02E         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  2660   000828  C07A  F02F         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  2661   00082C  C07B  F030         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  2662   000830  C07C  F031         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  2663   000834  C07D  F032         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  2664   000838  C07E  F033         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  2665   00083C  EC56  F004         	call	_xtoa	;wreg free
  2666   000840  EF55  F004         	goto	l1158
  2667   000844                     l2990:
  2668                           
  2669                           ; BSR set to: 0
  2670   000844  C082  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2671   000848  C083  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2672   00084C                     	if	0	;tblptru may be non-zero
  2673   00084C                     	endif
  2674   00084C                     	if	0	;tblptru may be non-zero
  2675   00084C                     	endif
  2676   00084C  0008               	tblrd		*
  2677   00084E  50F5               	movf	tablat,w,c
  2678   000850  6E3C               	movwf	??_vfpfcnvrt^0,c
  2679   000852  6A3D               	clrf	(??_vfpfcnvrt+1)^0,c
  2680                           
  2681                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2682                           ; Switch size 1, requested type "simple"
  2683                           ; Number of cases is 1, Range of values is 0 to 0
  2684                           ; switch strategies available:
  2685                           ; Name         Instructions Cycles
  2686                           ; simple_byte            4     3 (average)
  2687                           ;	Chosen strategy is simple_byte
  2688   000854  503D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2689   000856  0A00               	xorlw	0	; case 0
  2690   000858  B4D8               	btfsc	status,2,c
  2691   00085A  EF31  F004         	goto	l3332
  2692   00085E  EF38  F004         	goto	l2992
  2693   000862                     l3332:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ; Switch size 1, requested type "simple"
  2697                           ; Number of cases is 1, Range of values is 120 to 120
  2698                           ; switch strategies available:
  2699                           ; Name         Instructions Cycles
  2700                           ; simple_byte            4     3 (average)
  2701                           ;	Chosen strategy is simple_byte
  2702   000862  503C               	movf	??_vfpfcnvrt^0,w,c
  2703   000864  0A78               	xorlw	120	; case 120
  2704   000866  B4D8               	btfsc	status,2,c
  2705   000868  EF0A  F004         	goto	l2984
  2706   00086C  EF38  F004         	goto	l2992
  2707   000870                     l2992:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2710   000870  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2711   000874  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2712   000878  2ADE               	incf	postinc2,f,c
  2713   00087A  0E00               	movlw	0
  2714   00087C  22DD               	addwfc	postdec2,f,c
  2715   00087E  EF55  F004         	goto	l1158
  2716   000882                     l2996:
  2717                           
  2718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2719   000882  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2720   000886  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2721   00088A  CFDE FFF6          	movff	postinc2,tblptrl
  2722   00088E  CFDD FFF7          	movff	postdec2,tblptrh
  2723   000892                     	if	0	;tblptru may be non-zero
  2724   000892                     	endif
  2725   000892                     	if	0	;tblptru may be non-zero
  2726   000892                     	endif
  2727   000892  0008               	tblrd		*
  2728   000894  50F5               	movf	tablat,w,c
  2729   000896  6E0F               	movwf	fputc@c^0,c
  2730   000898  6A10               	clrf	(fputc@c+1)^0,c
  2731   00089A  C071  F011         	movff	vfpfcnvrt@fp,fputc@fp
  2732   00089E  C072  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2733   0008A2  EC32  F007         	call	_fputc	;wreg free
  2734   0008A6  EF38  F004         	goto	l2992
  2735   0008AA                     l1158:
  2736   0008AA  0012               	return		;funcret
  2737   0008AC                     __end_of_vfpfcnvrt:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _xtoa *****************
  2741 ;; Defined at:
  2742 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  2745 ;;		 -> NULL(0), 
  2746 ;;  d               8   43[COMRAM] unsigned long long 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  n               8    6[BANK0 ] unsigned long long 
  2749 ;;  i               2   14[BANK0 ] int 
  2750 ;;  w               2    4[BANK0 ] int 
  2751 ;;  p               2    2[BANK0 ] int 
  2752 ;;  c               1   16[BANK0 ] unsigned char 
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2762 ;;      Params:        10       0       0       0       0       0       0
  2763 ;;      Locals:         0      17       0       0       0       0       0
  2764 ;;      Temps:          8       0       0       0       0       0       0
  2765 ;;      Totals:        18      17       0       0       0       0       0
  2766 ;;Total ram usage:       35 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 8
  2769 ;; This function calls:
  2770 ;;		_pad
  2771 ;; This function is called by:
  2772 ;;		_vfpfcnvrt
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text4
  2777   0008AC                     __ptext4:
  2778                           	callstack 0
  2779   0008AC                     _xtoa:
  2780                           	callstack 19
  2781   0008AC                     
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  2783   0008AC  BE47               	btfsc	(_prec+1)^0,7,c
  2784   0008AE  EF5B  F004         	goto	u1701
  2785   0008B2  EF5D  F004         	goto	u1700
  2786   0008B6                     u1701:
  2787   0008B6  EF5E  F004         	goto	l2858
  2788   0008BA                     u1700:
  2789   0008BA                     
  2790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  2791   0008BA  9248               	bcf	_flags^0,1,c
  2792   0008BC                     l2858:
  2793                           
  2794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  2795   0008BC  BE47               	btfsc	(_prec+1)^0,7,c
  2796   0008BE  EF6B  F004         	goto	u1710
  2797   0008C2  5047               	movf	(_prec+1)^0,w,c
  2798   0008C4  E106               	bnz	u1711
  2799   0008C6  0446               	decf	_prec^0,w,c
  2800   0008C8  B0D8               	btfsc	status,0,c
  2801   0008CA  EF69  F004         	goto	u1711
  2802   0008CE  EF6B  F004         	goto	u1710
  2803   0008D2                     u1711:
  2804   0008D2  EF72  F004         	goto	l1124
  2805   0008D6                     u1710:
  2806   0008D6  0E00               	movlw	0
  2807   0008D8  0100               	movlb	0	; () banked
  2808   0008DA  6F63               	movwf	(xtoa@p+1)& (0+255),b
  2809   0008DC  0E01               	movlw	1
  2810   0008DE  6F62               	movwf	xtoa@p& (0+255),b
  2811   0008E0  EF76  F004         	goto	l1126
  2812   0008E4                     l1124:
  2813   0008E4  C046  F062         	movff	_prec,xtoa@p
  2814   0008E8  C047  F063         	movff	_prec+1,xtoa@p+1
  2815   0008EC                     l1126:
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  2818   0008EC  C044  F064         	movff	_width,xtoa@w
  2819   0008F0  C045  F065         	movff	_width+1,xtoa@w+1
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  2822   0008F4  C02C  F066         	movff	xtoa@d,xtoa@n
  2823   0008F8  C02D  F067         	movff	xtoa@d+1,xtoa@n+1
  2824   0008FC  C02E  F068         	movff	xtoa@d+2,xtoa@n+2
  2825   000900  C02F  F069         	movff	xtoa@d+3,xtoa@n+3
  2826   000904  C030  F06A         	movff	xtoa@d+4,xtoa@n+4
  2827   000908  C031  F06B         	movff	xtoa@d+5,xtoa@n+5
  2828   00090C  C032  F06C         	movff	xtoa@d+6,xtoa@n+6
  2829   000910  C033  F06D         	movff	xtoa@d+7,xtoa@n+7
  2830   000914                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  2832   000914  0E00               	movlw	0
  2833   000916  0100               	movlb	0	; () banked
  2834   000918  6F6F               	movwf	(xtoa@i+1)& (0+255),b
  2835   00091A  0E1F               	movlw	31
  2836   00091C  6F6E               	movwf	xtoa@i& (0+255),b
  2837   00091E                     
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  2840   00091E  0E00               	movlw	0
  2841   000920  6FED               	movwf	(_dbuf+31)& (0+255),b
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  2844   000922  EFEE  F004         	goto	l2886
  2845   000926                     l2866:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  2849   000926  076E               	decf	xtoa@i& (0+255),f,b
  2850   000928  A0D8               	btfss	status,0,c
  2851   00092A  076F               	decf	(xtoa@i+1)& (0+255),f,b
  2852   00092C                     
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  2855   00092C  5166               	movf	xtoa@n& (0+255),w,b
  2856   00092E  0B0F               	andlw	15
  2857   000930  6F70               	movwf	xtoa@c& (0+255),b
  2858   000932                     
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2861   000932  0E09               	movlw	9
  2862   000934  6570               	cpfsgt	xtoa@c& (0+255),b
  2863   000936  EF9F  F004         	goto	u1721
  2864   00093A  EFA1  F004         	goto	u1720
  2865   00093E                     u1721:
  2866   00093E  EFA9  F004         	goto	l2874
  2867   000942                     u1720:
  2868   000942                     
  2869                           ; BSR set to: 0
  2870   000942  0E57               	movlw	87
  2871   000944  2570               	addwf	xtoa@c& (0+255),w,b
  2872   000946  6F60               	movwf	_xtoa$1741& (0+255),b
  2873   000948  6B61               	clrf	(_xtoa$1741+1)& (0+255),b
  2874   00094A  0E00               	movlw	0
  2875   00094C  2361               	addwfc	(_xtoa$1741+1)& (0+255),f,b
  2876   00094E  EFAF  F004         	goto	l2876
  2877   000952                     l2874:
  2878                           
  2879                           ; BSR set to: 0
  2880   000952  0E30               	movlw	48
  2881   000954  2570               	addwf	xtoa@c& (0+255),w,b
  2882   000956  6F60               	movwf	_xtoa$1741& (0+255),b
  2883   000958  6B61               	clrf	(_xtoa$1741+1)& (0+255),b
  2884   00095A  0E00               	movlw	0
  2885   00095C  2361               	addwfc	(_xtoa$1741+1)& (0+255),f,b
  2886   00095E                     l2876:
  2887                           
  2888                           ; BSR set to: 0
  2889   00095E  C060  F070         	movff	_xtoa$1741,xtoa@c
  2890   000962                     
  2891                           ; BSR set to: 0
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  2893   000962  0ECE               	movlw	low _dbuf
  2894   000964  256E               	addwf	xtoa@i& (0+255),w,b
  2895   000966  6ED9               	movwf	fsr2l,c
  2896   000968  0E00               	movlw	high _dbuf
  2897   00096A  216F               	addwfc	(xtoa@i+1)& (0+255),w,b
  2898   00096C  6EDA               	movwf	fsr2h,c
  2899   00096E  C070  FFDF         	movff	xtoa@c,indf2
  2900   000972                     
  2901                           ; BSR set to: 0
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  2903   000972  0762               	decf	xtoa@p& (0+255),f,b
  2904   000974  A0D8               	btfss	status,0,c
  2905   000976  0763               	decf	(xtoa@p+1)& (0+255),f,b
  2906   000978                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  2909   000978  0764               	decf	xtoa@w& (0+255),f,b
  2910   00097A  A0D8               	btfss	status,0,c
  2911   00097C  0765               	decf	(xtoa@w+1)& (0+255),f,b
  2912   00097E                     
  2913                           ; BSR set to: 0
  2914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  2915   00097E  C066  F034         	movff	xtoa@n,??_xtoa
  2916   000982  C067  F035         	movff	xtoa@n+1,??_xtoa+1
  2917   000986  C068  F036         	movff	xtoa@n+2,??_xtoa+2
  2918   00098A  C069  F037         	movff	xtoa@n+3,??_xtoa+3
  2919   00098E  C06A  F038         	movff	xtoa@n+4,??_xtoa+4
  2920   000992  C06B  F039         	movff	xtoa@n+5,??_xtoa+5
  2921   000996  C06C  F03A         	movff	xtoa@n+6,??_xtoa+6
  2922   00099A  C06D  F03B         	movff	xtoa@n+7,??_xtoa+7
  2923   00099E  0E05               	movlw	5
  2924   0009A0  EFDB  F004         	goto	u1730
  2925   0009A4                     u1735:
  2926   0009A4  90D8               	bcf	status,0,c
  2927   0009A6  323B               	rrcf	(??_xtoa+7)^0,f,c
  2928   0009A8  323A               	rrcf	(??_xtoa+6)^0,f,c
  2929   0009AA  3239               	rrcf	(??_xtoa+5)^0,f,c
  2930   0009AC  3238               	rrcf	(??_xtoa+4)^0,f,c
  2931   0009AE  3237               	rrcf	(??_xtoa+3)^0,f,c
  2932   0009B0  3236               	rrcf	(??_xtoa+2)^0,f,c
  2933   0009B2  3235               	rrcf	(??_xtoa+1)^0,f,c
  2934   0009B4  3234               	rrcf	??_xtoa^0,f,c
  2935   0009B6                     u1730:
  2936   0009B6  2EE8               	decfsz	wreg,f,c
  2937   0009B8  EFD2  F004         	goto	u1735
  2938   0009BC  C034  F066         	movff	??_xtoa,xtoa@n
  2939   0009C0  C035  F067         	movff	??_xtoa+1,xtoa@n+1
  2940   0009C4  C036  F068         	movff	??_xtoa+2,xtoa@n+2
  2941   0009C8  C037  F069         	movff	??_xtoa+3,xtoa@n+3
  2942   0009CC  C038  F06A         	movff	??_xtoa+4,xtoa@n+4
  2943   0009D0  C039  F06B         	movff	??_xtoa+5,xtoa@n+5
  2944   0009D4  C03A  F06C         	movff	??_xtoa+6,xtoa@n+6
  2945   0009D8  C03B  F06D         	movff	??_xtoa+7,xtoa@n+7
  2946   0009DC                     l2886:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  2950   0009DC  BF6F               	btfsc	(xtoa@i+1)& (0+255),7,b
  2951   0009DE  EFFA  F004         	goto	u1741
  2952   0009E2  516F               	movf	(xtoa@i+1)& (0+255),w,b
  2953   0009E4  E109               	bnz	u1740
  2954   0009E6  0E02               	movlw	2
  2955   0009E8  5D6E               	subwf	xtoa@i& (0+255),w,b
  2956   0009EA  A0D8               	btfss	status,0,c
  2957   0009EC  EFFA  F004         	goto	u1741
  2958   0009F0  EFFC  F004         	goto	u1740
  2959   0009F4                     u1741:
  2960   0009F4  EF2C  F005         	goto	l2896
  2961   0009F8                     u1740:
  2962   0009F8                     
  2963                           ; BSR set to: 0
  2964   0009F8  5166               	movf	xtoa@n& (0+255),w,b
  2965   0009FA  1167               	iorwf	(xtoa@n+1)& (0+255),w,b
  2966   0009FC  1168               	iorwf	(xtoa@n+2)& (0+255),w,b
  2967   0009FE  1169               	iorwf	(xtoa@n+3)& (0+255),w,b
  2968   000A00  116A               	iorwf	(xtoa@n+4)& (0+255),w,b
  2969   000A02  116B               	iorwf	(xtoa@n+5)& (0+255),w,b
  2970   000A04  116C               	iorwf	(xtoa@n+6)& (0+255),w,b
  2971   000A06  116D               	iorwf	(xtoa@n+7)& (0+255),w,b
  2972   000A08  A4D8               	btfss	status,2,c
  2973   000A0A  EF09  F005         	goto	u1751
  2974   000A0E  EF0B  F005         	goto	u1750
  2975   000A12                     u1751:
  2976   000A12  EF93  F004         	goto	l2866
  2977   000A16                     u1750:
  2978   000A16                     
  2979                           ; BSR set to: 0
  2980   000A16  BF63               	btfsc	(xtoa@p+1)& (0+255),7,b
  2981   000A18  EF18  F005         	goto	u1760
  2982   000A1C  5163               	movf	(xtoa@p+1)& (0+255),w,b
  2983   000A1E  E106               	bnz	u1761
  2984   000A20  0562               	decf	xtoa@p& (0+255),w,b
  2985   000A22  B0D8               	btfsc	status,0,c
  2986   000A24  EF16  F005         	goto	u1761
  2987   000A28  EF18  F005         	goto	u1760
  2988   000A2C                     u1761:
  2989   000A2C  EF93  F004         	goto	l2866
  2990   000A30                     u1760:
  2991   000A30                     
  2992                           ; BSR set to: 0
  2993   000A30  BF65               	btfsc	(xtoa@w+1)& (0+255),7,b
  2994   000A32  EF23  F005         	goto	u1771
  2995   000A36  5165               	movf	(xtoa@w+1)& (0+255),w,b
  2996   000A38  E108               	bnz	u1770
  2997   000A3A  0564               	decf	xtoa@w& (0+255),w,b
  2998   000A3C  A0D8               	btfss	status,0,c
  2999   000A3E  EF23  F005         	goto	u1771
  3000   000A42  EF25  F005         	goto	u1770
  3001   000A46                     u1771:
  3002   000A46  EF2C  F005         	goto	l2896
  3003   000A4A                     u1770:
  3004   000A4A                     
  3005                           ; BSR set to: 0
  3006   000A4A  B248               	btfsc	_flags^0,1,c
  3007   000A4C  EF2A  F005         	goto	u1781
  3008   000A50  EF2C  F005         	goto	u1780
  3009   000A54                     u1781:
  3010   000A54  EF93  F004         	goto	l2866
  3011   000A58                     u1780:
  3012   000A58                     l2896:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3016   000A58  C02A  F01F         	movff	xtoa@fp,pad@fp
  3017   000A5C  C02B  F020         	movff	xtoa@fp+1,pad@fp+1
  3018   000A60  0ECE               	movlw	low _dbuf
  3019   000A62  256E               	addwf	xtoa@i& (0+255),w,b
  3020   000A64  6E21               	movwf	pad@buf^0,c
  3021   000A66  0E00               	movlw	high _dbuf
  3022   000A68  216F               	addwfc	(xtoa@i+1)& (0+255),w,b
  3023   000A6A  6E22               	movwf	(pad@buf+1)^0,c
  3024   000A6C  C064  F023         	movff	xtoa@w,pad@p
  3025   000A70  C065  F024         	movff	xtoa@w+1,pad@p+1
  3026   000A74  ECDD  F006         	call	_pad	;wreg free
  3027   000A78  0012               	return		;funcret
  3028   000A7A                     __end_of_xtoa:
  3029                           	callstack 0
  3030                           
  3031 ;; *************** function _pad *****************
  3032 ;; Defined at:
  3033 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  3036 ;;		 -> NULL(0), 
  3037 ;;  buf             2   32[COMRAM] PTR unsigned char 
  3038 ;;		 -> dbuf(32), 
  3039 ;;  p               2   34[COMRAM] int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  w               2   39[COMRAM] int 
  3042 ;;  i               2   37[COMRAM] int 
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  1    wreg      void 
  3045 ;; Registers used:
  3046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3052 ;;      Params:         6       0       0       0       0       0       0
  3053 ;;      Locals:         4       0       0       0       0       0       0
  3054 ;;      Temps:          1       0       0       0       0       0       0
  3055 ;;      Totals:        11       0       0       0       0       0       0
  3056 ;;Total ram usage:       11 bytes
  3057 ;; Hardware stack levels used: 1
  3058 ;; Hardware stack levels required when called: 7
  3059 ;; This function calls:
  3060 ;;		_fputc
  3061 ;;		_fputs
  3062 ;; This function is called by:
  3063 ;;		_xtoa
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text5
  3068   000DBA                     __ptext5:
  3069                           	callstack 0
  3070   000DBA                     _pad:
  3071                           	callstack 19
  3072   000DBA                     
  3073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3074   000DBA  A048               	btfss	_flags^0,0,c
  3075   000DBC  EFE2  F006         	goto	u1571
  3076   000DC0  EFE4  F006         	goto	u1570
  3077   000DC4                     u1571:
  3078   000DC4  EFEE  F006         	goto	l2800
  3079   000DC8                     u1570:
  3080   000DC8                     
  3081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  3082   000DC8  C021  F018         	movff	pad@buf,fputs@s
  3083   000DCC  C022  F019         	movff	pad@buf+1,fputs@s+1
  3084   000DD0  C01F  F01A         	movff	pad@fp,fputs@fp
  3085   000DD4  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  3086   000DD8  EC81  F008         	call	_fputs	;wreg free
  3087   000DDC                     l2800:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  3090   000DDC  BE24               	btfsc	(pad@p+1)^0,7,c
  3091   000DDE  EFF3  F006         	goto	u1581
  3092   000DE2  EFF5  F006         	goto	u1580
  3093   000DE6                     u1581:
  3094   000DE6  EFFB  F006         	goto	l2804
  3095   000DEA                     u1580:
  3096   000DEA  C023  F028         	movff	pad@p,pad@w
  3097   000DEE  C024  F029         	movff	pad@p+1,pad@w+1
  3098   000DF2  EFFF  F006         	goto	l1098
  3099   000DF6                     l2804:
  3100   000DF6  0E00               	movlw	0
  3101   000DF8  6E29               	movwf	(pad@w+1)^0,c
  3102   000DFA  0E00               	movlw	0
  3103   000DFC  6E28               	movwf	pad@w^0,c
  3104   000DFE                     l1098:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3107   000DFE  0E00               	movlw	0
  3108   000E00  6E27               	movwf	(pad@i+1)^0,c
  3109   000E02  0E00               	movlw	0
  3110   000E04  6E26               	movwf	pad@i^0,c
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3113   000E06  EF11  F007         	goto	l2810
  3114   000E0A                     l2806:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3117   000E0A  0E00               	movlw	0
  3118   000E0C  6E10               	movwf	(fputc@c+1)^0,c
  3119   000E0E  0E20               	movlw	32
  3120   000E10  6E0F               	movwf	fputc@c^0,c
  3121   000E12  C01F  F011         	movff	pad@fp,fputc@fp
  3122   000E16  C020  F012         	movff	pad@fp+1,fputc@fp+1
  3123   000E1A  EC32  F007         	call	_fputc	;wreg free
  3124   000E1E                     
  3125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3126   000E1E  4A26               	infsnz	pad@i^0,f,c
  3127   000E20  2A27               	incf	(pad@i+1)^0,f,c
  3128   000E22                     l2810:
  3129                           
  3130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3131   000E22  5028               	movf	pad@w^0,w,c
  3132   000E24  5C26               	subwf	pad@i^0,w,c
  3133   000E26  5027               	movf	(pad@i+1)^0,w,c
  3134   000E28  0A80               	xorlw	128
  3135   000E2A  6E25               	movwf	??_pad^0,c
  3136   000E2C  5029               	movf	(pad@w+1)^0,w,c
  3137   000E2E  0A80               	xorlw	128
  3138   000E30  5825               	subwfb	??_pad^0,w,c
  3139   000E32  A0D8               	btfss	status,0,c
  3140   000E34  EF1E  F007         	goto	u1591
  3141   000E38  EF20  F007         	goto	u1590
  3142   000E3C                     u1591:
  3143   000E3C  EF05  F007         	goto	l2806
  3144   000E40                     u1590:
  3145   000E40                     
  3146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  3147   000E40  B048               	btfsc	_flags^0,0,c
  3148   000E42  EF25  F007         	goto	u1601
  3149   000E46  EF27  F007         	goto	u1600
  3150   000E4A                     u1601:
  3151   000E4A  EF31  F007         	goto	l1103
  3152   000E4E                     u1600:
  3153   000E4E                     
  3154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3155   000E4E  C021  F018         	movff	pad@buf,fputs@s
  3156   000E52  C022  F019         	movff	pad@buf+1,fputs@s+1
  3157   000E56  C01F  F01A         	movff	pad@fp,fputs@fp
  3158   000E5A  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  3159   000E5E  EC81  F008         	call	_fputs	;wreg free
  3160   000E62                     l1103:
  3161   000E62  0012               	return		;funcret
  3162   000E64                     __end_of_pad:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _fputs *****************
  3166 ;; Defined at:
  3167 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  s               2   23[COMRAM] PTR const unsigned char 
  3170 ;;		 -> dbuf(32), 
  3171 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  3172 ;;		 -> NULL(0), 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  i               2   28[COMRAM] int 
  3175 ;;  c               1   27[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  2   23[COMRAM] int 
  3178 ;; Registers used:
  3179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3185 ;;      Params:         4       0       0       0       0       0       0
  3186 ;;      Locals:         3       0       0       0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0
  3188 ;;      Totals:         7       0       0       0       0       0       0
  3189 ;;Total ram usage:        7 bytes
  3190 ;; Hardware stack levels used: 1
  3191 ;; Hardware stack levels required when called: 6
  3192 ;; This function calls:
  3193 ;;		_fputc
  3194 ;; This function is called by:
  3195 ;;		_pad
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text6
  3200   001102                     __ptext6:
  3201                           	callstack 0
  3202   001102                     _fputs:
  3203                           	callstack 19
  3204   001102  0E00               	movlw	0
  3205   001104  6E1E               	movwf	(fputs@i+1)^0,c
  3206   001106  0E00               	movlw	0
  3207   001108  6E1D               	movwf	fputs@i^0,c
  3208   00110A  EF92  F008         	goto	l2788
  3209   00110E                     l2784:
  3210   00110E  C01C  F00F         	movff	fputs@c,fputc@c
  3211   001112  6A10               	clrf	(fputc@c+1)^0,c
  3212   001114  C01A  F011         	movff	fputs@fp,fputc@fp
  3213   001118  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
  3214   00111C  EC32  F007         	call	_fputc	;wreg free
  3215   001120  4A1D               	infsnz	fputs@i^0,f,c
  3216   001122  2A1E               	incf	(fputs@i+1)^0,f,c
  3217   001124                     l2788:
  3218   001124  501D               	movf	fputs@i^0,w,c
  3219   001126  2418               	addwf	fputs@s^0,w,c
  3220   001128  6ED9               	movwf	fsr2l,c
  3221   00112A  501E               	movf	(fputs@i+1)^0,w,c
  3222   00112C  2019               	addwfc	(fputs@s+1)^0,w,c
  3223   00112E  6EDA               	movwf	fsr2h,c
  3224   001130  50DF               	movf	indf2,w,c
  3225   001132  6E1C               	movwf	fputs@c^0,c
  3226   001134  501C               	movf	fputs@c^0,w,c
  3227   001136  A4D8               	btfss	status,2,c
  3228   001138  EFA0  F008         	goto	u1561
  3229   00113C  EFA2  F008         	goto	u1560
  3230   001140                     u1561:
  3231   001140  EF87  F008         	goto	l2784
  3232   001144                     u1560:
  3233   001144  0012               	return		;funcret
  3234   001146                     __end_of_fputs:
  3235                           	callstack 0
  3236                           
  3237 ;; *************** function _ctoa *****************
  3238 ;; Defined at:
  3239 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  3242 ;;		 -> NULL(0), 
  3243 ;;  c               1   25[COMRAM] unsigned char 
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;  w               2   29[COMRAM] int 
  3246 ;;  l               2   27[COMRAM] int 
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3256 ;;      Params:         3       0       0       0       0       0       0
  3257 ;;      Locals:         4       0       0       0       0       0       0
  3258 ;;      Temps:          1       0       0       0       0       0       0
  3259 ;;      Totals:         8       0       0       0       0       0       0
  3260 ;;Total ram usage:        8 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 6
  3263 ;; This function calls:
  3264 ;;		_fputc
  3265 ;; This function is called by:
  3266 ;;		_vfpfcnvrt
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270                           	psect	text7
  3271   000CF2                     __ptext7:
  3272                           	callstack 0
  3273   000CF2                     _ctoa:
  3274                           	callstack 21
  3275   000CF2                     
  3276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  3277   000CF2  5044               	movf	_width^0,w,c
  3278   000CF4  1045               	iorwf	(_width+1)^0,w,c
  3279   000CF6  A4D8               	btfss	status,2,c
  3280   000CF8  EF80  F006         	goto	u1651
  3281   000CFC  EF82  F006         	goto	u1650
  3282   000D00                     u1651:
  3283   000D00  EF88  F006         	goto	l2834
  3284   000D04                     u1650:
  3285   000D04  C044  F01E         	movff	_width,ctoa@w
  3286   000D08  C045  F01F         	movff	_width+1,ctoa@w+1
  3287   000D0C  EF8E  F006         	goto	l2836
  3288   000D10                     l2834:
  3289   000D10  0EFF               	movlw	255
  3290   000D12  2444               	addwf	_width^0,w,c
  3291   000D14  6E1E               	movwf	ctoa@w^0,c
  3292   000D16  0EFF               	movlw	255
  3293   000D18  2045               	addwfc	(_width+1)^0,w,c
  3294   000D1A  6E1F               	movwf	(ctoa@w+1)^0,c
  3295   000D1C                     l2836:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  3298   000D1C  A048               	btfss	_flags^0,0,c
  3299   000D1E  EF93  F006         	goto	u1661
  3300   000D22  EF95  F006         	goto	u1660
  3301   000D26                     u1661:
  3302   000D26  EF9E  F006         	goto	l2840
  3303   000D2A                     u1660:
  3304   000D2A                     
  3305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  3306   000D2A  C01A  F00F         	movff	ctoa@c,fputc@c
  3307   000D2E  6A10               	clrf	(fputc@c+1)^0,c
  3308   000D30  C018  F011         	movff	ctoa@fp,fputc@fp
  3309   000D34  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  3310   000D38  EC32  F007         	call	_fputc	;wreg free
  3311   000D3C                     l2840:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  3314   000D3C  BE1F               	btfsc	(ctoa@w+1)^0,7,c
  3315   000D3E  EFA3  F006         	goto	u1671
  3316   000D42  EFA5  F006         	goto	u1670
  3317   000D46                     u1671:
  3318   000D46  EFA7  F006         	goto	l2844
  3319   000D4A                     u1670:
  3320   000D4A  EFAB  F006         	goto	l1114
  3321   000D4E                     l2844:
  3322   000D4E  0E00               	movlw	0
  3323   000D50  6E1F               	movwf	(ctoa@w+1)^0,c
  3324   000D52  0E00               	movlw	0
  3325   000D54  6E1E               	movwf	ctoa@w^0,c
  3326   000D56                     l1114:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  3329   000D56  0E00               	movlw	0
  3330   000D58  6E1D               	movwf	(ctoa@l+1)^0,c
  3331   000D5A  0E00               	movlw	0
  3332   000D5C  6E1C               	movwf	ctoa@l^0,c
  3333                           
  3334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3335   000D5E  EFBD  F006         	goto	l2850
  3336   000D62                     l2846:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  3339   000D62  0E00               	movlw	0
  3340   000D64  6E10               	movwf	(fputc@c+1)^0,c
  3341   000D66  0E20               	movlw	32
  3342   000D68  6E0F               	movwf	fputc@c^0,c
  3343   000D6A  C018  F011         	movff	ctoa@fp,fputc@fp
  3344   000D6E  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  3345   000D72  EC32  F007         	call	_fputc	;wreg free
  3346   000D76                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  3348   000D76  4A1C               	infsnz	ctoa@l^0,f,c
  3349   000D78  2A1D               	incf	(ctoa@l+1)^0,f,c
  3350   000D7A                     l2850:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3353   000D7A  501E               	movf	ctoa@w^0,w,c
  3354   000D7C  5C1C               	subwf	ctoa@l^0,w,c
  3355   000D7E  501D               	movf	(ctoa@l+1)^0,w,c
  3356   000D80  0A80               	xorlw	128
  3357   000D82  6E1B               	movwf	??_ctoa^0,c
  3358   000D84  501F               	movf	(ctoa@w+1)^0,w,c
  3359   000D86  0A80               	xorlw	128
  3360   000D88  581B               	subwfb	??_ctoa^0,w,c
  3361   000D8A  A0D8               	btfss	status,0,c
  3362   000D8C  EFCA  F006         	goto	u1681
  3363   000D90  EFCC  F006         	goto	u1680
  3364   000D94                     u1681:
  3365   000D94  EFB1  F006         	goto	l2846
  3366   000D98                     u1680:
  3367   000D98                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  3369   000D98  B048               	btfsc	_flags^0,0,c
  3370   000D9A  EFD1  F006         	goto	u1691
  3371   000D9E  EFD3  F006         	goto	u1690
  3372   000DA2                     u1691:
  3373   000DA2  EFDC  F006         	goto	l1119
  3374   000DA6                     u1690:
  3375   000DA6                     
  3376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  3377   000DA6  C01A  F00F         	movff	ctoa@c,fputc@c
  3378   000DAA  6A10               	clrf	(fputc@c+1)^0,c
  3379   000DAC  C018  F011         	movff	ctoa@fp,fputc@fp
  3380   000DB0  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  3381   000DB4  EC32  F007         	call	_fputc	;wreg free
  3382   000DB8                     l1119:
  3383   000DB8  0012               	return		;funcret
  3384   000DBA                     __end_of_ctoa:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _fputc *****************
  3388 ;; Defined at:
  3389 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  c               2   14[COMRAM] int 
  3392 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3393 ;;		 -> NULL(0), 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  2   14[COMRAM] int 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3405 ;;      Params:         4       0       0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0       0       0
  3407 ;;      Temps:          5       0       0       0       0       0       0
  3408 ;;      Totals:         9       0       0       0       0       0       0
  3409 ;;Total ram usage:        9 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 5
  3412 ;; This function calls:
  3413 ;;		_putch
  3414 ;; This function is called by:
  3415 ;;		_pad
  3416 ;;		_ctoa
  3417 ;;		_vfpfcnvrt
  3418 ;;		_fputs
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text8
  3423   000E64                     __ptext8:
  3424                           	callstack 0
  3425   000E64                     _fputc:
  3426                           	callstack 19
  3427   000E64  5011               	movf	fputc@fp^0,w,c
  3428   000E66  1012               	iorwf	(fputc@fp+1)^0,w,c
  3429   000E68  B4D8               	btfsc	status,2,c
  3430   000E6A  EF39  F007         	goto	u1521
  3431   000E6E  EF3B  F007         	goto	u1520
  3432   000E72                     u1521:
  3433   000E72  EF44  F007         	goto	l2772
  3434   000E76                     u1520:
  3435   000E76  5011               	movf	fputc@fp^0,w,c
  3436   000E78  1012               	iorwf	(fputc@fp+1)^0,w,c
  3437   000E7A  A4D8               	btfss	status,2,c
  3438   000E7C  EF42  F007         	goto	u1531
  3439   000E80  EF44  F007         	goto	u1530
  3440   000E84                     u1531:
  3441   000E84  EF49  F007         	goto	l2774
  3442   000E88                     u1530:
  3443   000E88                     l2772:
  3444   000E88  500F               	movf	fputc@c^0,w,c
  3445   000E8A  EC30  F00A         	call	_putch
  3446   000E8E  EF7C  F007         	goto	l1221
  3447   000E92                     l2774:
  3448   000E92  EE20 F009          	lfsr	2,9
  3449   000E96  5011               	movf	fputc@fp^0,w,c
  3450   000E98  26D9               	addwf	fsr2l,f,c
  3451   000E9A  5012               	movf	(fputc@fp+1)^0,w,c
  3452   000E9C  22DA               	addwfc	fsr2h,f,c
  3453   000E9E  50DE               	movf	postinc2,w,c
  3454   000EA0  10DE               	iorwf	postinc2,w,c
  3455   000EA2  B4D8               	btfsc	status,2,c
  3456   000EA4  EF56  F007         	goto	u1541
  3457   000EA8  EF58  F007         	goto	u1540
  3458   000EAC                     u1541:
  3459   000EAC  EF73  F007         	goto	l2778
  3460   000EB0                     u1540:
  3461   000EB0  EE20 F009          	lfsr	2,9
  3462   000EB4  5011               	movf	fputc@fp^0,w,c
  3463   000EB6  26D9               	addwf	fsr2l,f,c
  3464   000EB8  5012               	movf	(fputc@fp+1)^0,w,c
  3465   000EBA  22DA               	addwfc	fsr2h,f,c
  3466   000EBC  EE10 F003          	lfsr	1,3
  3467   000EC0  5011               	movf	fputc@fp^0,w,c
  3468   000EC2  26E1               	addwf	fsr1l,f,c
  3469   000EC4  5012               	movf	(fputc@fp+1)^0,w,c
  3470   000EC6  22E2               	addwfc	fsr1h,f,c
  3471   000EC8  50DE               	movf	postinc2,w,c
  3472   000ECA  5CE6               	subwf	postinc1,w,c
  3473   000ECC  50E6               	movf	postinc1,w,c
  3474   000ECE  0A80               	xorlw	128
  3475   000ED0  6E17               	movwf	(??_fputc+4)^0,c
  3476   000ED2  50DE               	movf	postinc2,w,c
  3477   000ED4  0A80               	xorlw	128
  3478   000ED6  5817               	subwfb	(??_fputc+4)^0,w,c
  3479   000ED8  B0D8               	btfsc	status,0,c
  3480   000EDA  EF71  F007         	goto	u1551
  3481   000EDE  EF73  F007         	goto	u1550
  3482   000EE2                     u1551:
  3483   000EE2  EF7C  F007         	goto	l1221
  3484   000EE6                     u1550:
  3485   000EE6                     l2778:
  3486   000EE6  EE20 F003          	lfsr	2,3
  3487   000EEA  5011               	movf	fputc@fp^0,w,c
  3488   000EEC  26D9               	addwf	fsr2l,f,c
  3489   000EEE  5012               	movf	(fputc@fp+1)^0,w,c
  3490   000EF0  22DA               	addwfc	fsr2h,f,c
  3491   000EF2  2ADE               	incf	postinc2,f,c
  3492   000EF4  0E00               	movlw	0
  3493   000EF6  22DD               	addwfc	postdec2,f,c
  3494   000EF8                     l1221:
  3495   000EF8  0012               	return		;funcret
  3496   000EFA                     __end_of_fputc:
  3497                           	callstack 0
  3498                           
  3499 ;; *************** function _putch *****************
  3500 ;; Defined at:
  3501 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  c               1    wreg     unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  c               1    0[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3515 ;;      Params:         0       0       0       0       0       0       0
  3516 ;;      Locals:         0       0       0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0
  3518 ;;      Totals:         0       0       0       0       0       0       0
  3519 ;;Total ram usage:        0 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; Hardware stack levels required when called: 4
  3522 ;; This function calls:
  3523 ;;		Nothing
  3524 ;; This function is called by:
  3525 ;;		_fputc
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text9
  3530   001460                     __ptext9:
  3531                           	callstack 0
  3532   001460                     _putch:
  3533                           	callstack 19
  3534   001460  0012               	return		;funcret
  3535   001462                     __end_of_putch:
  3536                           	callstack 0
  3537                           
  3538 ;; *************** function _atoi *****************
  3539 ;; Defined at:
  3540 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;  s               2   20[COMRAM] PTR const unsigned char 
  3543 ;;		 -> STR_27(17), STR_26(12), STR_25(11), STR_24(50), 
  3544 ;;		 -> STR_23(30), STR_22(19), STR_21(11), STR_20(18), 
  3545 ;;		 -> STR_19(3), STR_18(3), STR_17(5), STR_16(33), 
  3546 ;;		 -> STR_15(21), STR_14(20), STR_13(24), STR_12(21), 
  3547 ;;		 -> STR_11(7), STR_10(15), STR_9(33), STR_8(24), 
  3548 ;;		 -> STR_7(33), STR_6(5), STR_5(45), STR_4(15), 
  3549 ;;		 -> STR_3(9), STR_2(22), STR_1(11), 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  n               2   27[COMRAM] int 
  3552 ;;  neg             2   25[COMRAM] int 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  2   20[COMRAM] int 
  3555 ;; Registers used:
  3556 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3562 ;;      Params:         2       0       0       0       0       0       0
  3563 ;;      Locals:         4       0       0       0       0       0       0
  3564 ;;      Temps:          3       0       0       0       0       0       0
  3565 ;;      Totals:         9       0       0       0       0       0       0
  3566 ;;Total ram usage:        9 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 5
  3569 ;; This function calls:
  3570 ;;		___wmul
  3571 ;;		_isdigit
  3572 ;;		_isspace
  3573 ;; This function is called by:
  3574 ;;		_vfpfcnvrt
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text10
  3579   000A7A                     __ptext10:
  3580                           	callstack 0
  3581   000A7A                     _atoi:
  3582                           	callstack 22
  3583   000A7A  0E00               	movlw	0
  3584   000A7C  6E1D               	movwf	(atoi@n+1)^0,c
  3585   000A7E  0E00               	movlw	0
  3586   000A80  6E1C               	movwf	atoi@n^0,c
  3587   000A82  0E00               	movlw	0
  3588   000A84  6E1B               	movwf	(atoi@neg+1)^0,c
  3589   000A86  0E00               	movlw	0
  3590   000A88  6E1A               	movwf	atoi@neg^0,c
  3591   000A8A  EF49  F005         	goto	l2906
  3592   000A8E                     l2902:
  3593   000A8E  4A15               	infsnz	atoi@s^0,f,c
  3594   000A90  2A16               	incf	(atoi@s+1)^0,f,c
  3595   000A92                     l2906:
  3596   000A92  C015  FFF6         	movff	atoi@s,tblptrl
  3597   000A96  C016  FFF7         	movff	atoi@s+1,tblptrh
  3598   000A9A                     	if	0	;tblptru may be non-zero
  3599   000A9A                     	endif
  3600   000A9A                     	if	0	;tblptru may be non-zero
  3601   000A9A                     	endif
  3602   000A9A  0008               	tblrd		*
  3603   000A9C  50F5               	movf	tablat,w,c
  3604   000A9E  0A20               	xorlw	32
  3605   000AA0  B4D8               	btfsc	status,2,c
  3606   000AA2  EF55  F005         	goto	u1791
  3607   000AA6  EF57  F005         	goto	u1790
  3608   000AAA                     u1791:
  3609   000AAA  EF47  F005         	goto	l2902
  3610   000AAE                     u1790:
  3611   000AAE  C015  FFF6         	movff	atoi@s,tblptrl
  3612   000AB2  C016  FFF7         	movff	atoi@s+1,tblptrh
  3613   000AB6                     	if	0	;tblptru may be non-zero
  3614   000AB6                     	endif
  3615   000AB6                     	if	0	;tblptru may be non-zero
  3616   000AB6                     	endif
  3617   000AB6  0008               	tblrd		*
  3618   000AB8  CFF5 F017          	movff	tablat,??_atoi
  3619   000ABC  0EF7               	movlw	247
  3620   000ABE  2417               	addwf	??_atoi^0,w,c
  3621   000AC0  6E18               	movwf	(??_atoi+1)^0,c
  3622   000AC2  6A19               	clrf	(??_atoi+2)^0,c
  3623   000AC4  0EFF               	movlw	255
  3624   000AC6  2219               	addwfc	(??_atoi+2)^0,f,c
  3625   000AC8  5019               	movf	(??_atoi+2)^0,w,c
  3626   000ACA  E109               	bnz	u1800
  3627   000ACC  0E05               	movlw	5
  3628   000ACE  5C18               	subwf	(??_atoi+1)^0,w,c
  3629   000AD0  A0D8               	btfss	status,0,c
  3630   000AD2  EF6D  F005         	goto	u1801
  3631   000AD6  EF6F  F005         	goto	u1800
  3632   000ADA                     u1801:
  3633   000ADA  EF47  F005         	goto	l2902
  3634   000ADE                     u1800:
  3635   000ADE  EF79  F005         	goto	l2914
  3636   000AE2                     l2910:
  3637   000AE2  0E00               	movlw	0
  3638   000AE4  6E1B               	movwf	(atoi@neg+1)^0,c
  3639   000AE6  0E01               	movlw	1
  3640   000AE8  6E1A               	movwf	atoi@neg^0,c
  3641   000AEA                     l2912:
  3642   000AEA  4A15               	infsnz	atoi@s^0,f,c
  3643   000AEC  2A16               	incf	(atoi@s+1)^0,f,c
  3644   000AEE  EFAE  F005         	goto	l2922
  3645   000AF2                     l2914:
  3646   000AF2  C015  FFF6         	movff	atoi@s,tblptrl
  3647   000AF6  C016  FFF7         	movff	atoi@s+1,tblptrh
  3648   000AFA                     	if	0	;tblptru may be non-zero
  3649   000AFA                     	endif
  3650   000AFA                     	if	0	;tblptru may be non-zero
  3651   000AFA                     	endif
  3652   000AFA  0008               	tblrd		*
  3653   000AFC  50F5               	movf	tablat,w,c
  3654   000AFE  6E17               	movwf	??_atoi^0,c
  3655   000B00  6A18               	clrf	(??_atoi+1)^0,c
  3656                           
  3657                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3658                           ; Switch size 1, requested type "simple"
  3659                           ; Number of cases is 1, Range of values is 0 to 0
  3660                           ; switch strategies available:
  3661                           ; Name         Instructions Cycles
  3662                           ; simple_byte            4     3 (average)
  3663                           ;	Chosen strategy is simple_byte
  3664   000B02  5018               	movf	(??_atoi+1)^0,w,c
  3665   000B04  0A00               	xorlw	0	; case 0
  3666   000B06  B4D8               	btfsc	status,2,c
  3667   000B08  EF88  F005         	goto	l3334
  3668   000B0C  EFAE  F005         	goto	l2922
  3669   000B10                     l3334:
  3670                           
  3671                           ; Switch size 1, requested type "simple"
  3672                           ; Number of cases is 2, Range of values is 43 to 45
  3673                           ; switch strategies available:
  3674                           ; Name         Instructions Cycles
  3675                           ; simple_byte            7     4 (average)
  3676                           ;	Chosen strategy is simple_byte
  3677   000B10  5017               	movf	??_atoi^0,w,c
  3678   000B12  0A2B               	xorlw	43	; case 43
  3679   000B14  B4D8               	btfsc	status,2,c
  3680   000B16  EF75  F005         	goto	l2912
  3681   000B1A  0A06               	xorlw	6	; case 45
  3682   000B1C  B4D8               	btfsc	status,2,c
  3683   000B1E  EF71  F005         	goto	l2910
  3684   000B22  EFAE  F005         	goto	l2922
  3685   000B26                     l2916:
  3686   000B26  C01C  F00F         	movff	atoi@n,___wmul@multiplier
  3687   000B2A  C01D  F010         	movff	atoi@n+1,___wmul@multiplier+1
  3688   000B2E  0E00               	movlw	0
  3689   000B30  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  3690   000B32  0E0A               	movlw	10
  3691   000B34  6E11               	movwf	___wmul@multiplicand^0,c
  3692   000B36  ECA9  F009         	call	___wmul	;wreg free
  3693   000B3A  C015  FFF6         	movff	atoi@s,tblptrl
  3694   000B3E  C016  FFF7         	movff	atoi@s+1,tblptrh
  3695   000B42                     	if	0	;tblptru may be non-zero
  3696   000B42                     	endif
  3697   000B42                     	if	0	;tblptru may be non-zero
  3698   000B42                     	endif
  3699   000B42  0008               	tblrd		*
  3700   000B44  50F5               	movf	tablat,w,c
  3701   000B46  5E0F               	subwf	?___wmul^0,f,c
  3702   000B48  0E00               	movlw	0
  3703   000B4A  5A10               	subwfb	(?___wmul+1)^0,f,c
  3704   000B4C  0E30               	movlw	48
  3705   000B4E  240F               	addwf	?___wmul^0,w,c
  3706   000B50  6E1C               	movwf	atoi@n^0,c
  3707   000B52  0E00               	movlw	0
  3708   000B54  2010               	addwfc	(?___wmul+1)^0,w,c
  3709   000B56  6E1D               	movwf	(atoi@n+1)^0,c
  3710   000B58  EF75  F005         	goto	l2912
  3711   000B5C                     l2922:
  3712   000B5C  C015  FFF6         	movff	atoi@s,tblptrl
  3713   000B60  C016  FFF7         	movff	atoi@s+1,tblptrh
  3714   000B64                     	if	0	;tblptru may be non-zero
  3715   000B64                     	endif
  3716   000B64                     	if	0	;tblptru may be non-zero
  3717   000B64                     	endif
  3718   000B64  0008               	tblrd		*
  3719   000B66  CFF5 F017          	movff	tablat,??_atoi
  3720   000B6A  0ED0               	movlw	208
  3721   000B6C  2417               	addwf	??_atoi^0,w,c
  3722   000B6E  6E18               	movwf	(??_atoi+1)^0,c
  3723   000B70  6A19               	clrf	(??_atoi+2)^0,c
  3724   000B72  0EFF               	movlw	255
  3725   000B74  2219               	addwfc	(??_atoi+2)^0,f,c
  3726   000B76  5019               	movf	(??_atoi+2)^0,w,c
  3727   000B78  E109               	bnz	u1810
  3728   000B7A  0E0A               	movlw	10
  3729   000B7C  5C18               	subwf	(??_atoi+1)^0,w,c
  3730   000B7E  A0D8               	btfss	status,0,c
  3731   000B80  EFC4  F005         	goto	u1811
  3732   000B84  EFC6  F005         	goto	u1810
  3733   000B88                     u1811:
  3734   000B88  EF93  F005         	goto	l2916
  3735   000B8C                     u1810:
  3736   000B8C  501A               	movf	atoi@neg^0,w,c
  3737   000B8E  101B               	iorwf	(atoi@neg+1)^0,w,c
  3738   000B90  A4D8               	btfss	status,2,c
  3739   000B92  EFCD  F005         	goto	u1821
  3740   000B96  EFCF  F005         	goto	u1820
  3741   000B9A                     u1821:
  3742   000B9A  EFDD  F005         	goto	l1192
  3743   000B9E                     u1820:
  3744   000B9E  C01C  F017         	movff	atoi@n,??_atoi
  3745   000BA2  C01D  F018         	movff	atoi@n+1,??_atoi+1
  3746   000BA6  1E17               	comf	??_atoi^0,f,c
  3747   000BA8  1E18               	comf	(??_atoi+1)^0,f,c
  3748   000BAA  4A17               	infsnz	??_atoi^0,f,c
  3749   000BAC  2A18               	incf	(??_atoi+1)^0,f,c
  3750   000BAE  C017  F015         	movff	??_atoi,?_atoi
  3751   000BB2  C018  F016         	movff	??_atoi+1,?_atoi+1
  3752   000BB6  EFE1  F005         	goto	l1195
  3753   000BBA                     l1192:
  3754   000BBA  C01C  F015         	movff	atoi@n,?_atoi
  3755   000BBE  C01D  F016         	movff	atoi@n+1,?_atoi+1
  3756   000BC2                     l1195:
  3757   000BC2  0012               	return		;funcret
  3758   000BC4                     __end_of_atoi:
  3759                           	callstack 0
  3760                           
  3761 ;; *************** function _isspace *****************
  3762 ;; Defined at:
  3763 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;  c               2   14[COMRAM] int 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2   14[COMRAM] int 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3777 ;;      Params:         2       0       0       0       0       0       0
  3778 ;;      Locals:         1       0       0       0       0       0       0
  3779 ;;      Temps:          2       0       0       0       0       0       0
  3780 ;;      Totals:         5       0       0       0       0       0       0
  3781 ;;Total ram usage:        5 bytes
  3782 ;; Hardware stack levels used: 1
  3783 ;; Hardware stack levels required when called: 4
  3784 ;; This function calls:
  3785 ;;		Nothing
  3786 ;; This function is called by:
  3787 ;;		_atoi
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791                           	psect	text11
  3792   0010BC                     __ptext11:
  3793                           	callstack 0
  3794   0010BC                     _isspace:
  3795                           	callstack 22
  3796   0010BC  0E01               	movlw	1
  3797   0010BE  6E13               	movwf	_isspace$1789^0,c
  3798   0010C0  0E20               	movlw	32
  3799   0010C2  180F               	xorwf	isspace@c^0,w,c
  3800   0010C4  1010               	iorwf	(isspace@c+1)^0,w,c
  3801   0010C6  B4D8               	btfsc	status,2,c
  3802   0010C8  EF68  F008         	goto	u1631
  3803   0010CC  EF6A  F008         	goto	u1630
  3804   0010D0                     u1631:
  3805   0010D0  EF7D  F008         	goto	l2826
  3806   0010D4                     u1630:
  3807   0010D4  0EF7               	movlw	247
  3808   0010D6  240F               	addwf	isspace@c^0,w,c
  3809   0010D8  6E11               	movwf	??_isspace^0,c
  3810   0010DA  0EFF               	movlw	255
  3811   0010DC  2010               	addwfc	(isspace@c+1)^0,w,c
  3812   0010DE  6E12               	movwf	(??_isspace+1)^0,c
  3813   0010E0  5012               	movf	(??_isspace+1)^0,w,c
  3814   0010E2  E109               	bnz	u1640
  3815   0010E4  0E05               	movlw	5
  3816   0010E6  5C11               	subwf	??_isspace^0,w,c
  3817   0010E8  A0D8               	btfss	status,0,c
  3818   0010EA  EF79  F008         	goto	u1641
  3819   0010EE  EF7B  F008         	goto	u1640
  3820   0010F2                     u1641:
  3821   0010F2  EF7D  F008         	goto	l2826
  3822   0010F6                     u1640:
  3823   0010F6  0E00               	movlw	0
  3824   0010F8  6E13               	movwf	_isspace$1789^0,c
  3825   0010FA                     l2826:
  3826   0010FA  C013  F00F         	movff	_isspace$1789,?_isspace
  3827   0010FE  6A10               	clrf	(?_isspace+1)^0,c
  3828   001100  0012               	return		;funcret
  3829   001102                     __end_of_isspace:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function _isdigit *****************
  3833 ;; Defined at:
  3834 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  c               2   14[COMRAM] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2   14[COMRAM] int 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3848 ;;      Params:         2       0       0       0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0
  3850 ;;      Temps:          2       0       0       0       0       0       0
  3851 ;;      Totals:         4       0       0       0       0       0       0
  3852 ;;Total ram usage:        4 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 4
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_vfpfcnvrt
  3859 ;;		_atoi
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text12
  3864   001230                     __ptext12:
  3865                           	callstack 0
  3866   001230                     _isdigit:
  3867                           	callstack 23
  3868   001230  0ED0               	movlw	208
  3869   001232  240F               	addwf	isdigit@c^0,w,c
  3870   001234  6E11               	movwf	??_isdigit^0,c
  3871   001236  0EFF               	movlw	255
  3872   001238  2010               	addwfc	(isdigit@c+1)^0,w,c
  3873   00123A  6E12               	movwf	(??_isdigit+1)^0,c
  3874   00123C  5012               	movf	(??_isdigit+1)^0,w,c
  3875   00123E  E10A               	bnz	u1610
  3876   001240  0E0A               	movlw	10
  3877   001242  5C11               	subwf	??_isdigit^0,w,c
  3878   001244  A0D8               	btfss	status,0,c
  3879   001246  EF27  F009         	goto	u1611
  3880   00124A  EF2A  F009         	goto	u1610
  3881   00124E                     u1611:
  3882   00124E  0E01               	movlw	1
  3883   001250  EF2B  F009         	goto	u1620
  3884   001254                     u1610:
  3885   001254  0E00               	movlw	0
  3886   001256                     u1620:
  3887   001256  6E0F               	movwf	?_isdigit^0,c
  3888   001258  6A10               	clrf	(?_isdigit+1)^0,c
  3889   00125A  0012               	return		;funcret
  3890   00125C                     __end_of_isdigit:
  3891                           	callstack 0
  3892                           
  3893 ;; *************** function ___wmul *****************
  3894 ;; Defined at:
  3895 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  multiplier      2   14[COMRAM] unsigned int 
  3898 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  product         2   18[COMRAM] unsigned int 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  2   14[COMRAM] unsigned int 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0, prodl, prodh
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3910 ;;      Params:         4       0       0       0       0       0       0
  3911 ;;      Locals:         2       0       0       0       0       0       0
  3912 ;;      Temps:          0       0       0       0       0       0       0
  3913 ;;      Totals:         6       0       0       0       0       0       0
  3914 ;;Total ram usage:        6 bytes
  3915 ;; Hardware stack levels used: 1
  3916 ;; Hardware stack levels required when called: 4
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_atoi
  3921 ;; This function uses a non-reentrant model
  3922 ;;
  3923                           
  3924                           	psect	text13
  3925   001352                     __ptext13:
  3926                           	callstack 0
  3927   001352                     ___wmul:
  3928                           	callstack 22
  3929   001352  500F               	movf	___wmul@multiplier^0,w,c
  3930   001354  0211               	mulwf	___wmul@multiplicand^0,c
  3931   001356  CFF3 F013          	movff	prodl,___wmul@product
  3932   00135A  CFF4 F014          	movff	prodh,___wmul@product+1
  3933   00135E  500F               	movf	___wmul@multiplier^0,w,c
  3934   001360  0212               	mulwf	(___wmul@multiplicand+1)^0,c
  3935   001362  50F3               	movf	243,w,c
  3936   001364  2614               	addwf	(___wmul@product+1)^0,f,c
  3937   001366  5010               	movf	(___wmul@multiplier+1)^0,w,c
  3938   001368  0211               	mulwf	___wmul@multiplicand^0,c
  3939   00136A  50F3               	movf	243,w,c
  3940   00136C  2614               	addwf	(___wmul@product+1)^0,f,c
  3941   00136E  C013  F00F         	movff	___wmul@product,?___wmul
  3942   001372  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3943   001376  0012               	return		;funcret
  3944   001378                     __end_of___wmul:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _TMR1_WriteTimer *****************
  3948 ;; Defined at:
  3949 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  timerVal        2   14[COMRAM] unsigned short 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3963 ;;      Params:         2       0       0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 4
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;;		_TMR1_Reload
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text14
  3979   0012DA                     __ptext14:
  3980                           	callstack 0
  3981   0012DA                     _TMR1_WriteTimer:
  3982                           	callstack 26
  3983   0012DA                     
  3984                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  3985   0012DA  A4CD               	btfss	205,2,c	;volatile
  3986   0012DC  EF72  F009         	goto	u1281
  3987   0012E0  EF74  F009         	goto	u1280
  3988   0012E4                     u1281:
  3989   0012E4  EF7C  F009         	goto	l2434
  3990   0012E8                     u1280:
  3991   0012E8                     
  3992                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  3993   0012E8  90CD               	bcf	205,0,c	;volatile
  3994   0012EA                     
  3995                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  3996   0012EA  5010               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  3997   0012EC  6ECF               	movwf	207,c	;volatile
  3998   0012EE                     
  3999                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  4000   0012EE  C00F  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4001   0012F2                     
  4002                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  4003   0012F2  80CD               	bsf	205,0,c	;volatile
  4004                           
  4005                           ;mcc_generated_files/tmr1.c: 134:     }
  4006   0012F4  EF80  F009         	goto	l139
  4007   0012F8                     l2434:
  4008                           
  4009                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4010   0012F8  5010               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4011   0012FA  6ECF               	movwf	207,c	;volatile
  4012   0012FC                     
  4013                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  4014   0012FC  C00F  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4015   001300                     l139:
  4016   001300  0012               	return		;funcret
  4017   001302                     __end_of_TMR1_WriteTimer:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _TMR1_ReadTimer *****************
  4021 ;; Defined at:
  4022 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;  readVal         2   18[COMRAM] unsigned short 
  4027 ;;  readValLow      1   21[COMRAM] unsigned char 
  4028 ;;  readValHigh     1   20[COMRAM] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2   14[COMRAM] unsigned short 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4038 ;;      Params:         2       0       0       0       0       0       0
  4039 ;;      Locals:         4       0       0       0       0       0       0
  4040 ;;      Temps:          2       0       0       0       0       0       0
  4041 ;;      Totals:         8       0       0       0       0       0       0
  4042 ;;Total ram usage:        8 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 4
  4045 ;; This function calls:
  4046 ;;		Nothing
  4047 ;; This function is called by:
  4048 ;;		_main
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text15
  4053   00139C                     __ptext15:
  4054                           	callstack 0
  4055   00139C                     _TMR1_ReadTimer:
  4056                           	callstack 26
  4057   00139C                     
  4058                           ;mcc_generated_files/tmr1.c: 107:     uint16_t readVal;;mcc_generated_files/tmr1.c: 108:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 109:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 111:     T1CONbits.T1RD16 = 1;
  4059   00139C  82CD               	bsf	205,1,c	;volatile
  4060                           
  4061                           ;mcc_generated_files/tmr1.c: 113:     readValLow = TMR1L;
  4062   00139E  CFCE F016          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  4063                           
  4064                           ;mcc_generated_files/tmr1.c: 114:     readValHigh = TMR1H;
  4065   0013A2  CFCF F015          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  4066   0013A6                     
  4067                           ;mcc_generated_files/tmr1.c: 116:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  4068   0013A6  5015               	movf	TMR1_ReadTimer@readValHigh^0,w,c
  4069   0013A8  6E11               	movwf	??_TMR1_ReadTimer^0,c
  4070   0013AA  5016               	movf	TMR1_ReadTimer@readValLow^0,w,c
  4071   0013AC  6E13               	movwf	TMR1_ReadTimer@readVal^0,c
  4072   0013AE  C011  F014         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  4073   0013B2                     
  4074                           ;mcc_generated_files/tmr1.c: 118:     return readVal;
  4075   0013B2  C013  F00F         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  4076   0013B6  C014  F010         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  4077   0013BA  0012               	return		;funcret
  4078   0013BC                     __end_of_TMR1_ReadTimer:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _TMR0_WriteTimer *****************
  4082 ;; Defined at:
  4083 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  timerVal        2   14[COMRAM] unsigned short 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4097 ;;      Params:         2       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0
  4100 ;;      Totals:         2       0       0       0       0       0       0
  4101 ;;Total ram usage:        2 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 4
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text16
  4112   001416                     __ptext16:
  4113                           	callstack 0
  4114   001416                     _TMR0_WriteTimer:
  4115                           	callstack 26
  4116   001416                     
  4117                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4118   001416  5010               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4119   001418  6ED7               	movwf	215,c	;volatile
  4120   00141A                     
  4121                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4122   00141A  C00F  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4123   00141E  0012               	return		;funcret
  4124   001420                     __end_of_TMR0_WriteTimer:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _TMR0_ReadTimer *****************
  4128 ;; Defined at:
  4129 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  readVal         2   18[COMRAM] unsigned short 
  4134 ;;  readValHigh     1   21[COMRAM] unsigned char 
  4135 ;;  readValLow      1   20[COMRAM] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  2   14[COMRAM] unsigned short 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4145 ;;      Params:         2       0       0       0       0       0       0
  4146 ;;      Locals:         4       0       0       0       0       0       0
  4147 ;;      Temps:          2       0       0       0       0       0       0
  4148 ;;      Totals:         8       0       0       0       0       0       0
  4149 ;;Total ram usage:        8 bytes
  4150 ;; Hardware stack levels used: 1
  4151 ;; Hardware stack levels required when called: 4
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text17
  4160   0013BC                     __ptext17:
  4161                           	callstack 0
  4162   0013BC                     _TMR0_ReadTimer:
  4163                           	callstack 26
  4164   0013BC                     
  4165                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  4166   0013BC  CFD6 F015          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  4167                           
  4168                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  4169   0013C0  CFD7 F016          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  4170   0013C4                     
  4171                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  4172   0013C4  5016               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  4173   0013C6  6E11               	movwf	??_TMR0_ReadTimer^0,c
  4174   0013C8  5015               	movf	TMR0_ReadTimer@readValLow^0,w,c
  4175   0013CA  6E13               	movwf	TMR0_ReadTimer@readVal^0,c
  4176   0013CC  C011  F014         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  4177   0013D0                     
  4178                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  4179   0013D0  C013  F00F         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  4180   0013D4  C014  F010         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  4181   0013D8  0012               	return		;funcret
  4182   0013DA                     __end_of_TMR0_ReadTimer:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _SYSTEM_Initialize *****************
  4186 ;; Defined at:
  4187 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4201 ;;      Params:         0       0       0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0
  4204 ;;      Totals:         0       0       0       0       0       0       0
  4205 ;;Total ram usage:        0 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 6
  4208 ;; This function calls:
  4209 ;;		_EUSART1_Initialize
  4210 ;;		_INTERRUPT_Initialize
  4211 ;;		_OSCILLATOR_Initialize
  4212 ;;		_PIN_MANAGER_Initialize
  4213 ;;		_TMR0_Initialize
  4214 ;;		_TMR1_Initialize
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text18
  4221   0013DA                     __ptext18:
  4222                           	callstack 0
  4223   0013DA                     _SYSTEM_Initialize:
  4224                           	callstack 24
  4225   0013DA                     
  4226                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4227   0013DA  EC2E  F00A         	call	_INTERRUPT_Initialize	;wreg free
  4228   0013DE                     
  4229                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4230   0013DE  EC2E  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  4231   0013E2                     
  4232                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4233   0013E2  EC04  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  4234   0013E6                     
  4235                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4236   0013E6  EC44  F009         	call	_TMR1_Initialize	;wreg free
  4237   0013EA                     
  4238                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4239   0013EA  ECFE  F008         	call	_TMR0_Initialize	;wreg free
  4240   0013EE                     
  4241                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4242   0013EE  ECA3  F008         	call	_EUSART1_Initialize	;wreg free
  4243   0013F2  0012               	return		;funcret
  4244   0013F4                     __end_of_SYSTEM_Initialize:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _TMR1_Initialize *****************
  4248 ;; Defined at:
  4249 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4263 ;;      Params:         0       0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0
  4266 ;;      Totals:         0       0       0       0       0       0       0
  4267 ;;Total ram usage:        0 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 5
  4270 ;; This function calls:
  4271 ;;		_TMR1_SetInterruptHandler
  4272 ;; This function is called by:
  4273 ;;		_SYSTEM_Initialize
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text19
  4278   001288                     __ptext19:
  4279                           	callstack 0
  4280   001288                     _TMR1_Initialize:
  4281                           	callstack 24
  4282   001288                     
  4283                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4284   001288  0E00               	movlw	0
  4285   00128A  6ECC               	movwf	204,c	;volatile
  4286                           
  4287                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  4288   00128C  0E00               	movlw	0
  4289   00128E  6ECF               	movwf	207,c	;volatile
  4290                           
  4291                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4292   001290  0E00               	movlw	0
  4293   001292  6ECE               	movwf	206,c	;volatile
  4294   001294                     
  4295                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  4296   001294  CFCE F04D          	movff	4046,_timer1ReloadVal	;volatile
  4297   001298  CFCF F04E          	movff	4047,_timer1ReloadVal+1	;volatile
  4298   00129C                     
  4299                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4300   00129C  909E               	bcf	158,0,c	;volatile
  4301   00129E                     
  4302                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4303   00129E  809D               	bsf	157,0,c	;volatile
  4304   0012A0                     
  4305                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4306   0012A0  0E62               	movlw	low _TMR1_DefaultInterruptHandler
  4307   0012A2  6E0F               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  4308   0012A4  0E14               	movlw	high _TMR1_DefaultInterruptHandler
  4309   0012A6  6E10               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  4310   0012A8  EC10  F00A         	call	_TMR1_SetInterruptHandler	;wreg free
  4311   0012AC                     
  4312                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  4313   0012AC  0E01               	movlw	1
  4314   0012AE  6ECD               	movwf	205,c	;volatile
  4315   0012B0  0012               	return		;funcret
  4316   0012B2                     __end_of_TMR1_Initialize:
  4317                           	callstack 0
  4318                           
  4319 ;; *************** function _TMR1_SetInterruptHandler *****************
  4320 ;; Defined at:
  4321 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  4324 ;;		 -> myTMR1ISR(1), TMR1_DefaultInterruptHandler(1), 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;		None
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4336 ;;      Params:         2       0       0       0       0       0       0
  4337 ;;      Locals:         0       0       0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0
  4339 ;;      Totals:         2       0       0       0       0       0       0
  4340 ;;Total ram usage:        2 bytes
  4341 ;; Hardware stack levels used: 1
  4342 ;; Hardware stack levels required when called: 4
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_TMR1_Initialize
  4347 ;;		_main
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text20
  4352   001420                     __ptext20:
  4353                           	callstack 0
  4354   001420                     _TMR1_SetInterruptHandler:
  4355                           	callstack 26
  4356   001420                     
  4357                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  4358   001420  C00F  F0F4         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4359   001424  C010  F0F5         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4360   001428  0012               	return		;funcret
  4361   00142A                     __end_of_TMR1_SetInterruptHandler:
  4362                           	callstack 0
  4363                           
  4364 ;; *************** function _TMR0_Initialize *****************
  4365 ;; Defined at:
  4366 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4380 ;;      Params:         0       0       0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0
  4382 ;;      Temps:          2       0       0       0       0       0       0
  4383 ;;      Totals:         2       0       0       0       0       0       0
  4384 ;;Total ram usage:        2 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 5
  4387 ;; This function calls:
  4388 ;;		_TMR0_SetInterruptHandler
  4389 ;; This function is called by:
  4390 ;;		_SYSTEM_Initialize
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text21
  4395   0011FC                     __ptext21:
  4396                           	callstack 0
  4397   0011FC                     _TMR0_Initialize:
  4398                           	callstack 24
  4399   0011FC                     
  4400                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4401   0011FC  9CD5               	bcf	213,6,c	;volatile
  4402                           
  4403                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xFF;
  4404   0011FE  68D7               	setf	215,c	;volatile
  4405   001200                     
  4406                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xFD;
  4407   001200  0EFD               	movlw	253
  4408   001202  6ED6               	movwf	214,c	;volatile
  4409   001204                     
  4410                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4411   001204  50D6               	movf	214,w,c	;volatile
  4412   001206  CFD7 F011          	movff	4055,??_TMR0_Initialize	;volatile
  4413   00120A  6A12               	clrf	(??_TMR0_Initialize+1)^0,c
  4414   00120C  C011  F012         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4415   001210  6A11               	clrf	??_TMR0_Initialize^0,c
  4416   001212  1011               	iorwf	??_TMR0_Initialize^0,w,c
  4417   001214  6E4F               	movwf	_timer0ReloadVal^0,c	;volatile
  4418   001216  5012               	movf	(??_TMR0_Initialize+1)^0,w,c
  4419   001218  6E50               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4420   00121A                     
  4421                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4422   00121A  94F2               	bcf	242,2,c	;volatile
  4423   00121C                     
  4424                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4425   00121C  8AF2               	bsf	242,5,c	;volatile
  4426   00121E                     
  4427                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4428   00121E  0E64               	movlw	low _TMR0_DefaultInterruptHandler
  4429   001220  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4430   001222  0E14               	movlw	high _TMR0_DefaultInterruptHandler
  4431   001224  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4432   001226  EC15  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  4433   00122A                     
  4434                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x97;
  4435   00122A  0E97               	movlw	151
  4436   00122C  6ED5               	movwf	213,c	;volatile
  4437   00122E  0012               	return		;funcret
  4438   001230                     __end_of_TMR0_Initialize:
  4439                           	callstack 0
  4440                           
  4441 ;; *************** function _TMR0_SetInterruptHandler *****************
  4442 ;; Defined at:
  4443 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  4446 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4458 ;;      Params:         2       0       0       0       0       0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0
  4461 ;;      Totals:         2       0       0       0       0       0       0
  4462 ;;Total ram usage:        2 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 4
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_TMR0_Initialize
  4469 ;;		_main
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text22
  4474   00142A                     __ptext22:
  4475                           	callstack 0
  4476   00142A                     _TMR0_SetInterruptHandler:
  4477                           	callstack 26
  4478   00142A                     
  4479                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4480   00142A  C00F  F0F6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4481   00142E  C010  F0F7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4482   001432  0012               	return		;funcret
  4483   001434                     __end_of_TMR0_SetInterruptHandler:
  4484                           	callstack 0
  4485                           
  4486 ;; *************** function _PIN_MANAGER_Initialize *****************
  4487 ;; Defined at:
  4488 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4502 ;;      Params:         0       0       0       0       0       0       0
  4503 ;;      Locals:         0       0       0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0
  4505 ;;      Totals:         0       0       0       0       0       0       0
  4506 ;;Total ram usage:        0 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 4
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		_SYSTEM_Initialize
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text23
  4517   00125C                     __ptext23:
  4518                           	callstack 0
  4519   00125C                     _PIN_MANAGER_Initialize:
  4520                           	callstack 25
  4521   00125C                     
  4522                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4523   00125C  0E00               	movlw	0
  4524   00125E  6E89               	movwf	137,c	;volatile
  4525                           
  4526                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4527   001260  0E00               	movlw	0
  4528   001262  6E8A               	movwf	138,c	;volatile
  4529                           
  4530                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4531   001264  0E00               	movlw	0
  4532   001266  6E8B               	movwf	139,c	;volatile
  4533   001268                     
  4534                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4535   001268  6892               	setf	146,c	;volatile
  4536                           
  4537                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  4538   00126A  0EDF               	movlw	223
  4539   00126C  6E93               	movwf	147,c	;volatile
  4540                           
  4541                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4542   00126E  0EBF               	movlw	191
  4543   001270  6E94               	movwf	148,c	;volatile
  4544                           
  4545                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4546   001272  0E3C               	movlw	60
  4547   001274  010F               	movlb	15	; () banked
  4548   001276  6F3A               	movwf	58,b	;volatile
  4549                           
  4550                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4551   001278  0E3F               	movlw	63
  4552   00127A  6F39               	movwf	57,b	;volatile
  4553                           
  4554                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x0F;
  4555   00127C  0E0F               	movlw	15
  4556   00127E  6F38               	movwf	56,b	;volatile
  4557                           
  4558                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4559   001280  0E00               	movlw	0
  4560   001282  6E61               	movwf	97,c	;volatile
  4561   001284                     
  4562                           ; BSR set to: 15
  4563                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4564   001284  8EF1               	bsf	241,7,c	;volatile
  4565   001286                     
  4566                           ; BSR set to: 15
  4567   001286  0012               	return		;funcret
  4568   001288                     __end_of_PIN_MANAGER_Initialize:
  4569                           	callstack 0
  4570                           
  4571 ;; *************** function _OSCILLATOR_Initialize *****************
  4572 ;; Defined at:
  4573 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      void 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4587 ;;      Params:         0       0       0       0       0       0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0
  4589 ;;      Temps:          0       0       0       0       0       0       0
  4590 ;;      Totals:         0       0       0       0       0       0       0
  4591 ;;Total ram usage:        0 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; Hardware stack levels required when called: 4
  4594 ;; This function calls:
  4595 ;;		Nothing
  4596 ;; This function is called by:
  4597 ;;		_SYSTEM_Initialize
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text24
  4602   001408                     __ptext24:
  4603                           	callstack 0
  4604   001408                     _OSCILLATOR_Initialize:
  4605                           	callstack 25
  4606   001408                     
  4607                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x30;
  4608   001408  0E30               	movlw	48
  4609   00140A  6ED3               	movwf	211,c	;volatile
  4610                           
  4611                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  4612   00140C  0E04               	movlw	4
  4613   00140E  6ED2               	movwf	210,c	;volatile
  4614                           
  4615                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  4616   001410  0E00               	movlw	0
  4617   001412  6E9B               	movwf	155,c	;volatile
  4618   001414  0012               	return		;funcret
  4619   001416                     __end_of_OSCILLATOR_Initialize:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _INTERRUPT_Initialize *****************
  4623 ;; Defined at:
  4624 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;		None
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		None
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4638 ;;      Params:         0       0       0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0       0       0
  4641 ;;      Totals:         0       0       0       0       0       0       0
  4642 ;;Total ram usage:        0 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 4
  4645 ;; This function calls:
  4646 ;;		Nothing
  4647 ;; This function is called by:
  4648 ;;		_SYSTEM_Initialize
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text25
  4653   00145C                     __ptext25:
  4654                           	callstack 0
  4655   00145C                     _INTERRUPT_Initialize:
  4656                           	callstack 25
  4657   00145C                     
  4658                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4659   00145C  9ED0               	bcf	208,7,c	;volatile
  4660   00145E  0012               	return		;funcret
  4661   001460                     __end_of_INTERRUPT_Initialize:
  4662                           	callstack 0
  4663                           
  4664 ;; *************** function _EUSART1_Initialize *****************
  4665 ;; Defined at:
  4666 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4680 ;;      Params:         0       0       0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0
  4683 ;;      Totals:         0       0       0       0       0       0       0
  4684 ;;Total ram usage:        0 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 5
  4687 ;; This function calls:
  4688 ;;		_EUSART1_SetErrorHandler
  4689 ;;		_EUSART1_SetFramingErrorHandler
  4690 ;;		_EUSART1_SetOverrunErrorHandler
  4691 ;; This function is called by:
  4692 ;;		_SYSTEM_Initialize
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text26
  4697   001146                     __ptext26:
  4698                           	callstack 0
  4699   001146                     _EUSART1_Initialize:
  4700                           	callstack 24
  4701   001146                     
  4702                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4703   001146  0E08               	movlw	8
  4704   001148  6EB8               	movwf	184,c	;volatile
  4705                           
  4706                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4707   00114A  0E90               	movlw	144
  4708   00114C  6EAB               	movwf	171,c	;volatile
  4709                           
  4710                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4711   00114E  0E24               	movlw	36
  4712   001150  6EAC               	movwf	172,c	;volatile
  4713                           
  4714                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x19;
  4715   001152  0E19               	movlw	25
  4716   001154  6EAF               	movwf	175,c	;volatile
  4717                           
  4718                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  4719   001156  0E00               	movlw	0
  4720   001158  6EB0               	movwf	176,c	;volatile
  4721   00115A                     
  4722                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4723   00115A  0E00               	movlw	0
  4724   00115C  6E0F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4725   00115E  0E00               	movlw	0
  4726   001160  6E10               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4727   001162  EC1F  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4728   001166                     
  4729                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4730   001166  0E00               	movlw	0
  4731   001168  6E0F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4732   00116A  0E00               	movlw	0
  4733   00116C  6E10               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4734   00116E  EC1A  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4735   001172                     
  4736                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4737   001172  0E00               	movlw	0
  4738   001174  6E0F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4739   001176  0E00               	movlw	0
  4740   001178  6E10               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4741   00117A  EC24  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  4742   00117E                     
  4743                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4744   00117E  0E00               	movlw	0
  4745   001180  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  4746   001182  0012               	return		;funcret
  4747   001184                     __end_of_EUSART1_Initialize:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4751 ;; Defined at:
  4752 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  4755 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;		None
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  1    wreg      void 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4767 ;;      Params:         2       0       0       0       0       0       0
  4768 ;;      Locals:         0       0       0       0       0       0       0
  4769 ;;      Temps:          0       0       0       0       0       0       0
  4770 ;;      Totals:         2       0       0       0       0       0       0
  4771 ;;Total ram usage:        2 bytes
  4772 ;; Hardware stack levels used: 1
  4773 ;; Hardware stack levels required when called: 4
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_EUSART1_Initialize
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text27
  4782   001434                     __ptext27:
  4783                           	callstack 0
  4784   001434                     _EUSART1_SetOverrunErrorHandler:
  4785                           	callstack 24
  4786   001434                     
  4787                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  4788   001434  C00F  F0F0         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4789   001438  C010  F0F1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4790   00143C  0012               	return		;funcret
  4791   00143E                     __end_of_EUSART1_SetOverrunErrorHandler:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4795 ;; Defined at:
  4796 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  4799 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4811 ;;      Params:         2       0       0       0       0       0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0
  4813 ;;      Temps:          0       0       0       0       0       0       0
  4814 ;;      Totals:         2       0       0       0       0       0       0
  4815 ;;Total ram usage:        2 bytes
  4816 ;; Hardware stack levels used: 1
  4817 ;; Hardware stack levels required when called: 4
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_EUSART1_Initialize
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text28
  4826   00143E                     __ptext28:
  4827                           	callstack 0
  4828   00143E                     _EUSART1_SetFramingErrorHandler:
  4829                           	callstack 24
  4830   00143E                     
  4831                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  4832   00143E  C00F  F0F2         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4833   001442  C010  F0F3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4834   001446  0012               	return		;funcret
  4835   001448                     __end_of_EUSART1_SetFramingErrorHandler:
  4836                           	callstack 0
  4837                           
  4838 ;; *************** function _EUSART1_SetErrorHandler *****************
  4839 ;; Defined at:
  4840 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  4843 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4855 ;;      Params:         2       0       0       0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0
  4858 ;;      Totals:         2       0       0       0       0       0       0
  4859 ;;Total ram usage:        2 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 4
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_EUSART1_Initialize
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text29
  4870   001448                     __ptext29:
  4871                           	callstack 0
  4872   001448                     _EUSART1_SetErrorHandler:
  4873                           	callstack 24
  4874   001448                     
  4875                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  4876   001448  C00F  F0EE         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4877   00144C  C010  F0EF         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4878   001450  0012               	return		;funcret
  4879   001452                     __end_of_EUSART1_SetErrorHandler:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function _EUSART1_is_rx_ready *****************
  4883 ;; Defined at:
  4884 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      _Bool 
  4891 ;; Registers used:
  4892 ;;		wreg
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4898 ;;      Params:         0       0       0       0       0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 4
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text30
  4913   0013F4                     __ptext30:
  4914                           	callstack 0
  4915   0013F4                     _EUSART1_is_rx_ready:
  4916                           	callstack 26
  4917   0013F4                     
  4918                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4919   0013F4  BA9E               	btfsc	158,5,c	;volatile
  4920   0013F6  EFFF  F009         	goto	u1291
  4921   0013FA  EF02  F00A         	goto	u1290
  4922   0013FE                     u1291:
  4923   0013FE  0E01               	movlw	1
  4924   001400  EF03  F00A         	goto	u1296
  4925   001404                     u1290:
  4926   001404  0E00               	movlw	0
  4927   001406                     u1296:
  4928   001406  0012               	return		;funcret
  4929   001408                     __end_of_EUSART1_is_rx_ready:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _EUSART1_Read *****************
  4933 ;; Defined at:
  4934 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      unsigned char 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         0       0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         0       0       0       0       0       0       0
  4952 ;;Total ram usage:        0 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 4
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text31
  4963   001302                     __ptext31:
  4964                           	callstack 0
  4965   001302                     _EUSART1_Read:
  4966                           	callstack 26
  4967   001302                     l364:
  4968                           
  4969                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4970   001302  AA9E               	btfss	158,5,c	;volatile
  4971   001304  EF86  F009         	goto	u1301
  4972   001308  EF88  F009         	goto	u1300
  4973   00130C                     u1301:
  4974   00130C  EF81  F009         	goto	l364
  4975   001310                     u1300:
  4976   001310                     
  4977                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4978   001310  0E00               	movlw	0
  4979   001312  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  4980   001314                     
  4981                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4982   001314  A2AB               	btfss	171,1,c	;volatile
  4983   001316  EF8F  F009         	goto	u1311
  4984   00131A  EF91  F009         	goto	u1310
  4985   00131E                     u1311:
  4986   00131E  EF93  F009         	goto	l2456
  4987   001322                     u1310:
  4988   001322                     
  4989                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4990   001322  98AB               	bcf	171,4,c	;volatile
  4991                           
  4992                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4993   001324  88AB               	bsf	171,4,c	;volatile
  4994   001326                     l2456:
  4995                           
  4996                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4997   001326  50AE               	movf	174,w,c	;volatile
  4998   001328  0012               	return		;funcret
  4999   00132A                     __end_of_EUSART1_Read:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _INTERRUPT_InterruptManager *****************
  5003 ;; Defined at:
  5004 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5018 ;;      Params:         0       0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0
  5020 ;;      Temps:          6       0       0       0       0       0       0
  5021 ;;      Totals:         6       0       0       0       0       0       0
  5022 ;;Total ram usage:        6 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 3
  5025 ;; This function calls:
  5026 ;;		_TMR0_ISR
  5027 ;;		_TMR1_ISR
  5028 ;; This function is called by:
  5029 ;;		Interrupt level 2
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	intcode
  5034   000008                     __pintcode:
  5035                           	callstack 0
  5036   000008                     _INTERRUPT_InterruptManager:
  5037                           	callstack 19
  5038                           
  5039                           ;incstack = 0
  5040   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5041   00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  5042   00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5043   000012  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5044   000016  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5045   00001A  CFF3 F00D          	movff	prodl,??_INTERRUPT_InterruptManager+4
  5046   00001E  CFF4 F00E          	movff	prodh,??_INTERRUPT_InterruptManager+5
  5047   000022                     
  5048                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5049   000022  AAF2               	btfss	242,5,c	;volatile
  5050   000024  EF16  F000         	goto	i2u132_41
  5051   000028  EF18  F000         	goto	i2u132_40
  5052   00002C                     i2u132_41:
  5053   00002C  EF23  F000         	goto	i2l44
  5054   000030                     i2u132_40:
  5055   000030  A4F2               	btfss	242,2,c	;volatile
  5056   000032  EF1D  F000         	goto	i2u133_41
  5057   000036  EF1F  F000         	goto	i2u133_40
  5058   00003A                     i2u133_41:
  5059   00003A  EF23  F000         	goto	i2l44
  5060   00003E                     i2u133_40:
  5061   00003E                     
  5062                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5063   00003E  ECE1  F008         	call	_TMR0_ISR	;wreg free
  5064                           
  5065                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  5066   000042  EF3C  F000         	goto	i2l50
  5067   000046                     i2l44:
  5068   000046  ACF2               	btfss	242,6,c	;volatile
  5069   000048  EF28  F000         	goto	i2u134_41
  5070   00004C  EF2A  F000         	goto	i2u134_40
  5071   000050                     i2u134_41:
  5072   000050  EF3C  F000         	goto	i2l50
  5073   000054                     i2u134_40:
  5074   000054                     
  5075                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  5076   000054  A09D               	btfss	157,0,c	;volatile
  5077   000056  EF2F  F000         	goto	i2u135_41
  5078   00005A  EF31  F000         	goto	i2u135_40
  5079   00005E                     i2u135_41:
  5080   00005E  EF3C  F000         	goto	i2l49
  5081   000062                     i2u135_40:
  5082   000062  A09E               	btfss	158,0,c	;volatile
  5083   000064  EF36  F000         	goto	i2u136_41
  5084   000068  EF38  F000         	goto	i2u136_40
  5085   00006C                     i2u136_41:
  5086   00006C  EF3C  F000         	goto	i2l49
  5087   000070                     i2u136_40:
  5088   000070                     
  5089                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             TMR1_ISR();
  5090   000070  ECC2  F008         	call	_TMR1_ISR	;wreg free
  5091                           
  5092                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  5093   000074  EF3C  F000         	goto	i2l50
  5094   000078                     i2l49:
  5095   000078                     i2l50:
  5096   000078  C00E  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  5097   00007C  C00D  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  5098   000080  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5099   000084  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5100   000088  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5101   00008C  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5102   000090  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5103   000092  0011               	retfie		f
  5104   000094                     __end_of_INTERRUPT_InterruptManager:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function _TMR1_ISR *****************
  5108 ;; Defined at:
  5109 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5123 ;;      Params:         0       0       0       0       0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0
  5125 ;;      Temps:          0       0       0       0       0       0       0
  5126 ;;      Totals:         0       0       0       0       0       0       0
  5127 ;;Total ram usage:        0 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 2
  5130 ;; This function calls:
  5131 ;;		Absolute function
  5132 ;;		_TMR1_DefaultInterruptHandler
  5133 ;;		_myTMR1ISR
  5134 ;;		i2_TMR1_WriteTimer
  5135 ;; This function is called by:
  5136 ;;		_INTERRUPT_InterruptManager
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text33
  5141   001184                     __ptext33:
  5142                           	callstack 0
  5143   001184                     _TMR1_ISR:
  5144                           	callstack 19
  5145   001184                     
  5146                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  5147   001184  909E               	bcf	158,0,c	;volatile
  5148   001186                     
  5149                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  5150   001186  C04D  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
  5151   00118A  C04E  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
  5152   00118E  EC95  F009         	call	i2_TMR1_WriteTimer	;wreg free
  5153   001192                     
  5154                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  5155   001192  0100               	movlb	0	; () banked
  5156   001194  51F4               	movf	_TMR1_InterruptHandler& (0+255),w,b
  5157   001196  11F5               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  5158   001198  B4D8               	btfsc	status,2,c
  5159   00119A  EFD1  F008         	goto	i2u126_41
  5160   00119E  EFD3  F008         	goto	i2u126_40
  5161   0011A2                     i2u126_41:
  5162   0011A2  EFE0  F008         	goto	i2l152
  5163   0011A6                     i2u126_40:
  5164   0011A6                     
  5165                           ; BSR set to: 0
  5166                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  5167   0011A6  D802               	call	i2u127_48
  5168   0011A8  EFE0  F008         	goto	i2u127_49
  5169   0011AC                     i2u127_48:
  5170   0011AC  0005               	push	
  5171   0011AE  6EFA               	movwf	pclath,c
  5172   0011B0  51F4               	movf	_TMR1_InterruptHandler& (0+255),w,b
  5173   0011B2  6EFD               	movwf	tosl,c
  5174   0011B4  51F5               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  5175   0011B6  6EFE               	movwf	tosh,c
  5176   0011B8  50F8               	movf	tblptru,w,c
  5177   0011BA  6EFF               	movwf	tosu,c
  5178   0011BC  50FA               	movf	pclath,w,c
  5179   0011BE  0012               	return		;indir
  5180   0011C0                     i2u127_49:
  5181   0011C0                     i2l152:
  5182   0011C0  0012               	return		;funcret
  5183   0011C2                     __end_of_TMR1_ISR:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  5187 ;; Defined at:
  5188 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;		None
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;		None
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		None
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5202 ;;      Params:         0       0       0       0       0       0       0
  5203 ;;      Locals:         0       0       0       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0       0       0
  5205 ;;      Totals:         0       0       0       0       0       0       0
  5206 ;;Total ram usage:        0 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_TMR1_Initialize
  5212 ;;		_TMR1_ISR
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text34
  5217   001462                     __ptext34:
  5218                           	callstack 0
  5219   001462                     _TMR1_DefaultInterruptHandler:
  5220                           	callstack 20
  5221   001462  0012               	return		;funcret
  5222   001464                     __end_of_TMR1_DefaultInterruptHandler:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function _myTMR1ISR *****************
  5226 ;; Defined at:
  5227 ;;		line 287 in file "main.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;		None
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;		None
  5232 ;; Return value:  Size  Location     Type
  5233 ;;                  1    wreg      void 
  5234 ;; Registers used:
  5235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5236 ;; Tracked objects:
  5237 ;;		On entry : 0/0
  5238 ;;		On exit  : 0/0
  5239 ;;		Unchanged: 0/0
  5240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5241 ;;      Params:         0       0       0       0       0       0       0
  5242 ;;      Locals:         0       0       0       0       0       0       0
  5243 ;;      Temps:          5       0       0       0       0       0       0
  5244 ;;      Totals:         5       0       0       0       0       0       0
  5245 ;;Total ram usage:        5 bytes
  5246 ;; Hardware stack levels used: 1
  5247 ;; Hardware stack levels required when called: 1
  5248 ;; This function calls:
  5249 ;;		i2_TMR1_WriteTimer
  5250 ;; This function is called by:
  5251 ;;		_main
  5252 ;;		_TMR1_ISR
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text35
  5257   000EFA                     __ptext35:
  5258                           	callstack 0
  5259   000EFA                     _myTMR1ISR:
  5260                           	callstack 19
  5261   000EFA                     
  5262                           ;main.c: 290:     static uint16_t scale[30] = {18192, 17168, 16192, 15296, 14448, 13632,
      +                           12864, 12144, 11472, 10816, 10208, 9632, 9088, 8592, 8112, 7648, 7232, 6816, 6432, 6080
      +                          , 5728, 5408, 5104, 4816, 4560, 4288, 4048, 3824, 3616, 3408, 3216, 256};;main.c: 291:  
      +                             static uint8_t notes[3][12] = {{28, 8, 0, 28, 8, 28, 0, 26, 28, 8, 0, 28},;main.c: 29
      +                          5:     if(playNote == 1)
  5263   000EFA  044B               	decf	_playNote^0,w,c
  5264   000EFC  A4D8               	btfss	status,2,c
  5265   000EFE  EF83  F007         	goto	i2u121_41
  5266   000F02  EF85  F007         	goto	i2u121_40
  5267   000F06                     i2u121_41:
  5268   000F06  EFBE  F007         	goto	i2l2362
  5269   000F0A                     i2u121_40:
  5270   000F0A                     
  5271                           ;main.c: 296:     {;main.c: 297:         TMR1_WriteTimer(0x10000 - scale[notes[songSelec
      +                          tion][noteIndex]]);
  5272   000F0A  0100               	movlb	0	; () banked
  5273   000F0C  51CD               	movf	_songSelection& (0+255),w,b
  5274   000F0E  0D0C               	mullw	12
  5275   000F10  0EA7               	movlw	low myTMR1ISR@notes
  5276   000F12  24F3               	addwf	243,w,c
  5277   000F14  6E03               	movwf	??_myTMR1ISR^0,c
  5278   000F16  0E00               	movlw	high myTMR1ISR@notes
  5279   000F18  20F4               	addwfc	prodh,w,c
  5280   000F1A  6E04               	movwf	(??_myTMR1ISR+1)^0,c
  5281   000F1C  504C               	movf	_noteIndex^0,w,c
  5282   000F1E  2403               	addwf	??_myTMR1ISR^0,w,c
  5283   000F20  6ED9               	movwf	fsr2l,c
  5284   000F22  0E00               	movlw	0
  5285   000F24  2004               	addwfc	(??_myTMR1ISR+1)^0,w,c
  5286   000F26  6EDA               	movwf	fsr2h,c
  5287   000F28  50DF               	movf	indf2,w,c
  5288   000F2A  6E05               	movwf	(??_myTMR1ISR+2)^0,c
  5289   000F2C  5005               	movf	(??_myTMR1ISR+2)^0,w,c
  5290   000F2E  0D02               	mullw	2
  5291   000F30  0E48               	movlw	low myTMR1ISR@scale
  5292   000F32  24F3               	addwf	243,w,c
  5293   000F34  6ED9               	movwf	fsr2l,c
  5294   000F36  0E01               	movlw	high myTMR1ISR@scale
  5295   000F38  20F4               	addwfc	prodh,w,c
  5296   000F3A  6EDA               	movwf	fsr2h,c
  5297   000F3C  CFDE F006          	movff	postinc2,??_myTMR1ISR+3
  5298   000F40  CFDD F007          	movff	postdec2,??_myTMR1ISR+4
  5299   000F44  5006               	movf	(??_myTMR1ISR+3)^0,w,c
  5300   000F46  0800               	sublw	0
  5301   000F48  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
  5302   000F4A  5007               	movf	(??_myTMR1ISR+4)^0,w,c
  5303   000F4C  A0D8               	btfss	status,0,c
  5304   000F4E  2AE8               	incf	wreg,f,c
  5305   000F50  0800               	sublw	0
  5306   000F52  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
  5307   000F54  EC95  F009         	call	i2_TMR1_WriteTimer	;wreg free
  5308   000F58  BA8A               	btfsc	138,5,c	;volatile
  5309   000F5A  EFB1  F007         	goto	i2u122_41
  5310   000F5E  EFB4  F007         	goto	i2u122_40
  5311   000F62                     i2u122_41:
  5312   000F62  0E01               	movlw	1
  5313   000F64  EFB5  F007         	goto	i2u122_46
  5314   000F68                     i2u122_40:
  5315   000F68  0E00               	movlw	0
  5316   000F6A                     i2u122_46:
  5317   000F6A  0AFF               	xorlw	255
  5318   000F6C  6E03               	movwf	??_myTMR1ISR^0,c
  5319   000F6E  3A03               	swapf	??_myTMR1ISR^0,f,c
  5320   000F70  4603               	rlncf	??_myTMR1ISR^0,f,c
  5321   000F72  508A               	movf	138,w,c	;volatile
  5322   000F74  1803               	xorwf	??_myTMR1ISR^0,w,c
  5323   000F76  0BDF               	andlw	-33
  5324   000F78  1803               	xorwf	??_myTMR1ISR^0,w,c
  5325   000F7A  6E8A               	movwf	138,c	;volatile
  5326   000F7C                     i2l2362:
  5327                           
  5328                           ;main.c: 301:     PIR1bits.TMR1IF = 0;
  5329   000F7C  909E               	bcf	158,0,c	;volatile
  5330   000F7E  0012               	return		;funcret
  5331   000F80                     __end_of_myTMR1ISR:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function i2_TMR1_WriteTimer *****************
  5335 ;; Defined at:
  5336 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  timerVal        2    0[COMRAM] unsigned short 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5350 ;;      Params:         2       0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0
  5353 ;;      Totals:         2       0       0       0       0       0       0
  5354 ;;Total ram usage:        2 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_TMR1_ISR
  5360 ;;		_myTMR1ISR
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text36
  5365   00132A                     __ptext36:
  5366                           	callstack 0
  5367   00132A                     i2_TMR1_WriteTimer:
  5368                           	callstack 20
  5369   00132A                     
  5370                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  5371   00132A  A4CD               	btfss	205,2,c	;volatile
  5372   00132C  EF9A  F009         	goto	i2u116_41
  5373   001330  EF9C  F009         	goto	i2u116_40
  5374   001334                     i2u116_41:
  5375   001334  EFA4  F009         	goto	i2l2270
  5376   001338                     i2u116_40:
  5377   001338                     
  5378                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  5379   001338  90CD               	bcf	205,0,c	;volatile
  5380   00133A                     
  5381                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  5382   00133A  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  5383   00133C  6ECF               	movwf	207,c	;volatile
  5384   00133E                     
  5385                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  5386   00133E  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  5387   001342                     
  5388                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  5389   001342  80CD               	bsf	205,0,c	;volatile
  5390                           
  5391                           ;mcc_generated_files/tmr1.c: 134:     }
  5392   001344  EFA8  F009         	goto	i2l139
  5393   001348                     i2l2270:
  5394                           
  5395                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  5396   001348  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  5397   00134A  6ECF               	movwf	207,c	;volatile
  5398   00134C                     
  5399                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  5400   00134C  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  5401   001350                     i2l139:
  5402   001350  0012               	return		;funcret
  5403   001352                     __end_ofi2_TMR1_WriteTimer:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _TMR0_ISR *****************
  5407 ;; Defined at:
  5408 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5422 ;;      Params:         0       0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 2
  5429 ;; This function calls:
  5430 ;;		Absolute function
  5431 ;;		_TMR0_DefaultInterruptHandler
  5432 ;;		_myTMR0ISR
  5433 ;; This function is called by:
  5434 ;;		_INTERRUPT_InterruptManager
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text37
  5439   0011C2                     __ptext37:
  5440                           	callstack 0
  5441   0011C2                     _TMR0_ISR:
  5442                           	callstack 19
  5443   0011C2                     
  5444                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5445   0011C2  94F2               	bcf	242,2,c	;volatile
  5446   0011C4                     
  5447                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5448   0011C4  5050               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5449   0011C6  6ED7               	movwf	215,c	;volatile
  5450   0011C8                     
  5451                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5452   0011C8  C04F  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5453   0011CC                     
  5454                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5455   0011CC  0100               	movlb	0	; () banked
  5456   0011CE  51F6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5457   0011D0  11F7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5458   0011D2  B4D8               	btfsc	status,2,c
  5459   0011D4  EFEE  F008         	goto	i2u124_41
  5460   0011D8  EFF0  F008         	goto	i2u124_40
  5461   0011DC                     i2u124_41:
  5462   0011DC  EFFD  F008         	goto	i2l90
  5463   0011E0                     i2u124_40:
  5464   0011E0                     
  5465                           ; BSR set to: 0
  5466                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5467   0011E0  D802               	call	i2u125_48
  5468   0011E2  EFFD  F008         	goto	i2u125_49
  5469   0011E6                     i2u125_48:
  5470   0011E6  0005               	push	
  5471   0011E8  6EFA               	movwf	pclath,c
  5472   0011EA  51F6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5473   0011EC  6EFD               	movwf	tosl,c
  5474   0011EE  51F7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5475   0011F0  6EFE               	movwf	tosh,c
  5476   0011F2  50F8               	movf	tblptru,w,c
  5477   0011F4  6EFF               	movwf	tosu,c
  5478   0011F6  50FA               	movf	pclath,w,c
  5479   0011F8  0012               	return		;indir
  5480   0011FA                     i2u125_49:
  5481   0011FA                     i2l90:
  5482   0011FA  0012               	return		;funcret
  5483   0011FC                     __end_of_TMR0_ISR:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5487 ;; Defined at:
  5488 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		None
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5502 ;;      Params:         0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_TMR0_Initialize
  5512 ;;		_TMR0_ISR
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text38
  5517   001464                     __ptext38:
  5518                           	callstack 0
  5519   001464                     _TMR0_DefaultInterruptHandler:
  5520                           	callstack 20
  5521   001464  0012               	return		;funcret
  5522   001466                     __end_of_TMR0_DefaultInterruptHandler:
  5523                           	callstack 0
  5524                           
  5525 ;; *************** function _myTMR0ISR *****************
  5526 ;; Defined at:
  5527 ;;		line 237 in file "main.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5541 ;;      Params:         0       0       0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0
  5543 ;;      Temps:          6       0       0       0       0       0       0
  5544 ;;      Totals:         6       0       0       0       0       0       0
  5545 ;;Total ram usage:        6 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 1
  5548 ;; This function calls:
  5549 ;;		i2_TMR0_WriteTimer
  5550 ;; This function is called by:
  5551 ;;		_main
  5552 ;;		_TMR0_ISR
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text39
  5557   000BC4                     __ptext39:
  5558                           	callstack 0
  5559   000BC4                     _myTMR0ISR:
  5560                           	callstack 19
  5561   000BC4                     
  5562                           ;main.c: 240:     static tmr0State_t tmr0State = IDLE;;main.c: 242:     switch (tmr0Stat
      +                          e)
  5563   000BC4  EF5E  F006         	goto	i2l2350
  5564   000BC8                     i2l2322:
  5565                           
  5566                           ;main.c: 245:             if (playSong == 1)
  5567   000BC8  0100               	movlb	0	; () banked
  5568   000BCA  05CB               	decf	_playSong& (0+255),w,b
  5569   000BCC  A4D8               	btfss	status,2,c
  5570   000BCE  EFEB  F005         	goto	i2u117_41
  5571   000BD2  EFED  F005         	goto	i2u117_40
  5572   000BD6                     i2u117_41:
  5573   000BD6  EF77  F006         	goto	i2l287
  5574   000BDA                     i2u117_40:
  5575   000BDA                     
  5576                           ; BSR set to: 0
  5577                           ;main.c: 246:             {;main.c: 248:                 tmr0State = PLAY_NOTE;
  5578   000BDA  0E01               	movlw	1
  5579   000BDC  6E4A               	movwf	myTMR0ISR@tmr0State^0,c
  5580   000BDE  EF77  F006         	goto	i2l287
  5581   000BE2                     i2l2326:
  5582                           
  5583                           ;main.c: 253:             if (playSong == 1)
  5584   000BE2  0100               	movlb	0	; () banked
  5585   000BE4  05CB               	decf	_playSong& (0+255),w,b
  5586   000BE6  A4D8               	btfss	status,2,c
  5587   000BE8  EFF8  F005         	goto	i2u118_41
  5588   000BEC  EFFA  F005         	goto	i2u118_40
  5589   000BF0                     i2u118_41:
  5590   000BF0  EF22  F006         	goto	i2l2332
  5591   000BF4                     i2u118_40:
  5592   000BF4                     
  5593                           ; BSR set to: 0
  5594                           ;main.c: 254:             {;main.c: 256:                 playNote = 1;
  5595   000BF4  0E01               	movlw	1
  5596   000BF6  6E4B               	movwf	_playNote^0,c
  5597                           
  5598                           ;main.c: 257:                 tmr0State = PLAY_REST;
  5599   000BF8  0E02               	movlw	2
  5600   000BFA  6E4A               	movwf	myTMR0ISR@tmr0State^0,c
  5601   000BFC                     
  5602                           ; BSR set to: 0
  5603                           ;main.c: 258:                 TMR0_WriteTimer(0x10000 - duration[songSelection][noteInde
      +                          x]);
  5604   000BFC  504C               	movf	_noteIndex^0,w,c
  5605   000BFE  0D02               	mullw	2
  5606   000C00  CFF3 F003          	movff	prodl,??_myTMR0ISR
  5607   000C04  CFF4 F004          	movff	prodh,??_myTMR0ISR+1
  5608   000C08  51CD               	movf	_songSelection& (0+255),w,b
  5609   000C0A  0D18               	mullw	24
  5610   000C0C  0E00               	movlw	low _duration
  5611   000C0E  24F3               	addwf	243,w,c
  5612   000C10  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5613   000C12  0E01               	movlw	high _duration
  5614   000C14  20F4               	addwfc	prodh,w,c
  5615   000C16  6E06               	movwf	(??_myTMR0ISR+3)^0,c
  5616   000C18  5003               	movf	??_myTMR0ISR^0,w,c
  5617   000C1A  2405               	addwf	(??_myTMR0ISR+2)^0,w,c
  5618   000C1C  6ED9               	movwf	fsr2l,c
  5619   000C1E  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5620   000C20  2006               	addwfc	(??_myTMR0ISR+3)^0,w,c
  5621   000C22  6EDA               	movwf	fsr2h,c
  5622   000C24  CFDE F007          	movff	postinc2,??_myTMR0ISR+4
  5623   000C28  CFDD F008          	movff	postdec2,??_myTMR0ISR+5
  5624   000C2C  5007               	movf	(??_myTMR0ISR+4)^0,w,c
  5625   000C2E  0800               	sublw	0
  5626   000C30  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  5627   000C32  5008               	movf	(??_myTMR0ISR+5)^0,w,c
  5628   000C34  A0D8               	btfss	status,0,c
  5629   000C36  2AE8               	incf	wreg,f,c
  5630   000C38  0800               	sublw	0
  5631   000C3A  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  5632   000C3C  EC29  F00A         	call	i2_TMR0_WriteTimer	;wreg free
  5633                           
  5634                           ;main.c: 259:             }
  5635   000C40  EF77  F006         	goto	i2l287
  5636   000C44                     i2l2332:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;main.c: 261:             {;main.c: 262:                 tmr0State = IDLE;
  5640   000C44  0E00               	movlw	0
  5641   000C46  6E4A               	movwf	myTMR0ISR@tmr0State^0,c
  5642   000C48  EF77  F006         	goto	i2l287
  5643   000C4C                     i2l2334:
  5644                           
  5645                           ;main.c: 266:             if((playSong == 1) && (noteIndex < songLength-1))
  5646   000C4C  0100               	movlb	0	; () banked
  5647   000C4E  05CB               	decf	_playSong& (0+255),w,b
  5648   000C50  A4D8               	btfss	status,2,c
  5649   000C52  EF2D  F006         	goto	i2u119_41
  5650   000C56  EF2F  F006         	goto	i2u119_40
  5651   000C5A                     i2u119_41:
  5652   000C5A  EF54  F006         	goto	i2l2346
  5653   000C5E                     i2u119_40:
  5654   000C5E                     
  5655                           ; BSR set to: 0
  5656   000C5E  0EFF               	movlw	255
  5657   000C60  25CC               	addwf	_songLength& (0+255),w,b
  5658   000C62  6E03               	movwf	??_myTMR0ISR^0,c
  5659   000C64  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5660   000C66  0EFF               	movlw	255
  5661   000C68  2204               	addwfc	(??_myTMR0ISR+1)^0,f,c
  5662   000C6A  504C               	movf	_noteIndex^0,w,c
  5663   000C6C  6E05               	movwf	(??_myTMR0ISR+2)^0,c
  5664   000C6E  6A06               	clrf	(??_myTMR0ISR+3)^0,c
  5665   000C70  5003               	movf	??_myTMR0ISR^0,w,c
  5666   000C72  5C05               	subwf	(??_myTMR0ISR+2)^0,w,c
  5667   000C74  5006               	movf	(??_myTMR0ISR+3)^0,w,c
  5668   000C76  0A80               	xorlw	128
  5669   000C78  6E07               	movwf	(??_myTMR0ISR+4)^0,c
  5670   000C7A  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5671   000C7C  0A80               	xorlw	128
  5672   000C7E  5807               	subwfb	(??_myTMR0ISR+4)^0,w,c
  5673   000C80  B0D8               	btfsc	status,0,c
  5674   000C82  EF45  F006         	goto	i2u120_41
  5675   000C86  EF47  F006         	goto	i2u120_40
  5676   000C8A                     i2u120_41:
  5677   000C8A  EF54  F006         	goto	i2l2346
  5678   000C8E                     i2u120_40:
  5679   000C8E                     
  5680                           ; BSR set to: 0
  5681                           ;main.c: 267:             {;main.c: 269:                 playNote = 0;
  5682   000C8E  0E00               	movlw	0
  5683   000C90  6E4B               	movwf	_playNote^0,c
  5684   000C92                     
  5685                           ; BSR set to: 0
  5686                           ;main.c: 270:                 noteIndex++;
  5687   000C92  2A4C               	incf	_noteIndex^0,f,c
  5688   000C94                     
  5689                           ; BSR set to: 0
  5690                           ;main.c: 271:                 tmr0State = PLAY_NOTE;
  5691   000C94  0E01               	movlw	1
  5692   000C96  6E4A               	movwf	myTMR0ISR@tmr0State^0,c
  5693   000C98                     
  5694                           ; BSR set to: 0
  5695                           ;main.c: 272:                 TMR0_WriteTimer(0x10000 - 20000);
  5696   000C98  0EB1               	movlw	177
  5697   000C9A  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  5698   000C9C  0EE0               	movlw	224
  5699   000C9E  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  5700   000CA0  EC29  F00A         	call	i2_TMR0_WriteTimer	;wreg free
  5701                           
  5702                           ;main.c: 273:             }
  5703   000CA4  EF77  F006         	goto	i2l287
  5704   000CA8                     i2l2346:
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;main.c: 275:             {;main.c: 276:                 playNote = 0;
  5708   000CA8  0E00               	movlw	0
  5709   000CAA  6E4B               	movwf	_playNote^0,c
  5710                           
  5711                           ;main.c: 277:                 playSong = 0;
  5712   000CAC  0E00               	movlw	0
  5713   000CAE  6FCB               	movwf	_playSong& (0+255),b
  5714                           
  5715                           ;main.c: 278:                 noteIndex = 0;
  5716   000CB0  0E00               	movlw	0
  5717   000CB2  6E4C               	movwf	_noteIndex^0,c
  5718                           
  5719                           ;main.c: 279:                 tmr0State = IDLE;
  5720   000CB4  0E00               	movlw	0
  5721   000CB6  6E4A               	movwf	myTMR0ISR@tmr0State^0,c
  5722   000CB8  EF77  F006         	goto	i2l287
  5723   000CBC                     i2l2350:
  5724   000CBC  504A               	movf	myTMR0ISR@tmr0State^0,w,c
  5725   000CBE  6E03               	movwf	??_myTMR0ISR^0,c
  5726   000CC0  6A04               	clrf	(??_myTMR0ISR+1)^0,c
  5727                           
  5728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5729                           ; Switch size 1, requested type "simple"
  5730                           ; Number of cases is 1, Range of values is 0 to 0
  5731                           ; switch strategies available:
  5732                           ; Name         Instructions Cycles
  5733                           ; simple_byte            4     3 (average)
  5734                           ;	Chosen strategy is simple_byte
  5735   000CC2  5004               	movf	(??_myTMR0ISR+1)^0,w,c
  5736   000CC4  0A00               	xorlw	0	; case 0
  5737   000CC6  B4D8               	btfsc	status,2,c
  5738   000CC8  EF68  F006         	goto	i2l3336
  5739   000CCC  EF77  F006         	goto	i2l287
  5740   000CD0                     i2l3336:
  5741                           
  5742                           ; Switch size 1, requested type "simple"
  5743                           ; Number of cases is 3, Range of values is 0 to 2
  5744                           ; switch strategies available:
  5745                           ; Name         Instructions Cycles
  5746                           ; simple_byte           10     6 (average)
  5747                           ;	Chosen strategy is simple_byte
  5748   000CD0  5003               	movf	??_myTMR0ISR^0,w,c
  5749   000CD2  0A00               	xorlw	0	; case 0
  5750   000CD4  B4D8               	btfsc	status,2,c
  5751   000CD6  EFE4  F005         	goto	i2l2322
  5752   000CDA  0A01               	xorlw	1	; case 1
  5753   000CDC  B4D8               	btfsc	status,2,c
  5754   000CDE  EFF1  F005         	goto	i2l2326
  5755   000CE2  0A03               	xorlw	3	; case 2
  5756   000CE4  B4D8               	btfsc	status,2,c
  5757   000CE6  EF26  F006         	goto	i2l2334
  5758   000CEA  EF77  F006         	goto	i2l287
  5759   000CEE                     i2l287:
  5760                           
  5761                           ;main.c: 285:     INTCONbits.TMR0IF = 0;
  5762   000CEE  94F2               	bcf	242,2,c	;volatile
  5763   000CF0  0012               	return		;funcret
  5764   000CF2                     __end_of_myTMR0ISR:
  5765                           	callstack 0
  5766                           
  5767 ;; *************** function i2_TMR0_WriteTimer *****************
  5768 ;; Defined at:
  5769 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  timerVal        2    0[COMRAM] unsigned short 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, status,2
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5783 ;;      Params:         2       0       0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0
  5786 ;;      Totals:         2       0       0       0       0       0       0
  5787 ;;Total ram usage:        2 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_myTMR0ISR
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text40
  5797   001452                     __ptext40:
  5798                           	callstack 0
  5799   001452                     i2_TMR0_WriteTimer:
  5800                           	callstack 19
  5801   001452                     
  5802                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5803   001452  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5804   001454  6ED7               	movwf	215,c	;volatile
  5805   001456                     
  5806                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5807   001456  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  5808   00145A  0012               	return		;funcret
  5809   00145C                     __end_ofi2_TMR0_WriteTimer:
  5810                           	callstack 0
  5811                           
  5812                           	psect	text41
  5813   000000                     __ptext41:
  5814                           	callstack 0
  5815   000000                     
  5816                           	psect	rparam
  5817   000000                     
  5818                           	psect	temp
  5819   000051                     btemp:
  5820                           	callstack 0
  5821   000051                     	ds	1
  5822   000000                     int$flags	set	btemp
  5823   000000                     wtemp8	set	btemp+1
  5824   000000                     ttemp5	set	btemp+1
  5825   000000                     ttemp6	set	btemp+4
  5826   000000                     ttemp7	set	btemp+8
  5827                           
  5828                           	psect	idloc
  5829                           
  5830                           ;Config register IDLOC0 @ 0x200000
  5831                           ;	unspecified, using default values
  5832   200000                     	org	2097152
  5833   200000  FF                 	db	255
  5834                           
  5835                           ;Config register IDLOC1 @ 0x200001
  5836                           ;	unspecified, using default values
  5837   200001                     	org	2097153
  5838   200001  FF                 	db	255
  5839                           
  5840                           ;Config register IDLOC2 @ 0x200002
  5841                           ;	unspecified, using default values
  5842   200002                     	org	2097154
  5843   200002  FF                 	db	255
  5844                           
  5845                           ;Config register IDLOC3 @ 0x200003
  5846                           ;	unspecified, using default values
  5847   200003                     	org	2097155
  5848   200003  FF                 	db	255
  5849                           
  5850                           ;Config register IDLOC4 @ 0x200004
  5851                           ;	unspecified, using default values
  5852   200004                     	org	2097156
  5853   200004  FF                 	db	255
  5854                           
  5855                           ;Config register IDLOC5 @ 0x200005
  5856                           ;	unspecified, using default values
  5857   200005                     	org	2097157
  5858   200005  FF                 	db	255
  5859                           
  5860                           ;Config register IDLOC6 @ 0x200006
  5861                           ;	unspecified, using default values
  5862   200006                     	org	2097158
  5863   200006  FF                 	db	255
  5864                           
  5865                           ;Config register IDLOC7 @ 0x200007
  5866                           ;	unspecified, using default values
  5867   200007                     	org	2097159
  5868   200007  FF                 	db	255
  5869                           
  5870                           	psect	config
  5871                           
  5872                           ; Padding undefined space
  5873   300000                     	org	3145728
  5874   300000  FF                 	db	255
  5875                           
  5876                           ;Config register CONFIG1H @ 0x300001
  5877                           ;	Oscillator Selection bits
  5878                           ;	FOSC = INTIO67, Internal oscillator block
  5879                           ;	4X PLL Enable
  5880                           ;	PLLCFG = OFF, Oscillator used directly
  5881                           ;	Primary clock enable bit
  5882                           ;	PRICLKEN = ON, Primary clock enabled
  5883                           ;	Fail-Safe Clock Monitor Enable bit
  5884                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5885                           ;	Internal/External Oscillator Switchover bit
  5886                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5887   300001                     	org	3145729
  5888   300001  28                 	db	40
  5889                           
  5890                           ;Config register CONFIG2L @ 0x300002
  5891                           ;	Power-up Timer Enable bit
  5892                           ;	PWRTEN = OFF, Power up timer disabled
  5893                           ;	Brown-out Reset Enable bits
  5894                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5895                           ;	Brown Out Reset Voltage bits
  5896                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5897   300002                     	org	3145730
  5898   300002  1F                 	db	31
  5899                           
  5900                           ;Config register CONFIG2H @ 0x300003
  5901                           ;	Watchdog Timer Enable bits
  5902                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5903                           ;	Watchdog Timer Postscale Select bits
  5904                           ;	WDTPS = 32768, 1:32768
  5905   300003                     	org	3145731
  5906   300003  3C                 	db	60
  5907                           
  5908                           ; Padding undefined space
  5909   300004                     	org	3145732
  5910   300004  FF                 	db	255
  5911                           
  5912                           ;Config register CONFIG3H @ 0x300005
  5913                           ;	CCP2 MUX bit
  5914                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5915                           ;	PORTB A/D Enable bit
  5916                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5917                           ;	P3A/CCP3 Mux bit
  5918                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5919                           ;	HFINTOSC Fast Start-up
  5920                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5921                           ;	Timer3 Clock input mux bit
  5922                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5923                           ;	ECCP2 B output mux bit
  5924                           ;	P2BMX = PORTB5, P2B is on RB5
  5925                           ;	MCLR Pin Enable bit
  5926                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5927   300005                     	org	3145733
  5928   300005  BF                 	db	191
  5929                           
  5930                           ;Config register CONFIG4L @ 0x300006
  5931                           ;	Stack Full/Underflow Reset Enable bit
  5932                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5933                           ;	Single-Supply ICSP Enable bit
  5934                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5935                           ;	Extended Instruction Set Enable bit
  5936                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5937                           ;	Background Debug
  5938                           ;	DEBUG = OFF, Disabled
  5939   300006                     	org	3145734
  5940   300006  85                 	db	133
  5941                           
  5942                           ; Padding undefined space
  5943   300007                     	org	3145735
  5944   300007  FF                 	db	255
  5945                           
  5946                           ;Config register CONFIG5L @ 0x300008
  5947                           ;	Code Protection Block 0
  5948                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5949                           ;	Code Protection Block 1
  5950                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5951                           ;	Code Protection Block 2
  5952                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5953                           ;	Code Protection Block 3
  5954                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5955   300008                     	org	3145736
  5956   300008  0F                 	db	15
  5957                           
  5958                           ;Config register CONFIG5H @ 0x300009
  5959                           ;	Boot Block Code Protection bit
  5960                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5961                           ;	Data EEPROM Code Protection bit
  5962                           ;	CPD = OFF, Data EEPROM not code-protected
  5963   300009                     	org	3145737
  5964   300009  C0                 	db	192
  5965                           
  5966                           ;Config register CONFIG6L @ 0x30000A
  5967                           ;	Write Protection Block 0
  5968                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5969                           ;	Write Protection Block 1
  5970                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5971                           ;	Write Protection Block 2
  5972                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5973                           ;	Write Protection Block 3
  5974                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5975   30000A                     	org	3145738
  5976   30000A  0F                 	db	15
  5977                           
  5978                           ;Config register CONFIG6H @ 0x30000B
  5979                           ;	Configuration Register Write Protection bit
  5980                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5981                           ;	Boot Block Write Protection bit
  5982                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5983                           ;	Data EEPROM Write Protection bit
  5984                           ;	WRTD = OFF, Data EEPROM not write-protected
  5985   30000B                     	org	3145739
  5986   30000B  E0                 	db	224
  5987                           
  5988                           ;Config register CONFIG7L @ 0x30000C
  5989                           ;	Table Read Protection Block 0
  5990                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5991                           ;	Table Read Protection Block 1
  5992                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5993                           ;	Table Read Protection Block 2
  5994                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5995                           ;	Table Read Protection Block 3
  5996                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5997   30000C                     	org	3145740
  5998   30000C  0F                 	db	15
  5999                           
  6000                           ;Config register CONFIG7H @ 0x30000D
  6001                           ;	Boot Block Table Read Protection bit
  6002                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6003   30000D                     	org	3145741
  6004   30000D  40                 	db	64
  6005                           tosu	equ	0xFFF
  6006                           tosh	equ	0xFFE
  6007                           tosl	equ	0xFFD
  6008                           stkptr	equ	0xFFC
  6009                           pclatu	equ	0xFFB
  6010                           pclath	equ	0xFFA
  6011                           pcl	equ	0xFF9
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           indf0	equ	0xFEF
  6019                           postinc0	equ	0xFEE
  6020                           postdec0	equ	0xFED
  6021                           preinc0	equ	0xFEC
  6022                           plusw0	equ	0xFEB
  6023                           fsr0h	equ	0xFEA
  6024                           fsr0l	equ	0xFE9
  6025                           wreg	equ	0xFE8
  6026                           indf1	equ	0xFE7
  6027                           postinc1	equ	0xFE6
  6028                           postdec1	equ	0xFE5
  6029                           preinc1	equ	0xFE4
  6030                           plusw1	equ	0xFE3
  6031                           fsr1h	equ	0xFE2
  6032                           fsr1l	equ	0xFE1
  6033                           bsr	equ	0xFE0
  6034                           indf2	equ	0xFDF
  6035                           postinc2	equ	0xFDE
  6036                           postdec2	equ	0xFDD
  6037                           preinc2	equ	0xFDC
  6038                           plusw2	equ	0xFDB
  6039                           fsr2h	equ	0xFDA
  6040                           fsr2l	equ	0xFD9
  6041                           status	equ	0xFD8

Data Sizes:
    Strings     445
    Constant    0
    Data        168
    BSS         44
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160     71     152
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1663$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1663$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_27(CODE[17]), STR_26(CODE[12]), STR_25(CODE[11]), STR_24(CODE[50]), 
		 -> STR_23(CODE[30]), STR_22(CODE[19]), STR_21(CODE[11]), STR_20(CODE[18]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[24]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_27(CODE[17]), STR_26(CODE[12]), STR_25(CODE[11]), STR_24(CODE[50]), 
		 -> STR_23(CODE[30]), STR_22(CODE[19]), STR_21(CODE[11]), STR_20(CODE[18]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[24]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_27(CODE[17]), STR_26(CODE[12]), STR_25(CODE[11]), STR_24(CODE[50]), 
		 -> STR_23(CODE[30]), STR_22(CODE[19]), STR_21(CODE[11]), STR_20(CODE[18]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[24]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 50
		 -> STR_27(CODE[17]), STR_26(CODE[12]), STR_25(CODE[11]), STR_24(CODE[50]), 
		 -> STR_23(CODE[30]), STR_22(CODE[19]), STR_21(CODE[11]), STR_20(CODE[18]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[24]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1698$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_27(CODE[17]), STR_26(CODE[12]), STR_25(CODE[11]), STR_24(CODE[50]), 
		 -> STR_23(CODE[30]), STR_22(CODE[19]), STR_21(CODE[11]), STR_20(CODE[18]), 
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[5]), STR_16(CODE[33]), 
		 -> STR_15(CODE[21]), STR_14(CODE[20]), STR_13(CODE[24]), STR_12(CODE[21]), 
		 -> STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[24]), 
		 -> STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), STR_4(CODE[15]), 
		 -> STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR1ISR(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _atoi->___wmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_myTMR1ISR
    _myTMR1ISR->i2_TMR1_WriteTimer
    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   15846
                                             46 BANK0     25    25      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR0_ReadTimer
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                     _TMR1_ReadTimer
           _TMR1_SetInterruptHandler
                    _TMR1_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13411
                                             65 COMRAM     2     2      0
                                             42 BANK0      4     0      4
                     _TMR1_ReadTimer (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   10888
                                             63 COMRAM     2     2      0
                                             36 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   10385
                                             59 COMRAM     4     4      0
                                             17 BANK0     19    13      6
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    4415
                                             41 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3669
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1804
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1747
                                             23 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1304
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1454
                                             20 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     340
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_ReadTimer                                       8     6      2      69
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     296
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                             14 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           6     6      0     376
                                              8 COMRAM     6     6      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     280
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _myTMR1ISR *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _myTMR1ISR                                           5     5      0     140
                                              2 COMRAM     5     5      0
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_ISR                                            0     0      0      96
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (11) _myTMR0ISR                                           6     6      0      96
                                              2 COMRAM     6     6      0
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (12) i2_TMR0_WriteTimer                                   2     0      2      96
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR0_ReadTimer
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _TMR1_ReadTimer
   _TMR1_SetInterruptHandler
   _TMR1_WriteTimer
   _printf
     _TMR1_ReadTimer (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
         _fputc
         _isdigit
         _xtoa
           _pad
             _fputc
             _fputs
               _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       i2_TMR0_WriteTimer
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _myTMR1ISR *
       i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      84       6       51.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     47      98       4       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITBIGSFRlllhl      26      0       0      27        0.0%
BITBIGSFRlllhhl     1E      0       0      26        0.0%
BITBIGSFRhlhh       19      0       0      16        0.0%
BITBIGSFRlhlhlh     13      0       0      19        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRlhlhll      C      0       0      21        0.0%
BITBIGSFRlllhhh      8      0       0      25        0.0%
BITBIGSFRlhlhll      7      0       0      20        0.0%
BITBIGSFRllhh        6      0       0      23        0.0%
BITBIGSFRllhl        6      0       0      24        0.0%
BITBIGSFRlhh         1      0       0      18        0.0%
BITBIGSFRlhll        1      0       0      22        0.0%
BITBIGSFRhll         1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16C      28        0.0%
DATA                 0      0     16C      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 05 23:36:55 2023

                                            l21 13F2                                              l24 1414  
                                            l39 145E                                              l71 122E  
                                            l80 13D8                                              l83 141E  
                                            l93 1432                             ___wmul@multiplicand 0011  
                               _timer0ReloadVal 004F                                             l125 12B0  
                                           l134 13BA                                             l155 1428  
                                           l139 1300                                             l237 00E8  
                                           l262 0326                                             l248 0254  
                                           l185 1286                                             l258 02FC  
                                           l355 1406                                             l347 1182  
                                           l259 0300                                             l364 1302  
                                           l368 1328                                             l392 1450  
                                           l386 1446                                             l395 1376  
                                           l389 143C                                 _timer1ReloadVal 004D  
                                           _pad 0DBA                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1101 0E40  
                                          l1103 0E62                                            l1114 0D56  
                                          l1124 08E4                                            l1221 0EF8  
                                          l1117 0D98                                            l1206 1100  
                                          l1126 08EC                                            l1119 0DB8  
                                          l1232 1460                                            l1073 12D8  
                                          l1138 0A78                                            l1170 10BA  
                                          l2300 1204                                            l3020 1076  
                                          l3100 02A6                                            l1229 1144  
                                          l2310 1146                                            l2302 121A  
                                          l1158 08AA                                            l3022 1094  
                                          l3030 12BA                                            l3110 02D6  
                                          l3102 02AE                                            l2312 115A  
                                          l2160 142A                                            l2304 121C  
                                          l1192 0BBA                                            l3024 10B0  
                                          l3120 0340                                            l3112 02E6  
                                          l3104 02C8                                            l3040 00DA  
                                          l2314 1166                                            l2306 121E  
                                          l2162 1420                                            l1098 0DFE  
                                          l3018 106A                                            l3130 03E2  
                                          l3122 0342                                            l3114 02F2  
                                          l3106 02CE                                            l3050 0112  
                                          l3042 00E6                                            l3034 0098  
                                          l1195 0BC2                                            l2164 143E  
                                          l2316 1172                                            l2308 122A  
                                          l2404 13BC                                            l2412 1416  
                                          l2420 13B2                                            l3028 12B2  
                                          l3140 0472                                            l3132 040C  
                                          l3124 0344                                            l3116 030E  
                                          l3108 02D2                                            l3060 0158  
                                          l3052 0120                                            l3044 00F6  
                                          l3036 00CA                                            l2166 1434  
                                          l2318 117E                                            l2406 13C4  
                                          l2414 141A                                            l2430 12EE  
                                          l1198 125A                                            l3150 04B8  
                                          l3142 0476                                            l3134 0436  
                                          l3126 0352                                            l3118 0334  
                                          l3070 0230                                            l3062 0166  
                                          l3054 012E                                            l3046 010E  
                                          l3038 00CE                                            l2168 1448  
                                          l2280 1284                                            l2408 13D0  
                                          l2416 139C                                            l2432 12F2  
                                          l2424 12DA                                            l3160 04FC  
                                          l3152 04E2                                            l3144 047A  
                                          l3136 0460                                            l3128 039A  
                                          l3080 0244                                            l3064 017A  
                                          l3056 013C                                            l3048 0110  
                                          l2450 1310                                            l2274 145C  
                                          l2282 1408                                            l2290 129E  
                                          l2418 13A6                                            l2426 12E8  
                                          l2434 12F8                                            l3330 0622  
                                          l3154 04EE                                            l3162 0510  
                                          l3138 046C                                            l3090 026A  
                                          l3082 025A                                            l3066 0186  
                                          l3170 053E                                            l3058 014A  
                                          l2452 1314                                            l2444 13F4  
                                          l2276 125C                                            l2292 12A0  
                                          l2284 1288                                            l2380 13E6  
                                          l2436 12FC                                            l2428 12EA  
                                          l3332 0862                                            l3156 04F4  
                                          l3148 048E                                            l3164 0512  
                                          l3092 026E                                            l3076 0234  
                                          l3068 0220                                            l2454 1322  
                                          l2278 1268                                            l2294 12AC  
                                          l2286 1294                                            l2382 13EA  
                                          l2374 13DA                                            l3334 0B10  
                                          l3166 0528                                            l3158 04F8  
                                          l3094 0282                                            l3078 0240  
                                          l2456 1326                                            l2448 1302  
                                          l2296 11FC                                            l2288 129C  
                                          l2384 13EE                                            l2376 13DE  
                                          l2800 0DDC                                            l3328 0552  
                                          l3096 029C                                            l3088 025E  
                                          l2298 1200                                            l2378 13E2  
                                          l2810 0E22                                            l2802 0DEA  
                                          l3098 02A2                                            l2820 10C0  
                                          l2900 0A7A                                            l2812 0E4E  
                                          l2804 0DF6                                            l2814 1230  
                                          l2822 10D4                                            l2910 0AE2  
                                          l2902 0A8E                                            l2830 0CF2  
                                          l2806 0E0A                                            l2824 10F6  
                                          l2912 0AEA                                            l2840 0D3C  
                                          l2832 0D04                                            l2808 0E1E  
                                          l2826 10FA                                            l2818 10BC  
                                          l2922 0B5C                                            l2914 0AF2  
                                          l2906 0A92                                            l2770 0E76  
                                          l2850 0D7A                                            l2834 0D10  
                                          l2924 0B8C                                            l2916 0B26  
                                          l2908 0AAE                                            l2772 0E88  
                                          l2852 0DA6                                            l2844 0D4E  
                                          l2836 0D1C                                            l2860 08D6  
                                          l2940 05CE                                            l2932 058C  
                                          l2790 1352                                            l2926 0B9E  
                                          l2774 0E92                                            l2846 0D62  
                                          l2838 0D2A                                            l2782 1102  
                                          l2870 0932                                            l2862 0914  
                                          l2854 08AC                                            l2950 05FC  
                                          l2942 05DC                                            l2934 05B0  
                                          ?_pad 001F                                            l2792 136E  
                                          l2776 0EB0                                            l2768 0E64  
                                          l2848 0D76                                            l2784 110E  
                                          l2880 0972                                            l2872 0942  
                                          l2864 091E                                            l2856 08BA  
                                          l2960 06AA                                            l2944 05DE  
                                          l2952 0630                                            l2936 05BE  
                                          l2778 0EE6                                            l2786 1120  
                                          l2890 0A16                                            l2882 0978  
                                          l2874 0952                                            l2866 0926  
                                          l2858 08BC                                            l2970 071E  
                                          l2962 06B8                                            l2954 0642  
                                          l2946 05F0                                            l2938 05CA  
                                          l2788 1124                                            l2796 0DBA  
                                          l2892 0A30                                            l2884 097E  
                                          l2876 095E                                            l2868 092C  
                                          l2980 079A                                            l2972 0742  
                                          l2964 06D8                                            l2956 0666  
                                          l2798 0DC8                                            l2894 0A4A  
                                          l2878 0962                                            l2886 09DC  
                                          l2990 0844                                            l2982 07B6  
                                          l2974 0776                                            l2958 069C  
                                          l2888 09F8                                            l2896 0A58  
                                          l2984 0814                                            l2992 0870  
                                          l2968 06E6                                            l2978 078A  
                                          l2996 0882                                            STR_1 7FD9  
                                          STR_2 7F0F                                            STR_3 7FE4  
                                          STR_4 7F99                                            STR_5 7E73  
                                          STR_6 7FF9                                            STR_7 7EA0  
                                          STR_8 7EF7                                            STR_9 7EA0  
                                          u2000 0460                                            u2001 045C  
                                          u2010 048A                                            u2011 0486  
                                          u1300 1310                                            u2020 04B8  
                                          u1301 130C                                            u2021 04B4  
                                          u1310 1322                                            u2030 04E2  
                                          u1311 131E                                            u2031 04DE  
                                          u2040 050C                                            u2041 0508  
                                          u2050 0524                                            u2051 0520  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u1280 12E8  
                                          u1520 0E76                                            u1600 0E4E  
                                          u1281 12E4                                            u1521 0E72  
                                          u1601 0E4A                                            u1290 1404  
                                          u1610 1254                                            u1530 0E88  
                                          u1291 13FE                                            u1611 124E  
                                          u1531 0E84                                            u1620 1256  
                                          u1540 0EB0                                            u1700 08BA  
                                          u1541 0EAC                                            u1701 08B6  
                                          u1630 10D4                                            u1550 0EE6  
                                          u1710 08D6                                            u1631 10D0  
                                          u1551 0EE2                                            u1711 08D2  
                                          u1296 1406                                            u1640 10F6  
                                          u1800 0ADE                                            u1560 1144  
                                          u1720 0942                                            u1641 10F2  
                                          u1801 0ADA                                            u1561 1140  
                                          u1721 093E                                            u1810 0B8C  
                                          u1650 0D04                                            u1570 0DC8  
                                          u1730 09B6                                            u1811 0B88  
                                          u1651 0D00                                            u1571 0DC4  
                                          u1820 0B9E                                            u1660 0D2A  
                                          u1580 0DEA                                            u1740 09F8  
                                          u1900 10B0                                            u1821 0B9A  
                                          u1661 0D26                                            u1581 0DE6  
                                          u1741 09F4                                            u1901 10AC  
                                          u1670 0D4A                                            u1590 0E40  
                                          u1750 0A16                                            u1830 05B0  
                                          u1910 00F6                                            u1671 0D46  
                                          u1591 0E3C                                            u1751 0A12  
                                          u1735 09A4                                            u1831 05AC  
                                          u1911 00F2                                            u1680 0D98  
                                          u1760 0A30                                            u1840 0642  
                                          u1920 017A                                            u1681 0D94  
                                          u1761 0A2C                                            u1841 063E  
                                          u1921 0176                                            u1690 0DA6  
                                          u1770 0A4A                                            u1850 0666  
                                          u1930 0254                                            u1691 0DA2  
                                          u1771 0A46                                            u1851 0662  
                                          u1931 0250                                            u1780 0A58  
                                          u1860 06AA                                            u1940 027E  
                                          u1781 0A54                                            u1861 06A6  
                                          u1941 027A                                            u1790 0AAE  
                                          u1870 071E                                            u1950 02E6  
                                          u1791 0AAA                                            u1871 071A  
                                          u1951 02E2                                            u1880 0742  
                                          u1960 030E                                            u1881 073E  
                                          u1961 030A                                            u1890 07B6  
                                          u1970 0334                                            u1891 07B2  
                                          u1971 0330                                            u1980 040C  
                                          u1981 0408                                            u1990 0436  
                                          u1991 0432                                            i2l50 0078  
                                          i2l44 0046                                            i2l49 0078  
                                          i2l90 11FA                                            i2l83 145A  
                                          i2l96 1464                                            _TMR1 000FCE  
                                          _WPUB 000F61                                     main@maxtime 009E  
                                   main@mintime 009A                                            _dbuf 00CE  
                                          _atoi 0A7A                                            _ctoa 0CF2  
                                          _main 0098                                   ?_EUSART1_Read 0001  
                                          _prec 0046                                            pad@i 0026  
                                          pad@p 0023                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0028  
                                          fsr2l 000FD9                                            btemp 0051  
                                          _xtoa 08AC                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0094  
                    ??_TMR1_SetInterruptHandler 0011                                    ___param_bank 000000  
                                         ??_pad 0025                         __end_of_TMR0_Initialize 1230  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 1416  
                                         ?_atoi 0015                                           ?_ctoa 0018  
                                         ?_main 0001                                           STR_10 7FA8  
                                         STR_11 7FED                                           STR_20 7F76  
                                         STR_12 7F3A                                           STR_21 7FC3  
                                         STR_13 7EDF                                           STR_22 7F63  
                                         STR_14 7F4F                                           STR_15 7F25  
                                         STR_23 7EC1                                           STR_16 7EA0  
                                         STR_24 7E41                                           STR_17 7FF4  
                                         STR_25 7FCE                                           STR_18 7EBE  
                                         STR_26 7FB7                                           STR_19 7EBE  
                                         STR_27 7F88                       TMR0_ReadTimer@readValHigh 0016  
                                         _T0CON 000FD5                                           ?_xtoa 002A  
                                         _T1CON 000FCD                                           i2l304 0F7E  
                                         i2l152 11C0                                           i2l139 1350  
                               _TMR0_WriteTimer 1416                                           i2l158 1462  
                                         i2l294 0CF0                                           i2l287 0CEE  
                                  vfpfcnvrt@fmt 0073                                           _TMR0H 000FD7  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                     ?_TMR0_SetInterruptHandler 000F                                __end_of_TMR0_ISR 11FC  
                              __end_of_TMR1_ISR 11C2                                           _flags 0048  
                                         _fputc 0E64                                           _fputs 1102  
                               __end_of_isdigit 125C                                           atoi@n 001C  
                                         pad@fp 001F                                           atoi@s 0015  
                                         _width 0044                                           ctoa@c 001A  
                                         _putch 1460                                           ctoa@l 001C  
                                         ctoa@w 001E                                           main@i 00A6  
                               __end_of_isspace 1102                         __end_of_TMR1_Initialize 12B2  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000F  
                                         ttemp5 0052                                           ttemp6 0055  
                                         ttemp7 0059                                           status 000FD8  
                                         wtemp8 0052                                           xtoa@c 0070  
                                         xtoa@d 002C                                           xtoa@i 006E  
                                         xtoa@n 0066                                           xtoa@p 0062  
                                         xtoa@w 0064                                    main@stopTime 0098  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 12DA  
                               __initialization 1004                                    __end_of_atoi 0BC4  
                                  __end_of_ctoa 0DBA                      __end_of_EUSART1_Initialize 1184  
                                  __end_of_main 058C                                    __end_of_xtoa 0A7A  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_atoi 0017  
                                        ??_ctoa 001B                                          ??_main 008E  
                                        ??_xtoa 0034                                   __activetblptr 000002  
                                        ?_fputc 000F                                          ?_fputs 0018  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 000F  
                                        i2l2320 0BC4                                          i2l2400 1192  
                                        i2l2330 0BFC                                          i2l2322 0BC8  
                                        i2l2402 11A6                                          i2l2340 0C92  
                                        i2l2332 0C44                                          i2l2324 0BDA  
                                        i2l2260 132A                                          i2l2342 0C94  
                                        i2l2334 0C4C                                          i2l2326 0BE2  
                                        i2l2350 0CBC                                          i2l2262 1338  
                                        i2l2270 1348                                          i2l2256 1452  
                                        i2l2344 0C98                                          i2l2336 0C5E  
                                        i2l2328 0BF4                                          i2l2272 134C  
                                        i2l2264 133A                                          i2l2360 0F58  
                                        i2l2258 1456                                          i2l2338 0C8E  
                                        i2l2346 0CA8                                          i2l2266 133E  
                                        i2l2362 0F7C                                          i2l2268 1342  
                                        i2l2356 0EFA                                          i2l2460 0022  
                                        i2l2390 11C8                                          i2l2358 0F0A  
                                        i2l2470 0070                                          i2l2462 0030  
                                        i2l3336 0CD0                                          i2l2392 11CC  
                                        i2l2464 003E                                          i2l2394 11E0  
                                        i2l2386 11C2                                          i2l2466 0054  
                                        i2l2388 11C4                                          i2l2396 1184  
                                        i2l2468 0062                                          i2l2398 1186  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                   vfpfcnvrt@done 0080  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC            __end_of_TMR1_DefaultInterruptHandler 1464  
                  _TMR1_DefaultInterruptHandler 1462                                    vfprintf@cfmt 0040  
                                        ___wmul 1352                         __end_of_TMR0_WriteTimer 1420  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 000F  
                              ?_TMR0_Initialize 0001                                          clear_0 104A  
                                        clear_1 1056                                          isa$std 000001  
                                        _printf 12B2                                          pad@buf 0021  
              ??_EUSART1_SetOverrunErrorHandler 0011                 ?_EUSART1_SetOverrunErrorHandler 000F  
                                        ctoa@fp 0018                                          fputc@c 000F  
                                        fputs@c 001C                                          fputs@i 001D  
                                        fputs@s 0018                                       ??_isdigit 0011  
                                  __mediumconst 7E40                                       ??_isspace 0011  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          putch@c 0001  
                              __end_of_vfprintf 10BC                                   main@startTime 0096  
      TMR1_SetInterruptHandler@InterruptHandler 000F        TMR0_SetInterruptHandler@InterruptHandler 000F  
                       __end_of_TMR1_WriteTimer 1302                                          xtoa@fp 002A  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 13DA  
                                    __accesstop 0060                         __end_of__initialization 105C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 1378  
                                  __pidataBANK1 0F80                             ??_SYSTEM_Initialize 0013  
                                     ?_TMR0_ISR 0001                                       ?_TMR1_ISR 0001  
               fp__TMR1_DefaultInterruptHandler 0000                   ?_TMR1_DefaultInterruptHandler 0001  
                                 __end_of_fputc 0EFA                                   __end_of_fputs 1146  
                                 __end_of_putch 1462                            __end_of_EUSART1_Read 132A  
                                       ??_fputc 0013                       __end_of_SYSTEM_Initialize 13F4  
                                       ??_fputs 001C                                         ??_putch 000F  
                                    __pbssBANK0 00CB                                      __pnvCOMRAM 004D  
               __end_of_EUSART1_SetErrorHandler 1452                __end_of_TMR0_SetInterruptHandler 1434  
                                       ?___wmul 000F                                      ??_TMR0_ISR 0009  
                                    ??_TMR1_ISR 0008                                ?_TMR0_WriteTimer 000F  
                                       ?_printf 008A          __end_of_EUSART1_SetFramingErrorHandler 1448  
                _EUSART1_SetFramingErrorHandler 143E                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                              ?_TMR1_WriteTimer 000F                                         __Hparam 0000  
                                       __Lparam 0000                               __end_of_myTMR0ISR 0CF2  
                             __end_of_myTMR1ISR 0F80                                       ?_vfprintf 0084  
                           _EUSART1_is_rx_ready 13F4                                         __pcinit 1004  
                                       __ramtop 0600                        TMR1_ReadTimer@readValLow 0016  
                                       __ptext0 0098                                         __ptext1 12B2  
                                       __ptext2 106A                                         __ptext3 058C  
                                       __ptext4 08AC                                         __ptext5 0DBA  
                                       __ptext6 1102                                         __ptext7 0CF2  
                                       __ptext8 0E64                                         __ptext9 1460  
                                     _T0CONbits 000FD5                  ??_TMR1_DefaultInterruptHandler 0001  
                     TMR1_ReadTimer@readValHigh 0015                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 1408                                         _isdigit 1230  
                            _EUSART1_Initialize 1146                        ??_PIN_MANAGER_Initialize 000F  
                                       _isspace 10BC                       ?_TMR1_SetInterruptHandler 000F  
                                       atoi@neg 001A                                         main@cmd 00A2  
                          end_of_initialization 105C                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0011  
                                 __Lmediumconst 7E40                     _EUSART1_OverrunErrorHandler 00F0  
                                       fputs@fp 001A                               __end_of_vfpfcnvrt 08AC  
                         TMR0_ReadTimer@readVal 0013                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0077                                      ??_vfprintf 0040  
                                _TMR0_ReadTimer 13BC                            ??_EUSART1_Initialize 0011  
                      _TMR0_SetInterruptHandler 142A                                       _PORTAbits 000F80  
                                    _songLength 00CC                                  _TMR1_ReadTimer 139C  
                         ??_EUSART1_is_rx_ready 000F                                    _EUSART1_Read 1302  
                        __end_of_TMR0_ReadTimer 13DA                    __end_of_INTERRUPT_Initialize 1460  
                            myTMR0ISR@tmr0State 004A                       i2TMR1_WriteTimer@timerVal 0001  
                                   vfpfcnvrt@ap 0075                                     vfpfcnvrt@cp 0082  
                                   vfpfcnvrt@fp 0071                                  __end_of___wmul 1378  
                        ?_OSCILLATOR_Initialize 0001                          __end_of_TMR1_ReadTimer 13BC  
                                __end_of_printf 12DA                             start_initialization 1004  
                                   __end_of_pad 0E64                                     vfprintf@fmt 0086  
                               ?_TMR0_ReadTimer 000F                                        ??___wmul 0013  
                                   __pdataBANK0 00A7                                     __pdataBANK1 0100  
                                      ??_printf 0042                                 ?_TMR1_ReadTimer 000F  
                                   __pbssCOMRAM 0044                                   __pcstackBANK0 0060  
              ??_EUSART1_SetFramingErrorHandler 0011                 ?_EUSART1_SetFramingErrorHandler 000F  
                         _TMR0_InterruptHandler 00F6                                       __pnvBANK0 00EE  
                        _PIN_MANAGER_Initialize 125C                                  myTMR1ISR@scale 0148  
                                myTMR1ISR@notes 00A7                                       __pintcode 0008  
              __end_of_TMR1_SetInterruptHandler 142A                                   __pmediumconst 7E40  
                  ??_INTERRUPT_InterruptManager 0009                                       _myTMR0ISR 0BC4  
                                     _myTMR1ISR 0EFA                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 000F  
                          _EUSART1_ErrorHandler 00EE                                        ?_isspace 000F  
                       _EUSART1_SetErrorHandler 1448                            _INTERRUPT_Initialize 145C  
                             ??_TMR0_Initialize 0011                                  ___wmul@product 0013  
       EUSART1_SetErrorHandler@interruptHandler 000F                                        _LATBbits 000F8A  
                                      _PIE1bits 000F9D                                       _noteIndex 004C  
                                      i2u120_40 0C8E                                        i2u120_41 0C8A  
                                      i2u121_40 0F0A                                        i2u121_41 0F06  
                                      i2u122_40 0F68                                        i2u122_41 0F62  
                                      i2u122_46 0F6A                                        i2u124_40 11E0  
                                      i2u116_40 1338                                        i2u132_40 0030  
                                      i2u124_41 11DC                                        i2u116_41 1334  
                                      i2u132_41 002C                                        i2u117_40 0BDA  
                                      i2u133_40 003E                                        i2u117_41 0BD6  
                                      i2u133_41 003A                                        i2u118_40 0BF4  
                                      i2u125_48 11E6                                        i2u126_40 11A6  
                                      i2u134_40 0054                                        i2u118_41 0BF0  
                                      i2u125_49 11FA                                        i2u126_41 11A2  
                                      i2u134_41 0050                                        i2u119_40 0C5E  
                                      i2u135_40 0062                                        i2u119_41 0C5A  
                                      i2u135_41 005E                                        i2u127_48 11AC  
                                      i2u136_40 0070                                        i2u127_49 11C0  
                                      i2u136_41 006C                      ??_TMR0_SetInterruptHandler 0011  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                      _TMR0_ISR 11C2                                        _TMR1_ISR 1184  
                                     _vfpfcnvrt 058C                        TMR0_ReadTimer@readValLow 0015  
                                     _xtoa$1741 0060                               ??_TMR1_Initialize 0011  
                                     main@i_961 00A5                               ___wmul@multiplier 000F  
                                    ?_myTMR0ISR 0001                                      ?_myTMR1ISR 0001  
                             i2_TMR0_WriteTimer 1452                                    _isspace$1789 0013  
                                    vfpfcnvrt@c 007F                              ?i2_TMR0_WriteTimer 0001  
                                   _INTCON2bits 000FF1                                       copy_data0 1018  
                                     copy_data1 1038                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 0003                                        __Hrparam 0000  
                             i2_TMR1_WriteTimer 132A                                      vfprintf@ap 0088  
                                      __Lrparam 0000                                      vfprintf@fp 0084  
                         TMR1_ReadTimer@readVal 0013                              ?i2_TMR1_WriteTimer 0001  
                       ??_OSCILLATOR_Initialize 000F                                      ?_vfpfcnvrt 0071  
                      _TMR1_SetInterruptHandler 1420                             ??i2_TMR1_WriteTimer 0003  
                         _TMR1_InterruptHandler 00F4                       __end_ofi2_TMR0_WriteTimer 145C  
                     ??_EUSART1_SetErrorHandler 0011                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1408                                        __ptext10 0A7A  
                                      __ptext11 10BC                                        __ptext20 1420  
                                      __ptext12 1230                                        __ptext21 11FC  
                                      __ptext13 1352                                      _T1GCONbits 000FCC  
                                      __ptext30 13F4                                        __ptext22 142A  
                                      __ptext14 12DA                                        __ptext31 1302  
                                      __ptext23 125C                                        __ptext15 139C  
                                      __ptext40 1452                                        __ptext24 1408  
                                      __ptext16 1416                                        __ptext41 0000  
                                      __ptext33 1184                                        __ptext25 145C  
                                      __ptext17 13BC                                        __ptext34 1462  
                                      __ptext26 1146                                        __ptext18 13DA  
                                      __ptext35 0EFA                                        __ptext27 1434  
                                      __ptext19 1288                                        __ptext36 132A  
                                      __ptext28 143E                                        __ptext37 11C2  
                                      __ptext29 1448                                        __ptext38 1464  
                                      __ptext39 0BC4                         TMR0_WriteTimer@timerVal 000F  
                             ??_TMR0_WriteTimer 0011                                        _duration 0100  
                              ??_TMR0_ReadTimer 0011                       __end_ofi2_TMR1_WriteTimer 1352  
          __end_of_TMR0_DefaultInterruptHandler 1466                    _TMR0_DefaultInterruptHandler 1464  
                                      _playNote 004B                                        _playSong 00CB  
EUSART1_SetOverrunErrorHandler@interruptHandler 000F                                        isa$xinst 000000  
                              ??_TMR1_ReadTimer 0011                                        int$flags 0051  
                                      _vfprintf 106A              __end_of_INTERRUPT_InterruptManager 0094  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 008A  
                             ??_TMR1_WriteTimer 0011                     _EUSART1_FramingErrorHandler 00F2  
                                   ??_myTMR0ISR 0003                                     ??_myTMR1ISR 0003  
                                    _INTCONbits 000FF2                                        isdigit@c 000F  
                        ??_INTERRUPT_Initialize 000F                                 main@overallTime 00A3  
                                      intlevel2 0000                                        isspace@c 000F  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 143E  
                _EUSART1_SetOverrunErrorHandler 1434                                      _RCSTA1bits 000FAB  
                                 _songSelection 00CD                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                        printf@ap 0042  
EUSART1_SetFramingErrorHandler@interruptHandler 000F                                     ??_vfpfcnvrt 003C  
                            _eusart1RxLastError 0049                                 _TMR0_Initialize 11FC  
                __end_of_PIN_MANAGER_Initialize 1288                                 _TMR1_Initialize 1288  
                                  fp__myTMR0ISR 0000                                    fp__myTMR1ISR 0000  
