

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 02 18:16:10 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 06/04/2022 GMT
    70                           ; 
    71                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F25K22 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   105   000000                     
   106 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   107   000000                     
   108 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   109   000000                     
   110                           	psect	idataBANK0
   111   001A18                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for myTMR1ISR@F6122
   115   001A18  1FB0               	dw	8112
   116   001A1A  2380               	dw	9088
   117   001A1C  27E0               	dw	10208
   118   000000                     _T1CON	set	4045
   119   000000                     _TMR1L	set	4046
   120   000000                     _TMR1H	set	4047
   121   000000                     _ANSELA	set	3896
   122   000000                     _ANSELB	set	3897
   123   000000                     _ANSELC	set	3898
   124   000000                     _TXREG1	set	4013
   125   000000                     _RCREG1	set	4014
   126   000000                     _SPBRG1	set	4015
   127   000000                     _TXSTA1	set	4012
   128   000000                     _LATAbits	set	3977
   129   000000                     _PIR1bits	set	3998
   130   000000                     _TMR1	set	4046
   131   000000                     _T1GCONbits	set	4044
   132   000000                     _T1CONbits	set	4045
   133   000000                     _LATB	set	3978
   134   000000                     _LATA	set	3977
   135   000000                     _RCSTA1bits	set	4011
   136   000000                     _TXSTA1bits	set	4012
   137   000000                     _PLLRDY	set	32407
   138   000000                     _RCSTA1	set	4011
   139   000000                     _BAUDCON1	set	4024
   140   000000                     _INTCONbits	set	4082
   141   000000                     _TRISA	set	3986
   142   000000                     _LATC	set	3979
   143   000000                     _PIE1bits	set	3997
   144   000000                     _LATBbits	set	3978
   145   000000                     _T1GCON	set	4044
   146   000000                     _RCONbits	set	4048
   147   000000                     _SPBRGH1	set	4016
   148   000000                     _OSCCON2	set	4050
   149   000000                     _OSCCON	set	4051
   150   000000                     _INTCON2bits	set	4081
   151   000000                     _OSCTUNE	set	3995
   152   000000                     _TRISC	set	3988
   153   000000                     _TRISB	set	3987
   154   000000                     _WPUB	set	3937
   155                           
   156                           	psect	mediumconst
   157   007DEC                     __pmediumconst:
   158                           	callstack 0
   159   007DEC  00                 	db	0
   160   007DED                     STR_22:
   161   007DED  43                 	db	67	;'C'
   162   007DEE  6F                 	db	111	;'o'
   163   007DEF  6E                 	db	110	;'n'
   164   007DF0  6E                 	db	110	;'n'
   165   007DF1  65                 	db	101	;'e'
   166   007DF2  63                 	db	99	;'c'
   167   007DF3  74                 	db	116	;'t'
   168   007DF4  20                 	db	32
   169   007DF5  6F                 	db	111	;'o'
   170   007DF6  73                 	db	115	;'s'
   171   007DF7  63                 	db	99	;'c'
   172   007DF8  6F                 	db	111	;'o'
   173   007DF9  70                 	db	112	;'p'
   174   007DFA  65                 	db	101	;'e'
   175   007DFB  20                 	db	32
   176   007DFC  74                 	db	116	;'t'
   177   007DFD  6F                 	db	111	;'o'
   178   007DFE  20                 	db	32
   179   007DFF  52                 	db	82	;'R'
   180   007E00  43                 	db	67	;'C'
   181   007E01  31                 	db	49	;'1'
   182   007E02  2E                 	db	46
   183   007E03  20                 	db	32
   184   007E04  20                 	db	32
   185   007E05  50                 	db	80	;'P'
   186   007E06  72                 	db	114	;'r'
   187   007E07  65                 	db	101	;'e'
   188   007E08  73                 	db	115	;'s'
   189   007E09  73                 	db	115	;'s'
   190   007E0A  20                 	db	32
   191   007E0B  61                 	db	97	;'a'
   192   007E0C  6E                 	db	110	;'n'
   193   007E0D  79                 	db	121	;'y'
   194   007E0E  20                 	db	32
   195   007E0F  6B                 	db	107	;'k'
   196   007E10  65                 	db	101	;'e'
   197   007E11  79                 	db	121	;'y'
   198   007E12  20                 	db	32
   199   007E13  77                 	db	119	;'w'
   200   007E14  68                 	db	104	;'h'
   201   007E15  65                 	db	101	;'e'
   202   007E16  6E                 	db	110	;'n'
   203   007E17  20                 	db	32
   204   007E18  72                 	db	114	;'r'
   205   007E19  65                 	db	101	;'e'
   206   007E1A  61                 	db	97	;'a'
   207   007E1B  64                 	db	100	;'d'
   208   007E1C  79                 	db	121	;'y'
   209   007E1D  20                 	db	32
   210   007E1E  74                 	db	116	;'t'
   211   007E1F  68                 	db	104	;'h'
   212   007E20  65                 	db	101	;'e'
   213   007E21  6E                 	db	110	;'n'
   214   007E22  20                 	db	32
   215   007E23  70                 	db	112	;'p'
   216   007E24  72                 	db	114	;'r'
   217   007E25  65                 	db	101	;'e'
   218   007E26  73                 	db	115	;'s'
   219   007E27  73                 	db	115	;'s'
   220   007E28  20                 	db	32
   221   007E29  61                 	db	97	;'a'
   222   007E2A  6E                 	db	110	;'n'
   223   007E2B  79                 	db	121	;'y'
   224   007E2C  20                 	db	32
   225   007E2D  6B                 	db	107	;'k'
   226   007E2E  65                 	db	101	;'e'
   227   007E2F  79                 	db	121	;'y'
   228   007E30  20                 	db	32
   229   007E31  74                 	db	116	;'t'
   230   007E32  6F                 	db	111	;'o'
   231   007E33  20                 	db	32
   232   007E34  72                 	db	114	;'r'
   233   007E35  65                 	db	101	;'e'
   234   007E36  73                 	db	115	;'s'
   235   007E37  75                 	db	117	;'u'
   236   007E38  6D                 	db	109	;'m'
   237   007E39  65                 	db	101	;'e'
   238   007E3A  2E                 	db	46
   239   007E3B  0D                 	db	13
   240   007E3C  0A                 	db	10
   241   007E3D  00                 	db	0
   242   007E3E                     STR_5:
   243   007E3E  52                 	db	82	;'R'
   244   007E3F  42                 	db	66	;'B'
   245   007E40  35                 	db	53	;'5'
   246   007E41  20                 	db	32
   247   007E42  2D                 	db	45
   248   007E43  3E                 	db	62	;'>'
   249   007E44  20                 	db	32
   250   007E45  4C                 	db	76	;'L'
   251   007E46  50                 	db	80	;'P'
   252   007E47  46                 	db	70	;'F'
   253   007E48  69                 	db	105	;'i'
   254   007E49  6E                 	db	110	;'n'
   255   007E4A  20                 	db	32
   256   007E4B  61                 	db	97	;'a'
   257   007E4C  6E                 	db	110	;'n'
   258   007E4D  64                 	db	100	;'d'
   259   007E4E  20                 	db	32
   260   007E4F  69                 	db	105	;'i'
   261   007E50  6E                 	db	110	;'n'
   262   007E51  73                 	db	115	;'s'
   263   007E52  74                 	db	116	;'t'
   264   007E53  61                 	db	97	;'a'
   265   007E54  6C                 	db	108	;'l'
   266   007E55  6C                 	db	108	;'l'
   267   007E56  20                 	db	32
   268   007E57  4C                 	db	76	;'L'
   269   007E58  50                 	db	80	;'P'
   270   007E59  46                 	db	70	;'F'
   271   007E5A  6F                 	db	111	;'o'
   272   007E5B  75                 	db	117	;'u'
   273   007E5C  74                 	db	116	;'t'
   274   007E5D  2F                 	db	47
   275   007E5E  41                 	db	65	;'A'
   276   007E5F  4D                 	db	77	;'M'
   277   007E60  50                 	db	80	;'P'
   278   007E61  69                 	db	105	;'i'
   279   007E62  6E                 	db	110	;'n'
   280   007E63  20                 	db	32
   281   007E64  6A                 	db	106	;'j'
   282   007E65  75                 	db	117	;'u'
   283   007E66  6D                 	db	109	;'m'
   284   007E67  70                 	db	112	;'p'
   285   007E68  65                 	db	101	;'e'
   286   007E69  72                 	db	114	;'r'
   287   007E6A  00                 	db	0
   288   007E6B                     STR_16:
   289   007E6B  62                 	db	98	;'b'
   290   007E6C  2F                 	db	47
   291   007E6D  42                 	db	66	;'B'
   292   007E6E  3A                 	db	58	;':'
   293   007E6F  20                 	db	32
   294   007E70  73                 	db	115	;'s'
   295   007E71  74                 	db	116	;'t'
   296   007E72  61                 	db	97	;'a'
   297   007E73  72                 	db	114	;'r'
   298   007E74  74                 	db	116	;'t'
   299   007E75  2F                 	db	47
   300   007E76  73                 	db	115	;'s'
   301   007E77  74                 	db	116	;'t'
   302   007E78  6F                 	db	111	;'o'
   303   007E79  70                 	db	112	;'p'
   304   007E7A  20                 	db	32
   305   007E7B  70                 	db	112	;'p'
   306   007E7C  72                 	db	114	;'r'
   307   007E7D  69                 	db	105	;'i'
   308   007E7E  6E                 	db	110	;'n'
   309   007E7F  74                 	db	116	;'t'
   310   007E80  69                 	db	105	;'i'
   311   007E81  6E                 	db	110	;'n'
   312   007E82  67                 	db	103	;'g'
   313   007E83  20                 	db	32
   314   007E84  69                 	db	105	;'i'
   315   007E85  6E                 	db	110	;'n'
   316   007E86  20                 	db	32
   317   007E87  54                 	db	84	;'T'
   318   007E88  4D                 	db	77	;'M'
   319   007E89  52                 	db	82	;'R'
   320   007E8A  31                 	db	49	;'1'
   321   007E8B  20                 	db	32
   322   007E8C  49                 	db	73	;'I'
   323   007E8D  53                 	db	83	;'S'
   324   007E8E  52                 	db	82	;'R'
   325   007E8F  0D                 	db	13
   326   007E90  0A                 	db	10
   327   007E91  00                 	db	0
   328   007E92                     STR_7:
   329   007E92  2D                 	db	45
   330   007E93  2D                 	db	45
   331   007E94  2D                 	db	45
   332   007E95  2D                 	db	45
   333   007E96  2D                 	db	45
   334   007E97  2D                 	db	45
   335   007E98  2D                 	db	45
   336   007E99  2D                 	db	45
   337   007E9A  2D                 	db	45
   338   007E9B  2D                 	db	45
   339   007E9C  2D                 	db	45
   340   007E9D  2D                 	db	45
   341   007E9E  2D                 	db	45
   342   007E9F  2D                 	db	45
   343   007EA0  2D                 	db	45
   344   007EA1  2D                 	db	45
   345   007EA2  2D                 	db	45
   346   007EA3  2D                 	db	45
   347   007EA4  2D                 	db	45
   348   007EA5  2D                 	db	45
   349   007EA6  2D                 	db	45
   350   007EA7  2D                 	db	45
   351   007EA8  2D                 	db	45
   352   007EA9  2D                 	db	45
   353   007EAA  2D                 	db	45
   354   007EAB  2D                 	db	45
   355   007EAC  2D                 	db	45
   356   007EAD  2D                 	db	45
   357   007EAE  2D                 	db	45
   358   007EAF  2D                 	db	45
   359   007EB0  0D                 	db	13
   360   007EB1  0A                 	db	10
   361   007EB2  00                 	db	0
   362   007EB3                     STR_14:
   363   007EB3  6E                 	db	110	;'n'
   364   007EB4  2F                 	db	47
   365   007EB5  4E                 	db	78	;'N'
   366   007EB6  3A                 	db	58	;':'
   367   007EB7  20                 	db	32
   368   007EB8  70                 	db	112	;'p'
   369   007EB9  6C                 	db	108	;'l'
   370   007EBA  61                 	db	97	;'a'
   371   007EBB  79                 	db	121	;'y'
   372   007EBC  2F                 	db	47
   373   007EBD  53                 	db	83	;'S'
   374   007EBE  74                 	db	116	;'t'
   375   007EBF  6F                 	db	111	;'o'
   376   007EC0  70                 	db	112	;'p'
   377   007EC1  20                 	db	32
   378   007EC2  70                 	db	112	;'p'
   379   007EC3  6C                 	db	108	;'l'
   380   007EC4  61                 	db	97	;'a'
   381   007EC5  79                 	db	121	;'y'
   382   007EC6  69                 	db	105	;'i'
   383   007EC7  6E                 	db	110	;'n'
   384   007EC8  67                 	db	103	;'g'
   385   007EC9  20                 	db	32
   386   007ECA  61                 	db	97	;'a'
   387   007ECB  20                 	db	32
   388   007ECC  6E                 	db	110	;'n'
   389   007ECD  6F                 	db	111	;'o'
   390   007ECE  74                 	db	116	;'t'
   391   007ECF  65                 	db	101	;'e'
   392   007ED0  0D                 	db	13
   393   007ED1  0A                 	db	10
   394   007ED2  00                 	db	0
   395   007ED3                     STR_17:
   396   007ED3  74                 	db	116	;'t'
   397   007ED4  3A                 	db	58	;':'
   398   007ED5  20                 	db	32
   399   007ED6  74                 	db	116	;'t'
   400   007ED7  69                 	db	105	;'i'
   401   007ED8  6D                 	db	109	;'m'
   402   007ED9  65                 	db	101	;'e'
   403   007EDA  20                 	db	32
   404   007EDB  74                 	db	116	;'t'
   405   007EDC  6F                 	db	111	;'o'
   406   007EDD  20                 	db	32
   407   007EDE  70                 	db	112	;'p'
   408   007EDF  72                 	db	114	;'r'
   409   007EE0  69                 	db	105	;'i'
   410   007EE1  6E                 	db	110	;'n'
   411   007EE2  74                 	db	116	;'t'
   412   007EE3  20                 	db	32
   413   007EE4  68                 	db	104	;'h'
   414   007EE5  65                 	db	101	;'e'
   415   007EE6  6C                 	db	108	;'l'
   416   007EE7  6C                 	db	108	;'l'
   417   007EE8  6F                 	db	111	;'o'
   418   007EE9  20                 	db	32
   419   007EEA  77                 	db	119	;'w'
   420   007EEB  6F                 	db	111	;'o'
   421   007EEC  72                 	db	114	;'r'
   422   007EED  6C                 	db	108	;'l'
   423   007EEE  64                 	db	100	;'d'
   424   007EEF  0D                 	db	13
   425   007EF0  0A                 	db	10
   426   007EF1  00                 	db	0
   427   007EF2                     STR_15:
   428   007EF2  69                 	db	105	;'i'
   429   007EF3  3A                 	db	58	;':'
   430   007EF4  20                 	db	32
   431   007EF5  69                 	db	105	;'i'
   432   007EF6  6E                 	db	110	;'n'
   433   007EF7  63                 	db	99	;'c'
   434   007EF8  72                 	db	114	;'r'
   435   007EF9  65                 	db	101	;'e'
   436   007EFA  6D                 	db	109	;'m'
   437   007EFB  65                 	db	101	;'e'
   438   007EFC  6E                 	db	110	;'n'
   439   007EFD  74                 	db	116	;'t'
   440   007EFE  20                 	db	32
   441   007EFF  6E                 	db	110	;'n'
   442   007F00  6F                 	db	111	;'o'
   443   007F01  74                 	db	116	;'t'
   444   007F02  65                 	db	101	;'e'
   445   007F03  20                 	db	32
   446   007F04  69                 	db	105	;'i'
   447   007F05  6E                 	db	110	;'n'
   448   007F06  20                 	db	32
   449   007F07  73                 	db	115	;'s'
   450   007F08  6F                 	db	111	;'o'
   451   007F09  6E                 	db	110	;'n'
   452   007F0A  67                 	db	103	;'g'
   453   007F0B  2E                 	db	46
   454   007F0C  0D                 	db	13
   455   007F0D  0A                 	db	10
   456   007F0E  00                 	db	0
   457   007F0F                     STR_13:
   458   007F0F  7A                 	db	122	;'z'
   459   007F10  3A                 	db	58	;':'
   460   007F11  20                 	db	32
   461   007F12  43                 	db	67	;'C'
   462   007F13  6C                 	db	108	;'l'
   463   007F14  65                 	db	101	;'e'
   464   007F15  61                 	db	97	;'a'
   465   007F16  72                 	db	114	;'r'
   466   007F17  20                 	db	32
   467   007F18  74                 	db	116	;'t'
   468   007F19  68                 	db	104	;'h'
   469   007F1A  65                 	db	101	;'e'
   470   007F1B  20                 	db	32
   471   007F1C  74                 	db	116	;'t'
   472   007F1D  65                 	db	101	;'e'
   473   007F1E  72                 	db	114	;'r'
   474   007F1F  6D                 	db	109	;'m'
   475   007F20  69                 	db	105	;'i'
   476   007F21  6E                 	db	110	;'n'
   477   007F22  61                 	db	97	;'a'
   478   007F23  6C                 	db	108	;'l'
   479   007F24  0D                 	db	13
   480   007F25  0A                 	db	10
   481   007F26  00                 	db	0
   482   007F27                     STR_8:
   483   007F27  20                 	db	32
   484   007F28  20                 	db	32
   485   007F29  20                 	db	32
   486   007F2A  20                 	db	32
   487   007F2B  20                 	db	32
   488   007F2C  20                 	db	32
   489   007F2D  20                 	db	32
   490   007F2E  20                 	db	32
   491   007F2F  54                 	db	84	;'T'
   492   007F30  4D                 	db	77	;'M'
   493   007F31  52                 	db	82	;'R'
   494   007F32  31                 	db	49	;'1'
   495   007F33  20                 	db	32
   496   007F34  3D                 	db	61	;'='
   497   007F35  20                 	db	32
   498   007F36  30                 	db	48	;'0'
   499   007F37  78                 	db	120	;'x'
   500   007F38  25                 	db	37
   501   007F39  30                 	db	48	;'0'
   502   007F3A  34                 	db	52	;'4'
   503   007F3B  78                 	db	120	;'x'
   504   007F3C  0D                 	db	13
   505   007F3D  0A                 	db	10
   506   007F3E  00                 	db	0
   507   007F3F                     STR_19:
   508   007F3F  53                 	db	83	;'S'
   509   007F40  74                 	db	116	;'t'
   510   007F41  61                 	db	97	;'a'
   511   007F42  72                 	db	114	;'r'
   512   007F43  74                 	db	116	;'t'
   513   007F44  20                 	db	32
   514   007F45  70                 	db	112	;'p'
   515   007F46  6C                 	db	108	;'l'
   516   007F47  61                 	db	97	;'a'
   517   007F48  79                 	db	121	;'y'
   518   007F49  69                 	db	105	;'i'
   519   007F4A  6E                 	db	110	;'n'
   520   007F4B  67                 	db	103	;'g'
   521   007F4C  20                 	db	32
   522   007F4D  6E                 	db	110	;'n'
   523   007F4E  6F                 	db	111	;'o'
   524   007F4F  74                 	db	116	;'t'
   525   007F50  65                 	db	101	;'e'
   526   007F51  2E                 	db	46
   527   007F52  0D                 	db	13
   528   007F53  0A                 	db	10
   529   007F54  00                 	db	0
   530   007F55                     STR_2:
   531   007F55  49                 	db	73	;'I'
   532   007F56  6E                 	db	110	;'n'
   533   007F57  74                 	db	116	;'t'
   534   007F58  65                 	db	101	;'e'
   535   007F59  72                 	db	114	;'r'
   536   007F5A  72                 	db	114	;'r'
   537   007F5B  75                 	db	117	;'u'
   538   007F5C  70                 	db	112	;'p'
   539   007F5D  74                 	db	116	;'t'
   540   007F5E  20                 	db	32
   541   007F5F  4D                 	db	77	;'M'
   542   007F60  75                 	db	117	;'u'
   543   007F61  73                 	db	115	;'s'
   544   007F62  69                 	db	105	;'i'
   545   007F63  63                 	db	99	;'c'
   546   007F64  20                 	db	32
   547   007F65  42                 	db	66	;'B'
   548   007F66  6F                 	db	111	;'o'
   549   007F67  78                 	db	120	;'x'
   550   007F68  0D                 	db	13
   551   007F69  0A                 	db	10
   552   007F6A  00                 	db	0
   553   007F6B                     STR_20:
   554   007F6B  53                 	db	83	;'S'
   555   007F6C  74                 	db	116	;'t'
   556   007F6D  6F                 	db	111	;'o'
   557   007F6E  70                 	db	112	;'p'
   558   007F6F  20                 	db	32
   559   007F70  70                 	db	112	;'p'
   560   007F71  6C                 	db	108	;'l'
   561   007F72  61                 	db	97	;'a'
   562   007F73  79                 	db	121	;'y'
   563   007F74  69                 	db	105	;'i'
   564   007F75  6E                 	db	110	;'n'
   565   007F76  67                 	db	103	;'g'
   566   007F77  20                 	db	32
   567   007F78  6E                 	db	110	;'n'
   568   007F79  6F                 	db	111	;'o'
   569   007F7A  74                 	db	116	;'t'
   570   007F7B  65                 	db	101	;'e'
   571   007F7C  2E                 	db	46
   572   007F7D  0D                 	db	13
   573   007F7E  0A                 	db	10
   574   007F7F  00                 	db	0
   575   007F80                     STR_21:
   576   007F80  50                 	db	80	;'P'
   577   007F81  6C                 	db	108	;'l'
   578   007F82  61                 	db	97	;'a'
   579   007F83  79                 	db	121	;'y'
   580   007F84  69                 	db	105	;'i'
   581   007F85  6E                 	db	110	;'n'
   582   007F86  67                 	db	103	;'g'
   583   007F87  20                 	db	32
   584   007F88  6E                 	db	110	;'n'
   585   007F89  65                 	db	101	;'e'
   586   007F8A  78                 	db	120	;'x'
   587   007F8B  74                 	db	116	;'t'
   588   007F8C  20                 	db	32
   589   007F8D  6E                 	db	110	;'n'
   590   007F8E  6F                 	db	111	;'o'
   591   007F8F  74                 	db	116	;'t'
   592   007F90  65                 	db	101	;'e'
   593   007F91  2E                 	db	46
   594   007F92  0D                 	db	13
   595   007F93  0A                 	db	10
   596   007F94  00                 	db	0
   597   007F95                     STR_12:
   598   007F95  5A                 	db	90	;'Z'
   599   007F96  3A                 	db	58	;':'
   600   007F97  20                 	db	32
   601   007F98  52                 	db	82	;'R'
   602   007F99  65                 	db	101	;'e'
   603   007F9A  73                 	db	115	;'s'
   604   007F9B  65                 	db	101	;'e'
   605   007F9C  74                 	db	116	;'t'
   606   007F9D  20                 	db	32
   607   007F9E  70                 	db	112	;'p'
   608   007F9F  72                 	db	114	;'r'
   609   007FA0  6F                 	db	111	;'o'
   610   007FA1  63                 	db	99	;'c'
   611   007FA2  65                 	db	101	;'e'
   612   007FA3  73                 	db	115	;'s'
   613   007FA4  73                 	db	115	;'s'
   614   007FA5  6F                 	db	111	;'o'
   615   007FA6  72                 	db	114	;'r'
   616   007FA7  0D                 	db	13
   617   007FA8  0A                 	db	10
   618   007FA9  00                 	db	0
   619   007FAA                     STR_27:
   620   007FAA  55                 	db	85	;'U'
   621   007FAB  6E                 	db	110	;'n'
   622   007FAC  6B                 	db	107	;'k'
   623   007FAD  6E                 	db	110	;'n'
   624   007FAE  6F                 	db	111	;'o'
   625   007FAF  77                 	db	119	;'w'
   626   007FB0  6E                 	db	110	;'n'
   627   007FB1  20                 	db	32
   628   007FB2  6B                 	db	107	;'k'
   629   007FB3  65                 	db	101	;'e'
   630   007FB4  79                 	db	121	;'y'
   631   007FB5  20                 	db	32
   632   007FB6  25                 	db	37
   633   007FB7  63                 	db	99	;'c'
   634   007FB8  0D                 	db	13
   635   007FB9  0A                 	db	10
   636   007FBA  00                 	db	0
   637   007FBB                     STR_4:
   638   007FBB  42                 	db	66	;'B'
   639   007FBC  6F                 	db	111	;'o'
   640   007FBD  61                 	db	97	;'a'
   641   007FBE  72                 	db	114	;'r'
   642   007FBF  64                 	db	100	;'d'
   643   007FC0  20                 	db	32
   644   007FC1  77                 	db	119	;'w'
   645   007FC2  69                 	db	105	;'i'
   646   007FC3  72                 	db	114	;'r'
   647   007FC4  69                 	db	105	;'i'
   648   007FC5  6E                 	db	110	;'n'
   649   007FC6  67                 	db	103	;'g'
   650   007FC7  0D                 	db	13
   651   007FC8  0A                 	db	10
   652   007FC9  00                 	db	0
   653   007FCA                     STR_10:
   654   007FCA  3F                 	db	63	;'?'
   655   007FCB  3A                 	db	58	;':'
   656   007FCC  20                 	db	32
   657   007FCD  48                 	db	72	;'H'
   658   007FCE  65                 	db	101	;'e'
   659   007FCF  6C                 	db	108	;'l'
   660   007FD0  70                 	db	112	;'p'
   661   007FD1  20                 	db	32
   662   007FD2  6D                 	db	109	;'m'
   663   007FD3  65                 	db	101	;'e'
   664   007FD4  6E                 	db	110	;'n'
   665   007FD5  75                 	db	117	;'u'
   666   007FD6  0D                 	db	13
   667   007FD7  0A                 	db	10
   668   007FD8  00                 	db	0
   669   007FD9                     STR_1:
   670   007FD9  69                 	db	105	;'i'
   671   007FDA  6E                 	db	110	;'n'
   672   007FDB  4C                 	db	76	;'L'
   673   007FDC  61                 	db	97	;'a'
   674   007FDD  62                 	db	98	;'b'
   675   007FDE  20                 	db	32
   676   007FDF  30                 	db	48	;'0'
   677   007FE0  34                 	db	52	;'4'
   678   007FE1  0D                 	db	13
   679   007FE2  0A                 	db	10
   680   007FE3  00                 	db	0
   681   007FE4                     STR_3:
   682   007FE4  44                 	db	68	;'D'
   683   007FE5  65                 	db	101	;'e'
   684   007FE6  76                 	db	118	;'v'
   685   007FE7  27                 	db	39
   686   007FE8  32                 	db	50	;'2'
   687   007FE9  31                 	db	49	;'1'
   688   007FEA  0D                 	db	13
   689   007FEB  0A                 	db	10
   690   007FEC  00                 	db	0
   691   007FED                     STR_11:
   692   007FED  6F                 	db	111	;'o'
   693   007FEE  3A                 	db	58	;':'
   694   007FEF  20                 	db	32
   695   007FF0  6B                 	db	107	;'k'
   696   007FF1  0D                 	db	13
   697   007FF2  0A                 	db	10
   698   007FF3  00                 	db	0
   699   007FF4                     STR_24:
   700   007FF4  6B                 	db	107	;'k'
   701   007FF5  2E                 	db	46
   702   007FF6  0D                 	db	13
   703   007FF7  0A                 	db	10
   704   007FF8  00                 	db	0
   705   007FF9                     STR_6:
   706   007FF9  0D                 	db	13
   707   007FFA  0A                 	db	10
   708   007FFB  3E                 	db	62	;'>'
   709   007FFC  20                 	db	32
   710   007FFD  00                 	db	0
   711   007FFE  00                 	db	0	; dummy byte at the end
   712   000000                     
   713                           ; #config settings
   714                           
   715                           	psect	cinit
   716   001656                     __pcinit:
   717                           	callstack 0
   718   001656                     start_initialization:
   719                           	callstack 0
   720   001656                     __initialization:
   721                           	callstack 0
   722                           
   723                           ; Initialize objects allocated to BANK0 (6 bytes)
   724                           ; load TBLPTR registers with __pidataBANK0
   725   001656  0E18               	movlw	low __pidataBANK0
   726   001658  6EF6               	movwf	tblptrl,c
   727   00165A  0E1A               	movlw	high __pidataBANK0
   728   00165C  6EF7               	movwf	tblptrh,c
   729   00165E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   730   001660  6EF8               	movwf	tblptru,c
   731   001662  EE00  F0E0         	lfsr	0,__pdataBANK0
   732   001666  EE10 F006          	lfsr	1,6
   733   00166A                     copy_data0:
   734   00166A  0009               	tblrd		*+
   735   00166C  CFF5 FFEE          	movff	tablat,postinc0
   736   001670  50E5               	movf	postdec1,w,c
   737   001672  50E1               	movf	fsr1l,w,c
   738   001674  E1FA               	bnz	copy_data0
   739                           
   740                           ; Clear objects allocated to BANK1 (32 bytes)
   741   001676  EE01  F000         	lfsr	0,__pbssBANK1
   742   00167A  0E20               	movlw	32
   743   00167C                     clear_0:
   744   00167C  6AEE               	clrf	postinc0,c
   745   00167E  06E8               	decf	wreg,f,c
   746   001680  E1FD               	bnz	clear_0
   747                           
   748                           ; Clear objects allocated to BANK0 (20 bytes)
   749   001682  EE00  F0CC         	lfsr	0,__pbssBANK0
   750   001686  0E14               	movlw	20
   751   001688                     clear_1:
   752   001688  6AEE               	clrf	postinc0,c
   753   00168A  06E8               	decf	wreg,f,c
   754   00168C  E1FD               	bnz	clear_1
   755   00168E                     end_of_initialization:
   756                           	callstack 0
   757   00168E                     __end_of__initialization:
   758                           	callstack 0
   759   00168E  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   760   001690  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   761   001692  0E00               	movlw	low (__Lmediumconst shr (0+16))
   762   001694  6EF8               	movwf	tblptru,c
   763   001696  0100               	movlb	0
   764   001698  EF7A  F003         	goto	_main	;jump to C main() function
   765                           
   766                           	psect	bssBANK0
   767   0000CC                     __pbssBANK0:
   768                           	callstack 0
   769   0000CC                     _width:
   770                           	callstack 0
   771   0000CC                     	ds	2
   772   0000CE                     _prec:
   773                           	callstack 0
   774   0000CE                     	ds	2
   775   0000D0                     _TMR1_InterruptHandler:
   776                           	callstack 0
   777   0000D0                     	ds	2
   778   0000D2                     _timer1ReloadVal:
   779                           	callstack 0
   780   0000D2                     	ds	2
   781   0000D4                     _EUSART1_ErrorHandler:
   782                           	callstack 0
   783   0000D4                     	ds	2
   784   0000D6                     _EUSART1_OverrunErrorHandler:
   785                           	callstack 0
   786   0000D6                     	ds	2
   787   0000D8                     _EUSART1_FramingErrorHandler:
   788                           	callstack 0
   789   0000D8                     	ds	2
   790   0000DA                     _flags:
   791                           	callstack 0
   792   0000DA                     	ds	1
   793   0000DB                     _eusart1RxLastError:
   794                           	callstack 0
   795   0000DB                     	ds	1
   796   0000DC                     myTMR1ISR@noteIndex:
   797                           	callstack 0
   798   0000DC                     	ds	1
   799   0000DD                     _doSomethingBad:
   800                           	callstack 0
   801   0000DD                     	ds	1
   802   0000DE                     _incNote:
   803                           	callstack 0
   804   0000DE                     	ds	1
   805   0000DF                     _playNote:
   806                           	callstack 0
   807   0000DF                     	ds	1
   808                           
   809                           	psect	dataBANK0
   810   0000E0                     __pdataBANK0:
   811                           	callstack 0
   812   0000E0                     myTMR1ISR@F6122:
   813                           	callstack 0
   814   0000E0                     	ds	6
   815                           
   816                           	psect	bssBANK1
   817   000100                     __pbssBANK1:
   818                           	callstack 0
   819   000100                     _dbuf:
   820                           	callstack 0
   821   000100                     	ds	32
   822                           
   823                           	psect	cstackBANK1
   824   000120                     __pcstackBANK1:
   825                           	callstack 0
   826   000120                     vfpfcnvrt@convarg:
   827                           	callstack 0
   828                           
   829                           ; 8 bytes @ 0x0
   830   000120                     	ds	8
   831   000128                     vfpfcnvrt@c:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x8
   835   000128                     	ds	1
   836   000129                     vfpfcnvrt@done:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x9
   840   000129                     	ds	2
   841   00012B                     vfpfcnvrt@cp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0xB
   845   00012B                     	ds	2
   846   00012D                     ?_printf:
   847                           	callstack 0
   848   00012D                     printf@fmt:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0xD
   852   00012D                     	ds	4
   853   000131                     printf@ap:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x11
   857   000131                     	ds	2
   858   000133                     ??_main:
   859                           
   860                           ; 1 bytes @ 0x13
   861   000133                     	ds	2
   862   000135                     main@cmd:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x15
   866   000135                     	ds	1
   867   000136                     main@i:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x16
   871   000136                     	ds	1
   872                           
   873                           	psect	cstackBANK0
   874   000060                     __pcstackBANK0:
   875                           	callstack 0
   876   000060                     i2vfprintf@cfmt:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x0
   880   000060                     	ds	2
   881   000062                     ?i2_printf:
   882                           	callstack 0
   883   000062                     i2printf@fmt:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x2
   887   000062                     	ds	2
   888   000064                     i2printf@ap:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x4
   892   000064                     	ds	2
   893   000066                     ??_myTMR1ISR:
   894                           
   895                           ; 1 bytes @ 0x6
   896   000066                     	ds	2
   897   000068                     myTMR1ISR@halfPeriod:
   898                           	callstack 0
   899                           
   900                           ; 6 bytes @ 0x8
   901   000068                     	ds	6
   902   00006E                     ??_INTERRUPT_InterruptManager:
   903                           
   904                           ; 1 bytes @ 0xE
   905   00006E                     	ds	12
   906   00007A                     ?_TMR1_ReadTimer:
   907                           	callstack 0
   908   00007A                     ?_isdigit:
   909                           	callstack 0
   910   00007A                     ?_isspace:
   911                           	callstack 0
   912   00007A                     ?___wmul:
   913                           	callstack 0
   914   00007A                     EUSART1_Write@txData:
   915                           	callstack 0
   916   00007A                     EUSART1_SetFramingErrorHandler@interruptHandler:
   917                           	callstack 0
   918   00007A                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   919                           	callstack 0
   920   00007A                     EUSART1_SetErrorHandler@interruptHandler:
   921                           	callstack 0
   922   00007A                     TMR1_WriteTimer@timerVal:
   923                           	callstack 0
   924   00007A                     TMR1_SetInterruptHandler@InterruptHandler:
   925                           	callstack 0
   926   00007A                     ___wmul@multiplier:
   927                           	callstack 0
   928   00007A                     isdigit@c:
   929                           	callstack 0
   930   00007A                     isspace@c:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x1A
   934   00007A                     	ds	1
   935   00007B                     putch@txData:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x1B
   939   00007B                     	ds	1
   940   00007C                     ??_TMR1_ReadTimer:
   941   00007C                     ??_isdigit:
   942   00007C                     ??_isspace:
   943   00007C                     ___wmul@multiplicand:
   944                           	callstack 0
   945   00007C                     fputc@c:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x1C
   949   00007C                     	ds	2
   950   00007E                     _isspace$1560:
   951                           	callstack 0
   952   00007E                     TMR1_ReadTimer@readVal:
   953                           	callstack 0
   954   00007E                     ___wmul@product:
   955                           	callstack 0
   956   00007E                     fputc@fp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x1E
   960   00007E                     	ds	2
   961   000080                     ??_fputc:
   962   000080                     ?_atoi:
   963                           	callstack 0
   964   000080                     TMR1_ReadTimer@readValHigh:
   965                           	callstack 0
   966   000080                     atoi@s:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x20
   970   000080                     	ds	1
   971   000081                     TMR1_ReadTimer@readValLow:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x21
   975   000081                     	ds	1
   976   000082                     ??_atoi:
   977                           
   978                           ; 1 bytes @ 0x22
   979   000082                     	ds	3
   980   000085                     ctoa@fp:
   981                           	callstack 0
   982   000085                     atoi@neg:
   983                           	callstack 0
   984   000085                     fputs@s:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x25
   988   000085                     	ds	2
   989   000087                     ctoa@c:
   990                           	callstack 0
   991   000087                     atoi@n:
   992                           	callstack 0
   993   000087                     fputs@fp:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x27
   997   000087                     	ds	1
   998   000088                     ??_ctoa:
   999                           
  1000                           ; 1 bytes @ 0x28
  1001   000088                     	ds	1
  1002   000089                     fputs@c:
  1003                           	callstack 0
  1004   000089                     ctoa@l:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x29
  1008   000089                     	ds	1
  1009   00008A                     fputs@i:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x2A
  1013   00008A                     	ds	1
  1014   00008B                     ctoa@w:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x2B
  1018   00008B                     	ds	1
  1019   00008C                     pad@fp:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x2C
  1023   00008C                     	ds	2
  1024   00008E                     pad@buf:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x2E
  1028   00008E                     	ds	2
  1029   000090                     pad@p:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x30
  1033   000090                     	ds	2
  1034   000092                     ??_pad:
  1035                           
  1036                           ; 1 bytes @ 0x32
  1037   000092                     	ds	1
  1038   000093                     pad@i:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x33
  1042   000093                     	ds	2
  1043   000095                     pad@w:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x35
  1047   000095                     	ds	2
  1048   000097                     xtoa@fp:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x37
  1052   000097                     	ds	2
  1053   000099                     xtoa@d:
  1054                           	callstack 0
  1055                           
  1056                           ; 8 bytes @ 0x39
  1057   000099                     	ds	8
  1058   0000A1                     ??_xtoa:
  1059                           
  1060                           ; 1 bytes @ 0x41
  1061   0000A1                     	ds	8
  1062   0000A9                     _xtoa$1512:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x49
  1066   0000A9                     	ds	2
  1067   0000AB                     xtoa@p:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x4B
  1071   0000AB                     	ds	2
  1072   0000AD                     xtoa@w:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x4D
  1076   0000AD                     	ds	2
  1077   0000AF                     xtoa@n:
  1078                           	callstack 0
  1079                           
  1080                           ; 8 bytes @ 0x4F
  1081   0000AF                     	ds	8
  1082   0000B7                     xtoa@i:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x57
  1086   0000B7                     	ds	2
  1087   0000B9                     xtoa@c:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x59
  1091   0000B9                     	ds	1
  1092   0000BA                     vfpfcnvrt@fp:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x5A
  1096   0000BA                     	ds	2
  1097   0000BC                     vfpfcnvrt@fmt:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x5C
  1101   0000BC                     	ds	2
  1102   0000BE                     vfpfcnvrt@ap:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x5E
  1106   0000BE                     	ds	2
  1107   0000C0                     ??_vfpfcnvrt:
  1108                           
  1109                           ; 1 bytes @ 0x60
  1110   0000C0                     	ds	4
  1111   0000C4                     ?_vfprintf:
  1112                           	callstack 0
  1113   0000C4                     vfprintf@fp:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x64
  1117   0000C4                     	ds	2
  1118   0000C6                     vfprintf@fmt:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x66
  1122   0000C6                     	ds	2
  1123   0000C8                     vfprintf@ap:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x68
  1127   0000C8                     	ds	2
  1128   0000CA                     vfprintf@cfmt:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x6A
  1132   0000CA                     	ds	2
  1133   0000CC                     
  1134                           ; 1 bytes @ 0x6C
  1135                           
  1136                           	psect	cstackCOMRAM
  1137   000001                     __pcstackCOMRAM:
  1138                           	callstack 0
  1139   000001                     ?i2___wmul:
  1140                           	callstack 0
  1141   000001                     i2EUSART1_Write@txData:
  1142                           	callstack 0
  1143   000001                     i2TMR1_WriteTimer@timerVal:
  1144                           	callstack 0
  1145   000001                     i2___wmul@multiplier:
  1146                           	callstack 0
  1147   000001                     i2isdigit@c:
  1148                           	callstack 0
  1149   000001                     i2isspace@c:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x0
  1153   000001                     	ds	1
  1154   000002                     i2putch@txData:
  1155                           	callstack 0
  1156                           
  1157                           ; 1 bytes @ 0x1
  1158   000002                     	ds	1
  1159   000003                     ??i2_isspace:
  1160   000003                     i2___wmul@multiplicand:
  1161                           	callstack 0
  1162   000003                     i2fputc@c:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x2
  1166   000003                     	ds	2
  1167   000005                     i2___wmul@product:
  1168                           	callstack 0
  1169   000005                     i2fputc@fp:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0x4
  1173   000005                     	ds	2
  1174   000007                     ??i2_fputc:
  1175   000007                     ?i2_atoi:
  1176                           	callstack 0
  1177   000007                     i2atoi@s:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x6
  1181   000007                     	ds	2
  1182   000009                     ??i2_atoi:
  1183                           
  1184                           ; 1 bytes @ 0x8
  1185   000009                     	ds	3
  1186   00000C                     i2ctoa@fp:
  1187                           	callstack 0
  1188   00000C                     i2atoi@neg:
  1189                           	callstack 0
  1190   00000C                     i2fputs@s:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0xB
  1194   00000C                     	ds	2
  1195   00000E                     i2ctoa@c:
  1196                           	callstack 0
  1197   00000E                     i2atoi@n:
  1198                           	callstack 0
  1199   00000E                     i2fputs@fp:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0xD
  1203   00000E                     	ds	1
  1204   00000F                     ??i2_ctoa:
  1205                           
  1206                           ; 1 bytes @ 0xE
  1207   00000F                     	ds	1
  1208   000010                     i2fputs@c:
  1209                           	callstack 0
  1210   000010                     i2ctoa@l:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0xF
  1214   000010                     	ds	1
  1215   000011                     i2fputs@i:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x10
  1219   000011                     	ds	1
  1220   000012                     i2ctoa@w:
  1221                           	callstack 0
  1222                           
  1223                           ; 2 bytes @ 0x11
  1224   000012                     	ds	1
  1225   000013                     i2pad@fp:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x12
  1229   000013                     	ds	2
  1230   000015                     i2pad@buf:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x14
  1234   000015                     	ds	2
  1235   000017                     i2pad@p:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x16
  1239   000017                     	ds	2
  1240   000019                     ??i2_pad:
  1241                           
  1242                           ; 1 bytes @ 0x18
  1243   000019                     	ds	1
  1244   00001A                     i2pad@i:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x19
  1248   00001A                     	ds	2
  1249   00001C                     i2pad@w:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x1B
  1253   00001C                     	ds	2
  1254   00001E                     i2xtoa@fp:
  1255                           	callstack 0
  1256                           
  1257                           ; 2 bytes @ 0x1D
  1258   00001E                     	ds	2
  1259   000020                     i2xtoa@d:
  1260                           	callstack 0
  1261                           
  1262                           ; 8 bytes @ 0x1F
  1263   000020                     	ds	8
  1264   000028                     ??i2_xtoa:
  1265                           
  1266                           ; 1 bytes @ 0x27
  1267   000028                     	ds	8
  1268   000030                     i2_xtoa$1512:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x2F
  1272   000030                     	ds	2
  1273   000032                     i2xtoa@p:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x31
  1277   000032                     	ds	2
  1278   000034                     i2xtoa@w:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x33
  1282   000034                     	ds	2
  1283   000036                     i2xtoa@n:
  1284                           	callstack 0
  1285                           
  1286                           ; 8 bytes @ 0x35
  1287   000036                     	ds	8
  1288   00003E                     i2xtoa@i:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x3D
  1292   00003E                     	ds	2
  1293   000040                     i2xtoa@c:
  1294                           	callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x3F
  1297   000040                     	ds	1
  1298   000041                     i2vfpfcnvrt@fp:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x40
  1302   000041                     	ds	2
  1303   000043                     i2vfpfcnvrt@fmt:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x42
  1307   000043                     	ds	2
  1308   000045                     i2vfpfcnvrt@ap:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x44
  1312   000045                     	ds	2
  1313   000047                     ??i2_vfpfcnvrt:
  1314                           
  1315                           ; 1 bytes @ 0x46
  1316   000047                     	ds	4
  1317   00004B                     i2vfpfcnvrt@convarg:
  1318                           	callstack 0
  1319                           
  1320                           ; 8 bytes @ 0x4A
  1321   00004B                     	ds	8
  1322   000053                     i2vfpfcnvrt@c:
  1323                           	callstack 0
  1324                           
  1325                           ; 1 bytes @ 0x52
  1326   000053                     	ds	1
  1327   000054                     i2vfpfcnvrt@done:
  1328                           	callstack 0
  1329                           
  1330                           ; 2 bytes @ 0x53
  1331   000054                     	ds	2
  1332   000056                     i2vfpfcnvrt@cp:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x55
  1336   000056                     	ds	2
  1337   000058                     ?i2_vfprintf:
  1338                           	callstack 0
  1339   000058                     i2vfprintf@fp:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0x57
  1343   000058                     	ds	2
  1344   00005A                     i2vfprintf@fmt:
  1345                           	callstack 0
  1346                           
  1347                           ; 2 bytes @ 0x59
  1348   00005A                     	ds	2
  1349   00005C                     i2vfprintf@ap:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x5B
  1353   00005C                     	ds	2
  1354   00005E                     
  1355                           ; 1 bytes @ 0x5D
  1356 ;;
  1357 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1358 ;;
  1359 ;; *************** function _main *****************
  1360 ;; Defined at:
  1361 ;;		line 36 in file "main.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  i               1   22[BANK1 ] unsigned char 
  1366 ;;  cmd             1   21[BANK1 ] unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      void 
  1369 ;; Registers used:
  1370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         0       0       0       0       0       0       0
  1377 ;;      Locals:         0       0       2       0       0       0       0
  1378 ;;      Temps:          0       0       2       0       0       0       0
  1379 ;;      Totals:         0       0       4       0       0       0       0
  1380 ;;Total ram usage:        4 bytes
  1381 ;; Hardware stack levels required when called: 21
  1382 ;; This function calls:
  1383 ;;		_EUSART1_Read
  1384 ;;		_EUSART1_is_rx_ready
  1385 ;;		_SYSTEM_Initialize
  1386 ;;		_TMR1_ReadTimer
  1387 ;;		_TMR1_SetInterruptHandler
  1388 ;;		_TMR1_WriteTimer
  1389 ;;		_printf
  1390 ;; This function is called by:
  1391 ;;		Startup code after reset
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           	psect	text0
  1396   0006F4                     __ptext0:
  1397                           	callstack 0
  1398   0006F4                     _main:
  1399                           	callstack 10
  1400   0006F4                     
  1401                           ;main.c: 38:         if ((EUSART1_is_rx_ready())) {;main.c: 39:             cmd = EUSART
      +                          1_Read();;main.c: 41:                 case '?':
  1402   0006F4  ECCC  F00C         	call	_SYSTEM_Initialize	;wreg free
  1403   0006F8                     
  1404                           ;main.c: 46:                     printf("o: k\r\n");
  1405   0006F8  0E00               	movlw	0
  1406   0006FA  0100               	movlb	0	; () banked
  1407   0006FC  6F7B               	movwf	(TMR1_WriteTimer@timerVal+1)& (0+255),b
  1408   0006FE  0E00               	movlw	0
  1409   000700  6F7A               	movwf	TMR1_WriteTimer@timerVal& (0+255),b
  1410   000702  ECFC  F00B         	call	_TMR1_WriteTimer	;wreg free
  1411   000706                     
  1412                           ;main.c: 47:                     printf("Z: Reset processor\r\n");
  1413   000706  909E               	bcf	158,0,c	;volatile
  1414   000708                     l35:
  1415   000708  A09E               	btfss	158,0,c	;volatile
  1416   00070A  EF89  F003         	goto	u3001
  1417   00070E  EF8B  F003         	goto	u3000
  1418   000712                     u3001:
  1419   000712  EF84  F003         	goto	l35
  1420   000716                     u3000:
  1421   000716                     
  1422                           ;main.c: 50:                     printf("i: increment note in song.\r\n");
  1423   000716  0ED8               	movlw	low _myTMR1ISR
  1424   000718  0100               	movlb	0	; () banked
  1425   00071A  6F7A               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  1426   00071C  0E11               	movlw	high _myTMR1ISR
  1427   00071E  6F7B               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  1428   000720  ECF3  F00C         	call	_TMR1_SetInterruptHandler	;wreg free
  1429   000724                     
  1430                           ;main.c: 54:                     break;
  1431   000724  0ED9               	movlw	low STR_1
  1432   000726  0101               	movlb	1	; () banked
  1433   000728  6F2D               	movwf	printf@fmt& (0+255),b
  1434   00072A  0E7F               	movlw	high STR_1
  1435   00072C  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1436   00072E  EC28  F00C         	call	_printf	;wreg free
  1437   000732                     
  1438                           ;main.c: 55: 
  1439   000732  0E55               	movlw	low STR_2
  1440   000734  0101               	movlb	1	; () banked
  1441   000736  6F2D               	movwf	printf@fmt& (0+255),b
  1442   000738  0E7F               	movlw	high STR_2
  1443   00073A  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1444   00073C  EC28  F00C         	call	_printf	;wreg free
  1445   000740                     
  1446                           ;main.c: 56: 
  1447   000740  0EE4               	movlw	low STR_3
  1448   000742  0101               	movlb	1	; () banked
  1449   000744  6F2D               	movwf	printf@fmt& (0+255),b
  1450   000746  0E7F               	movlw	high STR_3
  1451   000748  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1452   00074A  EC28  F00C         	call	_printf	;wreg free
  1453   00074E                     
  1454                           ;main.c: 57: 
  1455   00074E  0EBB               	movlw	low STR_4
  1456   000750  0101               	movlb	1	; () banked
  1457   000752  6F2D               	movwf	printf@fmt& (0+255),b
  1458   000754  0E7F               	movlw	high STR_4
  1459   000756  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1460   000758  EC28  F00C         	call	_printf	;wreg free
  1461   00075C                     
  1462                           ;main.c: 58: 
  1463   00075C  0E3E               	movlw	low STR_5
  1464   00075E  0101               	movlb	1	; () banked
  1465   000760  6F2D               	movwf	printf@fmt& (0+255),b
  1466   000762  0E7E               	movlw	high STR_5
  1467   000764  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1468   000766  EC28  F00C         	call	_printf	;wreg free
  1469   00076A                     
  1470                           ;main.c: 59:                 case 'n':
  1471   00076A  0EF9               	movlw	low STR_6
  1472   00076C  0101               	movlb	1	; () banked
  1473   00076E  6F2D               	movwf	printf@fmt& (0+255),b
  1474   000770  0E7F               	movlw	high STR_6
  1475   000772  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1476   000774  EC28  F00C         	call	_printf	;wreg free
  1477   000778                     l3745:
  1478                           
  1479                           ;main.c: 63: 
  1480   000778  ECE2  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  1481   00077C  0900               	iorlw	0
  1482   00077E  B4D8               	btfsc	status,2,c
  1483   000780  EFC4  F003         	goto	u3011
  1484   000784  EFC6  F003         	goto	u3010
  1485   000788                     u3011:
  1486   000788  EFBC  F003         	goto	l3745
  1487   00078C                     u3010:
  1488   00078C                     
  1489                           ;main.c: 64: 
  1490   00078C  EC3D  F00C         	call	_EUSART1_Read	;wreg free
  1491   000790  0101               	movlb	1	; () banked
  1492   000792  6F35               	movwf	main@cmd& (0+255),b
  1493                           
  1494                           ;main.c: 65: 
  1495   000794  EFCC  F004         	goto	l3819
  1496   000798                     l3749:
  1497                           
  1498                           ; BSR set to: 1
  1499                           ;main.c: 67:                 case 'N':
  1500   000798  0E92               	movlw	low STR_7
  1501   00079A  6F2D               	movwf	printf@fmt& (0+255),b
  1502   00079C  0E7E               	movlw	high STR_7
  1503   00079E  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1504   0007A0  EC28  F00C         	call	_printf	;wreg free
  1505                           
  1506                           ;main.c: 68:                     printf("Stop playing note.\r\n");
  1507   0007A4  0E27               	movlw	low STR_8
  1508   0007A6  0101               	movlb	1	; () banked
  1509   0007A8  6F2D               	movwf	printf@fmt& (0+255),b
  1510   0007AA  0E7F               	movlw	high STR_8
  1511   0007AC  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1512   0007AE  ECA1  F00C         	call	_TMR1_ReadTimer	;wreg free
  1513   0007B2  C07A  F12F         	movff	?_TMR1_ReadTimer,?_printf+2
  1514   0007B6  C07B  F130         	movff	?_TMR1_ReadTimer+1,?_printf+3
  1515   0007BA  EC28  F00C         	call	_printf	;wreg free
  1516                           
  1517                           ;main.c: 69:                     playNote = 0;
  1518   0007BE  0E92               	movlw	low STR_7
  1519   0007C0  0101               	movlb	1	; () banked
  1520   0007C2  6F2D               	movwf	printf@fmt& (0+255),b
  1521   0007C4  0E7E               	movlw	high STR_7
  1522   0007C6  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1523   0007C8  EC28  F00C         	call	_printf	;wreg free
  1524                           
  1525                           ;main.c: 70:                     break;
  1526   0007CC  0ECA               	movlw	low STR_10
  1527   0007CE  0101               	movlb	1	; () banked
  1528   0007D0  6F2D               	movwf	printf@fmt& (0+255),b
  1529   0007D2  0E7F               	movlw	high STR_10
  1530   0007D4  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1531   0007D6  EC28  F00C         	call	_printf	;wreg free
  1532                           
  1533                           ;main.c: 71: 
  1534   0007DA  0EED               	movlw	low STR_11
  1535   0007DC  0101               	movlb	1	; () banked
  1536   0007DE  6F2D               	movwf	printf@fmt& (0+255),b
  1537   0007E0  0E7F               	movlw	high STR_11
  1538   0007E2  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1539   0007E4  EC28  F00C         	call	_printf	;wreg free
  1540                           
  1541                           ;main.c: 72: 
  1542   0007E8  0E95               	movlw	low STR_12
  1543   0007EA  0101               	movlb	1	; () banked
  1544   0007EC  6F2D               	movwf	printf@fmt& (0+255),b
  1545   0007EE  0E7F               	movlw	high STR_12
  1546   0007F0  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1547   0007F2  EC28  F00C         	call	_printf	;wreg free
  1548                           
  1549                           ;main.c: 73: 
  1550   0007F6  0E0F               	movlw	low STR_13
  1551   0007F8  0101               	movlb	1	; () banked
  1552   0007FA  6F2D               	movwf	printf@fmt& (0+255),b
  1553   0007FC  0E7F               	movlw	high STR_13
  1554   0007FE  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1555   000800  EC28  F00C         	call	_printf	;wreg free
  1556                           
  1557                           ;main.c: 74: 
  1558   000804  0EB3               	movlw	low STR_14
  1559   000806  0101               	movlb	1	; () banked
  1560   000808  6F2D               	movwf	printf@fmt& (0+255),b
  1561   00080A  0E7E               	movlw	high STR_14
  1562   00080C  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1563   00080E  EC28  F00C         	call	_printf	;wreg free
  1564                           
  1565                           ;main.c: 75:                 case 'i':
  1566   000812  0EF2               	movlw	low STR_15
  1567   000814  0101               	movlb	1	; () banked
  1568   000816  6F2D               	movwf	printf@fmt& (0+255),b
  1569   000818  0E7E               	movlw	high STR_15
  1570   00081A  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1571   00081C  EC28  F00C         	call	_printf	;wreg free
  1572                           
  1573                           ;main.c: 76:                     printf("Playing next note.\r\n");
  1574   000820  0E6B               	movlw	low STR_16
  1575   000822  0101               	movlb	1	; () banked
  1576   000824  6F2D               	movwf	printf@fmt& (0+255),b
  1577   000826  0E7E               	movlw	high STR_16
  1578   000828  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1579   00082A  EC28  F00C         	call	_printf	;wreg free
  1580                           
  1581                           ;main.c: 77:                     incNote = 1;
  1582   00082E  0ED3               	movlw	low STR_17
  1583   000830  0101               	movlb	1	; () banked
  1584   000832  6F2D               	movwf	printf@fmt& (0+255),b
  1585   000834  0E7E               	movlw	high STR_17
  1586   000836  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1587   000838  EC28  F00C         	call	_printf	;wreg free
  1588                           
  1589                           ;main.c: 78:                     break;
  1590   00083C  0E92               	movlw	low STR_7
  1591   00083E  0101               	movlb	1	; () banked
  1592   000840  6F2D               	movwf	printf@fmt& (0+255),b
  1593   000842  0E7E               	movlw	high STR_7
  1594   000844  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1595   000846  EC28  F00C         	call	_printf	;wreg free
  1596                           
  1597                           ;main.c: 79: 
  1598   00084A  EFBC  F003         	goto	l3745
  1599   00084E                     l3751:
  1600                           
  1601                           ; BSR set to: 1
  1602                           ;main.c: 85:                     if (cmd == 'b') doSomethingBad = 1;
  1603   00084E  0E3F               	movlw	low STR_19
  1604   000850  6F2D               	movwf	printf@fmt& (0+255),b
  1605   000852  0E7F               	movlw	high STR_19
  1606   000854  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1607   000856  EC28  F00C         	call	_printf	;wreg free
  1608   00085A                     
  1609                           ;main.c: 86:                     if (cmd == 'B') doSomethingBad = 0;
  1610   00085A  0E01               	movlw	1
  1611   00085C  0100               	movlb	0	; () banked
  1612   00085E  6FDF               	movwf	_playNote& (0+255),b
  1613                           
  1614                           ;main.c: 87:                     break;
  1615   000860  EFBC  F003         	goto	l3745
  1616   000864                     l3755:
  1617                           
  1618                           ; BSR set to: 1
  1619                           ;main.c: 93:                     (INTCONbits.GIE = 0);
  1620   000864  0E6B               	movlw	low STR_20
  1621   000866  6F2D               	movwf	printf@fmt& (0+255),b
  1622   000868  0E7F               	movlw	high STR_20
  1623   00086A  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1624   00086C  EC28  F00C         	call	_printf	;wreg free
  1625   000870                     
  1626                           ;main.c: 94:                     printf("Connect oscope to RC1.  Press any key when read
      +                          y then press any key to resume.\r\n");
  1627   000870  0E00               	movlw	0
  1628   000872  0100               	movlb	0	; () banked
  1629   000874  6FDF               	movwf	_playNote& (0+255),b
  1630                           
  1631                           ;main.c: 95: 
  1632   000876  EFBC  F003         	goto	l3745
  1633   00087A                     l3759:
  1634                           
  1635                           ; BSR set to: 1
  1636                           ;main.c: 101: 
  1637   00087A  0E80               	movlw	low STR_21
  1638   00087C  6F2D               	movwf	printf@fmt& (0+255),b
  1639   00087E  0E7F               	movlw	high STR_21
  1640   000880  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1641   000882  EC28  F00C         	call	_printf	;wreg free
  1642   000886                     
  1643                           ;main.c: 102:                     while (!(EUSART1_is_rx_ready()));
  1644   000886  0E01               	movlw	1
  1645   000888  0100               	movlb	0	; () banked
  1646   00088A  6FDE               	movwf	_incNote& (0+255),b
  1647                           
  1648                           ;main.c: 103:                     (void) EUSART1_Read();
  1649   00088C  EFBC  F003         	goto	l3745
  1650   000890                     l3763:
  1651                           
  1652                           ; BSR set to: 1
  1653                           ;main.c: 110: 
  1654   000890  0E62               	movlw	98
  1655   000892  1935               	xorwf	main@cmd& (0+255),w,b
  1656   000894  A4D8               	btfss	status,2,c
  1657   000896  EF4F  F004         	goto	u3021
  1658   00089A  EF51  F004         	goto	u3020
  1659   00089E                     u3021:
  1660   00089E  EF54  F004         	goto	l3767
  1661   0008A2                     u3020:
  1662   0008A2                     
  1663                           ; BSR set to: 1
  1664   0008A2  0E01               	movlw	1
  1665   0008A4  0100               	movlb	0	; () banked
  1666   0008A6  6FDD               	movwf	_doSomethingBad& (0+255),b
  1667   0008A8                     l3767:
  1668                           
  1669                           ;main.c: 111: 
  1670   0008A8  0E42               	movlw	66
  1671   0008AA  0101               	movlb	1	; () banked
  1672   0008AC  1935               	xorwf	main@cmd& (0+255),w,b
  1673   0008AE  A4D8               	btfss	status,2,c
  1674   0008B0  EF5C  F004         	goto	u3031
  1675   0008B4  EF5E  F004         	goto	u3030
  1676   0008B8                     u3031:
  1677   0008B8  EFBC  F003         	goto	l3745
  1678   0008BC                     u3030:
  1679   0008BC                     
  1680                           ; BSR set to: 1
  1681   0008BC  0E00               	movlw	0
  1682   0008BE  0100               	movlb	0	; () banked
  1683   0008C0  6FDD               	movwf	_doSomethingBad& (0+255),b
  1684   0008C2  EFBC  F003         	goto	l3745
  1685   0008C6                     l50:
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;main.c: 118: 
  1689   0008C6  9EF2               	bcf	242,7,c	;volatile
  1690   0008C8                     
  1691                           ; BSR set to: 1
  1692                           ;main.c: 119:                 case 'Z':
  1693   0008C8  0EED               	movlw	low STR_22
  1694   0008CA  6F2D               	movwf	printf@fmt& (0+255),b
  1695   0008CC  0E7D               	movlw	high STR_22
  1696   0008CE  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1697   0008D0  EC28  F00C         	call	_printf	;wreg free
  1698   0008D4                     l3773:
  1699   0008D4  ECE2  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  1700   0008D8  0900               	iorlw	0
  1701   0008DA  B4D8               	btfsc	status,2,c
  1702   0008DC  EF72  F004         	goto	u3041
  1703   0008E0  EF74  F004         	goto	u3040
  1704   0008E4                     u3041:
  1705   0008E4  EF6A  F004         	goto	l3773
  1706   0008E8                     u3040:
  1707   0008E8                     
  1708                           ;main.c: 122:                     break;
  1709   0008E8  EC3D  F00C         	call	_EUSART1_Read	;wreg free
  1710   0008EC  8C89               	bsf	137,6,c	;volatile
  1711   0008EE                     
  1712                           ;main.c: 124: 
  1713   0008EE  0EE4               	movlw	low (STR_17+17)
  1714   0008F0  0101               	movlb	1	; () banked
  1715   0008F2  6F2D               	movwf	printf@fmt& (0+255),b
  1716   0008F4  0E7E               	movlw	high (STR_17+17)
  1717   0008F6  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1718   0008F8  EC28  F00C         	call	_printf	;wreg free
  1719   0008FC  9C89               	bcf	137,6,c	;volatile
  1720   0008FE                     l3783:
  1721   0008FE  ECE2  F00C         	call	_EUSART1_is_rx_ready	;wreg free
  1722   000902  0900               	iorlw	0
  1723   000904  B4D8               	btfsc	status,2,c
  1724   000906  EF87  F004         	goto	u3051
  1725   00090A  EF89  F004         	goto	u3050
  1726   00090E                     u3051:
  1727   00090E  EF7F  F004         	goto	l3783
  1728   000912                     u3050:
  1729   000912                     
  1730                           ;main.c: 128:                     for (i = 0; i < 40; i++) printf("\r\n");
  1731   000912  EC3D  F00C         	call	_EUSART1_Read	;wreg free
  1732                           
  1733                           ;main.c: 129:                     break;
  1734   000916  EC3D  F00C         	call	_EUSART1_Read	;wreg free
  1735   00091A                     
  1736                           ;main.c: 130: 
  1737   00091A  8EF2               	bsf	242,7,c	;volatile
  1738                           
  1739                           ;main.c: 132: 
  1740   00091C  EFBC  F003         	goto	l3745
  1741   000920                     l3789:
  1742                           
  1743                           ; BSR set to: 1
  1744                           ;main.c: 138:         }
  1745   000920  0EF4               	movlw	low STR_24
  1746   000922  6F2D               	movwf	printf@fmt& (0+255),b
  1747   000924  0E7F               	movlw	high STR_24
  1748   000926  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1749   000928  EC28  F00C         	call	_printf	;wreg free
  1750                           
  1751                           ;main.c: 139:     }
  1752   00092C  EFBC  F003         	goto	l3745
  1753   000930                     l3791:
  1754                           
  1755                           ; BSR set to: 1
  1756                           ;main.c: 145: 
  1757   000930  0E00               	movlw	0
  1758   000932  6F36               	movwf	main@i& (0+255),b
  1759   000934                     l3797:
  1760                           
  1761                           ; BSR set to: 1
  1762   000934  0EB0               	movlw	low (STR_7+30)
  1763   000936  6F2D               	movwf	printf@fmt& (0+255),b
  1764   000938  0E7E               	movlw	high (STR_7+30)
  1765   00093A  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1766   00093C  EC28  F00C         	call	_printf	;wreg free
  1767   000940  0101               	movlb	1	; () banked
  1768   000942  2B36               	incf	main@i& (0+255),f,b
  1769   000944                     
  1770                           ; BSR set to: 1
  1771   000944  0E27               	movlw	39
  1772   000946  6536               	cpfsgt	main@i& (0+255),b
  1773   000948  EFA8  F004         	goto	u3061
  1774   00094C  EFAA  F004         	goto	u3060
  1775   000950                     u3061:
  1776   000950  EF9A  F004         	goto	l3797
  1777   000954                     u3060:
  1778   000954                     
  1779                           ; BSR set to: 1
  1780   000954  00FF               	reset		;# 
  1781                           
  1782                           ;main.c: 147: void myTMR1ISR(void) {
  1783   000956  EFBC  F003         	goto	l3745
  1784   00095A                     l3803:
  1785                           
  1786                           ; BSR set to: 1
  1787                           ;main.c: 153: 
  1788   00095A  0E00               	movlw	0
  1789   00095C  6F36               	movwf	main@i& (0+255),b
  1790   00095E                     l3809:
  1791                           
  1792                           ; BSR set to: 1
  1793   00095E  0EB0               	movlw	low (STR_7+30)
  1794   000960  6F2D               	movwf	printf@fmt& (0+255),b
  1795   000962  0E7E               	movlw	high (STR_7+30)
  1796   000964  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1797   000966  EC28  F00C         	call	_printf	;wreg free
  1798   00096A  0101               	movlb	1	; () banked
  1799   00096C  2B36               	incf	main@i& (0+255),f,b
  1800   00096E                     
  1801                           ; BSR set to: 1
  1802   00096E  0E27               	movlw	39
  1803   000970  6536               	cpfsgt	main@i& (0+255),b
  1804   000972  EFBD  F004         	goto	u3071
  1805   000976  EFBF  F004         	goto	u3070
  1806   00097A                     u3071:
  1807   00097A  EFAF  F004         	goto	l3809
  1808   00097E                     u3070:
  1809   00097E  EFBC  F003         	goto	l3745
  1810   000982                     l3815:
  1811                           
  1812                           ; BSR set to: 1
  1813                           ;main.c: 160:     if (playNote == 1) {
  1814   000982  0EAA               	movlw	low STR_27
  1815   000984  6F2D               	movwf	printf@fmt& (0+255),b
  1816   000986  0E7F               	movlw	high STR_27
  1817   000988  6F2E               	movwf	(printf@fmt+1)& (0+255),b
  1818   00098A  C135  F12F         	movff	main@cmd,?_printf+2
  1819   00098E  6B30               	clrf	(?_printf+3)& (0+255),b
  1820   000990  EC28  F00C         	call	_printf	;wreg free
  1821                           
  1822                           ;main.c: 161:         TMR1_WriteTimer(0x10000 - halfPeriod[noteIndex]);
  1823   000994  EFBC  F003         	goto	l3745
  1824   000998                     l3819:
  1825                           
  1826                           ; BSR set to: 1
  1827   000998  5135               	movf	main@cmd& (0+255),w,b
  1828   00099A  6F33               	movwf	??_main& (0+255),b
  1829   00099C  6B34               	clrf	(??_main+1)& (0+255),b
  1830                           
  1831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1832                           ; Switch size 1, requested type "simple"
  1833                           ; Number of cases is 1, Range of values is 0 to 0
  1834                           ; switch strategies available:
  1835                           ; Name         Instructions Cycles
  1836                           ; simple_byte            4     3 (average)
  1837                           ;	Chosen strategy is simple_byte
  1838   00099E  5134               	movf	(??_main+1)& (0+255),w,b
  1839   0009A0  0A00               	xorlw	0	; case 0
  1840   0009A2  B4D8               	btfsc	status,2,c
  1841   0009A4  EFD6  F004         	goto	l4011
  1842   0009A8  EFC1  F004         	goto	l3815
  1843   0009AC                     l4011:
  1844                           
  1845                           ; BSR set to: 1
  1846                           ; Switch size 1, requested type "simple"
  1847                           ; Number of cases is 10, Range of values is 63 to 122
  1848                           ; switch strategies available:
  1849                           ; Name         Instructions Cycles
  1850                           ; simple_byte           31    16 (average)
  1851                           ;	Chosen strategy is simple_byte
  1852   0009AC  5133               	movf	??_main& (0+255),w,b
  1853   0009AE  0A3F               	xorlw	63	; case 63
  1854   0009B0  B4D8               	btfsc	status,2,c
  1855   0009B2  EFCC  F003         	goto	l3749
  1856   0009B6  0A7D               	xorlw	125	; case 66
  1857   0009B8  B4D8               	btfsc	status,2,c
  1858   0009BA  EF48  F004         	goto	l3763
  1859   0009BE  0A0C               	xorlw	12	; case 78
  1860   0009C0  B4D8               	btfsc	status,2,c
  1861   0009C2  EF32  F004         	goto	l3755
  1862   0009C6  0A14               	xorlw	20	; case 90
  1863   0009C8  B4D8               	btfsc	status,2,c
  1864   0009CA  EF98  F004         	goto	l3791
  1865   0009CE  0A38               	xorlw	56	; case 98
  1866   0009D0  B4D8               	btfsc	status,2,c
  1867   0009D2  EF48  F004         	goto	l3763
  1868   0009D6  0A0B               	xorlw	11	; case 105
  1869   0009D8  B4D8               	btfsc	status,2,c
  1870   0009DA  EF3D  F004         	goto	l3759
  1871   0009DE  0A07               	xorlw	7	; case 110
  1872   0009E0  B4D8               	btfsc	status,2,c
  1873   0009E2  EF27  F004         	goto	l3751
  1874   0009E6  0A01               	xorlw	1	; case 111
  1875   0009E8  B4D8               	btfsc	status,2,c
  1876   0009EA  EF90  F004         	goto	l3789
  1877   0009EE  0A1B               	xorlw	27	; case 116
  1878   0009F0  B4D8               	btfsc	status,2,c
  1879   0009F2  EF63  F004         	goto	l50
  1880   0009F6  0A0E               	xorlw	14	; case 122
  1881   0009F8  B4D8               	btfsc	status,2,c
  1882   0009FA  EFAD  F004         	goto	l3803
  1883   0009FE  EFC1  F004         	goto	l3815
  1884   000A02  EF4E  F000         	goto	start
  1885   000A06                     __end_of_main:
  1886                           	callstack 0
  1887                           
  1888 ;; *************** function _printf *****************
  1889 ;; Defined at:
  1890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  fmt             2   13[BANK1 ] PTR const unsigned char 
  1893 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  1894 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  1895 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  1896 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  1897 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  1898 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  1899 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  ap              2   17[BANK1 ] PTR void [1]
  1902 ;;		 -> ?_printf(2), 
  1903 ;;  ret             2    0        int 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   13[BANK1 ] int 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         0       0       4       0       0       0       0
  1914 ;;      Locals:         0       0       2       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         0       0       6       0       0       0       0
  1917 ;;Total ram usage:        6 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 20
  1920 ;; This function calls:
  1921 ;;		_vfprintf
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           	psect	text1
  1928   001850                     __ptext1:
  1929                           	callstack 0
  1930   001850                     _printf:
  1931                           	callstack 10
  1932   001850  0E2F               	movlw	low (?_printf+2)
  1933   001852  0101               	movlb	1	; () banked
  1934   001854  6F31               	movwf	printf@ap& (0+255),b
  1935   001856  0E01               	movlw	high (?_printf+2)
  1936   001858  6F32               	movwf	(printf@ap+1)& (0+255),b
  1937   00185A                     
  1938                           ; BSR set to: 1
  1939   00185A  0E00               	movlw	0
  1940   00185C  0100               	movlb	0	; () banked
  1941   00185E  6FC4               	movwf	vfprintf@fp& (0+255),b
  1942   001860  0E00               	movlw	0
  1943   001862  6FC5               	movwf	(vfprintf@fp+1)& (0+255),b
  1944   001864  C12D  F0C6         	movff	printf@fmt,vfprintf@fmt
  1945   001868  C12E  F0C7         	movff	printf@fmt+1,vfprintf@fmt+1
  1946   00186C  0E31               	movlw	low printf@ap
  1947   00186E  6FC8               	movwf	vfprintf@ap& (0+255),b
  1948   001870  0E01               	movlw	high printf@ap
  1949   001872  6FC9               	movwf	(vfprintf@ap+1)& (0+255),b
  1950   001874  EC93  F00A         	call	_vfprintf	;wreg free
  1951   001878  0012               	return		;funcret
  1952   00187A                     __end_of_printf:
  1953                           	callstack 0
  1954                           
  1955 ;; *************** function _vfprintf *****************
  1956 ;; Defined at:
  1957 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  fp              2  100[BANK0 ] PTR struct _IO_FILE
  1960 ;;		 -> NULL(0), 
  1961 ;;  fmt             2  102[BANK0 ] PTR const unsigned char 
  1962 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  1963 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  1964 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  1965 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  1966 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  1967 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  1968 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  1969 ;;  ap              2  104[BANK0 ] PTR PTR void 
  1970 ;;		 -> printf@ap(2), 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  cfmt            2  106[BANK0 ] PTR unsigned char 
  1973 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  1974 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  1975 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  1976 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  1977 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  1978 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  1979 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  2  100[BANK0 ] int 
  1982 ;; Registers used:
  1983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1989 ;;      Params:         0       6       0       0       0       0       0
  1990 ;;      Locals:         0       2       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0
  1992 ;;      Totals:         0       8       0       0       0       0       0
  1993 ;;Total ram usage:        8 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 19
  1996 ;; This function calls:
  1997 ;;		_vfpfcnvrt
  1998 ;; This function is called by:
  1999 ;;		_printf
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           	psect	text2
  2004   001526                     __ptext2:
  2005                           	callstack 0
  2006   001526                     _vfprintf:
  2007                           	callstack 10
  2008   001526                     
  2009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2010   001526  C0C6  F0CA         	movff	vfprintf@fmt,vfprintf@cfmt
  2011   00152A  C0C7  F0CB         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2014   00152E  EFA8  F00A         	goto	l3657
  2015   001532                     l3655:
  2016                           
  2017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2018   001532  C0C4  F0BA         	movff	vfprintf@fp,vfpfcnvrt@fp
  2019   001536  C0C5  F0BB         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2020   00153A  0ECA               	movlw	low vfprintf@cfmt
  2021   00153C  0100               	movlb	0	; () banked
  2022   00153E  6FBC               	movwf	vfpfcnvrt@fmt& (0+255),b
  2023   001540  0E00               	movlw	high vfprintf@cfmt
  2024   001542  6FBD               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2025   001544  C0C8  F0BE         	movff	vfprintf@ap,vfpfcnvrt@ap
  2026   001548  C0C9  F0BF         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2027   00154C  EC50  F000         	call	_vfpfcnvrt	;wreg free
  2028   001550                     l3657:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2031   001550  C0CA  FFF6         	movff	vfprintf@cfmt,tblptrl
  2032   001554  C0CB  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2033   001558                     	if	0	;tblptru may be non-zero
  2034   001558                     	endif
  2035   001558                     	if	0	;tblptru may be non-zero
  2036   001558                     	endif
  2037   001558  0008               	tblrd		*
  2038   00155A  50F5               	movf	tablat,w,c
  2039   00155C  0900               	iorlw	0
  2040   00155E  A4D8               	btfss	status,2,c
  2041   001560  EFB4  F00A         	goto	u2931
  2042   001564  EFB6  F00A         	goto	u2930
  2043   001568                     u2931:
  2044   001568  EF99  F00A         	goto	l3655
  2045   00156C                     u2930:
  2046   00156C                     
  2047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2048   00156C  0E00               	movlw	0
  2049   00156E  0100               	movlb	0	; () banked
  2050   001570  6FC5               	movwf	(?_vfprintf+1)& (0+255),b
  2051   001572  0E00               	movlw	0
  2052   001574  6FC4               	movwf	?_vfprintf& (0+255),b
  2053   001576                     
  2054                           ; BSR set to: 0
  2055   001576  0012               	return		;funcret
  2056   001578                     __end_of_vfprintf:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _vfpfcnvrt *****************
  2060 ;; Defined at:
  2061 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  2064 ;;		 -> NULL(0), 
  2065 ;;  fmt             2   92[BANK0 ] PTR PTR unsigned char 
  2066 ;;		 -> vfprintf@cfmt(2), 
  2067 ;;  ap              2   94[BANK0 ] PTR PTR void 
  2068 ;;		 -> printf@ap(2), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  convarg         8    0[BANK1 ] struct .
  2071 ;;  cp              2   11[BANK1 ] PTR unsigned char 
  2072 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  2073 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  2074 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  2075 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  2076 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  2077 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  2078 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  2079 ;;  done            2    9[BANK1 ] int 
  2080 ;;  i               2    0        int 
  2081 ;;  c               1    8[BANK1 ] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2091 ;;      Params:         0       6       0       0       0       0       0
  2092 ;;      Locals:         0       0      13       0       0       0       0
  2093 ;;      Temps:          0       4       0       0       0       0       0
  2094 ;;      Totals:         0      10      13       0       0       0       0
  2095 ;;Total ram usage:       23 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 18
  2098 ;; This function calls:
  2099 ;;		_atoi
  2100 ;;		_ctoa
  2101 ;;		_fputc
  2102 ;;		_isdigit
  2103 ;;		_xtoa
  2104 ;; This function is called by:
  2105 ;;		_vfprintf
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text3
  2110   0000A0                     __ptext3:
  2111                           	callstack 0
  2112   0000A0                     _vfpfcnvrt:
  2113                           	callstack 10
  2114   0000A0                     
  2115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2116   0000A0  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2117   0000A4  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2118   0000A8  CFDE FFF6          	movff	postinc2,tblptrl
  2119   0000AC  CFDD FFF7          	movff	postdec2,tblptrh
  2120   0000B0                     	if	0	;tblptru may be non-zero
  2121   0000B0                     	endif
  2122   0000B0                     	if	0	;tblptru may be non-zero
  2123   0000B0                     	endif
  2124   0000B0  0008               	tblrd		*
  2125   0000B2  50F5               	movf	tablat,w,c
  2126   0000B4  0A25               	xorlw	37
  2127   0000B6  A4D8               	btfss	status,2,c
  2128   0000B8  EF60  F000         	goto	u2791
  2129   0000BC  EF62  F000         	goto	u2790
  2130   0000C0                     u2791:
  2131   0000C0  EFD4  F001         	goto	l3575
  2132   0000C4                     u2790:
  2133   0000C4                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2135   0000C4  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2136   0000C8  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2137   0000CC  2ADE               	incf	postinc2,f,c
  2138   0000CE  0E00               	movlw	0
  2139   0000D0  22DD               	addwfc	postdec2,f,c
  2140   0000D2                     
  2141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2142   0000D2  0E00               	movlw	0
  2143   0000D4  0100               	movlb	0	; () banked
  2144   0000D6  6FCD               	movwf	(_width+1)& (0+255),b
  2145   0000D8  0E00               	movlw	0
  2146   0000DA  6FCC               	movwf	_width& (0+255),b
  2147   0000DC  C0CC  F0DA         	movff	_width,_flags
  2148   0000E0                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2151   0000E0  69CE               	setf	_prec& (0+255),b
  2152   0000E2  69CF               	setf	(_prec+1)& (0+255),b
  2153   0000E4                     
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2156   0000E4  0E00               	movlw	0
  2157   0000E6  0101               	movlb	1	; () banked
  2158   0000E8  6F2A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2159   0000EA  0E00               	movlw	0
  2160   0000EC  6F29               	movwf	vfpfcnvrt@done& (0+255),b
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2163   0000EE  EFA5  F000         	goto	l3531
  2164   0000F2                     l3521:
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2168   0000F2  83DA               	bsf	_flags& (0+255),1,b
  2169   0000F4                     
  2170                           ; BSR set to: 0
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2172   0000F4  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2173   0000F8  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2174   0000FC  2ADE               	incf	postinc2,f,c
  2175   0000FE  0E00               	movlw	0
  2176   000100  22DD               	addwfc	postdec2,f,c
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2179   000102  EFA5  F000         	goto	l3531
  2180   000106                     l3525:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2184   000106  0E00               	movlw	0
  2185   000108  0101               	movlb	1	; () banked
  2186   00010A  6F2A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2187   00010C  0E01               	movlw	1
  2188   00010E  6F29               	movwf	vfpfcnvrt@done& (0+255),b
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2191   000110  EFA5  F000         	goto	l3531
  2192   000114                     l3529:
  2193                           
  2194                           ; BSR set to: 1
  2195   000114  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2196   000118  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2197   00011C  CFDE FFF6          	movff	postinc2,tblptrl
  2198   000120  CFDD FFF7          	movff	postdec2,tblptrh
  2199   000124                     	if	0	;tblptru may be non-zero
  2200   000124                     	endif
  2201   000124                     	if	0	;tblptru may be non-zero
  2202   000124                     	endif
  2203   000124  0008               	tblrd		*
  2204   000126  50F5               	movf	tablat,w,c
  2205   000128  0100               	movlb	0	; () banked
  2206   00012A  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  2207   00012C  6BC1               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2208                           
  2209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2210                           ; Switch size 1, requested type "simple"
  2211                           ; Number of cases is 1, Range of values is 0 to 0
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte            4     3 (average)
  2215                           ;	Chosen strategy is simple_byte
  2216   00012E  51C1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2217   000130  0A00               	xorlw	0	; case 0
  2218   000132  B4D8               	btfsc	status,2,c
  2219   000134  EF9E  F000         	goto	l4013
  2220   000138  EF83  F000         	goto	l3525
  2221   00013C                     l4013:
  2222                           
  2223                           ; BSR set to: 0
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 1, Range of values is 48 to 48
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte            4     3 (average)
  2229                           ;	Chosen strategy is simple_byte
  2230   00013C  51C0               	movf	??_vfpfcnvrt& (0+255),w,b
  2231   00013E  0A30               	xorlw	48	; case 48
  2232   000140  B4D8               	btfsc	status,2,c
  2233   000142  EF79  F000         	goto	l3521
  2234   000146  EF83  F000         	goto	l3525
  2235   00014A                     l3531:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2238   00014A  0101               	movlb	1	; () banked
  2239   00014C  5129               	movf	vfpfcnvrt@done& (0+255),w,b
  2240   00014E  112A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2241   000150  B4D8               	btfsc	status,2,c
  2242   000152  EFAD  F000         	goto	u2801
  2243   000156  EFAF  F000         	goto	u2800
  2244   00015A                     u2801:
  2245   00015A  EF8A  F000         	goto	l3529
  2246   00015E                     u2800:
  2247   00015E                     
  2248                           ; BSR set to: 1
  2249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2250   00015E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2251   000162  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2252   000166  CFDE FFF6          	movff	postinc2,tblptrl
  2253   00016A  CFDD FFF7          	movff	postdec2,tblptrh
  2254   00016E                     	if	0	;tblptru may be non-zero
  2255   00016E                     	endif
  2256   00016E                     	if	0	;tblptru may be non-zero
  2257   00016E                     	endif
  2258   00016E  0008               	tblrd		*
  2259   000170  50F5               	movf	tablat,w,c
  2260   000172  0A2A               	xorlw	42
  2261   000174  A4D8               	btfss	status,2,c
  2262   000176  EFBF  F000         	goto	u2811
  2263   00017A  EFC1  F000         	goto	u2810
  2264   00017E                     u2811:
  2265   00017E  EFEB  F000         	goto	l3541
  2266   000182                     u2810:
  2267   000182                     
  2268                           ; BSR set to: 1
  2269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2270   000182  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2271   000186  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2272   00018A  2ADE               	incf	postinc2,f,c
  2273   00018C  0E00               	movlw	0
  2274   00018E  22DD               	addwfc	postdec2,f,c
  2275                           
  2276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2277   000190  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2278   000194  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2279   000198  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  2280   00019C  0E02               	movlw	2
  2281   00019E  26DE               	addwf	postinc2,f,c
  2282   0001A0  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  2283   0001A4  0E00               	movlw	0
  2284   0001A6  22DD               	addwfc	postdec2,f,c
  2285   0001A8  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2286   0001AC  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2287   0001B0  CFDE F0CC          	movff	postinc2,_width
  2288   0001B4  CFDD F0CD          	movff	postdec2,_width+1
  2289   0001B8                     
  2290                           ; BSR set to: 1
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2292   0001B8  0100               	movlb	0	; () banked
  2293   0001BA  BFCD               	btfsc	(_width+1)& (0+255),7,b
  2294   0001BC  EFE4  F000         	goto	u2820
  2295   0001C0  EFE2  F000         	goto	u2821
  2296   0001C4                     u2821:
  2297   0001C4  EF1F  F001         	goto	l3549
  2298   0001C8                     u2820:
  2299   0001C8                     
  2300                           ; BSR set to: 0
  2301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2302   0001C8  81DA               	bsf	_flags& (0+255),0,b
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2305   0001CA  6DCC               	negf	_width& (0+255),b
  2306   0001CC  1FCD               	comf	(_width+1)& (0+255),f,b
  2307   0001CE  B0D8               	btfsc	status,0,c
  2308   0001D0  2BCD               	incf	(_width+1)& (0+255),f,b
  2309   0001D2  EF1F  F001         	goto	l3549
  2310   0001D6                     l3541:
  2311                           
  2312                           ; BSR set to: 1
  2313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2314   0001D6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2315   0001DA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2316   0001DE  CFDE F080          	movff	postinc2,atoi@s
  2317   0001E2  CFDD F081          	movff	postdec2,atoi@s+1
  2318   0001E6  ECD3  F006         	call	_atoi	;wreg free
  2319   0001EA  C080  F0CC         	movff	?_atoi,_width
  2320   0001EE  C081  F0CD         	movff	?_atoi+1,_width+1
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2323   0001F2  EF02  F001         	goto	l3547
  2324   0001F6                     l3543:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2328   0001F6  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2329   0001FA  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2330   0001FE  2ADE               	incf	postinc2,f,c
  2331   000200  0E00               	movlw	0
  2332   000202  22DD               	addwfc	postdec2,f,c
  2333   000204                     l3547:
  2334   000204  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2335   000208  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2336   00020C  CFDE FFF6          	movff	postinc2,tblptrl
  2337   000210  CFDD FFF7          	movff	postdec2,tblptrh
  2338   000214                     	if	0	;tblptru may be non-zero
  2339   000214                     	endif
  2340   000214                     	if	0	;tblptru may be non-zero
  2341   000214                     	endif
  2342   000214  0008               	tblrd		*
  2343   000216  CFF5 F0C0          	movff	tablat,??_vfpfcnvrt
  2344   00021A  0ED0               	movlw	208
  2345   00021C  0100               	movlb	0	; () banked
  2346   00021E  25C0               	addwf	??_vfpfcnvrt& (0+255),w,b
  2347   000220  6FC1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2348   000222  6BC2               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  2349   000224  0EFF               	movlw	255
  2350   000226  23C2               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  2351   000228  51C2               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  2352   00022A  E109               	bnz	u2830
  2353   00022C  0E0A               	movlw	10
  2354   00022E  5DC1               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  2355   000230  A0D8               	btfss	status,0,c
  2356   000232  EF1D  F001         	goto	u2831
  2357   000236  EF1F  F001         	goto	u2830
  2358   00023A                     u2831:
  2359   00023A  EFFB  F000         	goto	l3543
  2360   00023E                     u2830:
  2361   00023E                     l3549:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2365   00023E  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2366   000242  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2367   000246  CFDE FFF6          	movff	postinc2,tblptrl
  2368   00024A  CFDD FFF7          	movff	postdec2,tblptrh
  2369   00024E                     	if	0	;tblptru may be non-zero
  2370   00024E                     	endif
  2371   00024E                     	if	0	;tblptru may be non-zero
  2372   00024E                     	endif
  2373   00024E  0008               	tblrd		*
  2374   000250  50F5               	movf	tablat,w,c
  2375   000252  0A63               	xorlw	99
  2376   000254  A4D8               	btfss	status,2,c
  2377   000256  EF2F  F001         	goto	u2841
  2378   00025A  EF31  F001         	goto	u2840
  2379   00025E                     u2841:
  2380   00025E  EF55  F001         	goto	l3557
  2381   000262                     u2840:
  2382   000262                     
  2383                           ; BSR set to: 0
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2385   000262  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2386   000266  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2387   00026A  2ADE               	incf	postinc2,f,c
  2388   00026C  0E00               	movlw	0
  2389   00026E  22DD               	addwfc	postdec2,f,c
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2392   000270  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2393   000274  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2394   000278  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  2395   00027C  0E02               	movlw	2
  2396   00027E  26DE               	addwf	postinc2,f,c
  2397   000280  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  2398   000284  0E00               	movlw	0
  2399   000286  22DD               	addwfc	postdec2,f,c
  2400   000288  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2401   00028C  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2402   000290  50DF               	movf	indf2,w,c
  2403   000292  0101               	movlb	1	; () banked
  2404   000294  6F28               	movwf	vfpfcnvrt@c& (0+255),b
  2405   000296                     
  2406                           ; BSR set to: 1
  2407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2408   000296  C0BA  F085         	movff	vfpfcnvrt@fp,ctoa@fp
  2409   00029A  C0BB  F086         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2410   00029E  C128  F087         	movff	vfpfcnvrt@c,ctoa@c
  2411   0002A2  EC1F  F008         	call	_ctoa	;wreg free
  2412   0002A6  EFE9  F001         	goto	l1088
  2413   0002AA                     l3557:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  2417   0002AA  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418   0002AE  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419   0002B2  CFDE F12B          	movff	postinc2,vfpfcnvrt@cp
  2420   0002B6  CFDD F12C          	movff	postdec2,vfpfcnvrt@cp+1
  2421   0002BA                     
  2422                           ; BSR set to: 0
  2423   0002BA  C12B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2424   0002BE  C12C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2425   0002C2                     	if	0	;tblptru may be non-zero
  2426   0002C2                     	endif
  2427   0002C2                     	if	0	;tblptru may be non-zero
  2428   0002C2                     	endif
  2429   0002C2  0008               	tblrd		*
  2430   0002C4  50F5               	movf	tablat,w,c
  2431   0002C6  0A78               	xorlw	120
  2432   0002C8  A4D8               	btfss	status,2,c
  2433   0002CA  EF69  F001         	goto	u2851
  2434   0002CE  EF6B  F001         	goto	u2850
  2435   0002D2                     u2851:
  2436   0002D2  EFCB  F001         	goto	l3571
  2437   0002D6                     u2850:
  2438   0002D6                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2441   0002D6  C0BE  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2442   0002DA  C0BF  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2443   0002DE  CFDF F0C0          	movff	indf2,??_vfpfcnvrt
  2444   0002E2  0E02               	movlw	2
  2445   0002E4  26DE               	addwf	postinc2,f,c
  2446   0002E6  CFDF F0C1          	movff	indf2,??_vfpfcnvrt+1
  2447   0002EA  0E00               	movlw	0
  2448   0002EC  22DD               	addwfc	postdec2,f,c
  2449   0002EE  C0C0  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2450   0002F2  C0C1  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2451   0002F6  CFDE F0C2          	movff	postinc2,??_vfpfcnvrt+2
  2452   0002FA  CFDD F0C3          	movff	postdec2,??_vfpfcnvrt+3
  2453   0002FE  C0C2  F120         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2454   000302  C0C3  F121         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2455   000306  0101               	movlb	1	; () banked
  2456   000308  6B22               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2457   00030A  6B23               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2458   00030C  6B24               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2459   00030E  6B25               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2460   000310  6B26               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2461   000312  6B27               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2462                           
  2463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2464   000314  0E01               	movlw	1
  2465   000316  252B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2466   000318  0100               	movlb	0	; () banked
  2467   00031A  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  2468   00031C  0E00               	movlw	0
  2469   00031E  0101               	movlb	1	; () banked
  2470   000320  212C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2471   000322  0100               	movlb	0	; () banked
  2472   000324  6FC1               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2473   000326  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2474   00032A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2475   00032E  C0C0  FFDE         	movff	??_vfpfcnvrt,postinc2
  2476   000332  C0C1  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2479   000336  EFB5  F001         	goto	l3569
  2480   00033A                     l3563:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  2484   00033A  C0BA  F097         	movff	vfpfcnvrt@fp,xtoa@fp
  2485   00033E  C0BB  F098         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  2486   000342  C120  F099         	movff	vfpfcnvrt@convarg,xtoa@d
  2487   000346  C121  F09A         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2488   00034A  C122  F09B         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  2489   00034E  C123  F09C         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  2490   000352  C124  F09D         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  2491   000356  C125  F09E         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  2492   00035A  C126  F09F         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  2493   00035E  C127  F0A0         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  2494   000362  EC03  F005         	call	_xtoa	;wreg free
  2495   000366  EFE9  F001         	goto	l1088
  2496   00036A                     l3569:
  2497                           
  2498                           ; BSR set to: 0
  2499   00036A  C12B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2500   00036E  C12C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2501   000372                     	if	0	;tblptru may be non-zero
  2502   000372                     	endif
  2503   000372                     	if	0	;tblptru may be non-zero
  2504   000372                     	endif
  2505   000372  0008               	tblrd		*
  2506   000374  50F5               	movf	tablat,w,c
  2507   000376  6FC0               	movwf	??_vfpfcnvrt& (0+255),b
  2508   000378  6BC1               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2509                           
  2510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2511                           ; Switch size 1, requested type "simple"
  2512                           ; Number of cases is 1, Range of values is 0 to 0
  2513                           ; switch strategies available:
  2514                           ; Name         Instructions Cycles
  2515                           ; simple_byte            4     3 (average)
  2516                           ;	Chosen strategy is simple_byte
  2517   00037A  51C1               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2518   00037C  0A00               	xorlw	0	; case 0
  2519   00037E  B4D8               	btfsc	status,2,c
  2520   000380  EFC4  F001         	goto	l4015
  2521   000384  EFCB  F001         	goto	l3571
  2522   000388                     l4015:
  2523                           
  2524                           ; BSR set to: 0
  2525                           ; Switch size 1, requested type "simple"
  2526                           ; Number of cases is 1, Range of values is 120 to 120
  2527                           ; switch strategies available:
  2528                           ; Name         Instructions Cycles
  2529                           ; simple_byte            4     3 (average)
  2530                           ;	Chosen strategy is simple_byte
  2531   000388  51C0               	movf	??_vfpfcnvrt& (0+255),w,b
  2532   00038A  0A78               	xorlw	120	; case 120
  2533   00038C  B4D8               	btfsc	status,2,c
  2534   00038E  EF9D  F001         	goto	l3563
  2535   000392  EFCB  F001         	goto	l3571
  2536   000396                     l3571:
  2537                           
  2538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2539   000396  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2540   00039A  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2541   00039E  2ADE               	incf	postinc2,f,c
  2542   0003A0  0E00               	movlw	0
  2543   0003A2  22DD               	addwfc	postdec2,f,c
  2544   0003A4  EFE9  F001         	goto	l1088
  2545   0003A8                     l3575:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2548   0003A8  C0BC  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2549   0003AC  C0BD  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2550   0003B0  CFDE FFF6          	movff	postinc2,tblptrl
  2551   0003B4  CFDD FFF7          	movff	postdec2,tblptrh
  2552   0003B8                     	if	0	;tblptru may be non-zero
  2553   0003B8                     	endif
  2554   0003B8                     	if	0	;tblptru may be non-zero
  2555   0003B8                     	endif
  2556   0003B8  0008               	tblrd		*
  2557   0003BA  50F5               	movf	tablat,w,c
  2558   0003BC  0100               	movlb	0	; () banked
  2559   0003BE  6F7C               	movwf	fputc@c& (0+255),b
  2560   0003C0  6B7D               	clrf	(fputc@c+1)& (0+255),b
  2561   0003C2  C0BA  F07E         	movff	vfpfcnvrt@fp,fputc@fp
  2562   0003C6  C0BB  F07F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2563   0003CA  ECFC  F009         	call	_fputc	;wreg free
  2564   0003CE  EFCB  F001         	goto	l3571
  2565   0003D2                     l1088:
  2566   0003D2  0012               	return		;funcret
  2567   0003D4                     __end_of_vfpfcnvrt:
  2568                           	callstack 0
  2569                           
  2570 ;; *************** function _xtoa *****************
  2571 ;; Defined at:
  2572 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  2575 ;;		 -> NULL(0), 
  2576 ;;  d               8   57[BANK0 ] unsigned long long 
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  n               8   79[BANK0 ] unsigned long long 
  2579 ;;  i               2   87[BANK0 ] int 
  2580 ;;  w               2   77[BANK0 ] int 
  2581 ;;  p               2   75[BANK0 ] int 
  2582 ;;  c               1   89[BANK0 ] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  1    wreg      void 
  2585 ;; Registers used:
  2586 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2592 ;;      Params:         0      10       0       0       0       0       0
  2593 ;;      Locals:         0      17       0       0       0       0       0
  2594 ;;      Temps:          0       8       0       0       0       0       0
  2595 ;;      Totals:         0      35       0       0       0       0       0
  2596 ;;Total ram usage:       35 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 17
  2599 ;; This function calls:
  2600 ;;		_pad
  2601 ;; This function is called by:
  2602 ;;		_vfpfcnvrt
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           	psect	text4
  2607   000A06                     __ptext4:
  2608                           	callstack 0
  2609   000A06                     _xtoa:
  2610                           	callstack 10
  2611   000A06                     
  2612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  2613   000A06  0100               	movlb	0	; () banked
  2614   000A08  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  2615   000A0A  EF09  F005         	goto	u2651
  2616   000A0E  EF0B  F005         	goto	u2650
  2617   000A12                     u2651:
  2618   000A12  EF0C  F005         	goto	l3419
  2619   000A16                     u2650:
  2620   000A16                     
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  2623   000A16  93DA               	bcf	_flags& (0+255),1,b
  2624   000A18                     l3419:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  2628   000A18  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  2629   000A1A  EF19  F005         	goto	u2660
  2630   000A1E  51CF               	movf	(_prec+1)& (0+255),w,b
  2631   000A20  E106               	bnz	u2661
  2632   000A22  05CE               	decf	_prec& (0+255),w,b
  2633   000A24  B0D8               	btfsc	status,0,c
  2634   000A26  EF17  F005         	goto	u2661
  2635   000A2A  EF19  F005         	goto	u2660
  2636   000A2E                     u2661:
  2637   000A2E  EF1F  F005         	goto	l1054
  2638   000A32                     u2660:
  2639   000A32                     
  2640                           ; BSR set to: 0
  2641   000A32  0E00               	movlw	0
  2642   000A34  6FAC               	movwf	(xtoa@p+1)& (0+255),b
  2643   000A36  0E01               	movlw	1
  2644   000A38  6FAB               	movwf	xtoa@p& (0+255),b
  2645   000A3A  EF23  F005         	goto	l1056
  2646   000A3E                     l1054:
  2647                           
  2648                           ; BSR set to: 0
  2649   000A3E  C0CE  F0AB         	movff	_prec,xtoa@p
  2650   000A42  C0CF  F0AC         	movff	_prec+1,xtoa@p+1
  2651   000A46                     l1056:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  2655   000A46  C0CC  F0AD         	movff	_width,xtoa@w
  2656   000A4A  C0CD  F0AE         	movff	_width+1,xtoa@w+1
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  2659   000A4E  C099  F0AF         	movff	xtoa@d,xtoa@n
  2660   000A52  C09A  F0B0         	movff	xtoa@d+1,xtoa@n+1
  2661   000A56  C09B  F0B1         	movff	xtoa@d+2,xtoa@n+2
  2662   000A5A  C09C  F0B2         	movff	xtoa@d+3,xtoa@n+3
  2663   000A5E  C09D  F0B3         	movff	xtoa@d+4,xtoa@n+4
  2664   000A62  C09E  F0B4         	movff	xtoa@d+5,xtoa@n+5
  2665   000A66  C09F  F0B5         	movff	xtoa@d+6,xtoa@n+6
  2666   000A6A  C0A0  F0B6         	movff	xtoa@d+7,xtoa@n+7
  2667   000A6E                     
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  2670   000A6E  0E00               	movlw	0
  2671   000A70  6FB8               	movwf	(xtoa@i+1)& (0+255),b
  2672   000A72  0E1F               	movlw	31
  2673   000A74  6FB7               	movwf	xtoa@i& (0+255),b
  2674   000A76                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  2677   000A76  0E00               	movlw	0
  2678   000A78  0101               	movlb	1	; () banked
  2679   000A7A  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  2682   000A7C  EF9B  F005         	goto	l3447
  2683   000A80                     l3427:
  2684                           
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  2687   000A80  07B7               	decf	xtoa@i& (0+255),f,b
  2688   000A82  A0D8               	btfss	status,0,c
  2689   000A84  07B8               	decf	(xtoa@i+1)& (0+255),f,b
  2690   000A86                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  2693   000A86  51AF               	movf	xtoa@n& (0+255),w,b
  2694   000A88  0B0F               	andlw	15
  2695   000A8A  6FB9               	movwf	xtoa@c& (0+255),b
  2696   000A8C                     
  2697                           ; BSR set to: 0
  2698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  2699   000A8C  0E09               	movlw	9
  2700   000A8E  65B9               	cpfsgt	xtoa@c& (0+255),b
  2701   000A90  EF4C  F005         	goto	u2671
  2702   000A94  EF4E  F005         	goto	u2670
  2703   000A98                     u2671:
  2704   000A98  EF56  F005         	goto	l3435
  2705   000A9C                     u2670:
  2706   000A9C                     
  2707                           ; BSR set to: 0
  2708   000A9C  0E57               	movlw	87
  2709   000A9E  25B9               	addwf	xtoa@c& (0+255),w,b
  2710   000AA0  6FA9               	movwf	_xtoa$1512& (0+255),b
  2711   000AA2  6BAA               	clrf	(_xtoa$1512+1)& (0+255),b
  2712   000AA4  0E00               	movlw	0
  2713   000AA6  23AA               	addwfc	(_xtoa$1512+1)& (0+255),f,b
  2714   000AA8  EF5C  F005         	goto	l3437
  2715   000AAC                     l3435:
  2716                           
  2717                           ; BSR set to: 0
  2718   000AAC  0E30               	movlw	48
  2719   000AAE  25B9               	addwf	xtoa@c& (0+255),w,b
  2720   000AB0  6FA9               	movwf	_xtoa$1512& (0+255),b
  2721   000AB2  6BAA               	clrf	(_xtoa$1512+1)& (0+255),b
  2722   000AB4  0E00               	movlw	0
  2723   000AB6  23AA               	addwfc	(_xtoa$1512+1)& (0+255),f,b
  2724   000AB8                     l3437:
  2725                           
  2726                           ; BSR set to: 0
  2727   000AB8  C0A9  F0B9         	movff	_xtoa$1512,xtoa@c
  2728   000ABC                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  2731   000ABC  0E00               	movlw	low _dbuf
  2732   000ABE  25B7               	addwf	xtoa@i& (0+255),w,b
  2733   000AC0  6ED9               	movwf	fsr2l,c
  2734   000AC2  0E01               	movlw	high _dbuf
  2735   000AC4  21B8               	addwfc	(xtoa@i+1)& (0+255),w,b
  2736   000AC6  6EDA               	movwf	fsr2h,c
  2737   000AC8  C0B9  FFDF         	movff	xtoa@c,indf2
  2738   000ACC                     
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  2741   000ACC  07AB               	decf	xtoa@p& (0+255),f,b
  2742   000ACE  A0D8               	btfss	status,0,c
  2743   000AD0  07AC               	decf	(xtoa@p+1)& (0+255),f,b
  2744   000AD2                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  2747   000AD2  07AD               	decf	xtoa@w& (0+255),f,b
  2748   000AD4  A0D8               	btfss	status,0,c
  2749   000AD6  07AE               	decf	(xtoa@w+1)& (0+255),f,b
  2750   000AD8                     
  2751                           ; BSR set to: 0
  2752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  2753   000AD8  C0AF  F0A1         	movff	xtoa@n,??_xtoa
  2754   000ADC  C0B0  F0A2         	movff	xtoa@n+1,??_xtoa+1
  2755   000AE0  C0B1  F0A3         	movff	xtoa@n+2,??_xtoa+2
  2756   000AE4  C0B2  F0A4         	movff	xtoa@n+3,??_xtoa+3
  2757   000AE8  C0B3  F0A5         	movff	xtoa@n+4,??_xtoa+4
  2758   000AEC  C0B4  F0A6         	movff	xtoa@n+5,??_xtoa+5
  2759   000AF0  C0B5  F0A7         	movff	xtoa@n+6,??_xtoa+6
  2760   000AF4  C0B6  F0A8         	movff	xtoa@n+7,??_xtoa+7
  2761   000AF8  0E05               	movlw	5
  2762   000AFA  EF88  F005         	goto	u2680
  2763   000AFE                     u2685:
  2764   000AFE  90D8               	bcf	status,0,c
  2765   000B00  33A8               	rrcf	(??_xtoa+7)& (0+255),f,b
  2766   000B02  33A7               	rrcf	(??_xtoa+6)& (0+255),f,b
  2767   000B04  33A6               	rrcf	(??_xtoa+5)& (0+255),f,b
  2768   000B06  33A5               	rrcf	(??_xtoa+4)& (0+255),f,b
  2769   000B08  33A4               	rrcf	(??_xtoa+3)& (0+255),f,b
  2770   000B0A  33A3               	rrcf	(??_xtoa+2)& (0+255),f,b
  2771   000B0C  33A2               	rrcf	(??_xtoa+1)& (0+255),f,b
  2772   000B0E  33A1               	rrcf	??_xtoa& (0+255),f,b
  2773   000B10                     u2680:
  2774   000B10  2EE8               	decfsz	wreg,f,c
  2775   000B12  EF7F  F005         	goto	u2685
  2776   000B16  C0A1  F0AF         	movff	??_xtoa,xtoa@n
  2777   000B1A  C0A2  F0B0         	movff	??_xtoa+1,xtoa@n+1
  2778   000B1E  C0A3  F0B1         	movff	??_xtoa+2,xtoa@n+2
  2779   000B22  C0A4  F0B2         	movff	??_xtoa+3,xtoa@n+3
  2780   000B26  C0A5  F0B3         	movff	??_xtoa+4,xtoa@n+4
  2781   000B2A  C0A6  F0B4         	movff	??_xtoa+5,xtoa@n+5
  2782   000B2E  C0A7  F0B5         	movff	??_xtoa+6,xtoa@n+6
  2783   000B32  C0A8  F0B6         	movff	??_xtoa+7,xtoa@n+7
  2784   000B36                     l3447:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  2787   000B36  0100               	movlb	0	; () banked
  2788   000B38  BFB8               	btfsc	(xtoa@i+1)& (0+255),7,b
  2789   000B3A  EFA8  F005         	goto	u2691
  2790   000B3E  51B8               	movf	(xtoa@i+1)& (0+255),w,b
  2791   000B40  E109               	bnz	u2690
  2792   000B42  0E02               	movlw	2
  2793   000B44  5DB7               	subwf	xtoa@i& (0+255),w,b
  2794   000B46  A0D8               	btfss	status,0,c
  2795   000B48  EFA8  F005         	goto	u2691
  2796   000B4C  EFAA  F005         	goto	u2690
  2797   000B50                     u2691:
  2798   000B50  EFDA  F005         	goto	l3457
  2799   000B54                     u2690:
  2800   000B54                     
  2801                           ; BSR set to: 0
  2802   000B54  51AF               	movf	xtoa@n& (0+255),w,b
  2803   000B56  11B0               	iorwf	(xtoa@n+1)& (0+255),w,b
  2804   000B58  11B1               	iorwf	(xtoa@n+2)& (0+255),w,b
  2805   000B5A  11B2               	iorwf	(xtoa@n+3)& (0+255),w,b
  2806   000B5C  11B3               	iorwf	(xtoa@n+4)& (0+255),w,b
  2807   000B5E  11B4               	iorwf	(xtoa@n+5)& (0+255),w,b
  2808   000B60  11B5               	iorwf	(xtoa@n+6)& (0+255),w,b
  2809   000B62  11B6               	iorwf	(xtoa@n+7)& (0+255),w,b
  2810   000B64  A4D8               	btfss	status,2,c
  2811   000B66  EFB7  F005         	goto	u2701
  2812   000B6A  EFB9  F005         	goto	u2700
  2813   000B6E                     u2701:
  2814   000B6E  EF40  F005         	goto	l3427
  2815   000B72                     u2700:
  2816   000B72                     
  2817                           ; BSR set to: 0
  2818   000B72  BFAC               	btfsc	(xtoa@p+1)& (0+255),7,b
  2819   000B74  EFC6  F005         	goto	u2710
  2820   000B78  51AC               	movf	(xtoa@p+1)& (0+255),w,b
  2821   000B7A  E106               	bnz	u2711
  2822   000B7C  05AB               	decf	xtoa@p& (0+255),w,b
  2823   000B7E  B0D8               	btfsc	status,0,c
  2824   000B80  EFC4  F005         	goto	u2711
  2825   000B84  EFC6  F005         	goto	u2710
  2826   000B88                     u2711:
  2827   000B88  EF40  F005         	goto	l3427
  2828   000B8C                     u2710:
  2829   000B8C                     
  2830                           ; BSR set to: 0
  2831   000B8C  BFAE               	btfsc	(xtoa@w+1)& (0+255),7,b
  2832   000B8E  EFD1  F005         	goto	u2721
  2833   000B92  51AE               	movf	(xtoa@w+1)& (0+255),w,b
  2834   000B94  E108               	bnz	u2720
  2835   000B96  05AD               	decf	xtoa@w& (0+255),w,b
  2836   000B98  A0D8               	btfss	status,0,c
  2837   000B9A  EFD1  F005         	goto	u2721
  2838   000B9E  EFD3  F005         	goto	u2720
  2839   000BA2                     u2721:
  2840   000BA2  EFDA  F005         	goto	l3457
  2841   000BA6                     u2720:
  2842   000BA6                     
  2843                           ; BSR set to: 0
  2844   000BA6  B3DA               	btfsc	_flags& (0+255),1,b
  2845   000BA8  EFD8  F005         	goto	u2731
  2846   000BAC  EFDA  F005         	goto	u2730
  2847   000BB0                     u2731:
  2848   000BB0  EF40  F005         	goto	l3427
  2849   000BB4                     u2730:
  2850   000BB4                     l3457:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2854   000BB4  C097  F08C         	movff	xtoa@fp,pad@fp
  2855   000BB8  C098  F08D         	movff	xtoa@fp+1,pad@fp+1
  2856   000BBC  0E00               	movlw	low _dbuf
  2857   000BBE  25B7               	addwf	xtoa@i& (0+255),w,b
  2858   000BC0  6F8E               	movwf	pad@buf& (0+255),b
  2859   000BC2  0E01               	movlw	high _dbuf
  2860   000BC4  21B8               	addwfc	(xtoa@i+1)& (0+255),w,b
  2861   000BC6  6F8F               	movwf	(pad@buf+1)& (0+255),b
  2862   000BC8  C0AD  F090         	movff	xtoa@w,pad@p
  2863   000BCC  C0AE  F091         	movff	xtoa@w+1,pad@p+1
  2864   000BD0  EC4D  F009         	call	_pad	;wreg free
  2865   000BD4  0012               	return		;funcret
  2866   000BD6                     __end_of_xtoa:
  2867                           	callstack 0
  2868                           
  2869 ;; *************** function _pad *****************
  2870 ;; Defined at:
  2871 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  2874 ;;		 -> NULL(0), 
  2875 ;;  buf             2   46[BANK0 ] PTR unsigned char 
  2876 ;;		 -> dbuf(32), 
  2877 ;;  p               2   48[BANK0 ] int 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  w               2   53[BANK0 ] int 
  2880 ;;  i               2   51[BANK0 ] int 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2890 ;;      Params:         0       6       0       0       0       0       0
  2891 ;;      Locals:         0       4       0       0       0       0       0
  2892 ;;      Temps:          0       1       0       0       0       0       0
  2893 ;;      Totals:         0      11       0       0       0       0       0
  2894 ;;Total ram usage:       11 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; Hardware stack levels required when called: 16
  2897 ;; This function calls:
  2898 ;;		_fputc
  2899 ;;		_fputs
  2900 ;; This function is called by:
  2901 ;;		_xtoa
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text5
  2906   00129A                     __ptext5:
  2907                           	callstack 0
  2908   00129A                     _pad:
  2909                           	callstack 10
  2910   00129A                     
  2911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  2912   00129A  0100               	movlb	0	; () banked
  2913   00129C  A1DA               	btfss	_flags& (0+255),0,b
  2914   00129E  EF53  F009         	goto	u2451
  2915   0012A2  EF55  F009         	goto	u2450
  2916   0012A6                     u2451:
  2917   0012A6  EF5F  F009         	goto	l3283
  2918   0012AA                     u2450:
  2919   0012AA                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  2922   0012AA  C08E  F085         	movff	pad@buf,fputs@s
  2923   0012AE  C08F  F086         	movff	pad@buf+1,fputs@s+1
  2924   0012B2  C08C  F087         	movff	pad@fp,fputs@fp
  2925   0012B6  C08D  F088         	movff	pad@fp+1,fputs@fp+1
  2926   0012BA  ECE3  F00A         	call	_fputs	;wreg free
  2927   0012BE                     l3283:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  2930   0012BE  0100               	movlb	0	; () banked
  2931   0012C0  BF91               	btfsc	(pad@p+1)& (0+255),7,b
  2932   0012C2  EF65  F009         	goto	u2461
  2933   0012C6  EF67  F009         	goto	u2460
  2934   0012CA                     u2461:
  2935   0012CA  EF6D  F009         	goto	l3287
  2936   0012CE                     u2460:
  2937   0012CE                     
  2938                           ; BSR set to: 0
  2939   0012CE  C090  F095         	movff	pad@p,pad@w
  2940   0012D2  C091  F096         	movff	pad@p+1,pad@w+1
  2941   0012D6  EF71  F009         	goto	l1028
  2942   0012DA                     l3287:
  2943                           
  2944                           ; BSR set to: 0
  2945   0012DA  0E00               	movlw	0
  2946   0012DC  6F96               	movwf	(pad@w+1)& (0+255),b
  2947   0012DE  0E00               	movlw	0
  2948   0012E0  6F95               	movwf	pad@w& (0+255),b
  2949   0012E2                     l1028:
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2953   0012E2  0E00               	movlw	0
  2954   0012E4  6F94               	movwf	(pad@i+1)& (0+255),b
  2955   0012E6  0E00               	movlw	0
  2956   0012E8  6F93               	movwf	pad@i& (0+255),b
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2959   0012EA  EF84  F009         	goto	l3293
  2960   0012EE                     l3289:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2964   0012EE  0E00               	movlw	0
  2965   0012F0  6F7D               	movwf	(fputc@c+1)& (0+255),b
  2966   0012F2  0E20               	movlw	32
  2967   0012F4  6F7C               	movwf	fputc@c& (0+255),b
  2968   0012F6  C08C  F07E         	movff	pad@fp,fputc@fp
  2969   0012FA  C08D  F07F         	movff	pad@fp+1,fputc@fp+1
  2970   0012FE  ECFC  F009         	call	_fputc	;wreg free
  2971   001302                     
  2972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2973   001302  0100               	movlb	0	; () banked
  2974   001304  4B93               	infsnz	pad@i& (0+255),f,b
  2975   001306  2B94               	incf	(pad@i+1)& (0+255),f,b
  2976   001308                     l3293:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2980   001308  5195               	movf	pad@w& (0+255),w,b
  2981   00130A  5D93               	subwf	pad@i& (0+255),w,b
  2982   00130C  5194               	movf	(pad@i+1)& (0+255),w,b
  2983   00130E  0A80               	xorlw	128
  2984   001310  6F92               	movwf	??_pad& (0+255),b
  2985   001312  5196               	movf	(pad@w+1)& (0+255),w,b
  2986   001314  0A80               	xorlw	128
  2987   001316  5992               	subwfb	??_pad& (0+255),w,b
  2988   001318  A0D8               	btfss	status,0,c
  2989   00131A  EF91  F009         	goto	u2471
  2990   00131E  EF93  F009         	goto	u2470
  2991   001322                     u2471:
  2992   001322  EF77  F009         	goto	l3289
  2993   001326                     u2470:
  2994   001326                     
  2995                           ; BSR set to: 0
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  2997   001326  B1DA               	btfsc	_flags& (0+255),0,b
  2998   001328  EF98  F009         	goto	u2481
  2999   00132C  EF9A  F009         	goto	u2480
  3000   001330                     u2481:
  3001   001330  EFA4  F009         	goto	l1033
  3002   001334                     u2480:
  3003   001334                     
  3004                           ; BSR set to: 0
  3005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3006   001334  C08E  F085         	movff	pad@buf,fputs@s
  3007   001338  C08F  F086         	movff	pad@buf+1,fputs@s+1
  3008   00133C  C08C  F087         	movff	pad@fp,fputs@fp
  3009   001340  C08D  F088         	movff	pad@fp+1,fputs@fp+1
  3010   001344  ECE3  F00A         	call	_fputs	;wreg free
  3011   001348                     l1033:
  3012   001348  0012               	return		;funcret
  3013   00134A                     __end_of_pad:
  3014                           	callstack 0
  3015                           
  3016 ;; *************** function _fputs *****************
  3017 ;; Defined at:
  3018 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  s               2   37[BANK0 ] PTR const unsigned char 
  3021 ;;		 -> dbuf(32), 
  3022 ;;  fp              2   39[BANK0 ] PTR struct _IO_FILE
  3023 ;;		 -> NULL(0), 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  i               2   42[BANK0 ] int 
  3026 ;;  c               1   41[BANK0 ] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2   37[BANK0 ] int 
  3029 ;; Registers used:
  3030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3036 ;;      Params:         0       4       0       0       0       0       0
  3037 ;;      Locals:         0       3       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0
  3039 ;;      Totals:         0       7       0       0       0       0       0
  3040 ;;Total ram usage:        7 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 15
  3043 ;; This function calls:
  3044 ;;		_fputc
  3045 ;; This function is called by:
  3046 ;;		_pad
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text6
  3051   0015C6                     __ptext6:
  3052                           	callstack 0
  3053   0015C6                     _fputs:
  3054                           	callstack 10
  3055   0015C6  0E00               	movlw	0
  3056   0015C8  0100               	movlb	0	; () banked
  3057   0015CA  6F8B               	movwf	(fputs@i+1)& (0+255),b
  3058   0015CC  0E00               	movlw	0
  3059   0015CE  6F8A               	movwf	fputs@i& (0+255),b
  3060   0015D0  EFF6  F00A         	goto	l3169
  3061   0015D4                     l3165:
  3062                           
  3063                           ; BSR set to: 0
  3064   0015D4  C089  F07C         	movff	fputs@c,fputc@c
  3065   0015D8  6B7D               	clrf	(fputc@c+1)& (0+255),b
  3066   0015DA  C087  F07E         	movff	fputs@fp,fputc@fp
  3067   0015DE  C088  F07F         	movff	fputs@fp+1,fputc@fp+1
  3068   0015E2  ECFC  F009         	call	_fputc	;wreg free
  3069   0015E6  0100               	movlb	0	; () banked
  3070   0015E8  4B8A               	infsnz	fputs@i& (0+255),f,b
  3071   0015EA  2B8B               	incf	(fputs@i+1)& (0+255),f,b
  3072   0015EC                     l3169:
  3073                           
  3074                           ; BSR set to: 0
  3075   0015EC  518A               	movf	fputs@i& (0+255),w,b
  3076   0015EE  2585               	addwf	fputs@s& (0+255),w,b
  3077   0015F0  6ED9               	movwf	fsr2l,c
  3078   0015F2  518B               	movf	(fputs@i+1)& (0+255),w,b
  3079   0015F4  2186               	addwfc	(fputs@s+1)& (0+255),w,b
  3080   0015F6  6EDA               	movwf	fsr2h,c
  3081   0015F8  50DF               	movf	indf2,w,c
  3082   0015FA  6F89               	movwf	fputs@c& (0+255),b
  3083   0015FC  5189               	movf	fputs@c& (0+255),w,b
  3084   0015FE  A4D8               	btfss	status,2,c
  3085   001600  EF04  F00B         	goto	u2261
  3086   001604  EF06  F00B         	goto	u2260
  3087   001608                     u2261:
  3088   001608  EFEA  F00A         	goto	l3165
  3089   00160C                     u2260:
  3090   00160C                     
  3091                           ; BSR set to: 0
  3092   00160C  0012               	return		;funcret
  3093   00160E                     __end_of_fputs:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _ctoa *****************
  3097 ;; Defined at:
  3098 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  3101 ;;		 -> NULL(0), 
  3102 ;;  c               1   39[BANK0 ] unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  w               2   43[BANK0 ] int 
  3105 ;;  l               2   41[BANK0 ] int 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3115 ;;      Params:         0       3       0       0       0       0       0
  3116 ;;      Locals:         0       4       0       0       0       0       0
  3117 ;;      Temps:          0       1       0       0       0       0       0
  3118 ;;      Totals:         0       8       0       0       0       0       0
  3119 ;;Total ram usage:        8 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 15
  3122 ;; This function calls:
  3123 ;;		_fputc
  3124 ;; This function is called by:
  3125 ;;		_vfpfcnvrt
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text7
  3130   00103E                     __ptext7:
  3131                           	callstack 0
  3132   00103E                     _ctoa:
  3133                           	callstack 12
  3134   00103E                     
  3135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  3136   00103E  0100               	movlb	0	; () banked
  3137   001040  51CC               	movf	_width& (0+255),w,b
  3138   001042  11CD               	iorwf	(_width+1)& (0+255),w,b
  3139   001044  A4D8               	btfss	status,2,c
  3140   001046  EF27  F008         	goto	u2601
  3141   00104A  EF29  F008         	goto	u2600
  3142   00104E                     u2601:
  3143   00104E  EF2F  F008         	goto	l3395
  3144   001052                     u2600:
  3145   001052                     
  3146                           ; BSR set to: 0
  3147   001052  C0CC  F08B         	movff	_width,ctoa@w
  3148   001056  C0CD  F08C         	movff	_width+1,ctoa@w+1
  3149   00105A  EF35  F008         	goto	l3397
  3150   00105E                     l3395:
  3151                           
  3152                           ; BSR set to: 0
  3153   00105E  0EFF               	movlw	255
  3154   001060  25CC               	addwf	_width& (0+255),w,b
  3155   001062  6F8B               	movwf	ctoa@w& (0+255),b
  3156   001064  0EFF               	movlw	255
  3157   001066  21CD               	addwfc	(_width+1)& (0+255),w,b
  3158   001068  6F8C               	movwf	(ctoa@w+1)& (0+255),b
  3159   00106A                     l3397:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  3163   00106A  A1DA               	btfss	_flags& (0+255),0,b
  3164   00106C  EF3A  F008         	goto	u2611
  3165   001070  EF3C  F008         	goto	u2610
  3166   001074                     u2611:
  3167   001074  EF45  F008         	goto	l3401
  3168   001078                     u2610:
  3169   001078                     
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  3172   001078  C087  F07C         	movff	ctoa@c,fputc@c
  3173   00107C  6B7D               	clrf	(fputc@c+1)& (0+255),b
  3174   00107E  C085  F07E         	movff	ctoa@fp,fputc@fp
  3175   001082  C086  F07F         	movff	ctoa@fp+1,fputc@fp+1
  3176   001086  ECFC  F009         	call	_fputc	;wreg free
  3177   00108A                     l3401:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  3180   00108A  0100               	movlb	0	; () banked
  3181   00108C  BF8C               	btfsc	(ctoa@w+1)& (0+255),7,b
  3182   00108E  EF4B  F008         	goto	u2621
  3183   001092  EF4D  F008         	goto	u2620
  3184   001096                     u2621:
  3185   001096  EF4F  F008         	goto	l3405
  3186   00109A                     u2620:
  3187   00109A  EF53  F008         	goto	l1044
  3188   00109E                     l3405:
  3189                           
  3190                           ; BSR set to: 0
  3191   00109E  0E00               	movlw	0
  3192   0010A0  6F8C               	movwf	(ctoa@w+1)& (0+255),b
  3193   0010A2  0E00               	movlw	0
  3194   0010A4  6F8B               	movwf	ctoa@w& (0+255),b
  3195   0010A6                     l1044:
  3196                           
  3197                           ; BSR set to: 0
  3198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  3199   0010A6  0E00               	movlw	0
  3200   0010A8  6F8A               	movwf	(ctoa@l+1)& (0+255),b
  3201   0010AA  0E00               	movlw	0
  3202   0010AC  6F89               	movwf	ctoa@l& (0+255),b
  3203                           
  3204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3205   0010AE  EF66  F008         	goto	l3411
  3206   0010B2                     l3407:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  3210   0010B2  0E00               	movlw	0
  3211   0010B4  6F7D               	movwf	(fputc@c+1)& (0+255),b
  3212   0010B6  0E20               	movlw	32
  3213   0010B8  6F7C               	movwf	fputc@c& (0+255),b
  3214   0010BA  C085  F07E         	movff	ctoa@fp,fputc@fp
  3215   0010BE  C086  F07F         	movff	ctoa@fp+1,fputc@fp+1
  3216   0010C2  ECFC  F009         	call	_fputc	;wreg free
  3217   0010C6                     
  3218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  3219   0010C6  0100               	movlb	0	; () banked
  3220   0010C8  4B89               	infsnz	ctoa@l& (0+255),f,b
  3221   0010CA  2B8A               	incf	(ctoa@l+1)& (0+255),f,b
  3222   0010CC                     l3411:
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3226   0010CC  518B               	movf	ctoa@w& (0+255),w,b
  3227   0010CE  5D89               	subwf	ctoa@l& (0+255),w,b
  3228   0010D0  518A               	movf	(ctoa@l+1)& (0+255),w,b
  3229   0010D2  0A80               	xorlw	128
  3230   0010D4  6F88               	movwf	??_ctoa& (0+255),b
  3231   0010D6  518C               	movf	(ctoa@w+1)& (0+255),w,b
  3232   0010D8  0A80               	xorlw	128
  3233   0010DA  5988               	subwfb	??_ctoa& (0+255),w,b
  3234   0010DC  A0D8               	btfss	status,0,c
  3235   0010DE  EF73  F008         	goto	u2631
  3236   0010E2  EF75  F008         	goto	u2630
  3237   0010E6                     u2631:
  3238   0010E6  EF59  F008         	goto	l3407
  3239   0010EA                     u2630:
  3240   0010EA                     
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  3243   0010EA  B1DA               	btfsc	_flags& (0+255),0,b
  3244   0010EC  EF7A  F008         	goto	u2641
  3245   0010F0  EF7C  F008         	goto	u2640
  3246   0010F4                     u2641:
  3247   0010F4  EF85  F008         	goto	l1049
  3248   0010F8                     u2640:
  3249   0010F8                     
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  3252   0010F8  C087  F07C         	movff	ctoa@c,fputc@c
  3253   0010FC  6B7D               	clrf	(fputc@c+1)& (0+255),b
  3254   0010FE  C085  F07E         	movff	ctoa@fp,fputc@fp
  3255   001102  C086  F07F         	movff	ctoa@fp+1,fputc@fp+1
  3256   001106  ECFC  F009         	call	_fputc	;wreg free
  3257   00110A                     l1049:
  3258   00110A  0012               	return		;funcret
  3259   00110C                     __end_of_ctoa:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _fputc *****************
  3263 ;; Defined at:
  3264 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  c               2   28[BANK0 ] int 
  3267 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  3268 ;;		 -> NULL(0), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;		None
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  2   28[BANK0 ] int 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3280 ;;      Params:         0       4       0       0       0       0       0
  3281 ;;      Locals:         0       0       0       0       0       0       0
  3282 ;;      Temps:          0       5       0       0       0       0       0
  3283 ;;      Totals:         0       9       0       0       0       0       0
  3284 ;;Total ram usage:        9 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 14
  3287 ;; This function calls:
  3288 ;;		_putch
  3289 ;; This function is called by:
  3290 ;;		_pad
  3291 ;;		_ctoa
  3292 ;;		_vfpfcnvrt
  3293 ;;		_fputs
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text8
  3298   0013F8                     __ptext8:
  3299                           	callstack 0
  3300   0013F8                     _fputc:
  3301                           	callstack 10
  3302   0013F8  0100               	movlb	0	; () banked
  3303   0013FA  517E               	movf	fputc@fp& (0+255),w,b
  3304   0013FC  117F               	iorwf	(fputc@fp+1)& (0+255),w,b
  3305   0013FE  B4D8               	btfsc	status,2,c
  3306   001400  EF04  F00A         	goto	u2161
  3307   001404  EF06  F00A         	goto	u2160
  3308   001408                     u2161:
  3309   001408  EF0F  F00A         	goto	l3117
  3310   00140C                     u2160:
  3311   00140C                     
  3312                           ; BSR set to: 0
  3313   00140C  517E               	movf	fputc@fp& (0+255),w,b
  3314   00140E  117F               	iorwf	(fputc@fp+1)& (0+255),w,b
  3315   001410  A4D8               	btfss	status,2,c
  3316   001412  EF0D  F00A         	goto	u2171
  3317   001416  EF0F  F00A         	goto	u2170
  3318   00141A                     u2171:
  3319   00141A  EF14  F00A         	goto	l3119
  3320   00141E                     u2170:
  3321   00141E                     l3117:
  3322                           
  3323                           ; BSR set to: 0
  3324   00141E  517C               	movf	fputc@c& (0+255),w,b
  3325   001420  ECEC  F00C         	call	_putch
  3326   001424  EF47  F00A         	goto	l1151
  3327   001428                     l3119:
  3328                           
  3329                           ; BSR set to: 0
  3330   001428  EE20 F009          	lfsr	2,9
  3331   00142C  517E               	movf	fputc@fp& (0+255),w,b
  3332   00142E  26D9               	addwf	fsr2l,f,c
  3333   001430  517F               	movf	(fputc@fp+1)& (0+255),w,b
  3334   001432  22DA               	addwfc	fsr2h,f,c
  3335   001434  50DE               	movf	postinc2,w,c
  3336   001436  10DE               	iorwf	postinc2,w,c
  3337   001438  B4D8               	btfsc	status,2,c
  3338   00143A  EF21  F00A         	goto	u2181
  3339   00143E  EF23  F00A         	goto	u2180
  3340   001442                     u2181:
  3341   001442  EF3E  F00A         	goto	l3123
  3342   001446                     u2180:
  3343   001446                     
  3344                           ; BSR set to: 0
  3345   001446  EE20 F009          	lfsr	2,9
  3346   00144A  517E               	movf	fputc@fp& (0+255),w,b
  3347   00144C  26D9               	addwf	fsr2l,f,c
  3348   00144E  517F               	movf	(fputc@fp+1)& (0+255),w,b
  3349   001450  22DA               	addwfc	fsr2h,f,c
  3350   001452  EE10 F003          	lfsr	1,3
  3351   001456  517E               	movf	fputc@fp& (0+255),w,b
  3352   001458  26E1               	addwf	fsr1l,f,c
  3353   00145A  517F               	movf	(fputc@fp+1)& (0+255),w,b
  3354   00145C  22E2               	addwfc	fsr1h,f,c
  3355   00145E  50DE               	movf	postinc2,w,c
  3356   001460  5CE6               	subwf	postinc1,w,c
  3357   001462  50E6               	movf	postinc1,w,c
  3358   001464  0A80               	xorlw	128
  3359   001466  6F84               	movwf	(??_fputc+4)& (0+255),b
  3360   001468  50DE               	movf	postinc2,w,c
  3361   00146A  0A80               	xorlw	128
  3362   00146C  5984               	subwfb	(??_fputc+4)& (0+255),w,b
  3363   00146E  B0D8               	btfsc	status,0,c
  3364   001470  EF3C  F00A         	goto	u2191
  3365   001474  EF3E  F00A         	goto	u2190
  3366   001478                     u2191:
  3367   001478  EF47  F00A         	goto	l1151
  3368   00147C                     u2190:
  3369   00147C                     l3123:
  3370                           
  3371                           ; BSR set to: 0
  3372   00147C  EE20 F003          	lfsr	2,3
  3373   001480  517E               	movf	fputc@fp& (0+255),w,b
  3374   001482  26D9               	addwf	fsr2l,f,c
  3375   001484  517F               	movf	(fputc@fp+1)& (0+255),w,b
  3376   001486  22DA               	addwfc	fsr2h,f,c
  3377   001488  2ADE               	incf	postinc2,f,c
  3378   00148A  0E00               	movlw	0
  3379   00148C  22DD               	addwfc	postdec2,f,c
  3380   00148E                     l1151:
  3381   00148E  0012               	return		;funcret
  3382   001490                     __end_of_fputc:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _putch *****************
  3386 ;; Defined at:
  3387 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  txData          1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  txData          1   27[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3401 ;;      Params:         0       0       0       0       0       0       0
  3402 ;;      Locals:         0       1       0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0
  3404 ;;      Totals:         0       1       0       0       0       0       0
  3405 ;;Total ram usage:        1 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 13
  3408 ;; This function calls:
  3409 ;;		_EUSART1_Write
  3410 ;; This function is called by:
  3411 ;;		_fputc
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text9
  3416   0019D8                     __ptext9:
  3417                           	callstack 0
  3418   0019D8                     _putch:
  3419                           	callstack 10
  3420                           
  3421                           ;incstack = 0
  3422                           ;putch@txData stored from wreg
  3423   0019D8  0100               	movlb	0	; () banked
  3424   0019DA  6F7B               	movwf	putch@txData& (0+255),b
  3425   0019DC                     
  3426                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3427   0019DC  0100               	movlb	0	; () banked
  3428   0019DE  517B               	movf	putch@txData& (0+255),w,b
  3429   0019E0  ECC0  F00C         	call	_EUSART1_Write
  3430   0019E4  0012               	return		;funcret
  3431   0019E6                     __end_of_putch:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _EUSART1_Write *****************
  3435 ;; Defined at:
  3436 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  txData          1    wreg     unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  txData          1   26[BANK0 ] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3450 ;;      Params:         0       0       0       0       0       0       0
  3451 ;;      Locals:         0       1       0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0
  3453 ;;      Totals:         0       1       0       0       0       0       0
  3454 ;;Total ram usage:        1 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 12
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_putch
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text10
  3465   001980                     __ptext10:
  3466                           	callstack 0
  3467   001980                     _EUSART1_Write:
  3468                           	callstack 10
  3469                           
  3470                           ;incstack = 0
  3471                           ;EUSART1_Write@txData stored from wreg
  3472   001980  0100               	movlb	0	; () banked
  3473   001982  6F7A               	movwf	EUSART1_Write@txData& (0+255),b
  3474   001984                     l154:
  3475                           
  3476                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3477   001984  A89E               	btfss	158,4,c	;volatile
  3478   001986  EFC7  F00C         	goto	u2101
  3479   00198A  EFC9  F00C         	goto	u2100
  3480   00198E                     u2101:
  3481   00198E  EFC2  F00C         	goto	l154
  3482   001992                     u2100:
  3483   001992                     
  3484                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3485   001992  C07A  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3486   001996  0012               	return		;funcret
  3487   001998                     __end_of_EUSART1_Write:
  3488                           	callstack 0
  3489                           
  3490 ;; *************** function _atoi *****************
  3491 ;; Defined at:
  3492 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  s               2   32[BANK0 ] PTR const unsigned char 
  3495 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  3496 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  3497 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  3498 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  3499 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  3500 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  3501 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  n               2   39[BANK0 ] int 
  3504 ;;  neg             2   37[BANK0 ] int 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2   32[BANK0 ] int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3514 ;;      Params:         0       2       0       0       0       0       0
  3515 ;;      Locals:         0       4       0       0       0       0       0
  3516 ;;      Temps:          0       3       0       0       0       0       0
  3517 ;;      Totals:         0       9       0       0       0       0       0
  3518 ;;Total ram usage:        9 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 13
  3521 ;; This function calls:
  3522 ;;		___wmul
  3523 ;;		_isdigit
  3524 ;;		_isspace
  3525 ;; This function is called by:
  3526 ;;		_vfpfcnvrt
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text11
  3531   000DA6                     __ptext11:
  3532                           	callstack 0
  3533   000DA6                     _atoi:
  3534                           	callstack 14
  3535   000DA6  0E00               	movlw	0
  3536   000DA8  0100               	movlb	0	; () banked
  3537   000DAA  6F88               	movwf	(atoi@n+1)& (0+255),b
  3538   000DAC  0E00               	movlw	0
  3539   000DAE  6F87               	movwf	atoi@n& (0+255),b
  3540   000DB0  0E00               	movlw	0
  3541   000DB2  6F86               	movwf	(atoi@neg+1)& (0+255),b
  3542   000DB4  0E00               	movlw	0
  3543   000DB6  6F85               	movwf	atoi@neg& (0+255),b
  3544   000DB8  EFE0  F006         	goto	l3467
  3545   000DBC                     l3463:
  3546                           
  3547                           ; BSR set to: 0
  3548   000DBC  4B80               	infsnz	atoi@s& (0+255),f,b
  3549   000DBE  2B81               	incf	(atoi@s+1)& (0+255),f,b
  3550   000DC0                     l3467:
  3551                           
  3552                           ; BSR set to: 0
  3553   000DC0  C080  FFF6         	movff	atoi@s,tblptrl
  3554   000DC4  C081  FFF7         	movff	atoi@s+1,tblptrh
  3555   000DC8                     	if	0	;tblptru may be non-zero
  3556   000DC8                     	endif
  3557   000DC8                     	if	0	;tblptru may be non-zero
  3558   000DC8                     	endif
  3559   000DC8  0008               	tblrd		*
  3560   000DCA  50F5               	movf	tablat,w,c
  3561   000DCC  0A20               	xorlw	32
  3562   000DCE  B4D8               	btfsc	status,2,c
  3563   000DD0  EFEC  F006         	goto	u2741
  3564   000DD4  EFEE  F006         	goto	u2740
  3565   000DD8                     u2741:
  3566   000DD8  EFDE  F006         	goto	l3463
  3567   000DDC                     u2740:
  3568   000DDC                     
  3569                           ; BSR set to: 0
  3570   000DDC  C080  FFF6         	movff	atoi@s,tblptrl
  3571   000DE0  C081  FFF7         	movff	atoi@s+1,tblptrh
  3572   000DE4                     	if	0	;tblptru may be non-zero
  3573   000DE4                     	endif
  3574   000DE4                     	if	0	;tblptru may be non-zero
  3575   000DE4                     	endif
  3576   000DE4  0008               	tblrd		*
  3577   000DE6  CFF5 F082          	movff	tablat,??_atoi
  3578   000DEA  0EF7               	movlw	247
  3579   000DEC  2582               	addwf	??_atoi& (0+255),w,b
  3580   000DEE  6F83               	movwf	(??_atoi+1)& (0+255),b
  3581   000DF0  6B84               	clrf	(??_atoi+2)& (0+255),b
  3582   000DF2  0EFF               	movlw	255
  3583   000DF4  2384               	addwfc	(??_atoi+2)& (0+255),f,b
  3584   000DF6  5184               	movf	(??_atoi+2)& (0+255),w,b
  3585   000DF8  E109               	bnz	u2750
  3586   000DFA  0E05               	movlw	5
  3587   000DFC  5D83               	subwf	(??_atoi+1)& (0+255),w,b
  3588   000DFE  A0D8               	btfss	status,0,c
  3589   000E00  EF04  F007         	goto	u2751
  3590   000E04  EF06  F007         	goto	u2750
  3591   000E08                     u2751:
  3592   000E08  EFDE  F006         	goto	l3463
  3593   000E0C                     u2750:
  3594   000E0C  EF10  F007         	goto	l3475
  3595   000E10                     l3471:
  3596                           
  3597                           ; BSR set to: 0
  3598   000E10  0E00               	movlw	0
  3599   000E12  6F86               	movwf	(atoi@neg+1)& (0+255),b
  3600   000E14  0E01               	movlw	1
  3601   000E16  6F85               	movwf	atoi@neg& (0+255),b
  3602   000E18                     l3473:
  3603                           
  3604                           ; BSR set to: 0
  3605   000E18  4B80               	infsnz	atoi@s& (0+255),f,b
  3606   000E1A  2B81               	incf	(atoi@s+1)& (0+255),f,b
  3607   000E1C  EF46  F007         	goto	l3483
  3608   000E20                     l3475:
  3609                           
  3610                           ; BSR set to: 0
  3611   000E20  C080  FFF6         	movff	atoi@s,tblptrl
  3612   000E24  C081  FFF7         	movff	atoi@s+1,tblptrh
  3613   000E28                     	if	0	;tblptru may be non-zero
  3614   000E28                     	endif
  3615   000E28                     	if	0	;tblptru may be non-zero
  3616   000E28                     	endif
  3617   000E28  0008               	tblrd		*
  3618   000E2A  50F5               	movf	tablat,w,c
  3619   000E2C  6F82               	movwf	??_atoi& (0+255),b
  3620   000E2E  6B83               	clrf	(??_atoi+1)& (0+255),b
  3621                           
  3622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3623                           ; Switch size 1, requested type "simple"
  3624                           ; Number of cases is 1, Range of values is 0 to 0
  3625                           ; switch strategies available:
  3626                           ; Name         Instructions Cycles
  3627                           ; simple_byte            4     3 (average)
  3628                           ;	Chosen strategy is simple_byte
  3629   000E30  5183               	movf	(??_atoi+1)& (0+255),w,b
  3630   000E32  0A00               	xorlw	0	; case 0
  3631   000E34  B4D8               	btfsc	status,2,c
  3632   000E36  EF1F  F007         	goto	l4017
  3633   000E3A  EF46  F007         	goto	l3483
  3634   000E3E                     l4017:
  3635                           
  3636                           ; BSR set to: 0
  3637                           ; Switch size 1, requested type "simple"
  3638                           ; Number of cases is 2, Range of values is 43 to 45
  3639                           ; switch strategies available:
  3640                           ; Name         Instructions Cycles
  3641                           ; simple_byte            7     4 (average)
  3642                           ;	Chosen strategy is simple_byte
  3643   000E3E  5182               	movf	??_atoi& (0+255),w,b
  3644   000E40  0A2B               	xorlw	43	; case 43
  3645   000E42  B4D8               	btfsc	status,2,c
  3646   000E44  EF0C  F007         	goto	l3473
  3647   000E48  0A06               	xorlw	6	; case 45
  3648   000E4A  B4D8               	btfsc	status,2,c
  3649   000E4C  EF08  F007         	goto	l3471
  3650   000E50  EF46  F007         	goto	l3483
  3651   000E54                     l3477:
  3652                           
  3653                           ; BSR set to: 0
  3654   000E54  C087  F07A         	movff	atoi@n,___wmul@multiplier
  3655   000E58  C088  F07B         	movff	atoi@n+1,___wmul@multiplier+1
  3656   000E5C  0E00               	movlw	0
  3657   000E5E  6F7D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3658   000E60  0E0A               	movlw	10
  3659   000E62  6F7C               	movwf	___wmul@multiplicand& (0+255),b
  3660   000E64  EC52  F00C         	call	___wmul	;wreg free
  3661   000E68  C080  FFF6         	movff	atoi@s,tblptrl
  3662   000E6C  C081  FFF7         	movff	atoi@s+1,tblptrh
  3663   000E70                     	if	0	;tblptru may be non-zero
  3664   000E70                     	endif
  3665   000E70                     	if	0	;tblptru may be non-zero
  3666   000E70                     	endif
  3667   000E70  0008               	tblrd		*
  3668   000E72  50F5               	movf	tablat,w,c
  3669   000E74  0100               	movlb	0	; () banked
  3670   000E76  5F7A               	subwf	?___wmul& (0+255),f,b
  3671   000E78  0E00               	movlw	0
  3672   000E7A  5B7B               	subwfb	(?___wmul+1)& (0+255),f,b
  3673   000E7C  0E30               	movlw	48
  3674   000E7E  257A               	addwf	?___wmul& (0+255),w,b
  3675   000E80  6F87               	movwf	atoi@n& (0+255),b
  3676   000E82  0E00               	movlw	0
  3677   000E84  217B               	addwfc	(?___wmul+1)& (0+255),w,b
  3678   000E86  6F88               	movwf	(atoi@n+1)& (0+255),b
  3679   000E88  EF0C  F007         	goto	l3473
  3680   000E8C                     l3483:
  3681                           
  3682                           ; BSR set to: 0
  3683   000E8C  C080  FFF6         	movff	atoi@s,tblptrl
  3684   000E90  C081  FFF7         	movff	atoi@s+1,tblptrh
  3685   000E94                     	if	0	;tblptru may be non-zero
  3686   000E94                     	endif
  3687   000E94                     	if	0	;tblptru may be non-zero
  3688   000E94                     	endif
  3689   000E94  0008               	tblrd		*
  3690   000E96  CFF5 F082          	movff	tablat,??_atoi
  3691   000E9A  0ED0               	movlw	208
  3692   000E9C  2582               	addwf	??_atoi& (0+255),w,b
  3693   000E9E  6F83               	movwf	(??_atoi+1)& (0+255),b
  3694   000EA0  6B84               	clrf	(??_atoi+2)& (0+255),b
  3695   000EA2  0EFF               	movlw	255
  3696   000EA4  2384               	addwfc	(??_atoi+2)& (0+255),f,b
  3697   000EA6  5184               	movf	(??_atoi+2)& (0+255),w,b
  3698   000EA8  E109               	bnz	u2760
  3699   000EAA  0E0A               	movlw	10
  3700   000EAC  5D83               	subwf	(??_atoi+1)& (0+255),w,b
  3701   000EAE  A0D8               	btfss	status,0,c
  3702   000EB0  EF5C  F007         	goto	u2761
  3703   000EB4  EF5E  F007         	goto	u2760
  3704   000EB8                     u2761:
  3705   000EB8  EF2A  F007         	goto	l3477
  3706   000EBC                     u2760:
  3707   000EBC                     
  3708                           ; BSR set to: 0
  3709   000EBC  5185               	movf	atoi@neg& (0+255),w,b
  3710   000EBE  1186               	iorwf	(atoi@neg+1)& (0+255),w,b
  3711   000EC0  A4D8               	btfss	status,2,c
  3712   000EC2  EF65  F007         	goto	u2771
  3713   000EC6  EF67  F007         	goto	u2770
  3714   000ECA                     u2771:
  3715   000ECA  EF75  F007         	goto	l1122
  3716   000ECE                     u2770:
  3717   000ECE                     
  3718                           ; BSR set to: 0
  3719   000ECE  C087  F082         	movff	atoi@n,??_atoi
  3720   000ED2  C088  F083         	movff	atoi@n+1,??_atoi+1
  3721   000ED6  1F82               	comf	??_atoi& (0+255),f,b
  3722   000ED8  1F83               	comf	(??_atoi+1)& (0+255),f,b
  3723   000EDA  4B82               	infsnz	??_atoi& (0+255),f,b
  3724   000EDC  2B83               	incf	(??_atoi+1)& (0+255),f,b
  3725   000EDE  C082  F080         	movff	??_atoi,?_atoi
  3726   000EE2  C083  F081         	movff	??_atoi+1,?_atoi+1
  3727   000EE6  EF79  F007         	goto	l1125
  3728   000EEA                     l1122:
  3729                           
  3730                           ; BSR set to: 0
  3731   000EEA  C087  F080         	movff	atoi@n,?_atoi
  3732   000EEE  C088  F081         	movff	atoi@n+1,?_atoi+1
  3733   000EF2                     l1125:
  3734                           
  3735                           ; BSR set to: 0
  3736   000EF2  0012               	return		;funcret
  3737   000EF4                     __end_of_atoi:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _isspace *****************
  3741 ;; Defined at:
  3742 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  c               2   26[BANK0 ] int 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;		None
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  2   26[BANK0 ] int 
  3749 ;; Registers used:
  3750 ;;		wreg, status,2, status,0
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3756 ;;      Params:         0       2       0       0       0       0       0
  3757 ;;      Locals:         0       1       0       0       0       0       0
  3758 ;;      Temps:          0       2       0       0       0       0       0
  3759 ;;      Totals:         0       5       0       0       0       0       0
  3760 ;;Total ram usage:        5 bytes
  3761 ;; Hardware stack levels used: 1
  3762 ;; Hardware stack levels required when called: 12
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_atoi
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text12
  3771   00160E                     __ptext12:
  3772                           	callstack 0
  3773   00160E                     _isspace:
  3774                           	callstack 14
  3775   00160E  0E01               	movlw	1
  3776   001610  0100               	movlb	0	; () banked
  3777   001612  6F7E               	movwf	_isspace$1560& (0+255),b
  3778   001614                     
  3779                           ; BSR set to: 0
  3780   001614  0E20               	movlw	32
  3781   001616  197A               	xorwf	isspace@c& (0+255),w,b
  3782   001618  117B               	iorwf	(isspace@c+1)& (0+255),w,b
  3783   00161A  B4D8               	btfsc	status,2,c
  3784   00161C  EF12  F00B         	goto	u2511
  3785   001620  EF14  F00B         	goto	u2510
  3786   001624                     u2511:
  3787   001624  EF27  F00B         	goto	l3309
  3788   001628                     u2510:
  3789   001628                     
  3790                           ; BSR set to: 0
  3791   001628  0EF7               	movlw	247
  3792   00162A  257A               	addwf	isspace@c& (0+255),w,b
  3793   00162C  6F7C               	movwf	??_isspace& (0+255),b
  3794   00162E  0EFF               	movlw	255
  3795   001630  217B               	addwfc	(isspace@c+1)& (0+255),w,b
  3796   001632  6F7D               	movwf	(??_isspace+1)& (0+255),b
  3797   001634  517D               	movf	(??_isspace+1)& (0+255),w,b
  3798   001636  E109               	bnz	u2520
  3799   001638  0E05               	movlw	5
  3800   00163A  5D7C               	subwf	??_isspace& (0+255),w,b
  3801   00163C  A0D8               	btfss	status,0,c
  3802   00163E  EF23  F00B         	goto	u2521
  3803   001642  EF25  F00B         	goto	u2520
  3804   001646                     u2521:
  3805   001646  EF27  F00B         	goto	l3309
  3806   00164A                     u2520:
  3807   00164A                     
  3808                           ; BSR set to: 0
  3809   00164A  0E00               	movlw	0
  3810   00164C  6F7E               	movwf	_isspace$1560& (0+255),b
  3811   00164E                     l3309:
  3812                           
  3813                           ; BSR set to: 0
  3814   00164E  C07E  F07A         	movff	_isspace$1560,?_isspace
  3815   001652  6B7B               	clrf	(?_isspace+1)& (0+255),b
  3816   001654                     
  3817                           ; BSR set to: 0
  3818   001654  0012               	return		;funcret
  3819   001656                     __end_of_isspace:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _isdigit *****************
  3823 ;; Defined at:
  3824 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  c               2   26[BANK0 ] int 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;		None
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  2   26[BANK0 ] int 
  3831 ;; Registers used:
  3832 ;;		wreg, status,2, status,0
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3838 ;;      Params:         0       2       0       0       0       0       0
  3839 ;;      Locals:         0       0       0       0       0       0       0
  3840 ;;      Temps:          0       2       0       0       0       0       0
  3841 ;;      Totals:         0       4       0       0       0       0       0
  3842 ;;Total ram usage:        4 bytes
  3843 ;; Hardware stack levels used: 1
  3844 ;; Hardware stack levels required when called: 12
  3845 ;; This function calls:
  3846 ;;		Nothing
  3847 ;; This function is called by:
  3848 ;;		_vfpfcnvrt
  3849 ;;		_atoi
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text13
  3854   00179C                     __ptext13:
  3855                           	callstack 0
  3856   00179C                     _isdigit:
  3857                           	callstack 15
  3858   00179C  0ED0               	movlw	208
  3859   00179E  0100               	movlb	0	; () banked
  3860   0017A0  257A               	addwf	isdigit@c& (0+255),w,b
  3861   0017A2  6F7C               	movwf	??_isdigit& (0+255),b
  3862   0017A4  0EFF               	movlw	255
  3863   0017A6  217B               	addwfc	(isdigit@c+1)& (0+255),w,b
  3864   0017A8  6F7D               	movwf	(??_isdigit+1)& (0+255),b
  3865   0017AA  517D               	movf	(??_isdigit+1)& (0+255),w,b
  3866   0017AC  E10A               	bnz	u2490
  3867   0017AE  0E0A               	movlw	10
  3868   0017B0  5D7C               	subwf	??_isdigit& (0+255),w,b
  3869   0017B2  A0D8               	btfss	status,0,c
  3870   0017B4  EFDE  F00B         	goto	u2491
  3871   0017B8  EFE1  F00B         	goto	u2490
  3872   0017BC                     u2491:
  3873   0017BC  0E01               	movlw	1
  3874   0017BE  EFE2  F00B         	goto	u2500
  3875   0017C2                     u2490:
  3876   0017C2  0E00               	movlw	0
  3877   0017C4                     u2500:
  3878   0017C4  6F7A               	movwf	?_isdigit& (0+255),b
  3879   0017C6  6B7B               	clrf	(?_isdigit+1)& (0+255),b
  3880   0017C8                     
  3881                           ; BSR set to: 0
  3882   0017C8  0012               	return		;funcret
  3883   0017CA                     __end_of_isdigit:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function ___wmul *****************
  3887 ;; Defined at:
  3888 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  multiplier      2   26[BANK0 ] unsigned int 
  3891 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  product         2   30[BANK0 ] unsigned int 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  2   26[BANK0 ] unsigned int 
  3896 ;; Registers used:
  3897 ;;		wreg, status,2, status,0, prodl, prodh
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3903 ;;      Params:         0       4       0       0       0       0       0
  3904 ;;      Locals:         0       2       0       0       0       0       0
  3905 ;;      Temps:          0       0       0       0       0       0       0
  3906 ;;      Totals:         0       6       0       0       0       0       0
  3907 ;;Total ram usage:        6 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 12
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_atoi
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text14
  3918   0018A4                     __ptext14:
  3919                           	callstack 0
  3920   0018A4                     ___wmul:
  3921                           	callstack 14
  3922   0018A4  0100               	movlb	0	; () banked
  3923   0018A6  517A               	movf	___wmul@multiplier& (0+255),w,b
  3924   0018A8  037C               	mulwf	___wmul@multiplicand& (0+255),b
  3925   0018AA  CFF3 F07E          	movff	prodl,___wmul@product
  3926   0018AE  CFF4 F07F          	movff	prodh,___wmul@product+1
  3927   0018B2  517A               	movf	___wmul@multiplier& (0+255),w,b
  3928   0018B4  037D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3929   0018B6  50F3               	movf	243,w,c
  3930   0018B8  277F               	addwf	(___wmul@product+1)& (0+255),f,b
  3931   0018BA  517B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3932   0018BC  037C               	mulwf	___wmul@multiplicand& (0+255),b
  3933   0018BE  50F3               	movf	243,w,c
  3934   0018C0  277F               	addwf	(___wmul@product+1)& (0+255),f,b
  3935   0018C2                     
  3936                           ; BSR set to: 0
  3937   0018C2  C07E  F07A         	movff	___wmul@product,?___wmul
  3938   0018C6  C07F  F07B         	movff	___wmul@product+1,?___wmul+1
  3939   0018CA                     
  3940                           ; BSR set to: 0
  3941   0018CA  0012               	return		;funcret
  3942   0018CC                     __end_of___wmul:
  3943                           	callstack 0
  3944                           
  3945 ;; *************** function _TMR1_WriteTimer *****************
  3946 ;; Defined at:
  3947 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  timerVal        2   26[BANK0 ] unsigned short 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		wreg, status,2
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3961 ;;      Params:         0       2       0       0       0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0
  3964 ;;      Totals:         0       2       0       0       0       0       0
  3965 ;;Total ram usage:        2 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 12
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;;		_TMR1_Reload
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text15
  3977   0017F8                     __ptext15:
  3978                           	callstack 0
  3979   0017F8                     _TMR1_WriteTimer:
  3980                           	callstack 18
  3981   0017F8                     
  3982                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  3983   0017F8  A4CD               	btfss	205,2,c	;volatile
  3984   0017FA  EF01  F00C         	goto	u2941
  3985   0017FE  EF03  F00C         	goto	u2940
  3986   001802                     u2941:
  3987   001802  EF0C  F00C         	goto	l3683
  3988   001806                     u2940:
  3989   001806                     
  3990                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  3991   001806  90CD               	bcf	205,0,c	;volatile
  3992   001808                     
  3993                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  3994   001808  0100               	movlb	0	; () banked
  3995   00180A  517B               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  3996   00180C  6ECF               	movwf	207,c	;volatile
  3997   00180E                     
  3998                           ; BSR set to: 0
  3999                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  4000   00180E  C07A  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4001   001812                     
  4002                           ; BSR set to: 0
  4003                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  4004   001812  80CD               	bsf	205,0,c	;volatile
  4005                           
  4006                           ;mcc_generated_files/tmr1.c: 134:     }
  4007   001814  EF11  F00C         	goto	l276
  4008   001818                     l3683:
  4009                           
  4010                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4011   001818  0100               	movlb	0	; () banked
  4012   00181A  517B               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
  4013   00181C  6ECF               	movwf	207,c	;volatile
  4014   00181E                     
  4015                           ; BSR set to: 0
  4016                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  4017   00181E  C07A  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4018   001822                     l276:
  4019                           
  4020                           ; BSR set to: 0
  4021   001822  0012               	return		;funcret
  4022   001824                     __end_of_TMR1_WriteTimer:
  4023                           	callstack 0
  4024                           
  4025 ;; *************** function _TMR1_ReadTimer *****************
  4026 ;; Defined at:
  4027 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  readVal         2   30[BANK0 ] unsigned short 
  4032 ;;  readValLow      1   33[BANK0 ] unsigned char 
  4033 ;;  readValHigh     1   32[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  2   26[BANK0 ] unsigned short 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4043 ;;      Params:         0       2       0       0       0       0       0
  4044 ;;      Locals:         0       4       0       0       0       0       0
  4045 ;;      Temps:          0       2       0       0       0       0       0
  4046 ;;      Totals:         0       8       0       0       0       0       0
  4047 ;;Total ram usage:        8 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 12
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text16
  4058   001942                     __ptext16:
  4059                           	callstack 0
  4060   001942                     _TMR1_ReadTimer:
  4061                           	callstack 18
  4062   001942                     
  4063                           ;mcc_generated_files/tmr1.c: 107:     uint16_t readVal;;mcc_generated_files/tmr1.c: 108:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 109:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 111:     T1CONbits.T1RD16 = 1;
  4064   001942  82CD               	bsf	205,1,c	;volatile
  4065                           
  4066                           ;mcc_generated_files/tmr1.c: 113:     readValLow = TMR1L;
  4067   001944  CFCE F081          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
  4068                           
  4069                           ;mcc_generated_files/tmr1.c: 114:     readValHigh = TMR1H;
  4070   001948  CFCF F080          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
  4071   00194C                     
  4072                           ;mcc_generated_files/tmr1.c: 116:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  4073   00194C  0100               	movlb	0	; () banked
  4074   00194E  5180               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
  4075   001950  6F7C               	movwf	??_TMR1_ReadTimer& (0+255),b
  4076   001952  5181               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
  4077   001954  6F7E               	movwf	TMR1_ReadTimer@readVal& (0+255),b
  4078   001956  C07C  F07F         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
  4079   00195A                     
  4080                           ; BSR set to: 0
  4081                           ;mcc_generated_files/tmr1.c: 118:     return readVal;
  4082   00195A  C07E  F07A         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
  4083   00195E  C07F  F07B         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
  4084   001962                     
  4085                           ; BSR set to: 0
  4086   001962  0012               	return		;funcret
  4087   001964                     __end_of_TMR1_ReadTimer:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _SYSTEM_Initialize *****************
  4091 ;; Defined at:
  4092 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4106 ;;      Params:         0       0       0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 14
  4113 ;; This function calls:
  4114 ;;		_EUSART1_Initialize
  4115 ;;		_INTERRUPT_Initialize
  4116 ;;		_OSCILLATOR_Initialize
  4117 ;;		_PIN_MANAGER_Initialize
  4118 ;;		_TMR1_Initialize
  4119 ;; This function is called by:
  4120 ;;		_main
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text17
  4125   001998                     __ptext17:
  4126                           	callstack 0
  4127   001998                     _SYSTEM_Initialize:
  4128                           	callstack 16
  4129   001998                     
  4130                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4131   001998  EC0F  F00D         	call	_INTERRUPT_Initialize	;wreg free
  4132   00199C                     
  4133                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4134   00199C  ECE5  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  4135   0019A0                     
  4136                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4137   0019A0  ECB2  F00C         	call	_OSCILLATOR_Initialize	;wreg free
  4138   0019A4                     
  4139                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  4140   0019A4  EC12  F00C         	call	_TMR1_Initialize	;wreg free
  4141   0019A8                     
  4142                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  4143   0019A8  EC4E  F00B         	call	_EUSART1_Initialize	;wreg free
  4144   0019AC  0012               	return		;funcret
  4145   0019AE                     __end_of_SYSTEM_Initialize:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _TMR1_Initialize *****************
  4149 ;; Defined at:
  4150 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;		None
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, status,0, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4164 ;;      Params:         0       0       0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0
  4167 ;;      Totals:         0       0       0       0       0       0       0
  4168 ;;Total ram usage:        0 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 13
  4171 ;; This function calls:
  4172 ;;		_TMR1_SetInterruptHandler
  4173 ;; This function is called by:
  4174 ;;		_SYSTEM_Initialize
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text18
  4179   001824                     __ptext18:
  4180                           	callstack 0
  4181   001824                     _TMR1_Initialize:
  4182                           	callstack 16
  4183   001824                     
  4184                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  4185   001824  0E00               	movlw	0
  4186   001826  6ECC               	movwf	204,c	;volatile
  4187                           
  4188                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x00;
  4189   001828  0E00               	movlw	0
  4190   00182A  6ECF               	movwf	207,c	;volatile
  4191                           
  4192                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x00;
  4193   00182C  0E00               	movlw	0
  4194   00182E  6ECE               	movwf	206,c	;volatile
  4195   001830                     
  4196                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=TMR1;
  4197   001830  CFCE F0D2          	movff	4046,_timer1ReloadVal	;volatile
  4198   001834  CFCF F0D3          	movff	4047,_timer1ReloadVal+1	;volatile
  4199   001838                     
  4200                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  4201   001838  909E               	bcf	158,0,c	;volatile
  4202   00183A                     
  4203                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  4204   00183A  809D               	bsf	157,0,c	;volatile
  4205   00183C                     
  4206                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  4207   00183C  0E22               	movlw	low _TMR1_DefaultInterruptHandler
  4208   00183E  0100               	movlb	0	; () banked
  4209   001840  6F7A               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4210   001842  0E1A               	movlw	high _TMR1_DefaultInterruptHandler
  4211   001844  6F7B               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4212   001846  ECF3  F00C         	call	_TMR1_SetInterruptHandler	;wreg free
  4213   00184A                     
  4214                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
  4215   00184A  0E01               	movlw	1
  4216   00184C  6ECD               	movwf	205,c	;volatile
  4217   00184E  0012               	return		;funcret
  4218   001850                     __end_of_TMR1_Initialize:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function _TMR1_SetInterruptHandler *****************
  4222 ;; Defined at:
  4223 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  InterruptHan    2   26[BANK0 ] PTR FTN()void 
  4226 ;;		 -> TMR1_DefaultInterruptHandler(1), myTMR1ISR(1), 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;		None
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      void 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4238 ;;      Params:         0       2       0       0       0       0       0
  4239 ;;      Locals:         0       0       0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0
  4241 ;;      Totals:         0       2       0       0       0       0       0
  4242 ;;Total ram usage:        2 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 12
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_main
  4249 ;;		_TMR1_Initialize
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text19
  4254   0019E6                     __ptext19:
  4255                           	callstack 0
  4256   0019E6                     _TMR1_SetInterruptHandler:
  4257                           	callstack 18
  4258   0019E6                     
  4259                           ;mcc_generated_files/tmr1.c: 173:     TMR1_InterruptHandler = InterruptHandler;
  4260   0019E6  C07A  F0D0         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4261   0019EA  C07B  F0D1         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4262   0019EE  0012               	return		;funcret
  4263   0019F0                     __end_of_TMR1_SetInterruptHandler:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function _PIN_MANAGER_Initialize *****************
  4267 ;; Defined at:
  4268 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;		None
  4271 ;; Auto vars:     Size  Location     Type
  4272 ;;		None
  4273 ;; Return value:  Size  Location     Type
  4274 ;;                  1    wreg      void 
  4275 ;; Registers used:
  4276 ;;		wreg, status,2
  4277 ;; Tracked objects:
  4278 ;;		On entry : 0/0
  4279 ;;		On exit  : 0/0
  4280 ;;		Unchanged: 0/0
  4281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4282 ;;      Params:         0       0       0       0       0       0       0
  4283 ;;      Locals:         0       0       0       0       0       0       0
  4284 ;;      Temps:          0       0       0       0       0       0       0
  4285 ;;      Totals:         0       0       0       0       0       0       0
  4286 ;;Total ram usage:        0 bytes
  4287 ;; Hardware stack levels used: 1
  4288 ;; Hardware stack levels required when called: 12
  4289 ;; This function calls:
  4290 ;;		Nothing
  4291 ;; This function is called by:
  4292 ;;		_SYSTEM_Initialize
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text20
  4297   0017CA                     __ptext20:
  4298                           	callstack 0
  4299   0017CA                     _PIN_MANAGER_Initialize:
  4300                           	callstack 17
  4301   0017CA                     
  4302                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4303   0017CA  0E00               	movlw	0
  4304   0017CC  6E89               	movwf	137,c	;volatile
  4305                           
  4306                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4307   0017CE  0E00               	movlw	0
  4308   0017D0  6E8A               	movwf	138,c	;volatile
  4309                           
  4310                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4311   0017D2  0E00               	movlw	0
  4312   0017D4  6E8B               	movwf	139,c	;volatile
  4313                           
  4314                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  4315   0017D6  0EBF               	movlw	191
  4316   0017D8  6E92               	movwf	146,c	;volatile
  4317                           
  4318                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  4319   0017DA  0EDF               	movlw	223
  4320   0017DC  6E93               	movwf	147,c	;volatile
  4321                           
  4322                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
  4323   0017DE  0EBF               	movlw	191
  4324   0017E0  6E94               	movwf	148,c	;volatile
  4325                           
  4326                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4327   0017E2  0E3C               	movlw	60
  4328   0017E4  010F               	movlb	15	; () banked
  4329   0017E6  6F3A               	movwf	58,b	;volatile
  4330                           
  4331                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4332   0017E8  0E3F               	movlw	63
  4333   0017EA  6F39               	movwf	57,b	;volatile
  4334                           
  4335                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4336   0017EC  0E2F               	movlw	47
  4337   0017EE  6F38               	movwf	56,b	;volatile
  4338                           
  4339                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4340   0017F0  0E00               	movlw	0
  4341   0017F2  6E61               	movwf	97,c	;volatile
  4342   0017F4                     
  4343                           ; BSR set to: 15
  4344                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4345   0017F4  8EF1               	bsf	241,7,c	;volatile
  4346   0017F6                     
  4347                           ; BSR set to: 15
  4348   0017F6  0012               	return		;funcret
  4349   0017F8                     __end_of_PIN_MANAGER_Initialize:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _OSCILLATOR_Initialize *****************
  4353 ;; Defined at:
  4354 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;		None
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg, status,2
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:         0       0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; Hardware stack levels required when called: 12
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_SYSTEM_Initialize
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text21
  4383   001964                     __ptext21:
  4384                           	callstack 0
  4385   001964                     _OSCILLATOR_Initialize:
  4386                           	callstack 17
  4387   001964                     
  4388                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  4389   001964  0E70               	movlw	112
  4390   001966  6ED3               	movwf	211,c	;volatile
  4391                           
  4392                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  4393   001968  0E04               	movlw	4
  4394   00196A  6ED2               	movwf	210,c	;volatile
  4395                           
  4396                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x40;
  4397   00196C  0E40               	movlw	64
  4398   00196E  6E9B               	movwf	155,c	;volatile
  4399   001970                     l319:
  4400                           
  4401                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  4402   001970  AED2               	btfss	4050,7,c	;volatile
  4403   001972  EFBD  F00C         	goto	u2921
  4404   001976  EFBF  F00C         	goto	u2920
  4405   00197A                     u2921:
  4406   00197A  EFB8  F00C         	goto	l319
  4407   00197E                     u2920:
  4408   00197E  0012               	return		;funcret
  4409   001980                     __end_of_OSCILLATOR_Initialize:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _INTERRUPT_Initialize *****************
  4413 ;; Defined at:
  4414 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		None
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4428 ;;      Params:         0       0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 12
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_SYSTEM_Initialize
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text22
  4443   001A1E                     __ptext22:
  4444                           	callstack 0
  4445   001A1E                     _INTERRUPT_Initialize:
  4446                           	callstack 17
  4447   001A1E                     
  4448                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4449   001A1E  9ED0               	bcf	208,7,c	;volatile
  4450   001A20  0012               	return		;funcret
  4451   001A22                     __end_of_INTERRUPT_Initialize:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function _EUSART1_Initialize *****************
  4455 ;; Defined at:
  4456 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;		None
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;		None
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg, status,2, status,0, cstack
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4470 ;;      Params:         0       0       0       0       0       0       0
  4471 ;;      Locals:         0       0       0       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0       0       0
  4473 ;;      Totals:         0       0       0       0       0       0       0
  4474 ;;Total ram usage:        0 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 13
  4477 ;; This function calls:
  4478 ;;		_EUSART1_SetErrorHandler
  4479 ;;		_EUSART1_SetFramingErrorHandler
  4480 ;;		_EUSART1_SetOverrunErrorHandler
  4481 ;; This function is called by:
  4482 ;;		_SYSTEM_Initialize
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text23
  4487   00169C                     __ptext23:
  4488                           	callstack 0
  4489   00169C                     _EUSART1_Initialize:
  4490                           	callstack 16
  4491   00169C                     
  4492                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4493   00169C  0E08               	movlw	8
  4494   00169E  6EB8               	movwf	184,c	;volatile
  4495                           
  4496                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4497   0016A0  0E90               	movlw	144
  4498   0016A2  6EAB               	movwf	171,c	;volatile
  4499                           
  4500                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4501   0016A4  0E24               	movlw	36
  4502   0016A6  6EAC               	movwf	172,c	;volatile
  4503                           
  4504                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4505   0016A8  0E82               	movlw	130
  4506   0016AA  6EAF               	movwf	175,c	;volatile
  4507                           
  4508                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4509   0016AC  0E06               	movlw	6
  4510   0016AE  6EB0               	movwf	176,c	;volatile
  4511   0016B0                     
  4512                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4513   0016B0  0E00               	movlw	0
  4514   0016B2  0100               	movlb	0	; () banked
  4515   0016B4  6F7A               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  4516   0016B6  0E00               	movlw	0
  4517   0016B8  6F7B               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  4518   0016BA  ECFD  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4519   0016BE                     
  4520                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4521   0016BE  0E00               	movlw	0
  4522   0016C0  0100               	movlb	0	; () banked
  4523   0016C2  6F7A               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  4524   0016C4  0E00               	movlw	0
  4525   0016C6  6F7B               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  4526   0016C8  ECF8  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4527   0016CC                     
  4528                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4529   0016CC  0E00               	movlw	0
  4530   0016CE  0100               	movlb	0	; () banked
  4531   0016D0  6F7A               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  4532   0016D2  0E00               	movlw	0
  4533   0016D4  6F7B               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  4534   0016D6  EC02  F00D         	call	_EUSART1_SetErrorHandler	;wreg free
  4535   0016DA                     
  4536                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4537   0016DA  0E00               	movlw	0
  4538   0016DC  0100               	movlb	0	; () banked
  4539   0016DE  6FDB               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4540   0016E0                     
  4541                           ; BSR set to: 0
  4542   0016E0  0012               	return		;funcret
  4543   0016E2                     __end_of_EUSART1_Initialize:
  4544                           	callstack 0
  4545                           
  4546 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4547 ;; Defined at:
  4548 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  interruptHan    2   26[BANK0 ] PTR FTN()void 
  4551 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, status,0
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4563 ;;      Params:         0       2       0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0
  4566 ;;      Totals:         0       2       0       0       0       0       0
  4567 ;;Total ram usage:        2 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 12
  4570 ;; This function calls:
  4571 ;;		Nothing
  4572 ;; This function is called by:
  4573 ;;		_EUSART1_Initialize
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text24
  4578   0019F0                     __ptext24:
  4579                           	callstack 0
  4580   0019F0                     _EUSART1_SetOverrunErrorHandler:
  4581                           	callstack 16
  4582   0019F0                     
  4583                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4584   0019F0  C07A  F0D6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4585   0019F4  C07B  F0D7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4586   0019F8  0012               	return		;funcret
  4587   0019FA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4588                           	callstack 0
  4589                           
  4590 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4591 ;; Defined at:
  4592 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  interruptHan    2   26[BANK0 ] PTR FTN()void 
  4595 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4607 ;;      Params:         0       2       0       0       0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0
  4610 ;;      Totals:         0       2       0       0       0       0       0
  4611 ;;Total ram usage:        2 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 12
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_EUSART1_Initialize
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text25
  4622   0019FA                     __ptext25:
  4623                           	callstack 0
  4624   0019FA                     _EUSART1_SetFramingErrorHandler:
  4625                           	callstack 16
  4626   0019FA                     
  4627                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4628   0019FA  C07A  F0D8         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4629   0019FE  C07B  F0D9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4630   001A02  0012               	return		;funcret
  4631   001A04                     __end_of_EUSART1_SetFramingErrorHandler:
  4632                           	callstack 0
  4633                           
  4634 ;; *************** function _EUSART1_SetErrorHandler *****************
  4635 ;; Defined at:
  4636 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  interruptHan    2   26[BANK0 ] PTR FTN()void 
  4639 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4651 ;;      Params:         0       2       0       0       0       0       0
  4652 ;;      Locals:         0       0       0       0       0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0
  4654 ;;      Totals:         0       2       0       0       0       0       0
  4655 ;;Total ram usage:        2 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 12
  4658 ;; This function calls:
  4659 ;;		Nothing
  4660 ;; This function is called by:
  4661 ;;		_EUSART1_Initialize
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           	psect	text26
  4666   001A04                     __ptext26:
  4667                           	callstack 0
  4668   001A04                     _EUSART1_SetErrorHandler:
  4669                           	callstack 16
  4670   001A04                     
  4671                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4672   001A04  C07A  F0D4         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4673   001A08  C07B  F0D5         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4674   001A0C  0012               	return		;funcret
  4675   001A0E                     __end_of_EUSART1_SetErrorHandler:
  4676                           	callstack 0
  4677                           
  4678 ;; *************** function _EUSART1_is_rx_ready *****************
  4679 ;; Defined at:
  4680 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      _Bool 
  4687 ;; Registers used:
  4688 ;;		wreg
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4694 ;;      Params:         0       0       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 12
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text27
  4709   0019C4                     __ptext27:
  4710                           	callstack 0
  4711   0019C4                     _EUSART1_is_rx_ready:
  4712                           	callstack 18
  4713   0019C4                     
  4714                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4715   0019C4  BA9E               	btfsc	158,5,c	;volatile
  4716   0019C6  EFE7  F00C         	goto	u2951
  4717   0019CA  EFEA  F00C         	goto	u2950
  4718   0019CE                     u2951:
  4719   0019CE  0E01               	movlw	1
  4720   0019D0  EFEB  F00C         	goto	u2956
  4721   0019D4                     u2950:
  4722   0019D4  0E00               	movlw	0
  4723   0019D6                     u2956:
  4724   0019D6  0012               	return		;funcret
  4725   0019D8                     __end_of_EUSART1_is_rx_ready:
  4726                           	callstack 0
  4727                           
  4728 ;; *************** function _EUSART1_Read *****************
  4729 ;; Defined at:
  4730 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;		None
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;		None
  4735 ;; Return value:  Size  Location     Type
  4736 ;;                  1    wreg      unsigned char 
  4737 ;; Registers used:
  4738 ;;		wreg, status,2
  4739 ;; Tracked objects:
  4740 ;;		On entry : 0/0
  4741 ;;		On exit  : 0/0
  4742 ;;		Unchanged: 0/0
  4743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4744 ;;      Params:         0       0       0       0       0       0       0
  4745 ;;      Locals:         0       0       0       0       0       0       0
  4746 ;;      Temps:          0       0       0       0       0       0       0
  4747 ;;      Totals:         0       0       0       0       0       0       0
  4748 ;;Total ram usage:        0 bytes
  4749 ;; Hardware stack levels used: 1
  4750 ;; Hardware stack levels required when called: 12
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;;		_getch
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text28
  4760   00187A                     __ptext28:
  4761                           	callstack 0
  4762   00187A                     _EUSART1_Read:
  4763                           	callstack 18
  4764   00187A                     l147:
  4765                           
  4766                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4767   00187A  AA9E               	btfss	158,5,c	;volatile
  4768   00187C  EF42  F00C         	goto	u2961
  4769   001880  EF44  F00C         	goto	u2960
  4770   001884                     u2961:
  4771   001884  EF3D  F00C         	goto	l147
  4772   001888                     u2960:
  4773   001888                     
  4774                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4775   001888  0E00               	movlw	0
  4776   00188A  0100               	movlb	0	; () banked
  4777   00188C  6FDB               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4778   00188E                     
  4779                           ; BSR set to: 0
  4780                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4781   00188E  A2AB               	btfss	171,1,c	;volatile
  4782   001890  EF4C  F00C         	goto	u2971
  4783   001894  EF4E  F00C         	goto	u2970
  4784   001898                     u2971:
  4785   001898  EF50  F00C         	goto	l3705
  4786   00189C                     u2970:
  4787   00189C                     
  4788                           ; BSR set to: 0
  4789                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4790   00189C  98AB               	bcf	171,4,c	;volatile
  4791                           
  4792                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4793   00189E  88AB               	bsf	171,4,c	;volatile
  4794   0018A0                     l3705:
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4798   0018A0  50AE               	movf	174,w,c	;volatile
  4799   0018A2                     
  4800                           ; BSR set to: 0
  4801   0018A2  0012               	return		;funcret
  4802   0018A4                     __end_of_EUSART1_Read:
  4803                           	callstack 0
  4804                           
  4805 ;; *************** function _INTERRUPT_InterruptManager *****************
  4806 ;; Defined at:
  4807 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;		None
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;		None
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4821 ;;      Params:         0       0       0       0       0       0       0
  4822 ;;      Locals:         0       0       0       0       0       0       0
  4823 ;;      Temps:          0      12       0       0       0       0       0
  4824 ;;      Totals:         0      12       0       0       0       0       0
  4825 ;;Total ram usage:       12 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 11
  4828 ;; This function calls:
  4829 ;;		_TMR1_ISR
  4830 ;; This function is called by:
  4831 ;;		Interrupt level 2
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	intcode
  4836   000008                     __pintcode:
  4837                           	callstack 0
  4838   000008                     _INTERRUPT_InterruptManager:
  4839                           	callstack 10
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;incstack = 0
  4843   000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4844   00000A  CFFA F06E          	movff	pclath,??_INTERRUPT_InterruptManager
  4845   00000E  CFFB F06F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4846   000012  CFE1 F070          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  4847   000016  CFE2 F071          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  4848   00001A  CFD9 F072          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  4849   00001E  CFDA F073          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  4850   000022  CFF3 F074          	movff	prodl,??_INTERRUPT_InterruptManager+6
  4851   000026  CFF4 F075          	movff	prodh,??_INTERRUPT_InterruptManager+7
  4852   00002A  CFF6 F076          	movff	tblptrl,??_INTERRUPT_InterruptManager+8
  4853   00002E  CFF7 F077          	movff	tblptrh,??_INTERRUPT_InterruptManager+9
  4854   000032  CFF8 F078          	movff	tblptru,??_INTERRUPT_InterruptManager+10
  4855   000036  CFF5 F079          	movff	tablat,??_INTERRUPT_InterruptManager+11
  4856   00003A                     
  4857                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4858   00003A  ACF2               	btfss	242,6,c	;volatile
  4859   00003C  EF22  F000         	goto	i2u308_41
  4860   000040  EF24  F000         	goto	i2u308_40
  4861   000044                     i2u308_41:
  4862   000044  EF34  F000         	goto	i2l203
  4863   000048                     i2u308_40:
  4864   000048                     
  4865                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  4866   000048  A09D               	btfss	157,0,c	;volatile
  4867   00004A  EF29  F000         	goto	i2u309_41
  4868   00004E  EF2B  F000         	goto	i2u309_40
  4869   000052                     i2u309_41:
  4870   000052  EF34  F000         	goto	i2l203
  4871   000056                     i2u309_40:
  4872   000056  A09E               	btfss	158,0,c	;volatile
  4873   000058  EF30  F000         	goto	i2u310_41
  4874   00005C  EF32  F000         	goto	i2u310_40
  4875   000060                     i2u310_41:
  4876   000060  EF34  F000         	goto	i2l203
  4877   000064                     i2u310_40:
  4878   000064                     
  4879                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  4880   000064  EC93  F00B         	call	_TMR1_ISR	;wreg free
  4881   000068                     i2l203:
  4882   000068  C079  FFF5         	movff	??_INTERRUPT_InterruptManager+11,tablat
  4883   00006C  C078  FFF8         	movff	??_INTERRUPT_InterruptManager+10,tblptru
  4884   000070  C077  FFF7         	movff	??_INTERRUPT_InterruptManager+9,tblptrh
  4885   000074  C076  FFF6         	movff	??_INTERRUPT_InterruptManager+8,tblptrl
  4886   000078  C075  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
  4887   00007C  C074  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
  4888   000080  C073  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  4889   000084  C072  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  4890   000088  C071  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  4891   00008C  C070  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  4892   000090  C06F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4893   000094  C06E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4894   000098  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4895   00009A  0011               	retfie		f
  4896   00009C                     __end_of_INTERRUPT_InterruptManager:
  4897                           	callstack 0
  4898                           
  4899 ;; *************** function _TMR1_ISR *****************
  4900 ;; Defined at:
  4901 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4915 ;;      Params:         0       0       0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 10
  4922 ;; This function calls:
  4923 ;;		Absolute function
  4924 ;;		_TMR1_DefaultInterruptHandler
  4925 ;;		_myTMR1ISR
  4926 ;;		i2_TMR1_WriteTimer
  4927 ;; This function is called by:
  4928 ;;		_INTERRUPT_InterruptManager
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932                           	psect	text30
  4933   001726                     __ptext30:
  4934                           	callstack 0
  4935   001726                     _TMR1_ISR:
  4936                           	callstack 10
  4937   001726                     
  4938                           ;mcc_generated_files/tmr1.c: 162:     PIR1bits.TMR1IF = 0;
  4939   001726  909E               	bcf	158,0,c	;volatile
  4940   001728                     
  4941                           ;mcc_generated_files/tmr1.c: 163:     TMR1_WriteTimer(timer1ReloadVal);
  4942   001728  C0D2  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
  4943   00172C  C0D3  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
  4944   001730  EC7A  F00C         	call	i2_TMR1_WriteTimer	;wreg free
  4945   001734                     
  4946                           ;mcc_generated_files/tmr1.c: 165:     if(TMR1_InterruptHandler)
  4947   001734  0100               	movlb	0	; () banked
  4948   001736  51D0               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4949   001738  11D1               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4950   00173A  B4D8               	btfsc	status,2,c
  4951   00173C  EFA2  F00B         	goto	i2u298_41
  4952   001740  EFA4  F00B         	goto	i2u298_40
  4953   001744                     i2u298_41:
  4954   001744  EFB1  F00B         	goto	i2l289
  4955   001748                     i2u298_40:
  4956   001748                     
  4957                           ; BSR set to: 0
  4958                           ;mcc_generated_files/tmr1.c: 166:     {;mcc_generated_files/tmr1.c: 167:         TMR1_In
      +                          terruptHandler();
  4959   001748  D802               	call	i2u299_48
  4960   00174A  EFB1  F00B         	goto	i2u299_49
  4961   00174E                     i2u299_48:
  4962   00174E  0005               	push	
  4963   001750  6EFA               	movwf	pclath,c
  4964   001752  51D0               	movf	_TMR1_InterruptHandler& (0+255),w,b
  4965   001754  6EFD               	movwf	tosl,c
  4966   001756  51D1               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  4967   001758  6EFE               	movwf	tosh,c
  4968   00175A  50F8               	movf	tblptru,w,c
  4969   00175C  6EFF               	movwf	tosu,c
  4970   00175E  50FA               	movf	pclath,w,c
  4971   001760  0012               	return		;indir
  4972   001762                     i2u299_49:
  4973   001762                     i2l289:
  4974   001762  0012               	return		;funcret
  4975   001764                     __end_of_TMR1_ISR:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  4979 ;; Defined at:
  4980 ;;		line 176 in file "mcc_generated_files/tmr1.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		None
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4994 ;;      Params:         0       0       0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_TMR1_Initialize
  5004 ;;		_TMR1_ISR
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text31
  5009   001A22                     __ptext31:
  5010                           	callstack 0
  5011   001A22                     _TMR1_DefaultInterruptHandler:
  5012                           	callstack 19
  5013   001A22  0012               	return		;funcret
  5014   001A24                     __end_of_TMR1_DefaultInterruptHandler:
  5015                           	callstack 0
  5016                           
  5017 ;; *************** function _myTMR1ISR *****************
  5018 ;; Defined at:
  5019 ;;		line 172 in file "main.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  halfPeriod      6    8[BANK0 ] unsigned short [3]
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5033 ;;      Params:         0       0       0       0       0       0       0
  5034 ;;      Locals:         0       6       0       0       0       0       0
  5035 ;;      Temps:          0       2       0       0       0       0       0
  5036 ;;      Totals:         0       8       0       0       0       0       0
  5037 ;;Total ram usage:        8 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 9
  5040 ;; This function calls:
  5041 ;;		i2_TMR1_WriteTimer
  5042 ;;		i2_printf
  5043 ;; This function is called by:
  5044 ;;		_main
  5045 ;;		_TMR1_ISR
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text32
  5050   0011D8                     __ptext32:
  5051                           	callstack 0
  5052   0011D8                     _myTMR1ISR:
  5053                           	callstack 10
  5054   0011D8  EE20  F0E0         	lfsr	2,myTMR1ISR@F6122
  5055   0011DC  EE10  F068         	lfsr	1,myTMR1ISR@halfPeriod
  5056   0011E0  0E05               	movlw	5
  5057   0011E2                     i2u286_41:
  5058   0011E2  CFDB FFE3          	movff	plusw2,plusw1
  5059   0011E6  06E8               	decf	wreg,f,c
  5060   0011E8  E2FC               	bc	i2u286_41
  5061   0011EA  8C89               	bsf	137,6,c	;volatile
  5062   0011EC  0100               	movlb	0	; () banked
  5063   0011EE  05DE               	decf	_incNote& (0+255),w,b
  5064   0011F0  A4D8               	btfss	status,2,c
  5065   0011F2  EFFD  F008         	goto	i2u287_41
  5066   0011F6  EFFF  F008         	goto	i2u287_40
  5067   0011FA                     i2u287_41:
  5068   0011FA  EF0C  F009         	goto	i2l3611
  5069   0011FE                     i2u287_40:
  5070   0011FE                     
  5071                           ; BSR set to: 0
  5072   0011FE  2BDC               	incf	myTMR1ISR@noteIndex& (0+255),f,b
  5073   001200                     
  5074                           ; BSR set to: 0
  5075   001200  0E02               	movlw	2
  5076   001202  65DC               	cpfsgt	myTMR1ISR@noteIndex& (0+255),b
  5077   001204  EF06  F009         	goto	i2u288_41
  5078   001208  EF08  F009         	goto	i2u288_40
  5079   00120C                     i2u288_41:
  5080   00120C  EF0A  F009         	goto	i2l80
  5081   001210                     i2u288_40:
  5082   001210                     
  5083                           ; BSR set to: 0
  5084   001210  0E00               	movlw	0
  5085   001212  6FDC               	movwf	myTMR1ISR@noteIndex& (0+255),b
  5086   001214                     i2l80:
  5087                           
  5088                           ; BSR set to: 0
  5089   001214  0E00               	movlw	0
  5090   001216  6FDE               	movwf	_incNote& (0+255),b
  5091   001218                     i2l3611:
  5092                           
  5093                           ; BSR set to: 0
  5094   001218  05DF               	decf	_playNote& (0+255),w,b
  5095   00121A  A4D8               	btfss	status,2,c
  5096   00121C  EF12  F009         	goto	i2u289_41
  5097   001220  EF14  F009         	goto	i2u289_40
  5098   001224                     i2u289_41:
  5099   001224  EF3D  F009         	goto	i2l3617
  5100   001228                     i2u289_40:
  5101   001228                     
  5102                           ; BSR set to: 0
  5103   001228  51DC               	movf	myTMR1ISR@noteIndex& (0+255),w,b
  5104   00122A  0D02               	mullw	2
  5105   00122C  0E68               	movlw	low myTMR1ISR@halfPeriod
  5106   00122E  24F3               	addwf	243,w,c
  5107   001230  6ED9               	movwf	fsr2l,c
  5108   001232  0E00               	movlw	high myTMR1ISR@halfPeriod
  5109   001234  20F4               	addwfc	prodh,w,c
  5110   001236  6EDA               	movwf	fsr2h,c
  5111   001238  CFDE F066          	movff	postinc2,??_myTMR1ISR
  5112   00123C  CFDD F067          	movff	postdec2,??_myTMR1ISR+1
  5113   001240  5166               	movf	??_myTMR1ISR& (0+255),w,b
  5114   001242  0800               	sublw	0
  5115   001244  6E01               	movwf	i2TMR1_WriteTimer@timerVal^0,c
  5116   001246  5167               	movf	(??_myTMR1ISR+1)& (0+255),w,b
  5117   001248  A0D8               	btfss	status,0,c
  5118   00124A  2AE8               	incf	wreg,f,c
  5119   00124C  0800               	sublw	0
  5120   00124E  6E02               	movwf	(i2TMR1_WriteTimer@timerVal+1)^0,c
  5121   001250  EC7A  F00C         	call	i2_TMR1_WriteTimer	;wreg free
  5122   001254  BA8A               	btfsc	138,5,c	;volatile
  5123   001256  EF2F  F009         	goto	i2u290_41
  5124   00125A  EF32  F009         	goto	i2u290_40
  5125   00125E                     i2u290_41:
  5126   00125E  0E01               	movlw	1
  5127   001260  EF33  F009         	goto	i2u290_46
  5128   001264                     i2u290_40:
  5129   001264  0E00               	movlw	0
  5130   001266                     i2u290_46:
  5131   001266  0AFF               	xorlw	255
  5132   001268  0100               	movlb	0	; () banked
  5133   00126A  6F66               	movwf	??_myTMR1ISR& (0+255),b
  5134   00126C  3B66               	swapf	??_myTMR1ISR& (0+255),f,b
  5135   00126E  4766               	rlncf	??_myTMR1ISR& (0+255),f,b
  5136   001270  508A               	movf	138,w,c	;volatile
  5137   001272  1966               	xorwf	??_myTMR1ISR& (0+255),w,b
  5138   001274  0BDF               	andlw	-33
  5139   001276  1966               	xorwf	??_myTMR1ISR& (0+255),w,b
  5140   001278  6E8A               	movwf	138,c	;volatile
  5141   00127A                     i2l3617:
  5142                           
  5143                           ; BSR set to: 0
  5144   00127A  05DD               	decf	_doSomethingBad& (0+255),w,b
  5145   00127C  A4D8               	btfss	status,2,c
  5146   00127E  EF43  F009         	goto	i2u291_41
  5147   001282  EF45  F009         	goto	i2u291_40
  5148   001286                     i2u291_41:
  5149   001286  EF4B  F009         	goto	i2l3621
  5150   00128A                     i2u291_40:
  5151   00128A                     
  5152                           ; BSR set to: 0
  5153   00128A  0EE4               	movlw	low (STR_17+17)
  5154   00128C  6F62               	movwf	i2printf@fmt& (0+255),b
  5155   00128E  0E7E               	movlw	high (STR_17+17)
  5156   001290  6F63               	movwf	(i2printf@fmt+1)& (0+255),b
  5157   001292  EC66  F00C         	call	i2_printf	;wreg free
  5158   001296                     i2l3621:
  5159   001296  9C89               	bcf	137,6,c	;volatile
  5160   001298  0012               	return		;funcret
  5161   00129A                     __end_of_myTMR1ISR:
  5162                           	callstack 0
  5163                           
  5164 ;; *************** function i2_printf *****************
  5165 ;; Defined at:
  5166 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5169 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  5170 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  5171 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  5172 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  5173 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  5174 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  5175 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  ap              2    4[BANK0 ] PTR void [1]
  5178 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5179 ;;  ret             2    0        int 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  2    2[BANK0 ] int 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5189 ;;      Params:         0       2       0       0       0       0       0
  5190 ;;      Locals:         0       2       0       0       0       0       0
  5191 ;;      Temps:          0       0       0       0       0       0       0
  5192 ;;      Totals:         0       4       0       0       0       0       0
  5193 ;;Total ram usage:        4 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 8
  5196 ;; This function calls:
  5197 ;;		i2_vfprintf
  5198 ;; This function is called by:
  5199 ;;		_myTMR1ISR
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text33
  5204   0018CC                     __ptext33:
  5205                           	callstack 0
  5206   0018CC                     i2_printf:
  5207                           	callstack 10
  5208   0018CC  0E64               	movlw	low (?i2_printf+2)
  5209   0018CE  0100               	movlb	0	; () banked
  5210   0018D0  6F64               	movwf	i2printf@ap& (0+255),b
  5211   0018D2  0E00               	movlw	high (?i2_printf+2)
  5212   0018D4  6F65               	movwf	(i2printf@ap+1)& (0+255),b
  5213   0018D6                     
  5214                           ; BSR set to: 0
  5215   0018D6  0E00               	movlw	0
  5216   0018D8  6E58               	movwf	i2vfprintf@fp^0,c
  5217   0018DA  0E00               	movlw	0
  5218   0018DC  6E59               	movwf	(i2vfprintf@fp+1)^0,c
  5219   0018DE  C062  F05A         	movff	i2printf@fmt,i2vfprintf@fmt
  5220   0018E2  C063  F05B         	movff	i2printf@fmt+1,i2vfprintf@fmt+1
  5221   0018E6  0E64               	movlw	low i2printf@ap
  5222   0018E8  6E5C               	movwf	i2vfprintf@ap^0,c
  5223   0018EA  0E00               	movlw	high i2printf@ap
  5224   0018EC  6E5D               	movwf	(i2vfprintf@ap+1)^0,c
  5225   0018EE  ECBC  F00A         	call	i2_vfprintf	;wreg free
  5226   0018F2  0012               	return		;funcret
  5227   0018F4                     __end_ofi2_printf:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function i2_vfprintf *****************
  5231 ;; Defined at:
  5232 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  5235 ;;		 -> NULL(0), 
  5236 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  5237 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  5238 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  5239 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  5240 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  5241 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  5242 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  5243 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  5244 ;;  ap              2   91[COMRAM] PTR PTR void 
  5245 ;;		 -> i2printf@ap(2), printf@ap(2), 
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  5248 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  5249 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  5250 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  5251 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  5252 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  5253 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  5254 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  2   87[COMRAM] int 
  5257 ;; Registers used:
  5258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5264 ;;      Params:         6       0       0       0       0       0       0
  5265 ;;      Locals:         0       2       0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0
  5267 ;;      Totals:         6       2       0       0       0       0       0
  5268 ;;Total ram usage:        8 bytes
  5269 ;; Hardware stack levels used: 1
  5270 ;; Hardware stack levels required when called: 7
  5271 ;; This function calls:
  5272 ;;		i2_vfpfcnvrt
  5273 ;; This function is called by:
  5274 ;;		i2_printf
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text34
  5279   001578                     __ptext34:
  5280                           	callstack 0
  5281   001578                     i2_vfprintf:
  5282                           	callstack 10
  5283   001578                     
  5284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  5285   001578  C05A  F060         	movff	i2vfprintf@fmt,i2vfprintf@cfmt
  5286   00157C  C05B  F061         	movff	i2vfprintf@fmt+1,i2vfprintf@cfmt+1
  5287                           
  5288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  5289   001580  EFD0  F00A         	goto	i2l3497
  5290   001584                     i2l3495:
  5291                           
  5292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5293   001584  C058  F041         	movff	i2vfprintf@fp,i2vfpfcnvrt@fp
  5294   001588  C059  F042         	movff	i2vfprintf@fp+1,i2vfpfcnvrt@fp+1
  5295   00158C  0E60               	movlw	low i2vfprintf@cfmt
  5296   00158E  6E43               	movwf	i2vfpfcnvrt@fmt^0,c
  5297   001590  0E00               	movlw	high i2vfprintf@cfmt
  5298   001592  6E44               	movwf	(i2vfpfcnvrt@fmt+1)^0,c
  5299   001594  C05C  F045         	movff	i2vfprintf@ap,i2vfpfcnvrt@ap
  5300   001598  C05D  F046         	movff	i2vfprintf@ap+1,i2vfpfcnvrt@ap+1
  5301   00159C  ECEA  F001         	call	i2_vfpfcnvrt	;wreg free
  5302   0015A0                     i2l3497:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  5305   0015A0  C060  FFF6         	movff	i2vfprintf@cfmt,tblptrl
  5306   0015A4  C061  FFF7         	movff	i2vfprintf@cfmt+1,tblptrh
  5307   0015A8                     	if	0	;tblptru may be non-zero
  5308   0015A8                     	endif
  5309   0015A8                     	if	0	;tblptru may be non-zero
  5310   0015A8                     	endif
  5311   0015A8  0008               	tblrd		*
  5312   0015AA  50F5               	movf	tablat,w,c
  5313   0015AC  0900               	iorlw	0
  5314   0015AE  A4D8               	btfss	status,2,c
  5315   0015B0  EFDC  F00A         	goto	i2u278_41
  5316   0015B4  EFDE  F00A         	goto	i2u278_40
  5317   0015B8                     i2u278_41:
  5318   0015B8  EFC2  F00A         	goto	i2l3495
  5319   0015BC                     i2u278_40:
  5320   0015BC                     
  5321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  5322   0015BC  0E00               	movlw	0
  5323   0015BE  6E59               	movwf	(?i2_vfprintf+1)^0,c
  5324   0015C0  0E00               	movlw	0
  5325   0015C2  6E58               	movwf	?i2_vfprintf^0,c
  5326   0015C4  0012               	return		;funcret
  5327   0015C6                     __end_ofi2_vfprintf:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function i2_vfpfcnvrt *****************
  5331 ;; Defined at:
  5332 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  5335 ;;		 -> NULL(0), 
  5336 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  5337 ;;		 -> i2vfprintf@cfmt(2), vfprintf@cfmt(2), 
  5338 ;;  ap              2   68[COMRAM] PTR PTR void 
  5339 ;;		 -> i2printf@ap(2), printf@ap(2), 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  convarg         8   74[COMRAM] struct .
  5342 ;;  cp              2   85[COMRAM] PTR unsigned char 
  5343 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  5344 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  5345 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  5346 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  5347 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  5348 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  5349 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  5350 ;;  done            2   83[COMRAM] int 
  5351 ;;  i               2    0        int 
  5352 ;;  c               1   82[COMRAM] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5362 ;;      Params:         6       0       0       0       0       0       0
  5363 ;;      Locals:        13       0       0       0       0       0       0
  5364 ;;      Temps:          4       0       0       0       0       0       0
  5365 ;;      Totals:        23       0       0       0       0       0       0
  5366 ;;Total ram usage:       23 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 6
  5369 ;; This function calls:
  5370 ;;		i2_atoi
  5371 ;;		i2_ctoa
  5372 ;;		i2_fputc
  5373 ;;		i2_isdigit
  5374 ;;		i2_xtoa
  5375 ;; This function is called by:
  5376 ;;		i2_vfprintf
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text35
  5381   0003D4                     __ptext35:
  5382                           	callstack 0
  5383   0003D4                     i2_vfpfcnvrt:
  5384                           	callstack 10
  5385   0003D4                     
  5386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  5387   0003D4  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5388   0003D8  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5389   0003DC  CFDE FFF6          	movff	postinc2,tblptrl
  5390   0003E0  CFDD FFF7          	movff	postdec2,tblptrh
  5391   0003E4                     	if	0	;tblptru may be non-zero
  5392   0003E4                     	endif
  5393   0003E4                     	if	0	;tblptru may be non-zero
  5394   0003E4                     	endif
  5395   0003E4  0008               	tblrd		*
  5396   0003E6  50F5               	movf	tablat,w,c
  5397   0003E8  0A25               	xorlw	37
  5398   0003EA  A4D8               	btfss	status,2,c
  5399   0003EC  EFFA  F001         	goto	i2u253_41
  5400   0003F0  EFFC  F001         	goto	i2u253_40
  5401   0003F4                     i2u253_41:
  5402   0003F4  EF65  F003         	goto	i2l3377
  5403   0003F8                     i2u253_40:
  5404   0003F8                     
  5405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  5406   0003F8  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5407   0003FC  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5408   000400  2ADE               	incf	postinc2,f,c
  5409   000402  0E00               	movlw	0
  5410   000404  22DD               	addwfc	postdec2,f,c
  5411   000406                     
  5412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  5413   000406  0E00               	movlw	0
  5414   000408  0100               	movlb	0	; () banked
  5415   00040A  6FCD               	movwf	(_width+1)& (0+255),b
  5416   00040C  0E00               	movlw	0
  5417   00040E  6FCC               	movwf	_width& (0+255),b
  5418   000410  C0CC  F0DA         	movff	_width,_flags
  5419   000414                     
  5420                           ; BSR set to: 0
  5421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  5422   000414  69CE               	setf	_prec& (0+255),b
  5423   000416  69CF               	setf	(_prec+1)& (0+255),b
  5424   000418                     
  5425                           ; BSR set to: 0
  5426                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  5427   000418  0E00               	movlw	0
  5428   00041A  6E55               	movwf	(i2vfpfcnvrt@done+1)^0,c
  5429   00041C  0E00               	movlw	0
  5430   00041E  6E54               	movwf	i2vfpfcnvrt@done^0,c
  5431                           
  5432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  5433   000420  EF3D  F002         	goto	i2l3333
  5434   000424                     i2l3323:
  5435                           
  5436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  5437   000424  0100               	movlb	0	; () banked
  5438   000426  83DA               	bsf	_flags& (0+255),1,b
  5439   000428                     
  5440                           ; BSR set to: 0
  5441                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  5442   000428  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5443   00042C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5444   000430  2ADE               	incf	postinc2,f,c
  5445   000432  0E00               	movlw	0
  5446   000434  22DD               	addwfc	postdec2,f,c
  5447                           
  5448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  5449   000436  EF3D  F002         	goto	i2l3333
  5450   00043A                     i2l3327:
  5451                           
  5452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  5453   00043A  0E00               	movlw	0
  5454   00043C  6E55               	movwf	(i2vfpfcnvrt@done+1)^0,c
  5455   00043E  0E01               	movlw	1
  5456   000440  6E54               	movwf	i2vfpfcnvrt@done^0,c
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  5459   000442  EF3D  F002         	goto	i2l3333
  5460   000446                     i2l3331:
  5461   000446  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5462   00044A  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5463   00044E  CFDE FFF6          	movff	postinc2,tblptrl
  5464   000452  CFDD FFF7          	movff	postdec2,tblptrh
  5465   000456                     	if	0	;tblptru may be non-zero
  5466   000456                     	endif
  5467   000456                     	if	0	;tblptru may be non-zero
  5468   000456                     	endif
  5469   000456  0008               	tblrd		*
  5470   000458  50F5               	movf	tablat,w,c
  5471   00045A  6E47               	movwf	??i2_vfpfcnvrt^0,c
  5472   00045C  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
  5473                           
  5474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5475                           ; Switch size 1, requested type "simple"
  5476                           ; Number of cases is 1, Range of values is 0 to 0
  5477                           ; switch strategies available:
  5478                           ; Name         Instructions Cycles
  5479                           ; simple_byte            4     3 (average)
  5480                           ;	Chosen strategy is simple_byte
  5481   00045E  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  5482   000460  0A00               	xorlw	0	; case 0
  5483   000462  B4D8               	btfsc	status,2,c
  5484   000464  EF36  F002         	goto	i2l4019
  5485   000468  EF1D  F002         	goto	i2l3327
  5486   00046C                     i2l4019:
  5487                           
  5488                           ; Switch size 1, requested type "simple"
  5489                           ; Number of cases is 1, Range of values is 48 to 48
  5490                           ; switch strategies available:
  5491                           ; Name         Instructions Cycles
  5492                           ; simple_byte            4     3 (average)
  5493                           ;	Chosen strategy is simple_byte
  5494   00046C  5047               	movf	??i2_vfpfcnvrt^0,w,c
  5495   00046E  0A30               	xorlw	48	; case 48
  5496   000470  B4D8               	btfsc	status,2,c
  5497   000472  EF12  F002         	goto	i2l3323
  5498   000476  EF1D  F002         	goto	i2l3327
  5499   00047A                     i2l3333:
  5500                           
  5501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  5502   00047A  5054               	movf	i2vfpfcnvrt@done^0,w,c
  5503   00047C  1055               	iorwf	(i2vfpfcnvrt@done+1)^0,w,c
  5504   00047E  B4D8               	btfsc	status,2,c
  5505   000480  EF44  F002         	goto	i2u254_41
  5506   000484  EF46  F002         	goto	i2u254_40
  5507   000488                     i2u254_41:
  5508   000488  EF23  F002         	goto	i2l3331
  5509   00048C                     i2u254_40:
  5510   00048C                     
  5511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  5512   00048C  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5513   000490  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5514   000494  CFDE FFF6          	movff	postinc2,tblptrl
  5515   000498  CFDD FFF7          	movff	postdec2,tblptrh
  5516   00049C                     	if	0	;tblptru may be non-zero
  5517   00049C                     	endif
  5518   00049C                     	if	0	;tblptru may be non-zero
  5519   00049C                     	endif
  5520   00049C  0008               	tblrd		*
  5521   00049E  50F5               	movf	tablat,w,c
  5522   0004A0  0A2A               	xorlw	42
  5523   0004A2  A4D8               	btfss	status,2,c
  5524   0004A4  EF56  F002         	goto	i2u255_41
  5525   0004A8  EF58  F002         	goto	i2u255_40
  5526   0004AC                     i2u255_41:
  5527   0004AC  EF82  F002         	goto	i2l3343
  5528   0004B0                     i2u255_40:
  5529   0004B0                     
  5530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  5531   0004B0  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5532   0004B4  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5533   0004B8  2ADE               	incf	postinc2,f,c
  5534   0004BA  0E00               	movlw	0
  5535   0004BC  22DD               	addwfc	postdec2,f,c
  5536                           
  5537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5538   0004BE  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5539   0004C2  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5540   0004C6  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  5541   0004CA  0E02               	movlw	2
  5542   0004CC  26DE               	addwf	postinc2,f,c
  5543   0004CE  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  5544   0004D2  0E00               	movlw	0
  5545   0004D4  22DD               	addwfc	postdec2,f,c
  5546   0004D6  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5547   0004DA  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5548   0004DE  CFDE F0CC          	movff	postinc2,_width
  5549   0004E2  CFDD F0CD          	movff	postdec2,_width+1
  5550   0004E6                     
  5551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  5552   0004E6  0100               	movlb	0	; () banked
  5553   0004E8  BFCD               	btfsc	(_width+1)& (0+255),7,b
  5554   0004EA  EF7B  F002         	goto	i2u256_40
  5555   0004EE  EF79  F002         	goto	i2u256_41
  5556   0004F2                     i2u256_41:
  5557   0004F2  EFB5  F002         	goto	i2l3351
  5558   0004F6                     i2u256_40:
  5559   0004F6                     
  5560                           ; BSR set to: 0
  5561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  5562   0004F6  81DA               	bsf	_flags& (0+255),0,b
  5563                           
  5564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  5565   0004F8  6DCC               	negf	_width& (0+255),b
  5566   0004FA  1FCD               	comf	(_width+1)& (0+255),f,b
  5567   0004FC  B0D8               	btfsc	status,0,c
  5568   0004FE  2BCD               	incf	(_width+1)& (0+255),f,b
  5569   000500  EFB5  F002         	goto	i2l3351
  5570   000504                     i2l3343:
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  5573   000504  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5574   000508  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5575   00050C  CFDE F007          	movff	postinc2,i2atoi@s
  5576   000510  CFDD F008          	movff	postdec2,i2atoi@s+1
  5577   000514  EC7A  F007         	call	i2_atoi	;wreg free
  5578   000518  C007  F0CC         	movff	?i2_atoi,_width
  5579   00051C  C008  F0CD         	movff	?i2_atoi+1,_width+1
  5580                           
  5581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5582   000520  EF99  F002         	goto	i2l3349
  5583   000524                     i2l3345:
  5584                           
  5585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  5586   000524  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5587   000528  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5588   00052C  2ADE               	incf	postinc2,f,c
  5589   00052E  0E00               	movlw	0
  5590   000530  22DD               	addwfc	postdec2,f,c
  5591   000532                     i2l3349:
  5592   000532  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5593   000536  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5594   00053A  CFDE FFF6          	movff	postinc2,tblptrl
  5595   00053E  CFDD FFF7          	movff	postdec2,tblptrh
  5596   000542                     	if	0	;tblptru may be non-zero
  5597   000542                     	endif
  5598   000542                     	if	0	;tblptru may be non-zero
  5599   000542                     	endif
  5600   000542  0008               	tblrd		*
  5601   000544  CFF5 F047          	movff	tablat,??i2_vfpfcnvrt
  5602   000548  0ED0               	movlw	208
  5603   00054A  2447               	addwf	??i2_vfpfcnvrt^0,w,c
  5604   00054C  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
  5605   00054E  6A49               	clrf	(??i2_vfpfcnvrt+2)^0,c
  5606   000550  0EFF               	movlw	255
  5607   000552  2249               	addwfc	(??i2_vfpfcnvrt+2)^0,f,c
  5608   000554  5049               	movf	(??i2_vfpfcnvrt+2)^0,w,c
  5609   000556  E109               	bnz	i2u257_40
  5610   000558  0E0A               	movlw	10
  5611   00055A  5C48               	subwf	(??i2_vfpfcnvrt+1)^0,w,c
  5612   00055C  A0D8               	btfss	status,0,c
  5613   00055E  EFB3  F002         	goto	i2u257_41
  5614   000562  EFB5  F002         	goto	i2u257_40
  5615   000566                     i2u257_41:
  5616   000566  EF92  F002         	goto	i2l3345
  5617   00056A                     i2u257_40:
  5618   00056A                     i2l3351:
  5619                           
  5620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  5621   00056A  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5622   00056E  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5623   000572  CFDE FFF6          	movff	postinc2,tblptrl
  5624   000576  CFDD FFF7          	movff	postdec2,tblptrh
  5625   00057A                     	if	0	;tblptru may be non-zero
  5626   00057A                     	endif
  5627   00057A                     	if	0	;tblptru may be non-zero
  5628   00057A                     	endif
  5629   00057A  0008               	tblrd		*
  5630   00057C  50F5               	movf	tablat,w,c
  5631   00057E  0A63               	xorlw	99
  5632   000580  A4D8               	btfss	status,2,c
  5633   000582  EFC5  F002         	goto	i2u258_41
  5634   000586  EFC7  F002         	goto	i2u258_40
  5635   00058A                     i2u258_41:
  5636   00058A  EFEA  F002         	goto	i2l3359
  5637   00058E                     i2u258_40:
  5638   00058E                     
  5639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  5640   00058E  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5641   000592  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5642   000596  2ADE               	incf	postinc2,f,c
  5643   000598  0E00               	movlw	0
  5644   00059A  22DD               	addwfc	postdec2,f,c
  5645                           
  5646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5647   00059C  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5648   0005A0  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5649   0005A4  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  5650   0005A8  0E02               	movlw	2
  5651   0005AA  26DE               	addwf	postinc2,f,c
  5652   0005AC  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  5653   0005B0  0E00               	movlw	0
  5654   0005B2  22DD               	addwfc	postdec2,f,c
  5655   0005B4  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5656   0005B8  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5657   0005BC  50DF               	movf	indf2,w,c
  5658   0005BE  6E53               	movwf	i2vfpfcnvrt@c^0,c
  5659   0005C0                     
  5660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of i2_vfpfcnvrt is never used
  5661   0005C0  C041  F00C         	movff	i2vfpfcnvrt@fp,i2ctoa@fp
  5662   0005C4  C042  F00D         	movff	i2vfpfcnvrt@fp+1,i2ctoa@fp+1
  5663   0005C8  C053  F00E         	movff	i2vfpfcnvrt@c,i2ctoa@c
  5664   0005CC  EC86  F008         	call	i2_ctoa	;wreg free
  5665   0005D0  EF79  F003         	goto	i2l1088
  5666   0005D4                     i2l3359:
  5667                           
  5668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  5669   0005D4  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5670   0005D8  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5671   0005DC  CFDE F056          	movff	postinc2,i2vfpfcnvrt@cp
  5672   0005E0  CFDD F057          	movff	postdec2,i2vfpfcnvrt@cp+1
  5673   0005E4  C056  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  5674   0005E8  C057  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  5675   0005EC                     	if	0	;tblptru may be non-zero
  5676   0005EC                     	endif
  5677   0005EC                     	if	0	;tblptru may be non-zero
  5678   0005EC                     	endif
  5679   0005EC  0008               	tblrd		*
  5680   0005EE  50F5               	movf	tablat,w,c
  5681   0005F0  0A78               	xorlw	120
  5682   0005F2  A4D8               	btfss	status,2,c
  5683   0005F4  EFFE  F002         	goto	i2u259_41
  5684   0005F8  EF00  F003         	goto	i2u259_40
  5685   0005FC                     i2u259_41:
  5686   0005FC  EF5C  F003         	goto	i2l3373
  5687   000600                     i2u259_40:
  5688   000600                     
  5689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  5690   000600  C045  FFD9         	movff	i2vfpfcnvrt@ap,fsr2l
  5691   000604  C046  FFDA         	movff	i2vfpfcnvrt@ap+1,fsr2h
  5692   000608  CFDF F047          	movff	indf2,??i2_vfpfcnvrt
  5693   00060C  0E02               	movlw	2
  5694   00060E  26DE               	addwf	postinc2,f,c
  5695   000610  CFDF F048          	movff	indf2,??i2_vfpfcnvrt+1
  5696   000614  0E00               	movlw	0
  5697   000616  22DD               	addwfc	postdec2,f,c
  5698   000618  C047  FFD9         	movff	??i2_vfpfcnvrt,fsr2l
  5699   00061C  C048  FFDA         	movff	??i2_vfpfcnvrt+1,fsr2h
  5700   000620  CFDE F049          	movff	postinc2,??i2_vfpfcnvrt+2
  5701   000624  CFDD F04A          	movff	postdec2,??i2_vfpfcnvrt+3
  5702   000628  C049  F04B         	movff	??i2_vfpfcnvrt+2,i2vfpfcnvrt@convarg
  5703   00062C  C04A  F04C         	movff	??i2_vfpfcnvrt+3,i2vfpfcnvrt@convarg+1
  5704   000630  6A4D               	clrf	(i2vfpfcnvrt@convarg+2)^0,c
  5705   000632  6A4E               	clrf	(i2vfpfcnvrt@convarg+3)^0,c
  5706   000634  6A4F               	clrf	(i2vfpfcnvrt@convarg+4)^0,c
  5707   000636  6A50               	clrf	(i2vfpfcnvrt@convarg+5)^0,c
  5708   000638  6A51               	clrf	(i2vfpfcnvrt@convarg+6)^0,c
  5709   00063A  6A52               	clrf	(i2vfpfcnvrt@convarg+7)^0,c
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  5712   00063C  0E01               	movlw	1
  5713   00063E  2456               	addwf	i2vfpfcnvrt@cp^0,w,c
  5714   000640  6E47               	movwf	??i2_vfpfcnvrt^0,c
  5715   000642  0E00               	movlw	0
  5716   000644  2057               	addwfc	(i2vfpfcnvrt@cp+1)^0,w,c
  5717   000646  6E48               	movwf	(??i2_vfpfcnvrt+1)^0,c
  5718   000648  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5719   00064C  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5720   000650  C047  FFDE         	movff	??i2_vfpfcnvrt,postinc2
  5721   000654  C048  FFDD         	movff	??i2_vfpfcnvrt+1,postdec2
  5722                           
  5723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  5724   000658  EF46  F003         	goto	i2l3371
  5725   00065C                     i2l3365:
  5726                           
  5727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of i2_vfpfcnvrt is never used
  5728   00065C  C041  F01E         	movff	i2vfpfcnvrt@fp,i2xtoa@fp
  5729   000660  C042  F01F         	movff	i2vfpfcnvrt@fp+1,i2xtoa@fp+1
  5730   000664  C04B  F020         	movff	i2vfpfcnvrt@convarg,i2xtoa@d
  5731   000668  C04C  F021         	movff	i2vfpfcnvrt@convarg+1,i2xtoa@d+1
  5732   00066C  C04D  F022         	movff	i2vfpfcnvrt@convarg+2,i2xtoa@d+2
  5733   000670  C04E  F023         	movff	i2vfpfcnvrt@convarg+3,i2xtoa@d+3
  5734   000674  C04F  F024         	movff	i2vfpfcnvrt@convarg+4,i2xtoa@d+4
  5735   000678  C050  F025         	movff	i2vfpfcnvrt@convarg+5,i2xtoa@d+5
  5736   00067C  C051  F026         	movff	i2vfpfcnvrt@convarg+6,i2xtoa@d+6
  5737   000680  C052  F027         	movff	i2vfpfcnvrt@convarg+7,i2xtoa@d+7
  5738   000684  ECEB  F005         	call	i2_xtoa	;wreg free
  5739   000688  EF79  F003         	goto	i2l1088
  5740   00068C                     i2l3371:
  5741   00068C  C056  FFF6         	movff	i2vfpfcnvrt@cp,tblptrl
  5742   000690  C057  FFF7         	movff	i2vfpfcnvrt@cp+1,tblptrh
  5743   000694                     	if	0	;tblptru may be non-zero
  5744   000694                     	endif
  5745   000694                     	if	0	;tblptru may be non-zero
  5746   000694                     	endif
  5747   000694  0008               	tblrd		*
  5748   000696  50F5               	movf	tablat,w,c
  5749   000698  6E47               	movwf	??i2_vfpfcnvrt^0,c
  5750   00069A  6A48               	clrf	(??i2_vfpfcnvrt+1)^0,c
  5751                           
  5752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5753                           ; Switch size 1, requested type "simple"
  5754                           ; Number of cases is 1, Range of values is 0 to 0
  5755                           ; switch strategies available:
  5756                           ; Name         Instructions Cycles
  5757                           ; simple_byte            4     3 (average)
  5758                           ;	Chosen strategy is simple_byte
  5759   00069C  5048               	movf	(??i2_vfpfcnvrt+1)^0,w,c
  5760   00069E  0A00               	xorlw	0	; case 0
  5761   0006A0  B4D8               	btfsc	status,2,c
  5762   0006A2  EF55  F003         	goto	i2l4021
  5763   0006A6  EF5C  F003         	goto	i2l3373
  5764   0006AA                     i2l4021:
  5765                           
  5766                           ; Switch size 1, requested type "simple"
  5767                           ; Number of cases is 1, Range of values is 120 to 120
  5768                           ; switch strategies available:
  5769                           ; Name         Instructions Cycles
  5770                           ; simple_byte            4     3 (average)
  5771                           ;	Chosen strategy is simple_byte
  5772   0006AA  5047               	movf	??i2_vfpfcnvrt^0,w,c
  5773   0006AC  0A78               	xorlw	120	; case 120
  5774   0006AE  B4D8               	btfsc	status,2,c
  5775   0006B0  EF2E  F003         	goto	i2l3365
  5776   0006B4  EF5C  F003         	goto	i2l3373
  5777   0006B8                     i2l3373:
  5778                           
  5779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  5780   0006B8  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5781   0006BC  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5782   0006C0  2ADE               	incf	postinc2,f,c
  5783   0006C2  0E00               	movlw	0
  5784   0006C4  22DD               	addwfc	postdec2,f,c
  5785   0006C6  EF79  F003         	goto	i2l1088
  5786   0006CA                     i2l3377:
  5787                           
  5788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  5789   0006CA  C043  FFD9         	movff	i2vfpfcnvrt@fmt,fsr2l
  5790   0006CE  C044  FFDA         	movff	i2vfpfcnvrt@fmt+1,fsr2h
  5791   0006D2  CFDE FFF6          	movff	postinc2,tblptrl
  5792   0006D6  CFDD FFF7          	movff	postdec2,tblptrh
  5793   0006DA                     	if	0	;tblptru may be non-zero
  5794   0006DA                     	endif
  5795   0006DA                     	if	0	;tblptru may be non-zero
  5796   0006DA                     	endif
  5797   0006DA  0008               	tblrd		*
  5798   0006DC  50F5               	movf	tablat,w,c
  5799   0006DE  6E03               	movwf	i2fputc@c^0,c
  5800   0006E0  6A04               	clrf	(i2fputc@c+1)^0,c
  5801   0006E2  C041  F005         	movff	i2vfpfcnvrt@fp,i2fputc@fp
  5802   0006E6  C042  F006         	movff	i2vfpfcnvrt@fp+1,i2fputc@fp+1
  5803   0006EA  EC48  F00A         	call	i2_fputc	;wreg free
  5804   0006EE  EF5C  F003         	goto	i2l3373
  5805   0006F2                     i2l1088:
  5806   0006F2  0012               	return		;funcret
  5807   0006F4                     __end_ofi2_vfpfcnvrt:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function i2_xtoa *****************
  5811 ;; Defined at:
  5812 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5815 ;;		 -> NULL(0), 
  5816 ;;  d               8   31[COMRAM] unsigned long long 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;  n               8   53[COMRAM] unsigned long long 
  5819 ;;  i               2   61[COMRAM] int 
  5820 ;;  w               2   51[COMRAM] int 
  5821 ;;  p               2   49[COMRAM] int 
  5822 ;;  c               1   63[COMRAM] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      void 
  5825 ;; Registers used:
  5826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5832 ;;      Params:        10       0       0       0       0       0       0
  5833 ;;      Locals:        17       0       0       0       0       0       0
  5834 ;;      Temps:          8       0       0       0       0       0       0
  5835 ;;      Totals:        35       0       0       0       0       0       0
  5836 ;;Total ram usage:       35 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 5
  5839 ;; This function calls:
  5840 ;;		i2_pad
  5841 ;; This function is called by:
  5842 ;;		i2_vfpfcnvrt
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           	psect	text36
  5847   000BD6                     __ptext36:
  5848                           	callstack 0
  5849   000BD6                     i2_xtoa:
  5850                           	callstack 10
  5851   000BD6                     
  5852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  5853   000BD6  0100               	movlb	0	; () banked
  5854   000BD8  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  5855   000BDA  EFF1  F005         	goto	i2u232_41
  5856   000BDE  EFF3  F005         	goto	i2u232_40
  5857   000BE2                     i2u232_41:
  5858   000BE2  EFF4  F005         	goto	i2l3199
  5859   000BE6                     i2u232_40:
  5860   000BE6                     
  5861                           ; BSR set to: 0
  5862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  5863   000BE6  93DA               	bcf	_flags& (0+255),1,b
  5864   000BE8                     i2l3199:
  5865                           
  5866                           ; BSR set to: 0
  5867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  5868   000BE8  BFCF               	btfsc	(_prec+1)& (0+255),7,b
  5869   000BEA  EF01  F006         	goto	i2u233_40
  5870   000BEE  51CF               	movf	(_prec+1)& (0+255),w,b
  5871   000BF0  E106               	bnz	i2u233_41
  5872   000BF2  05CE               	decf	_prec& (0+255),w,b
  5873   000BF4  B0D8               	btfsc	status,0,c
  5874   000BF6  EFFF  F005         	goto	i2u233_41
  5875   000BFA  EF01  F006         	goto	i2u233_40
  5876   000BFE                     i2u233_41:
  5877   000BFE  EF07  F006         	goto	i2l1054
  5878   000C02                     i2u233_40:
  5879   000C02                     
  5880                           ; BSR set to: 0
  5881   000C02  0E00               	movlw	0
  5882   000C04  6E33               	movwf	(i2xtoa@p+1)^0,c
  5883   000C06  0E01               	movlw	1
  5884   000C08  6E32               	movwf	i2xtoa@p^0,c
  5885   000C0A  EF0B  F006         	goto	i2l1056
  5886   000C0E                     i2l1054:
  5887                           
  5888                           ; BSR set to: 0
  5889   000C0E  C0CE  F032         	movff	_prec,i2xtoa@p
  5890   000C12  C0CF  F033         	movff	_prec+1,i2xtoa@p+1
  5891   000C16                     i2l1056:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  5895   000C16  C0CC  F034         	movff	_width,i2xtoa@w
  5896   000C1A  C0CD  F035         	movff	_width+1,i2xtoa@w+1
  5897                           
  5898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  5899   000C1E  C020  F036         	movff	i2xtoa@d,i2xtoa@n
  5900   000C22  C021  F037         	movff	i2xtoa@d+1,i2xtoa@n+1
  5901   000C26  C022  F038         	movff	i2xtoa@d+2,i2xtoa@n+2
  5902   000C2A  C023  F039         	movff	i2xtoa@d+3,i2xtoa@n+3
  5903   000C2E  C024  F03A         	movff	i2xtoa@d+4,i2xtoa@n+4
  5904   000C32  C025  F03B         	movff	i2xtoa@d+5,i2xtoa@n+5
  5905   000C36  C026  F03C         	movff	i2xtoa@d+6,i2xtoa@n+6
  5906   000C3A  C027  F03D         	movff	i2xtoa@d+7,i2xtoa@n+7
  5907   000C3E                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  5910   000C3E  0E00               	movlw	0
  5911   000C40  6E3F               	movwf	(i2xtoa@i+1)^0,c
  5912   000C42  0E1F               	movlw	31
  5913   000C44  6E3E               	movwf	i2xtoa@i^0,c
  5914   000C46                     
  5915                           ; BSR set to: 0
  5916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  5917   000C46  0E00               	movlw	0
  5918   000C48  0101               	movlb	1	; () banked
  5919   000C4A  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5920                           
  5921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  5922   000C4C  EF83  F006         	goto	i2l3227
  5923   000C50                     i2l3207:
  5924                           
  5925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  5926   000C50  063E               	decf	i2xtoa@i^0,f,c
  5927   000C52  A0D8               	btfss	status,0,c
  5928   000C54  063F               	decf	(i2xtoa@i+1)^0,f,c
  5929   000C56                     
  5930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  5931   000C56  5036               	movf	i2xtoa@n^0,w,c
  5932   000C58  0B0F               	andlw	15
  5933   000C5A  6E40               	movwf	i2xtoa@c^0,c
  5934   000C5C                     
  5935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5936   000C5C  0E09               	movlw	9
  5937   000C5E  6440               	cpfsgt	i2xtoa@c^0,c
  5938   000C60  EF34  F006         	goto	i2u234_41
  5939   000C64  EF36  F006         	goto	i2u234_40
  5940   000C68                     i2u234_41:
  5941   000C68  EF3E  F006         	goto	i2l3215
  5942   000C6C                     i2u234_40:
  5943   000C6C  0E57               	movlw	87
  5944   000C6E  2440               	addwf	i2xtoa@c^0,w,c
  5945   000C70  6E30               	movwf	i2_xtoa$1512^0,c
  5946   000C72  6A31               	clrf	(i2_xtoa$1512+1)^0,c
  5947   000C74  0E00               	movlw	0
  5948   000C76  2231               	addwfc	(i2_xtoa$1512+1)^0,f,c
  5949   000C78  EF44  F006         	goto	i2l3217
  5950   000C7C                     i2l3215:
  5951   000C7C  0E30               	movlw	48
  5952   000C7E  2440               	addwf	i2xtoa@c^0,w,c
  5953   000C80  6E30               	movwf	i2_xtoa$1512^0,c
  5954   000C82  6A31               	clrf	(i2_xtoa$1512+1)^0,c
  5955   000C84  0E00               	movlw	0
  5956   000C86  2231               	addwfc	(i2_xtoa$1512+1)^0,f,c
  5957   000C88                     i2l3217:
  5958   000C88  C030  F040         	movff	i2_xtoa$1512,i2xtoa@c
  5959   000C8C                     
  5960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  5961   000C8C  0E00               	movlw	low _dbuf
  5962   000C8E  243E               	addwf	i2xtoa@i^0,w,c
  5963   000C90  6ED9               	movwf	fsr2l,c
  5964   000C92  0E01               	movlw	high _dbuf
  5965   000C94  203F               	addwfc	(i2xtoa@i+1)^0,w,c
  5966   000C96  6EDA               	movwf	fsr2h,c
  5967   000C98  C040  FFDF         	movff	i2xtoa@c,indf2
  5968   000C9C                     
  5969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  5970   000C9C  0632               	decf	i2xtoa@p^0,f,c
  5971   000C9E  A0D8               	btfss	status,0,c
  5972   000CA0  0633               	decf	(i2xtoa@p+1)^0,f,c
  5973   000CA2                     
  5974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  5975   000CA2  0634               	decf	i2xtoa@w^0,f,c
  5976   000CA4  A0D8               	btfss	status,0,c
  5977   000CA6  0635               	decf	(i2xtoa@w+1)^0,f,c
  5978   000CA8                     
  5979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  5980   000CA8  C036  F028         	movff	i2xtoa@n,??i2_xtoa
  5981   000CAC  C037  F029         	movff	i2xtoa@n+1,??i2_xtoa+1
  5982   000CB0  C038  F02A         	movff	i2xtoa@n+2,??i2_xtoa+2
  5983   000CB4  C039  F02B         	movff	i2xtoa@n+3,??i2_xtoa+3
  5984   000CB8  C03A  F02C         	movff	i2xtoa@n+4,??i2_xtoa+4
  5985   000CBC  C03B  F02D         	movff	i2xtoa@n+5,??i2_xtoa+5
  5986   000CC0  C03C  F02E         	movff	i2xtoa@n+6,??i2_xtoa+6
  5987   000CC4  C03D  F02F         	movff	i2xtoa@n+7,??i2_xtoa+7
  5988   000CC8  0E05               	movlw	5
  5989   000CCA  EF70  F006         	goto	i2u235_40
  5990   000CCE                     i2u235_45:
  5991   000CCE  90D8               	bcf	status,0,c
  5992   000CD0  322F               	rrcf	(??i2_xtoa+7)^0,f,c
  5993   000CD2  322E               	rrcf	(??i2_xtoa+6)^0,f,c
  5994   000CD4  322D               	rrcf	(??i2_xtoa+5)^0,f,c
  5995   000CD6  322C               	rrcf	(??i2_xtoa+4)^0,f,c
  5996   000CD8  322B               	rrcf	(??i2_xtoa+3)^0,f,c
  5997   000CDA  322A               	rrcf	(??i2_xtoa+2)^0,f,c
  5998   000CDC  3229               	rrcf	(??i2_xtoa+1)^0,f,c
  5999   000CDE  3228               	rrcf	??i2_xtoa^0,f,c
  6000   000CE0                     i2u235_40:
  6001   000CE0  2EE8               	decfsz	wreg,f,c
  6002   000CE2  EF67  F006         	goto	i2u235_45
  6003   000CE6  C028  F036         	movff	??i2_xtoa,i2xtoa@n
  6004   000CEA  C029  F037         	movff	??i2_xtoa+1,i2xtoa@n+1
  6005   000CEE  C02A  F038         	movff	??i2_xtoa+2,i2xtoa@n+2
  6006   000CF2  C02B  F039         	movff	??i2_xtoa+3,i2xtoa@n+3
  6007   000CF6  C02C  F03A         	movff	??i2_xtoa+4,i2xtoa@n+4
  6008   000CFA  C02D  F03B         	movff	??i2_xtoa+5,i2xtoa@n+5
  6009   000CFE  C02E  F03C         	movff	??i2_xtoa+6,i2xtoa@n+6
  6010   000D02  C02F  F03D         	movff	??i2_xtoa+7,i2xtoa@n+7
  6011   000D06                     i2l3227:
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  6014   000D06  BE3F               	btfsc	(i2xtoa@i+1)^0,7,c
  6015   000D08  EF8F  F006         	goto	i2u236_41
  6016   000D0C  503F               	movf	(i2xtoa@i+1)^0,w,c
  6017   000D0E  E109               	bnz	i2u236_40
  6018   000D10  0E02               	movlw	2
  6019   000D12  5C3E               	subwf	i2xtoa@i^0,w,c
  6020   000D14  A0D8               	btfss	status,0,c
  6021   000D16  EF8F  F006         	goto	i2u236_41
  6022   000D1A  EF91  F006         	goto	i2u236_40
  6023   000D1E                     i2u236_41:
  6024   000D1E  EFC2  F006         	goto	i2l3237
  6025   000D22                     i2u236_40:
  6026   000D22  5036               	movf	i2xtoa@n^0,w,c
  6027   000D24  1037               	iorwf	(i2xtoa@n+1)^0,w,c
  6028   000D26  1038               	iorwf	(i2xtoa@n+2)^0,w,c
  6029   000D28  1039               	iorwf	(i2xtoa@n+3)^0,w,c
  6030   000D2A  103A               	iorwf	(i2xtoa@n+4)^0,w,c
  6031   000D2C  103B               	iorwf	(i2xtoa@n+5)^0,w,c
  6032   000D2E  103C               	iorwf	(i2xtoa@n+6)^0,w,c
  6033   000D30  103D               	iorwf	(i2xtoa@n+7)^0,w,c
  6034   000D32  A4D8               	btfss	status,2,c
  6035   000D34  EF9E  F006         	goto	i2u237_41
  6036   000D38  EFA0  F006         	goto	i2u237_40
  6037   000D3C                     i2u237_41:
  6038   000D3C  EF28  F006         	goto	i2l3207
  6039   000D40                     i2u237_40:
  6040   000D40  BE33               	btfsc	(i2xtoa@p+1)^0,7,c
  6041   000D42  EFAD  F006         	goto	i2u238_40
  6042   000D46  5033               	movf	(i2xtoa@p+1)^0,w,c
  6043   000D48  E106               	bnz	i2u238_41
  6044   000D4A  0432               	decf	i2xtoa@p^0,w,c
  6045   000D4C  B0D8               	btfsc	status,0,c
  6046   000D4E  EFAB  F006         	goto	i2u238_41
  6047   000D52  EFAD  F006         	goto	i2u238_40
  6048   000D56                     i2u238_41:
  6049   000D56  EF28  F006         	goto	i2l3207
  6050   000D5A                     i2u238_40:
  6051   000D5A  BE35               	btfsc	(i2xtoa@w+1)^0,7,c
  6052   000D5C  EFB8  F006         	goto	i2u239_41
  6053   000D60  5035               	movf	(i2xtoa@w+1)^0,w,c
  6054   000D62  E108               	bnz	i2u239_40
  6055   000D64  0434               	decf	i2xtoa@w^0,w,c
  6056   000D66  A0D8               	btfss	status,0,c
  6057   000D68  EFB8  F006         	goto	i2u239_41
  6058   000D6C  EFBA  F006         	goto	i2u239_40
  6059   000D70                     i2u239_41:
  6060   000D70  EFC2  F006         	goto	i2l3237
  6061   000D74                     i2u239_40:
  6062   000D74  0100               	movlb	0	; () banked
  6063   000D76  B3DA               	btfsc	_flags& (0+255),1,b
  6064   000D78  EFC0  F006         	goto	i2u240_41
  6065   000D7C  EFC2  F006         	goto	i2u240_40
  6066   000D80                     i2u240_41:
  6067   000D80  EF28  F006         	goto	i2l3207
  6068   000D84                     i2u240_40:
  6069   000D84                     i2l3237:
  6070                           
  6071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  6072   000D84  C01E  F013         	movff	i2xtoa@fp,i2pad@fp
  6073   000D88  C01F  F014         	movff	i2xtoa@fp+1,i2pad@fp+1
  6074   000D8C  0E00               	movlw	low _dbuf
  6075   000D8E  243E               	addwf	i2xtoa@i^0,w,c
  6076   000D90  6E15               	movwf	i2pad@buf^0,c
  6077   000D92  0E01               	movlw	high _dbuf
  6078   000D94  203F               	addwfc	(i2xtoa@i+1)^0,w,c
  6079   000D96  6E16               	movwf	(i2pad@buf+1)^0,c
  6080   000D98  C034  F017         	movff	i2xtoa@w,i2pad@p
  6081   000D9C  C035  F018         	movff	i2xtoa@w+1,i2pad@p+1
  6082   000DA0  ECA5  F009         	call	i2_pad	;wreg free
  6083   000DA4  0012               	return		;funcret
  6084   000DA6                     __end_ofi2_xtoa:
  6085                           	callstack 0
  6086                           
  6087 ;; *************** function i2_pad *****************
  6088 ;; Defined at:
  6089 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  6092 ;;		 -> NULL(0), 
  6093 ;;  buf             2   20[COMRAM] PTR unsigned char 
  6094 ;;		 -> dbuf(32), 
  6095 ;;  p               2   22[COMRAM] int 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  w               2   27[COMRAM] int 
  6098 ;;  i               2   25[COMRAM] int 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6108 ;;      Params:         6       0       0       0       0       0       0
  6109 ;;      Locals:         4       0       0       0       0       0       0
  6110 ;;      Temps:          1       0       0       0       0       0       0
  6111 ;;      Totals:        11       0       0       0       0       0       0
  6112 ;;Total ram usage:       11 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 4
  6115 ;; This function calls:
  6116 ;;		i2_fputc
  6117 ;;		i2_fputs
  6118 ;; This function is called by:
  6119 ;;		i2_xtoa
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text37
  6124   00134A                     __ptext37:
  6125                           	callstack 0
  6126   00134A                     i2_pad:
  6127                           	callstack 10
  6128   00134A                     
  6129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  6130   00134A  0100               	movlb	0	; () banked
  6131   00134C  A1DA               	btfss	_flags& (0+255),0,b
  6132   00134E  EFAB  F009         	goto	i2u220_41
  6133   001352  EFAD  F009         	goto	i2u220_40
  6134   001356                     i2u220_41:
  6135   001356  EFB7  F009         	goto	i2l3137
  6136   00135A                     i2u220_40:
  6137   00135A                     
  6138                           ; BSR set to: 0
  6139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  6140   00135A  C015  F00C         	movff	i2pad@buf,i2fputs@s
  6141   00135E  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
  6142   001362  C013  F00E         	movff	i2pad@fp,i2fputs@fp
  6143   001366  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
  6144   00136A  EC71  F00B         	call	i2_fputs	;wreg free
  6145   00136E                     i2l3137:
  6146                           
  6147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  6148   00136E  BE18               	btfsc	(i2pad@p+1)^0,7,c
  6149   001370  EFBC  F009         	goto	i2u221_41
  6150   001374  EFBE  F009         	goto	i2u221_40
  6151   001378                     i2u221_41:
  6152   001378  EFC4  F009         	goto	i2l3141
  6153   00137C                     i2u221_40:
  6154   00137C  C017  F01C         	movff	i2pad@p,i2pad@w
  6155   001380  C018  F01D         	movff	i2pad@p+1,i2pad@w+1
  6156   001384  EFC8  F009         	goto	i2l1028
  6157   001388                     i2l3141:
  6158   001388  0E00               	movlw	0
  6159   00138A  6E1D               	movwf	(i2pad@w+1)^0,c
  6160   00138C  0E00               	movlw	0
  6161   00138E  6E1C               	movwf	i2pad@w^0,c
  6162   001390                     i2l1028:
  6163                           
  6164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6165   001390  0E00               	movlw	0
  6166   001392  6E1B               	movwf	(i2pad@i+1)^0,c
  6167   001394  0E00               	movlw	0
  6168   001396  6E1A               	movwf	i2pad@i^0,c
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6171   001398  EFDA  F009         	goto	i2l3147
  6172   00139C                     i2l3143:
  6173                           
  6174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6175   00139C  0E00               	movlw	0
  6176   00139E  6E04               	movwf	(i2fputc@c+1)^0,c
  6177   0013A0  0E20               	movlw	32
  6178   0013A2  6E03               	movwf	i2fputc@c^0,c
  6179   0013A4  C013  F005         	movff	i2pad@fp,i2fputc@fp
  6180   0013A8  C014  F006         	movff	i2pad@fp+1,i2fputc@fp+1
  6181   0013AC  EC48  F00A         	call	i2_fputc	;wreg free
  6182   0013B0                     
  6183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6184   0013B0  4A1A               	infsnz	i2pad@i^0,f,c
  6185   0013B2  2A1B               	incf	(i2pad@i+1)^0,f,c
  6186   0013B4                     i2l3147:
  6187                           
  6188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6189   0013B4  501C               	movf	i2pad@w^0,w,c
  6190   0013B6  5C1A               	subwf	i2pad@i^0,w,c
  6191   0013B8  501B               	movf	(i2pad@i+1)^0,w,c
  6192   0013BA  0A80               	xorlw	128
  6193   0013BC  6E19               	movwf	??i2_pad^0,c
  6194   0013BE  501D               	movf	(i2pad@w+1)^0,w,c
  6195   0013C0  0A80               	xorlw	128
  6196   0013C2  5819               	subwfb	??i2_pad^0,w,c
  6197   0013C4  A0D8               	btfss	status,0,c
  6198   0013C6  EFE7  F009         	goto	i2u222_41
  6199   0013CA  EFE9  F009         	goto	i2u222_40
  6200   0013CE                     i2u222_41:
  6201   0013CE  EFCE  F009         	goto	i2l3143
  6202   0013D2                     i2u222_40:
  6203   0013D2                     
  6204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  6205   0013D2  0100               	movlb	0	; () banked
  6206   0013D4  B1DA               	btfsc	_flags& (0+255),0,b
  6207   0013D6  EFEF  F009         	goto	i2u223_41
  6208   0013DA  EFF1  F009         	goto	i2u223_40
  6209   0013DE                     i2u223_41:
  6210   0013DE  EFFB  F009         	goto	i2l1033
  6211   0013E2                     i2u223_40:
  6212   0013E2                     
  6213                           ; BSR set to: 0
  6214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6215   0013E2  C015  F00C         	movff	i2pad@buf,i2fputs@s
  6216   0013E6  C016  F00D         	movff	i2pad@buf+1,i2fputs@s+1
  6217   0013EA  C013  F00E         	movff	i2pad@fp,i2fputs@fp
  6218   0013EE  C014  F00F         	movff	i2pad@fp+1,i2fputs@fp+1
  6219   0013F2  EC71  F00B         	call	i2_fputs	;wreg free
  6220   0013F6                     i2l1033:
  6221   0013F6  0012               	return		;funcret
  6222   0013F8                     __end_ofi2_pad:
  6223                           	callstack 0
  6224                           
  6225 ;; *************** function i2_fputs *****************
  6226 ;; Defined at:
  6227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6230 ;;		 -> dbuf(32), 
  6231 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6232 ;;		 -> NULL(0), 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  i               2   16[COMRAM] int 
  6235 ;;  c               1   15[COMRAM] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  2   11[COMRAM] int 
  6238 ;; Registers used:
  6239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6245 ;;      Params:         4       0       0       0       0       0       0
  6246 ;;      Locals:         3       0       0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0
  6248 ;;      Totals:         7       0       0       0       0       0       0
  6249 ;;Total ram usage:        7 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 3
  6252 ;; This function calls:
  6253 ;;		i2_fputc
  6254 ;; This function is called by:
  6255 ;;		i2_pad
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text38
  6260   0016E2                     __ptext38:
  6261                           	callstack 0
  6262   0016E2                     i2_fputs:
  6263                           	callstack 10
  6264   0016E2  0E00               	movlw	0
  6265   0016E4  6E12               	movwf	(i2fputs@i+1)^0,c
  6266   0016E6  0E00               	movlw	0
  6267   0016E8  6E11               	movwf	i2fputs@i^0,c
  6268   0016EA  EF82  F00B         	goto	i2l3111
  6269   0016EE                     i2l3107:
  6270   0016EE  C010  F003         	movff	i2fputs@c,i2fputc@c
  6271   0016F2  6A04               	clrf	(i2fputc@c+1)^0,c
  6272   0016F4  C00E  F005         	movff	i2fputs@fp,i2fputc@fp
  6273   0016F8  C00F  F006         	movff	i2fputs@fp+1,i2fputc@fp+1
  6274   0016FC  EC48  F00A         	call	i2_fputc	;wreg free
  6275   001700  4A11               	infsnz	i2fputs@i^0,f,c
  6276   001702  2A12               	incf	(i2fputs@i+1)^0,f,c
  6277   001704                     i2l3111:
  6278   001704  5011               	movf	i2fputs@i^0,w,c
  6279   001706  240C               	addwf	i2fputs@s^0,w,c
  6280   001708  6ED9               	movwf	fsr2l,c
  6281   00170A  5012               	movf	(i2fputs@i+1)^0,w,c
  6282   00170C  200D               	addwfc	(i2fputs@s+1)^0,w,c
  6283   00170E  6EDA               	movwf	fsr2h,c
  6284   001710  50DF               	movf	indf2,w,c
  6285   001712  6E10               	movwf	i2fputs@c^0,c
  6286   001714  5010               	movf	i2fputs@c^0,w,c
  6287   001716  A4D8               	btfss	status,2,c
  6288   001718  EF90  F00B         	goto	i2u215_41
  6289   00171C  EF92  F00B         	goto	i2u215_40
  6290   001720                     i2u215_41:
  6291   001720  EF77  F00B         	goto	i2l3107
  6292   001724                     i2u215_40:
  6293   001724  0012               	return		;funcret
  6294   001726                     __end_ofi2_fputs:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function i2_ctoa *****************
  6298 ;; Defined at:
  6299 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6302 ;;		 -> NULL(0), 
  6303 ;;  c               1   13[COMRAM] unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  w               2   17[COMRAM] int 
  6306 ;;  l               2   15[COMRAM] int 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      void 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6316 ;;      Params:         3       0       0       0       0       0       0
  6317 ;;      Locals:         4       0       0       0       0       0       0
  6318 ;;      Temps:          1       0       0       0       0       0       0
  6319 ;;      Totals:         8       0       0       0       0       0       0
  6320 ;;Total ram usage:        8 bytes
  6321 ;; Hardware stack levels used: 1
  6322 ;; Hardware stack levels required when called: 3
  6323 ;; This function calls:
  6324 ;;		i2_fputc
  6325 ;; This function is called by:
  6326 ;;		i2_vfpfcnvrt
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text39
  6331   00110C                     __ptext39:
  6332                           	callstack 0
  6333   00110C                     i2_ctoa:
  6334                           	callstack 12
  6335   00110C                     
  6336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  6337   00110C  0100               	movlb	0	; () banked
  6338   00110E  51CC               	movf	_width& (0+255),w,b
  6339   001110  11CD               	iorwf	(_width+1)& (0+255),w,b
  6340   001112  A4D8               	btfss	status,2,c
  6341   001114  EF8E  F008         	goto	i2u227_41
  6342   001118  EF90  F008         	goto	i2u227_40
  6343   00111C                     i2u227_41:
  6344   00111C  EF96  F008         	goto	i2l3175
  6345   001120                     i2u227_40:
  6346   001120                     
  6347                           ; BSR set to: 0
  6348   001120  C0CC  F012         	movff	_width,i2ctoa@w
  6349   001124  C0CD  F013         	movff	_width+1,i2ctoa@w+1
  6350   001128  EF9C  F008         	goto	i2l3177
  6351   00112C                     i2l3175:
  6352                           
  6353                           ; BSR set to: 0
  6354   00112C  0EFF               	movlw	255
  6355   00112E  25CC               	addwf	_width& (0+255),w,b
  6356   001130  6E12               	movwf	i2ctoa@w^0,c
  6357   001132  0EFF               	movlw	255
  6358   001134  21CD               	addwfc	(_width+1)& (0+255),w,b
  6359   001136  6E13               	movwf	(i2ctoa@w+1)^0,c
  6360   001138                     i2l3177:
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  6364   001138  A1DA               	btfss	_flags& (0+255),0,b
  6365   00113A  EFA1  F008         	goto	i2u228_41
  6366   00113E  EFA3  F008         	goto	i2u228_40
  6367   001142                     i2u228_41:
  6368   001142  EFAC  F008         	goto	i2l3181
  6369   001146                     i2u228_40:
  6370   001146                     
  6371                           ; BSR set to: 0
  6372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  6373   001146  C00E  F003         	movff	i2ctoa@c,i2fputc@c
  6374   00114A  6A04               	clrf	(i2fputc@c+1)^0,c
  6375   00114C  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
  6376   001150  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
  6377   001154  EC48  F00A         	call	i2_fputc	;wreg free
  6378   001158                     i2l3181:
  6379                           
  6380                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  6381   001158  BE13               	btfsc	(i2ctoa@w+1)^0,7,c
  6382   00115A  EFB1  F008         	goto	i2u229_41
  6383   00115E  EFB3  F008         	goto	i2u229_40
  6384   001162                     i2u229_41:
  6385   001162  EFB5  F008         	goto	i2l3185
  6386   001166                     i2u229_40:
  6387   001166  EFB9  F008         	goto	i2l1044
  6388   00116A                     i2l3185:
  6389   00116A  0E00               	movlw	0
  6390   00116C  6E13               	movwf	(i2ctoa@w+1)^0,c
  6391   00116E  0E00               	movlw	0
  6392   001170  6E12               	movwf	i2ctoa@w^0,c
  6393   001172                     i2l1044:
  6394                           
  6395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  6396   001172  0E00               	movlw	0
  6397   001174  6E11               	movwf	(i2ctoa@l+1)^0,c
  6398   001176  0E00               	movlw	0
  6399   001178  6E10               	movwf	i2ctoa@l^0,c
  6400                           
  6401                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  6402   00117A  EFCB  F008         	goto	i2l3191
  6403   00117E                     i2l3187:
  6404                           
  6405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  6406   00117E  0E00               	movlw	0
  6407   001180  6E04               	movwf	(i2fputc@c+1)^0,c
  6408   001182  0E20               	movlw	32
  6409   001184  6E03               	movwf	i2fputc@c^0,c
  6410   001186  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
  6411   00118A  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
  6412   00118E  EC48  F00A         	call	i2_fputc	;wreg free
  6413   001192                     
  6414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  6415   001192  4A10               	infsnz	i2ctoa@l^0,f,c
  6416   001194  2A11               	incf	(i2ctoa@l+1)^0,f,c
  6417   001196                     i2l3191:
  6418                           
  6419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  6420   001196  5012               	movf	i2ctoa@w^0,w,c
  6421   001198  5C10               	subwf	i2ctoa@l^0,w,c
  6422   00119A  5011               	movf	(i2ctoa@l+1)^0,w,c
  6423   00119C  0A80               	xorlw	128
  6424   00119E  6E0F               	movwf	??i2_ctoa^0,c
  6425   0011A0  5013               	movf	(i2ctoa@w+1)^0,w,c
  6426   0011A2  0A80               	xorlw	128
  6427   0011A4  580F               	subwfb	??i2_ctoa^0,w,c
  6428   0011A6  A0D8               	btfss	status,0,c
  6429   0011A8  EFD8  F008         	goto	i2u230_41
  6430   0011AC  EFDA  F008         	goto	i2u230_40
  6431   0011B0                     i2u230_41:
  6432   0011B0  EFBF  F008         	goto	i2l3187
  6433   0011B4                     i2u230_40:
  6434   0011B4                     
  6435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  6436   0011B4  0100               	movlb	0	; () banked
  6437   0011B6  B1DA               	btfsc	_flags& (0+255),0,b
  6438   0011B8  EFE0  F008         	goto	i2u231_41
  6439   0011BC  EFE2  F008         	goto	i2u231_40
  6440   0011C0                     i2u231_41:
  6441   0011C0  EFEB  F008         	goto	i2l1049
  6442   0011C4                     i2u231_40:
  6443   0011C4                     
  6444                           ; BSR set to: 0
  6445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  6446   0011C4  C00E  F003         	movff	i2ctoa@c,i2fputc@c
  6447   0011C8  6A04               	clrf	(i2fputc@c+1)^0,c
  6448   0011CA  C00C  F005         	movff	i2ctoa@fp,i2fputc@fp
  6449   0011CE  C00D  F006         	movff	i2ctoa@fp+1,i2fputc@fp+1
  6450   0011D2  EC48  F00A         	call	i2_fputc	;wreg free
  6451   0011D6                     i2l1049:
  6452   0011D6  0012               	return		;funcret
  6453   0011D8                     __end_ofi2_ctoa:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function i2_fputc *****************
  6457 ;; Defined at:
  6458 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  c               2    2[COMRAM] int 
  6461 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6462 ;;		 -> NULL(0), 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  2    2[COMRAM] int 
  6467 ;; Registers used:
  6468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6474 ;;      Params:         4       0       0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0
  6476 ;;      Temps:          5       0       0       0       0       0       0
  6477 ;;      Totals:         9       0       0       0       0       0       0
  6478 ;;Total ram usage:        9 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 2
  6481 ;; This function calls:
  6482 ;;		i2_putch
  6483 ;; This function is called by:
  6484 ;;		i2_pad
  6485 ;;		i2_ctoa
  6486 ;;		i2_vfpfcnvrt
  6487 ;;		i2_fputs
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text40
  6492   001490                     __ptext40:
  6493                           	callstack 0
  6494   001490                     i2_fputc:
  6495                           	callstack 10
  6496   001490  5005               	movf	i2fputc@fp^0,w,c
  6497   001492  1006               	iorwf	(i2fputc@fp+1)^0,w,c
  6498   001494  B4D8               	btfsc	status,2,c
  6499   001496  EF4F  F00A         	goto	i2u211_41
  6500   00149A  EF51  F00A         	goto	i2u211_40
  6501   00149E                     i2u211_41:
  6502   00149E  EF5A  F00A         	goto	i2l3093
  6503   0014A2                     i2u211_40:
  6504   0014A2  5005               	movf	i2fputc@fp^0,w,c
  6505   0014A4  1006               	iorwf	(i2fputc@fp+1)^0,w,c
  6506   0014A6  A4D8               	btfss	status,2,c
  6507   0014A8  EF58  F00A         	goto	i2u212_41
  6508   0014AC  EF5A  F00A         	goto	i2u212_40
  6509   0014B0                     i2u212_41:
  6510   0014B0  EF5F  F00A         	goto	i2l3095
  6511   0014B4                     i2u212_40:
  6512   0014B4                     i2l3093:
  6513   0014B4  5003               	movf	i2fputc@c^0,w,c
  6514   0014B6  EC07  F00D         	call	i2_putch
  6515   0014BA  EF92  F00A         	goto	i2l1151
  6516   0014BE                     i2l3095:
  6517   0014BE  EE20 F009          	lfsr	2,9
  6518   0014C2  5005               	movf	i2fputc@fp^0,w,c
  6519   0014C4  26D9               	addwf	fsr2l,f,c
  6520   0014C6  5006               	movf	(i2fputc@fp+1)^0,w,c
  6521   0014C8  22DA               	addwfc	fsr2h,f,c
  6522   0014CA  50DE               	movf	postinc2,w,c
  6523   0014CC  10DE               	iorwf	postinc2,w,c
  6524   0014CE  B4D8               	btfsc	status,2,c
  6525   0014D0  EF6C  F00A         	goto	i2u213_41
  6526   0014D4  EF6E  F00A         	goto	i2u213_40
  6527   0014D8                     i2u213_41:
  6528   0014D8  EF89  F00A         	goto	i2l3099
  6529   0014DC                     i2u213_40:
  6530   0014DC  EE20 F009          	lfsr	2,9
  6531   0014E0  5005               	movf	i2fputc@fp^0,w,c
  6532   0014E2  26D9               	addwf	fsr2l,f,c
  6533   0014E4  5006               	movf	(i2fputc@fp+1)^0,w,c
  6534   0014E6  22DA               	addwfc	fsr2h,f,c
  6535   0014E8  EE10 F003          	lfsr	1,3
  6536   0014EC  5005               	movf	i2fputc@fp^0,w,c
  6537   0014EE  26E1               	addwf	fsr1l,f,c
  6538   0014F0  5006               	movf	(i2fputc@fp+1)^0,w,c
  6539   0014F2  22E2               	addwfc	fsr1h,f,c
  6540   0014F4  50DE               	movf	postinc2,w,c
  6541   0014F6  5CE6               	subwf	postinc1,w,c
  6542   0014F8  50E6               	movf	postinc1,w,c
  6543   0014FA  0A80               	xorlw	128
  6544   0014FC  6E0B               	movwf	(??i2_fputc+4)^0,c
  6545   0014FE  50DE               	movf	postinc2,w,c
  6546   001500  0A80               	xorlw	128
  6547   001502  580B               	subwfb	(??i2_fputc+4)^0,w,c
  6548   001504  B0D8               	btfsc	status,0,c
  6549   001506  EF87  F00A         	goto	i2u214_41
  6550   00150A  EF89  F00A         	goto	i2u214_40
  6551   00150E                     i2u214_41:
  6552   00150E  EF92  F00A         	goto	i2l1151
  6553   001512                     i2u214_40:
  6554   001512                     i2l3099:
  6555   001512  EE20 F003          	lfsr	2,3
  6556   001516  5005               	movf	i2fputc@fp^0,w,c
  6557   001518  26D9               	addwf	fsr2l,f,c
  6558   00151A  5006               	movf	(i2fputc@fp+1)^0,w,c
  6559   00151C  22DA               	addwfc	fsr2h,f,c
  6560   00151E  2ADE               	incf	postinc2,f,c
  6561   001520  0E00               	movlw	0
  6562   001522  22DD               	addwfc	postdec2,f,c
  6563   001524                     i2l1151:
  6564   001524  0012               	return		;funcret
  6565   001526                     __end_ofi2_fputc:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function i2_putch *****************
  6569 ;; Defined at:
  6570 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  txData          1    wreg     unsigned char 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  txData          1    1[COMRAM] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6584 ;;      Params:         0       0       0       0       0       0       0
  6585 ;;      Locals:         1       0       0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0
  6587 ;;      Totals:         1       0       0       0       0       0       0
  6588 ;;Total ram usage:        1 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 1
  6591 ;; This function calls:
  6592 ;;		i2_EUSART1_Write
  6593 ;; This function is called by:
  6594 ;;		i2_fputc
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text41
  6599   001A0E                     __ptext41:
  6600                           	callstack 0
  6601   001A0E                     i2_putch:
  6602                           	callstack 10
  6603                           
  6604                           ;incstack = 0
  6605                           ;i2putch@txData stored from wreg
  6606   001A0E  6E02               	movwf	i2putch@txData^0,c
  6607   001A10                     
  6608                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6609   001A10  5002               	movf	i2putch@txData^0,w,c
  6610   001A12  ECD7  F00C         	call	i2_EUSART1_Write
  6611   001A16  0012               	return		;funcret
  6612   001A18                     __end_ofi2_putch:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function i2_EUSART1_Write *****************
  6616 ;; Defined at:
  6617 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  txData          1    wreg     unsigned char 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  txData          1    0[COMRAM] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6631 ;;      Params:         0       0       0       0       0       0       0
  6632 ;;      Locals:         1       0       0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0
  6634 ;;      Totals:         1       0       0       0       0       0       0
  6635 ;;Total ram usage:        1 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		i2_putch
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text42
  6645   0019AE                     __ptext42:
  6646                           	callstack 0
  6647   0019AE                     i2_EUSART1_Write:
  6648                           	callstack 10
  6649                           
  6650                           ;incstack = 0
  6651                           ;i2EUSART1_Write@txData stored from wreg
  6652   0019AE  6E01               	movwf	i2EUSART1_Write@txData^0,c
  6653   0019B0                     i2l154:
  6654                           
  6655                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6656   0019B0  A89E               	btfss	158,4,c	;volatile
  6657   0019B2  EFDD  F00C         	goto	i2u209_41
  6658   0019B6  EFDF  F00C         	goto	i2u209_40
  6659   0019BA                     i2u209_41:
  6660   0019BA  EFD8  F00C         	goto	i2l154
  6661   0019BE                     i2u209_40:
  6662   0019BE                     
  6663                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6664   0019BE  C001  FFAD         	movff	i2EUSART1_Write@txData,4013	;volatile
  6665   0019C2  0012               	return		;funcret
  6666   0019C4                     __end_ofi2_EUSART1_Write:
  6667                           	callstack 0
  6668                           
  6669 ;; *************** function i2_atoi *****************
  6670 ;; Defined at:
  6671 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6674 ;;		 -> STR_28(14), STR_27(17), STR_26(3), STR_25(3), 
  6675 ;;		 -> STR_24(5), STR_23(14), STR_22(81), STR_21(21), 
  6676 ;;		 -> STR_20(21), STR_19(22), STR_18(33), STR_17(31), 
  6677 ;;		 -> STR_16(39), STR_15(29), STR_14(32), STR_13(24), 
  6678 ;;		 -> STR_12(21), STR_11(7), STR_10(15), STR_9(33), 
  6679 ;;		 -> STR_8(24), STR_7(33), STR_6(5), STR_5(45), 
  6680 ;;		 -> STR_4(15), STR_3(9), STR_2(22), STR_1(11), 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  n               2   13[COMRAM] int 
  6683 ;;  neg             2   11[COMRAM] int 
  6684 ;; Return value:  Size  Location     Type
  6685 ;;                  2    6[COMRAM] int 
  6686 ;; Registers used:
  6687 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6688 ;; Tracked objects:
  6689 ;;		On entry : 0/0
  6690 ;;		On exit  : 0/0
  6691 ;;		Unchanged: 0/0
  6692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6693 ;;      Params:         2       0       0       0       0       0       0
  6694 ;;      Locals:         4       0       0       0       0       0       0
  6695 ;;      Temps:          3       0       0       0       0       0       0
  6696 ;;      Totals:         9       0       0       0       0       0       0
  6697 ;;Total ram usage:        9 bytes
  6698 ;; Hardware stack levels used: 1
  6699 ;; Hardware stack levels required when called: 1
  6700 ;; This function calls:
  6701 ;;		i2___wmul
  6702 ;;		i2_isdigit
  6703 ;;		i2_isspace
  6704 ;; This function is called by:
  6705 ;;		i2_vfpfcnvrt
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text43
  6710   000EF4                     __ptext43:
  6711                           	callstack 0
  6712   000EF4                     i2_atoi:
  6713                           	callstack 14
  6714   000EF4  0E00               	movlw	0
  6715   000EF6  6E0F               	movwf	(i2atoi@n+1)^0,c
  6716   000EF8  0E00               	movlw	0
  6717   000EFA  6E0E               	movwf	i2atoi@n^0,c
  6718   000EFC  0E00               	movlw	0
  6719   000EFE  6E0D               	movwf	(i2atoi@neg+1)^0,c
  6720   000F00  0E00               	movlw	0
  6721   000F02  6E0C               	movwf	i2atoi@neg^0,c
  6722   000F04  EF86  F007         	goto	i2l3247
  6723   000F08                     i2l3243:
  6724   000F08  4A07               	infsnz	i2atoi@s^0,f,c
  6725   000F0A  2A08               	incf	(i2atoi@s+1)^0,f,c
  6726   000F0C                     i2l3247:
  6727   000F0C  C007  FFF6         	movff	i2atoi@s,tblptrl
  6728   000F10  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6729   000F14                     	if	0	;tblptru may be non-zero
  6730   000F14                     	endif
  6731   000F14                     	if	0	;tblptru may be non-zero
  6732   000F14                     	endif
  6733   000F14  0008               	tblrd		*
  6734   000F16  50F5               	movf	tablat,w,c
  6735   000F18  0A20               	xorlw	32
  6736   000F1A  B4D8               	btfsc	status,2,c
  6737   000F1C  EF92  F007         	goto	i2u241_41
  6738   000F20  EF94  F007         	goto	i2u241_40
  6739   000F24                     i2u241_41:
  6740   000F24  EF84  F007         	goto	i2l3243
  6741   000F28                     i2u241_40:
  6742   000F28  C007  FFF6         	movff	i2atoi@s,tblptrl
  6743   000F2C  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6744   000F30                     	if	0	;tblptru may be non-zero
  6745   000F30                     	endif
  6746   000F30                     	if	0	;tblptru may be non-zero
  6747   000F30                     	endif
  6748   000F30  0008               	tblrd		*
  6749   000F32  CFF5 F009          	movff	tablat,??i2_atoi
  6750   000F36  0EF7               	movlw	247
  6751   000F38  2409               	addwf	??i2_atoi^0,w,c
  6752   000F3A  6E0A               	movwf	(??i2_atoi+1)^0,c
  6753   000F3C  6A0B               	clrf	(??i2_atoi+2)^0,c
  6754   000F3E  0EFF               	movlw	255
  6755   000F40  220B               	addwfc	(??i2_atoi+2)^0,f,c
  6756   000F42  500B               	movf	(??i2_atoi+2)^0,w,c
  6757   000F44  E109               	bnz	i2u242_40
  6758   000F46  0E05               	movlw	5
  6759   000F48  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  6760   000F4A  A0D8               	btfss	status,0,c
  6761   000F4C  EFAA  F007         	goto	i2u242_41
  6762   000F50  EFAC  F007         	goto	i2u242_40
  6763   000F54                     i2u242_41:
  6764   000F54  EF84  F007         	goto	i2l3243
  6765   000F58                     i2u242_40:
  6766   000F58  EFB6  F007         	goto	i2l3255
  6767   000F5C                     i2l3251:
  6768   000F5C  0E00               	movlw	0
  6769   000F5E  6E0D               	movwf	(i2atoi@neg+1)^0,c
  6770   000F60  0E01               	movlw	1
  6771   000F62  6E0C               	movwf	i2atoi@neg^0,c
  6772   000F64                     i2l3253:
  6773   000F64  4A07               	infsnz	i2atoi@s^0,f,c
  6774   000F66  2A08               	incf	(i2atoi@s+1)^0,f,c
  6775   000F68  EFEB  F007         	goto	i2l3263
  6776   000F6C                     i2l3255:
  6777   000F6C  C007  FFF6         	movff	i2atoi@s,tblptrl
  6778   000F70  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6779   000F74                     	if	0	;tblptru may be non-zero
  6780   000F74                     	endif
  6781   000F74                     	if	0	;tblptru may be non-zero
  6782   000F74                     	endif
  6783   000F74  0008               	tblrd		*
  6784   000F76  50F5               	movf	tablat,w,c
  6785   000F78  6E09               	movwf	??i2_atoi^0,c
  6786   000F7A  6A0A               	clrf	(??i2_atoi+1)^0,c
  6787                           
  6788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6789                           ; Switch size 1, requested type "simple"
  6790                           ; Number of cases is 1, Range of values is 0 to 0
  6791                           ; switch strategies available:
  6792                           ; Name         Instructions Cycles
  6793                           ; simple_byte            4     3 (average)
  6794                           ;	Chosen strategy is simple_byte
  6795   000F7C  500A               	movf	(??i2_atoi+1)^0,w,c
  6796   000F7E  0A00               	xorlw	0	; case 0
  6797   000F80  B4D8               	btfsc	status,2,c
  6798   000F82  EFC5  F007         	goto	i2l4023
  6799   000F86  EFEB  F007         	goto	i2l3263
  6800   000F8A                     i2l4023:
  6801                           
  6802                           ; Switch size 1, requested type "simple"
  6803                           ; Number of cases is 2, Range of values is 43 to 45
  6804                           ; switch strategies available:
  6805                           ; Name         Instructions Cycles
  6806                           ; simple_byte            7     4 (average)
  6807                           ;	Chosen strategy is simple_byte
  6808   000F8A  5009               	movf	??i2_atoi^0,w,c
  6809   000F8C  0A2B               	xorlw	43	; case 43
  6810   000F8E  B4D8               	btfsc	status,2,c
  6811   000F90  EFB2  F007         	goto	i2l3253
  6812   000F94  0A06               	xorlw	6	; case 45
  6813   000F96  B4D8               	btfsc	status,2,c
  6814   000F98  EFAE  F007         	goto	i2l3251
  6815   000F9C  EFEB  F007         	goto	i2l3263
  6816   000FA0                     i2l3257:
  6817   000FA0  C00E  F001         	movff	i2atoi@n,i2___wmul@multiplier
  6818   000FA4  C00F  F002         	movff	i2atoi@n+1,i2___wmul@multiplier+1
  6819   000FA8  0E00               	movlw	0
  6820   000FAA  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  6821   000FAC  0E0A               	movlw	10
  6822   000FAE  6E03               	movwf	i2___wmul@multiplicand^0,c
  6823   000FB0  EC8E  F00C         	call	i2___wmul	;wreg free
  6824   000FB4  C007  FFF6         	movff	i2atoi@s,tblptrl
  6825   000FB8  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6826   000FBC                     	if	0	;tblptru may be non-zero
  6827   000FBC                     	endif
  6828   000FBC                     	if	0	;tblptru may be non-zero
  6829   000FBC                     	endif
  6830   000FBC  0008               	tblrd		*
  6831   000FBE  50F5               	movf	tablat,w,c
  6832   000FC0  5E01               	subwf	?i2___wmul^0,f,c
  6833   000FC2  0E00               	movlw	0
  6834   000FC4  5A02               	subwfb	(?i2___wmul+1)^0,f,c
  6835   000FC6  0E30               	movlw	48
  6836   000FC8  2401               	addwf	?i2___wmul^0,w,c
  6837   000FCA  6E0E               	movwf	i2atoi@n^0,c
  6838   000FCC  0E00               	movlw	0
  6839   000FCE  2002               	addwfc	(?i2___wmul+1)^0,w,c
  6840   000FD0  6E0F               	movwf	(i2atoi@n+1)^0,c
  6841   000FD2  EFB2  F007         	goto	i2l3253
  6842   000FD6                     i2l3263:
  6843   000FD6  C007  FFF6         	movff	i2atoi@s,tblptrl
  6844   000FDA  C008  FFF7         	movff	i2atoi@s+1,tblptrh
  6845   000FDE                     	if	0	;tblptru may be non-zero
  6846   000FDE                     	endif
  6847   000FDE                     	if	0	;tblptru may be non-zero
  6848   000FDE                     	endif
  6849   000FDE  0008               	tblrd		*
  6850   000FE0  CFF5 F009          	movff	tablat,??i2_atoi
  6851   000FE4  0ED0               	movlw	208
  6852   000FE6  2409               	addwf	??i2_atoi^0,w,c
  6853   000FE8  6E0A               	movwf	(??i2_atoi+1)^0,c
  6854   000FEA  6A0B               	clrf	(??i2_atoi+2)^0,c
  6855   000FEC  0EFF               	movlw	255
  6856   000FEE  220B               	addwfc	(??i2_atoi+2)^0,f,c
  6857   000FF0  500B               	movf	(??i2_atoi+2)^0,w,c
  6858   000FF2  E109               	bnz	i2u243_40
  6859   000FF4  0E0A               	movlw	10
  6860   000FF6  5C0A               	subwf	(??i2_atoi+1)^0,w,c
  6861   000FF8  A0D8               	btfss	status,0,c
  6862   000FFA  EF01  F008         	goto	i2u243_41
  6863   000FFE  EF03  F008         	goto	i2u243_40
  6864   001002                     i2u243_41:
  6865   001002  EFD0  F007         	goto	i2l3257
  6866   001006                     i2u243_40:
  6867   001006  500C               	movf	i2atoi@neg^0,w,c
  6868   001008  100D               	iorwf	(i2atoi@neg+1)^0,w,c
  6869   00100A  A4D8               	btfss	status,2,c
  6870   00100C  EF0A  F008         	goto	i2u244_41
  6871   001010  EF0C  F008         	goto	i2u244_40
  6872   001014                     i2u244_41:
  6873   001014  EF1A  F008         	goto	i2l1122
  6874   001018                     i2u244_40:
  6875   001018  C00E  F009         	movff	i2atoi@n,??i2_atoi
  6876   00101C  C00F  F00A         	movff	i2atoi@n+1,??i2_atoi+1
  6877   001020  1E09               	comf	??i2_atoi^0,f,c
  6878   001022  1E0A               	comf	(??i2_atoi+1)^0,f,c
  6879   001024  4A09               	infsnz	??i2_atoi^0,f,c
  6880   001026  2A0A               	incf	(??i2_atoi+1)^0,f,c
  6881   001028  C009  F007         	movff	??i2_atoi,?i2_atoi
  6882   00102C  C00A  F008         	movff	??i2_atoi+1,?i2_atoi+1
  6883   001030  EF1E  F008         	goto	i2l1125
  6884   001034                     i2l1122:
  6885   001034  C00E  F007         	movff	i2atoi@n,?i2_atoi
  6886   001038  C00F  F008         	movff	i2atoi@n+1,?i2_atoi+1
  6887   00103C                     i2l1125:
  6888   00103C  0012               	return		;funcret
  6889   00103E                     __end_ofi2_atoi:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function i2_isspace *****************
  6893 ;; Defined at:
  6894 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  c               2    0[COMRAM] int 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;		None
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  2    0[COMRAM] int 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6908 ;;      Params:         2       0       0       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0       0       0
  6910 ;;      Temps:          2       0       0       0       0       0       0
  6911 ;;      Totals:         4       0       0       0       0       0       0
  6912 ;;Total ram usage:        4 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		i2_atoi
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           	psect	text44
  6922   001764                     __ptext44:
  6923                           	callstack 0
  6924   001764                     i2_isspace:
  6925                           	callstack 14
  6926   001764  0E20               	movlw	32
  6927   001766  1801               	xorwf	i2isspace@c^0,w,c
  6928   001768  1002               	iorwf	(i2isspace@c+1)^0,w,c
  6929   00176A  B4D8               	btfsc	status,2,c
  6930   00176C  EFBA  F00B         	goto	i2u224_41
  6931   001770  EFBC  F00B         	goto	i2u224_40
  6932   001774                     i2u224_41:
  6933   001774  EFCD  F00B         	goto	i2l1136
  6934   001778                     i2u224_40:
  6935   001778  0EF7               	movlw	247
  6936   00177A  2401               	addwf	i2isspace@c^0,w,c
  6937   00177C  6E03               	movwf	??i2_isspace^0,c
  6938   00177E  0EFF               	movlw	255
  6939   001780  2002               	addwfc	(i2isspace@c+1)^0,w,c
  6940   001782  6E04               	movwf	(??i2_isspace+1)^0,c
  6941   001784  5004               	movf	(??i2_isspace+1)^0,w,c
  6942   001786  E109               	bnz	i2u225_40
  6943   001788  0E05               	movlw	5
  6944   00178A  5C03               	subwf	??i2_isspace^0,w,c
  6945   00178C  A0D8               	btfss	status,0,c
  6946   00178E  EFCB  F00B         	goto	i2u225_41
  6947   001792  EFCD  F00B         	goto	i2u225_40
  6948   001796                     i2u225_41:
  6949   001796  EFCD  F00B         	goto	i2l1136
  6950   00179A                     i2u225_40:
  6951   00179A                     i2l1136:
  6952   00179A  0012               	return		;funcret
  6953   00179C                     __end_ofi2_isspace:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function i2_isdigit *****************
  6957 ;; Defined at:
  6958 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  c               2    0[COMRAM] int 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  2    0[COMRAM] int 
  6965 ;; Registers used:
  6966 ;;		None
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6972 ;;      Params:         2       0       0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0
  6975 ;;      Totals:         2       0       0       0       0       0       0
  6976 ;;Total ram usage:        2 bytes
  6977 ;; Hardware stack levels used: 1
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		i2_vfpfcnvrt
  6982 ;;		i2_atoi
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text45
  6987   001A24                     __ptext45:
  6988                           	callstack 0
  6989   001A24                     i2_isdigit:
  6990                           	callstack 15
  6991   001A24  0012               	return		;funcret
  6992   001A26                     __end_ofi2_isdigit:
  6993                           	callstack 0
  6994                           
  6995 ;; *************** function i2___wmul *****************
  6996 ;; Defined at:
  6997 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  multiplier      2    0[COMRAM] unsigned int 
  7000 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;  product         2    4[COMRAM] unsigned int 
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  2    0[COMRAM] unsigned int 
  7005 ;; Registers used:
  7006 ;;		wreg, status,2, status,0, prodl, prodh
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7012 ;;      Params:         4       0       0       0       0       0       0
  7013 ;;      Locals:         2       0       0       0       0       0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0
  7015 ;;      Totals:         6       0       0       0       0       0       0
  7016 ;;Total ram usage:        6 bytes
  7017 ;; Hardware stack levels used: 1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		i2_atoi
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text46
  7026   00191C                     __ptext46:
  7027                           	callstack 0
  7028   00191C                     i2___wmul:
  7029                           	callstack 14
  7030   00191C  5001               	movf	i2___wmul@multiplier^0,w,c
  7031   00191E  0203               	mulwf	i2___wmul@multiplicand^0,c
  7032   001920  CFF3 F005          	movff	prodl,i2___wmul@product
  7033   001924  CFF4 F006          	movff	prodh,i2___wmul@product+1
  7034   001928  5001               	movf	i2___wmul@multiplier^0,w,c
  7035   00192A  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  7036   00192C  50F3               	movf	243,w,c
  7037   00192E  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7038   001930  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  7039   001932  0203               	mulwf	i2___wmul@multiplicand^0,c
  7040   001934  50F3               	movf	243,w,c
  7041   001936  2606               	addwf	(i2___wmul@product+1)^0,f,c
  7042   001938  C005  F001         	movff	i2___wmul@product,?i2___wmul
  7043   00193C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  7044   001940  0012               	return		;funcret
  7045   001942                     __end_ofi2___wmul:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function i2_TMR1_WriteTimer *****************
  7049 ;; Defined at:
  7050 ;;		line 121 in file "mcc_generated_files/tmr1.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  timerVal        2    0[COMRAM] unsigned short 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7064 ;;      Params:         2       0       0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0       0       0
  7066 ;;      Temps:          0       0       0       0       0       0       0
  7067 ;;      Totals:         2       0       0       0       0       0       0
  7068 ;;Total ram usage:        2 bytes
  7069 ;; Hardware stack levels used: 1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_myTMR1ISR
  7074 ;;		_TMR1_ISR
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text47
  7079   0018F4                     __ptext47:
  7080                           	callstack 0
  7081   0018F4                     i2_TMR1_WriteTimer:
  7082                           	callstack 19
  7083   0018F4                     
  7084                           ;mcc_generated_files/tmr1.c: 121: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 122: {;mcc_generated_files/tmr1.c: 123:     if (T1CONbits.T1SYNC == 1)
  7085   0018F4  A4CD               	btfss	205,2,c	;volatile
  7086   0018F6  EF7F  F00C         	goto	i2u183_41
  7087   0018FA  EF81  F00C         	goto	i2u183_40
  7088   0018FE                     i2u183_41:
  7089   0018FE  EF89  F00C         	goto	i2l2657
  7090   001902                     i2u183_40:
  7091   001902                     
  7092                           ;mcc_generated_files/tmr1.c: 124:     {;mcc_generated_files/tmr1.c: 126:         T1CONbi
      +                          ts.TMR1ON = 0;
  7093   001902  90CD               	bcf	205,0,c	;volatile
  7094   001904                     
  7095                           ;mcc_generated_files/tmr1.c: 129:         TMR1H = (uint8_t)(timerVal >> 8);
  7096   001904  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  7097   001906  6ECF               	movwf	207,c	;volatile
  7098   001908                     
  7099                           ;mcc_generated_files/tmr1.c: 130:         TMR1L = (uint8_t)timerVal;
  7100   001908  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  7101   00190C                     
  7102                           ;mcc_generated_files/tmr1.c: 133:         T1CONbits.TMR1ON =1;
  7103   00190C  80CD               	bsf	205,0,c	;volatile
  7104                           
  7105                           ;mcc_generated_files/tmr1.c: 134:     }
  7106   00190E  EF8D  F00C         	goto	i2l276
  7107   001912                     i2l2657:
  7108                           
  7109                           ;mcc_generated_files/tmr1.c: 136:     {;mcc_generated_files/tmr1.c: 138:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7110   001912  5002               	movf	(i2TMR1_WriteTimer@timerVal+1)^0,w,c
  7111   001914  6ECF               	movwf	207,c	;volatile
  7112   001916                     
  7113                           ;mcc_generated_files/tmr1.c: 139:         TMR1L = (uint8_t)timerVal;
  7114   001916  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
  7115   00191A                     i2l276:
  7116   00191A  0012               	return		;funcret
  7117   00191C                     __end_ofi2_TMR1_WriteTimer:
  7118                           	callstack 0
  7119                           
  7120                           	psect	text48
  7121   000000                     __ptext48:
  7122                           	callstack 0
  7123   000000                     
  7124                           	psect	rparam
  7125   000000                     
  7126                           	psect	temp
  7127   00005E                     btemp:
  7128                           	callstack 0
  7129   00005E                     	ds	1
  7130   000000                     int$flags	set	btemp
  7131   000000                     wtemp8	set	btemp+1
  7132   000000                     ttemp5	set	btemp+1
  7133   000000                     ttemp6	set	btemp+4
  7134   000000                     ttemp7	set	btemp+8
  7135                           
  7136                           	psect	idloc
  7137                           
  7138                           ;Config register IDLOC0 @ 0x200000
  7139                           ;	unspecified, using default values
  7140   200000                     	org	2097152
  7141   200000  FF                 	db	255
  7142                           
  7143                           ;Config register IDLOC1 @ 0x200001
  7144                           ;	unspecified, using default values
  7145   200001                     	org	2097153
  7146   200001  FF                 	db	255
  7147                           
  7148                           ;Config register IDLOC2 @ 0x200002
  7149                           ;	unspecified, using default values
  7150   200002                     	org	2097154
  7151   200002  FF                 	db	255
  7152                           
  7153                           ;Config register IDLOC3 @ 0x200003
  7154                           ;	unspecified, using default values
  7155   200003                     	org	2097155
  7156   200003  FF                 	db	255
  7157                           
  7158                           ;Config register IDLOC4 @ 0x200004
  7159                           ;	unspecified, using default values
  7160   200004                     	org	2097156
  7161   200004  FF                 	db	255
  7162                           
  7163                           ;Config register IDLOC5 @ 0x200005
  7164                           ;	unspecified, using default values
  7165   200005                     	org	2097157
  7166   200005  FF                 	db	255
  7167                           
  7168                           ;Config register IDLOC6 @ 0x200006
  7169                           ;	unspecified, using default values
  7170   200006                     	org	2097158
  7171   200006  FF                 	db	255
  7172                           
  7173                           ;Config register IDLOC7 @ 0x200007
  7174                           ;	unspecified, using default values
  7175   200007                     	org	2097159
  7176   200007  FF                 	db	255
  7177                           
  7178                           	psect	config
  7179                           
  7180                           ; Padding undefined space
  7181   300000                     	org	3145728
  7182   300000  FF                 	db	255
  7183                           
  7184                           ;Config register CONFIG1H @ 0x300001
  7185                           ;	Oscillator Selection bits
  7186                           ;	FOSC = INTIO67, Internal oscillator block
  7187                           ;	4X PLL Enable
  7188                           ;	PLLCFG = OFF, Oscillator used directly
  7189                           ;	Primary clock enable bit
  7190                           ;	PRICLKEN = ON, Primary clock enabled
  7191                           ;	Fail-Safe Clock Monitor Enable bit
  7192                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7193                           ;	Internal/External Oscillator Switchover bit
  7194                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7195   300001                     	org	3145729
  7196   300001  28                 	db	40
  7197                           
  7198                           ;Config register CONFIG2L @ 0x300002
  7199                           ;	Power-up Timer Enable bit
  7200                           ;	PWRTEN = OFF, Power up timer disabled
  7201                           ;	Brown-out Reset Enable bits
  7202                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7203                           ;	Brown Out Reset Voltage bits
  7204                           ;	BORV = 190, VBOR set to 1.90 V nominal
  7205   300002                     	org	3145730
  7206   300002  1F                 	db	31
  7207                           
  7208                           ;Config register CONFIG2H @ 0x300003
  7209                           ;	Watchdog Timer Enable bits
  7210                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7211                           ;	Watchdog Timer Postscale Select bits
  7212                           ;	WDTPS = 32768, 1:32768
  7213   300003                     	org	3145731
  7214   300003  3C                 	db	60
  7215                           
  7216                           ; Padding undefined space
  7217   300004                     	org	3145732
  7218   300004  FF                 	db	255
  7219                           
  7220                           ;Config register CONFIG3H @ 0x300005
  7221                           ;	CCP2 MUX bit
  7222                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7223                           ;	PORTB A/D Enable bit
  7224                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7225                           ;	P3A/CCP3 Mux bit
  7226                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7227                           ;	HFINTOSC Fast Start-up
  7228                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7229                           ;	Timer3 Clock input mux bit
  7230                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7231                           ;	ECCP2 B output mux bit
  7232                           ;	P2BMX = PORTB5, P2B is on RB5
  7233                           ;	MCLR Pin Enable bit
  7234                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7235   300005                     	org	3145733
  7236   300005  BF                 	db	191
  7237                           
  7238                           ;Config register CONFIG4L @ 0x300006
  7239                           ;	Stack Full/Underflow Reset Enable bit
  7240                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7241                           ;	Single-Supply ICSP Enable bit
  7242                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7243                           ;	Extended Instruction Set Enable bit
  7244                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7245                           ;	Background Debug
  7246                           ;	DEBUG = OFF, Disabled
  7247   300006                     	org	3145734
  7248   300006  85                 	db	133
  7249                           
  7250                           ; Padding undefined space
  7251   300007                     	org	3145735
  7252   300007  FF                 	db	255
  7253                           
  7254                           ;Config register CONFIG5L @ 0x300008
  7255                           ;	Code Protection Block 0
  7256                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7257                           ;	Code Protection Block 1
  7258                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7259                           ;	Code Protection Block 2
  7260                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7261                           ;	Code Protection Block 3
  7262                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7263   300008                     	org	3145736
  7264   300008  0F                 	db	15
  7265                           
  7266                           ;Config register CONFIG5H @ 0x300009
  7267                           ;	Boot Block Code Protection bit
  7268                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7269                           ;	Data EEPROM Code Protection bit
  7270                           ;	CPD = OFF, Data EEPROM not code-protected
  7271   300009                     	org	3145737
  7272   300009  C0                 	db	192
  7273                           
  7274                           ;Config register CONFIG6L @ 0x30000A
  7275                           ;	Write Protection Block 0
  7276                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7277                           ;	Write Protection Block 1
  7278                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7279                           ;	Write Protection Block 2
  7280                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7281                           ;	Write Protection Block 3
  7282                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7283   30000A                     	org	3145738
  7284   30000A  0F                 	db	15
  7285                           
  7286                           ;Config register CONFIG6H @ 0x30000B
  7287                           ;	Configuration Register Write Protection bit
  7288                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7289                           ;	Boot Block Write Protection bit
  7290                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7291                           ;	Data EEPROM Write Protection bit
  7292                           ;	WRTD = OFF, Data EEPROM not write-protected
  7293   30000B                     	org	3145739
  7294   30000B  E0                 	db	224
  7295                           
  7296                           ;Config register CONFIG7L @ 0x30000C
  7297                           ;	Table Read Protection Block 0
  7298                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7299                           ;	Table Read Protection Block 1
  7300                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7301                           ;	Table Read Protection Block 2
  7302                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7303                           ;	Table Read Protection Block 3
  7304                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7305   30000C                     	org	3145740
  7306   30000C  0F                 	db	15
  7307                           
  7308                           ;Config register CONFIG7H @ 0x30000D
  7309                           ;	Boot Block Table Read Protection bit
  7310                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7311   30000D                     	org	3145741
  7312   30000D  40                 	db	64
  7313                           tosu	equ	0xFFF
  7314                           tosh	equ	0xFFE
  7315                           tosl	equ	0xFFD
  7316                           stkptr	equ	0xFFC
  7317                           pclatu	equ	0xFFB
  7318                           pclath	equ	0xFFA
  7319                           pcl	equ	0xFF9
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           indf0	equ	0xFEF
  7327                           postinc0	equ	0xFEE
  7328                           postdec0	equ	0xFED
  7329                           preinc0	equ	0xFEC
  7330                           plusw0	equ	0xFEB
  7331                           fsr0h	equ	0xFEA
  7332                           fsr0l	equ	0xFE9
  7333                           wreg	equ	0xFE8
  7334                           indf1	equ	0xFE7
  7335                           postinc1	equ	0xFE6
  7336                           postdec1	equ	0xFE5
  7337                           preinc1	equ	0xFE4
  7338                           plusw1	equ	0xFE3
  7339                           fsr1h	equ	0xFE2
  7340                           fsr1l	equ	0xFE1
  7341                           bsr	equ	0xFE0
  7342                           indf2	equ	0xFDF
  7343                           postinc2	equ	0xFDE
  7344                           postdec2	equ	0xFDD
  7345                           preinc2	equ	0xFDC
  7346                           plusw2	equ	0xFDB
  7347                           fsr2h	equ	0xFDA
  7348                           fsr2l	equ	0xFD9
  7349                           status	equ	0xFD8

Data Sizes:
    Strings     529
    Constant    0
    Data        6
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    108     134
    BANK1           256     23      55
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1434$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1434$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 81
		 -> STR_28(CODE[14]), STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[5]), STR_23(CODE[14]), STR_22(CODE[81]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[22]), STR_18(CODE[33]), STR_17(CODE[31]), 
		 -> STR_16(CODE[39]), STR_15(CODE[29]), STR_14(CODE[32]), STR_13(CODE[24]), 
		 -> STR_12(CODE[21]), STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), 
		 -> STR_8(CODE[24]), STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), 
		 -> STR_4(CODE[15]), STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 81
		 -> STR_28(CODE[14]), STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[5]), STR_23(CODE[14]), STR_22(CODE[81]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[22]), STR_18(CODE[33]), STR_17(CODE[31]), 
		 -> STR_16(CODE[39]), STR_15(CODE[29]), STR_14(CODE[32]), STR_13(CODE[24]), 
		 -> STR_12(CODE[21]), STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), 
		 -> STR_8(CODE[24]), STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), 
		 -> STR_4(CODE[15]), STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 81
		 -> STR_28(CODE[14]), STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[5]), STR_23(CODE[14]), STR_22(CODE[81]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[22]), STR_18(CODE[33]), STR_17(CODE[31]), 
		 -> STR_16(CODE[39]), STR_15(CODE[29]), STR_14(CODE[32]), STR_13(CODE[24]), 
		 -> STR_12(CODE[21]), STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), 
		 -> STR_8(CODE[24]), STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), 
		 -> STR_4(CODE[15]), STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 81
		 -> STR_28(CODE[14]), STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[5]), STR_23(CODE[14]), STR_22(CODE[81]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[22]), STR_18(CODE[33]), STR_17(CODE[31]), 
		 -> STR_16(CODE[39]), STR_15(CODE[29]), STR_14(CODE[32]), STR_13(CODE[24]), 
		 -> STR_12(CODE[21]), STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), 
		 -> STR_8(CODE[24]), STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), 
		 -> STR_4(CODE[15]), STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1469$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 81
		 -> STR_28(CODE[14]), STR_27(CODE[17]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[5]), STR_23(CODE[14]), STR_22(CODE[81]), STR_21(CODE[21]), 
		 -> STR_20(CODE[21]), STR_19(CODE[22]), STR_18(CODE[33]), STR_17(CODE[31]), 
		 -> STR_16(CODE[39]), STR_15(CODE[29]), STR_14(CODE[32]), STR_13(CODE[24]), 
		 -> STR_12(CODE[21]), STR_11(CODE[7]), STR_10(CODE[15]), STR_9(CODE[33]), 
		 -> STR_8(CODE[24]), STR_7(CODE[33]), STR_6(CODE[5]), STR_5(CODE[45]), 
		 -> STR_4(CODE[15]), STR_3(CODE[9]), STR_2(CODE[22]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), myTMR1ISR(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), myTMR1ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    i2_printf->i2_vfprintf
    i2_vfprintf->i2_vfpfcnvrt
    i2_vfpfcnvrt->i2_xtoa
    i2_xtoa->i2_pad
    i2_pad->i2_fputs
    i2_fputs->i2_fputc
    i2_ctoa->i2_fputc
    i2_fputc->i2_putch
    i2_putch->i2_EUSART1_Write
    i2_atoi->i2___wmul

Critical Paths under _main in BANK0

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_ISR->_myTMR1ISR
    _myTMR1ISR->i2_printf
    i2_printf->i2_vfprintf

Critical Paths under _main in BANK1

    _main->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15371
                                             19 BANK1      4     4      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
                     _TMR1_ReadTimer
           _TMR1_SetInterruptHandler
                    _TMR1_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   13807
                                             13 BANK1      6     2      4
                     _TMR1_ReadTimer (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11211
                                            100 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   10633
                                             90 BANK0     10     4      6
                                              0 BANK1     13    13      0
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    4539
                                             55 BANK0     35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3793
                                             44 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1866
                                             37 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1809
                                             37 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1366
                                             28 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             27 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             26 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1454
                                             32 BANK0      9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             26 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             26 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     414
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_ReadTimer                                       8     6      2     102
                                             26 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             26 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         12    12      0    7234
                                             14 BANK0     12    12      0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0    7234
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                          _myTMR1ISR *
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _myTMR1ISR                                           8     8      0    7094
                                              6 BANK0      8     8      0
                  i2_TMR1_WriteTimer
                           i2_printf
 ---------------------------------------------------------------------------------
 (13) i2_printf                                            6     4      2    6917
                                              2 BANK0      4     2      2
                         i2_vfprintf
 ---------------------------------------------------------------------------------
 (14) i2_vfprintf                                          8     2      6    6789
                                             87 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                        i2_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (15) i2_vfpfcnvrt                                        25    19      6    6451
                                             64 COMRAM    23    17      6
                             i2_atoi
                             i2_ctoa
                            i2_fputc
                          i2_isdigit
                             i2_xtoa
 ---------------------------------------------------------------------------------
 (16) i2_xtoa                                             35    25     10    2724
                                             29 COMRAM    35    25     10
                              i2_pad
 ---------------------------------------------------------------------------------
 (17) i2_pad                                              11     5      6    2088
                                             18 COMRAM    11     5      6
                            i2_fputc
                            i2_fputs
 ---------------------------------------------------------------------------------
 (18) i2_fputs                                             7     3      4     986
                                             11 COMRAM     7     3      4
                            i2_fputc
 ---------------------------------------------------------------------------------
 (16) i2_ctoa                                              8     5      3    1039
                                             11 COMRAM     8     5      3
                            i2_fputc
 ---------------------------------------------------------------------------------
 (19) i2_fputc                                             9     5      4     706
                                              2 COMRAM     9     5      4
                            i2_putch
 ---------------------------------------------------------------------------------
 (20) i2_putch                                             1     1      0      62
                                              1 COMRAM     1     1      0
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (21) i2_EUSART1_Write                                     1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_atoi                                              9     7      2     886
                                              6 COMRAM     9     7      2
                           i2___wmul
                          i2_isdigit
                          i2_isspace
 ---------------------------------------------------------------------------------
 (17) i2_isspace                                           5     3      2     110
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           2     0      2      77
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_ReadTimer
   _TMR1_SetInterruptHandler
   _TMR1_WriteTimer
   _printf
     _TMR1_ReadTimer (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _fputc
         _isdigit
         _xtoa
           _pad
             _fputc
             _fputs
               _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _myTMR1ISR *
       i2_TMR1_WriteTimer
       i2_printf
         i2_vfprintf
           i2_vfpfcnvrt
             i2_atoi
               i2___wmul
               i2_isdigit
               i2_isspace
             i2_ctoa
               i2_fputc
                 i2_putch
                   i2_EUSART1_Write
             i2_fputc
             i2_isdigit
             i2_xtoa
               i2_pad
                 i2_fputc
                 i2_fputs
                   i2_fputc
     i2_TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     17      37       6       21.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6C      86       4       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITBIGSFRllhh       27      0       0      24        0.0%
BITBIGSFRllhl       26      0       0      25        0.0%
BITBIGSFRhlhhh      1D      0       0      16        0.0%
BITBIGSFRhlhll      13      0       0      18        0.0%
BITBIGSFRhh          D      0       0      15        0.0%
BITBIGSFRhlll        C      0       0      20        0.0%
BITBIGSFRhllhh       7      0       0      19        0.0%
BITBIGSFRlhhl        6      0       0      22        0.0%
BITBIGSFRlhl         6      0       0      23        0.0%
BITBIGSFRlhhh        1      0       0      21        0.0%
BITBIGSFRhlhhl       1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11A      26        0.0%
DATA                 0      0     11A      28        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 02 18:16:10 2023

                                            l50 08C6                                              l35 0708  
                                            l64 0954                             ___wmul@multiplicand 007C  
                                           l130 16E0                                             l230 17F6  
                                           l151 18A2                                             l138 19D6  
                                           l322 197E                                             l154 1984  
                                           l147 187A                                             l163 19E4  
                                           l316 19AC                                             l181 1A0C  
                                           l325 18CA                                             l157 1996  
                                           l262 184E                                             l175 1A02  
                                           l319 1970                                             l271 1962  
                                           l178 19F8                                             l194 1A20  
                                           l292 19EE                                             l276 1822  
                               _timer1ReloadVal 00D2                                             _pad 129A  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                           __end_ofi2_vfpfcnvrt 06F4                                            l1003 1878  
                                          l1100 1576                                            l1031 1326  
                                          l1033 1348                                            l1122 0EEA  
                                          l1044 10A6                                            l1028 12E2  
                                          l1125 0EF2                                            l1054 0A3E  
                                          l1151 148E                                            l1047 10EA  
                                          l1128 17C8                                            l1136 1654  
                                          l1056 0A46                                            l1049 110A  
                                          l1068 0BD4                                            l3103 19DC  
                                          l1159 160C                                            l1088 03D2  
                                          l3121 1446                                            l3113 13F8  
                                          l3123 147C                                            l3115 140C  
                                          l4011 09AC                                            l3301 160E  
                                          l3117 141E                                            l4013 013C  
                                          l3303 1614                                            l3119 1428  
                                          l4015 0388                                            l3305 1628  
                                          l4017 0E3E                                            l3401 108A  
                                          l3307 164A                                            l3411 10CC  
                                          l3163 15C6                                            l3309 164E  
                                          l3085 1984                                            l3413 10F8  
                                          l3405 109E                                            l3165 15D4  
                                          l3421 0A32                                            l3503 19E6  
                                          l3087 1992                                            l3407 10B2  
                                          l3167 15E6                                            l3431 0A8C  
                                          l3423 0A6E                                            l3415 0A06  
                                          l3511 00A0                                            l3505 19FA  
                                          l3273 18A4                                            l3409 10C6  
                                          l3169 15EC                                            l3281 12AA  
                                          l3441 0ACC                                            l3433 0A9C  
                                          l3425 0A76                                            l3417 0A16  
                                          l3521 00F2                                            l3513 00C4  
                                          l3507 19F0                                            l3275 18C2  
                                          l3291 1302                                            l3283 12BE  
                                          l3451 0B72                                            l3443 0AD2  
                                          l3435 0AAC                                            l3427 0A80  
                                          l3419 0A18                                            l3523 00F4  
                                          l3531 014A                                            l3515 00D2  
                                          l3701 188E                                            l3509 1A04  
                                          l3461 0DA6                                            l3293 1308  
                                          l3285 12CE                                            l3453 0B8C  
                                          l3445 0AD8                                            l3437 0AB8  
                                          l3429 0A86                                            l3541 01D6  
                                          l3533 015E                                            l3525 0106  
                                          l3517 00E0                                            l3703 189C  
                                          l3631 16DA                                            l3623 169C  
                                          l3711 194C                                            l3471 0E10  
                                          l3463 0DBC                                            l3391 103E  
                                          l3295 1334                                            l3287 12DA  
                                          l3279 129A                                            l3455 0BA6  
                                          l3439 0ABC                                            l3447 0B36  
                                          l3551 0262                                            l3543 01F6  
                                          l3535 0182                                            l3519 00E4  
                                          l3705 18A0                                            l3625 16B0  
                                          l3633 1A1E                                            l3641 1830  
                                          l3713 195A                                            l3297 179C  
                                          l3473 0E18                                            l3393 1052  
                                          l3289 12EE                                            l3449 0B54  
                                          l3457 0BB4                                            l3561 02D6  
                                          l3553 0296                                            l3537 01B8  
                                          l3529 0114                                            l3801 0944  
                                          l3627 16BE                                            l3651 1964  
                                          l3635 17CA                                            l3643 1838  
                                          l3483 0E8C                                            l3475 0E20  
                                          l3467 0DC0                                            l3395 105E  
                                          l3563 033A                                            l3571 0396  
                                          l3547 0204                                            l3539 01C8  
                                          l3811 096A                                            l3803 095A  
                                          l3731 0716                                            l3629 16CC  
                                          l3637 17F4                                            l3645 183A  
                                          l3709 1942                                            l3485 0EBC  
                                          l3477 0E54                                            l3469 0DDC  
                                          l3397 106A                                            l3557 02AA  
                                          l3549 023E                                            l3653 1526  
                                          l3813 096E                                            l3741 075C  
                                          l3733 0724                                            l3725 06F4  
                                          ?_pad 008C                                            l3647 183C  
                                          l3639 1824                                            l3671 19A8  
                                          l3663 1998                                            l3487 0ECE  
                                          l3399 1078                                            l3559 02BA  
                                          l3575 03A8                                            l3655 1532  
                                          l3815 0982                                            l3751 084E  
                                          l3743 076A                                            l3735 0732  
                                          l3727 06F8                                            l3649 184A  
                                          l3665 199C                                            l3681 1812  
                                          l3673 17F8                                            l3569 036A  
                                          l3657 1550                                            l3809 095E  
                                          l3761 0886                                            l3753 085A  
                                          l3745 0778                                            l3737 0740  
                                          l3729 0706                                            l3667 19A0  
                                          l3675 1806                                            l3683 1818  
                                          l3659 156C                                            l3771 08C8  
                                          l3763 0890                                            l3755 0864  
                                          l3819 0998                                            l3747 078C  
                                          l3739 074E                                            l3693 19C4  
                                          l3669 19A4                                            l3685 181E  
                                          l3677 1808                                            l3781 08FC  
                                          l3773 08D4                                            l3765 08A2  
                                          l3757 0870                                            l3749 0798  
                                          l3679 180E                                            l3687 1850  
                                          l3791 0930                                            l3783 08FE  
                                          l3775 08E8                                            l3767 08A8  
                                          l3759 087A                                            l3697 187A  
                                          l3689 185A                                            l3785 0912  
                                          l3777 08EC                                            l3769 08BC  
                                          l3699 1888                                            l3787 091A  
                                          l3779 08EE                                            l3797 0934  
                                          l3789 0920                                            l3799 0940  
                                          STR_1 7FD9                                            STR_2 7F55  
                                          STR_3 7FE4                                            STR_4 7FBB  
                                          STR_5 7E3E                                            STR_6 7FF9  
                                          STR_7 7E92                                            STR_8 7F27  
                                          STR_9 7E92                                            u2100 1992  
                                          u2101 198E                                            u3000 0716  
                                          u3001 0712                                            u3010 078C  
                                          u3011 0788                                            u3020 08A2  
                                          u3021 089E                                            _LATA 000F89  
                                          u3030 08BC                                            _LATB 000F8A  
                                          u3031 08B8                                            _LATC 000F8B  
                                          u2160 140C                                            u3040 08E8  
                                          u2161 1408                                            u3041 08E4  
                                          u2170 141E                                            u3050 0912  
                                          u2171 141A                                            u3051 090E  
                                          u2500 17C4                                            u2180 1446  
                                          u2260 160C                                            u3060 0954  
                                          u2181 1442                                            u2261 1608  
                                          u3061 0950                                            u2510 1628  
                                          u2190 147C                                            u3070 097E  
                                          u2511 1624                                            u2191 1478  
                                          u3071 097A                                            u2520 164A  
                                          u2600 1052                                            u2521 1646  
                                          u2601 104E                                            u2610 1078  
                                          u2450 12AA                                            u2611 1074  
                                          u2451 12A6                                            u2620 109A  
                                          u2460 12CE                                            u2700 0B72  
                                          u2621 1096                                            u2461 12CA  
                                          u2701 0B6E                                            u2630 10EA  
                                          u2470 1326                                            u2710 0B8C  
                                          u2631 10E6                                            u2471 1322  
                                          u2711 0B88                                            u2640 10F8  
                                          u2480 1334                                            u2720 0BA6  
                                          u2800 015E                                            u2641 10F4  
                                          u2481 1330                                            u2721 0BA2  
                                          u2801 015A                                            u2490 17C2  
                                          u2730 0BB4                                            u2650 0A16  
                                          u2810 0182                                            u2491 17BC  
                                          u2731 0BB0                                            u2651 0A12  
                                          u2811 017E                                            u2740 0DDC  
                                          u2660 0A32                                            u2820 01C8  
                                          u2741 0DD8                                            u2661 0A2E  
                                          u2821 01C4                                            u2750 0E0C  
                                          u2670 0A9C                                            u2830 023E  
                                          u2751 0E08                                            u2671 0A98  
                                          u2831 023A                                            u2920 197E  
                                          u2760 0EBC                                            u2680 0B10  
                                          u2840 0262                                            u2921 197A  
                                          u2761 0EB8                                            u2841 025E  
                                          u2770 0ECE                                            u2690 0B54  
                                          u2850 02D6                                            u2930 156C  
                                          u2771 0ECA                                            u2691 0B50  
                                          u2851 02D2                                            u2931 1568  
                                          u2940 1806                                            u2941 1802  
                                          u2685 0AFE                                            u2950 19D4  
                                          u2790 00C4                                            u2951 19CE  
                                          u2791 00C0                                            u2960 1888  
                                          u2961 1884                                            u2970 189C  
                                          u2971 1898                                            u2956 19D6  
                                          i2l80 1214                                            i2l87 1298  
                                          _TMR1 000FCE                                            _WPUB 000F61  
                                 _EUSART1_Write 1980                                            _dbuf 0100  
                                          _atoi 0DA6                                            _ctoa 103E  
                                          _main 06F4                                   ?_EUSART1_Read 0001  
                                          _prec 00CE                                            pad@i 0093  
                                          pad@p 0090                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0095  
                                          fsr2l 000FD9                                            btemp 005E  
                                          _xtoa 0A06                                            prodh 000FF4  
                                          prodl 000FF3                                            start 009C  
                               __end_ofi2_fputc 1526                                 __end_ofi2_fputs 1726  
                               __end_ofi2_putch 1A18                      ??_TMR1_SetInterruptHandler 007C  
                                  ___param_bank 000000                                           ??_pad 0092  
                                    i2_vfprintf 1578                   __end_of_OSCILLATOR_Initialize 1980  
                                         ?_atoi 0080                                           ?_ctoa 0085  
                                         ?_main 0001                                           STR_10 7FCA  
                                         STR_11 7FED                                           STR_12 7F95  
                                         STR_20 7F6B                                           STR_21 7F80  
                                         STR_13 7F0F                                           STR_14 7EB3  
                                         STR_22 7DED                                           STR_23 7EE4  
                                         STR_15 7EF2                                           STR_24 7FF4  
                                         STR_16 7E6B                                           STR_25 7EB0  
                                         STR_17 7ED3                                           STR_26 7EB0  
                                         STR_18 7E92                                           STR_27 7FAA  
                                         STR_19 7F3F                                           STR_28 7EE4  
                                         ?_xtoa 0097                                           _T1CON 000FCD  
                                         i2l203 0068                                           i2l154 19B0  
                                         i2l163 1A16                                           i2l325 1940  
                                         i2l157 19C2                                           i2l276 191A  
                                         i2l295 1A22                                           i2l289 1762  
                                  vfpfcnvrt@fmt 00BC                                           _TMR1H 000FCF  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                         i2_pad 134A                                __end_of_TMR1_ISR 1764  
                                    i2isdigit@c 0001                                           _flags 00DA  
                                         _fputc 13F8                                           _fputs 15C6  
                               __end_of_isdigit 17CA                                           atoi@n 0087  
                                         pad@fp 008C                                           atoi@s 0080  
                                         _width 00CC                                           ctoa@c 0087  
                                         _putch 19D8                                           ctoa@l 0089  
                                         ctoa@w 008B                                           main@i 0136  
                               __end_of_isspace 1656                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 1850                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                              __end_ofi2___wmul 1942                                  ??_EUSART1_Read 007A  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         ttemp5 005F                                           ttemp6 0062  
                                         ttemp7 0066                                           status 000FD8  
                                    i2isspace@c 0001                                           wtemp8 005F  
                                         xtoa@c 00B9                                           xtoa@d 0099  
                                         xtoa@i 00B7                                           xtoa@n 00AF  
                                         xtoa@p 00AB                                           xtoa@w 00AD  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 17F8  
                              __end_ofi2_printf 18F4                                 __initialization 1656  
                                  __end_of_atoi 0EF4                                    __end_of_ctoa 110C  
                    __end_of_EUSART1_Initialize 16E2                                    __end_of_main 0A06  
                                    i2printf@ap 0064                                    __end_of_xtoa 0BD6  
                   ?_INTERRUPT_InterruptManager 0001                                     i2_vfpfcnvrt 03D4  
                                 i2vfpfcnvrt@ap 0045                                   i2vfpfcnvrt@cp 0056  
                                 i2vfpfcnvrt@fp 0041                                     i2_xtoa$1512 0030  
                                        ??_atoi 0082                                          ??_ctoa 0088  
                                        ??_main 0133                                          ??_xtoa 00A1  
                                 __activetblptr 000002                                          ?i2_pad 0013  
                                        ?_fputc 007C                                          ?_fputs 0085  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 007A  
                                        i2l1003 18F2                                          i2l1100 15C4  
                                        i2l1031 13D2                                          i2l1033 13F6  
                                        i2l1122 1034                                          i2l1044 1172  
                                        i2l1028 1390                                          i2l1125 103C  
                                        i2l1054 0C0E                                          i2l1151 1524  
                                        i2l1047 11B4                                          i2l1128 1A24  
                                        i2l1136 179A                                          i2l1056 0C16  
                                        i2l1049 11D6                                          i2l1068 0DA4  
                                        i2l1159 1724                                          i2l3111 1704  
                                        i2l1088 06F2                                          i2l3105 16E2  
                                        i2l3201 0C02                                          i2l3107 16EE  
                                        i2l3211 0C5C                                          i2l3203 0C3E  
                                        i2l3109 1700                                          i2l3141 1388  
                                        i2l3133 134A                                          i2l3221 0C9C  
                                        i2l3213 0C6C                                          i2l3205 0C46  
                                        i2l4021 06AA                                          i2l3127 191C  
                                        i2l3151 1A24                                          i2l4023 0F8A  
                                        i2l3143 139C                                          i2l3135 135A  
                                        i2l3231 0D40                                          i2l3223 0CA2  
                                        i2l3215 0C7C                                          i2l3207 0C50  
                                        i2l3129 1938                                          i2l3153 1764  
                                        i2l3241 0EF4                                          i2l3081 19BE  
                                        i2l3145 13B0                                          i2l3137 136E  
                                        i2l3233 0D5A                                          i2l3225 0CA8  
                                        i2l3217 0C88                                          i2l3209 0C56  
                                        i2l3321 0418                                          i2l3313 03D4  
                                        i2l3155 1764                                          i2l3251 0F5C  
                                        i2l3243 0F08                                          i2l3083 1A10  
                                        i2l3091 14A2                                          i2l3171 110C  
                                        i2l3147 13B4                                          i2l3139 137C  
                                        i2l3235 0D74                                          i2l3219 0C8C  
                                        i2l3227 0D06                                          i2l4019 046C  
                                        i2l3331 0446                                          i2l3323 0424  
                                        i2l3315 03F8                                          i2l3157 1778  
                                        i2l3253 0F64                                          i2l3093 14B4  
                                        i2l3181 1158                                          i2l3173 1120  
                                        i2l3149 13E2                                          i2l3229 0D22  
                                        i2l3237 0D84                                          i2l3341 04F6  
                                        i2l3325 0428                                          i2l3333 047A  
                                        i2l3317 0406                                          i2l3159 179A  
                                        i2l3263 0FD6                                          i2l3255 0F6C  
                                        i2l3247 0F0C                                          i2l3079 19B0  
                                        i2l3095 14BE                                          i2l3191 1196  
                                        i2l3175 112C                                          i2l3351 056A  
                                        i2l3343 0504                                          i2l3335 048C  
                                        i2l3327 043A                                          i2l3319 0414  
                                        i2l3265 1006                                          i2l3257 0FA0  
                                        i2l3249 0F28                                          i2l3097 14DC  
                                        i2l3089 1490                                          i2l3193 11C4  
                                        i2l3185 116A                                          i2l3177 1138  
                                        i2l3361 05E4                                          i2l3353 058E  
                                        i2l3345 0524                                          i2l3337 04B0  
                                        i2l3601 11EA                                          i2l2651 1904  
                                        i2l3267 1018                                          i2l3099 1512  
                                        i2l3187 117E                                          i2l3179 1146  
                                        i2l3195 0BD6                                          i2l3371 068C  
                                        i2l3363 0600                                          i2l3355 05C0  
                                        i2l3339 04E6                                          i2l3611 1218  
                                        i2l3603 11EC                                          i2l2653 1908  
                                        i2l3189 1192                                          i2l3197 0BE6  
                                        i2l3365 065C                                          i2l3373 06B8  
                                        i2l3349 0532                                          i2l3621 1296  
                                        i2l3613 1228                                          i2l3605 11FE  
                                        i2l2655 190C                                          i2l2647 18F4  
                                        i2l3199 0BE8                                          i2l3359 05D4  
                                        i2l3615 1254                                          i2l3607 1200  
                                        i2l2649 1902                                          i2l2657 1912  
                                        i2l3377 06CA                                          i2l3617 127A  
                                        i2l3609 1210                                          i2l3721 1734  
                                        i2l2659 1916                                          i2l3619 128A  
                                        i2l3723 1748                                          i2l3493 1578  
                                        i2l3717 1726                                          i2l3495 1584  
                                        i2l3719 1728                                          i2l3831 003A  
                                        i2l3497 15A0                                          i2l3593 18CC  
                                        i2l3833 0048                                          i2l3499 15BC  
                                        i2l3595 18D6                                          i2l3835 0056  
                                        i2l3837 0064                                          i2l3599 11D8  
                                 i2putch@txData 0002                                       ??i2_fputc 0007  
                                        _RCREG1 000FAE                                       ??i2_fputs 0010  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 0129  
                                        _SPBRG1 000FAF                                       ??i2_putch 0002  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                        i2_atoi 0EF4                                          i2_ctoa 110C  
                                        i2pad@i 001A                                          i2pad@p 0017  
                                        i2pad@w 001C                                          i2_xtoa 0BD6  
          __end_of_TMR1_DefaultInterruptHandler 1A24                    _TMR1_DefaultInterruptHandler 1A22  
                                  vfprintf@cfmt 00CA                                   i2vfprintf@fmt 005A  
                                        ___wmul 18A4                                     ?i2_vfprintf 0058  
                      ?_EUSART1_SetErrorHandler 007A                                          clear_0 167C  
                                        clear_1 1688                                          isa$std 000001  
                                        _printf 1850                                          pad@buf 008E  
              ??_EUSART1_SetOverrunErrorHandler 007C                 ?_EUSART1_SetOverrunErrorHandler 007A  
                                        ctoa@fp 0085                               ??i2_EUSART1_Write 0001  
                                        fputc@c 007C                                          fputs@c 0089  
                                        fputs@i 008A                                          fputs@s 0085  
                                     ??_isdigit 007C                                    __mediumconst 7DEC  
                                     ??_isspace 007C                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1578                                 ??_EUSART1_Write 007A  
      TMR1_SetInterruptHandler@InterruptHandler 007A                         __end_of_TMR1_WriteTimer 1824  
                                        xtoa@fp 0097                             myTMR1ISR@halfPeriod 0068  
                              ?_TMR1_Initialize 0001                               __end_ofi2_isdigit 1A26  
                             _SYSTEM_Initialize 1998                                      __accesstop 0060  
                       __end_of__initialization 168E                               __end_ofi2_isspace 179C  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                                 __end_ofi2_pad 13F8                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 1A18                             ??_SYSTEM_Initialize 007C  
                                     ?_TMR1_ISR 0001                 fp__TMR1_DefaultInterruptHandler 0000  
                 ?_TMR1_DefaultInterruptHandler 0001                                   __end_of_fputc 1490  
                                 __end_of_fputs 160E                                   __end_of_putch 19E6  
                                   i2printf@fmt 0062                            __end_of_EUSART1_Read 18A4  
                                     ?i2___wmul 0001                                  _doSomethingBad 00DD  
                                       ??i2_pad 0019                                  i2vfpfcnvrt@fmt 0043  
                                     ?i2_printf 0062                           i2EUSART1_Write@txData 0001  
                                       ??_fputc 0080                       __end_of_SYSTEM_Initialize 19AE  
                                       ??_fputs 0089                                         ??_putch 007B  
                                    __pbssBANK0 00CC                                      __pbssBANK1 0100  
                                       ?i2_atoi 0007                                         ?i2_ctoa 000C  
                                       ?i2_xtoa 001E                 __end_of_EUSART1_SetErrorHandler 1A0E  
                                       ?___wmul 007A                                      ??_TMR1_ISR 005E  
                                       ?_printf 012D          __end_of_EUSART1_SetFramingErrorHandler 1A04  
                _EUSART1_SetFramingErrorHandler 19FA                                      ??i2___wmul 0005  
                                       _OSCCON2 000FD2                                      ??i2_printf 005E  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                              ?_TMR1_WriteTimer 007A                                         i2_fputc 1490  
                                       i2_fputs 16E2                                         i2atoi@n 000E  
                                       i2pad@fp 0013                                         i2atoi@s 0007  
                                       i2ctoa@c 000E                                         i2_putch 1A0E  
                                       i2ctoa@l 0010                                         i2ctoa@w 0012  
                                       i2xtoa@c 0040                                         i2xtoa@d 0020  
                                       i2xtoa@i 003E                                         i2xtoa@n 0036  
                                       i2xtoa@p 0032                                         i2xtoa@w 0034  
                                       __Hparam 0000                                         __Lparam 0000  
                             __end_of_myTMR1ISR 129A                                       ?_vfprintf 00C4  
                                i2vfprintf@cfmt 0060                             _EUSART1_is_rx_ready 19C4  
                                  ?i2_vfpfcnvrt 0041                                         __pcinit 1656  
                                       __ramtop 0600                        TMR1_ReadTimer@readValLow 0081  
                                       __ptext0 06F4                                         __ptext1 1850  
                                       __ptext2 1526                                         __ptext3 00A0  
                                       __ptext4 0A06                                         __ptext5 129A  
                                       __ptext6 15C6                                         __ptext7 103E  
                                       __ptext8 13F8                                         __ptext9 19D8  
                                       _incNote 00DE                  ??_TMR1_DefaultInterruptHandler 0001  
                     TMR1_ReadTimer@readValHigh 0080                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 1964                                         _isdigit 179C  
                            _EUSART1_Initialize 169C                        ??_PIN_MANAGER_Initialize 007A  
                                       _isspace 160E                       ?_TMR1_SetInterruptHandler 007A  
                                       atoi@neg 0085                                         main@cmd 0135  
                          end_of_initialization 168E                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 007E  
                                 __Lmediumconst 7DEC                     _EUSART1_OverrunErrorHandler 00D6  
                                       fputs@fp 0087                             i2___wmul@multiplier 0001  
                               i2_EUSART1_Write 19AE                               __end_of_vfpfcnvrt 03D4  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                vfpfcnvrt@convarg 0120  
                                  ??i2_vfprintf 005E                                      ??_vfprintf 00CA  
                          ??_EUSART1_Initialize 007C                                  _TMR1_ReadTimer 1942  
                           EUSART1_Write@txData 007A                           ??_EUSART1_is_rx_ready 007A  
                            __end_ofi2_vfprintf 15C6                                    _EUSART1_Read 187A  
                                     i2_isdigit 1A24                                  __end_ofi2_atoi 103E  
                                __end_ofi2_ctoa 11D8                                       i2_isspace 1764  
                                __end_ofi2_xtoa 0DA6                                       i2atoi@neg 000C  
                  __end_of_INTERRUPT_Initialize 1A22                       i2TMR1_WriteTimer@timerVal 0001  
                                   vfpfcnvrt@ap 00BE                                     vfpfcnvrt@cp 012B  
                                   vfpfcnvrt@fp 00BA                                  __end_of___wmul 18CC  
                                     i2fputc@fp 0005                          ?_OSCILLATOR_Initialize 0001  
                                     i2fputs@fp 000E                          __end_of_TMR1_ReadTimer 1964  
                              i2___wmul@product 0005                                  __end_of_printf 187A  
                           start_initialization 1656                                     __end_of_pad 134A  
                                  i2vfpfcnvrt@c 0053                                     putch@txData 007B  
                         __end_of_EUSART1_Write 1998                         __end_ofi2_EUSART1_Write 19C4  
                                      ??i2_atoi 0009                                        ??i2_ctoa 000F  
                                      ??i2_xtoa 0028                                      ?i2_isdigit 0001  
                                    ?i2_isspace 0001                                     vfprintf@fmt 00C6  
                                  i2vfprintf@ap 005C                                 i2vfpfcnvrt@done 0054  
                                  i2vfprintf@fp 0058                                        ??___wmul 007E  
                                   __pdataBANK0 00E0                                        ??_printf 00CC  
                               ?_TMR1_ReadTimer 007A                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 0120                                  myTMR1ISR@F6122 00E0  
                                      ?i2_fputc 0003                                        ?i2_fputs 000C  
              ??_EUSART1_SetFramingErrorHandler 007C                 ?_EUSART1_SetFramingErrorHandler 007A  
                                      ?i2_putch 0001                          _PIN_MANAGER_Initialize 17CA  
                                     __pintcode 0008                __end_of_TMR1_SetInterruptHandler 19F0  
                                 __pmediumconst 7DEC                    ??_INTERRUPT_InterruptManager 006E  
                            myTMR1ISR@noteIndex 00DC                                       _myTMR1ISR 11D8  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 007A                            _EUSART1_ErrorHandler 00D4  
                                      ?_isspace 007A                         _EUSART1_SetErrorHandler 1A04  
                          _INTERRUPT_Initialize 1A1E                                ?i2_EUSART1_Write 0001  
                                ___wmul@product 007E                                        _LATAbits 000F89  
       EUSART1_SetErrorHandler@interruptHandler 007A                                        _LATBbits 000F8A  
                                      _PIE1bits 000F9D                                     ??i2_isdigit 0003  
                                      i2u211_40 14A2                                        i2u211_41 149E  
                                      i2u212_40 14B4                                        i2u220_40 135A  
                                      i2u212_41 14B0                                        i2u220_41 1356  
                                      i2u213_40 14DC                                        i2u221_40 137C  
                                      i2u213_41 14D8                                        i2u221_41 1378  
                                      i2u214_40 1512                                        i2u230_40 11B4  
                                      i2u222_40 13D2                                        i2u310_40 0064  
                                      i2u214_41 150E                                        i2u230_41 11B0  
                                      i2u222_41 13CE                                        i2u310_41 0060  
                                   ??i2_isspace 0003                                        i2u231_40 11C4  
                                      i2u215_40 1724                                        i2u223_40 13E2  
                                      i2u231_41 11C0                                        i2u215_41 1720  
                                      i2u223_41 13DE                                        i2u224_40 1778  
                                      i2u240_40 0D84                                        i2u232_40 0BE6  
                                      i2u224_41 1774                                        i2u240_41 0D80  
                                      i2u232_41 0BE2                                        i2u225_40 179A  
                                      i2u241_40 0F28                                        i2u209_40 19BE  
                                      i2u233_40 0C02                                        i2u225_41 1796  
                                      i2u241_41 0F24                                        i2u209_41 19BA  
                                      i2u233_41 0BFE                                        i2u242_40 0F58  
                                      i2u234_40 0C6C                                        i2u242_41 0F54  
                                      i2u234_41 0C68                                        i2u243_40 1006  
                                      i2u227_40 1120                                        i2u235_40 0CE0  
                                      i2u243_41 1002                                        i2u227_41 111C  
                                      i2u235_45 0CCE                                        i2u244_40 1018  
                                      i2u228_40 1146                                        i2u236_40 0D22  
                                      i2u308_40 0048                                        i2u244_41 1014  
                                      i2u228_41 1142                                        i2u236_41 0D1E  
                                      i2u308_41 0044                                        i2u229_40 1166  
                                      i2u237_40 0D40                                        i2u253_40 03F8  
                                      i2u309_40 0056                                        i2u229_41 1162  
                                      i2u237_41 0D3C                                        i2u253_41 03F4  
                                      i2u309_41 0052                                        i2u238_40 0D5A  
                                      i2u254_40 048C                                        i2u238_41 0D56  
                                      i2u254_41 0488                                        i2u183_40 1902  
                                      i2u239_40 0D74                                        i2u255_40 04B0  
                                      i2u183_41 18FE                                        i2u239_41 0D70  
                                      i2u255_41 04AC                                        i2u256_40 04F6  
                                      i2u256_41 04F2                                        i2u257_40 056A  
                                      i2u257_41 0566                                        _PIR1bits 000F9E  
                                      i2u258_40 058E                                        i2u290_40 1264  
                                      i2u258_41 058A                                        i2u290_41 125E  
                                      i2u290_46 1266                                        i2u259_40 0600  
                                      i2u291_40 128A                                        i2u259_41 05FC  
                                      i2u291_41 1286                                        i2u278_40 15BC  
                                      i2u278_41 15B8                                        i2u286_41 11E2  
                                      i2u287_40 11FE                                        i2u287_41 11FA  
                                      i2u288_40 1210                                        i2u288_41 120C  
                                      i2u289_40 1228                                        i2u289_41 1224  
                                      i2u298_40 1748                                        i2u298_41 1744  
                                      i2u299_48 174E                                        i2u299_49 1762  
                                      _RCONbits 000FD0                                        _TMR1_ISR 1726  
                                     _vfpfcnvrt 00A0                                       _xtoa$1512 00A9  
                             ??_TMR1_Initialize 007C                               ___wmul@multiplier 007A  
                                    ?_myTMR1ISR 0001                                        i2___wmul 191C  
                                      i2_printf 18CC                                    _isspace$1560 007E  
                                      i2pad@buf 0015                                        i2ctoa@fp 000C  
                                    vfpfcnvrt@c 0128                                     _INTCON2bits 000FF1  
                                     copy_data0 166A                                        i2fputc@c 0003  
                         ?_INTERRUPT_Initialize 0001                                        i2fputs@c 0010  
                                      i2fputs@i 0011                                        i2fputs@s 000C  
                                      i2xtoa@fp 001E                                        __Hrparam 0000  
                             i2_TMR1_WriteTimer 18F4                                      vfprintf@ap 00C8  
                                      __Lrparam 0000                                      vfprintf@fp 00C4  
                         TMR1_ReadTimer@readVal 007E                              ?i2_TMR1_WriteTimer 0001  
                       ??_OSCILLATOR_Initialize 007A                           i2___wmul@multiplicand 0003  
                                    ?_vfpfcnvrt 00BA                        _TMR1_SetInterruptHandler 19E6  
                           ??i2_TMR1_WriteTimer 0003                              i2vfpfcnvrt@convarg 004B  
                         _TMR1_InterruptHandler 00D0                       ??_EUSART1_SetErrorHandler 007C  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 19D8  
                                      __ptext10 1980                                        __ptext11 0DA6  
                                      __ptext20 17CA                                        __ptext12 160E  
                                      __ptext21 1964                                        __ptext13 179C  
                                    _T1GCONbits 000FCC                                        __ptext30 1726  
                                      __ptext22 1A1E                                        __ptext14 18A4  
                                      __ptext31 1A22                                        __ptext23 169C  
                                      __ptext15 17F8                                        __ptext40 1490  
                                      __ptext32 11D8                                        __ptext24 19F0  
                                      __ptext16 1942                                        __ptext41 1A0E  
                                      __ptext33 18CC                                        __ptext25 19FA  
                                      __ptext17 1998                                        __ptext42 19AE  
                                      __ptext34 1578                                        __ptext26 1A04  
                                      __ptext18 1824                                        __ptext43 0EF4  
                                      __ptext35 03D4                                        __ptext27 19C4  
                                      __ptext19 19E6                                        __ptext44 1764  
                                      __ptext36 0BD6                                        __ptext28 187A  
                                      __ptext45 1A24                                        __ptext37 134A  
                                      __ptext46 191C                                        __ptext38 16E2  
                                      __ptext47 18F4                                        __ptext39 110C  
                                      __ptext48 0000                       __end_ofi2_TMR1_WriteTimer 191C  
                                      _playNote 00DF  EUSART1_SetOverrunErrorHandler@interruptHandler 007A  
                                      isa$xinst 000000                                ??_TMR1_ReadTimer 007C  
                                      int$flags 005E                                        _vfprintf 1526  
            __end_of_INTERRUPT_InterruptManager 009C                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 012D                               ??_TMR1_WriteTimer 007C  
                   _EUSART1_FramingErrorHandler 00D8                                     ??_myTMR1ISR 0066  
                                    _INTCONbits 000FF2                                        isdigit@c 007A  
                        ??_INTERRUPT_Initialize 007A                                        intlevel2 0000  
                                      isspace@c 007A                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 19FA                  _EUSART1_SetOverrunErrorHandler 19F0  
                                    _RCSTA1bits 000FAB                                        printf@ap 0131  
EUSART1_SetFramingErrorHandler@interruptHandler 007A                                   ??i2_vfpfcnvrt 0047  
                                   ??_vfpfcnvrt 00C0                              _eusart1RxLastError 00DB  
                __end_of_PIN_MANAGER_Initialize 17F8                                 _TMR1_Initialize 1824  
                                  fp__myTMR1ISR 0000  
