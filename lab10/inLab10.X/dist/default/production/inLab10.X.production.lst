

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 23 20:56:55 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Generated 09/02/2023 GMT
    48                           ; 
    49                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F25K22 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000000                     
    82 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    83   000000                     
    84 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    85   000000                     
    86 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    87   000000                     
    88                           	psect	idataBANK0
    89   006D24                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for main@F6116
    93   006D24  80                 	db	128
    94   006D25  99                 	db	153
    95   006D26  B1                 	db	177
    96   006D27  C7                 	db	199
    97   006D28  DB                 	db	219
    98   006D29  EA                 	db	234
    99   006D2A  F6                 	db	246
   100   006D2B  FE                 	db	254
   101   006D2C  FF                 	db	255
   102   006D2D  FE                 	db	254
   103   006D2E  F6                 	db	246
   104   006D2F  EA                 	db	234
   105   006D30  DB                 	db	219
   106   006D31  C7                 	db	199
   107   006D32  B1                 	db	177
   108   006D33  99                 	db	153
   109   006D34  80                 	db	128
   110   006D35  67                 	db	103
   111   006D36  4F                 	db	79
   112   006D37  39                 	db	57
   113   006D38  25                 	db	37
   114   006D39  16                 	db	22
   115   006D3A  0A                 	db	10
   116   006D3B  02                 	db	2
   117   006D3C  00                 	db	0
   118   006D3D  02                 	db	2
   119   006D3E  0A                 	db	10
   120   006D3F  16                 	db	22
   121   006D40  25                 	db	37
   122   006D41  39                 	db	57
   123   006D42  4F                 	db	79
   124   006D43  67                 	db	103
   125   000000                     _ANSELA	set	3896
   126   000000                     _ANSELB	set	3897
   127   000000                     _ANSELC	set	3898
   128   000000                     _TXREG1	set	4013
   129   000000                     _RCREG1	set	4014
   130   000000                     _SPBRG1	set	4015
   131   000000                     _TXSTA1	set	4012
   132   000000                     _BAUDCON1	set	4024
   133   000000                     _TMR0L	set	4054
   134   000000                     _TMR0H	set	4055
   135   000000                     _CCPTMRS0bits	set	3913
   136   000000                     _CCPR1L	set	4030
   137   000000                     _CCPR1H	set	4031
   138   000000                     _PSTR1CON	set	4025
   139   000000                     _PWM1CON	set	4023
   140   000000                     _CCP1CON	set	4029
   141   000000                     _PIR1bits	set	3998
   142   000000                     _TMR2	set	4028
   143   000000                     _PR2	set	4027
   144   000000                     _RCSTA1bits	set	4011
   145   000000                     _TXSTA1bits	set	4012
   146   000000                     _T0CON	set	4053
   147   000000                     _T2CONbits	set	4026
   148   000000                     _PLLRDY	set	32407
   149   000000                     _RCSTA1	set	4011
   150   000000                     _ECCP1AS	set	4022
   151   000000                     _T2CON	set	4026
   152   000000                     _OSCCON2	set	4050
   153   000000                     _OSCCON	set	4051
   154   000000                     _T0CONbits	set	4053
   155   000000                     _WPUB	set	3937
   156   000000                     _LATA	set	3977
   157   000000                     _OSCTUNE	set	3995
   158   000000                     _INTCON2bits	set	4081
   159   000000                     _INTCONbits	set	4082
   160   000000                     _SPBRGH1	set	4016
   161   000000                     _TRISA	set	3986
   162   000000                     _LATC	set	3979
   163   000000                     _LATB	set	3978
   164   000000                     _TRISC	set	3988
   165   000000                     _TRISB	set	3987
   166                           
   167                           	psect	mediumconst
   168   007CD6                     __pmediumconst:
   169                           	callstack 0
   170   007CD6  00                 	db	0
   171   007CD7                     STR_24:
   172   007CD7  43                 	db	67	;'C'
   173   007CD8  75                 	db	117	;'u'
   174   007CD9  72                 	db	114	;'r'
   175   007CDA  72                 	db	114	;'r'
   176   007CDB  65                 	db	101	;'e'
   177   007CDC  6E                 	db	110	;'n'
   178   007CDD  74                 	db	116	;'t'
   179   007CDE  6C                 	db	108	;'l'
   180   007CDF  79                 	db	121	;'y'
   181   007CE0  20                 	db	32
   182   007CE1  67                 	db	103	;'g'
   183   007CE2  65                 	db	101	;'e'
   184   007CE3  6E                 	db	110	;'n'
   185   007CE4  65                 	db	101	;'e'
   186   007CE5  72                 	db	114	;'r'
   187   007CE6  61                 	db	97	;'a'
   188   007CE7  74                 	db	116	;'t'
   189   007CE8  69                 	db	105	;'i'
   190   007CE9  6E                 	db	110	;'n'
   191   007CEA  67                 	db	103	;'g'
   192   007CEB  20                 	db	32
   193   007CEC  61                 	db	97	;'a'
   194   007CED  20                 	db	32
   195   007CEE  31                 	db	49	;'1'
   196   007CEF  30                 	db	48	;'0'
   197   007CF0  30                 	db	48	;'0'
   198   007CF1  25                 	db	37
   199   007CF2  25                 	db	37
   200   007CF3  20                 	db	32
   201   007CF4  64                 	db	100	;'d'
   202   007CF5  75                 	db	117	;'u'
   203   007CF6  74                 	db	116	;'t'
   204   007CF7  79                 	db	121	;'y'
   205   007CF8  20                 	db	32
   206   007CF9  63                 	db	99	;'c'
   207   007CFA  79                 	db	121	;'y'
   208   007CFB  63                 	db	99	;'c'
   209   007CFC  6C                 	db	108	;'l'
   210   007CFD  65                 	db	101	;'e'
   211   007CFE  20                 	db	32
   212   007CFF  50                 	db	80	;'P'
   213   007D00  57                 	db	87	;'W'
   214   007D01  4D                 	db	77	;'M'
   215   007D02  20                 	db	32
   216   007D03  77                 	db	119	;'w'
   217   007D04  61                 	db	97	;'a'
   218   007D05  76                 	db	118	;'v'
   219   007D06  65                 	db	101	;'e'
   220   007D07  66                 	db	102	;'f'
   221   007D08  6F                 	db	111	;'o'
   222   007D09  72                 	db	114	;'r'
   223   007D0A  6D                 	db	109	;'m'
   224   007D0B  20                 	db	32
   225   007D0C  6F                 	db	111	;'o'
   226   007D0D  6E                 	db	110	;'n'
   227   007D0E  20                 	db	32
   228   007D0F  52                 	db	82	;'R'
   229   007D10  43                 	db	67	;'C'
   230   007D11  32                 	db	50	;'2'
   231   007D12  2E                 	db	46
   232   007D13  0D                 	db	13
   233   007D14  0A                 	db	10
   234   007D15  00                 	db	0
   235   007D16                     STR_22:
   236   007D16  43                 	db	67	;'C'
   237   007D17  75                 	db	117	;'u'
   238   007D18  72                 	db	114	;'r'
   239   007D19  72                 	db	114	;'r'
   240   007D1A  65                 	db	101	;'e'
   241   007D1B  6E                 	db	110	;'n'
   242   007D1C  74                 	db	116	;'t'
   243   007D1D  6C                 	db	108	;'l'
   244   007D1E  79                 	db	121	;'y'
   245   007D1F  20                 	db	32
   246   007D20  67                 	db	103	;'g'
   247   007D21  65                 	db	101	;'e'
   248   007D22  6E                 	db	110	;'n'
   249   007D23  65                 	db	101	;'e'
   250   007D24  72                 	db	114	;'r'
   251   007D25  61                 	db	97	;'a'
   252   007D26  74                 	db	116	;'t'
   253   007D27  69                 	db	105	;'i'
   254   007D28  6E                 	db	110	;'n'
   255   007D29  67                 	db	103	;'g'
   256   007D2A  20                 	db	32
   257   007D2B  61                 	db	97	;'a'
   258   007D2C  20                 	db	32
   259   007D2D  30                 	db	48	;'0'
   260   007D2E  25                 	db	37
   261   007D2F  25                 	db	37
   262   007D30  20                 	db	32
   263   007D31  64                 	db	100	;'d'
   264   007D32  75                 	db	117	;'u'
   265   007D33  74                 	db	116	;'t'
   266   007D34  79                 	db	121	;'y'
   267   007D35  20                 	db	32
   268   007D36  63                 	db	99	;'c'
   269   007D37  79                 	db	121	;'y'
   270   007D38  63                 	db	99	;'c'
   271   007D39  6C                 	db	108	;'l'
   272   007D3A  65                 	db	101	;'e'
   273   007D3B  20                 	db	32
   274   007D3C  50                 	db	80	;'P'
   275   007D3D  57                 	db	87	;'W'
   276   007D3E  4D                 	db	77	;'M'
   277   007D3F  20                 	db	32
   278   007D40  77                 	db	119	;'w'
   279   007D41  61                 	db	97	;'a'
   280   007D42  76                 	db	118	;'v'
   281   007D43  65                 	db	101	;'e'
   282   007D44  66                 	db	102	;'f'
   283   007D45  6F                 	db	111	;'o'
   284   007D46  72                 	db	114	;'r'
   285   007D47  6D                 	db	109	;'m'
   286   007D48  20                 	db	32
   287   007D49  6F                 	db	111	;'o'
   288   007D4A  6E                 	db	110	;'n'
   289   007D4B  20                 	db	32
   290   007D4C  52                 	db	82	;'R'
   291   007D4D  43                 	db	67	;'C'
   292   007D4E  32                 	db	50	;'2'
   293   007D4F  2E                 	db	46
   294   007D50  0D                 	db	13
   295   007D51  0A                 	db	10
   296   007D52  00                 	db	0
   297   007D53                     STR_12:
   298   007D53  73                 	db	115	;'s'
   299   007D54  3A                 	db	58	;':'
   300   007D55  20                 	db	32
   301   007D56  73                 	db	115	;'s'
   302   007D57  74                 	db	116	;'t'
   303   007D58  65                 	db	101	;'e'
   304   007D59  70                 	db	112	;'p'
   305   007D5A  20                 	db	32
   306   007D5B  74                 	db	116	;'t'
   307   007D5C  68                 	db	104	;'h'
   308   007D5D  72                 	db	114	;'r'
   309   007D5E  6F                 	db	111	;'o'
   310   007D5F  75                 	db	117	;'u'
   311   007D60  67                 	db	103	;'g'
   312   007D61  68                 	db	104	;'h'
   313   007D62  20                 	db	32
   314   007D63  73                 	db	115	;'s'
   315   007D64  69                 	db	105	;'i'
   316   007D65  6E                 	db	110	;'n'
   317   007D66  65                 	db	101	;'e'
   318   007D67  20                 	db	32
   319   007D68  77                 	db	119	;'w'
   320   007D69  61                 	db	97	;'a'
   321   007D6A  76                 	db	118	;'v'
   322   007D6B  65                 	db	101	;'e'
   323   007D6C  20                 	db	32
   324   007D6D  74                 	db	116	;'t'
   325   007D6E  61                 	db	97	;'a'
   326   007D6F  62                 	db	98	;'b'
   327   007D70  6C                 	db	108	;'l'
   328   007D71  65                 	db	101	;'e'
   329   007D72  20                 	db	32
   330   007D73  77                 	db	119	;'w'
   331   007D74  69                 	db	105	;'i'
   332   007D75  74                 	db	116	;'t'
   333   007D76  68                 	db	104	;'h'
   334   007D77  20                 	db	32
   335   007D78  50                 	db	80	;'P'
   336   007D79  49                 	db	73	;'I'
   337   007D7A  43                 	db	67	;'C'
   338   007D7B  20                 	db	32
   339   007D7C  38                 	db	56	;'8'
   340   007D7D  2D                 	db	45
   341   007D7E  62                 	db	98	;'b'
   342   007D7F  69                 	db	105	;'i'
   343   007D80  74                 	db	116	;'t'
   344   007D81  20                 	db	32
   345   007D82  50                 	db	80	;'P'
   346   007D83  57                 	db	87	;'W'
   347   007D84  4D                 	db	77	;'M'
   348   007D85  0D                 	db	13
   349   007D86  0A                 	db	10
   350   007D87  00                 	db	0
   351   007D88                     STR_5:
   352   007D88  2D                 	db	45
   353   007D89  2D                 	db	45
   354   007D8A  2D                 	db	45
   355   007D8B  2D                 	db	45
   356   007D8C  2D                 	db	45
   357   007D8D  2D                 	db	45
   358   007D8E  2D                 	db	45
   359   007D8F  2D                 	db	45
   360   007D90  2D                 	db	45
   361   007D91  2D                 	db	45
   362   007D92  2D                 	db	45
   363   007D93  2D                 	db	45
   364   007D94  2D                 	db	45
   365   007D95  2D                 	db	45
   366   007D96  2D                 	db	45
   367   007D97  2D                 	db	45
   368   007D98  2D                 	db	45
   369   007D99  2D                 	db	45
   370   007D9A  2D                 	db	45
   371   007D9B  2D                 	db	45
   372   007D9C  2D                 	db	45
   373   007D9D  2D                 	db	45
   374   007D9E  2D                 	db	45
   375   007D9F  2D                 	db	45
   376   007DA0  2D                 	db	45
   377   007DA1  2D                 	db	45
   378   007DA2  2D                 	db	45
   379   007DA3  2D                 	db	45
   380   007DA4  2D                 	db	45
   381   007DA5  2D                 	db	45
   382   007DA6  2D                 	db	45
   383   007DA7  2D                 	db	45
   384   007DA8  2D                 	db	45
   385   007DA9  2D                 	db	45
   386   007DAA  2D                 	db	45
   387   007DAB  2D                 	db	45
   388   007DAC  2D                 	db	45
   389   007DAD  2D                 	db	45
   390   007DAE  2D                 	db	45
   391   007DAF  2D                 	db	45
   392   007DB0  2D                 	db	45
   393   007DB1  2D                 	db	45
   394   007DB2  2D                 	db	45
   395   007DB3  2D                 	db	45
   396   007DB4  2D                 	db	45
   397   007DB5  2D                 	db	45
   398   007DB6  2D                 	db	45
   399   007DB7  2D                 	db	45
   400   007DB8  2D                 	db	45
   401   007DB9  0D                 	db	13
   402   007DBA  0A                 	db	10
   403   007DBB  00                 	db	0
   404   007DBC                     STR_30:
   405   007DBC  50                 	db	80	;'P'
   406   007DBD  72                 	db	114	;'r'
   407   007DBE  65                 	db	101	;'e'
   408   007DBF  73                 	db	115	;'s'
   409   007DC0  73                 	db	115	;'s'
   410   007DC1  20                 	db	32
   411   007DC2  61                 	db	97	;'a'
   412   007DC3  6E                 	db	110	;'n'
   413   007DC4  79                 	db	121	;'y'
   414   007DC5  20                 	db	32
   415   007DC6  6F                 	db	111	;'o'
   416   007DC7  74                 	db	116	;'t'
   417   007DC8  68                 	db	104	;'h'
   418   007DC9  65                 	db	101	;'e'
   419   007DCA  72                 	db	114	;'r'
   420   007DCB  20                 	db	32
   421   007DCC  6B                 	db	107	;'k'
   422   007DCD  65                 	db	101	;'e'
   423   007DCE  79                 	db	121	;'y'
   424   007DCF  20                 	db	32
   425   007DD0  74                 	db	116	;'t'
   426   007DD1  6F                 	db	111	;'o'
   427   007DD2  20                 	db	32
   428   007DD3  73                 	db	115	;'s'
   429   007DD4  74                 	db	116	;'t'
   430   007DD5  65                 	db	101	;'e'
   431   007DD6  70                 	db	112	;'p'
   432   007DD7  20                 	db	32
   433   007DD8  74                 	db	116	;'t'
   434   007DD9  68                 	db	104	;'h'
   435   007DDA  72                 	db	114	;'r'
   436   007DDB  6F                 	db	111	;'o'
   437   007DDC  75                 	db	117	;'u'
   438   007DDD  67                 	db	103	;'g'
   439   007DDE  68                 	db	104	;'h'
   440   007DDF  20                 	db	32
   441   007DE0  73                 	db	115	;'s'
   442   007DE1  69                 	db	105	;'i'
   443   007DE2  6E                 	db	110	;'n'
   444   007DE3  65                 	db	101	;'e'
   445   007DE4  20                 	db	32
   446   007DE5  74                 	db	116	;'t'
   447   007DE6  61                 	db	97	;'a'
   448   007DE7  62                 	db	98	;'b'
   449   007DE8  6C                 	db	108	;'l'
   450   007DE9  65                 	db	101	;'e'
   451   007DEA  2E                 	db	46
   452   007DEB  0D                 	db	13
   453   007DEC  0A                 	db	10
   454   007DED  0A                 	db	10
   455   007DEE  00                 	db	0
   456   007DEF                     STR_13:
   457   007DEF  53                 	db	83	;'S'
   458   007DF0  3A                 	db	58	;':'
   459   007DF1  20                 	db	32
   460   007DF2  73                 	db	115	;'s'
   461   007DF3  69                 	db	105	;'i'
   462   007DF4  6E                 	db	110	;'n'
   463   007DF5  67                 	db	103	;'g'
   464   007DF6  6C                 	db	108	;'l'
   465   007DF7  65                 	db	101	;'e'
   466   007DF8  20                 	db	32
   467   007DF9  73                 	db	115	;'s'
   468   007DFA  74                 	db	116	;'t'
   469   007DFB  65                 	db	101	;'e'
   470   007DFC  70                 	db	112	;'p'
   471   007DFD  20                 	db	32
   472   007DFE  50                 	db	80	;'P'
   473   007DFF  57                 	db	87	;'W'
   474   007E00  4D                 	db	77	;'M'
   475   007E01  20                 	db	32
   476   007E02  64                 	db	100	;'d'
   477   007E03  75                 	db	117	;'u'
   478   007E04  74                 	db	116	;'t'
   479   007E05  79                 	db	121	;'y'
   480   007E06  20                 	db	32
   481   007E07  63                 	db	99	;'c'
   482   007E08  79                 	db	121	;'y'
   483   007E09  63                 	db	99	;'c'
   484   007E0A  6C                 	db	108	;'l'
   485   007E0B  65                 	db	101	;'e'
   486   007E0C  20                 	db	32
   487   007E0D  66                 	db	102	;'f'
   488   007E0E  72                 	db	114	;'r'
   489   007E0F  6F                 	db	111	;'o'
   490   007E10  6D                 	db	109	;'m'
   491   007E11  20                 	db	32
   492   007E12  30                 	db	48	;'0'
   493   007E13  25                 	db	37
   494   007E14  25                 	db	37
   495   007E15  20                 	db	32
   496   007E16  74                 	db	116	;'t'
   497   007E17  6F                 	db	111	;'o'
   498   007E18  20                 	db	32
   499   007E19  31                 	db	49	;'1'
   500   007E1A  30                 	db	48	;'0'
   501   007E1B  30                 	db	48	;'0'
   502   007E1C  25                 	db	37
   503   007E1D  25                 	db	37
   504   007E1E  2E                 	db	46
   505   007E1F  0D                 	db	13
   506   007E20  0A                 	db	10
   507   007E21  00                 	db	0
   508   007E22                     STR_19:
   509   007E22  43                 	db	67	;'C'
   510   007E23  6F                 	db	111	;'o'
   511   007E24  6E                 	db	110	;'n'
   512   007E25  6E                 	db	110	;'n'
   513   007E26  65                 	db	101	;'e'
   514   007E27  63                 	db	99	;'c'
   515   007E28  74                 	db	116	;'t'
   516   007E29  20                 	db	32
   517   007E2A  6A                 	db	106	;'j'
   518   007E2B  75                 	db	117	;'u'
   519   007E2C  6D                 	db	109	;'m'
   520   007E2D  70                 	db	112	;'p'
   521   007E2E  65                 	db	101	;'e'
   522   007E2F  72                 	db	114	;'r'
   523   007E30  20                 	db	32
   524   007E31  6F                 	db	111	;'o'
   525   007E32  76                 	db	118	;'v'
   526   007E33  65                 	db	101	;'e'
   527   007E34  72                 	db	114	;'r'
   528   007E35  20                 	db	32
   529   007E36  74                 	db	116	;'t'
   530   007E37  68                 	db	104	;'h'
   531   007E38  65                 	db	101	;'e'
   532   007E39  20                 	db	32
   533   007E3A  52                 	db	82	;'R'
   534   007E3B  43                 	db	67	;'C'
   535   007E3C  32                 	db	50	;'2'
   536   007E3D  2F                 	db	47
   537   007E3E  4C                 	db	76	;'L'
   538   007E3F  50                 	db	80	;'P'
   539   007E40  46                 	db	70	;'F'
   540   007E41  5F                 	db	95	;'_'
   541   007E42  69                 	db	105	;'i'
   542   007E43  6E                 	db	110	;'n'
   543   007E44  20                 	db	32
   544   007E45  68                 	db	104	;'h'
   545   007E46  65                 	db	101	;'e'
   546   007E47  61                 	db	97	;'a'
   547   007E48  64                 	db	100	;'d'
   548   007E49  65                 	db	101	;'e'
   549   007E4A  72                 	db	114	;'r'
   550   007E4B  20                 	db	32
   551   007E4C  70                 	db	112	;'p'
   552   007E4D  69                 	db	105	;'i'
   553   007E4E  6E                 	db	110	;'n'
   554   007E4F  73                 	db	115	;'s'
   555   007E50  2E                 	db	46
   556   007E51  0D                 	db	13
   557   007E52  0A                 	db	10
   558   007E53  00                 	db	0
   559   007E54                     STR_21:
   560   007E54  43                 	db	67	;'C'
   561   007E55  6F                 	db	111	;'o'
   562   007E56  6E                 	db	110	;'n'
   563   007E57  6E                 	db	110	;'n'
   564   007E58  65                 	db	101	;'e'
   565   007E59  63                 	db	99	;'c'
   566   007E5A  74                 	db	116	;'t'
   567   007E5B  20                 	db	32
   568   007E5C  43                 	db	67	;'C'
   569   007E5D  68                 	db	104	;'h'
   570   007E5E  61                 	db	97	;'a'
   571   007E5F  6E                 	db	110	;'n'
   572   007E60  6E                 	db	110	;'n'
   573   007E61  65                 	db	101	;'e'
   574   007E62  6C                 	db	108	;'l'
   575   007E63  20                 	db	32
   576   007E64  32                 	db	50	;'2'
   577   007E65  20                 	db	32
   578   007E66  73                 	db	115	;'s'
   579   007E67  63                 	db	99	;'c'
   580   007E68  6F                 	db	111	;'o'
   581   007E69  70                 	db	112	;'p'
   582   007E6A  65                 	db	101	;'e'
   583   007E6B  20                 	db	32
   584   007E6C  70                 	db	112	;'p'
   585   007E6D  72                 	db	114	;'r'
   586   007E6E  6F                 	db	111	;'o'
   587   007E6F  62                 	db	98	;'b'
   588   007E70  65                 	db	101	;'e'
   589   007E71  20                 	db	32
   590   007E72  74                 	db	116	;'t'
   591   007E73  6F                 	db	111	;'o'
   592   007E74  20                 	db	32
   593   007E75  4C                 	db	76	;'L'
   594   007E76  50                 	db	80	;'P'
   595   007E77  46                 	db	70	;'F'
   596   007E78  5F                 	db	95	;'_'
   597   007E79  6F                 	db	111	;'o'
   598   007E7A  75                 	db	117	;'u'
   599   007E7B  74                 	db	116	;'t'
   600   007E7C  2E                 	db	46
   601   007E7D  0D                 	db	13
   602   007E7E  0A                 	db	10
   603   007E7F  00                 	db	0
   604   007E80                     STR_14:
   605   007E80  70                 	db	112	;'p'
   606   007E81  3A                 	db	58	;':'
   607   007E82  20                 	db	32
   608   007E83  47                 	db	71	;'G'
   609   007E84  65                 	db	101	;'e'
   610   007E85  6E                 	db	110	;'n'
   611   007E86  65                 	db	101	;'e'
   612   007E87  72                 	db	114	;'r'
   613   007E88  61                 	db	97	;'a'
   614   007E89  74                 	db	116	;'t'
   615   007E8A  65                 	db	101	;'e'
   616   007E8B  20                 	db	32
   617   007E8C  61                 	db	97	;'a'
   618   007E8D  20                 	db	32
   619   007E8E  73                 	db	115	;'s'
   620   007E8F  69                 	db	105	;'i'
   621   007E90  6E                 	db	110	;'n'
   622   007E91  65                 	db	101	;'e'
   623   007E92  20                 	db	32
   624   007E93  77                 	db	119	;'w'
   625   007E94  61                 	db	97	;'a'
   626   007E95  76                 	db	118	;'v'
   627   007E96  65                 	db	101	;'e'
   628   007E97  20                 	db	32
   629   007E98  75                 	db	117	;'u'
   630   007E99  73                 	db	115	;'s'
   631   007E9A  69                 	db	105	;'i'
   632   007E9B  6E                 	db	110	;'n'
   633   007E9C  67                 	db	103	;'g'
   634   007E9D  20                 	db	32
   635   007E9E  50                 	db	80	;'P'
   636   007E9F  57                 	db	87	;'W'
   637   007EA0  4D                 	db	77	;'M'
   638   007EA1  20                 	db	32
   639   007EA2  2B                 	db	43
   640   007EA3  20                 	db	32
   641   007EA4  4C                 	db	76	;'L'
   642   007EA5  50                 	db	80	;'P'
   643   007EA6  46                 	db	70	;'F'
   644   007EA7  0D                 	db	13
   645   007EA8  0A                 	db	10
   646   007EA9  00                 	db	0
   647   007EAA                     STR_23:
   648   007EAA  50                 	db	80	;'P'
   649   007EAB  72                 	db	114	;'r'
   650   007EAC  65                 	db	101	;'e'
   651   007EAD  73                 	db	115	;'s'
   652   007EAE  73                 	db	115	;'s'
   653   007EAF  20                 	db	32
   654   007EB0  61                 	db	97	;'a'
   655   007EB1  6E                 	db	110	;'n'
   656   007EB2  79                 	db	121	;'y'
   657   007EB3  20                 	db	32
   658   007EB4  6B                 	db	107	;'k'
   659   007EB5  65                 	db	101	;'e'
   660   007EB6  79                 	db	121	;'y'
   661   007EB7  20                 	db	32
   662   007EB8  74                 	db	116	;'t'
   663   007EB9  6F                 	db	111	;'o'
   664   007EBA  20                 	db	32
   665   007EBB  63                 	db	99	;'c'
   666   007EBC  68                 	db	104	;'h'
   667   007EBD  61                 	db	97	;'a'
   668   007EBE  6E                 	db	110	;'n'
   669   007EBF  67                 	db	103	;'g'
   670   007EC0  65                 	db	101	;'e'
   671   007EC1  20                 	db	32
   672   007EC2  74                 	db	116	;'t'
   673   007EC3  68                 	db	104	;'h'
   674   007EC4  69                 	db	105	;'i'
   675   007EC5  73                 	db	115	;'s'
   676   007EC6  20                 	db	32
   677   007EC7  74                 	db	116	;'t'
   678   007EC8  6F                 	db	111	;'o'
   679   007EC9  20                 	db	32
   680   007ECA  31                 	db	49	;'1'
   681   007ECB  30                 	db	48	;'0'
   682   007ECC  30                 	db	48	;'0'
   683   007ECD  25                 	db	37
   684   007ECE  2E                 	db	46
   685   007ECF  0D                 	db	13
   686   007ED0  0A                 	db	10
   687   007ED1  00                 	db	0
   688   007ED2                     STR_20:
   689   007ED2  43                 	db	67	;'C'
   690   007ED3  6F                 	db	111	;'o'
   691   007ED4  6E                 	db	110	;'n'
   692   007ED5  6E                 	db	110	;'n'
   693   007ED6  65                 	db	101	;'e'
   694   007ED7  63                 	db	99	;'c'
   695   007ED8  74                 	db	116	;'t'
   696   007ED9  20                 	db	32
   697   007EDA  43                 	db	67	;'C'
   698   007EDB  68                 	db	104	;'h'
   699   007EDC  61                 	db	97	;'a'
   700   007EDD  6E                 	db	110	;'n'
   701   007EDE  6E                 	db	110	;'n'
   702   007EDF  65                 	db	101	;'e'
   703   007EE0  6C                 	db	108	;'l'
   704   007EE1  20                 	db	32
   705   007EE2  31                 	db	49	;'1'
   706   007EE3  20                 	db	32
   707   007EE4  73                 	db	115	;'s'
   708   007EE5  63                 	db	99	;'c'
   709   007EE6  6F                 	db	111	;'o'
   710   007EE7  70                 	db	112	;'p'
   711   007EE8  65                 	db	101	;'e'
   712   007EE9  20                 	db	32
   713   007EEA  70                 	db	112	;'p'
   714   007EEB  72                 	db	114	;'r'
   715   007EEC  6F                 	db	111	;'o'
   716   007EED  62                 	db	98	;'b'
   717   007EEE  65                 	db	101	;'e'
   718   007EEF  20                 	db	32
   719   007EF0  74                 	db	116	;'t'
   720   007EF1  6F                 	db	111	;'o'
   721   007EF2  20                 	db	32
   722   007EF3  52                 	db	82	;'R'
   723   007EF4  43                 	db	67	;'C'
   724   007EF5  32                 	db	50	;'2'
   725   007EF6  2E                 	db	46
   726   007EF7  0D                 	db	13
   727   007EF8  0A                 	db	10
   728   007EF9  00                 	db	0
   729   007EFA                     STR_11:
   730   007EFA  2B                 	db	43
   731   007EFB  2F                 	db	47
   732   007EFC  2D                 	db	45
   733   007EFD  3A                 	db	58	;':'
   734   007EFE  20                 	db	32
   735   007EFF  69                 	db	105	;'i'
   736   007F00  6E                 	db	110	;'n'
   737   007F01  63                 	db	99	;'c'
   738   007F02  72                 	db	114	;'r'
   739   007F03  65                 	db	101	;'e'
   740   007F04  61                 	db	97	;'a'
   741   007F05  73                 	db	115	;'s'
   742   007F06  65                 	db	101	;'e'
   743   007F07  2F                 	db	47
   744   007F08  64                 	db	100	;'d'
   745   007F09  65                 	db	101	;'e'
   746   007F0A  63                 	db	99	;'c'
   747   007F0B  72                 	db	114	;'r'
   748   007F0C  65                 	db	101	;'e'
   749   007F0D  61                 	db	97	;'a'
   750   007F0E  73                 	db	115	;'s'
   751   007F0F  65                 	db	101	;'e'
   752   007F10  20                 	db	32
   753   007F11  76                 	db	118	;'v'
   754   007F12  6F                 	db	111	;'o'
   755   007F13  6C                 	db	108	;'l'
   756   007F14  75                 	db	117	;'u'
   757   007F15  6D                 	db	109	;'m'
   758   007F16  65                 	db	101	;'e'
   759   007F17  0D                 	db	13
   760   007F18  0A                 	db	10
   761   007F19  00                 	db	0
   762   007F1A                     STR_31:
   763   007F1A  43                 	db	67	;'C'
   764   007F1B  75                 	db	117	;'u'
   765   007F1C  72                 	db	114	;'r'
   766   007F1D  72                 	db	114	;'r'
   767   007F1E  65                 	db	101	;'e'
   768   007F1F  6E                 	db	110	;'n'
   769   007F20  74                 	db	116	;'t'
   770   007F21  20                 	db	32
   771   007F22  4C                 	db	76	;'L'
   772   007F23  6F                 	db	111	;'o'
   773   007F24  61                 	db	97	;'a'
   774   007F25  64                 	db	100	;'d'
   775   007F26  44                 	db	68	;'D'
   776   007F27  75                 	db	117	;'u'
   777   007F28  74                 	db	116	;'t'
   778   007F29  79                 	db	121	;'y'
   779   007F2A  56                 	db	86	;'V'
   780   007F2B  61                 	db	97	;'a'
   781   007F2C  6C                 	db	108	;'l'
   782   007F2D  75                 	db	117	;'u'
   783   007F2E  65                 	db	101	;'e'
   784   007F2F  20                 	db	32
   785   007F30  3D                 	db	61	;'='
   786   007F31  20                 	db	32
   787   007F32  25                 	db	37
   788   007F33  64                 	db	100	;'d'
   789   007F34  0D                 	db	13
   790   007F35  0A                 	db	10
   791   007F36  00                 	db	0
   792   007F37                     STR_2:
   793   007F37  41                 	db	65	;'A'
   794   007F38  6E                 	db	110	;'n'
   795   007F39  61                 	db	97	;'a'
   796   007F3A  6C                 	db	108	;'l'
   797   007F3B  6F                 	db	111	;'o'
   798   007F3C  67                 	db	103	;'g'
   799   007F3D  20                 	db	32
   800   007F3E  77                 	db	119	;'w'
   801   007F3F  61                 	db	97	;'a'
   802   007F40  76                 	db	118	;'v'
   803   007F41  65                 	db	101	;'e'
   804   007F42  66                 	db	102	;'f'
   805   007F43  6F                 	db	111	;'o'
   806   007F44  72                 	db	114	;'r'
   807   007F45  6D                 	db	109	;'m'
   808   007F46  20                 	db	32
   809   007F47  67                 	db	103	;'g'
   810   007F48  65                 	db	101	;'e'
   811   007F49  6E                 	db	110	;'n'
   812   007F4A  65                 	db	101	;'e'
   813   007F4B  72                 	db	114	;'r'
   814   007F4C  61                 	db	97	;'a'
   815   007F4D  74                 	db	116	;'t'
   816   007F4E  6F                 	db	111	;'o'
   817   007F4F  72                 	db	114	;'r'
   818   007F50  0D                 	db	13
   819   007F51  0A                 	db	10
   820   007F52  00                 	db	0
   821   007F53                     STR_25:
   822   007F53  50                 	db	80	;'P'
   823   007F54  72                 	db	114	;'r'
   824   007F55  65                 	db	101	;'e'
   825   007F56  73                 	db	115	;'s'
   826   007F57  73                 	db	115	;'s'
   827   007F58  20                 	db	32
   828   007F59  61                 	db	97	;'a'
   829   007F5A  6E                 	db	110	;'n'
   830   007F5B  79                 	db	121	;'y'
   831   007F5C  20                 	db	32
   832   007F5D  6B                 	db	107	;'k'
   833   007F5E  65                 	db	101	;'e'
   834   007F5F  79                 	db	121	;'y'
   835   007F60  20                 	db	32
   836   007F61  74                 	db	116	;'t'
   837   007F62  6F                 	db	111	;'o'
   838   007F63  20                 	db	32
   839   007F64  65                 	db	101	;'e'
   840   007F65  78                 	db	120	;'x'
   841   007F66  69                 	db	105	;'i'
   842   007F67  74                 	db	116	;'t'
   843   007F68  2E                 	db	46
   844   007F69  0D                 	db	13
   845   007F6A  0A                 	db	10
   846   007F6B  00                 	db	0
   847   007F6C                     STR_10:
   848   007F6C  7A                 	db	122	;'z'
   849   007F6D  3A                 	db	58	;':'
   850   007F6E  20                 	db	32
   851   007F6F  43                 	db	67	;'C'
   852   007F70  6C                 	db	108	;'l'
   853   007F71  65                 	db	101	;'e'
   854   007F72  61                 	db	97	;'a'
   855   007F73  72                 	db	114	;'r'
   856   007F74  20                 	db	32
   857   007F75  74                 	db	116	;'t'
   858   007F76  68                 	db	104	;'h'
   859   007F77  65                 	db	101	;'e'
   860   007F78  20                 	db	32
   861   007F79  74                 	db	116	;'t'
   862   007F7A  65                 	db	101	;'e'
   863   007F7B  72                 	db	114	;'r'
   864   007F7C  6D                 	db	109	;'m'
   865   007F7D  69                 	db	105	;'i'
   866   007F7E  6E                 	db	110	;'n'
   867   007F7F  61                 	db	97	;'a'
   868   007F80  6C                 	db	108	;'l'
   869   007F81  0D                 	db	13
   870   007F82  0A                 	db	10
   871   007F83  00                 	db	0
   872   007F84                     STR_9:
   873   007F84  5A                 	db	90	;'Z'
   874   007F85  3A                 	db	58	;':'
   875   007F86  20                 	db	32
   876   007F87  52                 	db	82	;'R'
   877   007F88  65                 	db	101	;'e'
   878   007F89  73                 	db	115	;'s'
   879   007F8A  65                 	db	101	;'e'
   880   007F8B  74                 	db	116	;'t'
   881   007F8C  20                 	db	32
   882   007F8D  70                 	db	112	;'p'
   883   007F8E  72                 	db	114	;'r'
   884   007F8F  6F                 	db	111	;'o'
   885   007F90  63                 	db	99	;'c'
   886   007F91  65                 	db	101	;'e'
   887   007F92  73                 	db	115	;'s'
   888   007F93  73                 	db	115	;'s'
   889   007F94  6F                 	db	111	;'o'
   890   007F95  72                 	db	114	;'r'
   891   007F96  0D                 	db	13
   892   007F97  0A                 	db	10
   893   007F98  00                 	db	0
   894   007F99                     STR_29:
   895   007F99  50                 	db	80	;'P'
   896   007F9A  72                 	db	114	;'r'
   897   007F9B  65                 	db	101	;'e'
   898   007F9C  73                 	db	115	;'s'
   899   007F9D  73                 	db	115	;'s'
   900   007F9E  20                 	db	32
   901   007F9F  78                 	db	120	;'x'
   902   007FA0  20                 	db	32
   903   007FA1  74                 	db	116	;'t'
   904   007FA2  6F                 	db	111	;'o'
   905   007FA3  20                 	db	32
   906   007FA4  65                 	db	101	;'e'
   907   007FA5  78                 	db	120	;'x'
   908   007FA6  69                 	db	105	;'i'
   909   007FA7  74                 	db	116	;'t'
   910   007FA8  2E                 	db	46
   911   007FA9  0D                 	db	13
   912   007FAA  0A                 	db	10
   913   007FAB  00                 	db	0
   914   007FAC                     STR_38:
   915   007FAC  55                 	db	85	;'U'
   916   007FAD  6E                 	db	110	;'n'
   917   007FAE  6B                 	db	107	;'k'
   918   007FAF  6E                 	db	110	;'n'
   919   007FB0  6F                 	db	111	;'o'
   920   007FB1  77                 	db	119	;'w'
   921   007FB2  6E                 	db	110	;'n'
   922   007FB3  20                 	db	32
   923   007FB4  6B                 	db	107	;'k'
   924   007FB5  65                 	db	101	;'e'
   925   007FB6  79                 	db	121	;'y'
   926   007FB7  20                 	db	32
   927   007FB8  25                 	db	37
   928   007FB9  63                 	db	99	;'c'
   929   007FBA  0D                 	db	13
   930   007FBB  0A                 	db	10
   931   007FBC  00                 	db	0
   932   007FBD                     STR_7:
   933   007FBD  3F                 	db	63	;'?'
   934   007FBE  3A                 	db	58	;':'
   935   007FBF  20                 	db	32
   936   007FC0  68                 	db	104	;'h'
   937   007FC1  65                 	db	101	;'e'
   938   007FC2  6C                 	db	108	;'l'
   939   007FC3  70                 	db	112	;'p'
   940   007FC4  20                 	db	32
   941   007FC5  6D                 	db	109	;'m'
   942   007FC6  65                 	db	101	;'e'
   943   007FC7  6E                 	db	110	;'n'
   944   007FC8  75                 	db	117	;'u'
   945   007FC9  0D                 	db	13
   946   007FCA  0A                 	db	10
   947   007FCB  00                 	db	0
   948   007FCC                     STR_1:
   949   007FCC  69                 	db	105	;'i'
   950   007FCD  6E                 	db	110	;'n'
   951   007FCE  4C                 	db	76	;'L'
   952   007FCF  61                 	db	97	;'a'
   953   007FD0  62                 	db	98	;'b'
   954   007FD1  20                 	db	32
   955   007FD2  31                 	db	49	;'1'
   956   007FD3  30                 	db	48	;'0'
   957   007FD4  0D                 	db	13
   958   007FD5  0A                 	db	10
   959   007FD6  00                 	db	0
   960   007FD7                     STR_32:
   961   007FD7  45                 	db	69	;'E'
   962   007FD8  78                 	db	120	;'x'
   963   007FD9  69                 	db	105	;'i'
   964   007FDA  74                 	db	116	;'t'
   965   007FDB  20                 	db	32
   966   007FDC  50                 	db	80	;'P'
   967   007FDD  57                 	db	87	;'W'
   968   007FDE  4D                 	db	77	;'M'
   969   007FDF  0D                 	db	13
   970   007FE0  0A                 	db	10
   971   007FE1  00                 	db	0
   972   007FE2                     STR_3:
   973   007FE2  44                 	db	68	;'D'
   974   007FE3  65                 	db	101	;'e'
   975   007FE4  76                 	db	118	;'v'
   976   007FE5  27                 	db	39
   977   007FE6  32                 	db	50	;'2'
   978   007FE7  31                 	db	49	;'1'
   979   007FE8  0D                 	db	13
   980   007FE9  0A                 	db	10
   981   007FEA  00                 	db	0
   982   007FEB                     STR_16:
   983   007FEB  6F                 	db	111	;'o'
   984   007FEC  3A                 	db	58	;':'
   985   007FED  09                 	db	9
   986   007FEE  6F                 	db	111	;'o'
   987   007FEF  6B                 	db	107	;'k'
   988   007FF0  0D                 	db	13
   989   007FF1  0A                 	db	10
   990   007FF2  00                 	db	0
   991   007FF3                     STR_8:
   992   007FF3  6F                 	db	111	;'o'
   993   007FF4  3A                 	db	58	;':'
   994   007FF5  20                 	db	32
   995   007FF6  6B                 	db	107	;'k'
   996   007FF7  0D                 	db	13
   997   007FF8  0A                 	db	10
   998   007FF9  00                 	db	0
   999   007FFA                     STR_4:
  1000   007FFA  0D                 	db	13
  1001   007FFB  0A                 	db	10
  1002   007FFC  3E                 	db	62	;'>'
  1003   007FFD  20                 	db	32
  1004   007FFE  00                 	db	0
  1005   007FFF  00                 	db	0	; dummy byte at the end
  1006   000000                     
  1007                           ; #config settings
  1008                           
  1009                           	psect	cinit
  1010   006E18                     __pcinit:
  1011                           	callstack 0
  1012   006E18                     start_initialization:
  1013                           	callstack 0
  1014   006E18                     __initialization:
  1015                           	callstack 0
  1016                           
  1017                           ; Initialize objects allocated to BANK0 (32 bytes)
  1018                           ; load TBLPTR registers with __pidataBANK0
  1019   006E18  0E24               	movlw	low __pidataBANK0
  1020   006E1A  6EF6               	movwf	tblptrl,c
  1021   006E1C  0E6D               	movlw	high __pidataBANK0
  1022   006E1E  6EF7               	movwf	tblptrh,c
  1023   006E20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1024   006E22  6EF8               	movwf	tblptru,c
  1025   006E24  EE00  F0B7         	lfsr	0,__pdataBANK0
  1026   006E28  EE10 F020          	lfsr	1,32
  1027   006E2C                     copy_data0:
  1028   006E2C  0009               	tblrd		*+
  1029   006E2E  CFF5 FFEE          	movff	tablat,postinc0
  1030   006E32  50E5               	movf	postdec1,w,c
  1031   006E34  50E1               	movf	fsr1l,w,c
  1032   006E36  E1FA               	bnz	copy_data0
  1033                           
  1034                           ; Clear objects allocated to BANK0 (46 bytes)
  1035   006E38  EE00  F060         	lfsr	0,__pbssBANK0
  1036   006E3C  0E2E               	movlw	46
  1037   006E3E                     clear_0:
  1038   006E3E  6AEE               	clrf	postinc0,c
  1039   006E40  06E8               	decf	wreg,f,c
  1040   006E42  E1FD               	bnz	clear_0
  1041   006E44                     end_of_initialization:
  1042                           	callstack 0
  1043   006E44                     __end_of__initialization:
  1044                           	callstack 0
  1045   006E44  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1046   006E46  6EF8               	movwf	tblptru,c
  1047   006E48  0100               	movlb	0
  1048   006E4A  EF3B  F03C         	goto	_main	;jump to C main() function
  1049                           
  1050                           	psect	bssBANK0
  1051   000060                     __pbssBANK0:
  1052                           	callstack 0
  1053   000060                     _width:
  1054                           	callstack 0
  1055   000060                     	ds	2
  1056   000062                     _prec:
  1057                           	callstack 0
  1058   000062                     	ds	2
  1059   000064                     _EUSART1_ErrorHandler:
  1060                           	callstack 0
  1061   000064                     	ds	2
  1062   000066                     _EUSART1_OverrunErrorHandler:
  1063                           	callstack 0
  1064   000066                     	ds	2
  1065   000068                     _EUSART1_FramingErrorHandler:
  1066                           	callstack 0
  1067   000068                     	ds	2
  1068   00006A                     _timer0ReloadVal:
  1069                           	callstack 0
  1070   00006A                     	ds	2
  1071   00006C                     _flags:
  1072                           	callstack 0
  1073   00006C                     	ds	1
  1074   00006D                     _eusart1RxLastError:
  1075                           	callstack 0
  1076   00006D                     	ds	1
  1077   00006E                     _dbuf:
  1078                           	callstack 0
  1079   00006E                     	ds	32
  1080                           
  1081                           	psect	dataBANK0
  1082   0000B7                     __pdataBANK0:
  1083                           	callstack 0
  1084   0000B7                     main@F6116:
  1085                           	callstack 0
  1086   0000B7                     	ds	32
  1087                           
  1088                           	psect	cstackBANK0
  1089   00008E                     __pcstackBANK0:
  1090                           	callstack 0
  1091   00008E                     printf@ap:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x0
  1095   00008E                     	ds	2
  1096   000090                     ??_main:
  1097                           
  1098                           ; 1 bytes @ 0x2
  1099   000090                     	ds	2
  1100   000092                     main@sin:
  1101                           	callstack 0
  1102                           
  1103                           ; 32 bytes @ 0x4
  1104   000092                     	ds	32
  1105   0000B2                     main@volumeAdjust:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x24
  1109   0000B2                     	ds	1
  1110   0000B3                     main@cmd:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x25
  1114   0000B3                     	ds	1
  1115   0000B4                     main@i:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x26
  1119   0000B4                     	ds	1
  1120   0000B5                     main@index:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x27
  1124   0000B5                     	ds	2
  1125                           
  1126                           	psect	cstackCOMRAM
  1127   000001                     __pcstackCOMRAM:
  1128                           	callstack 0
  1129   000001                     ??_TMR0_Initialize:
  1130   000001                     ?_TMR0_ReadTimer:
  1131                           	callstack 0
  1132   000001                     ?___aodiv:
  1133                           	callstack 0
  1134   000001                     ?___aomod:
  1135                           	callstack 0
  1136   000001                     EUSART1_Write@txData:
  1137                           	callstack 0
  1138   000001                     EPWM1_LoadDutyValue@dutyValue:
  1139                           	callstack 0
  1140   000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1141                           	callstack 0
  1142   000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1143                           	callstack 0
  1144   000001                     EUSART1_SetErrorHandler@interruptHandler:
  1145                           	callstack 0
  1146   000001                     ___aodiv@dividend:
  1147                           	callstack 0
  1148   000001                     ___aomod@dividend:
  1149                           	callstack 0
  1150                           
  1151                           ; 8 bytes @ 0x0
  1152   000001                     	ds	1
  1153   000002                     putch@txData:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x1
  1157   000002                     	ds	1
  1158   000003                     ??_EPWM1_LoadDutyValue:
  1159   000003                     ??_TMR0_ReadTimer:
  1160   000003                     fputc@c:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x2
  1164   000003                     	ds	2
  1165   000005                     TMR0_ReadTimer@readVal:
  1166                           	callstack 0
  1167   000005                     fputc@fp:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x4
  1171   000005                     	ds	2
  1172   000007                     ??_fputc:
  1173   000007                     TMR0_ReadTimer@readValLow:
  1174                           	callstack 0
  1175                           
  1176                           ; 1 bytes @ 0x6
  1177   000007                     	ds	1
  1178   000008                     TMR0_ReadTimer@readValHigh:
  1179                           	callstack 0
  1180                           
  1181                           ; 1 bytes @ 0x7
  1182   000008                     	ds	1
  1183   000009                     TMR0_WriteTimer@timerVal:
  1184                           	callstack 0
  1185   000009                     ___aodiv@divisor:
  1186                           	callstack 0
  1187   000009                     ___aomod@divisor:
  1188                           	callstack 0
  1189                           
  1190                           ; 8 bytes @ 0x8
  1191   000009                     	ds	2
  1192   00000B                     
  1193                           ; 1 bytes @ 0xA
  1194   00000B                     	ds	1
  1195   00000C                     ctoa@fp:
  1196                           	callstack 0
  1197   00000C                     fputs@s:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0xB
  1201   00000C                     	ds	2
  1202   00000E                     ctoa@c:
  1203                           	callstack 0
  1204   00000E                     fputs@fp:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0xD
  1208   00000E                     	ds	1
  1209   00000F                     ??_ctoa:
  1210                           
  1211                           ; 1 bytes @ 0xE
  1212   00000F                     	ds	1
  1213   000010                     fputs@c:
  1214                           	callstack 0
  1215   000010                     ctoa@l:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0xF
  1219   000010                     	ds	1
  1220   000011                     ___aodiv@counter:
  1221                           	callstack 0
  1222   000011                     ___aomod@counter:
  1223                           	callstack 0
  1224   000011                     fputs@i:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x10
  1228   000011                     	ds	1
  1229   000012                     ___aodiv@sign:
  1230                           	callstack 0
  1231   000012                     ___aomod@sign:
  1232                           	callstack 0
  1233   000012                     ctoa@w:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x11
  1237   000012                     	ds	1
  1238   000013                     ?_abs:
  1239                           	callstack 0
  1240   000013                     pad@fp:
  1241                           	callstack 0
  1242   000013                     abs@a:
  1243                           	callstack 0
  1244   000013                     ___aodiv@quotient:
  1245                           	callstack 0
  1246                           
  1247                           ; 8 bytes @ 0x12
  1248   000013                     	ds	2
  1249   000015                     ??_abs:
  1250   000015                     pad@buf:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x14
  1254   000015                     	ds	2
  1255   000017                     pad@p:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x16
  1259   000017                     	ds	2
  1260   000019                     ??_pad:
  1261                           
  1262                           ; 1 bytes @ 0x18
  1263   000019                     	ds	1
  1264   00001A                     pad@i:
  1265                           	callstack 0
  1266                           
  1267                           ; 2 bytes @ 0x19
  1268   00001A                     	ds	2
  1269   00001C                     pad@w:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x1B
  1273   00001C                     	ds	2
  1274   00001E                     dtoa@fp:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x1D
  1278   00001E                     	ds	2
  1279   000020                     dtoa@d:
  1280                           	callstack 0
  1281                           
  1282                           ; 8 bytes @ 0x1F
  1283   000020                     	ds	8
  1284   000028                     ??_dtoa:
  1285                           
  1286                           ; 1 bytes @ 0x27
  1287   000028                     	ds	8
  1288   000030                     _dtoa$1215:
  1289                           	callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x2F
  1292   000030                     	ds	2
  1293   000032                     dtoa@p:
  1294                           	callstack 0
  1295                           
  1296                           ; 2 bytes @ 0x31
  1297   000032                     	ds	2
  1298   000034                     dtoa@w:
  1299                           	callstack 0
  1300                           
  1301                           ; 2 bytes @ 0x33
  1302   000034                     	ds	2
  1303   000036                     dtoa@n:
  1304                           	callstack 0
  1305                           
  1306                           ; 8 bytes @ 0x35
  1307   000036                     	ds	8
  1308   00003E                     dtoa@i:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x3D
  1312   00003E                     	ds	2
  1313   000040                     dtoa@s:
  1314                           	callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x3F
  1317   000040                     	ds	1
  1318   000041                     vfpfcnvrt@fp:
  1319                           	callstack 0
  1320                           
  1321                           ; 2 bytes @ 0x40
  1322   000041                     	ds	2
  1323   000043                     vfpfcnvrt@fmt:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x42
  1327   000043                     	ds	2
  1328   000045                     vfpfcnvrt@ap:
  1329                           	callstack 0
  1330                           
  1331                           ; 2 bytes @ 0x44
  1332   000045                     	ds	2
  1333   000047                     ??_vfpfcnvrt:
  1334                           
  1335                           ; 1 bytes @ 0x46
  1336   000047                     	ds	2
  1337   000049                     vfpfcnvrt@convarg:
  1338                           	callstack 0
  1339                           
  1340                           ; 8 bytes @ 0x48
  1341   000049                     	ds	8
  1342   000051                     vfpfcnvrt@c:
  1343                           	callstack 0
  1344                           
  1345                           ; 1 bytes @ 0x50
  1346   000051                     	ds	1
  1347   000052                     vfpfcnvrt@cp:
  1348                           	callstack 0
  1349                           
  1350                           ; 2 bytes @ 0x51
  1351   000052                     	ds	2
  1352   000054                     ?_vfprintf:
  1353                           	callstack 0
  1354   000054                     vfprintf@fp:
  1355                           	callstack 0
  1356                           
  1357                           ; 2 bytes @ 0x53
  1358   000054                     	ds	2
  1359   000056                     vfprintf@fmt:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x55
  1363   000056                     	ds	2
  1364   000058                     vfprintf@ap:
  1365                           	callstack 0
  1366                           
  1367                           ; 2 bytes @ 0x57
  1368   000058                     	ds	2
  1369   00005A                     vfprintf@cfmt:
  1370                           	callstack 0
  1371                           
  1372                           ; 2 bytes @ 0x59
  1373   00005A                     	ds	2
  1374   00005C                     ?_printf:
  1375                           	callstack 0
  1376   00005C                     printf@fmt:
  1377                           	callstack 0
  1378                           
  1379                           ; 2 bytes @ 0x5B
  1380   00005C                     	ds	4
  1381   000060                     
  1382                           ; 1 bytes @ 0x5F
  1383 ;;
  1384 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1385 ;;
  1386 ;; *************** function _main *****************
  1387 ;; Defined at:
  1388 ;;		line 31 in file "main.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;  sin            32    4[BANK0 ] unsigned char [32]
  1393 ;;  index           2   39[BANK0 ] unsigned short 
  1394 ;;  i               1   38[BANK0 ] unsigned char 
  1395 ;;  cmd             1   37[BANK0 ] unsigned char 
  1396 ;;  volumeAdjust    1   36[BANK0 ] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1406 ;;      Params:         0       0       0       0       0       0       0
  1407 ;;      Locals:         0      37       0       0       0       0       0
  1408 ;;      Temps:          0       2       0       0       0       0       0
  1409 ;;      Totals:         0      39       0       0       0       0       0
  1410 ;;Total ram usage:       39 bytes
  1411 ;; Hardware stack levels required when called: 9
  1412 ;; This function calls:
  1413 ;;		_EPWM1_LoadDutyValue
  1414 ;;		_EUSART1_Read
  1415 ;;		_EUSART1_is_rx_ready
  1416 ;;		_SYSTEM_Initialize
  1417 ;;		_TMR0_HasOverflowOccured
  1418 ;;		_TMR0_ReadTimer
  1419 ;;		_TMR0_WriteTimer
  1420 ;;		_printf
  1421 ;; This function is called by:
  1422 ;;		Startup code after reset
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text0
  1427   007876                     __ptext0:
  1428                           	callstack 0
  1429   007876                     _main:
  1430                           	callstack 22
  1431   007876                     
  1432                           ;main.c: 33: 
  1433   007876  EE20  F0B7         	lfsr	2,main@F6116
  1434   00787A  EE10  F092         	lfsr	1,main@sin
  1435   00787E  0E1F               	movlw	31
  1436   007880                     u1091:
  1437   007880  CFDB FFE3          	movff	plusw2,plusw1
  1438   007884  06E8               	decf	wreg,f,c
  1439   007886  E2FC               	bc	u1091
  1440   007888                     
  1441                           ;main.c: 34: ;main.c: 35: ;main.c: 36:                 case '?':;main.c: 37:            
      +                                   printf("-------------------------------------------------\r\n");
  1442   007888  0E01               	movlw	1
  1443   00788A  0100               	movlb	0	; () banked
  1444   00788C  6FB2               	movwf	main@volumeAdjust& (0+255),b
  1445   00788E                     
  1446                           ; BSR set to: 0
  1447                           ;main.c: 39:                     printf("?: help menu\r\n");
  1448   00788E  EC58  F036         	call	_SYSTEM_Initialize	;wreg free
  1449   007892                     
  1450                           ;main.c: 40:                     printf("o: k\r\n");
  1451   007892  0E00               	movlw	0
  1452   007894  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1453   007896  0E00               	movlw	0
  1454   007898  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1455   00789A  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  1456   00789E                     
  1457                           ;main.c: 42:                     printf("z: Clear the terminal\r\n");
  1458   00789E  0E00               	movlw	0
  1459   0078A0  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1460   0078A2  0E00               	movlw	0
  1461   0078A4  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  1462   0078A6  EC27  F036         	call	_TMR0_WriteTimer	;wreg free
  1463   0078AA                     
  1464                           ;main.c: 43:                     printf("+/-: increase/decrease volume\r\n");
  1465   0078AA  94F2               	bcf	242,2,c	;volatile
  1466   0078AC                     l139:
  1467   0078AC  A4F2               	btfss	242,2,c	;volatile
  1468   0078AE  EF5B  F03C         	goto	u1101
  1469   0078B2  EF5D  F03C         	goto	u1100
  1470   0078B6                     u1101:
  1471   0078B6  EF56  F03C         	goto	l139
  1472   0078BA                     u1100:
  1473   0078BA                     
  1474                           ;main.c: 46:                     printf("p: Generate a sine wave using PWM + LPF\r\n");
  1475   0078BA  0ECC               	movlw	low STR_1
  1476   0078BC  6E5C               	movwf	printf@fmt^0,c
  1477   0078BE  0E7F               	movlw	high STR_1
  1478   0078C0  6E5D               	movwf	(printf@fmt+1)^0,c
  1479   0078C2  ECB6  F036         	call	_printf	;wreg free
  1480                           
  1481                           ;main.c: 47:                     printf("-----------------------------------------------
      +                          --\r\n");
  1482   0078C6  0E37               	movlw	low STR_2
  1483   0078C8  6E5C               	movwf	printf@fmt^0,c
  1484   0078CA  0E7F               	movlw	high STR_2
  1485   0078CC  6E5D               	movwf	(printf@fmt+1)^0,c
  1486   0078CE  ECB6  F036         	call	_printf	;wreg free
  1487                           
  1488                           ;main.c: 48:                     break;
  1489   0078D2  0EE2               	movlw	low STR_3
  1490   0078D4  6E5C               	movwf	printf@fmt^0,c
  1491   0078D6  0E7F               	movlw	high STR_3
  1492   0078D8  6E5D               	movwf	(printf@fmt+1)^0,c
  1493   0078DA  ECB6  F036         	call	_printf	;wreg free
  1494                           
  1495                           ;main.c: 49: 
  1496   0078DE  0EFA               	movlw	low STR_4
  1497   0078E0  6E5C               	movwf	printf@fmt^0,c
  1498   0078E2  0E7F               	movlw	high STR_4
  1499   0078E4  6E5D               	movwf	(printf@fmt+1)^0,c
  1500   0078E6  ECB6  F036         	call	_printf	;wreg free
  1501   0078EA                     l1966:
  1502                           
  1503                           ;main.c: 53:                 case 'o':
  1504   0078EA  EC39  F036         	call	_EUSART1_is_rx_ready	;wreg free
  1505   0078EE  0900               	iorlw	0
  1506   0078F0  B4D8               	btfsc	status,2,c
  1507   0078F2  EF7D  F03C         	goto	u1111
  1508   0078F6  EF7F  F03C         	goto	u1110
  1509   0078FA                     u1111:
  1510   0078FA  EF75  F03C         	goto	l1966
  1511   0078FE                     u1110:
  1512   0078FE                     
  1513                           ;main.c: 54:                     printf("o:	ok\r\n");
  1514   0078FE  ECCA  F036         	call	_EUSART1_Read	;wreg free
  1515   007902  0100               	movlb	0	; () banked
  1516   007904  6FB3               	movwf	main@cmd& (0+255),b
  1517                           
  1518                           ;main.c: 55:                     break;
  1519   007906  EF38  F03E         	goto	l2066
  1520   00790A                     l1970:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 61:                     for (i = 0; i < 40; i++) printf("\n");
  1524   00790A  0E88               	movlw	low STR_5
  1525   00790C  6E5C               	movwf	printf@fmt^0,c
  1526   00790E  0E7D               	movlw	high STR_5
  1527   007910  6E5D               	movwf	(printf@fmt+1)^0,c
  1528   007912  ECB6  F036         	call	_printf	;wreg free
  1529                           
  1530                           ;main.c: 62:                     __asm("reset");
  1531   007916  0E88               	movlw	low STR_5
  1532   007918  6E5C               	movwf	printf@fmt^0,c
  1533   00791A  0E7D               	movlw	high STR_5
  1534   00791C  6E5D               	movwf	(printf@fmt+1)^0,c
  1535   00791E  ECB6  F036         	call	_printf	;wreg free
  1536                           
  1537                           ;main.c: 63:                     break;
  1538   007922  0EBD               	movlw	low STR_7
  1539   007924  6E5C               	movwf	printf@fmt^0,c
  1540   007926  0E7F               	movlw	high STR_7
  1541   007928  6E5D               	movwf	(printf@fmt+1)^0,c
  1542   00792A  ECB6  F036         	call	_printf	;wreg free
  1543                           
  1544                           ;main.c: 64: 
  1545   00792E  0EF3               	movlw	low STR_8
  1546   007930  6E5C               	movwf	printf@fmt^0,c
  1547   007932  0E7F               	movlw	high STR_8
  1548   007934  6E5D               	movwf	(printf@fmt+1)^0,c
  1549   007936  ECB6  F036         	call	_printf	;wreg free
  1550                           
  1551                           ;main.c: 65: 
  1552   00793A  0E84               	movlw	low STR_9
  1553   00793C  6E5C               	movwf	printf@fmt^0,c
  1554   00793E  0E7F               	movlw	high STR_9
  1555   007940  6E5D               	movwf	(printf@fmt+1)^0,c
  1556   007942  ECB6  F036         	call	_printf	;wreg free
  1557                           
  1558                           ;main.c: 66: 
  1559   007946  0E6C               	movlw	low STR_10
  1560   007948  6E5C               	movwf	printf@fmt^0,c
  1561   00794A  0E7F               	movlw	high STR_10
  1562   00794C  6E5D               	movwf	(printf@fmt+1)^0,c
  1563   00794E  ECB6  F036         	call	_printf	;wreg free
  1564                           
  1565                           ;main.c: 67: 
  1566   007952  0EFA               	movlw	low STR_11
  1567   007954  6E5C               	movwf	printf@fmt^0,c
  1568   007956  0E7E               	movlw	high STR_11
  1569   007958  6E5D               	movwf	(printf@fmt+1)^0,c
  1570   00795A  ECB6  F036         	call	_printf	;wreg free
  1571                           
  1572                           ;main.c: 68:                 case 'z':
  1573   00795E  0E53               	movlw	low STR_12
  1574   007960  6E5C               	movwf	printf@fmt^0,c
  1575   007962  0E7D               	movlw	high STR_12
  1576   007964  6E5D               	movwf	(printf@fmt+1)^0,c
  1577   007966  ECB6  F036         	call	_printf	;wreg free
  1578                           
  1579                           ;main.c: 69:                     for (i = 0; i < 40; i++) printf("\n");
  1580   00796A  0EEF               	movlw	low STR_13
  1581   00796C  6E5C               	movwf	printf@fmt^0,c
  1582   00796E  0E7D               	movlw	high STR_13
  1583   007970  6E5D               	movwf	(printf@fmt+1)^0,c
  1584   007972  ECB6  F036         	call	_printf	;wreg free
  1585                           
  1586                           ;main.c: 70:                     break;
  1587   007976  0E80               	movlw	low STR_14
  1588   007978  6E5C               	movwf	printf@fmt^0,c
  1589   00797A  0E7E               	movlw	high STR_14
  1590   00797C  6E5D               	movwf	(printf@fmt+1)^0,c
  1591   00797E  ECB6  F036         	call	_printf	;wreg free
  1592                           
  1593                           ;main.c: 71: 
  1594   007982  0E88               	movlw	low STR_5
  1595   007984  6E5C               	movwf	printf@fmt^0,c
  1596   007986  0E7D               	movlw	high STR_5
  1597   007988  6E5D               	movwf	(printf@fmt+1)^0,c
  1598   00798A  ECB6  F036         	call	_printf	;wreg free
  1599                           
  1600                           ;main.c: 72: 
  1601   00798E  EF75  F03C         	goto	l1966
  1602   007992                     l1972:
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;main.c: 78:                     volumeAdjust += 1;
  1606   007992  0EEB               	movlw	low STR_16
  1607   007994  6E5C               	movwf	printf@fmt^0,c
  1608   007996  0E7F               	movlw	high STR_16
  1609   007998  6E5D               	movwf	(printf@fmt+1)^0,c
  1610   00799A  ECB6  F036         	call	_printf	;wreg free
  1611                           
  1612                           ;main.c: 79:                     break;
  1613   00799E  EF75  F03C         	goto	l1966
  1614   0079A2                     l1974:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;main.c: 85:                     printf("Connect jumper over the RC2/LPF_in header pins.
      +                          \r\n");
  1618   0079A2  0E00               	movlw	0
  1619   0079A4  6FB4               	movwf	main@i& (0+255),b
  1620   0079A6                     l1980:
  1621                           
  1622                           ; BSR set to: 0
  1623   0079A6  0EED               	movlw	low (STR_30+49)
  1624   0079A8  6E5C               	movwf	printf@fmt^0,c
  1625   0079AA  0E7D               	movlw	high (STR_30+49)
  1626   0079AC  6E5D               	movwf	(printf@fmt+1)^0,c
  1627   0079AE  ECB6  F036         	call	_printf	;wreg free
  1628   0079B2  0100               	movlb	0	; () banked
  1629   0079B4  2BB4               	incf	main@i& (0+255),f,b
  1630   0079B6                     
  1631                           ; BSR set to: 0
  1632   0079B6  0E27               	movlw	39
  1633   0079B8  65B4               	cpfsgt	main@i& (0+255),b
  1634   0079BA  EFE1  F03C         	goto	u1121
  1635   0079BE  EFE3  F03C         	goto	u1120
  1636   0079C2                     u1121:
  1637   0079C2  EFD3  F03C         	goto	l1980
  1638   0079C6                     u1120:
  1639   0079C6                     
  1640                           ; BSR set to: 0
  1641   0079C6  00FF               	reset		;# 
  1642                           
  1643                           ;main.c: 87:                     printf("Connect Channel 2 scope probe to LPF_out.\r\n")
      +                          ;
  1644   0079C8  EF75  F03C         	goto	l1966
  1645   0079CC                     l1986:
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 93:                     (void) EUSART1_Read();
  1649   0079CC  0E00               	movlw	0
  1650   0079CE  6FB4               	movwf	main@i& (0+255),b
  1651   0079D0                     l1992:
  1652                           
  1653                           ; BSR set to: 0
  1654   0079D0  0EED               	movlw	low (STR_30+49)
  1655   0079D2  6E5C               	movwf	printf@fmt^0,c
  1656   0079D4  0E7D               	movlw	high (STR_30+49)
  1657   0079D6  6E5D               	movwf	(printf@fmt+1)^0,c
  1658   0079D8  ECB6  F036         	call	_printf	;wreg free
  1659   0079DC  0100               	movlb	0	; () banked
  1660   0079DE  2BB4               	incf	main@i& (0+255),f,b
  1661   0079E0                     
  1662                           ; BSR set to: 0
  1663   0079E0  0E27               	movlw	39
  1664   0079E2  65B4               	cpfsgt	main@i& (0+255),b
  1665   0079E4  EFF6  F03C         	goto	u1131
  1666   0079E8  EFF8  F03C         	goto	u1130
  1667   0079EC                     u1131:
  1668   0079EC  EFE8  F03C         	goto	l1992
  1669   0079F0                     u1130:
  1670   0079F0  EF75  F03C         	goto	l1966
  1671   0079F4                     l1998:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;main.c: 98:                     while ((EUSART1_is_rx_ready()) == 0);
  1675   0079F4  07B2               	decf	main@volumeAdjust& (0+255),f,b
  1676                           
  1677                           ;main.c: 99:                     (void) EUSART1_Read();
  1678   0079F6  EF75  F03C         	goto	l1966
  1679   0079FA                     l2000:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;main.c: 102: 
  1683   0079FA  2BB2               	incf	main@volumeAdjust& (0+255),f,b
  1684                           
  1685                           ;main.c: 103: 
  1686   0079FC  EF75  F03C         	goto	l1966
  1687   007A00                     l2002:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;main.c: 109:                     printf("Connect Channel 1 scope probe to RC2.\r\n");
  1691   007A00  0E22               	movlw	low STR_19
  1692   007A02  6E5C               	movwf	printf@fmt^0,c
  1693   007A04  0E7E               	movlw	high STR_19
  1694   007A06  6E5D               	movwf	(printf@fmt+1)^0,c
  1695   007A08  ECB6  F036         	call	_printf	;wreg free
  1696                           
  1697                           ;main.c: 110:                     printf("Connect Channel 2 scope probe to LPF_out.\r\n"
      +                          );
  1698   007A0C  0ED2               	movlw	low STR_20
  1699   007A0E  6E5C               	movwf	printf@fmt^0,c
  1700   007A10  0E7E               	movlw	high STR_20
  1701   007A12  6E5D               	movwf	(printf@fmt+1)^0,c
  1702   007A14  ECB6  F036         	call	_printf	;wreg free
  1703                           
  1704                           ;main.c: 111:                     printf("Press ""x"" to exit.\r\n");
  1705   007A18  0E54               	movlw	low STR_21
  1706   007A1A  6E5C               	movwf	printf@fmt^0,c
  1707   007A1C  0E7E               	movlw	high STR_21
  1708   007A1E  6E5D               	movwf	(printf@fmt+1)^0,c
  1709   007A20  ECB6  F036         	call	_printf	;wreg free
  1710   007A24                     
  1711                           ;main.c: 113: 
  1712   007A24  0E00               	movlw	0
  1713   007A26  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1714   007A28  0E00               	movlw	0
  1715   007A2A  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1716   007A2C  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  1717   007A30                     
  1718                           ;main.c: 114:                     index = 0;
  1719   007A30  0E16               	movlw	low STR_22
  1720   007A32  6E5C               	movwf	printf@fmt^0,c
  1721   007A34  0E7D               	movlw	high STR_22
  1722   007A36  6E5D               	movwf	(printf@fmt+1)^0,c
  1723   007A38  ECB6  F036         	call	_printf	;wreg free
  1724   007A3C                     
  1725                           ;main.c: 115:                     do {
  1726   007A3C  0EAA               	movlw	low STR_23
  1727   007A3E  6E5C               	movwf	printf@fmt^0,c
  1728   007A40  0E7E               	movlw	high STR_23
  1729   007A42  6E5D               	movwf	(printf@fmt+1)^0,c
  1730   007A44  ECB6  F036         	call	_printf	;wreg free
  1731   007A48                     l2010:
  1732   007A48  EC39  F036         	call	_EUSART1_is_rx_ready	;wreg free
  1733   007A4C  0900               	iorlw	0
  1734   007A4E  B4D8               	btfsc	status,2,c
  1735   007A50  EF2C  F03D         	goto	u1141
  1736   007A54  EF2E  F03D         	goto	u1140
  1737   007A58                     u1141:
  1738   007A58  EF24  F03D         	goto	l2010
  1739   007A5C                     u1140:
  1740   007A5C                     
  1741                           ;main.c: 117:                         printf("Current LoadDutyValue = %d\r\n", sin[index
      +                          ]);
  1742   007A5C  ECCA  F036         	call	_EUSART1_Read	;wreg free
  1743   007A60                     
  1744                           ;main.c: 119:                         index = (index + 1)&0b00011111;
  1745   007A60  0E01               	movlw	1
  1746   007A62  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1747   007A64  0E00               	movlw	0
  1748   007A66  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1749   007A68  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  1750   007A6C                     
  1751                           ;main.c: 120:                     } while (EUSART1_Read() != 'x');
  1752   007A6C  0ED7               	movlw	low STR_24
  1753   007A6E  6E5C               	movwf	printf@fmt^0,c
  1754   007A70  0E7C               	movlw	high STR_24
  1755   007A72  6E5D               	movwf	(printf@fmt+1)^0,c
  1756   007A74  ECB6  F036         	call	_printf	;wreg free
  1757   007A78                     
  1758                           ;main.c: 121: 
  1759   007A78  0E53               	movlw	low STR_25
  1760   007A7A  6E5C               	movwf	printf@fmt^0,c
  1761   007A7C  0E7F               	movlw	high STR_25
  1762   007A7E  6E5D               	movwf	(printf@fmt+1)^0,c
  1763   007A80  ECB6  F036         	call	_printf	;wreg free
  1764   007A84                     l2020:
  1765   007A84  EC39  F036         	call	_EUSART1_is_rx_ready	;wreg free
  1766   007A88  0900               	iorlw	0
  1767   007A8A  B4D8               	btfsc	status,2,c
  1768   007A8C  EF4A  F03D         	goto	u1151
  1769   007A90  EF4C  F03D         	goto	u1150
  1770   007A94                     u1151:
  1771   007A94  EF42  F03D         	goto	l2020
  1772   007A98                     u1150:
  1773   007A98                     
  1774                           ;main.c: 123:                     printf("Exit PWM\r\n");
  1775   007A98  ECCA  F036         	call	_EUSART1_Read	;wreg free
  1776                           
  1777                           ;main.c: 125: 
  1778   007A9C  EF75  F03C         	goto	l1966
  1779   007AA0                     l2024:
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;main.c: 132:                     printf("Connect Channel 2 scope probe to LPF_out.\r\n"
      +                          );
  1783   007AA0  0E22               	movlw	low STR_19
  1784   007AA2  6E5C               	movwf	printf@fmt^0,c
  1785   007AA4  0E7E               	movlw	high STR_19
  1786   007AA6  6E5D               	movwf	(printf@fmt+1)^0,c
  1787   007AA8  ECB6  F036         	call	_printf	;wreg free
  1788                           
  1789                           ;main.c: 133:                     printf("Press any key to exit.\r\n");
  1790   007AAC  0ED2               	movlw	low STR_20
  1791   007AAE  6E5C               	movwf	printf@fmt^0,c
  1792   007AB0  0E7E               	movlw	high STR_20
  1793   007AB2  6E5D               	movwf	(printf@fmt+1)^0,c
  1794   007AB4  ECB6  F036         	call	_printf	;wreg free
  1795                           
  1796                           ;main.c: 134: 
  1797   007AB8  0E54               	movlw	low STR_21
  1798   007ABA  6E5C               	movwf	printf@fmt^0,c
  1799   007ABC  0E7E               	movlw	high STR_21
  1800   007ABE  6E5D               	movwf	(printf@fmt+1)^0,c
  1801   007AC0  ECB6  F036         	call	_printf	;wreg free
  1802                           
  1803                           ;main.c: 135:                     while ((EUSART1_is_rx_ready()) == 0) {
  1804   007AC4  0E99               	movlw	low STR_29
  1805   007AC6  6E5C               	movwf	printf@fmt^0,c
  1806   007AC8  0E7F               	movlw	high STR_29
  1807   007ACA  6E5D               	movwf	(printf@fmt+1)^0,c
  1808   007ACC  ECB6  F036         	call	_printf	;wreg free
  1809                           
  1810                           ;main.c: 136: 
  1811   007AD0  0EBC               	movlw	low STR_30
  1812   007AD2  6E5C               	movwf	printf@fmt^0,c
  1813   007AD4  0E7D               	movlw	high STR_30
  1814   007AD6  6E5D               	movwf	(printf@fmt+1)^0,c
  1815   007AD8  ECB6  F036         	call	_printf	;wreg free
  1816   007ADC                     
  1817                           ;main.c: 138:                         INTCONbits.TMR0IF = 0;
  1818   007ADC  0E00               	movlw	0
  1819   007ADE  0100               	movlb	0	; () banked
  1820   007AE0  6FB6               	movwf	(main@index+1)& (0+255),b
  1821   007AE2  0E00               	movlw	0
  1822   007AE4  6FB5               	movwf	main@index& (0+255),b
  1823   007AE6                     l2028:
  1824                           
  1825                           ;main.c: 140: 
  1826   007AE6  0E92               	movlw	low main@sin
  1827   007AE8  0100               	movlb	0	; () banked
  1828   007AEA  25B5               	addwf	main@index& (0+255),w,b
  1829   007AEC  6ED9               	movwf	fsr2l,c
  1830   007AEE  0E00               	movlw	high main@sin
  1831   007AF0  21B6               	addwfc	(main@index+1)& (0+255),w,b
  1832   007AF2  6EDA               	movwf	fsr2h,c
  1833   007AF4  50DF               	movf	indf2,w,c
  1834   007AF6  6F90               	movwf	??_main& (0+255),b
  1835   007AF8  5190               	movf	??_main& (0+255),w,b
  1836   007AFA  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1837   007AFC  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1838   007AFE  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  1839   007B02                     
  1840                           ;main.c: 141: 
  1841   007B02  0E1A               	movlw	low STR_31
  1842   007B04  6E5C               	movwf	printf@fmt^0,c
  1843   007B06  0E7F               	movlw	high STR_31
  1844   007B08  6E5D               	movwf	(printf@fmt+1)^0,c
  1845   007B0A  0E92               	movlw	low main@sin
  1846   007B0C  0100               	movlb	0	; () banked
  1847   007B0E  25B5               	addwf	main@index& (0+255),w,b
  1848   007B10  6ED9               	movwf	fsr2l,c
  1849   007B12  0E00               	movlw	high main@sin
  1850   007B14  21B6               	addwfc	(main@index+1)& (0+255),w,b
  1851   007B16  6EDA               	movwf	fsr2h,c
  1852   007B18  50DF               	movf	indf2,w,c
  1853   007B1A  6F90               	movwf	??_main& (0+255),b
  1854   007B1C  5190               	movf	??_main& (0+255),w,b
  1855   007B1E  6E5E               	movwf	(?_printf+2)^0,c
  1856   007B20  6A5F               	clrf	(?_printf+3)^0,c
  1857   007B22  ECB6  F036         	call	_printf	;wreg free
  1858   007B26                     l2032:
  1859   007B26  EC39  F036         	call	_EUSART1_is_rx_ready	;wreg free
  1860   007B2A  0900               	iorlw	0
  1861   007B2C  B4D8               	btfsc	status,2,c
  1862   007B2E  EF9B  F03D         	goto	u1161
  1863   007B32  EF9D  F03D         	goto	u1160
  1864   007B36                     u1161:
  1865   007B36  EF93  F03D         	goto	l2032
  1866   007B3A                     u1160:
  1867   007B3A                     
  1868                           ;main.c: 143:                         index = (index + 1)&0b00011111;
  1869   007B3A  0E01               	movlw	1
  1870   007B3C  0100               	movlb	0	; () banked
  1871   007B3E  25B5               	addwf	main@index& (0+255),w,b
  1872   007B40  6F90               	movwf	??_main& (0+255),b
  1873   007B42  0E00               	movlw	0
  1874   007B44  21B6               	addwfc	(main@index+1)& (0+255),w,b
  1875   007B46  6F91               	movwf	(??_main+1)& (0+255),b
  1876   007B48  0E1F               	movlw	31
  1877   007B4A  1590               	andwf	??_main& (0+255),w,b
  1878   007B4C  6FB5               	movwf	main@index& (0+255),b
  1879   007B4E  6BB6               	clrf	(main@index+1)& (0+255),b
  1880   007B50                     
  1881                           ; BSR set to: 0
  1882                           ;main.c: 144: 
  1883   007B50  ECCA  F036         	call	_EUSART1_Read	;wreg free
  1884   007B54  0A78               	xorlw	120
  1885   007B56  A4D8               	btfss	status,2,c
  1886   007B58  EFB0  F03D         	goto	u1171
  1887   007B5C  EFB2  F03D         	goto	u1170
  1888   007B60                     u1171:
  1889   007B60  EF73  F03D         	goto	l2028
  1890   007B64                     u1170:
  1891   007B64                     
  1892                           ;main.c: 146: 
  1893   007B64  0E00               	movlw	0
  1894   007B66  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1895   007B68  0E00               	movlw	0
  1896   007B6A  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1897   007B6C  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  1898   007B70                     
  1899                           ;main.c: 147:                     EPWM1_LoadDutyValue(0);
  1900   007B70  0ED7               	movlw	low STR_32
  1901   007B72  6E5C               	movwf	printf@fmt^0,c
  1902   007B74  0E7F               	movlw	high STR_32
  1903   007B76  6E5D               	movwf	(printf@fmt+1)^0,c
  1904   007B78  ECB6  F036         	call	_printf	;wreg free
  1905                           
  1906                           ;main.c: 148:                     (void) EUSART1_Read();
  1907   007B7C  EF75  F03C         	goto	l1966
  1908   007B80                     l2042:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;main.c: 154: 
  1912   007B80  0E22               	movlw	low STR_19
  1913   007B82  6E5C               	movwf	printf@fmt^0,c
  1914   007B84  0E7E               	movlw	high STR_19
  1915   007B86  6E5D               	movwf	(printf@fmt+1)^0,c
  1916   007B88  ECB6  F036         	call	_printf	;wreg free
  1917                           
  1918                           ;main.c: 155:                 default:
  1919   007B8C  0ED2               	movlw	low STR_20
  1920   007B8E  6E5C               	movwf	printf@fmt^0,c
  1921   007B90  0E7E               	movlw	high STR_20
  1922   007B92  6E5D               	movwf	(printf@fmt+1)^0,c
  1923   007B94  ECB6  F036         	call	_printf	;wreg free
  1924                           
  1925                           ;main.c: 156:                     printf("Unknown key %c\r\n", cmd);
  1926   007B98  0E54               	movlw	low STR_21
  1927   007B9A  6E5C               	movwf	printf@fmt^0,c
  1928   007B9C  0E7E               	movlw	high STR_21
  1929   007B9E  6E5D               	movwf	(printf@fmt+1)^0,c
  1930   007BA0  ECB6  F036         	call	_printf	;wreg free
  1931                           
  1932                           ;main.c: 157:                     break;
  1933   007BA4  0E53               	movlw	low STR_25
  1934   007BA6  6E5C               	movwf	printf@fmt^0,c
  1935   007BA8  0E7F               	movlw	high STR_25
  1936   007BAA  6E5D               	movwf	(printf@fmt+1)^0,c
  1937   007BAC  ECB6  F036         	call	_printf	;wreg free
  1938                           
  1939                           ;main.c: 159: 
  1940   007BB0  EF13  F03E         	goto	l2054
  1941   007BB4                     l2044:
  1942                           
  1943                           ;main.c: 161:     }
  1944   007BB4  EC73  F036         	call	_TMR0_ReadTimer	;wreg free
  1945   007BB8  0E7F               	movlw	127
  1946   007BBA  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  1947   007BBC  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  1948   007BBE  0EF3               	movlw	243
  1949   007BC0  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  1950   007BC2  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1951   007BC4  EC27  F036         	call	_TMR0_WriteTimer	;wreg free
  1952   007BC8                     
  1953                           ;main.c: 162: }
  1954   007BC8  94F2               	bcf	242,2,c	;volatile
  1955   007BCA                     l2048:
  1956   007BCA  EC43  F036         	call	_TMR0_HasOverflowOccured	;wreg free
  1957   007BCE  0900               	iorlw	0
  1958   007BD0  B4D8               	btfsc	status,2,c
  1959   007BD2  EFED  F03D         	goto	u1181
  1960   007BD6  EFEF  F03D         	goto	u1180
  1961   007BDA                     u1181:
  1962   007BDA  EFE5  F03D         	goto	l2048
  1963   007BDE                     u1180:
  1964   007BDE  C0B2  F090         	movff	main@volumeAdjust,??_main
  1965   007BE2  0E92               	movlw	low main@sin
  1966   007BE4  0100               	movlb	0	; () banked
  1967   007BE6  25B5               	addwf	main@index& (0+255),w,b
  1968   007BE8  6ED9               	movwf	fsr2l,c
  1969   007BEA  0E00               	movlw	high main@sin
  1970   007BEC  21B6               	addwfc	(main@index+1)& (0+255),w,b
  1971   007BEE  6EDA               	movwf	fsr2h,c
  1972   007BF0  50DF               	movf	indf2,w,c
  1973   007BF2  6F91               	movwf	(??_main+1)& (0+255),b
  1974   007BF4  2B90               	incf	??_main& (0+255),f,b
  1975   007BF6  EFFF  F03D         	goto	u1194
  1976   007BFA                     u1195:
  1977   007BFA  90D8               	bcf	status,0,c
  1978   007BFC  3391               	rrcf	(??_main+1)& (0+255),f,b
  1979   007BFE                     u1194:
  1980   007BFE  2F90               	decfsz	??_main& (0+255),f,b
  1981   007C00  EFFD  F03D         	goto	u1195
  1982   007C04  0100               	movlb	0	; () banked
  1983   007C06  5191               	movf	(??_main+1)& (0+255),w,b
  1984   007C08  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1985   007C0A  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1986   007C0C  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  1987   007C10  0E01               	movlw	1
  1988   007C12  0100               	movlb	0	; () banked
  1989   007C14  25B5               	addwf	main@index& (0+255),w,b
  1990   007C16  6F90               	movwf	??_main& (0+255),b
  1991   007C18  0E00               	movlw	0
  1992   007C1A  21B6               	addwfc	(main@index+1)& (0+255),w,b
  1993   007C1C  6F91               	movwf	(??_main+1)& (0+255),b
  1994   007C1E  0E1F               	movlw	31
  1995   007C20  1590               	andwf	??_main& (0+255),w,b
  1996   007C22  6FB5               	movwf	main@index& (0+255),b
  1997   007C24  6BB6               	clrf	(main@index+1)& (0+255),b
  1998   007C26                     l2054:
  1999                           
  2000                           ;main.c: 159: 
  2001   007C26  EC39  F036         	call	_EUSART1_is_rx_ready	;wreg free
  2002   007C2A  0900               	iorlw	0
  2003   007C2C  B4D8               	btfsc	status,2,c
  2004   007C2E  EF1B  F03E         	goto	u1201
  2005   007C32  EF1D  F03E         	goto	u1200
  2006   007C36                     u1201:
  2007   007C36  EFDA  F03D         	goto	l2044
  2008   007C3A                     u1200:
  2009   007C3A  0E00               	movlw	0
  2010   007C3C  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2011   007C3E  0E00               	movlw	0
  2012   007C40  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2013   007C42  ECF4  F036         	call	_EPWM1_LoadDutyValue	;wreg free
  2014   007C46  ECCA  F036         	call	_EUSART1_Read	;wreg free
  2015   007C4A  0ED7               	movlw	low STR_32
  2016   007C4C  6E5C               	movwf	printf@fmt^0,c
  2017   007C4E  0E7F               	movlw	high STR_32
  2018   007C50  6E5D               	movwf	(printf@fmt+1)^0,c
  2019   007C52  ECB6  F036         	call	_printf	;wreg free
  2020   007C56  EF75  F03C         	goto	l1966
  2021   007C5A                     l2062:
  2022                           
  2023                           ; BSR set to: 0
  2024   007C5A  0EAC               	movlw	low STR_38
  2025   007C5C  6E5C               	movwf	printf@fmt^0,c
  2026   007C5E  0E7F               	movlw	high STR_38
  2027   007C60  6E5D               	movwf	(printf@fmt+1)^0,c
  2028   007C62  C0B3  F05E         	movff	main@cmd,?_printf+2
  2029   007C66  6A5F               	clrf	(?_printf+3)^0,c
  2030   007C68  ECB6  F036         	call	_printf	;wreg free
  2031   007C6C  EF75  F03C         	goto	l1966
  2032   007C70                     l2066:
  2033                           
  2034                           ; BSR set to: 0
  2035   007C70  51B3               	movf	main@cmd& (0+255),w,b
  2036   007C72  6F90               	movwf	??_main& (0+255),b
  2037   007C74  6B91               	clrf	(??_main+1)& (0+255),b
  2038                           
  2039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2040                           ; Switch size 1, requested type "simple"
  2041                           ; Number of cases is 1, Range of values is 0 to 0
  2042                           ; switch strategies available:
  2043                           ; Name         Instructions Cycles
  2044                           ; simple_byte            4     3 (average)
  2045                           ;	Chosen strategy is simple_byte
  2046   007C76  5191               	movf	(??_main+1)& (0+255),w,b
  2047   007C78  0A00               	xorlw	0	; case 0
  2048   007C7A  B4D8               	btfsc	status,2,c
  2049   007C7C  EF42  F03E         	goto	l2096
  2050   007C80  EF2D  F03E         	goto	l2062
  2051   007C84                     l2096:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ; Switch size 1, requested type "simple"
  2055                           ; Number of cases is 9, Range of values is 43 to 122
  2056                           ; switch strategies available:
  2057                           ; Name         Instructions Cycles
  2058                           ; simple_byte           28    15 (average)
  2059                           ;	Chosen strategy is simple_byte
  2060   007C84  5190               	movf	??_main& (0+255),w,b
  2061   007C86  0A2B               	xorlw	43	; case 43
  2062   007C88  B4D8               	btfsc	status,2,c
  2063   007C8A  EFFA  F03C         	goto	l1998
  2064   007C8E  0A06               	xorlw	6	; case 45
  2065   007C90  B4D8               	btfsc	status,2,c
  2066   007C92  EFFD  F03C         	goto	l2000
  2067   007C96  0A12               	xorlw	18	; case 63
  2068   007C98  B4D8               	btfsc	status,2,c
  2069   007C9A  EF85  F03C         	goto	l1970
  2070   007C9E  0A6C               	xorlw	108	; case 83
  2071   007CA0  B4D8               	btfsc	status,2,c
  2072   007CA2  EF00  F03D         	goto	l2002
  2073   007CA6  0A09               	xorlw	9	; case 90
  2074   007CA8  B4D8               	btfsc	status,2,c
  2075   007CAA  EFD1  F03C         	goto	l1974
  2076   007CAE  0A35               	xorlw	53	; case 111
  2077   007CB0  B4D8               	btfsc	status,2,c
  2078   007CB2  EFC9  F03C         	goto	l1972
  2079   007CB6  0A1F               	xorlw	31	; case 112
  2080   007CB8  B4D8               	btfsc	status,2,c
  2081   007CBA  EFC0  F03D         	goto	l2042
  2082   007CBE  0A03               	xorlw	3	; case 115
  2083   007CC0  B4D8               	btfsc	status,2,c
  2084   007CC2  EF50  F03D         	goto	l2024
  2085   007CC6  0A09               	xorlw	9	; case 122
  2086   007CC8  B4D8               	btfsc	status,2,c
  2087   007CCA  EFE6  F03C         	goto	l1986
  2088   007CCE  EF2D  F03E         	goto	l2062
  2089   007CD2  EF00  F000         	goto	start
  2090   007CD6                     __end_of_main:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function _printf *****************
  2094 ;; Defined at:
  2095 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  fmt             2   91[COMRAM] PTR const unsigned char 
  2098 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2099 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2100 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2101 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2102 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2103 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2104 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2105 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2106 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2107 ;;		 -> STR_2(28), STR_1(11), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  ap              2    0[BANK0 ] PTR void [1]
  2110 ;;		 -> ?_printf(2), 
  2111 ;;  ret             2    0        int 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  2   91[COMRAM] int 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2121 ;;      Params:         4       0       0       0       0       0       0
  2122 ;;      Locals:         0       2       0       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0
  2124 ;;      Totals:         4       2       0       0       0       0       0
  2125 ;;Total ram usage:        6 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 8
  2128 ;; This function calls:
  2129 ;;		_vfprintf
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text1
  2136   006D6C                     __ptext1:
  2137                           	callstack 0
  2138   006D6C                     _printf:
  2139                           	callstack 22
  2140   006D6C  0E5E               	movlw	low (?_printf+2)
  2141   006D6E  0100               	movlb	0	; () banked
  2142   006D70  6F8E               	movwf	printf@ap& (0+255),b
  2143   006D72  0E00               	movlw	high (?_printf+2)
  2144   006D74  6F8F               	movwf	(printf@ap+1)& (0+255),b
  2145   006D76                     
  2146                           ; BSR set to: 0
  2147   006D76  0E00               	movlw	0
  2148   006D78  6E54               	movwf	vfprintf@fp^0,c
  2149   006D7A  0E00               	movlw	0
  2150   006D7C  6E55               	movwf	(vfprintf@fp+1)^0,c
  2151   006D7E  C05C  F056         	movff	printf@fmt,vfprintf@fmt
  2152   006D82  C05D  F057         	movff	printf@fmt+1,vfprintf@fmt+1
  2153   006D86  0E8E               	movlw	low printf@ap
  2154   006D88  6E58               	movwf	vfprintf@ap^0,c
  2155   006D8A  0E00               	movlw	high printf@ap
  2156   006D8C  6E59               	movwf	(vfprintf@ap+1)^0,c
  2157   006D8E  EC89  F037         	call	_vfprintf	;wreg free
  2158   006D92  0012               	return		;funcret
  2159   006D94                     __end_of_printf:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _vfprintf *****************
  2163 ;; Defined at:
  2164 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  2167 ;;		 -> NULL(0), 
  2168 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  2169 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2170 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2171 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2172 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2173 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2174 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2175 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2176 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2177 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2178 ;;		 -> STR_2(28), STR_1(11), 
  2179 ;;  ap              2   87[COMRAM] PTR PTR void 
  2180 ;;		 -> printf@ap(2), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  2183 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2184 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2185 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2186 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2187 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2188 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2189 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2190 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2191 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2192 ;;		 -> STR_2(28), STR_1(11), 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  2   83[COMRAM] int 
  2195 ;; Registers used:
  2196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2202 ;;      Params:         6       0       0       0       0       0       0
  2203 ;;      Locals:         2       0       0       0       0       0       0
  2204 ;;      Temps:          0       0       0       0       0       0       0
  2205 ;;      Totals:         8       0       0       0       0       0       0
  2206 ;;Total ram usage:        8 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 7
  2209 ;; This function calls:
  2210 ;;		_vfpfcnvrt
  2211 ;; This function is called by:
  2212 ;;		_printf
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text2
  2217   006F12                     __ptext2:
  2218                           	callstack 0
  2219   006F12                     _vfprintf:
  2220                           	callstack 22
  2221   006F12                     
  2222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2223   006F12  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  2224   006F16  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2225                           
  2226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2227   006F1A  EF9D  F037         	goto	l1896
  2228   006F1E                     l1894:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2231   006F1E  C054  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  2232   006F22  C055  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2233   006F26  0E5A               	movlw	low vfprintf@cfmt
  2234   006F28  6E43               	movwf	vfpfcnvrt@fmt^0,c
  2235   006F2A  0E00               	movlw	high vfprintf@cfmt
  2236   006F2C  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2237   006F2E  C058  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  2238   006F32  C059  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2239   006F36  ECFC  F039         	call	_vfpfcnvrt	;wreg free
  2240   006F3A                     l1896:
  2241                           
  2242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2243   006F3A  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2244   006F3E  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2245   006F42                     	if	0	;tblptru may be non-zero
  2246   006F42                     	endif
  2247   006F42                     	if	0	;tblptru may be non-zero
  2248   006F42                     	endif
  2249   006F42  0008               	tblrd		*
  2250   006F44  50F5               	movf	tablat,w,c
  2251   006F46  0900               	iorlw	0
  2252   006F48  A4D8               	btfss	status,2,c
  2253   006F4A  EFA9  F037         	goto	u1041
  2254   006F4E  EFAB  F037         	goto	u1040
  2255   006F52                     u1041:
  2256   006F52  EF8F  F037         	goto	l1894
  2257   006F56                     u1040:
  2258   006F56                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2260   006F56  0E00               	movlw	0
  2261   006F58  6E55               	movwf	(?_vfprintf+1)^0,c
  2262   006F5A  0E00               	movlw	0
  2263   006F5C  6E54               	movwf	?_vfprintf^0,c
  2264   006F5E  0012               	return		;funcret
  2265   006F60                     __end_of_vfprintf:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _vfpfcnvrt *****************
  2269 ;; Defined at:
  2270 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  2273 ;;		 -> NULL(0), 
  2274 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  2275 ;;		 -> vfprintf@cfmt(2), 
  2276 ;;  ap              2   68[COMRAM] PTR PTR void 
  2277 ;;		 -> printf@ap(2), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  convarg         8   72[COMRAM] struct .
  2280 ;;  cp              2   81[COMRAM] PTR unsigned char 
  2281 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2282 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2283 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2284 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2285 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2286 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2287 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2288 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2289 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2290 ;;		 -> STR_2(28), STR_1(11), 
  2291 ;;  i               2    0        int 
  2292 ;;  done            2    0        int 
  2293 ;;  c               1   80[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  1    wreg      void 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2303 ;;      Params:         6       0       0       0       0       0       0
  2304 ;;      Locals:        11       0       0       0       0       0       0
  2305 ;;      Temps:          2       0       0       0       0       0       0
  2306 ;;      Totals:        19       0       0       0       0       0       0
  2307 ;;Total ram usage:       19 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; Hardware stack levels required when called: 6
  2310 ;; This function calls:
  2311 ;;		_ctoa
  2312 ;;		_dtoa
  2313 ;;		_fputc
  2314 ;; This function is called by:
  2315 ;;		_vfprintf
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           	psect	text3
  2320   0073F8                     __ptext3:
  2321                           	callstack 0
  2322   0073F8                     _vfpfcnvrt:
  2323                           	callstack 22
  2324   0073F8                     
  2325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2326   0073F8  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2327   0073FC  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2328   007400  CFDE FFF6          	movff	postinc2,tblptrl
  2329   007404  CFDD FFF7          	movff	postdec2,tblptrh
  2330   007408                     	if	0	;tblptru may be non-zero
  2331   007408                     	endif
  2332   007408                     	if	0	;tblptru may be non-zero
  2333   007408                     	endif
  2334   007408  0008               	tblrd		*
  2335   00740A  50F5               	movf	tablat,w,c
  2336   00740C  0A25               	xorlw	37
  2337   00740E  A4D8               	btfss	status,2,c
  2338   007410  EF0C  F03A         	goto	u981
  2339   007414  EF0E  F03A         	goto	u980
  2340   007418                     u981:
  2341   007418  EFE8  F03A         	goto	l1850
  2342   00741C                     u980:
  2343   00741C                     
  2344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2345   00741C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2346   007420  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2347   007424  2ADE               	incf	postinc2,f,c
  2348   007426  0E00               	movlw	0
  2349   007428  22DD               	addwfc	postdec2,f,c
  2350   00742A                     
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2352   00742A  0E00               	movlw	0
  2353   00742C  0100               	movlb	0	; () banked
  2354   00742E  6F61               	movwf	(_width+1)& (0+255),b
  2355   007430  0E00               	movlw	0
  2356   007432  6F60               	movwf	_width& (0+255),b
  2357   007434  C060  F06C         	movff	_width,_flags
  2358   007438                     
  2359                           ; BSR set to: 0
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2361   007438  6962               	setf	_prec& (0+255),b
  2362   00743A  6963               	setf	(_prec+1)& (0+255),b
  2363   00743C                     
  2364                           ; BSR set to: 0
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2366   00743C  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2367   007440  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2368   007444  CFDE FFF6          	movff	postinc2,tblptrl
  2369   007448  CFDD FFF7          	movff	postdec2,tblptrh
  2370   00744C                     	if	0	;tblptru may be non-zero
  2371   00744C                     	endif
  2372   00744C                     	if	0	;tblptru may be non-zero
  2373   00744C                     	endif
  2374   00744C  0008               	tblrd		*
  2375   00744E  50F5               	movf	tablat,w,c
  2376   007450  0A63               	xorlw	99
  2377   007452  A4D8               	btfss	status,2,c
  2378   007454  EF2E  F03A         	goto	u991
  2379   007458  EF30  F03A         	goto	u990
  2380   00745C                     u991:
  2381   00745C  EF53  F03A         	goto	l1826
  2382   007460                     u990:
  2383   007460                     
  2384                           ; BSR set to: 0
  2385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2386   007460  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2387   007464  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2388   007468  2ADE               	incf	postinc2,f,c
  2389   00746A  0E00               	movlw	0
  2390   00746C  22DD               	addwfc	postdec2,f,c
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2393   00746E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2394   007472  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2395   007476  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2396   00747A  0E02               	movlw	2
  2397   00747C  26DE               	addwf	postinc2,f,c
  2398   00747E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2399   007482  0E00               	movlw	0
  2400   007484  22DD               	addwfc	postdec2,f,c
  2401   007486  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2402   00748A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2403   00748E  50DF               	movf	indf2,w,c
  2404   007490  6E51               	movwf	vfpfcnvrt@c^0,c
  2405   007492                     
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2408   007492  C041  F00C         	movff	vfpfcnvrt@fp,ctoa@fp
  2409   007496  C042  F00D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2410   00749A  C051  F00E         	movff	vfpfcnvrt@c,ctoa@c
  2411   00749E  EC38  F038         	call	_ctoa	;wreg free
  2412   0074A2  EFFC  F03A         	goto	l1047
  2413   0074A6                     l1826:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2417   0074A6  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418   0074AA  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419   0074AE  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  2420   0074B2  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  2421   0074B6                     
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2424   0074B6  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2425   0074BA  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2426   0074BE                     	if	0	;tblptru may be non-zero
  2427   0074BE                     	endif
  2428   0074BE                     	if	0	;tblptru may be non-zero
  2429   0074BE                     	endif
  2430   0074BE  0008               	tblrd		*
  2431   0074C0  50F5               	movf	tablat,w,c
  2432   0074C2  0A64               	xorlw	100
  2433   0074C4  B4D8               	btfsc	status,2,c
  2434   0074C6  EF67  F03A         	goto	u1001
  2435   0074CA  EF69  F03A         	goto	u1000
  2436   0074CE                     u1001:
  2437   0074CE  EF77  F03A         	goto	l1832
  2438   0074D2                     u1000:
  2439   0074D2                     
  2440                           ; BSR set to: 0
  2441   0074D2  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2442   0074D6  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2443   0074DA                     	if	0	;tblptru may be non-zero
  2444   0074DA                     	endif
  2445   0074DA                     	if	0	;tblptru may be non-zero
  2446   0074DA                     	endif
  2447   0074DA  0008               	tblrd		*
  2448   0074DC  50F5               	movf	tablat,w,c
  2449   0074DE  0A69               	xorlw	105
  2450   0074E0  A4D8               	btfss	status,2,c
  2451   0074E2  EF75  F03A         	goto	u1011
  2452   0074E6  EF77  F03A         	goto	u1010
  2453   0074EA                     u1011:
  2454   0074EA  EFBA  F03A         	goto	l1838
  2455   0074EE                     u1010:
  2456   0074EE                     l1832:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2460   0074EE  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2461   0074F2  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2462   0074F6  CFDF F047          	movff	indf2,??_vfpfcnvrt
  2463   0074FA  0E02               	movlw	2
  2464   0074FC  26DE               	addwf	postinc2,f,c
  2465   0074FE  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  2466   007502  0E00               	movlw	0
  2467   007504  22DD               	addwfc	postdec2,f,c
  2468   007506  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2469   00750A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2470   00750E  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  2471   007512  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  2472   007516  0E00               	movlw	0
  2473   007518  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2474   00751A  0EFF               	movlw	-1
  2475   00751C  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2476   00751E  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2477   007520  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2478   007522  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2479   007524  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2480   007526  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2483   007528  0E01               	movlw	1
  2484   00752A  2452               	addwf	vfpfcnvrt@cp^0,w,c
  2485   00752C  6E47               	movwf	??_vfpfcnvrt^0,c
  2486   00752E  0E00               	movlw	0
  2487   007530  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2488   007532  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  2489   007534  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2490   007538  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2491   00753C  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  2492   007540  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2493   007544                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2496   007544  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2497   007548  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2498   00754C  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  2499   007550  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2500   007554  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2501   007558  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2502   00755C  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2503   007560  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2504   007564  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2505   007568  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2506   00756C  ECFD  F03A         	call	_dtoa	;wreg free
  2507   007570  EFFC  F03A         	goto	l1047
  2508   007574                     l1838:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1501:         if 
      +                          ((*fmt)[0] == '%') {
  2512   007574  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2513   007578  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2514   00757C  CFDE FFF6          	movff	postinc2,tblptrl
  2515   007580  CFDD FFF7          	movff	postdec2,tblptrh
  2516   007584                     	if	0	;tblptru may be non-zero
  2517   007584                     	endif
  2518   007584                     	if	0	;tblptru may be non-zero
  2519   007584                     	endif
  2520   007584  0008               	tblrd		*
  2521   007586  50F5               	movf	tablat,w,c
  2522   007588  0A25               	xorlw	37
  2523   00758A  A4D8               	btfss	status,2,c
  2524   00758C  EFCA  F03A         	goto	u1021
  2525   007590  EFCC  F03A         	goto	u1020
  2526   007594                     u1021:
  2527   007594  EFDF  F03A         	goto	l1846
  2528   007598                     u1020:
  2529   007598                     
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1502:            
      +                           ++*fmt;
  2532   007598  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2533   00759C  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2534   0075A0  2ADE               	incf	postinc2,f,c
  2535   0075A2  0E00               	movlw	0
  2536   0075A4  22DD               	addwfc	postdec2,f,c
  2537   0075A6                     
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1503:            
      +                           fputc((int)'%', fp);
  2540   0075A6  0E00               	movlw	0
  2541   0075A8  6E04               	movwf	(fputc@c+1)^0,c
  2542   0075AA  0E25               	movlw	37
  2543   0075AC  6E03               	movwf	fputc@c^0,c
  2544   0075AE  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2545   0075B2  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2546   0075B6  ECED  F037         	call	_fputc	;wreg free
  2547   0075BA  EFFC  F03A         	goto	l1047
  2548   0075BE                     l1846:
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2551   0075BE  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2552   0075C2  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2553   0075C6  2ADE               	incf	postinc2,f,c
  2554   0075C8  0E00               	movlw	0
  2555   0075CA  22DD               	addwfc	postdec2,f,c
  2556   0075CC  EFFC  F03A         	goto	l1047
  2557   0075D0                     l1850:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2560   0075D0  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2561   0075D4  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2562   0075D8  CFDE FFF6          	movff	postinc2,tblptrl
  2563   0075DC  CFDD FFF7          	movff	postdec2,tblptrh
  2564   0075E0                     	if	0	;tblptru may be non-zero
  2565   0075E0                     	endif
  2566   0075E0                     	if	0	;tblptru may be non-zero
  2567   0075E0                     	endif
  2568   0075E0  0008               	tblrd		*
  2569   0075E2  50F5               	movf	tablat,w,c
  2570   0075E4  6E03               	movwf	fputc@c^0,c
  2571   0075E6  6A04               	clrf	(fputc@c+1)^0,c
  2572   0075E8  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2573   0075EC  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2574   0075F0  ECED  F037         	call	_fputc	;wreg free
  2575   0075F4  EFDF  F03A         	goto	l1846
  2576   0075F8                     l1047:
  2577   0075F8  0012               	return		;funcret
  2578   0075FA                     __end_of_vfpfcnvrt:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _dtoa *****************
  2582 ;; Defined at:
  2583 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2586 ;;		 -> NULL(0), 
  2587 ;;  d               8   31[COMRAM] long long 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  n               8   53[COMRAM] long long 
  2590 ;;  i               2   61[COMRAM] int 
  2591 ;;  w               2   51[COMRAM] int 
  2592 ;;  p               2   49[COMRAM] int 
  2593 ;;  s               1   63[COMRAM] unsigned char 
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2603 ;;      Params:        10       0       0       0       0       0       0
  2604 ;;      Locals:        17       0       0       0       0       0       0
  2605 ;;      Temps:          8       0       0       0       0       0       0
  2606 ;;      Totals:        35       0       0       0       0       0       0
  2607 ;;Total ram usage:       35 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 5
  2610 ;; This function calls:
  2611 ;;		___aodiv
  2612 ;;		___aomod
  2613 ;;		_abs
  2614 ;;		_pad
  2615 ;; This function is called by:
  2616 ;;		_vfpfcnvrt
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           	psect	text4
  2621   0075FA                     __ptext4:
  2622                           	callstack 0
  2623   0075FA                     _dtoa:
  2624                           	callstack 22
  2625   0075FA                     
  2626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2627   0075FA  C020  F036         	movff	dtoa@d,dtoa@n
  2628   0075FE  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  2629   007602  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  2630   007606  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  2631   00760A  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  2632   00760E  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  2633   007612  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  2634   007616  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  2635   00761A                     
  2636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2637   00761A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2638   00761C  EF12  F03B         	goto	u881
  2639   007620  EF15  F03B         	goto	u880
  2640   007624                     u881:
  2641   007624  0E01               	movlw	1
  2642   007626  EF16  F03B         	goto	u890
  2643   00762A                     u880:
  2644   00762A  0E00               	movlw	0
  2645   00762C                     u890:
  2646   00762C  6E40               	movwf	dtoa@s^0,c
  2647   00762E                     
  2648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2649   00762E  5040               	movf	dtoa@s^0,w,c
  2650   007630  B4D8               	btfsc	status,2,c
  2651   007632  EF1D  F03B         	goto	u901
  2652   007636  EF1F  F03B         	goto	u900
  2653   00763A                     u901:
  2654   00763A  EF2F  F03B         	goto	l1760
  2655   00763E                     u900:
  2656   00763E                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2658   00763E  1E3D               	comf	(dtoa@n+7)^0,f,c
  2659   007640  1E3C               	comf	(dtoa@n+6)^0,f,c
  2660   007642  1E3B               	comf	(dtoa@n+5)^0,f,c
  2661   007644  1E3A               	comf	(dtoa@n+4)^0,f,c
  2662   007646  1E39               	comf	(dtoa@n+3)^0,f,c
  2663   007648  1E38               	comf	(dtoa@n+2)^0,f,c
  2664   00764A  1E37               	comf	(dtoa@n+1)^0,f,c
  2665   00764C  6C36               	negf	dtoa@n^0,c
  2666   00764E  0E00               	movlw	0
  2667   007650  2237               	addwfc	(dtoa@n+1)^0,f,c
  2668   007652  2238               	addwfc	(dtoa@n+2)^0,f,c
  2669   007654  2239               	addwfc	(dtoa@n+3)^0,f,c
  2670   007656  223A               	addwfc	(dtoa@n+4)^0,f,c
  2671   007658  223B               	addwfc	(dtoa@n+5)^0,f,c
  2672   00765A  223C               	addwfc	(dtoa@n+6)^0,f,c
  2673   00765C  223D               	addwfc	(dtoa@n+7)^0,f,c
  2674   00765E                     l1760:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2677   00765E  0100               	movlb	0	; () banked
  2678   007660  BF63               	btfsc	(_prec+1)& (0+255),7,b
  2679   007662  EF3D  F03B         	goto	u910
  2680   007666  5163               	movf	(_prec+1)& (0+255),w,b
  2681   007668  E106               	bnz	u911
  2682   00766A  0562               	decf	_prec& (0+255),w,b
  2683   00766C  B0D8               	btfsc	status,0,c
  2684   00766E  EF3B  F03B         	goto	u911
  2685   007672  EF3D  F03B         	goto	u910
  2686   007676                     u911:
  2687   007676  EF43  F03B         	goto	l1028
  2688   00767A                     u910:
  2689   00767A                     
  2690                           ; BSR set to: 0
  2691   00767A  0E00               	movlw	0
  2692   00767C  6E33               	movwf	(dtoa@p+1)^0,c
  2693   00767E  0E01               	movlw	1
  2694   007680  6E32               	movwf	dtoa@p^0,c
  2695   007682  EF47  F03B         	goto	l1030
  2696   007686                     l1028:
  2697                           
  2698                           ; BSR set to: 0
  2699   007686  C062  F032         	movff	_prec,dtoa@p
  2700   00768A  C063  F033         	movff	_prec+1,dtoa@p+1
  2701   00768E                     l1030:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2705   00768E  C060  F034         	movff	_width,dtoa@w
  2706   007692  C061  F035         	movff	_width+1,dtoa@w+1
  2707   007696                     
  2708                           ; BSR set to: 0
  2709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2710   007696  5040               	movf	dtoa@s^0,w,c
  2711   007698  B4D8               	btfsc	status,2,c
  2712   00769A  EF51  F03B         	goto	u921
  2713   00769E  EF53  F03B         	goto	u920
  2714   0076A2                     u921:
  2715   0076A2  EF6A  F03B         	goto	l1031
  2716   0076A6                     u920:
  2717   0076A6                     
  2718                           ; BSR set to: 0
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2720   0076A6  0634               	decf	dtoa@w^0,f,c
  2721   0076A8  A0D8               	btfss	status,0,c
  2722   0076AA  0635               	decf	(dtoa@w+1)^0,f,c
  2723   0076AC                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2726   0076AC  5040               	movf	dtoa@s^0,w,c
  2727   0076AE  A4D8               	btfss	status,2,c
  2728   0076B0  EF5C  F03B         	goto	u931
  2729   0076B4  EF5E  F03B         	goto	u930
  2730   0076B8                     u931:
  2731   0076B8  EF64  F03B         	goto	l1772
  2732   0076BC                     u930:
  2733   0076BC                     
  2734                           ; BSR set to: 0
  2735   0076BC  0E00               	movlw	0
  2736   0076BE  6E31               	movwf	(_dtoa$1215+1)^0,c
  2737   0076C0  0E2B               	movlw	43
  2738   0076C2  6E30               	movwf	_dtoa$1215^0,c
  2739   0076C4  EF68  F03B         	goto	l1774
  2740   0076C8                     l1772:
  2741                           
  2742                           ; BSR set to: 0
  2743   0076C8  0E00               	movlw	0
  2744   0076CA  6E31               	movwf	(_dtoa$1215+1)^0,c
  2745   0076CC  0E2D               	movlw	45
  2746   0076CE  6E30               	movwf	_dtoa$1215^0,c
  2747   0076D0                     l1774:
  2748                           
  2749                           ; BSR set to: 0
  2750   0076D0  C030  F040         	movff	_dtoa$1215,dtoa@s
  2751   0076D4                     l1031:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2755   0076D4  0E00               	movlw	0
  2756   0076D6  6E3F               	movwf	(dtoa@i+1)^0,c
  2757   0076D8  0E1F               	movlw	31
  2758   0076DA  6E3E               	movwf	dtoa@i^0,c
  2759   0076DC                     
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2762   0076DC  0E00               	movlw	0
  2763   0076DE  6F8D               	movwf	(_dbuf+31)& (0+255),b
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2766   0076E0  EFEE  F03B         	goto	l1788
  2767   0076E4                     l1778:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2770   0076E4  063E               	decf	dtoa@i^0,f,c
  2771   0076E6  A0D8               	btfss	status,0,c
  2772   0076E8  063F               	decf	(dtoa@i+1)^0,f,c
  2773   0076EA                     
  2774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2775   0076EA  0E6E               	movlw	low _dbuf
  2776   0076EC  243E               	addwf	dtoa@i^0,w,c
  2777   0076EE  6ED9               	movwf	fsr2l,c
  2778   0076F0  0E00               	movlw	high _dbuf
  2779   0076F2  203F               	addwfc	(dtoa@i+1)^0,w,c
  2780   0076F4  6EDA               	movwf	fsr2h,c
  2781   0076F6  C036  F001         	movff	dtoa@n,___aomod@dividend
  2782   0076FA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2783   0076FE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2784   007702  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2785   007706  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2786   00770A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2787   00770E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2788   007712  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2789   007716  0E0A               	movlw	10
  2790   007718  6E09               	movwf	___aomod@divisor^0,c
  2791   00771A  0E00               	movlw	0
  2792   00771C  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2793   00771E  0E00               	movlw	0
  2794   007720  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2795   007722  0E00               	movlw	0
  2796   007724  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2797   007726  0E00               	movlw	0
  2798   007728  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2799   00772A  0E00               	movlw	0
  2800   00772C  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2801   00772E  0E00               	movlw	0
  2802   007730  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2803   007732  0E00               	movlw	0
  2804   007734  6E10               	movwf	(___aomod@divisor+7)^0,c
  2805   007736  EC86  F038         	call	___aomod	;wreg free
  2806   00773A  C001  F028         	movff	?___aomod,??_dtoa
  2807   00773E  C002  F029         	movff	?___aomod+1,??_dtoa+1
  2808   007742  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  2809   007746  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  2810   00774A  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  2811   00774E  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  2812   007752  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  2813   007756  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  2814   00775A  C028  F013         	movff	??_dtoa,abs@a
  2815   00775E  C029  F014         	movff	??_dtoa+1,abs@a+1
  2816   007762  EC47  F037         	call	_abs	;wreg free
  2817   007766  5013               	movf	?_abs^0,w,c
  2818   007768  0F30               	addlw	48
  2819   00776A  6EDF               	movwf	indf2,c
  2820   00776C                     
  2821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2822   00776C  0632               	decf	dtoa@p^0,f,c
  2823   00776E  A0D8               	btfss	status,0,c
  2824   007770  0633               	decf	(dtoa@p+1)^0,f,c
  2825   007772                     
  2826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2827   007772  0634               	decf	dtoa@w^0,f,c
  2828   007774  A0D8               	btfss	status,0,c
  2829   007776  0635               	decf	(dtoa@w+1)^0,f,c
  2830   007778                     
  2831                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2832   007778  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2833   00777C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2834   007780  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2835   007784  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2836   007788  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2837   00778C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2838   007790  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2839   007794  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2840   007798  0E0A               	movlw	10
  2841   00779A  6E09               	movwf	___aodiv@divisor^0,c
  2842   00779C  0E00               	movlw	0
  2843   00779E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2844   0077A0  0E00               	movlw	0
  2845   0077A2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2846   0077A4  0E00               	movlw	0
  2847   0077A6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2848   0077A8  0E00               	movlw	0
  2849   0077AA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2850   0077AC  0E00               	movlw	0
  2851   0077AE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2852   0077B0  0E00               	movlw	0
  2853   0077B2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2854   0077B4  0E00               	movlw	0
  2855   0077B6  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2856   0077B8  EC38  F039         	call	___aodiv	;wreg free
  2857   0077BC  C001  F036         	movff	?___aodiv,dtoa@n
  2858   0077C0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2859   0077C4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2860   0077C8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2861   0077CC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2862   0077D0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2863   0077D4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2864   0077D8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2865   0077DC                     l1788:
  2866                           
  2867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2868   0077DC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2869   0077DE  EFF9  F03B         	goto	u941
  2870   0077E2  503F               	movf	(dtoa@i+1)^0,w,c
  2871   0077E4  E108               	bnz	u940
  2872   0077E6  043E               	decf	dtoa@i^0,w,c
  2873   0077E8  A0D8               	btfss	status,0,c
  2874   0077EA  EFF9  F03B         	goto	u941
  2875   0077EE  EFFB  F03B         	goto	u940
  2876   0077F2                     u941:
  2877   0077F2  EF17  F03C         	goto	l1794
  2878   0077F6                     u940:
  2879   0077F6  5036               	movf	dtoa@n^0,w,c
  2880   0077F8  1037               	iorwf	(dtoa@n+1)^0,w,c
  2881   0077FA  1038               	iorwf	(dtoa@n+2)^0,w,c
  2882   0077FC  1039               	iorwf	(dtoa@n+3)^0,w,c
  2883   0077FE  103A               	iorwf	(dtoa@n+4)^0,w,c
  2884   007800  103B               	iorwf	(dtoa@n+5)^0,w,c
  2885   007802  103C               	iorwf	(dtoa@n+6)^0,w,c
  2886   007804  103D               	iorwf	(dtoa@n+7)^0,w,c
  2887   007806  A4D8               	btfss	status,2,c
  2888   007808  EF08  F03C         	goto	u951
  2889   00780C  EF0A  F03C         	goto	u950
  2890   007810                     u951:
  2891   007810  EF72  F03B         	goto	l1778
  2892   007814                     u950:
  2893   007814  BE33               	btfsc	(dtoa@p+1)^0,7,c
  2894   007816  EF17  F03C         	goto	u960
  2895   00781A  5033               	movf	(dtoa@p+1)^0,w,c
  2896   00781C  E106               	bnz	u961
  2897   00781E  0432               	decf	dtoa@p^0,w,c
  2898   007820  B0D8               	btfsc	status,0,c
  2899   007822  EF15  F03C         	goto	u961
  2900   007826  EF17  F03C         	goto	u960
  2901   00782A                     u961:
  2902   00782A  EF72  F03B         	goto	l1778
  2903   00782E                     u960:
  2904   00782E                     l1794:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2907   00782E  5040               	movf	dtoa@s^0,w,c
  2908   007830  B4D8               	btfsc	status,2,c
  2909   007832  EF1D  F03C         	goto	u971
  2910   007836  EF1F  F03C         	goto	u970
  2911   00783A                     u971:
  2912   00783A  EF2A  F03C         	goto	l1800
  2913   00783E                     u970:
  2914   00783E                     
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2916   00783E  063E               	decf	dtoa@i^0,f,c
  2917   007840  A0D8               	btfss	status,0,c
  2918   007842  063F               	decf	(dtoa@i+1)^0,f,c
  2919   007844                     
  2920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2921   007844  0E6E               	movlw	low _dbuf
  2922   007846  243E               	addwf	dtoa@i^0,w,c
  2923   007848  6ED9               	movwf	fsr2l,c
  2924   00784A  0E00               	movlw	high _dbuf
  2925   00784C  203F               	addwfc	(dtoa@i+1)^0,w,c
  2926   00784E  6EDA               	movwf	fsr2h,c
  2927   007850  C040  FFDF         	movff	dtoa@s,indf2
  2928   007854                     l1800:
  2929                           
  2930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2931   007854  C01E  F013         	movff	dtoa@fp,pad@fp
  2932   007858  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  2933   00785C  0E6E               	movlw	low _dbuf
  2934   00785E  243E               	addwf	dtoa@i^0,w,c
  2935   007860  6E15               	movwf	pad@buf^0,c
  2936   007862  0E00               	movlw	high _dbuf
  2937   007864  203F               	addwfc	(dtoa@i+1)^0,w,c
  2938   007866  6E16               	movwf	(pad@buf+1)^0,c
  2939   007868  C034  F017         	movff	dtoa@w,pad@p
  2940   00786C  C035  F018         	movff	dtoa@w+1,pad@p+1
  2941   007870  ECB0  F037         	call	_pad	;wreg free
  2942   007874  0012               	return		;funcret
  2943   007876                     __end_of_dtoa:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _pad *****************
  2947 ;; Defined at:
  2948 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2951 ;;		 -> NULL(0), 
  2952 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2953 ;;		 -> dbuf(32), 
  2954 ;;  p               2   22[COMRAM] int 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  w               2   27[COMRAM] int 
  2957 ;;  i               2   25[COMRAM] int 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2967 ;;      Params:         6       0       0       0       0       0       0
  2968 ;;      Locals:         4       0       0       0       0       0       0
  2969 ;;      Temps:          1       0       0       0       0       0       0
  2970 ;;      Totals:        11       0       0       0       0       0       0
  2971 ;;Total ram usage:       11 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 4
  2974 ;; This function calls:
  2975 ;;		_fputc
  2976 ;;		_fputs
  2977 ;; This function is called by:
  2978 ;;		_dtoa
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text5
  2983   006F60                     __ptext5:
  2984                           	callstack 0
  2985   006F60                     _pad:
  2986                           	callstack 22
  2987   006F60                     
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2989   006F60  BE18               	btfsc	(pad@p+1)^0,7,c
  2990   006F62  EFB5  F037         	goto	u821
  2991   006F66  EFB7  F037         	goto	u820
  2992   006F6A                     u821:
  2993   006F6A  EFBD  F037         	goto	l1720
  2994   006F6E                     u820:
  2995   006F6E  C017  F01C         	movff	pad@p,pad@w
  2996   006F72  C018  F01D         	movff	pad@p+1,pad@w+1
  2997   006F76  EFC1  F037         	goto	l1005
  2998   006F7A                     l1720:
  2999   006F7A  0E00               	movlw	0
  3000   006F7C  6E1D               	movwf	(pad@w+1)^0,c
  3001   006F7E  0E00               	movlw	0
  3002   006F80  6E1C               	movwf	pad@w^0,c
  3003   006F82                     l1005:
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3006   006F82  0E00               	movlw	0
  3007   006F84  6E1B               	movwf	(pad@i+1)^0,c
  3008   006F86  0E00               	movlw	0
  3009   006F88  6E1A               	movwf	pad@i^0,c
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3012   006F8A  EFD3  F037         	goto	l1726
  3013   006F8E                     l1722:
  3014                           
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3016   006F8E  0E00               	movlw	0
  3017   006F90  6E04               	movwf	(fputc@c+1)^0,c
  3018   006F92  0E20               	movlw	32
  3019   006F94  6E03               	movwf	fputc@c^0,c
  3020   006F96  C013  F005         	movff	pad@fp,fputc@fp
  3021   006F9A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  3022   006F9E  ECED  F037         	call	_fputc	;wreg free
  3023   006FA2                     
  3024                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3025   006FA2  4A1A               	infsnz	pad@i^0,f,c
  3026   006FA4  2A1B               	incf	(pad@i+1)^0,f,c
  3027   006FA6                     l1726:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3030   006FA6  501C               	movf	pad@w^0,w,c
  3031   006FA8  5C1A               	subwf	pad@i^0,w,c
  3032   006FAA  501B               	movf	(pad@i+1)^0,w,c
  3033   006FAC  0A80               	xorlw	128
  3034   006FAE  6E19               	movwf	??_pad^0,c
  3035   006FB0  501D               	movf	(pad@w+1)^0,w,c
  3036   006FB2  0A80               	xorlw	128
  3037   006FB4  5819               	subwfb	??_pad^0,w,c
  3038   006FB6  A0D8               	btfss	status,0,c
  3039   006FB8  EFE0  F037         	goto	u831
  3040   006FBC  EFE2  F037         	goto	u830
  3041   006FC0                     u831:
  3042   006FC0  EFC7  F037         	goto	l1722
  3043   006FC4                     u830:
  3044   006FC4                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3046   006FC4  C015  F00C         	movff	pad@buf,fputs@s
  3047   006FC8  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3048   006FCC  C013  F00E         	movff	pad@fp,fputs@fp
  3049   006FD0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3050   006FD4  EC67  F037         	call	_fputs	;wreg free
  3051   006FD8  0012               	return		;funcret
  3052   006FDA                     __end_of_pad:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _fputs *****************
  3056 ;; Defined at:
  3057 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3060 ;;		 -> dbuf(32), 
  3061 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3062 ;;		 -> NULL(0), 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  i               2   16[COMRAM] int 
  3065 ;;  c               1   15[COMRAM] unsigned char 
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  2   11[COMRAM] int 
  3068 ;; Registers used:
  3069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3075 ;;      Params:         4       0       0       0       0       0       0
  3076 ;;      Locals:         3       0       0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0
  3078 ;;      Totals:         7       0       0       0       0       0       0
  3079 ;;Total ram usage:        7 bytes
  3080 ;; Hardware stack levels used: 1
  3081 ;; Hardware stack levels required when called: 3
  3082 ;; This function calls:
  3083 ;;		_fputc
  3084 ;; This function is called by:
  3085 ;;		_pad
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text6
  3090   006ECE                     __ptext6:
  3091                           	callstack 0
  3092   006ECE                     _fputs:
  3093                           	callstack 22
  3094   006ECE  0E00               	movlw	0
  3095   006ED0  6E12               	movwf	(fputs@i+1)^0,c
  3096   006ED2  0E00               	movlw	0
  3097   006ED4  6E11               	movwf	fputs@i^0,c
  3098   006ED6  EF78  F037         	goto	l1634
  3099   006EDA                     l1630:
  3100   006EDA  C010  F003         	movff	fputs@c,fputc@c
  3101   006EDE  6A04               	clrf	(fputc@c+1)^0,c
  3102   006EE0  C00E  F005         	movff	fputs@fp,fputc@fp
  3103   006EE4  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  3104   006EE8  ECED  F037         	call	_fputc	;wreg free
  3105   006EEC  4A11               	infsnz	fputs@i^0,f,c
  3106   006EEE  2A12               	incf	(fputs@i+1)^0,f,c
  3107   006EF0                     l1634:
  3108   006EF0  5011               	movf	fputs@i^0,w,c
  3109   006EF2  240C               	addwf	fputs@s^0,w,c
  3110   006EF4  6ED9               	movwf	fsr2l,c
  3111   006EF6  5012               	movf	(fputs@i+1)^0,w,c
  3112   006EF8  200D               	addwfc	(fputs@s+1)^0,w,c
  3113   006EFA  6EDA               	movwf	fsr2h,c
  3114   006EFC  50DF               	movf	indf2,w,c
  3115   006EFE  6E10               	movwf	fputs@c^0,c
  3116   006F00  5010               	movf	fputs@c^0,w,c
  3117   006F02  A4D8               	btfss	status,2,c
  3118   006F04  EF86  F037         	goto	u681
  3119   006F08  EF88  F037         	goto	u680
  3120   006F0C                     u681:
  3121   006F0C  EF6D  F037         	goto	l1630
  3122   006F10                     u680:
  3123   006F10  0012               	return		;funcret
  3124   006F12                     __end_of_fputs:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _abs *****************
  3128 ;; Defined at:
  3129 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  a               2   18[COMRAM] int 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2   18[COMRAM] int 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3143 ;;      Params:         2       0       0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0
  3145 ;;      Temps:          2       0       0       0       0       0       0
  3146 ;;      Totals:         4       0       0       0       0       0       0
  3147 ;;Total ram usage:        4 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_dtoa
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text7
  3157   006E8E                     __ptext7:
  3158                           	callstack 0
  3159   006E8E                     _abs:
  3160                           	callstack 26
  3161   006E8E  BE14               	btfsc	(abs@a+1)^0,7,c
  3162   006E90  EF54  F037         	goto	u840
  3163   006E94  5014               	movf	(abs@a+1)^0,w,c
  3164   006E96  E106               	bnz	u841
  3165   006E98  0413               	decf	abs@a^0,w,c
  3166   006E9A  B0D8               	btfsc	status,0,c
  3167   006E9C  EF52  F037         	goto	u841
  3168   006EA0  EF54  F037         	goto	u840
  3169   006EA4                     u841:
  3170   006EA4  EF62  F037         	goto	l1061
  3171   006EA8                     u840:
  3172   006EA8  C013  F015         	movff	abs@a,??_abs
  3173   006EAC  C014  F016         	movff	abs@a+1,??_abs+1
  3174   006EB0  1E15               	comf	??_abs^0,f,c
  3175   006EB2  1E16               	comf	(??_abs+1)^0,f,c
  3176   006EB4  4A15               	infsnz	??_abs^0,f,c
  3177   006EB6  2A16               	incf	(??_abs+1)^0,f,c
  3178   006EB8  C015  F013         	movff	??_abs,?_abs
  3179   006EBC  C016  F014         	movff	??_abs+1,?_abs+1
  3180   006EC0  EF66  F037         	goto	l1064
  3181   006EC4                     l1061:
  3182   006EC4  C013  F013         	movff	abs@a,?_abs
  3183   006EC8  C014  F014         	movff	abs@a+1,?_abs+1
  3184   006ECC                     l1064:
  3185   006ECC  0012               	return		;funcret
  3186   006ECE                     __end_of_abs:
  3187                           	callstack 0
  3188                           
  3189 ;; *************** function ___aomod *****************
  3190 ;; Defined at:
  3191 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  dividend        8    0[COMRAM] long long 
  3194 ;;  divisor         8    8[COMRAM] long long 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  sign            1   17[COMRAM] unsigned char 
  3197 ;;  counter         1   16[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  8    0[COMRAM] long long 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3207 ;;      Params:        16       0       0       0       0       0       0
  3208 ;;      Locals:         2       0       0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0
  3210 ;;      Totals:        18       0       0       0       0       0       0
  3211 ;;Total ram usage:       18 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_dtoa
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text8
  3221   00710C                     __ptext8:
  3222                           	callstack 0
  3223   00710C                     ___aomod:
  3224                           	callstack 26
  3225   00710C  0E00               	movlw	0
  3226   00710E  6E12               	movwf	___aomod@sign^0,c
  3227   007110  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3228   007112  EF8F  F038         	goto	u760
  3229   007116  EF8D  F038         	goto	u761
  3230   00711A                     u761:
  3231   00711A  EFA1  F038         	goto	l1688
  3232   00711E                     u760:
  3233   00711E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3234   007120  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3235   007122  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3236   007124  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3237   007126  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3238   007128  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3239   00712A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3240   00712C  6C01               	negf	___aomod@dividend^0,c
  3241   00712E  0E00               	movlw	0
  3242   007130  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3243   007132  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3244   007134  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3245   007136  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3246   007138  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3247   00713A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3248   00713C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3249   00713E  0E01               	movlw	1
  3250   007140  6E12               	movwf	___aomod@sign^0,c
  3251   007142                     l1688:
  3252   007142  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3253   007144  EFA8  F038         	goto	u770
  3254   007148  EFA6  F038         	goto	u771
  3255   00714C                     u771:
  3256   00714C  EFB8  F038         	goto	l1692
  3257   007150                     u770:
  3258   007150  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3259   007152  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3260   007154  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3261   007156  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3262   007158  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3263   00715A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3264   00715C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3265   00715E  6C09               	negf	___aomod@divisor^0,c
  3266   007160  0E00               	movlw	0
  3267   007162  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3268   007164  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3269   007166  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3270   007168  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3271   00716A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3272   00716C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3273   00716E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3274   007170                     l1692:
  3275   007170  5009               	movf	___aomod@divisor^0,w,c
  3276   007172  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3277   007174  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3278   007176  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3279   007178  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3280   00717A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3281   00717C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3282   00717E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3283   007180  B4D8               	btfsc	status,2,c
  3284   007182  EFC5  F038         	goto	u781
  3285   007186  EFC7  F038         	goto	u780
  3286   00718A                     u781:
  3287   00718A  EF0F  F039         	goto	l1708
  3288   00718E                     u780:
  3289   00718E  0E01               	movlw	1
  3290   007190  6E11               	movwf	___aomod@counter^0,c
  3291   007192  EFD5  F038         	goto	l1698
  3292   007196                     l1696:
  3293   007196  90D8               	bcf	status,0,c
  3294   007198  3609               	rlcf	___aomod@divisor^0,f,c
  3295   00719A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3296   00719C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3297   00719E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3298   0071A0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3299   0071A2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3300   0071A4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3301   0071A6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3302   0071A8  2A11               	incf	___aomod@counter^0,f,c
  3303   0071AA                     l1698:
  3304   0071AA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3305   0071AC  EFDA  F038         	goto	u791
  3306   0071B0  EFDC  F038         	goto	u790
  3307   0071B4                     u791:
  3308   0071B4  EFCB  F038         	goto	l1696
  3309   0071B8                     u790:
  3310   0071B8                     l1700:
  3311   0071B8  5009               	movf	___aomod@divisor^0,w,c
  3312   0071BA  5C01               	subwf	___aomod@dividend^0,w,c
  3313   0071BC  500A               	movf	(___aomod@divisor+1)^0,w,c
  3314   0071BE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3315   0071C0  500B               	movf	(___aomod@divisor+2)^0,w,c
  3316   0071C2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3317   0071C4  500C               	movf	(___aomod@divisor+3)^0,w,c
  3318   0071C6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3319   0071C8  500D               	movf	(___aomod@divisor+4)^0,w,c
  3320   0071CA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3321   0071CC  500E               	movf	(___aomod@divisor+5)^0,w,c
  3322   0071CE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3323   0071D0  500F               	movf	(___aomod@divisor+6)^0,w,c
  3324   0071D2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3325   0071D4  5010               	movf	(___aomod@divisor+7)^0,w,c
  3326   0071D6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3327   0071D8  A0D8               	btfss	status,0,c
  3328   0071DA  EFF1  F038         	goto	u801
  3329   0071DE  EFF3  F038         	goto	u800
  3330   0071E2                     u801:
  3331   0071E2  EF03  F039         	goto	l1704
  3332   0071E6                     u800:
  3333   0071E6  5009               	movf	___aomod@divisor^0,w,c
  3334   0071E8  5E01               	subwf	___aomod@dividend^0,f,c
  3335   0071EA  500A               	movf	(___aomod@divisor+1)^0,w,c
  3336   0071EC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3337   0071EE  500B               	movf	(___aomod@divisor+2)^0,w,c
  3338   0071F0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3339   0071F2  500C               	movf	(___aomod@divisor+3)^0,w,c
  3340   0071F4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3341   0071F6  500D               	movf	(___aomod@divisor+4)^0,w,c
  3342   0071F8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3343   0071FA  500E               	movf	(___aomod@divisor+5)^0,w,c
  3344   0071FC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3345   0071FE  500F               	movf	(___aomod@divisor+6)^0,w,c
  3346   007200  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3347   007202  5010               	movf	(___aomod@divisor+7)^0,w,c
  3348   007204  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3349   007206                     l1704:
  3350   007206  90D8               	bcf	status,0,c
  3351   007208  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3352   00720A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3353   00720C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3354   00720E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3355   007210  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3356   007212  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3357   007214  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3358   007216  3209               	rrcf	___aomod@divisor^0,f,c
  3359   007218  2E11               	decfsz	___aomod@counter^0,f,c
  3360   00721A  EFDC  F038         	goto	l1700
  3361   00721E                     l1708:
  3362   00721E  5012               	movf	___aomod@sign^0,w,c
  3363   007220  B4D8               	btfsc	status,2,c
  3364   007222  EF15  F039         	goto	u811
  3365   007226  EF17  F039         	goto	u810
  3366   00722A                     u811:
  3367   00722A  EF27  F039         	goto	l1712
  3368   00722E                     u810:
  3369   00722E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3370   007230  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3371   007232  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3372   007234  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3373   007236  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3374   007238  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3375   00723A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3376   00723C  6C01               	negf	___aomod@dividend^0,c
  3377   00723E  0E00               	movlw	0
  3378   007240  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3379   007242  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3380   007244  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3381   007246  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3382   007248  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3383   00724A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3384   00724C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3385   00724E                     l1712:
  3386   00724E  C001  F001         	movff	___aomod@dividend,?___aomod
  3387   007252  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3388   007256  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3389   00725A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3390   00725E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3391   007262  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3392   007266  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3393   00726A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3394   00726E  0012               	return		;funcret
  3395   007270                     __end_of___aomod:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function ___aodiv *****************
  3399 ;; Defined at:
  3400 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  dividend        8    0[COMRAM] long long 
  3403 ;;  divisor         8    8[COMRAM] long long 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  quotient        8   18[COMRAM] long long 
  3406 ;;  sign            1   17[COMRAM] unsigned char 
  3407 ;;  counter         1   16[COMRAM] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  8    0[COMRAM] long long 
  3410 ;; Registers used:
  3411 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3417 ;;      Params:        16       0       0       0       0       0       0
  3418 ;;      Locals:        10       0       0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0
  3420 ;;      Totals:        26       0       0       0       0       0       0
  3421 ;;Total ram usage:       26 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		_dtoa
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           	psect	text9
  3431   007270                     __ptext9:
  3432                           	callstack 0
  3433   007270                     ___aodiv:
  3434                           	callstack 26
  3435   007270  0E00               	movlw	0
  3436   007272  6E12               	movwf	___aodiv@sign^0,c
  3437   007274  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3438   007276  EF41  F039         	goto	u690
  3439   00727A  EF3F  F039         	goto	u691
  3440   00727E                     u691:
  3441   00727E  EF53  F039         	goto	l1644
  3442   007282                     u690:
  3443   007282  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3444   007284  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3445   007286  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3446   007288  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3447   00728A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3448   00728C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3449   00728E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3450   007290  6C09               	negf	___aodiv@divisor^0,c
  3451   007292  0E00               	movlw	0
  3452   007294  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3453   007296  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3454   007298  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3455   00729A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3456   00729C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3457   00729E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3458   0072A0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3459   0072A2  0E01               	movlw	1
  3460   0072A4  6E12               	movwf	___aodiv@sign^0,c
  3461   0072A6                     l1644:
  3462   0072A6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3463   0072A8  EF5A  F039         	goto	u700
  3464   0072AC  EF58  F039         	goto	u701
  3465   0072B0                     u701:
  3466   0072B0  EF6C  F039         	goto	l1650
  3467   0072B4                     u700:
  3468   0072B4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3469   0072B6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3470   0072B8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3471   0072BA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3472   0072BC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3473   0072BE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3474   0072C0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3475   0072C2  6C01               	negf	___aodiv@dividend^0,c
  3476   0072C4  0E00               	movlw	0
  3477   0072C6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3478   0072C8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3479   0072CA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3480   0072CC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3481   0072CE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3482   0072D0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3483   0072D2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3484   0072D4  0E01               	movlw	1
  3485   0072D6  1A12               	xorwf	___aodiv@sign^0,f,c
  3486   0072D8                     l1650:
  3487   0072D8  EE20  F013         	lfsr	2,___aodiv@quotient
  3488   0072DC  0E07               	movlw	7
  3489   0072DE                     u711:
  3490   0072DE  6ADE               	clrf	postinc2,c
  3491   0072E0  06E8               	decf	wreg,f,c
  3492   0072E2  E2FD               	bc	u711
  3493   0072E4  5009               	movf	___aodiv@divisor^0,w,c
  3494   0072E6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3495   0072E8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3496   0072EA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3497   0072EC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3498   0072EE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3499   0072F0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3500   0072F2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3501   0072F4  B4D8               	btfsc	status,2,c
  3502   0072F6  EF7F  F039         	goto	u721
  3503   0072FA  EF81  F039         	goto	u720
  3504   0072FE                     u721:
  3505   0072FE  EFD3  F039         	goto	l1672
  3506   007302                     u720:
  3507   007302  0E01               	movlw	1
  3508   007304  6E11               	movwf	___aodiv@counter^0,c
  3509   007306  EF8F  F039         	goto	l1658
  3510   00730A                     l1656:
  3511   00730A  90D8               	bcf	status,0,c
  3512   00730C  3609               	rlcf	___aodiv@divisor^0,f,c
  3513   00730E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3514   007310  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3515   007312  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3516   007314  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3517   007316  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3518   007318  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3519   00731A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3520   00731C  2A11               	incf	___aodiv@counter^0,f,c
  3521   00731E                     l1658:
  3522   00731E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3523   007320  EF94  F039         	goto	u731
  3524   007324  EF96  F039         	goto	u730
  3525   007328                     u731:
  3526   007328  EF85  F039         	goto	l1656
  3527   00732C                     u730:
  3528   00732C                     l1660:
  3529   00732C  90D8               	bcf	status,0,c
  3530   00732E  3613               	rlcf	___aodiv@quotient^0,f,c
  3531   007330  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3532   007332  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3533   007334  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3534   007336  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3535   007338  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3536   00733A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3537   00733C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3538   00733E  5009               	movf	___aodiv@divisor^0,w,c
  3539   007340  5C01               	subwf	___aodiv@dividend^0,w,c
  3540   007342  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3541   007344  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3542   007346  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3543   007348  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3544   00734A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3545   00734C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3546   00734E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3547   007350  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3548   007352  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3549   007354  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3550   007356  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3551   007358  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3552   00735A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3553   00735C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3554   00735E  A0D8               	btfss	status,0,c
  3555   007360  EFB4  F039         	goto	u741
  3556   007364  EFB6  F039         	goto	u740
  3557   007368                     u741:
  3558   007368  EFC7  F039         	goto	l1668
  3559   00736C                     u740:
  3560   00736C  5009               	movf	___aodiv@divisor^0,w,c
  3561   00736E  5E01               	subwf	___aodiv@dividend^0,f,c
  3562   007370  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3563   007372  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3564   007374  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3565   007376  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3566   007378  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3567   00737A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3568   00737C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3569   00737E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3570   007380  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3571   007382  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3572   007384  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3573   007386  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3574   007388  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3575   00738A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3576   00738C  8013               	bsf	___aodiv@quotient^0,0,c
  3577   00738E                     l1668:
  3578   00738E  90D8               	bcf	status,0,c
  3579   007390  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3580   007392  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3581   007394  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3582   007396  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3583   007398  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3584   00739A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3585   00739C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3586   00739E  3209               	rrcf	___aodiv@divisor^0,f,c
  3587   0073A0  2E11               	decfsz	___aodiv@counter^0,f,c
  3588   0073A2  EF96  F039         	goto	l1660
  3589   0073A6                     l1672:
  3590   0073A6  5012               	movf	___aodiv@sign^0,w,c
  3591   0073A8  B4D8               	btfsc	status,2,c
  3592   0073AA  EFD9  F039         	goto	u751
  3593   0073AE  EFDB  F039         	goto	u750
  3594   0073B2                     u751:
  3595   0073B2  EFEB  F039         	goto	l1676
  3596   0073B6                     u750:
  3597   0073B6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3598   0073B8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3599   0073BA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3600   0073BC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3601   0073BE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3602   0073C0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3603   0073C2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3604   0073C4  6C13               	negf	___aodiv@quotient^0,c
  3605   0073C6  0E00               	movlw	0
  3606   0073C8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3607   0073CA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3608   0073CC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3609   0073CE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3610   0073D0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3611   0073D2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3612   0073D4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3613   0073D6                     l1676:
  3614   0073D6  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3615   0073DA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3616   0073DE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3617   0073E2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3618   0073E6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3619   0073EA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3620   0073EE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3621   0073F2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3622   0073F6  0012               	return		;funcret
  3623   0073F8                     __end_of___aodiv:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _ctoa *****************
  3627 ;; Defined at:
  3628 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3631 ;;		 -> NULL(0), 
  3632 ;;  c               1   13[COMRAM] unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  w               2   17[COMRAM] int 
  3635 ;;  l               2   15[COMRAM] int 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3645 ;;      Params:         3       0       0       0       0       0       0
  3646 ;;      Locals:         4       0       0       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0       0       0
  3648 ;;      Totals:         8       0       0       0       0       0       0
  3649 ;;Total ram usage:        8 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 3
  3652 ;; This function calls:
  3653 ;;		_fputc
  3654 ;; This function is called by:
  3655 ;;		_vfpfcnvrt
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text10
  3660   007070                     __ptext10:
  3661                           	callstack 0
  3662   007070                     _ctoa:
  3663                           	callstack 24
  3664   007070                     
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  3666   007070  0100               	movlb	0	; () banked
  3667   007072  5160               	movf	_width& (0+255),w,b
  3668   007074  1161               	iorwf	(_width+1)& (0+255),w,b
  3669   007076  A4D8               	btfss	status,2,c
  3670   007078  EF40  F038         	goto	u851
  3671   00707C  EF42  F038         	goto	u850
  3672   007080                     u851:
  3673   007080  EF48  F038         	goto	l1738
  3674   007084                     u850:
  3675   007084                     
  3676                           ; BSR set to: 0
  3677   007084  C060  F012         	movff	_width,ctoa@w
  3678   007088  C061  F013         	movff	_width+1,ctoa@w+1
  3679   00708C  EF4E  F038         	goto	l1015
  3680   007090                     l1738:
  3681                           
  3682                           ; BSR set to: 0
  3683   007090  0EFF               	movlw	255
  3684   007092  2560               	addwf	_width& (0+255),w,b
  3685   007094  6E12               	movwf	ctoa@w^0,c
  3686   007096  0EFF               	movlw	255
  3687   007098  2161               	addwfc	(_width+1)& (0+255),w,b
  3688   00709A  6E13               	movwf	(ctoa@w+1)^0,c
  3689   00709C                     l1015:
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  3693   00709C  BE13               	btfsc	(ctoa@w+1)^0,7,c
  3694   00709E  EF53  F038         	goto	u861
  3695   0070A2  EF55  F038         	goto	u860
  3696   0070A6                     u861:
  3697   0070A6  EF57  F038         	goto	l1742
  3698   0070AA                     u860:
  3699   0070AA  EF5B  F038         	goto	l1019
  3700   0070AE                     l1742:
  3701                           
  3702                           ; BSR set to: 0
  3703   0070AE  0E00               	movlw	0
  3704   0070B0  6E13               	movwf	(ctoa@w+1)^0,c
  3705   0070B2  0E00               	movlw	0
  3706   0070B4  6E12               	movwf	ctoa@w^0,c
  3707   0070B6                     l1019:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  3711   0070B6  0E00               	movlw	0
  3712   0070B8  6E11               	movwf	(ctoa@l+1)^0,c
  3713   0070BA  0E00               	movlw	0
  3714   0070BC  6E10               	movwf	ctoa@l^0,c
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3717   0070BE  EF6D  F038         	goto	l1748
  3718   0070C2                     l1744:
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  3721   0070C2  0E00               	movlw	0
  3722   0070C4  6E04               	movwf	(fputc@c+1)^0,c
  3723   0070C6  0E20               	movlw	32
  3724   0070C8  6E03               	movwf	fputc@c^0,c
  3725   0070CA  C00C  F005         	movff	ctoa@fp,fputc@fp
  3726   0070CE  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  3727   0070D2  ECED  F037         	call	_fputc	;wreg free
  3728   0070D6                     
  3729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  3730   0070D6  4A10               	infsnz	ctoa@l^0,f,c
  3731   0070D8  2A11               	incf	(ctoa@l+1)^0,f,c
  3732   0070DA                     l1748:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3735   0070DA  5012               	movf	ctoa@w^0,w,c
  3736   0070DC  5C10               	subwf	ctoa@l^0,w,c
  3737   0070DE  5011               	movf	(ctoa@l+1)^0,w,c
  3738   0070E0  0A80               	xorlw	128
  3739   0070E2  6E0F               	movwf	??_ctoa^0,c
  3740   0070E4  5013               	movf	(ctoa@w+1)^0,w,c
  3741   0070E6  0A80               	xorlw	128
  3742   0070E8  580F               	subwfb	??_ctoa^0,w,c
  3743   0070EA  A0D8               	btfss	status,0,c
  3744   0070EC  EF7A  F038         	goto	u871
  3745   0070F0  EF7C  F038         	goto	u870
  3746   0070F4                     u871:
  3747   0070F4  EF61  F038         	goto	l1744
  3748   0070F8                     u870:
  3749   0070F8                     
  3750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  3751   0070F8  C00E  F003         	movff	ctoa@c,fputc@c
  3752   0070FC  6A04               	clrf	(fputc@c+1)^0,c
  3753   0070FE  C00C  F005         	movff	ctoa@fp,fputc@fp
  3754   007102  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  3755   007106  ECED  F037         	call	_fputc	;wreg free
  3756   00710A  0012               	return		;funcret
  3757   00710C                     __end_of_ctoa:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function _fputc *****************
  3761 ;; Defined at:
  3762 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  c               2    2[COMRAM] int 
  3765 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  3766 ;;		 -> NULL(0), 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2    2[COMRAM] int 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3778 ;;      Params:         4       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0
  3780 ;;      Temps:          5       0       0       0       0       0       0
  3781 ;;      Totals:         9       0       0       0       0       0       0
  3782 ;;Total ram usage:        9 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 2
  3785 ;; This function calls:
  3786 ;;		_putch
  3787 ;; This function is called by:
  3788 ;;		_pad
  3789 ;;		_ctoa
  3790 ;;		_vfpfcnvrt
  3791 ;;		_fputs
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           	psect	text11
  3796   006FDA                     __ptext11:
  3797                           	callstack 0
  3798   006FDA                     _fputc:
  3799                           	callstack 25
  3800   006FDA  5005               	movf	fputc@fp^0,w,c
  3801   006FDC  1006               	iorwf	(fputc@fp+1)^0,w,c
  3802   006FDE  B4D8               	btfsc	status,2,c
  3803   006FE0  EFF4  F037         	goto	u641
  3804   006FE4  EFF6  F037         	goto	u640
  3805   006FE8                     u641:
  3806   006FE8  EFFF  F037         	goto	l1618
  3807   006FEC                     u640:
  3808   006FEC  5005               	movf	fputc@fp^0,w,c
  3809   006FEE  1006               	iorwf	(fputc@fp+1)^0,w,c
  3810   006FF0  A4D8               	btfss	status,2,c
  3811   006FF2  EFFD  F037         	goto	u651
  3812   006FF6  EFFF  F037         	goto	u650
  3813   006FFA                     u651:
  3814   006FFA  EF04  F038         	goto	l1620
  3815   006FFE                     u650:
  3816   006FFE                     l1618:
  3817   006FFE  5003               	movf	fputc@c^0,w,c
  3818   007000  EC2C  F036         	call	_putch
  3819   007004  EF37  F038         	goto	l1076
  3820   007008                     l1620:
  3821   007008  EE20 F009          	lfsr	2,9
  3822   00700C  5005               	movf	fputc@fp^0,w,c
  3823   00700E  26D9               	addwf	fsr2l,f,c
  3824   007010  5006               	movf	(fputc@fp+1)^0,w,c
  3825   007012  22DA               	addwfc	fsr2h,f,c
  3826   007014  50DE               	movf	postinc2,w,c
  3827   007016  10DE               	iorwf	postinc2,w,c
  3828   007018  B4D8               	btfsc	status,2,c
  3829   00701A  EF11  F038         	goto	u661
  3830   00701E  EF13  F038         	goto	u660
  3831   007022                     u661:
  3832   007022  EF2E  F038         	goto	l1624
  3833   007026                     u660:
  3834   007026  EE20 F009          	lfsr	2,9
  3835   00702A  5005               	movf	fputc@fp^0,w,c
  3836   00702C  26D9               	addwf	fsr2l,f,c
  3837   00702E  5006               	movf	(fputc@fp+1)^0,w,c
  3838   007030  22DA               	addwfc	fsr2h,f,c
  3839   007032  EE10 F003          	lfsr	1,3
  3840   007036  5005               	movf	fputc@fp^0,w,c
  3841   007038  26E1               	addwf	fsr1l,f,c
  3842   00703A  5006               	movf	(fputc@fp+1)^0,w,c
  3843   00703C  22E2               	addwfc	fsr1h,f,c
  3844   00703E  50DE               	movf	postinc2,w,c
  3845   007040  5CE6               	subwf	postinc1,w,c
  3846   007042  50E6               	movf	postinc1,w,c
  3847   007044  0A80               	xorlw	128
  3848   007046  6E0B               	movwf	(??_fputc+4)^0,c
  3849   007048  50DE               	movf	postinc2,w,c
  3850   00704A  0A80               	xorlw	128
  3851   00704C  580B               	subwfb	(??_fputc+4)^0,w,c
  3852   00704E  B0D8               	btfsc	status,0,c
  3853   007050  EF2C  F038         	goto	u671
  3854   007054  EF2E  F038         	goto	u670
  3855   007058                     u671:
  3856   007058  EF37  F038         	goto	l1076
  3857   00705C                     u670:
  3858   00705C                     l1624:
  3859   00705C  EE20 F003          	lfsr	2,3
  3860   007060  5005               	movf	fputc@fp^0,w,c
  3861   007062  26D9               	addwf	fsr2l,f,c
  3862   007064  5006               	movf	(fputc@fp+1)^0,w,c
  3863   007066  22DA               	addwfc	fsr2h,f,c
  3864   007068  2ADE               	incf	postinc2,f,c
  3865   00706A  0E00               	movlw	0
  3866   00706C  22DD               	addwfc	postdec2,f,c
  3867   00706E                     l1076:
  3868   00706E  0012               	return		;funcret
  3869   007070                     __end_of_fputc:
  3870                           	callstack 0
  3871                           
  3872 ;; *************** function _putch *****************
  3873 ;; Defined at:
  3874 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;  txData          1    wreg     unsigned char 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  txData          1    1[COMRAM] unsigned char 
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, status,2, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3888 ;;      Params:         0       0       0       0       0       0       0
  3889 ;;      Locals:         1       0       0       0       0       0       0
  3890 ;;      Temps:          0       0       0       0       0       0       0
  3891 ;;      Totals:         1       0       0       0       0       0       0
  3892 ;;Total ram usage:        1 bytes
  3893 ;; Hardware stack levels used: 1
  3894 ;; Hardware stack levels required when called: 1
  3895 ;; This function calls:
  3896 ;;		_EUSART1_Write
  3897 ;; This function is called by:
  3898 ;;		_fputc
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text12
  3903   006C58                     __ptext12:
  3904                           	callstack 0
  3905   006C58                     _putch:
  3906                           	callstack 25
  3907                           
  3908                           ;incstack = 0
  3909                           ;putch@txData stored from wreg
  3910   006C58  6E02               	movwf	putch@txData^0,c
  3911   006C5A                     
  3912                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3913   006C5A  5002               	movf	putch@txData^0,w,c
  3914   006C5C  EC4D  F036         	call	_EUSART1_Write
  3915   006C60  0012               	return		;funcret
  3916   006C62                     __end_of_putch:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _EUSART1_Write *****************
  3920 ;; Defined at:
  3921 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  txData          1    wreg     unsigned char 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  txData          1    0[COMRAM] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3935 ;;      Params:         0       0       0       0       0       0       0
  3936 ;;      Locals:         1       0       0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0       0       0
  3938 ;;      Totals:         1       0       0       0       0       0       0
  3939 ;;Total ram usage:        1 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_putch
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text13
  3949   006C9A                     __ptext13:
  3950                           	callstack 0
  3951   006C9A                     _EUSART1_Write:
  3952                           	callstack 25
  3953                           
  3954                           ;incstack = 0
  3955                           ;EUSART1_Write@txData stored from wreg
  3956   006C9A  6E01               	movwf	EUSART1_Write@txData^0,c
  3957   006C9C                     l245:
  3958                           
  3959                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3960   006C9C  A89E               	btfss	158,4,c	;volatile
  3961   006C9E  EF53  F036         	goto	u631
  3962   006CA2  EF55  F036         	goto	u630
  3963   006CA6                     u631:
  3964   006CA6  EF4E  F036         	goto	l245
  3965   006CAA                     u630:
  3966   006CAA                     
  3967                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3968   006CAA  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3969   006CAE  0012               	return		;funcret
  3970   006CB0                     __end_of_EUSART1_Write:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _TMR0_WriteTimer *****************
  3974 ;; Defined at:
  3975 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  timerVal        2    8[COMRAM] unsigned short 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, status,2
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3989 ;;      Params:         2       0       0       0       0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0
  3992 ;;      Totals:         2       0       0       0       0       0       0
  3993 ;;Total ram usage:        2 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_main
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002                           	psect	text14
  4003   006C4E                     __ptext14:
  4004                           	callstack 0
  4005   006C4E                     _TMR0_WriteTimer:
  4006                           	callstack 30
  4007   006C4E                     
  4008                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  4009   006C4E  500A               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4010   006C50  6ED7               	movwf	215,c	;volatile
  4011   006C52                     
  4012                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  4013   006C52  C009  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4014   006C56  0012               	return		;funcret
  4015   006C58                     __end_of_TMR0_WriteTimer:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _TMR0_ReadTimer *****************
  4019 ;; Defined at:
  4020 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  readVal         2    4[COMRAM] unsigned short 
  4025 ;;  readValHigh     1    7[COMRAM] unsigned char 
  4026 ;;  readValLow      1    6[COMRAM] unsigned char 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  2    0[COMRAM] unsigned short 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4036 ;;      Params:         2       0       0       0       0       0       0
  4037 ;;      Locals:         4       0       0       0       0       0       0
  4038 ;;      Temps:          2       0       0       0       0       0       0
  4039 ;;      Totals:         8       0       0       0       0       0       0
  4040 ;;Total ram usage:        8 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text15
  4050   006CE6                     __ptext15:
  4051                           	callstack 0
  4052   006CE6                     _TMR0_ReadTimer:
  4053                           	callstack 30
  4054   006CE6                     
  4055                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
  4056   006CE6  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  4057                           
  4058                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
  4059   006CEA  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  4060   006CEE                     
  4061                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  4062   006CEE  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  4063   006CF0  6E03               	movwf	??_TMR0_ReadTimer^0,c
  4064   006CF2  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  4065   006CF4  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  4066   006CF6  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  4067   006CFA                     
  4068                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
  4069   006CFA  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  4070   006CFE  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  4071   006D02  0012               	return		;funcret
  4072   006D04                     __end_of_TMR0_ReadTimer:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _TMR0_HasOverflowOccured *****************
  4076 ;; Defined at:
  4077 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      _Bool 
  4084 ;; Registers used:
  4085 ;;		wreg
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4091 ;;      Params:         0       0       0       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; This function calls:
  4098 ;;		Nothing
  4099 ;; This function is called by:
  4100 ;;		_main
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text16
  4105   006C86                     __ptext16:
  4106                           	callstack 0
  4107   006C86                     _TMR0_HasOverflowOccured:
  4108                           	callstack 30
  4109   006C86                     
  4110                           ;mcc_generated_files/tmr0.c: 132:     return(INTCONbits.TMR0IF);
  4111   006C86  B4F2               	btfsc	242,2,c	;volatile
  4112   006C88  EF48  F036         	goto	u1051
  4113   006C8C  EF4B  F036         	goto	u1050
  4114   006C90                     u1051:
  4115   006C90  0E01               	movlw	1
  4116   006C92  EF4C  F036         	goto	u1056
  4117   006C96                     u1050:
  4118   006C96  0E00               	movlw	0
  4119   006C98                     u1056:
  4120   006C98  0012               	return		;funcret
  4121   006C9A                     __end_of_TMR0_HasOverflowOccured:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _SYSTEM_Initialize *****************
  4125 ;; Defined at:
  4126 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4140 ;;      Params:         0       0       0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0
  4143 ;;      Totals:         0       0       0       0       0       0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 2
  4147 ;; This function calls:
  4148 ;;		_EPWM1_Initialize
  4149 ;;		_EUSART1_Initialize
  4150 ;;		_OSCILLATOR_Initialize
  4151 ;;		_PIN_MANAGER_Initialize
  4152 ;;		_TMR0_Initialize
  4153 ;;		_TMR2_Initialize
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text17
  4160   006CB0                     __ptext17:
  4161                           	callstack 0
  4162   006CB0                     _SYSTEM_Initialize:
  4163                           	callstack 28
  4164   006CB0                     
  4165                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4166   006CB0  ECDF  F036         	call	_PIN_MANAGER_Initialize	;wreg free
  4167                           
  4168                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4169   006CB4  EC65  F036         	call	_OSCILLATOR_Initialize	;wreg free
  4170                           
  4171                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  4172   006CB8  EC82  F036         	call	_EPWM1_Initialize	;wreg free
  4173                           
  4174                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  4175   006CBC  EC31  F036         	call	_TMR2_Initialize	;wreg free
  4176   006CC0                     
  4177                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4178   006CC0  ECA2  F036         	call	_TMR0_Initialize	;wreg free
  4179   006CC4                     
  4180                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4181   006CC4  EC27  F037         	call	_EUSART1_Initialize	;wreg free
  4182   006CC8  0012               	return		;funcret
  4183   006CCA                     __end_of_SYSTEM_Initialize:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _TMR2_Initialize *****************
  4187 ;; Defined at:
  4188 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;		None
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;		None
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4202 ;;      Params:         0       0       0       0       0       0       0
  4203 ;;      Locals:         0       0       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0       0
  4205 ;;      Totals:         0       0       0       0       0       0       0
  4206 ;;Total ram usage:        0 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; This function calls:
  4209 ;;		Nothing
  4210 ;; This function is called by:
  4211 ;;		_SYSTEM_Initialize
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text18
  4216   006C62                     __ptext18:
  4217                           	callstack 0
  4218   006C62                     _TMR2_Initialize:
  4219                           	callstack 29
  4220   006C62                     
  4221                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  4222   006C62  0E3F               	movlw	63
  4223   006C64  6EBB               	movwf	187,c	;volatile
  4224                           
  4225                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4226   006C66  0E00               	movlw	0
  4227   006C68  6EBC               	movwf	188,c	;volatile
  4228   006C6A                     
  4229                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4230   006C6A  929E               	bcf	158,1,c	;volatile
  4231                           
  4232                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  4233   006C6C  0E05               	movlw	5
  4234   006C6E  6EBA               	movwf	186,c	;volatile
  4235   006C70  0012               	return		;funcret
  4236   006C72                     __end_of_TMR2_Initialize:
  4237                           	callstack 0
  4238                           
  4239 ;; *************** function _TMR0_Initialize *****************
  4240 ;; Defined at:
  4241 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4255 ;;      Params:         0       0       0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0
  4257 ;;      Temps:          2       0       0       0       0       0       0
  4258 ;;      Totals:         2       0       0       0       0       0       0
  4259 ;;Total ram usage:        2 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; This function calls:
  4262 ;;		Nothing
  4263 ;; This function is called by:
  4264 ;;		_SYSTEM_Initialize
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text19
  4269   006D44                     __ptext19:
  4270                           	callstack 0
  4271   006D44                     _TMR0_Initialize:
  4272                           	callstack 29
  4273   006D44                     
  4274                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
  4275   006D44  9CD5               	bcf	213,6,c	;volatile
  4276                           
  4277                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFF;
  4278   006D46  68D7               	setf	215,c	;volatile
  4279   006D48                     
  4280                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xC1;
  4281   006D48  0EC1               	movlw	193
  4282   006D4A  6ED6               	movwf	214,c	;volatile
  4283   006D4C                     
  4284                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4285   006D4C  50D6               	movf	214,w,c	;volatile
  4286   006D4E  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  4287   006D52  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  4288   006D54  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4289   006D58  6A01               	clrf	??_TMR0_Initialize^0,c
  4290   006D5A  1001               	iorwf	??_TMR0_Initialize^0,w,c
  4291   006D5C  0100               	movlb	0	; () banked
  4292   006D5E  6F6A               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  4293   006D60  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  4294   006D62  6F6B               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  4295   006D64                     
  4296                           ; BSR set to: 0
  4297                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
  4298   006D64  94F2               	bcf	242,2,c	;volatile
  4299   006D66                     
  4300                           ; BSR set to: 0
  4301                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
  4302   006D66  0E97               	movlw	151
  4303   006D68  6ED5               	movwf	213,c	;volatile
  4304   006D6A                     
  4305                           ; BSR set to: 0
  4306   006D6A  0012               	return		;funcret
  4307   006D6C                     __end_of_TMR0_Initialize:
  4308                           	callstack 0
  4309                           
  4310 ;; *************** function _PIN_MANAGER_Initialize *****************
  4311 ;; Defined at:
  4312 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4313 ;; Parameters:    Size  Location     Type
  4314 ;;		None
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4326 ;;      Params:         0       0       0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0
  4329 ;;      Totals:         0       0       0       0       0       0       0
  4330 ;;Total ram usage:        0 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_SYSTEM_Initialize
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text20
  4340   006DBE                     __ptext20:
  4341                           	callstack 0
  4342   006DBE                     _PIN_MANAGER_Initialize:
  4343                           	callstack 29
  4344   006DBE                     
  4345                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4346   006DBE  0E00               	movlw	0
  4347   006DC0  6E89               	movwf	137,c	;volatile
  4348                           
  4349                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4350   006DC2  0E00               	movlw	0
  4351   006DC4  6E8A               	movwf	138,c	;volatile
  4352                           
  4353                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4354   006DC6  0E00               	movlw	0
  4355   006DC8  6E8B               	movwf	139,c	;volatile
  4356   006DCA                     
  4357                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4358   006DCA  6892               	setf	146,c	;volatile
  4359   006DCC                     
  4360                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4361   006DCC  6893               	setf	147,c	;volatile
  4362                           
  4363                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  4364   006DCE  0EBB               	movlw	187
  4365   006DD0  6E94               	movwf	148,c	;volatile
  4366                           
  4367                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4368   006DD2  0E3C               	movlw	60
  4369   006DD4  010F               	movlb	15	; () banked
  4370   006DD6  6F3A               	movwf	58,b	;volatile
  4371                           
  4372                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4373   006DD8  0E3F               	movlw	63
  4374   006DDA  6F39               	movwf	57,b	;volatile
  4375                           
  4376                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4377   006DDC  0E2F               	movlw	47
  4378   006DDE  6F38               	movwf	56,b	;volatile
  4379                           
  4380                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4381   006DE0  0E00               	movlw	0
  4382   006DE2  6E61               	movwf	97,c	;volatile
  4383   006DE4                     
  4384                           ; BSR set to: 15
  4385                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4386   006DE4  8EF1               	bsf	241,7,c	;volatile
  4387   006DE6                     
  4388                           ; BSR set to: 15
  4389   006DE6  0012               	return		;funcret
  4390   006DE8                     __end_of_PIN_MANAGER_Initialize:
  4391                           	callstack 0
  4392                           
  4393 ;; *************** function _OSCILLATOR_Initialize *****************
  4394 ;; Defined at:
  4395 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;		None
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  1    wreg      void 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4409 ;;      Params:         0       0       0       0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0
  4412 ;;      Totals:         0       0       0       0       0       0       0
  4413 ;;Total ram usage:        0 bytes
  4414 ;; Hardware stack levels used: 1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_SYSTEM_Initialize
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text21
  4423   006CCA                     __ptext21:
  4424                           	callstack 0
  4425   006CCA                     _OSCILLATOR_Initialize:
  4426                           	callstack 29
  4427   006CCA                     
  4428                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4429   006CCA  0E70               	movlw	112
  4430   006CCC  6ED3               	movwf	211,c	;volatile
  4431                           
  4432                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  4433   006CCE  0E04               	movlw	4
  4434   006CD0  6ED2               	movwf	210,c	;volatile
  4435                           
  4436                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  4437   006CD2  0E40               	movlw	64
  4438   006CD4  6E9B               	movwf	155,c	;volatile
  4439   006CD6                     l111:
  4440                           
  4441                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  4442   006CD6  AED2               	btfss	4050,7,c	;volatile
  4443   006CD8  EF70  F036         	goto	u1031
  4444   006CDC  EF72  F036         	goto	u1030
  4445   006CE0                     u1031:
  4446   006CE0  EF6B  F036         	goto	l111
  4447   006CE4                     u1030:
  4448   006CE4  0012               	return		;funcret
  4449   006CE6                     __end_of_OSCILLATOR_Initialize:
  4450                           	callstack 0
  4451                           
  4452 ;; *************** function _EUSART1_Initialize *****************
  4453 ;; Defined at:
  4454 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;		None
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;		None
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4468 ;;      Params:         0       0       0       0       0       0       0
  4469 ;;      Locals:         0       0       0       0       0       0       0
  4470 ;;      Temps:          0       0       0       0       0       0       0
  4471 ;;      Totals:         0       0       0       0       0       0       0
  4472 ;;Total ram usage:        0 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 1
  4475 ;; This function calls:
  4476 ;;		_EUSART1_SetErrorHandler
  4477 ;;		_EUSART1_SetFramingErrorHandler
  4478 ;;		_EUSART1_SetOverrunErrorHandler
  4479 ;; This function is called by:
  4480 ;;		_SYSTEM_Initialize
  4481 ;; This function uses a non-reentrant model
  4482 ;;
  4483                           
  4484                           	psect	text22
  4485   006E4E                     __ptext22:
  4486                           	callstack 0
  4487   006E4E                     _EUSART1_Initialize:
  4488                           	callstack 28
  4489   006E4E                     
  4490                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4491   006E4E  0E08               	movlw	8
  4492   006E50  6EB8               	movwf	184,c	;volatile
  4493                           
  4494                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4495   006E52  0E90               	movlw	144
  4496   006E54  6EAB               	movwf	171,c	;volatile
  4497                           
  4498                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4499   006E56  0E24               	movlw	36
  4500   006E58  6EAC               	movwf	172,c	;volatile
  4501                           
  4502                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4503   006E5A  0E82               	movlw	130
  4504   006E5C  6EAF               	movwf	175,c	;volatile
  4505                           
  4506                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4507   006E5E  0E06               	movlw	6
  4508   006E60  6EB0               	movwf	176,c	;volatile
  4509   006E62                     
  4510                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4511   006E62  0E00               	movlw	0
  4512   006E64  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4513   006E66  0E00               	movlw	0
  4514   006E68  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4515   006E6A  EC1D  F036         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4516   006E6E                     
  4517                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4518   006E6E  0E00               	movlw	0
  4519   006E70  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4520   006E72  0E00               	movlw	0
  4521   006E74  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4522   006E76  EC22  F036         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4523   006E7A                     
  4524                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4525   006E7A  0E00               	movlw	0
  4526   006E7C  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4527   006E7E  0E00               	movlw	0
  4528   006E80  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4529   006E82  EC18  F036         	call	_EUSART1_SetErrorHandler	;wreg free
  4530   006E86                     
  4531                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4532   006E86  0E00               	movlw	0
  4533   006E88  0100               	movlb	0	; () banked
  4534   006E8A  6F6D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4535   006E8C                     
  4536                           ; BSR set to: 0
  4537   006E8C  0012               	return		;funcret
  4538   006E8E                     __end_of_EUSART1_Initialize:
  4539                           	callstack 0
  4540                           
  4541 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4542 ;; Defined at:
  4543 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4546 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4558 ;;      Params:         2       0       0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0
  4561 ;;      Totals:         2       0       0       0       0       0       0
  4562 ;;Total ram usage:        2 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_EUSART1_Initialize
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text23
  4572   006C44                     __ptext23:
  4573                           	callstack 0
  4574   006C44                     _EUSART1_SetOverrunErrorHandler:
  4575                           	callstack 28
  4576   006C44                     
  4577                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4578   006C44  C001  F066         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4579   006C48  C002  F067         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4580   006C4C  0012               	return		;funcret
  4581   006C4E                     __end_of_EUSART1_SetOverrunErrorHandler:
  4582                           	callstack 0
  4583                           
  4584 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4585 ;; Defined at:
  4586 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4589 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;		None
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4601 ;;      Params:         2       0       0       0       0       0       0
  4602 ;;      Locals:         0       0       0       0       0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0
  4604 ;;      Totals:         2       0       0       0       0       0       0
  4605 ;;Total ram usage:        2 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; This function calls:
  4608 ;;		Nothing
  4609 ;; This function is called by:
  4610 ;;		_EUSART1_Initialize
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           	psect	text24
  4615   006C3A                     __ptext24:
  4616                           	callstack 0
  4617   006C3A                     _EUSART1_SetFramingErrorHandler:
  4618                           	callstack 28
  4619   006C3A                     
  4620                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4621   006C3A  C001  F068         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4622   006C3E  C002  F069         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4623   006C42  0012               	return		;funcret
  4624   006C44                     __end_of_EUSART1_SetFramingErrorHandler:
  4625                           	callstack 0
  4626                           
  4627 ;; *************** function _EUSART1_SetErrorHandler *****************
  4628 ;; Defined at:
  4629 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4632 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1    wreg      void 
  4637 ;; Registers used:
  4638 ;;		wreg, status,2, status,0
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/0
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4644 ;;      Params:         2       0       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0
  4647 ;;      Totals:         2       0       0       0       0       0       0
  4648 ;;Total ram usage:        2 bytes
  4649 ;; Hardware stack levels used: 1
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_EUSART1_Initialize
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text25
  4658   006C30                     __ptext25:
  4659                           	callstack 0
  4660   006C30                     _EUSART1_SetErrorHandler:
  4661                           	callstack 28
  4662   006C30                     
  4663                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4664   006C30  C001  F064         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4665   006C34  C002  F065         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4666   006C38  0012               	return		;funcret
  4667   006C3A                     __end_of_EUSART1_SetErrorHandler:
  4668                           	callstack 0
  4669                           
  4670 ;; *************** function _EPWM1_Initialize *****************
  4671 ;; Defined at:
  4672 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, status,2
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4686 ;;      Params:         0       0       0       0       0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_SYSTEM_Initialize
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text26
  4700   006D04                     __ptext26:
  4701                           	callstack 0
  4702   006D04                     _EPWM1_Initialize:
  4703                           	callstack 29
  4704   006D04                     
  4705                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4706   006D04  0E3C               	movlw	60
  4707   006D06  6EBD               	movwf	189,c	;volatile
  4708                           
  4709                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4710   006D08  0E00               	movlw	0
  4711   006D0A  6EB6               	movwf	182,c	;volatile
  4712                           
  4713                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  4714   006D0C  0E80               	movlw	128
  4715   006D0E  6EB7               	movwf	183,c	;volatile
  4716                           
  4717                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  4718   006D10  0E01               	movlw	1
  4719   006D12  6EB9               	movwf	185,c	;volatile
  4720                           
  4721                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  4722   006D14  0E00               	movlw	0
  4723   006D16  6EBF               	movwf	191,c	;volatile
  4724                           
  4725                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  4726   006D18  0E1F               	movlw	31
  4727   006D1A  6EBE               	movwf	190,c	;volatile
  4728                           
  4729                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  4730   006D1C  0EFC               	movlw	-4
  4731   006D1E  010F               	movlb	15	; () banked
  4732   006D20  1749               	andwf	73,f,b	;volatile
  4733   006D22                     
  4734                           ; BSR set to: 15
  4735   006D22  0012               	return		;funcret
  4736   006D24                     __end_of_EPWM1_Initialize:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _EUSART1_is_rx_ready *****************
  4740 ;; Defined at:
  4741 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      _Bool 
  4748 ;; Registers used:
  4749 ;;		wreg
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4755 ;;      Params:         0       0       0       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           	psect	text27
  4769   006C72                     __ptext27:
  4770                           	callstack 0
  4771   006C72                     _EUSART1_is_rx_ready:
  4772                           	callstack 30
  4773   006C72                     
  4774                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4775   006C72  BA9E               	btfsc	158,5,c	;volatile
  4776   006C74  EF3E  F036         	goto	u1061
  4777   006C78  EF41  F036         	goto	u1060
  4778   006C7C                     u1061:
  4779   006C7C  0E01               	movlw	1
  4780   006C7E  EF42  F036         	goto	u1066
  4781   006C82                     u1060:
  4782   006C82  0E00               	movlw	0
  4783   006C84                     u1066:
  4784   006C84  0012               	return		;funcret
  4785   006C86                     __end_of_EUSART1_is_rx_ready:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _EUSART1_Read *****************
  4789 ;; Defined at:
  4790 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;		None
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      unsigned char 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4804 ;;      Params:         0       0       0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0
  4807 ;;      Totals:         0       0       0       0       0       0       0
  4808 ;;Total ram usage:        0 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;;		_getch
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           	psect	text28
  4819   006D94                     __ptext28:
  4820                           	callstack 0
  4821   006D94                     _EUSART1_Read:
  4822                           	callstack 30
  4823   006D94                     l238:
  4824                           
  4825                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4826   006D94  AA9E               	btfss	158,5,c	;volatile
  4827   006D96  EFCF  F036         	goto	u1071
  4828   006D9A  EFD1  F036         	goto	u1070
  4829   006D9E                     u1071:
  4830   006D9E  EFCA  F036         	goto	l238
  4831   006DA2                     u1070:
  4832   006DA2                     
  4833                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4834   006DA2  0E00               	movlw	0
  4835   006DA4  0100               	movlb	0	; () banked
  4836   006DA6  6F6D               	movwf	_eusart1RxLastError& (0+255),b	;volatile
  4837   006DA8                     
  4838                           ; BSR set to: 0
  4839                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4840   006DA8  A2AB               	btfss	171,1,c	;volatile
  4841   006DAA  EFD9  F036         	goto	u1081
  4842   006DAE  EFDB  F036         	goto	u1080
  4843   006DB2                     u1081:
  4844   006DB2  EFDD  F036         	goto	l1944
  4845   006DB6                     u1080:
  4846   006DB6                     
  4847                           ; BSR set to: 0
  4848                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4849   006DB6  98AB               	bcf	171,4,c	;volatile
  4850                           
  4851                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4852   006DB8  88AB               	bsf	171,4,c	;volatile
  4853   006DBA                     l1944:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4857   006DBA  50AE               	movf	174,w,c	;volatile
  4858   006DBC                     
  4859                           ; BSR set to: 0
  4860   006DBC  0012               	return		;funcret
  4861   006DBE                     __end_of_EUSART1_Read:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _EPWM1_LoadDutyValue *****************
  4865 ;; Defined at:
  4866 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  dutyValue       2    0[COMRAM] unsigned short 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4880 ;;      Params:         2       0       0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0
  4882 ;;      Temps:          2       0       0       0       0       0       0
  4883 ;;      Totals:         4       0       0       0       0       0       0
  4884 ;;Total ram usage:        4 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text29
  4894   006DE8                     __ptext29:
  4895                           	callstack 0
  4896   006DE8                     _EPWM1_LoadDutyValue:
  4897                           	callstack 30
  4898   006DE8                     
  4899                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4900   006DE8  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4901   006DEC  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  4902   006DF0  90D8               	bcf	status,0,c
  4903   006DF2  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4904   006DF4  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4905   006DF6  90D8               	bcf	status,0,c
  4906   006DF8  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4907   006DFA  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4908   006DFC  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
  4909   006DFE  6EBE               	movwf	190,c	;volatile
  4910                           
  4911                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4912   006E00  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4913   006E04  0E03               	movlw	3
  4914   006E06  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4915   006E08  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  4916   006E0A  0EF0               	movlw	240
  4917   006E0C  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4918   006E0E  50BD               	movf	189,w,c	;volatile
  4919   006E10  0BCF               	andlw	207
  4920   006E12  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  4921   006E14  6EBD               	movwf	189,c	;volatile
  4922   006E16  0012               	return		;funcret
  4923   006E18                     __end_of_EPWM1_LoadDutyValue:
  4924                           	callstack 0
  4925                           
  4926                           	psect	rparam
  4927   000000                     
  4928                           	psect	idloc
  4929                           
  4930                           ;Config register IDLOC0 @ 0x200000
  4931                           ;	unspecified, using default values
  4932   200000                     	org	2097152
  4933   200000  FF                 	db	255
  4934                           
  4935                           ;Config register IDLOC1 @ 0x200001
  4936                           ;	unspecified, using default values
  4937   200001                     	org	2097153
  4938   200001  FF                 	db	255
  4939                           
  4940                           ;Config register IDLOC2 @ 0x200002
  4941                           ;	unspecified, using default values
  4942   200002                     	org	2097154
  4943   200002  FF                 	db	255
  4944                           
  4945                           ;Config register IDLOC3 @ 0x200003
  4946                           ;	unspecified, using default values
  4947   200003                     	org	2097155
  4948   200003  FF                 	db	255
  4949                           
  4950                           ;Config register IDLOC4 @ 0x200004
  4951                           ;	unspecified, using default values
  4952   200004                     	org	2097156
  4953   200004  FF                 	db	255
  4954                           
  4955                           ;Config register IDLOC5 @ 0x200005
  4956                           ;	unspecified, using default values
  4957   200005                     	org	2097157
  4958   200005  FF                 	db	255
  4959                           
  4960                           ;Config register IDLOC6 @ 0x200006
  4961                           ;	unspecified, using default values
  4962   200006                     	org	2097158
  4963   200006  FF                 	db	255
  4964                           
  4965                           ;Config register IDLOC7 @ 0x200007
  4966                           ;	unspecified, using default values
  4967   200007                     	org	2097159
  4968   200007  FF                 	db	255
  4969                           
  4970                           	psect	config
  4971                           
  4972                           ; Padding undefined space
  4973   300000                     	org	3145728
  4974   300000  FF                 	db	255
  4975                           
  4976                           ;Config register CONFIG1H @ 0x300001
  4977                           ;	Oscillator Selection bits
  4978                           ;	FOSC = INTIO67, Internal oscillator block
  4979                           ;	4X PLL Enable
  4980                           ;	PLLCFG = OFF, Oscillator used directly
  4981                           ;	Primary clock enable bit
  4982                           ;	PRICLKEN = ON, Primary clock enabled
  4983                           ;	Fail-Safe Clock Monitor Enable bit
  4984                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4985                           ;	Internal/External Oscillator Switchover bit
  4986                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4987   300001                     	org	3145729
  4988   300001  28                 	db	40
  4989                           
  4990                           ;Config register CONFIG2L @ 0x300002
  4991                           ;	Power-up Timer Enable bit
  4992                           ;	PWRTEN = OFF, Power up timer disabled
  4993                           ;	Brown-out Reset Enable bits
  4994                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4995                           ;	Brown Out Reset Voltage bits
  4996                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4997   300002                     	org	3145730
  4998   300002  1F                 	db	31
  4999                           
  5000                           ;Config register CONFIG2H @ 0x300003
  5001                           ;	Watchdog Timer Enable bits
  5002                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5003                           ;	Watchdog Timer Postscale Select bits
  5004                           ;	WDTPS = 32768, 1:32768
  5005   300003                     	org	3145731
  5006   300003  3C                 	db	60
  5007                           
  5008                           ; Padding undefined space
  5009   300004                     	org	3145732
  5010   300004  FF                 	db	255
  5011                           
  5012                           ;Config register CONFIG3H @ 0x300005
  5013                           ;	CCP2 MUX bit
  5014                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5015                           ;	PORTB A/D Enable bit
  5016                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5017                           ;	P3A/CCP3 Mux bit
  5018                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5019                           ;	HFINTOSC Fast Start-up
  5020                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5021                           ;	Timer3 Clock input mux bit
  5022                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5023                           ;	ECCP2 B output mux bit
  5024                           ;	P2BMX = PORTB5, P2B is on RB5
  5025                           ;	MCLR Pin Enable bit
  5026                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5027   300005                     	org	3145733
  5028   300005  BF                 	db	191
  5029                           
  5030                           ;Config register CONFIG4L @ 0x300006
  5031                           ;	Stack Full/Underflow Reset Enable bit
  5032                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5033                           ;	Single-Supply ICSP Enable bit
  5034                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5035                           ;	Extended Instruction Set Enable bit
  5036                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5037                           ;	Background Debug
  5038                           ;	DEBUG = OFF, Disabled
  5039   300006                     	org	3145734
  5040   300006  85                 	db	133
  5041                           
  5042                           ; Padding undefined space
  5043   300007                     	org	3145735
  5044   300007  FF                 	db	255
  5045                           
  5046                           ;Config register CONFIG5L @ 0x300008
  5047                           ;	Code Protection Block 0
  5048                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5049                           ;	Code Protection Block 1
  5050                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5051                           ;	Code Protection Block 2
  5052                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5053                           ;	Code Protection Block 3
  5054                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5055   300008                     	org	3145736
  5056   300008  0F                 	db	15
  5057                           
  5058                           ;Config register CONFIG5H @ 0x300009
  5059                           ;	Boot Block Code Protection bit
  5060                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5061                           ;	Data EEPROM Code Protection bit
  5062                           ;	CPD = OFF, Data EEPROM not code-protected
  5063   300009                     	org	3145737
  5064   300009  C0                 	db	192
  5065                           
  5066                           ;Config register CONFIG6L @ 0x30000A
  5067                           ;	Write Protection Block 0
  5068                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5069                           ;	Write Protection Block 1
  5070                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5071                           ;	Write Protection Block 2
  5072                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5073                           ;	Write Protection Block 3
  5074                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5075   30000A                     	org	3145738
  5076   30000A  0F                 	db	15
  5077                           
  5078                           ;Config register CONFIG6H @ 0x30000B
  5079                           ;	Configuration Register Write Protection bit
  5080                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5081                           ;	Boot Block Write Protection bit
  5082                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5083                           ;	Data EEPROM Write Protection bit
  5084                           ;	WRTD = OFF, Data EEPROM not write-protected
  5085   30000B                     	org	3145739
  5086   30000B  E0                 	db	224
  5087                           
  5088                           ;Config register CONFIG7L @ 0x30000C
  5089                           ;	Table Read Protection Block 0
  5090                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5091                           ;	Table Read Protection Block 1
  5092                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5093                           ;	Table Read Protection Block 2
  5094                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5095                           ;	Table Read Protection Block 3
  5096                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5097   30000C                     	org	3145740
  5098   30000C  0F                 	db	15
  5099                           
  5100                           ;Config register CONFIG7H @ 0x30000D
  5101                           ;	Boot Block Table Read Protection bit
  5102                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5103   30000D                     	org	3145741
  5104   30000D  40                 	db	64
  5105                           tosu	equ	0xFFF
  5106                           tosh	equ	0xFFE
  5107                           tosl	equ	0xFFD
  5108                           stkptr	equ	0xFFC
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           pcl	equ	0xFF9
  5112                           tblptru	equ	0xFF8
  5113                           tblptrh	equ	0xFF7
  5114                           tblptrl	equ	0xFF6
  5115                           tablat	equ	0xFF5
  5116                           prodh	equ	0xFF4
  5117                           prodl	equ	0xFF3
  5118                           indf0	equ	0xFEF
  5119                           postinc0	equ	0xFEE
  5120                           postdec0	equ	0xFED
  5121                           preinc0	equ	0xFEC
  5122                           plusw0	equ	0xFEB
  5123                           fsr0h	equ	0xFEA
  5124                           fsr0l	equ	0xFE9
  5125                           wreg	equ	0xFE8
  5126                           indf1	equ	0xFE7
  5127                           postinc1	equ	0xFE6
  5128                           postdec1	equ	0xFE5
  5129                           preinc1	equ	0xFE4
  5130                           plusw1	equ	0xFE3
  5131                           fsr1h	equ	0xFE2
  5132                           fsr1l	equ	0xFE1
  5133                           bsr	equ	0xFE0
  5134                           indf2	equ	0xFDF
  5135                           postinc2	equ	0xFDE
  5136                           postdec2	equ	0xFDD
  5137                           preinc2	equ	0xFDC
  5138                           plusw2	equ	0xFDB
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8

Data Sizes:
    Strings     808
    Constant    0
    Data        32
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     41     119
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1142$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1142$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1182$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR0_WriteTimer->_TMR0_ReadTimer
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   12533
                                              2 BANK0     39    39      0
                _EPWM1_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   11053
                                             91 COMRAM     4     0      4
                                              0 BANK0      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8109
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    7753
                                             64 COMRAM    19    13      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4517
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2867
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1365
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1405
                                             11 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1116
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     196
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     576
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_ReadTimer
   _TMR0_WriteTimer
     _TMR0_ReadTimer (ARG)
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     29      77       4       74.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRllhllh     27      0       0      24        0.0%
BITBIGSFRhhhhl      19      0       0      16        0.0%
BITBIGSFRllhlll     17      0       0      25        0.0%
BITBIGSFRhhll       12      0       0      18        0.0%
BITBIGSFRlllh        E      0       0      26        0.0%
BITBIGSFRhhhhh       D      0       0      15        0.0%
BITBIGSFRlhll        C      0       0      20        0.0%
BITBIGSFRllhlhh      6      0       0      22        0.0%
BITBIGSFRllhlhl      6      0       0      23        0.0%
BITBIGSFRlhlhh       5      0       0      19        0.0%
BITBIGSFRllhh        2      0       0      21        0.0%
BITBIGSFRhhlh        1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6      27        0.0%
DATA                 0      0      D6      29        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 23 20:56:55 2023

                              main@volumeAdjust 00B2                 __end_of_TMR0_HasOverflowOccured 6C9A  
                                            l13 6C70                                              l52 6E16  
                                            l49 6D22                                              l67 6D6A  
                                            l76 6D02                                              l85 6C98  
                                            l79 6C56                                 _timer0ReloadVal 006A  
                                           l111 6CD6                                             l114 6CE4  
                                           l108 6CC8                                             l221 6E8C  
                                           l150 79C6                                             l242 6DBC  
                                           l139 78AC                                             l229 6C84  
                                           l245 6C9C                                             l238 6D94  
                                           l254 6C60                                             l272 6C38  
                                           l248 6CAE                                             l432 726E  
                                           l266 6C42                                             l419 73F6  
                                           l269 6C4C                                             l299 6DE6  
                                           l983 6D92                                             _PR2 000FBB  
                                           u700 72B4                                             u701 72B0  
                                           u630 6CAA                                             u631 6CA6  
                                           u711 72DE                                             u640 6FEC  
                                           u720 7302                                             u800 71E6  
                                           u641 6FE8                                             u721 72FE  
                                           u801 71E2                                             u650 6FFE  
                                           u730 732C                                             u810 722E  
                                           u651 6FFA                                             u731 7328  
                                           u811 722A                                             u660 7026  
                                           u740 736C                                             u820 6F6E  
                                           u900 763E                                             u661 7022  
                                           u741 7368                                             u821 6F6A  
                                           u901 763A                                             u670 705C  
                                           u750 73B6                                             u830 6FC4  
                                           u910 767A                                             u671 7058  
                                           u751 73B2                                             u831 6FC0  
                                           u911 7676                                             u760 711E  
                                           u840 6EA8                                             u680 6F10  
                                           u920 76A6                                             u761 711A  
                                           u841 6EA4                                             u681 6F0C  
                                           u921 76A2                                             u850 7084  
                                           u690 7282                                             u770 7150  
                                           u930 76BC                                             u851 7080  
                                           u691 727E                                             u771 714C  
                                           u931 76B8                                             u860 70AA  
                                           u780 718E                                             u940 77F6  
                                           u861 70A6                                             u781 718A  
                                           u941 77F2                                             u870 70F8  
                                           u790 71B8                                             u950 7814  
                                           u871 70F4                                             u791 71B4  
                                           u951 7810                                             u960 782E  
                                           u880 762A                                             u961 782A  
                                           u881 7624                                             u970 783E  
                                           u890 762C                                             u971 783A  
                                           u980 741C                                             u981 7418  
                                           u990 7460                                             u991 745C  
                                           _abs 6E8E                                             _pad 6F60  
                               _TMR2_Initialize 6C62                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1005 6F82  
                                          l1030 768E                                            l1023 710A  
                                          l1015 709C                                            l1031 76D4  
                                          l2000 79FA                                            l1009 6FD8  
                                          l1042 7874                                            l2010 7A48  
                                          l2002 7A00                                            l1019 70B6  
                                          ?_abs 0013                                            l1028 7686  
                                          l2020 7A84                                            l2012 7A5C  
                                          l2004 7A24                                            l1061 6EC4  
                                          l2030 7B02                                            l2022 7A98  
                                          l2014 7A60                                            l2006 7A30  
                                          l1047 75F8                                            l1064 6ECC  
                                          l2040 7B70                                            l2032 7B26  
                                          l2024 7AA0                                            l2016 7A6C  
                                          l2008 7A3C                                            l1057 6F5E  
                                          l2050 7BDE                                            l2042 7B80  
                                          l2034 7B3A                                            l2026 7ADC  
                                          l2018 7A78                                            l1076 706E  
                                          l1084 6F10                                            l2060 7C4A  
                                          l2052 7C10                                            l2044 7BB4  
                                          l2036 7B50                                            l2028 7AE6  
                                          l2062 7C5A                                            l2046 7BC8  
                                          l2054 7C26                                            l2038 7B64  
                                          l2056 7C3A                                            l2048 7BCA  
                                          l1610 6CAA                                            l2058 7C46  
                                          l2066 7C70                                            l1612 6C5A  
                                          l1620 7008                                            l1700 71B8  
                                          l1622 7026                                            l1614 6FDA  
                                          l1710 722E                                            l1702 71E6  
                                          l1630 6EDA                                            l1608 6C9C  
                                          l1624 705C                                            l1616 6FEC  
                                          l1640 7282                                            l1712 724E  
                                          l1704 7206                                            l1632 6EEC  
                                          l1720 6F7A                                            l1800 7854  
                                          l2096 7C84                                            l1618 6FFE  
                                          l1650 72D8                                            l1642 72A2  
                                          l1706 7218                                            l1730 6E8E  
                                          l1634 6EF0                                            l1722 6F8E  
                                          l1810 73F8                                            l1804 6C3A  
                                          l1660 732C                                            l1652 72E4  
                                          l1644 72A6                                            l1636 7270  
                                          l1708 721E                                            l1732 6EA8  
                                          l1628 6ECE                                            l1724 6FA2  
                                          l1716 6F60                                            l1820 7460  
                                          l1812 741C                                            l1902 6DE8  
                                          l1806 6C44                                            l1750 70F8  
                                          l1742 70AE                                            l1734 7070  
                                          l1670 73A0                                            l1662 733E  
                                          l1654 7302                                            l1646 72B4  
                                          l1638 7274                                            l1726 6FA6  
                                          l1718 6F6E                                            l1830 74D2  
                                          l1822 7492                                            l1814 742A  
                                          l1808 6C30                                            l1920 6CB0  
                                          l1904 6CE6                                            l1912 6C4E  
                                          l1744 70C2                                            l1736 7084  
                                          l1664 736C                                            l1656 730A  
                                          l1672 73A6                                            l1648 72D4  
                                          l1680 710C                                            l1728 6FC4  
                                          l1760 765E                                            l1752 75FA  
                                          l1840 7598                                            l1832 74EE  
                                          l1816 7438                                            l1922 6CC0  
                                          l1906 6CEE                                            l1914 6C52  
                                          l1746 70D6                                            l1738 7090  
                                          l1674 73B6                                            l1666 738C  
                                          l1658 731E                                            l1690 7150  
                                          l1682 7110                                            l1770 76BC  
                                          l1762 767A                                            l1754 761A  
                                          l1842 75A6                                            l1834 7544  
                                          l1826 74A6                                            l1818 743C  
                                          l1850 75D0                                            l1940 6DA8  
                                          l1932 6C72                                            l1860 6D04  
                                          l1924 6CC4                                            l1916 6C86  
                                          l1908 6CFA                                            l1748 70DA  
                                          l1676 73D6                                            l1668 738E  
                                          l1692 7170                                            l1684 711E  
                                          l1780 76EA                                            l1772 76C8  
                                          l1764 7696                                            l1756 762E  
                                          l1828 74B6                                            l1942 6DB6  
                                          l1870 6D66                                            l1862 6D44  
                                          l1694 718E                                            l1686 713E  
                                          l1790 77F6                                            l1782 776C  
                                          l1774 76D0                                            l1766 76A6  
                                          l1758 763E                                            l1846 75BE  
                                          l1838 7574                                            l1926 6D6C  
                                          l1944 6DBA                                            l1936 6D94  
                                          l1880 6CCA                                            l1872 6DBE  
                                          l1864 6D48                                            l1856 6C62  
                                          l1696 7196                                            l1688 7142  
                                          l1792 7814                                            l1784 7772  
                                          l1776 76DC                                            l1768 76AC  
                                          l1928 6D76                                            l1960 789E  
                                          l1952 7876                                            l1938 6DA2  
                                          l1890 6E86                                            l1882 6E4E  
                                          l1874 6DCA                                            l1866 6D4C  
                                          l1858 6C6A                                            l1698 71AA  
                                          l1794 782E                                            l1786 7778  
                                          l1778 76E4                                            l1970 790A  
                                          l1962 78AA                                            l1954 7888  
                                          l1884 6E62                                            l1876 6DCC  
                                          l1868 6D64                                            l1796 783E  
                                          l1788 77DC                                            l1892 6F12  
                                          l1980 79A6                                            l1972 7992  
                                          l1964 78BA                                            l1956 788E  
                                          l1886 6E6E                                            l1878 6DE4  
                                          l1798 7844                                            l1894 6F1E  
                                          l1982 79B2                                            l1974 79A2  
                                          l1966 78EA                                            l1958 7892  
                                          ?_pad 0013                                            l1888 6E7A  
                                          l1896 6F3A                                            l1992 79D0  
                                          l1984 79B6                                            l1968 78FE  
                                          l1898 6F56                                            l1994 79DC  
                                          l1986 79CC                                            l1996 79E0  
                                          l1998 79F4                                            STR_1 7FCC  
                                          STR_2 7F37                                            STR_3 7FE2  
                                          STR_4 7FFA                                            STR_5 7D88  
                                          STR_6 7D88                                            STR_7 7FBD  
                                          STR_8 7FF3                                            STR_9 7F84  
                                          u1000 74D2                                            u1001 74CE  
                                          u1010 74EE                                            u1011 74EA  
                                          u1020 7598                                            u1100 78BA  
                                          u1021 7594                                            u1101 78B6  
                                          u1030 6CE4                                            u1110 78FE  
                                          u1031 6CE0                                            u1111 78FA  
                                          u1040 6F56                                            u1200 7C3A  
                                          u1120 79C6                                            u1041 6F52  
                                          u1201 7C36                                            u1121 79C2  
                                          u1050 6C96                                            u1130 79F0  
                                          u1051 6C90                                            u1131 79EC  
                                          u1060 6C82                                            u1140 7A5C  
                                          u1061 6C7C                                            u1141 7A58  
                                          u1070 6DA2                                            u1150 7A98  
                                          u1071 6D9E                                            u1151 7A94  
                                          u1080 6DB6                                            u1056 6C98  
                                          u1160 7B3A                                            u1081 6DB2  
                                          u1161 7B36                                            u1066 6C84  
                                          u1170 7B64                                            u1171 7B60  
                                          u1091 7880                                            u1180 7BDE  
                                          u1181 7BDA                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u1194 7BFE                                            u1195 7BFA  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 6C9A                                            abs@a 0013  
                                          _dbuf 006E                                            _ctoa 7070  
                                          _main 7876                                            _dtoa 75FA  
                                 ?_EUSART1_Read 0001                                            _prec 0062  
                                          pad@i 001A                                            pad@p 0017  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 001C                                            fsr2l 000FD9  
                                          start 0000                           ??_EPWM1_LoadDutyValue 0003  
                                  ___param_bank 000000                                           ??_abs 0015  
                                         ??_pad 0019                         __end_of_TMR0_Initialize 6D6C  
                 __end_of_OSCILLATOR_Initialize 6CE6                                 __end_of___aodiv 73F8  
                                         ?_ctoa 000C                                           ?_main 0001  
                                         ?_dtoa 001E                                 __end_of___aomod 7270  
                                         STR_10 7F6C                                           STR_11 7EFA  
                                         STR_20 7ED2                                           STR_12 7D53  
                                         STR_21 7E54                                           STR_13 7DEF  
                                         STR_14 7E80                                           STR_30 7DBC  
                                         STR_22 7D16                                           STR_15 7D88  
                                         STR_31 7F1A                                           STR_23 7EAA  
                                         STR_16 7FEB                                           STR_32 7FD7  
                                         STR_24 7CD7                                           STR_17 7DED  
                                         STR_33 7E22                                           STR_25 7F53  
                                         STR_18 7DED                                           STR_34 7ED2  
                                         STR_26 7E22                                           STR_27 7ED2  
                                         STR_35 7E54                                           STR_19 7E22  
                                         STR_36 7F53                                           STR_28 7E54  
                                         STR_37 7FD7                                           STR_29 7F99  
                                         STR_38 7FAC                       TMR0_ReadTimer@readValHigh 0008  
                                         _T0CON 000FD5                                           _T2CON 000FBA  
                               _TMR0_WriteTimer 6C4E                                    vfpfcnvrt@fmt 0043  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _flags 006C  
                                         _fputc 6FDA                                           _fputs 6ECE  
                                         pad@fp 0013                                           _width 0060  
                                         ctoa@c 000E                                           _putch 6C58  
                                         ctoa@l 0010                                           ctoa@w 0012  
                                         main@i 00B4                                           dtoa@d 0020  
                                         dtoa@i 003E                                           dtoa@n 0036  
                                         dtoa@p 0032                                           dtoa@s 0040  
                                         dtoa@w 0034                                  ?_EUSART1_Write 0001  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         status 000FD8              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 6E18                                    __end_of_ctoa 710C  
                    __end_of_EUSART1_Initialize 6E8E                                    __end_of_main 7CD6  
                                  __end_of_dtoa 7876                         __end_of_TMR2_Initialize 6C72  
                                        ??_ctoa 000F                                          ??_main 0090  
                                        ??_dtoa 0028                                   __activetblptr 000002  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _CCPR1H 000FBF                                          _CCPR1L 000FBE  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 005A                                       ??___aodiv 0011  
                                     ??___aomod 0011                         __end_of_TMR0_WriteTimer 6C58  
                      ?_EUSART1_SetErrorHandler 0001                                ?_TMR0_Initialize 0001  
                                        clear_0 6E3E                                          isa$std 000001  
                                        _printf 6D6C                                          pad@buf 0015  
              ??_EUSART1_SetOverrunErrorHandler 0003                 ?_EUSART1_SetOverrunErrorHandler 0001  
                                        ctoa@fp 000C                                          dtoa@fp 001E  
                                        fputc@c 0003                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                  __mediumconst 7CD6                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 6F60                                 ??_EUSART1_Write 0001  
                             _SYSTEM_Initialize 6CB0                                      __accesstop 0060  
                       __end_of__initialization 6E44                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 6D24  
                           ??_SYSTEM_Initialize 0003                              ??_EPWM1_Initialize 0001  
                                 __end_of_fputc 7070                                   __end_of_fputs 6F12  
                                 __end_of_putch 6C62                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 6DBE                                         ??_fputc 0007  
                     __end_of_SYSTEM_Initialize 6CCA                                         ??_fputs 0010  
                                       ??_putch 0002                                      __pbssBANK0 0060  
               __end_of_EUSART1_SetErrorHandler 6C3A                                ?_TMR0_WriteTimer 0009  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                       ?_printf 005C          __end_of_EUSART1_SetFramingErrorHandler 6C44  
                _EUSART1_SetFramingErrorHandler 6C3A                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                         _TMR0_HasOverflowOccured 6C86  
                   __end_of_EPWM1_LoadDutyValue 6E18                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 7270  
                                       ___aomod 710C                                       ?_vfprintf 0054  
                           _EUSART1_is_rx_ready 6C72                                         __pcinit 6E18  
                                       __ramtop 0600                                         __ptext0 7876  
                                       __ptext1 6D6C                                         __ptext2 6F12  
                                       __ptext3 73F8                                         __ptext4 75FA  
                                       __ptext5 6F60                                         __ptext6 6ECE  
                                       __ptext7 6E8E                                         __ptext8 710C  
                                       __ptext9 7270                                       _T0CONbits 000FD5  
                         _OSCILLATOR_Initialize 6CCA                                       _T2CONbits 000FBA  
                            _EUSART1_Initialize 6E4E                        ??_PIN_MANAGER_Initialize 0001  
                                       main@cmd 00B3                                         main@sin 0092  
                          end_of_initialization 6E44                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0005  
                                 __Lmediumconst 7CD6                     _EUSART1_OverrunErrorHandler 0066  
                                       fputs@fp 000E                               __end_of_vfpfcnvrt 75FA  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0049                                      ??_vfprintf 005A  
                                _TMR0_ReadTimer 6CE6                            ??_EUSART1_Initialize 0003  
                     ??_TMR0_HasOverflowOccured 0001                             EUSART1_Write@txData 0001  
                         ??_EUSART1_is_rx_ready 0001                                    _EUSART1_Read 6D94  
                        __end_of_TMR0_ReadTimer 6D04                                     vfpfcnvrt@ap 0045  
                                   vfpfcnvrt@cp 0052                                     vfpfcnvrt@fp 0041  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 6D94  
                           start_initialization 6E18                                     __end_of_abs 6ECE  
                                   __end_of_pad 6FDA                                     putch@txData 0002  
                  EPWM1_LoadDutyValue@dutyValue 0001                           __end_of_EUSART1_Write 6CB0  
                                   vfprintf@fmt 0056                                 ?_TMR0_ReadTimer 0001  
                                   __pdataBANK0 00B7                                        ??_printf 0060  
                                 __pcstackBANK0 008E                                ___aodiv@dividend 0001  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                        _PIN_MANAGER_Initialize 6DBE                                       _dtoa$1215 0030  
                                 __pmediumconst 7CD6                                        ?___aodiv 0001  
                                      ?___aomod 0001                                ___aodiv@quotient 0013  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 0064                         _EUSART1_SetErrorHandler 6C30  
                             ??_TMR0_Initialize 0001         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _PIR1bits 000F9E                                       main@F6116 00B7  
                                      _PSTR1CON 000FB9                                       _vfpfcnvrt 73F8  
                      TMR0_ReadTimer@readValLow 0007                                       main@index 00B5  
                              _EPWM1_Initialize 6D04                                      vfpfcnvrt@c 0051  
                                   _INTCON2bits 000FF1                                       copy_data0 6E2C  
                             ??_TMR2_Initialize 0001                                        __Hrparam 0000  
                                    vfprintf@ap 0058                                        __Lrparam 0000  
                                    vfprintf@fp 0054                         ??_OSCILLATOR_Initialize 0001  
                                    ?_vfpfcnvrt 0041                                 ___aodiv@divisor 0009  
                               ___aodiv@counter 0011                       ??_EUSART1_SetErrorHandler 0003  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 6C86  
                                      __ptext10 7070                                        __ptext11 6FDA  
                                      __ptext20 6DBE                                        __ptext12 6C58  
                                      __ptext21 6CCA                                        __ptext13 6C9A  
                                      __ptext22 6E4E                                        __ptext14 6C4E  
                                      __ptext23 6C44                                        __ptext15 6CE6  
                                      __ptext24 6C3A                                        __ptext16 6C86  
                                      __ptext25 6C30                                        __ptext17 6CB0  
                                      __ptext26 6D04                                        __ptext18 6C62  
                                      __ptext27 6C72                                        __ptext19 6D44  
                                      __ptext28 6D94                                        __ptext29 6DE8  
                       TMR0_WriteTimer@timerVal 0009                               ??_TMR0_WriteTimer 000B  
                              ??_TMR0_ReadTimer 0003  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                      isa$xinst 000000                                        _vfprintf 6F12  
                                     printf@fmt 005C                     _EUSART1_FramingErrorHandler 0068  
                              ___aomod@dividend 0001                        ?_TMR0_HasOverflowOccured 0001  
                                    _INTCONbits 000FF2                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 6C4E                  _EUSART1_SetOverrunErrorHandler 6C44  
                                    _RCSTA1bits 000FAB                                        printf@ap 008E  
EUSART1_SetFramingErrorHandler@interruptHandler 0001                                 ___aomod@divisor 0009  
                                   ??_vfpfcnvrt 0047                                 ___aomod@counter 0011  
                            _eusart1RxLastError 006D                                 _TMR0_Initialize 6D44  
                           _EPWM1_LoadDutyValue 6DE8                                    ___aodiv@sign 0012  
                __end_of_PIN_MANAGER_Initialize 6DE8                                    ___aomod@sign 0012  
                      __end_of_EPWM1_Initialize 6D24                            ?_EPWM1_LoadDutyValue 0001  
