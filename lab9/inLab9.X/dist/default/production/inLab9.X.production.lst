

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 21:30:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 09/02/2023 GMT
    67                           ; 
    68                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F25K22 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   102   000000                     
   103 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   104   000000                     
   105 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   106   000000                     
   107                           	psect	mediumconst
   108   007B8C                     __pmediumconst:
   109                           	callstack 0
   110   007B8C  00                 	db	0
   111   007B8D                     _spi2_configuration:
   112                           	callstack 0
   113   007B8D  01                 	db	1
   114   007B8E  40                 	db	64
   115   007B8F  01                 	db	1
   116   007B90  00                 	db	0
   117   007B91                     __end_of_spi2_configuration:
   118                           	callstack 0
   119   000000                     _ANSELA	set	3896
   120   000000                     _ANSELB	set	3897
   121   000000                     _ANSELC	set	3898
   122   000000                     _SSP2CON2	set	3947
   123   000000                     _SSP2CON1	set	3948
   124   000000                     _SSP2STAT	set	3949
   125   000000                     _TXREG1	set	4013
   126   000000                     _RCREG1	set	4014
   127   000000                     _SPBRG1	set	4015
   128   000000                     _TXSTA1	set	4012
   129   000000                     _LATAbits	set	3977
   130   000000                     _LATBbits	set	3978
   131   000000                     _TMR0L	set	4054
   132   000000                     _TMR0H	set	4055
   133   000000                     _T0CONbits	set	4053
   134   000000                     _TRISB	set	3987
   135   000000                     _LATC	set	3979
   136   000000                     _LATB	set	3978
   137   000000                     _LATA	set	3977
   138   000000                     _SSP2CON1bits	set	3948
   139   000000                     _RCSTA1bits	set	4011
   140   000000                     _TXSTA1bits	set	4012
   141   000000                     _T0CON	set	4053
   142   000000                     _PLLRDY	set	32407
   143   000000                     _INTCON2bits	set	4081
   144   000000                     _INTCONbits	set	4082
   145   000000                     _TRISA	set	3986
   146   000000                     _TRISBbits	set	3987
   147   000000                     _OSCTUNE	set	3995
   148   000000                     _OSCCON2	set	4050
   149   000000                     _OSCCON	set	4051
   150   000000                     _LATCbits	set	3979
   151   000000                     _PIR1bits	set	3998
   152   000000                     _RCSTA1	set	4011
   153   000000                     _BAUDCON1	set	4024
   154   000000                     _RCONbits	set	4048
   155   000000                     _SPBRGH1	set	4016
   156   000000                     _PIR3bits	set	4004
   157   000000                     _SSP2BUF	set	3951
   158   000000                     _SSP2ADD	set	3950
   159   000000                     _TRISC	set	3988
   160   000000                     _WPUB	set	3937
   161   007B91                     STR_28:
   162   007B91  20                 	db	32
   163   007B92  20                 	db	32
   164   007B93  20                 	db	32
   165   007B94  20                 	db	32
   166   007B95  43                 	db	67	;'C'
   167   007B96  6F                 	db	111	;'o'
   168   007B97  6E                 	db	110	;'n'
   169   007B98  6E                 	db	110	;'n'
   170   007B99  65                 	db	101	;'e'
   171   007B9A  63                 	db	99	;'c'
   172   007B9B  74                 	db	116	;'t'
   173   007B9C  20                 	db	32
   174   007B9D  6F                 	db	111	;'o'
   175   007B9E  73                 	db	115	;'s'
   176   007B9F  63                 	db	99	;'c'
   177   007BA0  69                 	db	105	;'i'
   178   007BA1  6C                 	db	108	;'l'
   179   007BA2  6C                 	db	108	;'l'
   180   007BA3  6F                 	db	111	;'o'
   181   007BA4  73                 	db	115	;'s'
   182   007BA5  63                 	db	99	;'c'
   183   007BA6  6F                 	db	111	;'o'
   184   007BA7  70                 	db	112	;'p'
   185   007BA8  65                 	db	101	;'e'
   186   007BA9  20                 	db	32
   187   007BAA  63                 	db	99	;'c'
   188   007BAB  68                 	db	104	;'h'
   189   007BAC  61                 	db	97	;'a'
   190   007BAD  6E                 	db	110	;'n'
   191   007BAE  6E                 	db	110	;'n'
   192   007BAF  65                 	db	101	;'e'
   193   007BB0  6C                 	db	108	;'l'
   194   007BB1  20                 	db	32
   195   007BB2  31                 	db	49	;'1'
   196   007BB3  20                 	db	32
   197   007BB4  74                 	db	116	;'t'
   198   007BB5  6F                 	db	111	;'o'
   199   007BB6  20                 	db	32
   200   007BB7  50                 	db	80	;'P'
   201   007BB8  49                 	db	73	;'I'
   202   007BB9  43                 	db	67	;'C'
   203   007BBA  20                 	db	32
   204   007BBB  68                 	db	104	;'h'
   205   007BBC  65                 	db	101	;'e'
   206   007BBD  61                 	db	97	;'a'
   207   007BBE  64                 	db	100	;'d'
   208   007BBF  65                 	db	101	;'e'
   209   007BC0  72                 	db	114	;'r'
   210   007BC1  20                 	db	32
   211   007BC2  70                 	db	112	;'p'
   212   007BC3  69                 	db	105	;'i'
   213   007BC4  6E                 	db	110	;'n'
   214   007BC5  20                 	db	32
   215   007BC6  52                 	db	82	;'R'
   216   007BC7  42                 	db	66	;'B'
   217   007BC8  31                 	db	49	;'1'
   218   007BC9  20                 	db	32
   219   007BCA  28                 	db	40
   220   007BCB  76                 	db	118	;'v'
   221   007BCC  65                 	db	101	;'e'
   222   007BCD  72                 	db	114	;'r'
   223   007BCE  74                 	db	116	;'t'
   224   007BCF  69                 	db	105	;'i'
   225   007BD0  63                 	db	99	;'c'
   226   007BD1  61                 	db	97	;'a'
   227   007BD2  6C                 	db	108	;'l'
   228   007BD3  20                 	db	32
   229   007BD4  73                 	db	115	;'s'
   230   007BD5  63                 	db	99	;'c'
   231   007BD6  61                 	db	97	;'a'
   232   007BD7  6C                 	db	108	;'l'
   233   007BD8  65                 	db	101	;'e'
   234   007BD9  20                 	db	32
   235   007BDA  32                 	db	50	;'2'
   236   007BDB  76                 	db	118	;'v'
   237   007BDC  2F                 	db	47
   238   007BDD  64                 	db	100	;'d'
   239   007BDE  69                 	db	105	;'i'
   240   007BDF  76                 	db	118	;'v'
   241   007BE0  29                 	db	41
   242   007BE1  0D                 	db	13
   243   007BE2  0A                 	db	10
   244   007BE3  00                 	db	0
   245   007BE4                     STR_29:
   246   007BE4  20                 	db	32
   247   007BE5  20                 	db	32
   248   007BE6  20                 	db	32
   249   007BE7  20                 	db	32
   250   007BE8  43                 	db	67	;'C'
   251   007BE9  6F                 	db	111	;'o'
   252   007BEA  6E                 	db	110	;'n'
   253   007BEB  6E                 	db	110	;'n'
   254   007BEC  65                 	db	101	;'e'
   255   007BED  63                 	db	99	;'c'
   256   007BEE  74                 	db	116	;'t'
   257   007BEF  20                 	db	32
   258   007BF0  6F                 	db	111	;'o'
   259   007BF1  73                 	db	115	;'s'
   260   007BF2  63                 	db	99	;'c'
   261   007BF3  69                 	db	105	;'i'
   262   007BF4  6C                 	db	108	;'l'
   263   007BF5  6C                 	db	108	;'l'
   264   007BF6  6F                 	db	111	;'o'
   265   007BF7  73                 	db	115	;'s'
   266   007BF8  63                 	db	99	;'c'
   267   007BF9  6F                 	db	111	;'o'
   268   007BFA  70                 	db	112	;'p'
   269   007BFB  65                 	db	101	;'e'
   270   007BFC  20                 	db	32
   271   007BFD  63                 	db	99	;'c'
   272   007BFE  68                 	db	104	;'h'
   273   007BFF  61                 	db	97	;'a'
   274   007C00  6E                 	db	110	;'n'
   275   007C01  6E                 	db	110	;'n'
   276   007C02  65                 	db	101	;'e'
   277   007C03  6C                 	db	108	;'l'
   278   007C04  20                 	db	32
   279   007C05  32                 	db	50	;'2'
   280   007C06  20                 	db	32
   281   007C07  74                 	db	116	;'t'
   282   007C08  6F                 	db	111	;'o'
   283   007C09  20                 	db	32
   284   007C0A  50                 	db	80	;'P'
   285   007C0B  49                 	db	73	;'I'
   286   007C0C  43                 	db	67	;'C'
   287   007C0D  20                 	db	32
   288   007C0E  68                 	db	104	;'h'
   289   007C0F  65                 	db	101	;'e'
   290   007C10  61                 	db	97	;'a'
   291   007C11  64                 	db	100	;'d'
   292   007C12  65                 	db	101	;'e'
   293   007C13  72                 	db	114	;'r'
   294   007C14  20                 	db	32
   295   007C15  70                 	db	112	;'p'
   296   007C16  69                 	db	105	;'i'
   297   007C17  6E                 	db	110	;'n'
   298   007C18  20                 	db	32
   299   007C19  52                 	db	82	;'R'
   300   007C1A  42                 	db	66	;'B'
   301   007C1B  33                 	db	51	;'3'
   302   007C1C  20                 	db	32
   303   007C1D  28                 	db	40
   304   007C1E  76                 	db	118	;'v'
   305   007C1F  65                 	db	101	;'e'
   306   007C20  72                 	db	114	;'r'
   307   007C21  74                 	db	116	;'t'
   308   007C22  69                 	db	105	;'i'
   309   007C23  63                 	db	99	;'c'
   310   007C24  61                 	db	97	;'a'
   311   007C25  6C                 	db	108	;'l'
   312   007C26  20                 	db	32
   313   007C27  73                 	db	115	;'s'
   314   007C28  63                 	db	99	;'c'
   315   007C29  61                 	db	97	;'a'
   316   007C2A  6C                 	db	108	;'l'
   317   007C2B  65                 	db	101	;'e'
   318   007C2C  20                 	db	32
   319   007C2D  32                 	db	50	;'2'
   320   007C2E  76                 	db	118	;'v'
   321   007C2F  2F                 	db	47
   322   007C30  64                 	db	100	;'d'
   323   007C31  69                 	db	105	;'i'
   324   007C32  76                 	db	118	;'v'
   325   007C33  29                 	db	41
   326   007C34  0D                 	db	13
   327   007C35  0A                 	db	10
   328   007C36  00                 	db	0
   329   007C37                     STR_6:
   330   007C37  0D                 	db	13
   331   007C38  0A                 	db	10
   332   007C39  2D                 	db	45
   333   007C3A  2D                 	db	45
   334   007C3B  2D                 	db	45
   335   007C3C  2D                 	db	45
   336   007C3D  2D                 	db	45
   337   007C3E  2D                 	db	45
   338   007C3F  2D                 	db	45
   339   007C40  2D                 	db	45
   340   007C41  2D                 	db	45
   341   007C42  2D                 	db	45
   342   007C43  2D                 	db	45
   343   007C44  2D                 	db	45
   344   007C45  2D                 	db	45
   345   007C46  2D                 	db	45
   346   007C47  2D                 	db	45
   347   007C48  2D                 	db	45
   348   007C49  2D                 	db	45
   349   007C4A  2D                 	db	45
   350   007C4B  2D                 	db	45
   351   007C4C  2D                 	db	45
   352   007C4D  2D                 	db	45
   353   007C4E  2D                 	db	45
   354   007C4F  2D                 	db	45
   355   007C50  2D                 	db	45
   356   007C51  2D                 	db	45
   357   007C52  2D                 	db	45
   358   007C53  2D                 	db	45
   359   007C54  2D                 	db	45
   360   007C55  2D                 	db	45
   361   007C56  2D                 	db	45
   362   007C57  2D                 	db	45
   363   007C58  2D                 	db	45
   364   007C59  2D                 	db	45
   365   007C5A  2D                 	db	45
   366   007C5B  2D                 	db	45
   367   007C5C  2D                 	db	45
   368   007C5D  2D                 	db	45
   369   007C5E  2D                 	db	45
   370   007C5F  2D                 	db	45
   371   007C60  2D                 	db	45
   372   007C61  2D                 	db	45
   373   007C62  2D                 	db	45
   374   007C63  2D                 	db	45
   375   007C64  2D                 	db	45
   376   007C65  2D                 	db	45
   377   007C66  2D                 	db	45
   378   007C67  2D                 	db	45
   379   007C68  2D                 	db	45
   380   007C69  2D                 	db	45
   381   007C6A  0D                 	db	13
   382   007C6B  0A                 	db	10
   383   007C6C  00                 	db	0
   384   007C6D                     STR_17:
   385   007C6D  2D                 	db	45
   386   007C6E  2D                 	db	45
   387   007C6F  2D                 	db	45
   388   007C70  2D                 	db	45
   389   007C71  2D                 	db	45
   390   007C72  2D                 	db	45
   391   007C73  2D                 	db	45
   392   007C74  2D                 	db	45
   393   007C75  2D                 	db	45
   394   007C76  2D                 	db	45
   395   007C77  2D                 	db	45
   396   007C78  2D                 	db	45
   397   007C79  2D                 	db	45
   398   007C7A  2D                 	db	45
   399   007C7B  2D                 	db	45
   400   007C7C  2D                 	db	45
   401   007C7D  53                 	db	83	;'S'
   402   007C7E  50                 	db	80	;'P'
   403   007C7F  49                 	db	73	;'I'
   404   007C80  20                 	db	32
   405   007C81  54                 	db	84	;'T'
   406   007C82  45                 	db	69	;'E'
   407   007C83  53                 	db	83	;'S'
   408   007C84  54                 	db	84	;'T'
   409   007C85  2D                 	db	45
   410   007C86  2D                 	db	45
   411   007C87  2D                 	db	45
   412   007C88  2D                 	db	45
   413   007C89  2D                 	db	45
   414   007C8A  2D                 	db	45
   415   007C8B  2D                 	db	45
   416   007C8C  2D                 	db	45
   417   007C8D  2D                 	db	45
   418   007C8E  2D                 	db	45
   419   007C8F  2D                 	db	45
   420   007C90  2D                 	db	45
   421   007C91  2D                 	db	45
   422   007C92  2D                 	db	45
   423   007C93  2D                 	db	45
   424   007C94  2D                 	db	45
   425   007C95  2D                 	db	45
   426   007C96  2D                 	db	45
   427   007C97  2D                 	db	45
   428   007C98  2D                 	db	45
   429   007C99  2D                 	db	45
   430   007C9A  2D                 	db	45
   431   007C9B  2D                 	db	45
   432   007C9C  2D                 	db	45
   433   007C9D  2D                 	db	45
   434   007C9E  0D                 	db	13
   435   007C9F  0A                 	db	10
   436   007CA0  00                 	db	0
   437   007CA1                     STR_19:
   438   007CA1  2D                 	db	45
   439   007CA2  2D                 	db	45
   440   007CA3  2D                 	db	45
   441   007CA4  2D                 	db	45
   442   007CA5  2D                 	db	45
   443   007CA6  2D                 	db	45
   444   007CA7  2D                 	db	45
   445   007CA8  2D                 	db	45
   446   007CA9  2D                 	db	45
   447   007CAA  2D                 	db	45
   448   007CAB  2D                 	db	45
   449   007CAC  2D                 	db	45
   450   007CAD  2D                 	db	45
   451   007CAE  2D                 	db	45
   452   007CAF  53                 	db	83	;'S'
   453   007CB0  44                 	db	68	;'D'
   454   007CB1  20                 	db	32
   455   007CB2  43                 	db	67	;'C'
   456   007CB3  41                 	db	65	;'A'
   457   007CB4  52                 	db	82	;'R'
   458   007CB5  44                 	db	68	;'D'
   459   007CB6  20                 	db	32
   460   007CB7  54                 	db	84	;'T'
   461   007CB8  45                 	db	69	;'E'
   462   007CB9  53                 	db	83	;'S'
   463   007CBA  54                 	db	84	;'T'
   464   007CBB  53                 	db	83	;'S'
   465   007CBC  2D                 	db	45
   466   007CBD  2D                 	db	45
   467   007CBE  2D                 	db	45
   468   007CBF  2D                 	db	45
   469   007CC0  2D                 	db	45
   470   007CC1  2D                 	db	45
   471   007CC2  2D                 	db	45
   472   007CC3  2D                 	db	45
   473   007CC4  2D                 	db	45
   474   007CC5  2D                 	db	45
   475   007CC6  2D                 	db	45
   476   007CC7  2D                 	db	45
   477   007CC8  2D                 	db	45
   478   007CC9  2D                 	db	45
   479   007CCA  2D                 	db	45
   480   007CCB  2D                 	db	45
   481   007CCC  2D                 	db	45
   482   007CCD  2D                 	db	45
   483   007CCE  2D                 	db	45
   484   007CCF  2D                 	db	45
   485   007CD0  2D                 	db	45
   486   007CD1  2D                 	db	45
   487   007CD2  0D                 	db	13
   488   007CD3  0A                 	db	10
   489   007CD4  00                 	db	0
   490   007CD5                     STR_31:
   491   007CD5  20                 	db	32
   492   007CD6  20                 	db	32
   493   007CD7  20                 	db	32
   494   007CD8  20                 	db	32
   495   007CD9  53                 	db	83	;'S'
   496   007CDA  65                 	db	101	;'e'
   497   007CDB  74                 	db	116	;'t'
   498   007CDC  20                 	db	32
   499   007CDD  74                 	db	116	;'t'
   500   007CDE  68                 	db	104	;'h'
   501   007CDF  65                 	db	101	;'e'
   502   007CE0  20                 	db	32
   503   007CE1  68                 	db	104	;'h'
   504   007CE2  6F                 	db	111	;'o'
   505   007CE3  72                 	db	114	;'r'
   506   007CE4  69                 	db	105	;'i'
   507   007CE5  7A                 	db	122	;'z'
   508   007CE6  6F                 	db	111	;'o'
   509   007CE7  6E                 	db	110	;'n'
   510   007CE8  74                 	db	116	;'t'
   511   007CE9  61                 	db	97	;'a'
   512   007CEA  6C                 	db	108	;'l'
   513   007CEB  20                 	db	32
   514   007CEC  73                 	db	115	;'s'
   515   007CED  63                 	db	99	;'c'
   516   007CEE  61                 	db	97	;'a'
   517   007CEF  6C                 	db	108	;'l'
   518   007CF0  65                 	db	101	;'e'
   519   007CF1  20                 	db	32
   520   007CF2  74                 	db	116	;'t'
   521   007CF3  6F                 	db	111	;'o'
   522   007CF4  20                 	db	32
   523   007CF5  35                 	db	53	;'5'
   524   007CF6  30                 	db	48	;'0'
   525   007CF7  30                 	db	48	;'0'
   526   007CF8  6E                 	db	110	;'n'
   527   007CF9  73                 	db	115	;'s'
   528   007CFA  2F                 	db	47
   529   007CFB  64                 	db	100	;'d'
   530   007CFC  69                 	db	105	;'i'
   531   007CFD  76                 	db	118	;'v'
   532   007CFE  0D                 	db	13
   533   007CFF  0A                 	db	10
   534   007D00  00                 	db	0
   535   007D01                     STR_43:
   536   007D01  57                 	db	87	;'W'
   537   007D02  72                 	db	114	;'r'
   538   007D03  69                 	db	105	;'i'
   539   007D04  74                 	db	116	;'t'
   540   007D05  65                 	db	101	;'e'
   541   007D06  20                 	db	32
   542   007D07  62                 	db	98	;'b'
   543   007D08  6C                 	db	108	;'l'
   544   007D09  6F                 	db	111	;'o'
   545   007D0A  63                 	db	99	;'c'
   546   007D0B  6B                 	db	107	;'k'
   547   007D0C  20                 	db	32
   548   007D0D  6F                 	db	111	;'o'
   549   007D0E  66                 	db	102	;'f'
   550   007D0F  20                 	db	32
   551   007D10  64                 	db	100	;'d'
   552   007D11  65                 	db	101	;'e'
   553   007D12  63                 	db	99	;'c'
   554   007D13  72                 	db	114	;'r'
   555   007D14  65                 	db	101	;'e'
   556   007D15  6D                 	db	109	;'m'
   557   007D16  65                 	db	101	;'e'
   558   007D17  6E                 	db	110	;'n'
   559   007D18  74                 	db	116	;'t'
   560   007D19  65                 	db	101	;'e'
   561   007D1A  64                 	db	100	;'d'
   562   007D1B  20                 	db	32
   563   007D1C  38                 	db	56	;'8'
   564   007D1D  2D                 	db	45
   565   007D1E  62                 	db	98	;'b'
   566   007D1F  69                 	db	105	;'i'
   567   007D20  74                 	db	116	;'t'
   568   007D21  20                 	db	32
   569   007D22  76                 	db	118	;'v'
   570   007D23  61                 	db	97	;'a'
   571   007D24  6C                 	db	108	;'l'
   572   007D25  75                 	db	117	;'u'
   573   007D26  65                 	db	101	;'e'
   574   007D27  73                 	db	115	;'s'
   575   007D28  3A                 	db	58	;':'
   576   007D29  0D                 	db	13
   577   007D2A  0A                 	db	10
   578   007D2B  00                 	db	0
   579   007D2C                     STR_22:
   580   007D2C  72                 	db	114	;'r'
   581   007D2D  3A                 	db	58	;':'
   582   007D2E  20                 	db	32
   583   007D2F  72                 	db	114	;'r'
   584   007D30  65                 	db	101	;'e'
   585   007D31  61                 	db	97	;'a'
   586   007D32  64                 	db	100	;'d'
   587   007D33  20                 	db	32
   588   007D34  61                 	db	97	;'a'
   589   007D35  20                 	db	32
   590   007D36  62                 	db	98	;'b'
   591   007D37  6C                 	db	108	;'l'
   592   007D38  6F                 	db	111	;'o'
   593   007D39  63                 	db	99	;'c'
   594   007D3A  6B                 	db	107	;'k'
   595   007D3B  20                 	db	32
   596   007D3C  6F                 	db	111	;'o'
   597   007D3D  66                 	db	102	;'f'
   598   007D3E  20                 	db	32
   599   007D3F  25                 	db	37
   600   007D40  64                 	db	100	;'d'
   601   007D41  20                 	db	32
   602   007D42  62                 	db	98	;'b'
   603   007D43  79                 	db	121	;'y'
   604   007D44  74                 	db	116	;'t'
   605   007D45  65                 	db	101	;'e'
   606   007D46  73                 	db	115	;'s'
   607   007D47  20                 	db	32
   608   007D48  66                 	db	102	;'f'
   609   007D49  72                 	db	114	;'r'
   610   007D4A  6F                 	db	111	;'o'
   611   007D4B  6D                 	db	109	;'m'
   612   007D4C  20                 	db	32
   613   007D4D  53                 	db	83	;'S'
   614   007D4E  44                 	db	68	;'D'
   615   007D4F  20                 	db	32
   616   007D50  63                 	db	99	;'c'
   617   007D51  61                 	db	97	;'a'
   618   007D52  72                 	db	114	;'r'
   619   007D53  64                 	db	100	;'d'
   620   007D54  0D                 	db	13
   621   007D55  0A                 	db	10
   622   007D56  00                 	db	0
   623   007D57                     STR_23:
   624   007D57  77                 	db	119	;'w'
   625   007D58  3A                 	db	58	;':'
   626   007D59  20                 	db	32
   627   007D5A  77                 	db	119	;'w'
   628   007D5B  72                 	db	114	;'r'
   629   007D5C  69                 	db	105	;'i'
   630   007D5D  74                 	db	116	;'t'
   631   007D5E  65                 	db	101	;'e'
   632   007D5F  20                 	db	32
   633   007D60  61                 	db	97	;'a'
   634   007D61  20                 	db	32
   635   007D62  62                 	db	98	;'b'
   636   007D63  6C                 	db	108	;'l'
   637   007D64  6F                 	db	111	;'o'
   638   007D65  63                 	db	99	;'c'
   639   007D66  6B                 	db	107	;'k'
   640   007D67  20                 	db	32
   641   007D68  6F                 	db	111	;'o'
   642   007D69  66                 	db	102	;'f'
   643   007D6A  20                 	db	32
   644   007D6B  25                 	db	37
   645   007D6C  64                 	db	100	;'d'
   646   007D6D  20                 	db	32
   647   007D6E  62                 	db	98	;'b'
   648   007D6F  79                 	db	121	;'y'
   649   007D70  74                 	db	116	;'t'
   650   007D71  65                 	db	101	;'e'
   651   007D72  73                 	db	115	;'s'
   652   007D73  20                 	db	32
   653   007D74  74                 	db	116	;'t'
   654   007D75  6F                 	db	111	;'o'
   655   007D76  20                 	db	32
   656   007D77  53                 	db	83	;'S'
   657   007D78  44                 	db	68	;'D'
   658   007D79  20                 	db	32
   659   007D7A  63                 	db	99	;'c'
   660   007D7B  61                 	db	97	;'a'
   661   007D7C  72                 	db	114	;'r'
   662   007D7D  64                 	db	100	;'d'
   663   007D7E  0D                 	db	13
   664   007D7F  0A                 	db	10
   665   007D80  00                 	db	0
   666   007D81                     STR_4:
   667   007D81  4E                 	db	78	;'N'
   668   007D82  6F                 	db	111	;'o'
   669   007D83  20                 	db	32
   670   007D84  63                 	db	99	;'c'
   671   007D85  6F                 	db	111	;'o'
   672   007D86  6E                 	db	110	;'n'
   673   007D87  66                 	db	102	;'f'
   674   007D88  69                 	db	105	;'i'
   675   007D89  67                 	db	103	;'g'
   676   007D8A  75                 	db	117	;'u'
   677   007D8B  72                 	db	114	;'r'
   678   007D8C  61                 	db	97	;'a'
   679   007D8D  74                 	db	116	;'t'
   680   007D8E  69                 	db	105	;'i'
   681   007D8F  6F                 	db	111	;'o'
   682   007D90  6E                 	db	110	;'n'
   683   007D91  20                 	db	32
   684   007D92  6F                 	db	111	;'o'
   685   007D93  66                 	db	102	;'f'
   686   007D94  20                 	db	32
   687   007D95  64                 	db	100	;'d'
   688   007D96  65                 	db	101	;'e'
   689   007D97  76                 	db	118	;'v'
   690   007D98  65                 	db	101	;'e'
   691   007D99  6C                 	db	108	;'l'
   692   007D9A  6F                 	db	111	;'o'
   693   007D9B  70                 	db	112	;'p'
   694   007D9C  6D                 	db	109	;'m'
   695   007D9D  65                 	db	101	;'e'
   696   007D9E  6E                 	db	110	;'n'
   697   007D9F  74                 	db	116	;'t'
   698   007DA0  20                 	db	32
   699   007DA1  62                 	db	98	;'b'
   700   007DA2  6F                 	db	111	;'o'
   701   007DA3  61                 	db	97	;'a'
   702   007DA4  72                 	db	114	;'r'
   703   007DA5  64                 	db	100	;'d'
   704   007DA6  0D                 	db	13
   705   007DA7  0A                 	db	10
   706   007DA8  3E                 	db	62	;'>'
   707   007DA9  20                 	db	32
   708   007DAA  00                 	db	0
   709   007DAB                     STR_21:
   710   007DAB  61                 	db	97	;'a'
   711   007DAC  2F                 	db	47
   712   007DAD  41                 	db	65	;'A'
   713   007DAE  20                 	db	32
   714   007DAF  64                 	db	100	;'d'
   715   007DB0  65                 	db	101	;'e'
   716   007DB1  63                 	db	99	;'c'
   717   007DB2  72                 	db	114	;'r'
   718   007DB3  65                 	db	101	;'e'
   719   007DB4  61                 	db	97	;'a'
   720   007DB5  73                 	db	115	;'s'
   721   007DB6  65                 	db	101	;'e'
   722   007DB7  2F                 	db	47
   723   007DB8  69                 	db	105	;'i'
   724   007DB9  6E                 	db	110	;'n'
   725   007DBA  63                 	db	99	;'c'
   726   007DBB  72                 	db	114	;'r'
   727   007DBC  65                 	db	101	;'e'
   728   007DBD  61                 	db	97	;'a'
   729   007DBE  73                 	db	115	;'s'
   730   007DBF  65                 	db	101	;'e'
   731   007DC0  20                 	db	32
   732   007DC1  72                 	db	114	;'r'
   733   007DC2  65                 	db	101	;'e'
   734   007DC3  61                 	db	97	;'a'
   735   007DC4  64                 	db	100	;'d'
   736   007DC5  20                 	db	32
   737   007DC6  61                 	db	97	;'a'
   738   007DC7  64                 	db	100	;'d'
   739   007DC8  64                 	db	100	;'d'
   740   007DC9  72                 	db	114	;'r'
   741   007DCA  65                 	db	101	;'e'
   742   007DCB  73                 	db	115	;'s'
   743   007DCC  73                 	db	115	;'s'
   744   007DCD  0D                 	db	13
   745   007DCE  0A                 	db	10
   746   007DCF  00                 	db	0
   747   007DD0                     STR_18:
   748   007DD0  74                 	db	116	;'t'
   749   007DD1  3A                 	db	58	;':'
   750   007DD2  20                 	db	32
   751   007DD3  73                 	db	115	;'s'
   752   007DD4  65                 	db	101	;'e'
   753   007DD5  6E                 	db	110	;'n'
   754   007DD6  64                 	db	100	;'d'
   755   007DD7  20                 	db	32
   756   007DD8  61                 	db	97	;'a'
   757   007DD9  20                 	db	32
   758   007DDA  54                 	db	84	;'T'
   759   007DDB  65                 	db	101	;'e'
   760   007DDC  73                 	db	115	;'s'
   761   007DDD  74                 	db	116	;'t'
   762   007DDE  20                 	db	32
   763   007DDF  63                 	db	99	;'c'
   764   007DE0  68                 	db	104	;'h'
   765   007DE1  61                 	db	97	;'a'
   766   007DE2  72                 	db	114	;'r'
   767   007DE3  61                 	db	97	;'a'
   768   007DE4  63                 	db	99	;'c'
   769   007DE5  74                 	db	116	;'t'
   770   007DE6  65                 	db	101	;'e'
   771   007DE7  72                 	db	114	;'r'
   772   007DE8  20                 	db	32
   773   007DE9  6F                 	db	111	;'o'
   774   007DEA  76                 	db	118	;'v'
   775   007DEB  65                 	db	101	;'e'
   776   007DEC  72                 	db	114	;'r'
   777   007DED  20                 	db	32
   778   007DEE  53                 	db	83	;'S'
   779   007DEF  50                 	db	80	;'P'
   780   007DF0  49                 	db	73	;'I'
   781   007DF1  0D                 	db	13
   782   007DF2  0A                 	db	10
   783   007DF3  00                 	db	0
   784   007DF4                     STR_34:
   785   007DF4  55                 	db	85	;'U'
   786   007DF5  6E                 	db	110	;'n'
   787   007DF6  64                 	db	100	;'d'
   788   007DF7  65                 	db	101	;'e'
   789   007DF8  72                 	db	114	;'r'
   790   007DF9  66                 	db	102	;'f'
   791   007DFA  6C                 	db	108	;'l'
   792   007DFB  6F                 	db	111	;'o'
   793   007DFC  77                 	db	119	;'w'
   794   007DFD  65                 	db	101	;'e'
   795   007DFE  64                 	db	100	;'d'
   796   007DFF  20                 	db	32
   797   007E00  74                 	db	116	;'t'
   798   007E01  6F                 	db	111	;'o'
   799   007E02  20                 	db	32
   800   007E03  68                 	db	104	;'h'
   801   007E04  69                 	db	105	;'i'
   802   007E05  67                 	db	103	;'g'
   803   007E06  68                 	db	104	;'h'
   804   007E07  20                 	db	32
   805   007E08  61                 	db	97	;'a'
   806   007E09  64                 	db	100	;'d'
   807   007E0A  64                 	db	100	;'d'
   808   007E0B  72                 	db	114	;'r'
   809   007E0C  65                 	db	101	;'e'
   810   007E0D  73                 	db	115	;'s'
   811   007E0E  73                 	db	115	;'s'
   812   007E0F  0D                 	db	13
   813   007E10  0A                 	db	10
   814   007E11  00                 	db	0
   815   007E12                     STR_33:
   816   007E12  73                 	db	115	;'s'
   817   007E13  65                 	db	101	;'e'
   818   007E14  6E                 	db	110	;'n'
   819   007E15  74                 	db	116	;'t'
   820   007E16  3A                 	db	58	;':'
   821   007E17  20                 	db	32
   822   007E18  25                 	db	37
   823   007E19  30                 	db	48	;'0'
   824   007E1A  32                 	db	50	;'2'
   825   007E1B  78                 	db	120	;'x'
   826   007E1C  20                 	db	32
   827   007E1D  20                 	db	32
   828   007E1E  72                 	db	114	;'r'
   829   007E1F  65                 	db	101	;'e'
   830   007E20  63                 	db	99	;'c'
   831   007E21  65                 	db	101	;'e'
   832   007E22  69                 	db	105	;'i'
   833   007E23  76                 	db	118	;'v'
   834   007E24  65                 	db	101	;'e'
   835   007E25  64                 	db	100	;'d'
   836   007E26  3A                 	db	58	;':'
   837   007E27  20                 	db	32
   838   007E28  25                 	db	37
   839   007E29  30                 	db	48	;'0'
   840   007E2A  32                 	db	50	;'2'
   841   007E2B  78                 	db	120	;'x'
   842   007E2C  0D                 	db	13
   843   007E2D  0A                 	db	10
   844   007E2E  00                 	db	0
   845   007E2F                     STR_32:
   846   007E2F  20                 	db	32
   847   007E30  20                 	db	32
   848   007E31  20                 	db	32
   849   007E32  20                 	db	32
   850   007E33  48                 	db	72	;'H'
   851   007E34  69                 	db	105	;'i'
   852   007E35  74                 	db	116	;'t'
   853   007E36  20                 	db	32
   854   007E37  61                 	db	97	;'a'
   855   007E38  6E                 	db	110	;'n'
   856   007E39  79                 	db	121	;'y'
   857   007E3A  20                 	db	32
   858   007E3B  6B                 	db	107	;'k'
   859   007E3C  65                 	db	101	;'e'
   860   007E3D  79                 	db	121	;'y'
   861   007E3E  20                 	db	32
   862   007E3F  77                 	db	119	;'w'
   863   007E40  68                 	db	104	;'h'
   864   007E41  65                 	db	101	;'e'
   865   007E42  6E                 	db	110	;'n'
   866   007E43  20                 	db	32
   867   007E44  72                 	db	114	;'r'
   868   007E45  65                 	db	101	;'e'
   869   007E46  61                 	db	97	;'a'
   870   007E47  64                 	db	100	;'d'
   871   007E48  79                 	db	121	;'y'
   872   007E49  0D                 	db	13
   873   007E4A  0A                 	db	10
   874   007E4B  00                 	db	0
   875   007E4C                     STR_60:
   876   007E4C  42                 	db	66	;'B'
   877   007E4D  6C                 	db	108	;'l'
   878   007E4E  6F                 	db	111	;'o'
   879   007E4F  63                 	db	99	;'c'
   880   007E50  6B                 	db	107	;'k'
   881   007E51  20                 	db	32
   882   007E52  4C                 	db	76	;'L'
   883   007E53  65                 	db	101	;'e'
   884   007E54  6E                 	db	110	;'n'
   885   007E55  67                 	db	103	;'g'
   886   007E56  74                 	db	116	;'t'
   887   007E57  68                 	db	104	;'h'
   888   007E58  20                 	db	32
   889   007E59  52                 	db	82	;'R'
   890   007E5A  65                 	db	101	;'e'
   891   007E5B  73                 	db	115	;'s'
   892   007E5C  70                 	db	112	;'p'
   893   007E5D  6F                 	db	111	;'o'
   894   007E5E  6E                 	db	110	;'n'
   895   007E5F  73                 	db	115	;'s'
   896   007E60  65                 	db	101	;'e'
   897   007E61  3A                 	db	58	;':'
   898   007E62  20                 	db	32
   899   007E63  25                 	db	37
   900   007E64  78                 	db	120	;'x'
   901   007E65  0D                 	db	13
   902   007E66  0A                 	db	10
   903   007E67  00                 	db	0
   904   007E68                     STR_36:
   905   007E68  4F                 	db	79	;'O'
   906   007E69  76                 	db	118	;'v'
   907   007E6A  65                 	db	101	;'e'
   908   007E6B  72                 	db	114	;'r'
   909   007E6C  66                 	db	102	;'f'
   910   007E6D  6C                 	db	108	;'l'
   911   007E6E  6F                 	db	111	;'o'
   912   007E6F  77                 	db	119	;'w'
   913   007E70  65                 	db	101	;'e'
   914   007E71  64                 	db	100	;'d'
   915   007E72  20                 	db	32
   916   007E73  74                 	db	116	;'t'
   917   007E74  6F                 	db	111	;'o'
   918   007E75  20                 	db	32
   919   007E76  6C                 	db	108	;'l'
   920   007E77  6F                 	db	111	;'o'
   921   007E78  77                 	db	119	;'w'
   922   007E79  20                 	db	32
   923   007E7A  61                 	db	97	;'a'
   924   007E7B  64                 	db	100	;'d'
   925   007E7C  64                 	db	100	;'d'
   926   007E7D  72                 	db	114	;'r'
   927   007E7E  65                 	db	101	;'e'
   928   007E7F  73                 	db	115	;'s'
   929   007E80  73                 	db	115	;'s'
   930   007E81  0D                 	db	13
   931   007E82  0A                 	db	10
   932   007E83  00                 	db	0
   933   007E84                     STR_58:
   934   007E84  43                 	db	67	;'C'
   935   007E85  4D                 	db	77	;'M'
   936   007E86  44                 	db	68	;'D'
   937   007E87  30                 	db	48	;'0'
   938   007E88  2C                 	db	44
   939   007E89  20                 	db	32
   940   007E8A  52                 	db	82	;'R'
   941   007E8B  65                 	db	101	;'e'
   942   007E8C  73                 	db	115	;'s'
   943   007E8D  65                 	db	101	;'e'
   944   007E8E  74                 	db	116	;'t'
   945   007E8F  20                 	db	32
   946   007E90  52                 	db	82	;'R'
   947   007E91  65                 	db	101	;'e'
   948   007E92  73                 	db	115	;'s'
   949   007E93  70                 	db	112	;'p'
   950   007E94  6F                 	db	111	;'o'
   951   007E95  6E                 	db	110	;'n'
   952   007E96  73                 	db	115	;'s'
   953   007E97  65                 	db	101	;'e'
   954   007E98  3A                 	db	58	;':'
   955   007E99  20                 	db	32
   956   007E9A  25                 	db	37
   957   007E9B  78                 	db	120	;'x'
   958   007E9C  0D                 	db	13
   959   007E9D  0A                 	db	10
   960   007E9E  00                 	db	0
   961   007E9F                     STR_30:
   962   007E9F  20                 	db	32
   963   007EA0  20                 	db	32
   964   007EA1  20                 	db	32
   965   007EA2  20                 	db	32
   966   007EA3  54                 	db	84	;'T'
   967   007EA4  72                 	db	114	;'r'
   968   007EA5  69                 	db	105	;'i'
   969   007EA6  67                 	db	103	;'g'
   970   007EA7  67                 	db	103	;'g'
   971   007EA8  65                 	db	101	;'e'
   972   007EA9  72                 	db	114	;'r'
   973   007EAA  20                 	db	32
   974   007EAB  6F                 	db	111	;'o'
   975   007EAC  6E                 	db	110	;'n'
   976   007EAD  20                 	db	32
   977   007EAE  63                 	db	99	;'c'
   978   007EAF  68                 	db	104	;'h'
   979   007EB0  61                 	db	97	;'a'
   980   007EB1  6E                 	db	110	;'n'
   981   007EB2  6E                 	db	110	;'n'
   982   007EB3  65                 	db	101	;'e'
   983   007EB4  6C                 	db	108	;'l'
   984   007EB5  20                 	db	32
   985   007EB6  31                 	db	49	;'1'
   986   007EB7  0D                 	db	13
   987   007EB8  0A                 	db	10
   988   007EB9  00                 	db	0
   989   007EBA                     STR_59:
   990   007EBA  43                 	db	67	;'C'
   991   007EBB  4D                 	db	77	;'M'
   992   007EBC  44                 	db	68	;'D'
   993   007EBD  31                 	db	49	;'1'
   994   007EBE  2C                 	db	44
   995   007EBF  20                 	db	32
   996   007EC0  49                 	db	73	;'I'
   997   007EC1  6E                 	db	110	;'n'
   998   007EC2  69                 	db	105	;'i'
   999   007EC3  74                 	db	116	;'t'
  1000   007EC4  20                 	db	32
  1001   007EC5  52                 	db	82	;'R'
  1002   007EC6  65                 	db	101	;'e'
  1003   007EC7  73                 	db	115	;'s'
  1004   007EC8  70                 	db	112	;'p'
  1005   007EC9  6F                 	db	111	;'o'
  1006   007ECA  6E                 	db	110	;'n'
  1007   007ECB  73                 	db	115	;'s'
  1008   007ECC  65                 	db	101	;'e'
  1009   007ECD  3A                 	db	58	;':'
  1010   007ECE  20                 	db	32
  1011   007ECF  25                 	db	37
  1012   007ED0  78                 	db	120	;'x'
  1013   007ED1  0D                 	db	13
  1014   007ED2  0A                 	db	10
  1015   007ED3  00                 	db	0
  1016   007ED4                     STR_20:
  1017   007ED4  69                 	db	105	;'i'
  1018   007ED5  3A                 	db	58	;':'
  1019   007ED6  20                 	db	32
  1020   007ED7  49                 	db	73	;'I'
  1021   007ED8  6E                 	db	110	;'n'
  1022   007ED9  69                 	db	105	;'i'
  1023   007EDA  74                 	db	116	;'t'
  1024   007EDB  69                 	db	105	;'i'
  1025   007EDC  61                 	db	97	;'a'
  1026   007EDD  6C                 	db	108	;'l'
  1027   007EDE  69                 	db	105	;'i'
  1028   007EDF  7A                 	db	122	;'z'
  1029   007EE0  65                 	db	101	;'e'
  1030   007EE1  20                 	db	32
  1031   007EE2  53                 	db	83	;'S'
  1032   007EE3  44                 	db	68	;'D'
  1033   007EE4  20                 	db	32
  1034   007EE5  63                 	db	99	;'c'
  1035   007EE6  61                 	db	97	;'a'
  1036   007EE7  72                 	db	114	;'r'
  1037   007EE8  64                 	db	100	;'d'
  1038   007EE9  0D                 	db	13
  1039   007EEA  0A                 	db	10
  1040   007EEB  00                 	db	0
  1041   007EEC                     STR_16:
  1042   007EEC  7A                 	db	122	;'z'
  1043   007EED  3A                 	db	58	;':'
  1044   007EEE  20                 	db	32
  1045   007EEF  43                 	db	67	;'C'
  1046   007EF0  6C                 	db	108	;'l'
  1047   007EF1  65                 	db	101	;'e'
  1048   007EF2  61                 	db	97	;'a'
  1049   007EF3  72                 	db	114	;'r'
  1050   007EF4  20                 	db	32
  1051   007EF5  74                 	db	116	;'t'
  1052   007EF6  68                 	db	104	;'h'
  1053   007EF7  65                 	db	101	;'e'
  1054   007EF8  20                 	db	32
  1055   007EF9  74                 	db	116	;'t'
  1056   007EFA  65                 	db	101	;'e'
  1057   007EFB  72                 	db	114	;'r'
  1058   007EFC  6D                 	db	109	;'m'
  1059   007EFD  69                 	db	105	;'i'
  1060   007EFE  6E                 	db	110	;'n'
  1061   007EFF  61                 	db	97	;'a'
  1062   007F00  6C                 	db	108	;'l'
  1063   007F01  0D                 	db	13
  1064   007F02  0A                 	db	10
  1065   007F03  00                 	db	0
  1066   007F04                     STR_49:
  1067   007F04  20                 	db	32
  1068   007F05  20                 	db	32
  1069   007F06  20                 	db	32
  1070   007F07  20                 	db	32
  1071   007F08  53                 	db	83	;'S'
  1072   007F09  74                 	db	116	;'t'
  1073   007F0A  61                 	db	97	;'a'
  1074   007F0B  74                 	db	116	;'t'
  1075   007F0C  75                 	db	117	;'u'
  1076   007F0D  73                 	db	115	;'s'
  1077   007F0E  3A                 	db	58	;':'
  1078   007F0F  20                 	db	32
  1079   007F10  20                 	db	32
  1080   007F11  20                 	db	32
  1081   007F12  20                 	db	32
  1082   007F13  20                 	db	32
  1083   007F14  25                 	db	37
  1084   007F15  30                 	db	48	;'0'
  1085   007F16  32                 	db	50	;'2'
  1086   007F17  78                 	db	120	;'x'
  1087   007F18  0D                 	db	13
  1088   007F19  0A                 	db	10
  1089   007F1A  00                 	db	0
  1090   007F1B                     STR_15:
  1091   007F1B  5A                 	db	90	;'Z'
  1092   007F1C  3A                 	db	58	;':'
  1093   007F1D  20                 	db	32
  1094   007F1E  52                 	db	82	;'R'
  1095   007F1F  65                 	db	101	;'e'
  1096   007F20  73                 	db	115	;'s'
  1097   007F21  65                 	db	101	;'e'
  1098   007F22  74                 	db	116	;'t'
  1099   007F23  20                 	db	32
  1100   007F24  70                 	db	112	;'p'
  1101   007F25  72                 	db	114	;'r'
  1102   007F26  6F                 	db	111	;'o'
  1103   007F27  63                 	db	99	;'c'
  1104   007F28  65                 	db	101	;'e'
  1105   007F29  73                 	db	115	;'s'
  1106   007F2A  73                 	db	115	;'s'
  1107   007F2B  6F                 	db	111	;'o'
  1108   007F2C  72                 	db	114	;'r'
  1109   007F2D  0D                 	db	13
  1110   007F2E  0A                 	db	10
  1111   007F2F  00                 	db	0
  1112   007F30                     STR_35:
  1113   007F30  44                 	db	68	;'D'
  1114   007F31  65                 	db	101	;'e'
  1115   007F32  63                 	db	99	;'c'
  1116   007F33  72                 	db	114	;'r'
  1117   007F34  65                 	db	101	;'e'
  1118   007F35  61                 	db	97	;'a'
  1119   007F36  73                 	db	115	;'s'
  1120   007F37  65                 	db	101	;'e'
  1121   007F38  64                 	db	100	;'d'
  1122   007F39  20                 	db	32
  1123   007F3A  61                 	db	97	;'a'
  1124   007F3B  64                 	db	100	;'d'
  1125   007F3C  64                 	db	100	;'d'
  1126   007F3D  72                 	db	114	;'r'
  1127   007F3E  65                 	db	101	;'e'
  1128   007F3F  73                 	db	115	;'s'
  1129   007F40  73                 	db	115	;'s'
  1130   007F41  0D                 	db	13
  1131   007F42  0A                 	db	10
  1132   007F43  00                 	db	0
  1133   007F44                     STR_37:
  1134   007F44  49                 	db	73	;'I'
  1135   007F45  6E                 	db	110	;'n'
  1136   007F46  63                 	db	99	;'c'
  1137   007F47  72                 	db	114	;'r'
  1138   007F48  65                 	db	101	;'e'
  1139   007F49  61                 	db	97	;'a'
  1140   007F4A  73                 	db	115	;'s'
  1141   007F4B  65                 	db	101	;'e'
  1142   007F4C  64                 	db	100	;'d'
  1143   007F4D  20                 	db	32
  1144   007F4E  61                 	db	97	;'a'
  1145   007F4F  64                 	db	100	;'d'
  1146   007F50  64                 	db	100	;'d'
  1147   007F51  72                 	db	114	;'r'
  1148   007F52  65                 	db	101	;'e'
  1149   007F53  73                 	db	115	;'s'
  1150   007F54  73                 	db	115	;'s'
  1151   007F55  0D                 	db	13
  1152   007F56  0A                 	db	10
  1153   007F57  00                 	db	0
  1154   007F58                     STR_7:
  1155   007F58  53                 	db	83	;'S'
  1156   007F59  44                 	db	68	;'D'
  1157   007F5A  20                 	db	32
  1158   007F5B  63                 	db	99	;'c'
  1159   007F5C  61                 	db	97	;'a'
  1160   007F5D  72                 	db	114	;'r'
  1161   007F5E  64                 	db	100	;'d'
  1162   007F5F  20                 	db	32
  1163   007F60  61                 	db	97	;'a'
  1164   007F61  64                 	db	100	;'d'
  1165   007F62  64                 	db	100	;'d'
  1166   007F63  72                 	db	114	;'r'
  1167   007F64  65                 	db	101	;'e'
  1168   007F65  73                 	db	115	;'s'
  1169   007F66  73                 	db	115	;'s'
  1170   007F67  3A                 	db	58	;':'
  1171   007F68  20                 	db	32
  1172   007F69  20                 	db	32
  1173   007F6A  00                 	db	0
  1174   007F6B                     STR_2:
  1175   007F6B  53                 	db	83	;'S'
  1176   007F6C  44                 	db	68	;'D'
  1177   007F6D  20                 	db	32
  1178   007F6E  63                 	db	99	;'c'
  1179   007F6F  61                 	db	97	;'a'
  1180   007F70  72                 	db	114	;'r'
  1181   007F71  64                 	db	100	;'d'
  1182   007F72  20                 	db	32
  1183   007F73  74                 	db	116	;'t'
  1184   007F74  65                 	db	101	;'e'
  1185   007F75  73                 	db	115	;'s'
  1186   007F76  74                 	db	116	;'t'
  1187   007F77  69                 	db	105	;'i'
  1188   007F78  6E                 	db	110	;'n'
  1189   007F79  67                 	db	103	;'g'
  1190   007F7A  0D                 	db	13
  1191   007F7B  0A                 	db	10
  1192   007F7C  00                 	db	0
  1193   007F7D                     STR_56:
  1194   007F7D  55                 	db	85	;'U'
  1195   007F7E  6E                 	db	110	;'n'
  1196   007F7F  6B                 	db	107	;'k'
  1197   007F80  6E                 	db	110	;'n'
  1198   007F81  6F                 	db	111	;'o'
  1199   007F82  77                 	db	119	;'w'
  1200   007F83  6E                 	db	110	;'n'
  1201   007F84  20                 	db	32
  1202   007F85  6B                 	db	107	;'k'
  1203   007F86  65                 	db	101	;'e'
  1204   007F87  79                 	db	121	;'y'
  1205   007F88  20                 	db	32
  1206   007F89  25                 	db	37
  1207   007F8A  63                 	db	99	;'c'
  1208   007F8B  0D                 	db	13
  1209   007F8C  0A                 	db	10
  1210   007F8D  00                 	db	0
  1211   007F8E                     STR_44:
  1212   007F8E  20                 	db	32
  1213   007F8F  20                 	db	32
  1214   007F90  20                 	db	32
  1215   007F91  20                 	db	32
  1216   007F92  41                 	db	65	;'A'
  1217   007F93  64                 	db	100	;'d'
  1218   007F94  64                 	db	100	;'d'
  1219   007F95  72                 	db	114	;'r'
  1220   007F96  65                 	db	101	;'e'
  1221   007F97  73                 	db	115	;'s'
  1222   007F98  73                 	db	115	;'s'
  1223   007F99  3A                 	db	58	;':'
  1224   007F9A  20                 	db	32
  1225   007F9B  20                 	db	32
  1226   007F9C  20                 	db	32
  1227   007F9D  20                 	db	32
  1228   007F9E  00                 	db	0
  1229   007F9F                     STR_50:
  1230   007F9F  52                 	db	82	;'R'
  1231   007FA0  65                 	db	101	;'e'
  1232   007FA1  61                 	db	97	;'a'
  1233   007FA2  64                 	db	100	;'d'
  1234   007FA3  20                 	db	32
  1235   007FA4  62                 	db	98	;'b'
  1236   007FA5  6C                 	db	108	;'l'
  1237   007FA6  6F                 	db	111	;'o'
  1238   007FA7  63                 	db	99	;'c'
  1239   007FA8  6B                 	db	107	;'k'
  1240   007FA9  3A                 	db	58	;':'
  1241   007FAA  20                 	db	32
  1242   007FAB  0D                 	db	13
  1243   007FAC  0A                 	db	10
  1244   007FAD  00                 	db	0
  1245   007FAE                     STR_13:
  1246   007FAE  3F                 	db	63	;'?'
  1247   007FAF  3A                 	db	58	;':'
  1248   007FB0  20                 	db	32
  1249   007FB1  68                 	db	104	;'h'
  1250   007FB2  65                 	db	101	;'e'
  1251   007FB3  6C                 	db	108	;'l'
  1252   007FB4  70                 	db	112	;'p'
  1253   007FB5  20                 	db	32
  1254   007FB6  6D                 	db	109	;'m'
  1255   007FB7  65                 	db	101	;'e'
  1256   007FB8  6E                 	db	110	;'n'
  1257   007FB9  75                 	db	117	;'u'
  1258   007FBA  0D                 	db	13
  1259   007FBB  0A                 	db	10
  1260   007FBC  00                 	db	0
  1261   007FBD                     STR_1:
  1262   007FBD  0A                 	db	10
  1263   007FBE  0D                 	db	13
  1264   007FBF  69                 	db	105	;'i'
  1265   007FC0  6E                 	db	110	;'n'
  1266   007FC1  4C                 	db	76	;'L'
  1267   007FC2  61                 	db	97	;'a'
  1268   007FC3  62                 	db	98	;'b'
  1269   007FC4  20                 	db	32
  1270   007FC5  30                 	db	48	;'0'
  1271   007FC6  39                 	db	57	;'9'
  1272   007FC7  0D                 	db	13
  1273   007FC8  0A                 	db	10
  1274   007FC9  00                 	db	0
  1275   007FCA                     STR_3:
  1276   007FCA  44                 	db	68	;'D'
  1277   007FCB  65                 	db	101	;'e'
  1278   007FCC  76                 	db	118	;'v'
  1279   007FCD  27                 	db	39
  1280   007FCE  32                 	db	50	;'2'
  1281   007FCF  31                 	db	49	;'1'
  1282   007FD0  0D                 	db	13
  1283   007FD1  0A                 	db	10
  1284   007FD2  00                 	db	0
  1285   007FD3                     STR_25:
  1286   007FD3  6F                 	db	111	;'o'
  1287   007FD4  3A                 	db	58	;':'
  1288   007FD5  20                 	db	32
  1289   007FD6  20                 	db	32
  1290   007FD7  6F                 	db	111	;'o'
  1291   007FD8  6B                 	db	107	;'k'
  1292   007FD9  0D                 	db	13
  1293   007FDA  0A                 	db	10
  1294   007FDB  00                 	db	0
  1295   007FDC                     STR_14:
  1296   007FDC  6F                 	db	111	;'o'
  1297   007FDD  3A                 	db	58	;':'
  1298   007FDE  20                 	db	32
  1299   007FDF  6B                 	db	107	;'k'
  1300   007FE0  0D                 	db	13
  1301   007FE1  0A                 	db	10
  1302   007FE2  00                 	db	0
  1303   007FE3                     STR_67:
  1304   007FE3  25                 	db	37
  1305   007FE4  30                 	db	48	;'0'
  1306   007FE5  32                 	db	50	;'2'
  1307   007FE6  78                 	db	120	;'x'
  1308   007FE7  20                 	db	32
  1309   007FE8  00                 	db	0
  1310   007FE9                     STR_5:
  1311   007FE9  25                 	db	37
  1312   007FEA  63                 	db	99	;'c'
  1313   007FEB  0A                 	db	10
  1314   007FEC  0D                 	db	13
  1315   007FED  00                 	db	0
  1316   007FEE                     STR_8:
  1317   007FEE  25                 	db	37
  1318   007FEF  30                 	db	48	;'0'
  1319   007FF0  34                 	db	52	;'4'
  1320   007FF1  78                 	db	120	;'x'
  1321   007FF2  00                 	db	0
  1322   007FF3                     STR_61:
  1323   007FF3  0D                 	db	13
  1324   007FF4  0A                 	db	10
  1325   007FF5  0A                 	db	10
  1326   007FF6  00                 	db	0
  1327   007FF7                     STR_65:
  1328   007FF7  25                 	db	37
  1329   007FF8  63                 	db	99	;'c'
  1330   007FF9  00                 	db	0
  1331   007FFA                     STR_64:
  1332   007FFA  2E                 	db	46
  1333   007FFB  00                 	db	0
  1334   007FFC                     STR_9:
  1335   007FFC  3A                 	db	58	;':'
  1336   007FFD  00                 	db	0
  1337   007FFE  00                 	db	0	; dummy byte at the end
  1338   000000                     
  1339                           ; #config settings
  1340                           
  1341                           	psect	cinit
  1342   001C0C                     __pcinit:
  1343                           	callstack 0
  1344   001C0C                     start_initialization:
  1345                           	callstack 0
  1346   001C0C                     __initialization:
  1347                           	callstack 0
  1348                           
  1349                           ; Clear objects allocated to BIGRAM (512 bytes)
  1350   001C0C  EE00  F0CB         	lfsr	0,__pbssBIGRAM
  1351   001C10  EE12 F000          	lfsr	1,512
  1352   001C14                     clear_0:
  1353   001C14  6AEE               	clrf	postinc0,c
  1354   001C16  50E5               	movf	postdec1,w,c
  1355   001C18  50E1               	movf	fsr1l,w,c
  1356   001C1A  E1FC               	bnz	clear_0
  1357   001C1C  50E2               	movf	fsr1h,w,c
  1358   001C1E  E1FA               	bnz	clear_0
  1359                           
  1360                           ; Clear objects allocated to BANK0 (34 bytes)
  1361   001C20  EE00  F0A9         	lfsr	0,__pbssBANK0
  1362   001C24  0E22               	movlw	34
  1363   001C26                     clear_1:
  1364   001C26  6AEE               	clrf	postinc0,c
  1365   001C28  06E8               	decf	wreg,f,c
  1366   001C2A  E1FD               	bnz	clear_1
  1367                           
  1368                           ; Clear objects allocated to COMRAM (14 bytes)
  1369   001C2C  EE00  F042         	lfsr	0,__pbssCOMRAM
  1370   001C30  0E0E               	movlw	14
  1371   001C32                     clear_2:
  1372   001C32  6AEE               	clrf	postinc0,c
  1373   001C34  06E8               	decf	wreg,f,c
  1374   001C36  E1FD               	bnz	clear_2
  1375   001C38                     end_of_initialization:
  1376                           	callstack 0
  1377   001C38                     __end_of__initialization:
  1378                           	callstack 0
  1379   001C38  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1380   001C3A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1381   001C3C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1382   001C3E  6EF8               	movwf	tblptru,c
  1383   001C40  0100               	movlb	0
  1384   001C42  EF21  F000         	goto	_main	;jump to C main() function
  1385                           
  1386                           	psect	bssCOMRAM
  1387   000042                     __pbssCOMRAM:
  1388                           	callstack 0
  1389   000042                     _width:
  1390                           	callstack 0
  1391   000042                     	ds	2
  1392   000044                     _prec:
  1393                           	callstack 0
  1394   000044                     	ds	2
  1395   000046                     _EUSART1_OverrunErrorHandler:
  1396                           	callstack 0
  1397   000046                     	ds	2
  1398   000048                     _EUSART1_FramingErrorHandler:
  1399                           	callstack 0
  1400   000048                     	ds	2
  1401   00004A                     _timer0ReloadVal:
  1402                           	callstack 0
  1403   00004A                     	ds	2
  1404   00004C                     _TMR0_InterruptHandler:
  1405                           	callstack 0
  1406   00004C                     	ds	2
  1407   00004E                     _flags:
  1408                           	callstack 0
  1409   00004E                     	ds	1
  1410   00004F                     _eusart1RxLastError:
  1411                           	callstack 0
  1412   00004F                     	ds	1
  1413                           
  1414                           	psect	bssBANK0
  1415   0000A9                     __pbssBANK0:
  1416                           	callstack 0
  1417   0000A9                     _EUSART1_ErrorHandler:
  1418                           	callstack 0
  1419   0000A9                     	ds	2
  1420   0000AB                     _dbuf:
  1421                           	callstack 0
  1422   0000AB                     	ds	32
  1423                           
  1424                           	psect	bssBIGRAM
  1425   0000CB                     __pbssBIGRAM:
  1426                           	callstack 0
  1427   0000CB                     _sdCardBuffer:
  1428                           	callstack 0
  1429   0000CB                     	ds	512
  1430                           
  1431                           	psect	cstackBANK0
  1432   000060                     __pcstackBANK0:
  1433                           	callstack 0
  1434   000060                     _dtoa$1704:
  1435                           	callstack 0
  1436   000060                     _xtoa$1714:
  1437                           	callstack 0
  1438                           
  1439                           ; 2 bytes @ 0x0
  1440   000060                     	ds	2
  1441   000062                     dtoa@p:
  1442                           	callstack 0
  1443   000062                     xtoa@p:
  1444                           	callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x2
  1447   000062                     	ds	2
  1448   000064                     dtoa@w:
  1449                           	callstack 0
  1450   000064                     xtoa@w:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x4
  1454   000064                     	ds	2
  1455   000066                     dtoa@n:
  1456                           	callstack 0
  1457   000066                     xtoa@n:
  1458                           	callstack 0
  1459                           
  1460                           ; 8 bytes @ 0x6
  1461   000066                     	ds	8
  1462   00006E                     dtoa@s:
  1463                           	callstack 0
  1464   00006E                     xtoa@i:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0xE
  1468   00006E                     	ds	1
  1469   00006F                     dtoa@i:
  1470                           	callstack 0
  1471                           
  1472                           ; 2 bytes @ 0xF
  1473   00006F                     	ds	1
  1474   000070                     xtoa@c:
  1475                           	callstack 0
  1476                           
  1477                           ; 1 bytes @ 0x10
  1478   000070                     	ds	1
  1479   000071                     vfpfcnvrt@fp:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x11
  1483   000071                     	ds	2
  1484   000073                     vfpfcnvrt@fmt:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x13
  1488   000073                     	ds	2
  1489   000075                     vfpfcnvrt@ap:
  1490                           	callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x15
  1493   000075                     	ds	2
  1494   000077                     vfpfcnvrt@c:
  1495                           	callstack 0
  1496                           
  1497                           ; 1 bytes @ 0x17
  1498   000077                     	ds	1
  1499   000078                     vfpfcnvrt@done:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x18
  1503   000078                     	ds	2
  1504   00007A                     vfpfcnvrt@convarg:
  1505                           	callstack 0
  1506                           
  1507                           ; 8 bytes @ 0x1A
  1508   00007A                     	ds	8
  1509   000082                     vfpfcnvrt@cp:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0x22
  1513   000082                     	ds	2
  1514   000084                     ?_vfprintf:
  1515                           	callstack 0
  1516   000084                     vfprintf@fp:
  1517                           	callstack 0
  1518                           
  1519                           ; 2 bytes @ 0x24
  1520   000084                     	ds	2
  1521   000086                     vfprintf@fmt:
  1522                           	callstack 0
  1523                           
  1524                           ; 2 bytes @ 0x26
  1525   000086                     	ds	2
  1526   000088                     vfprintf@ap:
  1527                           	callstack 0
  1528                           
  1529                           ; 2 bytes @ 0x28
  1530   000088                     	ds	2
  1531   00008A                     vfprintf@cfmt:
  1532                           	callstack 0
  1533                           
  1534                           ; 2 bytes @ 0x2A
  1535   00008A                     	ds	2
  1536   00008C                     ?_printf:
  1537                           	callstack 0
  1538   00008C                     printf@fmt:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x2C
  1542   00008C                     	ds	6
  1543   000092                     printf@ap:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x32
  1547   000092                     	ds	2
  1548   000094                     SDCARD_Initialize@i:
  1549                           	callstack 0
  1550   000094                     hexDumpBuffer@sdCardBuffer:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x34
  1554   000094                     	ds	2
  1555   000096                     ??_hexDumpBuffer:
  1556   000096                     SDCARD_Initialize@verbose:
  1557                           	callstack 0
  1558                           
  1559                           ; 1 bytes @ 0x36
  1560   000096                     	ds	1
  1561   000097                     SDCARD_Initialize@response:
  1562                           	callstack 0
  1563                           
  1564                           ; 1 bytes @ 0x37
  1565   000097                     	ds	1
  1566   000098                     hexDumpBuffer@j:
  1567                           	callstack 0
  1568                           
  1569                           ; 2 bytes @ 0x38
  1570   000098                     	ds	2
  1571   00009A                     hexDumpBuffer@j_1176:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x3A
  1575   00009A                     	ds	2
  1576   00009C                     hexDumpBuffer@i:
  1577                           	callstack 0
  1578                           
  1579                           ; 2 bytes @ 0x3C
  1580   00009C                     	ds	2
  1581   00009E                     ??_main:
  1582                           
  1583                           ; 1 bytes @ 0x3E
  1584   00009E                     	ds	2
  1585   0000A0                     main@status:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x40
  1589   0000A0                     	ds	1
  1590   0000A1                     main@letter:
  1591                           	callstack 0
  1592                           
  1593                           ; 1 bytes @ 0x41
  1594   0000A1                     	ds	1
  1595   0000A2                     main@cmd:
  1596                           	callstack 0
  1597                           
  1598                           ; 1 bytes @ 0x42
  1599   0000A2                     	ds	1
  1600   0000A3                     main@i:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x43
  1604   0000A3                     	ds	2
  1605   0000A5                     main@sdCardAddress:
  1606                           	callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x45
  1609   0000A5                     	ds	4
  1610                           
  1611                           	psect	cstackCOMRAM
  1612   000001                     __pcstackCOMRAM:
  1613                           	callstack 0
  1614   000001                     ?_TMR0_ReadTimer:
  1615                           	callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x0
  1618   000001                     	ds	2
  1619   000003                     ??_TMR0_ReadTimer:
  1620                           
  1621                           ; 1 bytes @ 0x2
  1622   000003                     	ds	2
  1623   000005                     TMR0_ReadTimer@readVal:
  1624                           	callstack 0
  1625                           
  1626                           ; 2 bytes @ 0x4
  1627   000005                     	ds	2
  1628   000007                     TMR0_ReadTimer@readValLow:
  1629                           	callstack 0
  1630                           
  1631                           ; 1 bytes @ 0x6
  1632   000007                     	ds	1
  1633   000008                     TMR0_ReadTimer@readValHigh:
  1634                           	callstack 0
  1635                           
  1636                           ; 1 bytes @ 0x7
  1637   000008                     	ds	1
  1638   000009                     i2TMR0_WriteTimer@timerVal:
  1639                           	callstack 0
  1640                           
  1641                           ; 2 bytes @ 0x8
  1642   000009                     	ds	2
  1643   00000B                     myTMR0ISR@bigOleWasteOfTime:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0xA
  1647   00000B                     	ds	2
  1648   00000D                     ??_INTERRUPT_InterruptManager:
  1649                           
  1650                           ; 1 bytes @ 0xC
  1651   00000D                     	ds	2
  1652   00000F                     ??_SPI2_Open:
  1653   00000F                     ?_isdigit:
  1654                           	callstack 0
  1655   00000F                     ?_isspace:
  1656                           	callstack 0
  1657   00000F                     ?___wmul:
  1658                           	callstack 0
  1659   00000F                     ?___aodiv:
  1660                           	callstack 0
  1661   00000F                     ?___aomod:
  1662                           	callstack 0
  1663   00000F                     EUSART1_Write@txData:
  1664                           	callstack 0
  1665   00000F                     SPI2_ExchangeByte@data:
  1666                           	callstack 0
  1667   00000F                     TMR0_WriteTimer@timerVal:
  1668                           	callstack 0
  1669   00000F                     TMR0_SetInterruptHandler@InterruptHandler:
  1670                           	callstack 0
  1671   00000F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1672                           	callstack 0
  1673   00000F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1674                           	callstack 0
  1675   00000F                     EUSART1_SetErrorHandler@interruptHandler:
  1676                           	callstack 0
  1677   00000F                     ___wmul@multiplier:
  1678                           	callstack 0
  1679   00000F                     isdigit@c:
  1680                           	callstack 0
  1681   00000F                     isspace@c:
  1682                           	callstack 0
  1683   00000F                     ___aodiv@dividend:
  1684                           	callstack 0
  1685   00000F                     ___aomod@dividend:
  1686                           	callstack 0
  1687                           
  1688                           ; 8 bytes @ 0xE
  1689   00000F                     	ds	1
  1690   000010                     putch@txData:
  1691                           	callstack 0
  1692   000010                     SPI2_Open@spi2UniqueConfiguration:
  1693                           	callstack 0
  1694   000010                     SDCARD_PollWriteComplete@status:
  1695                           	callstack 0
  1696   000010                     SDCARD_ReadBlock@addr:
  1697                           	callstack 0
  1698   000010                     SDCARD_WriteBlock@addr:
  1699                           	callstack 0
  1700                           
  1701                           ; 4 bytes @ 0xF
  1702   000010                     	ds	1
  1703   000011                     ??_isdigit:
  1704   000011                     ??_isspace:
  1705   000011                     ??_TMR0_Initialize:
  1706   000011                     ___wmul@multiplicand:
  1707                           	callstack 0
  1708   000011                     fputc@c:
  1709                           	callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x10
  1712   000011                     	ds	2
  1713   000013                     _isspace$1764:
  1714                           	callstack 0
  1715   000013                     ___wmul@product:
  1716                           	callstack 0
  1717   000013                     fputc@fp:
  1718                           	callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x12
  1721   000013                     	ds	1
  1722   000014                     SDCARD_ReadBlock@sdCardBuffer:
  1723                           	callstack 0
  1724   000014                     SDCARD_WriteBlock@sdCardBuffer:
  1725                           	callstack 0
  1726                           
  1727                           ; 2 bytes @ 0x13
  1728   000014                     	ds	1
  1729   000015                     ??_fputc:
  1730   000015                     ?_atoi:
  1731                           	callstack 0
  1732   000015                     atoi@s:
  1733                           	callstack 0
  1734                           
  1735                           ; 2 bytes @ 0x14
  1736   000015                     	ds	1
  1737   000016                     SDCARD_ReadBlock@i:
  1738                           	callstack 0
  1739   000016                     SDCARD_WriteBlock@i:
  1740                           	callstack 0
  1741                           
  1742                           ; 2 bytes @ 0x15
  1743   000016                     	ds	1
  1744   000017                     ??_atoi:
  1745   000017                     ___aodiv@divisor:
  1746                           	callstack 0
  1747   000017                     ___aomod@divisor:
  1748                           	callstack 0
  1749                           
  1750                           ; 8 bytes @ 0x16
  1751   000017                     	ds	3
  1752   00001A                     ctoa@fp:
  1753                           	callstack 0
  1754   00001A                     atoi@neg:
  1755                           	callstack 0
  1756   00001A                     fputs@s:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x19
  1760   00001A                     	ds	2
  1761   00001C                     ctoa@c:
  1762                           	callstack 0
  1763   00001C                     atoi@n:
  1764                           	callstack 0
  1765   00001C                     fputs@fp:
  1766                           	callstack 0
  1767                           
  1768                           ; 2 bytes @ 0x1B
  1769   00001C                     	ds	1
  1770   00001D                     ??_ctoa:
  1771                           
  1772                           ; 1 bytes @ 0x1C
  1773   00001D                     	ds	1
  1774   00001E                     fputs@c:
  1775                           	callstack 0
  1776   00001E                     ctoa@l:
  1777                           	callstack 0
  1778                           
  1779                           ; 2 bytes @ 0x1D
  1780   00001E                     	ds	1
  1781   00001F                     ___aodiv@counter:
  1782                           	callstack 0
  1783   00001F                     ___aomod@counter:
  1784                           	callstack 0
  1785   00001F                     fputs@i:
  1786                           	callstack 0
  1787                           
  1788                           ; 2 bytes @ 0x1E
  1789   00001F                     	ds	1
  1790   000020                     ___aodiv@sign:
  1791                           	callstack 0
  1792   000020                     ___aomod@sign:
  1793                           	callstack 0
  1794   000020                     ctoa@w:
  1795                           	callstack 0
  1796                           
  1797                           ; 2 bytes @ 0x1F
  1798   000020                     	ds	1
  1799   000021                     ?_abs:
  1800                           	callstack 0
  1801   000021                     pad@fp:
  1802                           	callstack 0
  1803   000021                     abs@a:
  1804                           	callstack 0
  1805   000021                     ___aodiv@quotient:
  1806                           	callstack 0
  1807                           
  1808                           ; 8 bytes @ 0x20
  1809   000021                     	ds	2
  1810   000023                     ??_abs:
  1811   000023                     pad@buf:
  1812                           	callstack 0
  1813                           
  1814                           ; 2 bytes @ 0x22
  1815   000023                     	ds	2
  1816   000025                     pad@p:
  1817                           	callstack 0
  1818                           
  1819                           ; 2 bytes @ 0x24
  1820   000025                     	ds	2
  1821   000027                     ??_pad:
  1822                           
  1823                           ; 1 bytes @ 0x26
  1824   000027                     	ds	1
  1825   000028                     pad@i:
  1826                           	callstack 0
  1827                           
  1828                           ; 2 bytes @ 0x27
  1829   000028                     	ds	2
  1830   00002A                     pad@w:
  1831                           	callstack 0
  1832                           
  1833                           ; 2 bytes @ 0x29
  1834   00002A                     	ds	2
  1835   00002C                     dtoa@fp:
  1836                           	callstack 0
  1837   00002C                     xtoa@fp:
  1838                           	callstack 0
  1839                           
  1840                           ; 2 bytes @ 0x2B
  1841   00002C                     	ds	2
  1842   00002E                     dtoa@d:
  1843                           	callstack 0
  1844   00002E                     xtoa@d:
  1845                           	callstack 0
  1846                           
  1847                           ; 8 bytes @ 0x2D
  1848   00002E                     	ds	8
  1849   000036                     ??_dtoa:
  1850   000036                     ??_xtoa:
  1851                           
  1852                           ; 1 bytes @ 0x35
  1853   000036                     	ds	8
  1854   00003E                     ??_vfpfcnvrt:
  1855                           
  1856                           ; 1 bytes @ 0x3D
  1857   00003E                     	ds	4
  1858   000042                     
  1859                           ; 1 bytes @ 0x41
  1860 ;;
  1861 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1862 ;;
  1863 ;; *************** function _main *****************
  1864 ;; Defined at:
  1865 ;;		line 40 in file "main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  sdCardAddres    4   69[BANK0 ] unsigned long 
  1870 ;;  i               2   67[BANK0 ] unsigned short 
  1871 ;;  cmd             1   66[BANK0 ] unsigned char 
  1872 ;;  letter          1   65[BANK0 ] unsigned char 
  1873 ;;  status          1   64[BANK0 ] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1883 ;;      Params:         0       0       0       0       0       0       0
  1884 ;;      Locals:         0       9       0       0       0       0       0
  1885 ;;      Temps:          0       2       0       0       0       0       0
  1886 ;;      Totals:         0      11       0       0       0       0       0
  1887 ;;Total ram usage:       11 bytes
  1888 ;; Hardware stack levels required when called: 14
  1889 ;; This function calls:
  1890 ;;		_EUSART1_Read
  1891 ;;		_EUSART1_is_rx_ready
  1892 ;;		_SDCARD_Initialize
  1893 ;;		_SDCARD_PollWriteComplete
  1894 ;;		_SDCARD_ReadBlock
  1895 ;;		_SDCARD_WriteBlock
  1896 ;;		_SPI2_Close
  1897 ;;		_SPI2_ExchangeByte
  1898 ;;		_SPI2_Open
  1899 ;;		_SYSTEM_Initialize
  1900 ;;		_TMR0_SetInterruptHandler
  1901 ;;		_TMR0_WriteTimer
  1902 ;;		_hexDumpBuffer
  1903 ;;		_printf
  1904 ;; This function is called by:
  1905 ;;		Startup code after reset
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909                           	psect	text0
  1910   000042                     __ptext0:
  1911                           	callstack 0
  1912   000042                     _main:
  1913                           	callstack 17
  1914   000042                     
  1915                           ;main.c: 42:     SPI2_Close();;main.c: 43:     SPI2_Open(SPI2_DEFAULT);;main.c: 44: 
  1916   000042  0E00               	movlw	0
  1917   000044  0100               	movlb	0	; () banked
  1918   000046  6FA5               	movwf	main@sdCardAddress& (0+255),b
  1919   000048  0E00               	movlw	0
  1920   00004A  6FA6               	movwf	(main@sdCardAddress+1)& (0+255),b
  1921   00004C  0E00               	movlw	0
  1922   00004E  6FA7               	movwf	(main@sdCardAddress+2)& (0+255),b
  1923   000050  0E00               	movlw	0
  1924   000052  6FA8               	movwf	(main@sdCardAddress+3)& (0+255),b
  1925                           
  1926                           ;main.c: 45:     for (;;);main.c: 47:         if ((EUSART1_is_rx_ready()))
  1927   000054  0E30               	movlw	48
  1928   000056  6FA1               	movwf	main@letter& (0+255),b
  1929   000058                     
  1930                           ; BSR set to: 0
  1931                           ;main.c: 49:             cmd = EUSART1_Read();
  1932   000058  ECFB  F00E         	call	_SYSTEM_Initialize	;wreg free
  1933   00005C  888A               	bsf	138,4,c	;volatile
  1934   00005E                     
  1935                           ;main.c: 53: 
  1936   00005E  0E00               	movlw	0
  1937   000060  6E10               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1938   000062  0E00               	movlw	0
  1939   000064  6E0F               	movwf	TMR0_WriteTimer@timerVal^0,c
  1940   000066  EC33  F00F         	call	_TMR0_WriteTimer	;wreg free
  1941   00006A                     
  1942                           ;main.c: 54: 
  1943   00006A  94F2               	bcf	242,2,c	;volatile
  1944   00006C                     l95:
  1945   00006C  A4F2               	btfss	242,2,c	;volatile
  1946   00006E  EF3B  F000         	goto	u3151
  1947   000072  EF3D  F000         	goto	u3150
  1948   000076                     u3151:
  1949   000076  EF36  F000         	goto	l95
  1950   00007A                     u3150:
  1951   00007A                     
  1952                           ;main.c: 57:                     printf("\r\n-------------------------------------------
      +                          ------\r\n");
  1953   00007A  0ECE               	movlw	low _myTMR0ISR
  1954   00007C  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1955   00007E  0E1B               	movlw	high _myTMR0ISR
  1956   000080  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1957   000082  EC38  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  1958   000086                     
  1959                           ;main.c: 59:                     printf("%04x", sdCardAddress >> 16);
  1960   000086  8EF2               	bsf	242,7,c	;volatile
  1961   000088                     
  1962                           ;main.c: 60:                     printf(":");
  1963   000088  8CF2               	bsf	242,6,c	;volatile
  1964   00008A                     
  1965                           ;main.c: 62:                     printf("\r\n");
  1966   00008A  0EBD               	movlw	low STR_1
  1967   00008C  0100               	movlb	0	; () banked
  1968   00008E  6F8C               	movwf	printf@fmt& (0+255),b
  1969   000090  0E7F               	movlw	high STR_1
  1970   000092  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1971   000094  ECA3  F00E         	call	_printf	;wreg free
  1972   000098                     
  1973                           ;main.c: 63:                     printf("-----------------------------------------------
      +                          --\r\n");
  1974   000098  0E6B               	movlw	low STR_2
  1975   00009A  0100               	movlb	0	; () banked
  1976   00009C  6F8C               	movwf	printf@fmt& (0+255),b
  1977   00009E  0E7F               	movlw	high STR_2
  1978   0000A0  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1979   0000A2  ECA3  F00E         	call	_printf	;wreg free
  1980   0000A6                     
  1981                           ;main.c: 64:                     printf("?: help menu\r\n");
  1982   0000A6  0ECA               	movlw	low STR_3
  1983   0000A8  0100               	movlb	0	; () banked
  1984   0000AA  6F8C               	movwf	printf@fmt& (0+255),b
  1985   0000AC  0E7F               	movlw	high STR_3
  1986   0000AE  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1987   0000B0  ECA3  F00E         	call	_printf	;wreg free
  1988   0000B4                     
  1989                           ;main.c: 65:                     printf("o: k\r\n");
  1990   0000B4  0E81               	movlw	low STR_4
  1991   0000B6  0100               	movlb	0	; () banked
  1992   0000B8  6F8C               	movwf	printf@fmt& (0+255),b
  1993   0000BA  0E7D               	movlw	high STR_4
  1994   0000BC  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  1995   0000BE  ECA3  F00E         	call	_printf	;wreg free
  1996   0000C2                     
  1997                           ;main.c: 67:                     printf("z: Clear the terminal\r\n");
  1998   0000C2  EC58  F00F         	call	_SPI2_Close	;wreg free
  1999   0000C6                     
  2000                           ;main.c: 68:                     printf("----------------SPI TEST-----------------------
      +                          --\r\n");
  2001   0000C6  0E00               	movlw	0
  2002   0000C8  ECA9  F00C         	call	_SPI2_Open
  2003   0000CC                     l4051:
  2004                           
  2005                           ;main.c: 71:                     printf("i: Initialize SD card\r\n");;main.c: 72:       
      +                                        printf("a/A decrease/increase read address\r\n");
  2006   0000CC  EC20  F00F         	call	_EUSART1_is_rx_ready	;wreg free
  2007   0000D0  0900               	iorlw	0
  2008   0000D2  B4D8               	btfsc	status,2,c
  2009   0000D4  EF6E  F000         	goto	u3161
  2010   0000D8  EF70  F000         	goto	u3160
  2011   0000DC                     u3161:
  2012   0000DC  EF66  F000         	goto	l4051
  2013   0000E0                     u3160:
  2014   0000E0                     
  2015                           ;main.c: 73:                     printf("r: read a block of %d bytes from SD card\r\n", 
      +                          512);;main.c: 74:                     printf("w: write a block of %d bytes to SD card\r\
      +                          n", 512);
  2016   0000E0  ECB7  F00E         	call	_EUSART1_Read	;wreg free
  2017   0000E4  0100               	movlb	0	; () banked
  2018   0000E6  6FA2               	movwf	main@cmd& (0+255),b
  2019   0000E8                     
  2020                           ; BSR set to: 0
  2021                           ;main.c: 75:                     printf("-----------------------------------------------
      +                          --\r\n");
  2022   0000E8  0EE9               	movlw	low STR_5
  2023   0000EA  6F8C               	movwf	printf@fmt& (0+255),b
  2024   0000EC  0E7F               	movlw	high STR_5
  2025   0000EE  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2026   0000F0  C0A2  F08E         	movff	main@cmd,?_printf+2
  2027   0000F4  6B8F               	clrf	(?_printf+3)& (0+255),b
  2028   0000F6  ECA3  F00E         	call	_printf	;wreg free
  2029                           
  2030                           ;main.c: 76:                     break;
  2031   0000FA  EF17  F003         	goto	l4159
  2032   0000FE                     l4057:
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;main.c: 82:                     printf("o:  ok\r\n");
  2036   0000FE  0E37               	movlw	low STR_6
  2037   000100  6F8C               	movwf	printf@fmt& (0+255),b
  2038   000102  0E7C               	movlw	high STR_6
  2039   000104  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2040   000106  ECA3  F00E         	call	_printf	;wreg free
  2041                           
  2042                           ;main.c: 83:                     break;
  2043   00010A  0E58               	movlw	low STR_7
  2044   00010C  0100               	movlb	0	; () banked
  2045   00010E  6F8C               	movwf	printf@fmt& (0+255),b
  2046   000110  0E7F               	movlw	high STR_7
  2047   000112  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2048   000114  ECA3  F00E         	call	_printf	;wreg free
  2049                           
  2050                           ;main.c: 84: 
  2051   000118  0EEE               	movlw	low STR_8
  2052   00011A  0100               	movlb	0	; () banked
  2053   00011C  6F8C               	movwf	printf@fmt& (0+255),b
  2054   00011E  0E7F               	movlw	high STR_8
  2055   000120  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2056   000122  C0A7  F08E         	movff	main@sdCardAddress+2,?_printf+2
  2057   000126  C0A8  F08F         	movff	main@sdCardAddress+3,?_printf+3
  2058   00012A  6B90               	clrf	(?_printf+4)& (0+255),b
  2059   00012C  6B91               	clrf	(?_printf+5)& (0+255),b
  2060   00012E  ECA3  F00E         	call	_printf	;wreg free
  2061                           
  2062                           ;main.c: 85: 
  2063   000132  0EFC               	movlw	low STR_9
  2064   000134  0100               	movlb	0	; () banked
  2065   000136  6F8C               	movwf	printf@fmt& (0+255),b
  2066   000138  0E7F               	movlw	high STR_9
  2067   00013A  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2068   00013C  ECA3  F00E         	call	_printf	;wreg free
  2069                           
  2070                           ;main.c: 86: 
  2071   000140  0EEE               	movlw	low STR_8
  2072   000142  0100               	movlb	0	; () banked
  2073   000144  6F8C               	movwf	printf@fmt& (0+255),b
  2074   000146  0E7F               	movlw	high STR_8
  2075   000148  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2076   00014A  0EFF               	movlw	255
  2077   00014C  15A5               	andwf	main@sdCardAddress& (0+255),w,b
  2078   00014E  6F8E               	movwf	(?_printf+2)& (0+255),b
  2079   000150  0EFF               	movlw	255
  2080   000152  15A6               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2081   000154  6F8F               	movwf	(?_printf+3)& (0+255),b
  2082   000156  0E00               	movlw	0
  2083   000158  15A7               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2084   00015A  6F90               	movwf	(?_printf+4)& (0+255),b
  2085   00015C  0E00               	movlw	0
  2086   00015E  15A8               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2087   000160  6F91               	movwf	(?_printf+5)& (0+255),b
  2088   000162  ECA3  F00E         	call	_printf	;wreg free
  2089                           
  2090                           ;main.c: 87: 
  2091   000166  0EAB               	movlw	low (STR_50+12)
  2092   000168  0100               	movlb	0	; () banked
  2093   00016A  6F8C               	movwf	printf@fmt& (0+255),b
  2094   00016C  0E7F               	movlw	high (STR_50+12)
  2095   00016E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2096   000170  ECA3  F00E         	call	_printf	;wreg free
  2097                           
  2098                           ;main.c: 88:                 case 'Z':
  2099   000174  0E39               	movlw	low (STR_6+2)
  2100   000176  0100               	movlb	0	; () banked
  2101   000178  6F8C               	movwf	printf@fmt& (0+255),b
  2102   00017A  0E7C               	movlw	high (STR_6+2)
  2103   00017C  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2104   00017E  ECA3  F00E         	call	_printf	;wreg free
  2105                           
  2106                           ;main.c: 89:                     for (i = 0; i < 40; i++) printf("\n");
  2107   000182  0EAE               	movlw	low STR_13
  2108   000184  0100               	movlb	0	; () banked
  2109   000186  6F8C               	movwf	printf@fmt& (0+255),b
  2110   000188  0E7F               	movlw	high STR_13
  2111   00018A  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2112   00018C  ECA3  F00E         	call	_printf	;wreg free
  2113                           
  2114                           ;main.c: 90:                     __asm("reset");
  2115   000190  0EDC               	movlw	low STR_14
  2116   000192  0100               	movlb	0	; () banked
  2117   000194  6F8C               	movwf	printf@fmt& (0+255),b
  2118   000196  0E7F               	movlw	high STR_14
  2119   000198  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2120   00019A  ECA3  F00E         	call	_printf	;wreg free
  2121                           
  2122                           ;main.c: 91:                     break;
  2123   00019E  0E1B               	movlw	low STR_15
  2124   0001A0  0100               	movlb	0	; () banked
  2125   0001A2  6F8C               	movwf	printf@fmt& (0+255),b
  2126   0001A4  0E7F               	movlw	high STR_15
  2127   0001A6  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2128   0001A8  ECA3  F00E         	call	_printf	;wreg free
  2129                           
  2130                           ;main.c: 92: 
  2131   0001AC  0EEC               	movlw	low STR_16
  2132   0001AE  0100               	movlb	0	; () banked
  2133   0001B0  6F8C               	movwf	printf@fmt& (0+255),b
  2134   0001B2  0E7E               	movlw	high STR_16
  2135   0001B4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2136   0001B6  ECA3  F00E         	call	_printf	;wreg free
  2137                           
  2138                           ;main.c: 93: 
  2139   0001BA  0E6D               	movlw	low STR_17
  2140   0001BC  0100               	movlb	0	; () banked
  2141   0001BE  6F8C               	movwf	printf@fmt& (0+255),b
  2142   0001C0  0E7C               	movlw	high STR_17
  2143   0001C2  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2144   0001C4  ECA3  F00E         	call	_printf	;wreg free
  2145                           
  2146                           ;main.c: 94: 
  2147   0001C8  0ED0               	movlw	low STR_18
  2148   0001CA  0100               	movlb	0	; () banked
  2149   0001CC  6F8C               	movwf	printf@fmt& (0+255),b
  2150   0001CE  0E7D               	movlw	high STR_18
  2151   0001D0  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2152   0001D2  ECA3  F00E         	call	_printf	;wreg free
  2153                           
  2154                           ;main.c: 95: 
  2155   0001D6  0EA1               	movlw	low STR_19
  2156   0001D8  0100               	movlb	0	; () banked
  2157   0001DA  6F8C               	movwf	printf@fmt& (0+255),b
  2158   0001DC  0E7C               	movlw	high STR_19
  2159   0001DE  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2160   0001E0  ECA3  F00E         	call	_printf	;wreg free
  2161                           
  2162                           ;main.c: 96:                 case 'z':
  2163   0001E4  0ED4               	movlw	low STR_20
  2164   0001E6  0100               	movlb	0	; () banked
  2165   0001E8  6F8C               	movwf	printf@fmt& (0+255),b
  2166   0001EA  0E7E               	movlw	high STR_20
  2167   0001EC  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2168   0001EE  ECA3  F00E         	call	_printf	;wreg free
  2169                           
  2170                           ;main.c: 97:                     for (i = 0; i < 40; i++) printf("\n");
  2171   0001F2  0EAB               	movlw	low STR_21
  2172   0001F4  0100               	movlb	0	; () banked
  2173   0001F6  6F8C               	movwf	printf@fmt& (0+255),b
  2174   0001F8  0E7D               	movlw	high STR_21
  2175   0001FA  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2176   0001FC  ECA3  F00E         	call	_printf	;wreg free
  2177                           
  2178                           ;main.c: 98:                     break;
  2179   000200  0E2C               	movlw	low STR_22
  2180   000202  0100               	movlb	0	; () banked
  2181   000204  6F8C               	movwf	printf@fmt& (0+255),b
  2182   000206  0E7D               	movlw	high STR_22
  2183   000208  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2184   00020A  0E02               	movlw	2
  2185   00020C  6F8F               	movwf	(?_printf+3)& (0+255),b
  2186   00020E  0E00               	movlw	0
  2187   000210  6F8E               	movwf	(?_printf+2)& (0+255),b
  2188   000212  ECA3  F00E         	call	_printf	;wreg free
  2189                           
  2190                           ;main.c: 99: 
  2191   000216  0E57               	movlw	low STR_23
  2192   000218  0100               	movlb	0	; () banked
  2193   00021A  6F8C               	movwf	printf@fmt& (0+255),b
  2194   00021C  0E7D               	movlw	high STR_23
  2195   00021E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2196   000220  0E02               	movlw	2
  2197   000222  6F8F               	movwf	(?_printf+3)& (0+255),b
  2198   000224  0E00               	movlw	0
  2199   000226  6F8E               	movwf	(?_printf+2)& (0+255),b
  2200   000228  ECA3  F00E         	call	_printf	;wreg free
  2201                           
  2202                           ;main.c: 100: 
  2203   00022C  0E39               	movlw	low (STR_6+2)
  2204   00022E  0100               	movlb	0	; () banked
  2205   000230  6F8C               	movwf	printf@fmt& (0+255),b
  2206   000232  0E7C               	movlw	high (STR_6+2)
  2207   000234  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2208   000236  ECA3  F00E         	call	_printf	;wreg free
  2209                           
  2210                           ;main.c: 101: 
  2211   00023A  EF4D  F003         	goto	l4161
  2212   00023E                     l4059:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;main.c: 107:                     printf("    Set the horizontal scale to 500ns/div\r\n"
      +                          );
  2216   00023E  0ED3               	movlw	low STR_25
  2217   000240  6F8C               	movwf	printf@fmt& (0+255),b
  2218   000242  0E7F               	movlw	high STR_25
  2219   000244  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2220   000246  ECA3  F00E         	call	_printf	;wreg free
  2221                           
  2222                           ;main.c: 108:                     printf("    Hit any key when ready\r\n");
  2223   00024A  EF4D  F003         	goto	l4161
  2224   00024E                     l4061:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 114:                     break;
  2228   00024E  0E00               	movlw	0
  2229   000250  6FA4               	movwf	(main@i+1)& (0+255),b
  2230   000252  0E00               	movlw	0
  2231   000254  6FA3               	movwf	main@i& (0+255),b
  2232   000256                     l4067:
  2233                           
  2234                           ; BSR set to: 0
  2235   000256  0EF5               	movlw	low (STR_61+2)
  2236   000258  6F8C               	movwf	printf@fmt& (0+255),b
  2237   00025A  0E7F               	movlw	high (STR_61+2)
  2238   00025C  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2239   00025E  ECA3  F00E         	call	_printf	;wreg free
  2240   000262  0100               	movlb	0	; () banked
  2241   000264  4BA3               	infsnz	main@i& (0+255),f,b
  2242   000266  2BA4               	incf	(main@i+1)& (0+255),f,b
  2243   000268                     
  2244                           ; BSR set to: 0
  2245   000268  51A4               	movf	(main@i+1)& (0+255),w,b
  2246   00026A  E109               	bnz	u3170
  2247   00026C  0E28               	movlw	40
  2248   00026E  5DA3               	subwf	main@i& (0+255),w,b
  2249   000270  A0D8               	btfss	status,0,c
  2250   000272  EF3D  F001         	goto	u3171
  2251   000276  EF3F  F001         	goto	u3170
  2252   00027A                     u3171:
  2253   00027A  EF2B  F001         	goto	l4067
  2254   00027E                     u3170:
  2255   00027E                     
  2256                           ; BSR set to: 0
  2257   00027E  00FF               	reset		;# 
  2258                           
  2259                           ;main.c: 116: 
  2260   000280  EF4D  F003         	goto	l4161
  2261   000284                     l4073:
  2262                           
  2263                           ; BSR set to: 0
  2264                           ;main.c: 122:                     SPI2_Close();
  2265   000284  0E00               	movlw	0
  2266   000286  6FA4               	movwf	(main@i+1)& (0+255),b
  2267   000288  0E00               	movlw	0
  2268   00028A  6FA3               	movwf	main@i& (0+255),b
  2269   00028C                     l4079:
  2270                           
  2271                           ; BSR set to: 0
  2272   00028C  0EF5               	movlw	low (STR_61+2)
  2273   00028E  6F8C               	movwf	printf@fmt& (0+255),b
  2274   000290  0E7F               	movlw	high (STR_61+2)
  2275   000292  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2276   000294  ECA3  F00E         	call	_printf	;wreg free
  2277   000298  0100               	movlb	0	; () banked
  2278   00029A  4BA3               	infsnz	main@i& (0+255),f,b
  2279   00029C  2BA4               	incf	(main@i+1)& (0+255),f,b
  2280   00029E                     
  2281                           ; BSR set to: 0
  2282   00029E  51A4               	movf	(main@i+1)& (0+255),w,b
  2283   0002A0  E109               	bnz	u3180
  2284   0002A2  0E28               	movlw	40
  2285   0002A4  5DA3               	subwf	main@i& (0+255),w,b
  2286   0002A6  A0D8               	btfss	status,0,c
  2287   0002A8  EF58  F001         	goto	u3181
  2288   0002AC  EF5A  F001         	goto	u3180
  2289   0002B0                     u3181:
  2290   0002B0  EF46  F001         	goto	l4079
  2291   0002B4                     u3180:
  2292   0002B4  EF4D  F003         	goto	l4161
  2293   0002B8                     l4085:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;main.c: 129: 
  2297   0002B8  0E91               	movlw	low STR_28
  2298   0002BA  6F8C               	movwf	printf@fmt& (0+255),b
  2299   0002BC  0E7B               	movlw	high STR_28
  2300   0002BE  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2301   0002C0  ECA3  F00E         	call	_printf	;wreg free
  2302                           
  2303                           ;main.c: 130:                 case 'A':
  2304   0002C4  0EE4               	movlw	low STR_29
  2305   0002C6  0100               	movlb	0	; () banked
  2306   0002C8  6F8C               	movwf	printf@fmt& (0+255),b
  2307   0002CA  0E7B               	movlw	high STR_29
  2308   0002CC  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2309   0002CE  ECA3  F00E         	call	_printf	;wreg free
  2310                           
  2311                           ;main.c: 131:                 case 'a':
  2312   0002D2  0E9F               	movlw	low STR_30
  2313   0002D4  0100               	movlb	0	; () banked
  2314   0002D6  6F8C               	movwf	printf@fmt& (0+255),b
  2315   0002D8  0E7E               	movlw	high STR_30
  2316   0002DA  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2317   0002DC  ECA3  F00E         	call	_printf	;wreg free
  2318                           
  2319                           ;main.c: 132:                     if (cmd == 'a') {
  2320   0002E0  0ED5               	movlw	low STR_31
  2321   0002E2  0100               	movlb	0	; () banked
  2322   0002E4  6F8C               	movwf	printf@fmt& (0+255),b
  2323   0002E6  0E7C               	movlw	high STR_31
  2324   0002E8  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2325   0002EA  ECA3  F00E         	call	_printf	;wreg free
  2326                           
  2327                           ;main.c: 133:                         sdCardAddress -= 512;
  2328   0002EE  0E2F               	movlw	low STR_32
  2329   0002F0  0100               	movlb	0	; () banked
  2330   0002F2  6F8C               	movwf	printf@fmt& (0+255),b
  2331   0002F4  0E7E               	movlw	high STR_32
  2332   0002F6  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2333   0002F8  ECA3  F00E         	call	_printf	;wreg free
  2334   0002FC                     l4087:
  2335   0002FC  EC20  F00F         	call	_EUSART1_is_rx_ready	;wreg free
  2336   000300  0900               	iorlw	0
  2337   000302  B4D8               	btfsc	status,2,c
  2338   000304  EF86  F001         	goto	u3191
  2339   000308  EF88  F001         	goto	u3190
  2340   00030C                     u3191:
  2341   00030C  EF7E  F001         	goto	l4087
  2342   000310                     u3190:
  2343   000310                     
  2344                           ;main.c: 135:                             printf("Underflowed to high address\r\n");
  2345   000310  ECB7  F00E         	call	_EUSART1_Read	;wreg free
  2346   000314                     
  2347                           ;main.c: 137:                         } else {
  2348   000314  0E12               	movlw	low STR_33
  2349   000316  0100               	movlb	0	; () banked
  2350   000318  6F8C               	movwf	printf@fmt& (0+255),b
  2351   00031A  0E7E               	movlw	high STR_33
  2352   00031C  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2353   00031E  C0A1  F08E         	movff	main@letter,?_printf+2
  2354   000322  6B8F               	clrf	(?_printf+3)& (0+255),b
  2355   000324  51A1               	movf	main@letter& (0+255),w,b
  2356   000326  EC08  F00F         	call	_SPI2_ExchangeByte
  2357   00032A  0100               	movlb	0	; () banked
  2358   00032C  6F9E               	movwf	??_main& (0+255),b
  2359   00032E  519E               	movf	??_main& (0+255),w,b
  2360   000330  6F90               	movwf	(?_printf+4)& (0+255),b
  2361   000332  6B91               	clrf	(?_printf+5)& (0+255),b
  2362   000334  ECA3  F00E         	call	_printf	;wreg free
  2363   000338                     
  2364                           ;main.c: 138:                             printf("Decreased address\r\n");
  2365   000338  0100               	movlb	0	; () banked
  2366   00033A  2BA1               	incf	main@letter& (0+255),f,b
  2367                           
  2368                           ;main.c: 139:                         }
  2369   00033C  EF4D  F003         	goto	l4161
  2370   000340                     l4095:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;main.c: 147:                         }
  2374   000340  EC58  F00F         	call	_SPI2_Close	;wreg free
  2375   000344                     
  2376                           ;main.c: 148:                     }
  2377   000344  0E00               	movlw	0
  2378   000346  ECA9  F00C         	call	_SPI2_Open
  2379   00034A                     
  2380                           ;main.c: 149: 
  2381   00034A  0E01               	movlw	1
  2382   00034C  EC45  F009         	call	_SDCARD_Initialize
  2383                           
  2384                           ;main.c: 150: 
  2385   000350  EF4D  F003         	goto	l4161
  2386   000354                     l4101:
  2387                           
  2388                           ; BSR set to: 0
  2389                           ;main.c: 157: 
  2390   000354  0E61               	movlw	97
  2391   000356  19A2               	xorwf	main@cmd& (0+255),w,b
  2392   000358  A4D8               	btfss	status,2,c
  2393   00035A  EFB1  F001         	goto	u3201
  2394   00035E  EFB3  F001         	goto	u3200
  2395   000362                     u3201:
  2396   000362  EFDD  F001         	goto	l4111
  2397   000366                     u3200:
  2398   000366                     
  2399                           ; BSR set to: 0
  2400                           ;main.c: 158: 
  2401   000366  0E00               	movlw	0
  2402   000368  5FA5               	subwf	main@sdCardAddress& (0+255),f,b
  2403   00036A  0E02               	movlw	2
  2404   00036C  5BA6               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  2405   00036E  0E00               	movlw	0
  2406   000370  5BA7               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  2407   000372  0E00               	movlw	0
  2408   000374  5BA8               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  2409                           
  2410                           ;main.c: 159: 
  2411   000376  0E04               	movlw	4
  2412   000378  5DA8               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  2413   00037A  A0D8               	btfss	status,0,c
  2414   00037C  EFC2  F001         	goto	u3211
  2415   000380  EFC4  F001         	goto	u3210
  2416   000384                     u3211:
  2417   000384  EFD5  F001         	goto	l4109
  2418   000388                     u3210:
  2419   000388                     
  2420                           ; BSR set to: 0
  2421                           ;main.c: 160: 
  2422   000388  0EF4               	movlw	low STR_34
  2423   00038A  6F8C               	movwf	printf@fmt& (0+255),b
  2424   00038C  0E7D               	movlw	high STR_34
  2425   00038E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2426   000390  ECA3  F00E         	call	_printf	;wreg free
  2427   000394                     
  2428                           ;main.c: 161:                 case 'w':
  2429   000394  0E00               	movlw	0
  2430   000396  0100               	movlb	0	; () banked
  2431   000398  6FA5               	movwf	main@sdCardAddress& (0+255),b
  2432   00039A  0EFE               	movlw	254
  2433   00039C  6FA6               	movwf	(main@sdCardAddress+1)& (0+255),b
  2434   00039E  0EFF               	movlw	255
  2435   0003A0  6FA7               	movwf	(main@sdCardAddress+2)& (0+255),b
  2436   0003A2  0E03               	movlw	3
  2437   0003A4  6FA8               	movwf	(main@sdCardAddress+3)& (0+255),b
  2438                           
  2439                           ;main.c: 162:                     for (i = 0; i < 512; i++) sdCardBuffer[i] = 255 - i;
  2440   0003A6  EF05  F002         	goto	l120
  2441   0003AA                     l4109:
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 163:                     do { LATCbits.LATC4 = 1; } while(0);
  2445   0003AA  0E30               	movlw	low STR_35
  2446   0003AC  6F8C               	movwf	printf@fmt& (0+255),b
  2447   0003AE  0E7F               	movlw	high STR_35
  2448   0003B0  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2449   0003B2  ECA3  F00E         	call	_printf	;wreg free
  2450   0003B6  EF05  F002         	goto	l120
  2451   0003BA                     l4111:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;main.c: 166:                     do { LATCbits.LATC4 = 0; } while(0);
  2455   0003BA  0E00               	movlw	0
  2456   0003BC  27A5               	addwf	main@sdCardAddress& (0+255),f,b
  2457   0003BE  0E02               	movlw	2
  2458   0003C0  23A6               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  2459   0003C2  0E00               	movlw	0
  2460   0003C4  23A7               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  2461   0003C6  0E00               	movlw	0
  2462   0003C8  23A8               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  2463                           
  2464                           ;main.c: 167: 
  2465   0003CA  0E04               	movlw	4
  2466   0003CC  5DA8               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  2467   0003CE  A0D8               	btfss	status,0,c
  2468   0003D0  EFEC  F001         	goto	u3221
  2469   0003D4  EFEE  F001         	goto	u3220
  2470   0003D8                     u3221:
  2471   0003D8  EFFF  F001         	goto	l4117
  2472   0003DC                     u3220:
  2473   0003DC                     
  2474                           ; BSR set to: 0
  2475                           ;main.c: 168:                     printf("Write block of decremented 8-bit values:\r\n")
      +                          ;
  2476   0003DC  0E68               	movlw	low STR_36
  2477   0003DE  6F8C               	movwf	printf@fmt& (0+255),b
  2478   0003E0  0E7E               	movlw	high STR_36
  2479   0003E2  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2480   0003E4  ECA3  F00E         	call	_printf	;wreg free
  2481   0003E8                     
  2482                           ;main.c: 169:                     printf("    Address:    ");
  2483   0003E8  0E00               	movlw	0
  2484   0003EA  0100               	movlb	0	; () banked
  2485   0003EC  6FA5               	movwf	main@sdCardAddress& (0+255),b
  2486   0003EE  0E00               	movlw	0
  2487   0003F0  6FA6               	movwf	(main@sdCardAddress+1)& (0+255),b
  2488   0003F2  0E00               	movlw	0
  2489   0003F4  6FA7               	movwf	(main@sdCardAddress+2)& (0+255),b
  2490   0003F6  0E00               	movlw	0
  2491   0003F8  6FA8               	movwf	(main@sdCardAddress+3)& (0+255),b
  2492                           
  2493                           ;main.c: 170:                     printf("%04x", sdCardAddress >> 16);
  2494   0003FA  EF05  F002         	goto	l120
  2495   0003FE                     l4117:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;main.c: 171:                     printf(":");
  2499   0003FE  0E44               	movlw	low STR_37
  2500   000400  6F8C               	movwf	printf@fmt& (0+255),b
  2501   000402  0E7F               	movlw	high STR_37
  2502   000404  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2503   000406  ECA3  F00E         	call	_printf	;wreg free
  2504   00040A                     l120:
  2505                           
  2506                           ;main.c: 176: 
  2507   00040A  0E58               	movlw	low STR_7
  2508   00040C  0100               	movlb	0	; () banked
  2509   00040E  6F8C               	movwf	printf@fmt& (0+255),b
  2510   000410  0E7F               	movlw	high STR_7
  2511   000412  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2512   000414  ECA3  F00E         	call	_printf	;wreg free
  2513                           
  2514                           ;main.c: 177: 
  2515   000418  0EEE               	movlw	low STR_8
  2516   00041A  0100               	movlb	0	; () banked
  2517   00041C  6F8C               	movwf	printf@fmt& (0+255),b
  2518   00041E  0E7F               	movlw	high STR_8
  2519   000420  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2520   000422  C0A7  F08E         	movff	main@sdCardAddress+2,?_printf+2
  2521   000426  C0A8  F08F         	movff	main@sdCardAddress+3,?_printf+3
  2522   00042A  6B90               	clrf	(?_printf+4)& (0+255),b
  2523   00042C  6B91               	clrf	(?_printf+5)& (0+255),b
  2524   00042E  ECA3  F00E         	call	_printf	;wreg free
  2525                           
  2526                           ;main.c: 178: 
  2527   000432  0EFC               	movlw	low STR_9
  2528   000434  0100               	movlb	0	; () banked
  2529   000436  6F8C               	movwf	printf@fmt& (0+255),b
  2530   000438  0E7F               	movlw	high STR_9
  2531   00043A  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2532   00043C  ECA3  F00E         	call	_printf	;wreg free
  2533                           
  2534                           ;main.c: 179: 
  2535   000440  0EEE               	movlw	low STR_8
  2536   000442  0100               	movlb	0	; () banked
  2537   000444  6F8C               	movwf	printf@fmt& (0+255),b
  2538   000446  0E7F               	movlw	high STR_8
  2539   000448  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2540   00044A  0EFF               	movlw	255
  2541   00044C  15A5               	andwf	main@sdCardAddress& (0+255),w,b
  2542   00044E  6F8E               	movwf	(?_printf+2)& (0+255),b
  2543   000450  0EFF               	movlw	255
  2544   000452  15A6               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2545   000454  6F8F               	movwf	(?_printf+3)& (0+255),b
  2546   000456  0E00               	movlw	0
  2547   000458  15A7               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2548   00045A  6F90               	movwf	(?_printf+4)& (0+255),b
  2549   00045C  0E00               	movlw	0
  2550   00045E  15A8               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2551   000460  6F91               	movwf	(?_printf+5)& (0+255),b
  2552   000462  ECA3  F00E         	call	_printf	;wreg free
  2553                           
  2554                           ;main.c: 180:                 case 'r':
  2555   000466  0EAB               	movlw	low (STR_50+12)
  2556   000468  0100               	movlb	0	; () banked
  2557   00046A  6F8C               	movwf	printf@fmt& (0+255),b
  2558   00046C  0E7F               	movlw	high (STR_50+12)
  2559   00046E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2560   000470  ECA3  F00E         	call	_printf	;wreg free
  2561                           
  2562                           ;main.c: 181:                     do { LATCbits.LATC5 = 1; } while(0);
  2563   000474  EF4D  F003         	goto	l4161
  2564   000478                     l4119:
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;main.c: 187:                     printf(":");
  2568   000478  0E00               	movlw	0
  2569   00047A  6FA4               	movwf	(main@i+1)& (0+255),b
  2570   00047C  0E00               	movlw	0
  2571   00047E  6FA3               	movwf	main@i& (0+255),b
  2572   000480                     l4125:
  2573                           
  2574                           ; BSR set to: 0
  2575   000480  0ECB               	movlw	low _sdCardBuffer
  2576   000482  25A3               	addwf	main@i& (0+255),w,b
  2577   000484  6ED9               	movwf	fsr2l,c
  2578   000486  0E00               	movlw	high _sdCardBuffer
  2579   000488  21A4               	addwfc	(main@i+1)& (0+255),w,b
  2580   00048A  6EDA               	movwf	fsr2h,c
  2581   00048C  51A3               	movf	main@i& (0+255),w,b
  2582   00048E  0AFF               	xorlw	255
  2583   000490  6EDF               	movwf	indf2,c
  2584   000492                     
  2585                           ; BSR set to: 0
  2586   000492  4BA3               	infsnz	main@i& (0+255),f,b
  2587   000494  2BA4               	incf	(main@i+1)& (0+255),f,b
  2588   000496                     
  2589                           ; BSR set to: 0
  2590   000496  0E02               	movlw	2
  2591   000498  5DA4               	subwf	(main@i+1)& (0+255),w,b
  2592   00049A  A0D8               	btfss	status,0,c
  2593   00049C  EF52  F002         	goto	u3231
  2594   0004A0  EF54  F002         	goto	u3230
  2595   0004A4                     u3231:
  2596   0004A4  EF40  F002         	goto	l4125
  2597   0004A8                     u3230:
  2598   0004A8                     
  2599                           ; BSR set to: 0
  2600   0004A8  888B               	bsf	139,4,c	;volatile
  2601   0004AA                     
  2602                           ; BSR set to: 0
  2603                           ;main.c: 189:                     printf("\r\n");
  2604   0004AA  C0A5  F010         	movff	main@sdCardAddress,SDCARD_WriteBlock@addr
  2605   0004AE  C0A6  F011         	movff	main@sdCardAddress+1,SDCARD_WriteBlock@addr+1
  2606   0004B2  C0A7  F012         	movff	main@sdCardAddress+2,SDCARD_WriteBlock@addr+2
  2607   0004B6  C0A8  F013         	movff	main@sdCardAddress+3,SDCARD_WriteBlock@addr+3
  2608   0004BA  0ECB               	movlw	low _sdCardBuffer
  2609   0004BC  6E14               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  2610   0004BE  0E00               	movlw	high _sdCardBuffer
  2611   0004C0  6E15               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  2612   0004C2  ECF3  F00C         	call	_SDCARD_WriteBlock	;wreg free
  2613   0004C6                     l4133:
  2614   0004C6  EC23  F00E         	call	_SDCARD_PollWriteComplete	;wreg free
  2615   0004CA  0100               	movlb	0	; () banked
  2616   0004CC  6FA0               	movwf	main@status& (0+255),b
  2617   0004CE  29A0               	incf	main@status& (0+255),w,b
  2618   0004D0  B4D8               	btfsc	status,2,c
  2619   0004D2  EF6D  F002         	goto	u3241
  2620   0004D6  EF6F  F002         	goto	u3240
  2621   0004DA                     u3241:
  2622   0004DA  EF63  F002         	goto	l4133
  2623   0004DE                     u3240:
  2624   0004DE                     
  2625                           ; BSR set to: 0
  2626   0004DE  988B               	bcf	139,4,c	;volatile
  2627   0004E0                     
  2628                           ; BSR set to: 0
  2629                           ;main.c: 193: 
  2630   0004E0  0E01               	movlw	low STR_43
  2631   0004E2  6F8C               	movwf	printf@fmt& (0+255),b
  2632   0004E4  0E7D               	movlw	high STR_43
  2633   0004E6  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2634   0004E8  ECA3  F00E         	call	_printf	;wreg free
  2635                           
  2636                           ;main.c: 194: 
  2637   0004EC  0E8E               	movlw	low STR_44
  2638   0004EE  0100               	movlb	0	; () banked
  2639   0004F0  6F8C               	movwf	printf@fmt& (0+255),b
  2640   0004F2  0E7F               	movlw	high STR_44
  2641   0004F4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2642   0004F6  ECA3  F00E         	call	_printf	;wreg free
  2643                           
  2644                           ;main.c: 195: 
  2645   0004FA  0EEE               	movlw	low STR_8
  2646   0004FC  0100               	movlb	0	; () banked
  2647   0004FE  6F8C               	movwf	printf@fmt& (0+255),b
  2648   000500  0E7F               	movlw	high STR_8
  2649   000502  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2650   000504  C0A7  F08E         	movff	main@sdCardAddress+2,?_printf+2
  2651   000508  C0A8  F08F         	movff	main@sdCardAddress+3,?_printf+3
  2652   00050C  6B90               	clrf	(?_printf+4)& (0+255),b
  2653   00050E  6B91               	clrf	(?_printf+5)& (0+255),b
  2654   000510  ECA3  F00E         	call	_printf	;wreg free
  2655                           
  2656                           ;main.c: 196:                 default:
  2657   000514  0EFC               	movlw	low STR_9
  2658   000516  0100               	movlb	0	; () banked
  2659   000518  6F8C               	movwf	printf@fmt& (0+255),b
  2660   00051A  0E7F               	movlw	high STR_9
  2661   00051C  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2662   00051E  ECA3  F00E         	call	_printf	;wreg free
  2663                           
  2664                           ;main.c: 197:                     printf("Unknown key %c\r\n", cmd);
  2665   000522  0EEE               	movlw	low STR_8
  2666   000524  0100               	movlb	0	; () banked
  2667   000526  6F8C               	movwf	printf@fmt& (0+255),b
  2668   000528  0E7F               	movlw	high STR_8
  2669   00052A  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2670   00052C  0EFF               	movlw	255
  2671   00052E  15A5               	andwf	main@sdCardAddress& (0+255),w,b
  2672   000530  6F8E               	movwf	(?_printf+2)& (0+255),b
  2673   000532  0EFF               	movlw	255
  2674   000534  15A6               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2675   000536  6F8F               	movwf	(?_printf+3)& (0+255),b
  2676   000538  0E00               	movlw	0
  2677   00053A  15A7               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2678   00053C  6F90               	movwf	(?_printf+4)& (0+255),b
  2679   00053E  0E00               	movlw	0
  2680   000540  15A8               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2681   000542  6F91               	movwf	(?_printf+5)& (0+255),b
  2682   000544  ECA3  F00E         	call	_printf	;wreg free
  2683                           
  2684                           ;main.c: 198:                     break;
  2685   000548  0EAB               	movlw	low (STR_50+12)
  2686   00054A  0100               	movlb	0	; () banked
  2687   00054C  6F8C               	movwf	printf@fmt& (0+255),b
  2688   00054E  0E7F               	movlw	high (STR_50+12)
  2689   000550  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2690   000552  ECA3  F00E         	call	_printf	;wreg free
  2691                           
  2692                           ;main.c: 199:             }
  2693   000556  0E04               	movlw	low STR_49
  2694   000558  0100               	movlb	0	; () banked
  2695   00055A  6F8C               	movwf	printf@fmt& (0+255),b
  2696   00055C  0E7F               	movlw	high STR_49
  2697   00055E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2698   000560  C0A0  F08E         	movff	main@status,?_printf+2
  2699   000564  6B8F               	clrf	(?_printf+3)& (0+255),b
  2700   000566  ECA3  F00E         	call	_printf	;wreg free
  2701                           
  2702                           ;main.c: 200:             printf("> ");
  2703   00056A  EF4D  F003         	goto	l4161
  2704   00056E                     l134:
  2705                           
  2706                           ; BSR set to: 0
  2707   00056E  8A8B               	bsf	139,5,c	;volatile
  2708   000570                     
  2709                           ; BSR set to: 0
  2710   000570  C0A5  F010         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  2711   000574  C0A6  F011         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  2712   000578  C0A7  F012         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  2713   00057C  C0A8  F013         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  2714   000580  0ECB               	movlw	low _sdCardBuffer
  2715   000582  6E14               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  2716   000584  0E00               	movlw	high _sdCardBuffer
  2717   000586  6E15               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  2718   000588  EC11  F00C         	call	_SDCARD_ReadBlock	;wreg free
  2719   00058C  9A8B               	bcf	139,5,c	;volatile
  2720   00058E  0E9F               	movlw	low STR_50
  2721   000590  0100               	movlb	0	; () banked
  2722   000592  6F8C               	movwf	printf@fmt& (0+255),b
  2723   000594  0E7F               	movlw	high STR_50
  2724   000596  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2725   000598  ECA3  F00E         	call	_printf	;wreg free
  2726   00059C  0E8E               	movlw	low STR_44
  2727   00059E  0100               	movlb	0	; () banked
  2728   0005A0  6F8C               	movwf	printf@fmt& (0+255),b
  2729   0005A2  0E7F               	movlw	high STR_44
  2730   0005A4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2731   0005A6  ECA3  F00E         	call	_printf	;wreg free
  2732   0005AA  0EEE               	movlw	low STR_8
  2733   0005AC  0100               	movlb	0	; () banked
  2734   0005AE  6F8C               	movwf	printf@fmt& (0+255),b
  2735   0005B0  0E7F               	movlw	high STR_8
  2736   0005B2  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2737   0005B4  C0A7  F08E         	movff	main@sdCardAddress+2,?_printf+2
  2738   0005B8  C0A8  F08F         	movff	main@sdCardAddress+3,?_printf+3
  2739   0005BC  6B90               	clrf	(?_printf+4)& (0+255),b
  2740   0005BE  6B91               	clrf	(?_printf+5)& (0+255),b
  2741   0005C0  ECA3  F00E         	call	_printf	;wreg free
  2742   0005C4  0EFC               	movlw	low STR_9
  2743   0005C6  0100               	movlb	0	; () banked
  2744   0005C8  6F8C               	movwf	printf@fmt& (0+255),b
  2745   0005CA  0E7F               	movlw	high STR_9
  2746   0005CC  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2747   0005CE  ECA3  F00E         	call	_printf	;wreg free
  2748   0005D2  0EEE               	movlw	low STR_8
  2749   0005D4  0100               	movlb	0	; () banked
  2750   0005D6  6F8C               	movwf	printf@fmt& (0+255),b
  2751   0005D8  0E7F               	movlw	high STR_8
  2752   0005DA  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2753   0005DC  0EFF               	movlw	255
  2754   0005DE  15A5               	andwf	main@sdCardAddress& (0+255),w,b
  2755   0005E0  6F8E               	movwf	(?_printf+2)& (0+255),b
  2756   0005E2  0EFF               	movlw	255
  2757   0005E4  15A6               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  2758   0005E6  6F8F               	movwf	(?_printf+3)& (0+255),b
  2759   0005E8  0E00               	movlw	0
  2760   0005EA  15A7               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  2761   0005EC  6F90               	movwf	(?_printf+4)& (0+255),b
  2762   0005EE  0E00               	movlw	0
  2763   0005F0  15A8               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  2764   0005F2  6F91               	movwf	(?_printf+5)& (0+255),b
  2765   0005F4  ECA3  F00E         	call	_printf	;wreg free
  2766   0005F8  0EAB               	movlw	low (STR_50+12)
  2767   0005FA  0100               	movlb	0	; () banked
  2768   0005FC  6F8C               	movwf	printf@fmt& (0+255),b
  2769   0005FE  0E7F               	movlw	high (STR_50+12)
  2770   000600  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2771   000602  ECA3  F00E         	call	_printf	;wreg free
  2772   000606  0ECB               	movlw	low _sdCardBuffer
  2773   000608  0100               	movlb	0	; () banked
  2774   00060A  6F94               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  2775   00060C  0E00               	movlw	high _sdCardBuffer
  2776   00060E  6F95               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  2777   000610  ECA4  F006         	call	_hexDumpBuffer	;wreg free
  2778   000614  EF4D  F003         	goto	l4161
  2779   000618                     l4155:
  2780                           
  2781                           ; BSR set to: 0
  2782   000618  0E7D               	movlw	low STR_56
  2783   00061A  6F8C               	movwf	printf@fmt& (0+255),b
  2784   00061C  0E7F               	movlw	high STR_56
  2785   00061E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2786   000620  C0A2  F08E         	movff	main@cmd,?_printf+2
  2787   000624  6B8F               	clrf	(?_printf+3)& (0+255),b
  2788   000626  ECA3  F00E         	call	_printf	;wreg free
  2789   00062A  EF4D  F003         	goto	l4161
  2790   00062E                     l4159:
  2791   00062E  0100               	movlb	0	; () banked
  2792   000630  51A2               	movf	main@cmd& (0+255),w,b
  2793   000632  6F9E               	movwf	??_main& (0+255),b
  2794   000634  6B9F               	clrf	(??_main+1)& (0+255),b
  2795                           
  2796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2797                           ; Switch size 1, requested type "simple"
  2798                           ; Number of cases is 1, Range of values is 0 to 0
  2799                           ; switch strategies available:
  2800                           ; Name         Instructions Cycles
  2801                           ; simple_byte            4     3 (average)
  2802                           ;	Chosen strategy is simple_byte
  2803   000636  519F               	movf	(??_main+1)& (0+255),w,b
  2804   000638  0A00               	xorlw	0	; case 0
  2805   00063A  B4D8               	btfsc	status,2,c
  2806   00063C  EF22  F003         	goto	l4299
  2807   000640  EF0C  F003         	goto	l4155
  2808   000644                     l4299:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ; Switch size 1, requested type "simple"
  2812                           ; Number of cases is 10, Range of values is 63 to 122
  2813                           ; switch strategies available:
  2814                           ; Name         Instructions Cycles
  2815                           ; simple_byte           31    16 (average)
  2816                           ;	Chosen strategy is simple_byte
  2817   000644  519E               	movf	??_main& (0+255),w,b
  2818   000646  0A3F               	xorlw	63	; case 63
  2819   000648  B4D8               	btfsc	status,2,c
  2820   00064A  EF7F  F000         	goto	l4057
  2821   00064E  0A7E               	xorlw	126	; case 65
  2822   000650  B4D8               	btfsc	status,2,c
  2823   000652  EFAA  F001         	goto	l4101
  2824   000656  0A1B               	xorlw	27	; case 90
  2825   000658  B4D8               	btfsc	status,2,c
  2826   00065A  EF27  F001         	goto	l4061
  2827   00065E  0A3B               	xorlw	59	; case 97
  2828   000660  B4D8               	btfsc	status,2,c
  2829   000662  EFAA  F001         	goto	l4101
  2830   000666  0A08               	xorlw	8	; case 105
  2831   000668  B4D8               	btfsc	status,2,c
  2832   00066A  EFA0  F001         	goto	l4095
  2833   00066E  0A06               	xorlw	6	; case 111
  2834   000670  B4D8               	btfsc	status,2,c
  2835   000672  EF1F  F001         	goto	l4059
  2836   000676  0A1D               	xorlw	29	; case 114
  2837   000678  B4D8               	btfsc	status,2,c
  2838   00067A  EFB7  F002         	goto	l134
  2839   00067E  0A06               	xorlw	6	; case 116
  2840   000680  B4D8               	btfsc	status,2,c
  2841   000682  EF5C  F001         	goto	l4085
  2842   000686  0A03               	xorlw	3	; case 119
  2843   000688  B4D8               	btfsc	status,2,c
  2844   00068A  EF3C  F002         	goto	l4119
  2845   00068E  0A0D               	xorlw	13	; case 122
  2846   000690  B4D8               	btfsc	status,2,c
  2847   000692  EF42  F001         	goto	l4073
  2848   000696  EF0C  F003         	goto	l4155
  2849   00069A                     l4161:
  2850   00069A  0EA8               	movlw	low (STR_4+39)
  2851   00069C  0100               	movlb	0	; () banked
  2852   00069E  6F8C               	movwf	printf@fmt& (0+255),b
  2853   0006A0  0E7D               	movlw	high (STR_4+39)
  2854   0006A2  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2855   0006A4  ECA3  F00E         	call	_printf	;wreg free
  2856   0006A8  EF66  F000         	goto	l4051
  2857   0006AC  EF1F  F000         	goto	start
  2858   0006B0                     __end_of_main:
  2859                           	callstack 0
  2860                           
  2861 ;; *************** function _hexDumpBuffer *****************
  2862 ;; Defined at:
  2863 ;;		line 160 in file "sdCard.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  sdCardBuffer    2   52[BANK0 ] PTR unsigned char 
  2866 ;;		 -> sdCardBuffer(512), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  j               2   58[BANK0 ] int 
  2869 ;;  i               2   60[BANK0 ] unsigned short 
  2870 ;;  j               2   56[BANK0 ] unsigned short 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2880 ;;      Params:         0       2       0       0       0       0       0
  2881 ;;      Locals:         0       6       0       0       0       0       0
  2882 ;;      Temps:          0       2       0       0       0       0       0
  2883 ;;      Totals:         0      10       0       0       0       0       0
  2884 ;;Total ram usage:       10 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 13
  2887 ;; This function calls:
  2888 ;;		_printf
  2889 ;; This function is called by:
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text1
  2895   000D48                     __ptext1:
  2896                           	callstack 0
  2897   000D48                     _hexDumpBuffer:
  2898                           	callstack 17
  2899   000D48                     
  2900                           ;sdCard.c: 160:             printf("  ");;sdCard.c: 161:             for (j = i - 16; j 
      +                          < i; j++);sdCard.c: 163:                 if (sdCardBuffer[j] < 32);sdCard.c: 164:       
      +                                    {;sdCard.c: 166:                 }
  2901   000D48  0EF3               	movlw	low STR_61
  2902   000D4A  0100               	movlb	0	; () banked
  2903   000D4C  6F8C               	movwf	printf@fmt& (0+255),b
  2904   000D4E  0E7F               	movlw	high STR_61
  2905   000D50  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2906   000D52  ECA3  F00E         	call	_printf	;wreg free
  2907   000D56                     
  2908                           ;sdCard.c: 167:                 else
  2909   000D56  0E00               	movlw	0
  2910   000D58  0100               	movlb	0	; () banked
  2911   000D5A  6F9D               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  2912   000D5C  0E00               	movlw	0
  2913   000D5E  6F9C               	movwf	hexDumpBuffer@i& (0+255),b
  2914   000D60                     l3977:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;sdCard.c: 168:                 {;sdCard.c: 169:                     printf("%c", sdCard
      +                          Buffer[j]);
  2918   000D60  519C               	movf	hexDumpBuffer@i& (0+255),w,b
  2919   000D62  119D               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2920   000D64  B4D8               	btfsc	status,2,c
  2921   000D66  EFB7  F006         	goto	u3061
  2922   000D6A  EFB9  F006         	goto	u3060
  2923   000D6E                     u3061:
  2924   000D6E  EFCE  F006         	goto	l3983
  2925   000D72                     u3060:
  2926   000D72                     
  2927                           ; BSR set to: 0
  2928   000D72  0E07               	movlw	7
  2929   000D74  159C               	andwf	hexDumpBuffer@i& (0+255),w,b
  2930   000D76  6F96               	movwf	??_hexDumpBuffer& (0+255),b
  2931   000D78  0E00               	movlw	0
  2932   000D7A  159D               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2933   000D7C  6F97               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  2934   000D7E  5196               	movf	??_hexDumpBuffer& (0+255),w,b
  2935   000D80  1197               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  2936   000D82  A4D8               	btfss	status,2,c
  2937   000D84  EFC6  F006         	goto	u3071
  2938   000D88  EFC8  F006         	goto	u3070
  2939   000D8C                     u3071:
  2940   000D8C  EFCE  F006         	goto	l3983
  2941   000D90                     u3070:
  2942   000D90                     
  2943                           ; BSR set to: 0
  2944   000D90  0E9D               	movlw	low (STR_44+15)
  2945   000D92  6F8C               	movwf	printf@fmt& (0+255),b
  2946   000D94  0E7F               	movlw	high (STR_44+15)
  2947   000D96  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2948   000D98  ECA3  F00E         	call	_printf	;wreg free
  2949   000D9C                     l3983:
  2950                           
  2951                           ;sdCard.c: 170:                 }
  2952   000D9C  0100               	movlb	0	; () banked
  2953   000D9E  519C               	movf	hexDumpBuffer@i& (0+255),w,b
  2954   000DA0  119D               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2955   000DA2  B4D8               	btfsc	status,2,c
  2956   000DA4  EFD6  F006         	goto	u3081
  2957   000DA8  EFD8  F006         	goto	u3080
  2958   000DAC                     u3081:
  2959   000DAC  EF31  F007         	goto	l451
  2960   000DB0                     u3080:
  2961   000DB0                     
  2962                           ; BSR set to: 0
  2963   000DB0  0E0F               	movlw	15
  2964   000DB2  159C               	andwf	hexDumpBuffer@i& (0+255),w,b
  2965   000DB4  6F96               	movwf	??_hexDumpBuffer& (0+255),b
  2966   000DB6  0E00               	movlw	0
  2967   000DB8  159D               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  2968   000DBA  6F97               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  2969   000DBC  5196               	movf	??_hexDumpBuffer& (0+255),w,b
  2970   000DBE  1197               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  2971   000DC0  A4D8               	btfss	status,2,c
  2972   000DC2  EFE5  F006         	goto	u3091
  2973   000DC6  EFE7  F006         	goto	u3090
  2974   000DCA                     u3091:
  2975   000DCA  EF31  F007         	goto	l451
  2976   000DCE                     u3090:
  2977   000DCE                     
  2978                           ; BSR set to: 0
  2979                           ;sdCard.c: 171:             };sdCard.c: 172:             printf("\r\n");
  2980   000DCE  0E9C               	movlw	low (STR_44+14)
  2981   000DD0  6F8C               	movwf	printf@fmt& (0+255),b
  2982   000DD2  0E7F               	movlw	high (STR_44+14)
  2983   000DD4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  2984   000DD6  ECA3  F00E         	call	_printf	;wreg free
  2985   000DDA                     
  2986                           ;sdCard.c: 173:         }
  2987   000DDA  0EF0               	movlw	240
  2988   000DDC  0100               	movlb	0	; () banked
  2989   000DDE  259C               	addwf	hexDumpBuffer@i& (0+255),w,b
  2990   000DE0  6F98               	movwf	hexDumpBuffer@j& (0+255),b
  2991   000DE2  0EFF               	movlw	255
  2992   000DE4  219D               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  2993   000DE6  6F99               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  2994   000DE8  EF20  F007         	goto	l3999
  2995   000DEC                     l3991:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;sdCard.c: 174:         printf("%02x ", sdCardBuffer[i]);;sdCard.c: 175:     }
  2999   000DEC  5198               	movf	hexDumpBuffer@j& (0+255),w,b
  3000   000DEE  2594               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3001   000DF0  6ED9               	movwf	fsr2l,c
  3002   000DF2  5199               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  3003   000DF4  2195               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3004   000DF6  6EDA               	movwf	fsr2h,c
  3005   000DF8  0E20               	movlw	32
  3006   000DFA  60DF               	cpfslt	indf2,c
  3007   000DFC  EF02  F007         	goto	u3101
  3008   000E00  EF04  F007         	goto	u3100
  3009   000E04                     u3101:
  3010   000E04  EF0C  F007         	goto	l3995
  3011   000E08                     u3100:
  3012   000E08                     
  3013                           ; BSR set to: 0
  3014                           ;sdCard.c: 176:     printf("   ");;sdCard.c: 177:     for (int j = i - 16; j < i; j++)
  3015   000E08  0EFA               	movlw	low STR_64
  3016   000E0A  6F8C               	movwf	printf@fmt& (0+255),b
  3017   000E0C  0E7F               	movlw	high STR_64
  3018   000E0E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3019   000E10  ECA3  F00E         	call	_printf	;wreg free
  3020                           
  3021                           ;sdCard.c: 178:     {
  3022   000E14  EF1D  F007         	goto	l3997
  3023   000E18                     l3995:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;sdCard.c: 180:         {;sdCard.c: 181:             printf(".");
  3027   000E18  0EF7               	movlw	low STR_65
  3028   000E1A  6F8C               	movwf	printf@fmt& (0+255),b
  3029   000E1C  0E7F               	movlw	high STR_65
  3030   000E1E  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3031   000E20  5198               	movf	hexDumpBuffer@j& (0+255),w,b
  3032   000E22  2594               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3033   000E24  6ED9               	movwf	fsr2l,c
  3034   000E26  5199               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  3035   000E28  2195               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3036   000E2A  6EDA               	movwf	fsr2h,c
  3037   000E2C  50DF               	movf	indf2,w,c
  3038   000E2E  6F96               	movwf	??_hexDumpBuffer& (0+255),b
  3039   000E30  5196               	movf	??_hexDumpBuffer& (0+255),w,b
  3040   000E32  6F8E               	movwf	(?_printf+2)& (0+255),b
  3041   000E34  6B8F               	clrf	(?_printf+3)& (0+255),b
  3042   000E36  ECA3  F00E         	call	_printf	;wreg free
  3043   000E3A                     l3997:
  3044                           
  3045                           ;sdCard.c: 183:         else
  3046   000E3A  0100               	movlb	0	; () banked
  3047   000E3C  4B98               	infsnz	hexDumpBuffer@j& (0+255),f,b
  3048   000E3E  2B99               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  3049   000E40                     l3999:
  3050                           
  3051                           ; BSR set to: 0
  3052   000E40  519C               	movf	hexDumpBuffer@i& (0+255),w,b
  3053   000E42  5D98               	subwf	hexDumpBuffer@j& (0+255),w,b
  3054   000E44  519D               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3055   000E46  5999               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  3056   000E48  A0D8               	btfss	status,0,c
  3057   000E4A  EF29  F007         	goto	u3111
  3058   000E4E  EF2B  F007         	goto	u3110
  3059   000E52                     u3111:
  3060   000E52  EFF6  F006         	goto	l3991
  3061   000E56                     u3110:
  3062   000E56                     
  3063                           ; BSR set to: 0
  3064                           ;sdCard.c: 184:         {
  3065   000E56  0EAB               	movlw	low (STR_50+12)
  3066   000E58  6F8C               	movwf	printf@fmt& (0+255),b
  3067   000E5A  0E7F               	movlw	high (STR_50+12)
  3068   000E5C  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3069   000E5E  ECA3  F00E         	call	_printf	;wreg free
  3070   000E62                     l451:
  3071                           
  3072                           ;sdCard.c: 186:         }
  3073   000E62  0EE3               	movlw	low STR_67
  3074   000E64  0100               	movlb	0	; () banked
  3075   000E66  6F8C               	movwf	printf@fmt& (0+255),b
  3076   000E68  0E7F               	movlw	high STR_67
  3077   000E6A  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3078   000E6C  519C               	movf	hexDumpBuffer@i& (0+255),w,b
  3079   000E6E  2594               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3080   000E70  6ED9               	movwf	fsr2l,c
  3081   000E72  519D               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3082   000E74  2195               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3083   000E76  6EDA               	movwf	fsr2h,c
  3084   000E78  50DF               	movf	indf2,w,c
  3085   000E7A  6F96               	movwf	??_hexDumpBuffer& (0+255),b
  3086   000E7C  5196               	movf	??_hexDumpBuffer& (0+255),w,b
  3087   000E7E  6F8E               	movwf	(?_printf+2)& (0+255),b
  3088   000E80  6B8F               	clrf	(?_printf+3)& (0+255),b
  3089   000E82  ECA3  F00E         	call	_printf	;wreg free
  3090   000E86                     
  3091                           ;sdCard.c: 187:     }
  3092   000E86  0100               	movlb	0	; () banked
  3093   000E88  4B9C               	infsnz	hexDumpBuffer@i& (0+255),f,b
  3094   000E8A  2B9D               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  3095   000E8C                     
  3096                           ; BSR set to: 0
  3097   000E8C  0E02               	movlw	2
  3098   000E8E  5D9D               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  3099   000E90  A0D8               	btfss	status,0,c
  3100   000E92  EF4D  F007         	goto	u3121
  3101   000E96  EF4F  F007         	goto	u3120
  3102   000E9A                     u3121:
  3103   000E9A  EFB0  F006         	goto	l3977
  3104   000E9E                     u3120:
  3105   000E9E                     
  3106                           ; BSR set to: 0
  3107                           ;sdCard.c: 188:     printf("\r\n");
  3108   000E9E  0E9B               	movlw	low (STR_44+13)
  3109   000EA0  6F8C               	movwf	printf@fmt& (0+255),b
  3110   000EA2  0E7F               	movlw	high (STR_44+13)
  3111   000EA4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3112   000EA6  ECA3  F00E         	call	_printf	;wreg free
  3113   000EAA                     
  3114                           ;sdCard.c: 189: }
  3115   000EAA  0EF0               	movlw	240
  3116   000EAC  0100               	movlb	0	; () banked
  3117   000EAE  259C               	addwf	hexDumpBuffer@i& (0+255),w,b
  3118   000EB0  6F9A               	movwf	hexDumpBuffer@j_1176& (0+255),b
  3119   000EB2  0EFF               	movlw	255
  3120   000EB4  219D               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  3121   000EB6  6F9B               	movwf	(hexDumpBuffer@j_1176+1)& (0+255),b
  3122   000EB8  EF88  F007         	goto	l4019
  3123   000EBC                     l4011:
  3124                           
  3125                           ; BSR set to: 0
  3126   000EBC  519A               	movf	hexDumpBuffer@j_1176& (0+255),w,b
  3127   000EBE  2594               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3128   000EC0  6ED9               	movwf	fsr2l,c
  3129   000EC2  519B               	movf	(hexDumpBuffer@j_1176+1)& (0+255),w,b
  3130   000EC4  2195               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3131   000EC6  6EDA               	movwf	fsr2h,c
  3132   000EC8  0E20               	movlw	32
  3133   000ECA  60DF               	cpfslt	indf2,c
  3134   000ECC  EF6A  F007         	goto	u3131
  3135   000ED0  EF6C  F007         	goto	u3130
  3136   000ED4                     u3131:
  3137   000ED4  EF74  F007         	goto	l4015
  3138   000ED8                     u3130:
  3139   000ED8                     
  3140                           ; BSR set to: 0
  3141   000ED8  0EFA               	movlw	low STR_64
  3142   000EDA  6F8C               	movwf	printf@fmt& (0+255),b
  3143   000EDC  0E7F               	movlw	high STR_64
  3144   000EDE  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3145   000EE0  ECA3  F00E         	call	_printf	;wreg free
  3146   000EE4  EF85  F007         	goto	l4017
  3147   000EE8                     l4015:
  3148                           
  3149                           ; BSR set to: 0
  3150   000EE8  0EF7               	movlw	low STR_65
  3151   000EEA  6F8C               	movwf	printf@fmt& (0+255),b
  3152   000EEC  0E7F               	movlw	high STR_65
  3153   000EEE  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3154   000EF0  519A               	movf	hexDumpBuffer@j_1176& (0+255),w,b
  3155   000EF2  2594               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  3156   000EF4  6ED9               	movwf	fsr2l,c
  3157   000EF6  519B               	movf	(hexDumpBuffer@j_1176+1)& (0+255),w,b
  3158   000EF8  2195               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  3159   000EFA  6EDA               	movwf	fsr2h,c
  3160   000EFC  50DF               	movf	indf2,w,c
  3161   000EFE  6F96               	movwf	??_hexDumpBuffer& (0+255),b
  3162   000F00  5196               	movf	??_hexDumpBuffer& (0+255),w,b
  3163   000F02  6F8E               	movwf	(?_printf+2)& (0+255),b
  3164   000F04  6B8F               	clrf	(?_printf+3)& (0+255),b
  3165   000F06  ECA3  F00E         	call	_printf	;wreg free
  3166   000F0A                     l4017:
  3167   000F0A  0100               	movlb	0	; () banked
  3168   000F0C  4B9A               	infsnz	hexDumpBuffer@j_1176& (0+255),f,b
  3169   000F0E  2B9B               	incf	(hexDumpBuffer@j_1176+1)& (0+255),f,b
  3170   000F10                     l4019:
  3171                           
  3172                           ; BSR set to: 0
  3173   000F10  519C               	movf	hexDumpBuffer@i& (0+255),w,b
  3174   000F12  5D9A               	subwf	hexDumpBuffer@j_1176& (0+255),w,b
  3175   000F14  519D               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  3176   000F16  599B               	subwfb	(hexDumpBuffer@j_1176+1)& (0+255),w,b
  3177   000F18  A0D8               	btfss	status,0,c
  3178   000F1A  EF91  F007         	goto	u3141
  3179   000F1E  EF93  F007         	goto	u3140
  3180   000F22                     u3141:
  3181   000F22  EF5E  F007         	goto	l4011
  3182   000F26                     u3140:
  3183   000F26                     
  3184                           ; BSR set to: 0
  3185   000F26  0EAB               	movlw	low (STR_50+12)
  3186   000F28  6F8C               	movwf	printf@fmt& (0+255),b
  3187   000F2A  0E7F               	movlw	high (STR_50+12)
  3188   000F2C  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  3189   000F2E  ECA3  F00E         	call	_printf	;wreg free
  3190   000F32  0012               	return		;funcret
  3191   000F34                     __end_of_hexDumpBuffer:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function _TMR0_WriteTimer *****************
  3195 ;; Defined at:
  3196 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  timerVal        2   14[COMRAM] unsigned short 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;		None
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3210 ;;      Params:         2       0       0       0       0       0       0
  3211 ;;      Locals:         0       0       0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0
  3213 ;;      Totals:         2       0       0       0       0       0       0
  3214 ;;Total ram usage:        2 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 4
  3217 ;; This function calls:
  3218 ;;		Nothing
  3219 ;; This function is called by:
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text2
  3225   001E66                     __ptext2:
  3226                           	callstack 0
  3227   001E66                     _TMR0_WriteTimer:
  3228                           	callstack 26
  3229   001E66                     
  3230                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3231   001E66  5010               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3232   001E68  6ED7               	movwf	215,c	;volatile
  3233   001E6A                     
  3234                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3235   001E6A  C00F  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3236   001E6E  0012               	return		;funcret
  3237   001E70                     __end_of_TMR0_WriteTimer:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _SYSTEM_Initialize *****************
  3241 ;; Defined at:
  3242 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3256 ;;      Params:         0       0       0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0
  3258 ;;      Temps:          0       0       0       0       0       0       0
  3259 ;;      Totals:         0       0       0       0       0       0       0
  3260 ;;Total ram usage:        0 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 6
  3263 ;; This function calls:
  3264 ;;		_EUSART1_Initialize
  3265 ;;		_INTERRUPT_Initialize
  3266 ;;		_OSCILLATOR_Initialize
  3267 ;;		_PIN_MANAGER_Initialize
  3268 ;;		_SPI2_Initialize
  3269 ;;		_TMR0_Initialize
  3270 ;; This function is called by:
  3271 ;;		_main
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text3
  3276   001DF6                     __ptext3:
  3277                           	callstack 0
  3278   001DF6                     _SYSTEM_Initialize:
  3279                           	callstack 24
  3280   001DF6                     
  3281                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3282   001DF6  EC56  F00F         	call	_INTERRUPT_Initialize	;wreg free
  3283   001DFA                     
  3284                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  3285   001DFA  EC2A  F00F         	call	_SPI2_Initialize	;wreg free
  3286   001DFE                     
  3287                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  3288   001DFE  EC76  F00E         	call	_PIN_MANAGER_Initialize	;wreg free
  3289   001E02                     
  3290                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  3291   001E02  ECED  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  3292   001E06                     
  3293                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  3294   001E06  EC5B  F00E         	call	_TMR0_Initialize	;wreg free
  3295   001E0A                     
  3296                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  3297   001E0A  ECC8  F00D         	call	_EUSART1_Initialize	;wreg free
  3298   001E0E  0012               	return		;funcret
  3299   001E10                     __end_of_SYSTEM_Initialize:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _TMR0_Initialize *****************
  3303 ;; Defined at:
  3304 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;		None
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;		None
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, status,2, status,0, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3318 ;;      Params:         0       0       0       0       0       0       0
  3319 ;;      Locals:         0       0       0       0       0       0       0
  3320 ;;      Temps:          2       0       0       0       0       0       0
  3321 ;;      Totals:         2       0       0       0       0       0       0
  3322 ;;Total ram usage:        2 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 5
  3325 ;; This function calls:
  3326 ;;		_TMR0_SetInterruptHandler
  3327 ;; This function is called by:
  3328 ;;		_SYSTEM_Initialize
  3329 ;; This function uses a non-reentrant model
  3330 ;;
  3331                           
  3332                           	psect	text4
  3333   001CB6                     __ptext4:
  3334                           	callstack 0
  3335   001CB6                     _TMR0_Initialize:
  3336                           	callstack 24
  3337   001CB6                     
  3338                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3339   001CB6  9CD5               	bcf	213,6,c	;volatile
  3340   001CB8                     
  3341                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  3342   001CB8  0E00               	movlw	0
  3343   001CBA  6ED7               	movwf	215,c	;volatile
  3344                           
  3345                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  3346   001CBC  0E00               	movlw	0
  3347   001CBE  6ED6               	movwf	214,c	;volatile
  3348   001CC0                     
  3349                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3350   001CC0  50D6               	movf	214,w,c	;volatile
  3351   001CC2  CFD7 F011          	movff	4055,??_TMR0_Initialize	;volatile
  3352   001CC6  6A12               	clrf	(??_TMR0_Initialize+1)^0,c
  3353   001CC8  C011  F012         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3354   001CCC  6A11               	clrf	??_TMR0_Initialize^0,c
  3355   001CCE  1011               	iorwf	??_TMR0_Initialize^0,w,c
  3356   001CD0  6E4A               	movwf	_timer0ReloadVal^0,c	;volatile
  3357   001CD2  5012               	movf	(??_TMR0_Initialize+1)^0,w,c
  3358   001CD4  6E4B               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3359   001CD6                     
  3360                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3361   001CD6  94F2               	bcf	242,2,c	;volatile
  3362   001CD8                     
  3363                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3364   001CD8  8AF2               	bsf	242,5,c	;volatile
  3365   001CDA                     
  3366                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3367   001CDA  0EB4               	movlw	low _TMR0_DefaultInterruptHandler
  3368   001CDC  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3369   001CDE  0E1E               	movlw	high _TMR0_DefaultInterruptHandler
  3370   001CE0  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3371   001CE2  EC38  F00F         	call	_TMR0_SetInterruptHandler	;wreg free
  3372   001CE6                     
  3373                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  3374   001CE6  0E9F               	movlw	159
  3375   001CE8  6ED5               	movwf	213,c	;volatile
  3376   001CEA  0012               	return		;funcret
  3377   001CEC                     __end_of_TMR0_Initialize:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _TMR0_SetInterruptHandler *****************
  3381 ;; Defined at:
  3382 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  3385 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3397 ;;      Params:         2       0       0       0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0
  3400 ;;      Totals:         2       0       0       0       0       0       0
  3401 ;;Total ram usage:        2 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 4
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_TMR0_Initialize
  3408 ;;		_main
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text5
  3413   001E70                     __ptext5:
  3414                           	callstack 0
  3415   001E70                     _TMR0_SetInterruptHandler:
  3416                           	callstack 26
  3417   001E70                     
  3418                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3419   001E70  C00F  F04C         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3420   001E74  C010  F04D         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3421   001E78  0012               	return		;funcret
  3422   001E7A                     __end_of_TMR0_SetInterruptHandler:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _SPI2_Initialize *****************
  3426 ;; Defined at:
  3427 ;;		line 62 in file "mcc_generated_files/spi2.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3441 ;;      Params:         0       0       0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 4
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_SYSTEM_Initialize
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text6
  3456   001E54                     __ptext6:
  3457                           	callstack 0
  3458   001E54                     _SPI2_Initialize:
  3459                           	callstack 25
  3460   001E54                     
  3461                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  3462   001E54  0E40               	movlw	64
  3463   001E56  6E6D               	movwf	109,c	;volatile
  3464                           
  3465                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  3466   001E58  0E01               	movlw	1
  3467   001E5A  6E6C               	movwf	108,c	;volatile
  3468                           
  3469                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  3470   001E5C  0E01               	movlw	1
  3471   001E5E  6E6E               	movwf	110,c	;volatile
  3472   001E60                     
  3473                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  3474   001E60  9293               	bcf	147,1,c	;volatile
  3475   001E62                     
  3476                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  3477   001E62  9A6C               	bcf	108,5,c	;volatile
  3478   001E64  0012               	return		;funcret
  3479   001E66                     __end_of_SPI2_Initialize:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function _PIN_MANAGER_Initialize *****************
  3483 ;; Defined at:
  3484 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;		None
  3487 ;; Auto vars:     Size  Location     Type
  3488 ;;		None
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3498 ;;      Params:         0       0       0       0       0       0       0
  3499 ;;      Locals:         0       0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0
  3501 ;;      Totals:         0       0       0       0       0       0       0
  3502 ;;Total ram usage:        0 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; Hardware stack levels required when called: 4
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		_SYSTEM_Initialize
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text7
  3513   001CEC                     __ptext7:
  3514                           	callstack 0
  3515   001CEC                     _PIN_MANAGER_Initialize:
  3516                           	callstack 25
  3517   001CEC                     
  3518                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3519   001CEC  0E00               	movlw	0
  3520   001CEE  6E89               	movwf	137,c	;volatile
  3521                           
  3522                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3523   001CF0  0E00               	movlw	0
  3524   001CF2  6E8A               	movwf	138,c	;volatile
  3525                           
  3526                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3527   001CF4  0E00               	movlw	0
  3528   001CF6  6E8B               	movwf	139,c	;volatile
  3529                           
  3530                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  3531   001CF8  0EBF               	movlw	191
  3532   001CFA  6E92               	movwf	146,c	;volatile
  3533                           
  3534                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  3535   001CFC  0EE5               	movlw	229
  3536   001CFE  6E93               	movwf	147,c	;volatile
  3537                           
  3538                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x8F;
  3539   001D00  0E8F               	movlw	143
  3540   001D02  6E94               	movwf	148,c	;volatile
  3541                           
  3542                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3543   001D04  0E3C               	movlw	60
  3544   001D06  010F               	movlb	15	; () banked
  3545   001D08  6F3A               	movwf	58,b	;volatile
  3546                           
  3547                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  3548   001D0A  0E31               	movlw	49
  3549   001D0C  6F39               	movwf	57,b	;volatile
  3550                           
  3551                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3552   001D0E  0E2F               	movlw	47
  3553   001D10  6F38               	movwf	56,b	;volatile
  3554                           
  3555                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3556   001D12  0E00               	movlw	0
  3557   001D14  6E61               	movwf	97,c	;volatile
  3558   001D16                     
  3559                           ; BSR set to: 15
  3560                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3561   001D16  8EF1               	bsf	241,7,c	;volatile
  3562   001D18                     
  3563                           ; BSR set to: 15
  3564   001D18  0012               	return		;funcret
  3565   001D1A                     __end_of_PIN_MANAGER_Initialize:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _OSCILLATOR_Initialize *****************
  3569 ;; Defined at:
  3570 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3584 ;;      Params:         0       0       0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 4
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_SYSTEM_Initialize
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text8
  3599   001DDA                     __ptext8:
  3600                           	callstack 0
  3601   001DDA                     _OSCILLATOR_Initialize:
  3602                           	callstack 25
  3603   001DDA                     
  3604                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  3605   001DDA  0E70               	movlw	112
  3606   001DDC  6ED3               	movwf	211,c	;volatile
  3607                           
  3608                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  3609   001DDE  0E04               	movlw	4
  3610   001DE0  6ED2               	movwf	210,c	;volatile
  3611                           
  3612                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  3613   001DE2  0E40               	movlw	64
  3614   001DE4  6E9B               	movwf	155,c	;volatile
  3615   001DE6                     l175:
  3616                           
  3617                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  3618   001DE6  AED2               	btfss	4050,7,c	;volatile
  3619   001DE8  EFF8  F00E         	goto	u1891
  3620   001DEC  EFFA  F00E         	goto	u1890
  3621   001DF0                     u1891:
  3622   001DF0  EFF3  F00E         	goto	l175
  3623   001DF4                     u1890:
  3624   001DF4  0012               	return		;funcret
  3625   001DF6                     __end_of_OSCILLATOR_Initialize:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _INTERRUPT_Initialize *****************
  3629 ;; Defined at:
  3630 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		None
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3644 ;;      Params:         0       0       0       0       0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0
  3647 ;;      Totals:         0       0       0       0       0       0       0
  3648 ;;Total ram usage:        0 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 4
  3651 ;; This function calls:
  3652 ;;		Nothing
  3653 ;; This function is called by:
  3654 ;;		_SYSTEM_Initialize
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text9
  3659   001EAC                     __ptext9:
  3660                           	callstack 0
  3661   001EAC                     _INTERRUPT_Initialize:
  3662                           	callstack 25
  3663   001EAC                     
  3664                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3665   001EAC  9ED0               	bcf	208,7,c	;volatile
  3666   001EAE  0012               	return		;funcret
  3667   001EB0                     __end_of_INTERRUPT_Initialize:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _EUSART1_Initialize *****************
  3671 ;; Defined at:
  3672 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3686 ;;      Params:         0       0       0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; Hardware stack levels required when called: 5
  3693 ;; This function calls:
  3694 ;;		_EUSART1_SetErrorHandler
  3695 ;;		_EUSART1_SetFramingErrorHandler
  3696 ;;		_EUSART1_SetOverrunErrorHandler
  3697 ;; This function is called by:
  3698 ;;		_SYSTEM_Initialize
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text10
  3703   001B90                     __ptext10:
  3704                           	callstack 0
  3705   001B90                     _EUSART1_Initialize:
  3706                           	callstack 24
  3707   001B90                     
  3708                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3709   001B90  0E08               	movlw	8
  3710   001B92  6EB8               	movwf	184,c	;volatile
  3711                           
  3712                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3713   001B94  0E90               	movlw	144
  3714   001B96  6EAB               	movwf	171,c	;volatile
  3715                           
  3716                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3717   001B98  0E24               	movlw	36
  3718   001B9A  6EAC               	movwf	172,c	;volatile
  3719                           
  3720                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3721   001B9C  0E82               	movlw	130
  3722   001B9E  6EAF               	movwf	175,c	;volatile
  3723                           
  3724                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3725   001BA0  0E06               	movlw	6
  3726   001BA2  6EB0               	movwf	176,c	;volatile
  3727   001BA4                     
  3728                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3729   001BA4  0E00               	movlw	0
  3730   001BA6  6E0F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3731   001BA8  0E00               	movlw	0
  3732   001BAA  6E10               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3733   001BAC  EC42  F00F         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3734   001BB0                     
  3735                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3736   001BB0  0E00               	movlw	0
  3737   001BB2  6E0F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3738   001BB4  0E00               	movlw	0
  3739   001BB6  6E10               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3740   001BB8  EC3D  F00F         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3741   001BBC                     
  3742                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3743   001BBC  0E00               	movlw	0
  3744   001BBE  6E0F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3745   001BC0  0E00               	movlw	0
  3746   001BC2  6E10               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3747   001BC4  EC47  F00F         	call	_EUSART1_SetErrorHandler	;wreg free
  3748   001BC8                     
  3749                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3750   001BC8  0E00               	movlw	0
  3751   001BCA  6E4F               	movwf	_eusart1RxLastError^0,c	;volatile
  3752   001BCC  0012               	return		;funcret
  3753   001BCE                     __end_of_EUSART1_Initialize:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3757 ;; Defined at:
  3758 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  3761 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3773 ;;      Params:         2       0       0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0       0       0
  3776 ;;      Totals:         2       0       0       0       0       0       0
  3777 ;;Total ram usage:        2 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 4
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_EUSART1_Initialize
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text11
  3788   001E7A                     __ptext11:
  3789                           	callstack 0
  3790   001E7A                     _EUSART1_SetOverrunErrorHandler:
  3791                           	callstack 24
  3792   001E7A                     
  3793                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3794   001E7A  C00F  F046         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3795   001E7E  C010  F047         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3796   001E82  0012               	return		;funcret
  3797   001E84                     __end_of_EUSART1_SetOverrunErrorHandler:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3801 ;; Defined at:
  3802 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  3805 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3817 ;;      Params:         2       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0
  3820 ;;      Totals:         2       0       0       0       0       0       0
  3821 ;;Total ram usage:        2 bytes
  3822 ;; Hardware stack levels used: 1
  3823 ;; Hardware stack levels required when called: 4
  3824 ;; This function calls:
  3825 ;;		Nothing
  3826 ;; This function is called by:
  3827 ;;		_EUSART1_Initialize
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text12
  3832   001E84                     __ptext12:
  3833                           	callstack 0
  3834   001E84                     _EUSART1_SetFramingErrorHandler:
  3835                           	callstack 24
  3836   001E84                     
  3837                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3838   001E84  C00F  F048         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3839   001E88  C010  F049         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3840   001E8C  0012               	return		;funcret
  3841   001E8E                     __end_of_EUSART1_SetFramingErrorHandler:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _EUSART1_SetErrorHandler *****************
  3845 ;; Defined at:
  3846 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  3849 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3861 ;;      Params:         2       0       0       0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0
  3864 ;;      Totals:         2       0       0       0       0       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 4
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_EUSART1_Initialize
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text13
  3876   001E8E                     __ptext13:
  3877                           	callstack 0
  3878   001E8E                     _EUSART1_SetErrorHandler:
  3879                           	callstack 24
  3880   001E8E                     
  3881                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3882   001E8E  C00F  F0A9         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3883   001E92  C010  F0AA         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3884   001E96  0012               	return		;funcret
  3885   001E98                     __end_of_EUSART1_SetErrorHandler:
  3886                           	callstack 0
  3887                           
  3888 ;; *************** function _SPI2_Open *****************
  3889 ;; Defined at:
  3890 ;;		line 72 in file "mcc_generated_files/spi2.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  spi2UniqueCo    1    wreg     enum E355
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  spi2UniqueCo    1   15[COMRAM] enum E355
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      _Bool 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3904 ;;      Params:         0       0       0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0       0       0
  3906 ;;      Temps:          1       0       0       0       0       0       0
  3907 ;;      Totals:         2       0       0       0       0       0       0
  3908 ;;Total ram usage:        2 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 4
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text14
  3919   001952                     __ptext14:
  3920                           	callstack 0
  3921   001952                     _SPI2_Open:
  3922                           	callstack 26
  3923                           
  3924                           ;incstack = 0
  3925                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  3926   001952  6E10               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  3927   001954                     
  3928                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  3929   001954  BA6C               	btfsc	108,5,c	;volatile
  3930   001956  EFAF  F00C         	goto	u1921
  3931   00195A  EFB1  F00C         	goto	u1920
  3932   00195E                     u1921:
  3933   00195E  EFF2  F00C         	goto	l313
  3934   001962                     u1920:
  3935   001962                     
  3936                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  3937   001962  5010               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  3938   001964  0D04               	mullw	4
  3939   001966  0E01               	movlw	1
  3940   001968  26F3               	addwf	243,f,c
  3941   00196A  0E00               	movlw	0
  3942   00196C  22F4               	addwfc	244,f,c
  3943   00196E  0E8D               	movlw	low _spi2_configuration
  3944   001970  24F3               	addwf	243,w,c
  3945   001972  6EF6               	movwf	tblptrl,c
  3946   001974  0E7B               	movlw	high _spi2_configuration
  3947   001976  20F4               	addwfc	244,w,c
  3948   001978  6EF7               	movwf	tblptrh,c
  3949   00197A                     	if	0	;There are less than 3 active tblptr bytes
  3950   00197A                     	endif
  3951   00197A  0008               	tblrd		*
  3952   00197C  CFF5 FF6D          	movff	tablat,3949	;volatile
  3953                           
  3954                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  3955   001980  5010               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  3956   001982  0D04               	mullw	4
  3957   001984  0E8D               	movlw	low _spi2_configuration
  3958   001986  24F3               	addwf	243,w,c
  3959   001988  6EF6               	movwf	tblptrl,c
  3960   00198A  0E7B               	movlw	high _spi2_configuration
  3961   00198C  20F4               	addwfc	244,w,c
  3962   00198E  6EF7               	movwf	tblptrh,c
  3963   001990                     	if	0	;There are less than 3 active tblptr bytes
  3964   001990                     	endif
  3965   001990  0008               	tblrd		*
  3966   001992  CFF5 FF6C          	movff	tablat,3948	;volatile
  3967   001996                     
  3968                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  3969   001996  0E00               	movlw	0
  3970   001998  6E6B               	movwf	107,c	;volatile
  3971   00199A                     
  3972                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  3973   00199A  5010               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  3974   00199C  0D04               	mullw	4
  3975   00199E  0E02               	movlw	2
  3976   0019A0  26F3               	addwf	243,f,c
  3977   0019A2  0E00               	movlw	0
  3978   0019A4  22F4               	addwfc	244,f,c
  3979   0019A6  0E8D               	movlw	low _spi2_configuration
  3980   0019A8  24F3               	addwf	243,w,c
  3981   0019AA  6EF6               	movwf	tblptrl,c
  3982   0019AC  0E7B               	movlw	high _spi2_configuration
  3983   0019AE  20F4               	addwfc	244,w,c
  3984   0019B0  6EF7               	movwf	tblptrh,c
  3985   0019B2                     	if	0	;There are less than 3 active tblptr bytes
  3986   0019B2                     	endif
  3987   0019B2  0008               	tblrd		*
  3988   0019B4  CFF5 FF6E          	movff	tablat,3950	;volatile
  3989   0019B8                     
  3990                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  3991   0019B8  5010               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  3992   0019BA  0D04               	mullw	4
  3993   0019BC  0E03               	movlw	3
  3994   0019BE  26F3               	addwf	243,f,c
  3995   0019C0  0E00               	movlw	0
  3996   0019C2  22F4               	addwfc	244,f,c
  3997   0019C4  0E8D               	movlw	low _spi2_configuration
  3998   0019C6  24F3               	addwf	243,w,c
  3999   0019C8  6EF6               	movwf	tblptrl,c
  4000   0019CA  0E7B               	movlw	high _spi2_configuration
  4001   0019CC  20F4               	addwfc	244,w,c
  4002   0019CE  6EF7               	movwf	tblptrh,c
  4003   0019D0                     	if	0	;There are less than 3 active tblptr bytes
  4004   0019D0                     	endif
  4005   0019D0  0008               	tblrd		*
  4006   0019D2  CFF5 F00F          	movff	tablat,??_SPI2_Open
  4007   0019D6  460F               	rlncf	??_SPI2_Open^0,f,c
  4008   0019D8  5093               	movf	147,w,c	;volatile
  4009   0019DA  180F               	xorwf	??_SPI2_Open^0,w,c
  4010   0019DC  0BFD               	andlw	-3
  4011   0019DE  180F               	xorwf	??_SPI2_Open^0,w,c
  4012   0019E0  6E93               	movwf	147,c	;volatile
  4013   0019E2                     
  4014                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  4015   0019E2  8A6C               	bsf	108,5,c	;volatile
  4016   0019E4                     l313:
  4017   0019E4  0012               	return		;funcret
  4018   0019E6                     __end_of_SPI2_Open:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _SPI2_Close *****************
  4022 ;; Defined at:
  4023 ;;		line 87 in file "mcc_generated_files/spi2.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		None
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4037 ;;      Params:         0       0       0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 4
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text15
  4052   001EB0                     __ptext15:
  4053                           	callstack 0
  4054   001EB0                     _SPI2_Close:
  4055                           	callstack 26
  4056   001EB0                     
  4057                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  4058   001EB0  9A6C               	bcf	108,5,c	;volatile
  4059   001EB2  0012               	return		;funcret
  4060   001EB4                     __end_of_SPI2_Close:
  4061                           	callstack 0
  4062                           
  4063 ;; *************** function _SDCARD_WriteBlock *****************
  4064 ;; Defined at:
  4065 ;;		line 106 in file "sdCard.c"
  4066 ;; Parameters:    Size  Location     Type
  4067 ;;  addr            4   15[COMRAM] unsigned long 
  4068 ;;  sdCardBuffer    2   19[COMRAM] PTR unsigned char 
  4069 ;;		 -> sdCardBuffer(512), 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  i               2   21[COMRAM] unsigned short 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4081 ;;      Params:         6       0       0       0       0       0       0
  4082 ;;      Locals:         2       0       0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0
  4084 ;;      Totals:         8       0       0       0       0       0       0
  4085 ;;Total ram usage:        8 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 5
  4088 ;; This function calls:
  4089 ;;		_SPI2_ExchangeByte
  4090 ;; This function is called by:
  4091 ;;		_main
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text16
  4096   0019E6                     __ptext16:
  4097                           	callstack 0
  4098   0019E6                     _SDCARD_WriteBlock:
  4099                           	callstack 25
  4100   0019E6  988A               	bcf	138,4,c	;volatile
  4101   0019E8                     
  4102                           ;sdCard.c: 114:     SPI2_ExchangeByte(0xFF);
  4103   0019E8  0EFF               	movlw	255
  4104   0019EA  EC08  F00F         	call	_SPI2_ExchangeByte
  4105   0019EE                     
  4106                           ;sdCard.c: 115: 
  4107   0019EE  0E58               	movlw	88
  4108   0019F0  EC08  F00F         	call	_SPI2_ExchangeByte
  4109   0019F4                     
  4110                           ;sdCard.c: 116:     SPI2_ExchangeByte(0xFE);
  4111   0019F4  5013               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  4112   0019F6  EC08  F00F         	call	_SPI2_ExchangeByte
  4113   0019FA                     
  4114                           ;sdCard.c: 117:     for (i = 0; i < 512; i++)
  4115   0019FA  5012               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  4116   0019FC  EC08  F00F         	call	_SPI2_ExchangeByte
  4117   001A00                     
  4118                           ;sdCard.c: 118:         SPI2_ExchangeByte(sdCardBuffer[i]);
  4119   001A00  5011               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  4120   001A02  EC08  F00F         	call	_SPI2_ExchangeByte
  4121   001A06                     
  4122                           ;sdCard.c: 119: 
  4123   001A06  5010               	movf	SDCARD_WriteBlock@addr^0,w,c
  4124   001A08  EC08  F00F         	call	_SPI2_ExchangeByte
  4125   001A0C                     
  4126                           ;sdCard.c: 120:     do { LATBbits.LATB4 = 1; } while(0);
  4127   001A0C  0EFF               	movlw	255
  4128   001A0E  EC08  F00F         	call	_SPI2_ExchangeByte
  4129   001A12                     l3059:
  4130   001A12  0EFF               	movlw	255
  4131   001A14  EC08  F00F         	call	_SPI2_ExchangeByte
  4132   001A18  0AFF               	xorlw	255
  4133   001A1A  B4D8               	btfsc	status,2,c
  4134   001A1C  EF12  F00D         	goto	u2021
  4135   001A20  EF14  F00D         	goto	u2020
  4136   001A24                     u2021:
  4137   001A24  EF09  F00D         	goto	l3059
  4138   001A28                     u2020:
  4139   001A28                     
  4140                           ;sdCard.c: 124: {
  4141   001A28  0EFF               	movlw	255
  4142   001A2A  EC08  F00F         	call	_SPI2_ExchangeByte
  4143                           
  4144                           ;sdCard.c: 125: 
  4145   001A2E  0EFF               	movlw	255
  4146   001A30  EC08  F00F         	call	_SPI2_ExchangeByte
  4147                           
  4148                           ;sdCard.c: 126:     uint8_t status;
  4149   001A34  0EFF               	movlw	255
  4150   001A36  EC08  F00F         	call	_SPI2_ExchangeByte
  4151                           
  4152                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 0; } while(0);
  4153   001A3A  0EFE               	movlw	254
  4154   001A3C  EC08  F00F         	call	_SPI2_ExchangeByte
  4155   001A40                     
  4156                           ;sdCard.c: 129:     status = SPI2_ExchangeByte(13);
  4157   001A40  0E00               	movlw	0
  4158   001A42  6E17               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  4159   001A44  0E00               	movlw	0
  4160   001A46  6E16               	movwf	SDCARD_WriteBlock@i^0,c
  4161   001A48                     l3069:
  4162                           
  4163                           ;sdCard.c: 130:     do { LATBbits.LATB4 = 1; } while(0);
  4164   001A48  5016               	movf	SDCARD_WriteBlock@i^0,w,c
  4165   001A4A  2414               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  4166   001A4C  6ED9               	movwf	fsr2l,c
  4167   001A4E  5017               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  4168   001A50  2015               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  4169   001A52  6EDA               	movwf	fsr2h,c
  4170   001A54  50DF               	movf	indf2,w,c
  4171   001A56  EC08  F00F         	call	_SPI2_ExchangeByte
  4172   001A5A  4A16               	infsnz	SDCARD_WriteBlock@i^0,f,c
  4173   001A5C  2A17               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  4174   001A5E  0E02               	movlw	2
  4175   001A60  5C17               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  4176   001A62  A0D8               	btfss	status,0,c
  4177   001A64  EF36  F00D         	goto	u2031
  4178   001A68  EF38  F00D         	goto	u2030
  4179   001A6C                     u2031:
  4180   001A6C  EF24  F00D         	goto	l3069
  4181   001A70                     u2030:
  4182   001A70  888A               	bsf	138,4,c	;volatile
  4183   001A72  0012               	return		;funcret
  4184   001A74                     __end_of_SDCARD_WriteBlock:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _SDCARD_ReadBlock *****************
  4188 ;; Defined at:
  4189 ;;		line 80 in file "sdCard.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  addr            4   15[COMRAM] unsigned long 
  4192 ;;  sdCardBuffer    2   19[COMRAM] PTR unsigned char 
  4193 ;;		 -> sdCardBuffer(512), 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  i               2   21[COMRAM] unsigned short 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4205 ;;      Params:         6       0       0       0       0       0       0
  4206 ;;      Locals:         2       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0
  4208 ;;      Totals:         8       0       0       0       0       0       0
  4209 ;;Total ram usage:        8 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 5
  4212 ;; This function calls:
  4213 ;;		_SPI2_ExchangeByte
  4214 ;; This function is called by:
  4215 ;;		_main
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text17
  4220   001822                     __ptext17:
  4221                           	callstack 0
  4222   001822                     _SDCARD_ReadBlock:
  4223                           	callstack 25
  4224   001822  988A               	bcf	138,4,c	;volatile
  4225   001824                     
  4226                           ;sdCard.c: 88:         sdCardBuffer[i] = SPI2_ExchangeByte(0xFF);
  4227   001824  0EFF               	movlw	255
  4228   001826  EC08  F00F         	call	_SPI2_ExchangeByte
  4229   00182A                     
  4230                           ;sdCard.c: 89:     SPI2_ExchangeByte(0xFF);
  4231   00182A  0E51               	movlw	81
  4232   00182C  EC08  F00F         	call	_SPI2_ExchangeByte
  4233   001830                     
  4234                           ;sdCard.c: 90:     SPI2_ExchangeByte(0xFF);
  4235   001830  5013               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  4236   001832  EC08  F00F         	call	_SPI2_ExchangeByte
  4237   001836                     
  4238                           ;sdCard.c: 91: 
  4239   001836  5012               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  4240   001838  EC08  F00F         	call	_SPI2_ExchangeByte
  4241   00183C                     
  4242                           ;sdCard.c: 92:     do { LATBbits.LATB4 = 1; } while(0);
  4243   00183C  5011               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  4244   00183E  EC08  F00F         	call	_SPI2_ExchangeByte
  4245   001842                     
  4246                           ;sdCard.c: 93: }
  4247   001842  5010               	movf	SDCARD_ReadBlock@addr^0,w,c
  4248   001844  EC08  F00F         	call	_SPI2_ExchangeByte
  4249   001848                     
  4250                           ;sdCard.c: 94: void SDCARD_WriteBlock(uint32_t addr, uint8_t sdCardBuffer[])
  4251   001848  0EFF               	movlw	255
  4252   00184A  EC08  F00F         	call	_SPI2_ExchangeByte
  4253   00184E                     l3111:
  4254   00184E  0EFF               	movlw	255
  4255   001850  EC08  F00F         	call	_SPI2_ExchangeByte
  4256   001854  0AFF               	xorlw	255
  4257   001856  B4D8               	btfsc	status,2,c
  4258   001858  EF30  F00C         	goto	u2051
  4259   00185C  EF32  F00C         	goto	u2050
  4260   001860                     u2051:
  4261   001860  EF27  F00C         	goto	l3111
  4262   001864                     u2050:
  4263   001864                     l3113:
  4264   001864  0EFF               	movlw	255
  4265   001866  EC08  F00F         	call	_SPI2_ExchangeByte
  4266   00186A  0AFF               	xorlw	255
  4267   00186C  B4D8               	btfsc	status,2,c
  4268   00186E  EF3B  F00C         	goto	u2061
  4269   001872  EF3D  F00C         	goto	u2060
  4270   001876                     u2061:
  4271   001876  EF32  F00C         	goto	l3113
  4272   00187A                     u2060:
  4273   00187A                     
  4274                           ;sdCard.c: 99: 
  4275   00187A  0E00               	movlw	0
  4276   00187C  6E17               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  4277   00187E  0E00               	movlw	0
  4278   001880  6E16               	movwf	SDCARD_ReadBlock@i^0,c
  4279   001882                     l3121:
  4280                           
  4281                           ;sdCard.c: 100:     do { LATBbits.LATB4 = 0; } while(0);
  4282   001882  5016               	movf	SDCARD_ReadBlock@i^0,w,c
  4283   001884  2414               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  4284   001886  6ED9               	movwf	fsr2l,c
  4285   001888  5017               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  4286   00188A  2015               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  4287   00188C  6EDA               	movwf	fsr2h,c
  4288   00188E  0EFF               	movlw	255
  4289   001890  EC08  F00F         	call	_SPI2_ExchangeByte
  4290   001894  6EDF               	movwf	indf2,c
  4291   001896  4A16               	infsnz	SDCARD_ReadBlock@i^0,f,c
  4292   001898  2A17               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  4293   00189A  0E02               	movlw	2
  4294   00189C  5C17               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  4295   00189E  A0D8               	btfss	status,0,c
  4296   0018A0  EF54  F00C         	goto	u2071
  4297   0018A4  EF56  F00C         	goto	u2070
  4298   0018A8                     u2071:
  4299   0018A8  EF41  F00C         	goto	l3121
  4300   0018AC                     u2070:
  4301   0018AC                     
  4302                           ;sdCard.c: 101: 
  4303   0018AC  0EFF               	movlw	255
  4304   0018AE  EC08  F00F         	call	_SPI2_ExchangeByte
  4305                           
  4306                           ;sdCard.c: 102:     SPI2_ExchangeByte(0xFF);
  4307   0018B2  0EFF               	movlw	255
  4308   0018B4  EC08  F00F         	call	_SPI2_ExchangeByte
  4309   0018B8  888A               	bsf	138,4,c	;volatile
  4310   0018BA  0012               	return		;funcret
  4311   0018BC                     __end_of_SDCARD_ReadBlock:
  4312                           	callstack 0
  4313                           
  4314 ;; *************** function _SDCARD_PollWriteComplete *****************
  4315 ;; Defined at:
  4316 ;;		line 135 in file "sdCard.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  status          1   15[COMRAM] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4330 ;;      Params:         0       0       0       0       0       0       0
  4331 ;;      Locals:         1       0       0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0
  4333 ;;      Totals:         1       0       0       0       0       0       0
  4334 ;;Total ram usage:        1 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 5
  4337 ;; This function calls:
  4338 ;;		_SPI2_ExchangeByte
  4339 ;; This function is called by:
  4340 ;;		_main
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text18
  4345   001C46                     __ptext18:
  4346                           	callstack 0
  4347   001C46                     _SDCARD_PollWriteComplete:
  4348                           	callstack 25
  4349   001C46  988A               	bcf	138,4,c	;volatile
  4350   001C48                     
  4351                           ;sdCard.c: 141:         (void) SPI2_ExchangeByte(0xFF);
  4352   001C48  0E0D               	movlw	13
  4353   001C4A  EC08  F00F         	call	_SPI2_ExchangeByte
  4354   001C4E  6E10               	movwf	SDCARD_PollWriteComplete@status^0,c
  4355   001C50  888A               	bsf	138,4,c	;volatile
  4356   001C52                     
  4357                           ;sdCard.c: 144: }
  4358   001C52  2810               	incf	SDCARD_PollWriteComplete@status^0,w,c
  4359   001C54  A4D8               	btfss	status,2,c
  4360   001C56  EF2F  F00E         	goto	u2041
  4361   001C5A  EF31  F00E         	goto	u2040
  4362   001C5E                     u2041:
  4363   001C5E  EF34  F00E         	goto	l3087
  4364   001C62                     u2040:
  4365   001C62                     
  4366                           ;sdCard.c: 145: ;sdCard.c: 146: 
  4367   001C62  0EFF               	movlw	255
  4368   001C64  EF3E  F00E         	goto	l444
  4369   001C68                     l3087:
  4370                           
  4371                           ;sdCard.c: 149: {;sdCard.c: 151:     uint16_t i;
  4372   001C68  0EFF               	movlw	255
  4373   001C6A  EC08  F00F         	call	_SPI2_ExchangeByte
  4374                           
  4375                           ;sdCard.c: 152:     uint16_t j;
  4376   001C6E  0EFF               	movlw	255
  4377   001C70  EC08  F00F         	call	_SPI2_ExchangeByte
  4378                           
  4379                           ;sdCard.c: 153: 
  4380   001C74  0EFF               	movlw	255
  4381   001C76  EC08  F00F         	call	_SPI2_ExchangeByte
  4382   001C7A                     
  4383                           ;sdCard.c: 154:     printf("\r\n\n");
  4384   001C7A  5010               	movf	SDCARD_PollWriteComplete@status^0,w,c
  4385   001C7C                     l444:
  4386   001C7C  0012               	return		;funcret
  4387   001C7E                     __end_of_SDCARD_PollWriteComplete:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _SDCARD_Initialize *****************
  4391 ;; Defined at:
  4392 ;;		line 14 in file "sdCard.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  verbose         1    wreg     unsigned char 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;  verbose         1   54[BANK0 ] unsigned char 
  4397 ;;  i               2   52[BANK0 ] int 
  4398 ;;  response        1   55[BANK0 ] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4408 ;;      Params:         0       0       0       0       0       0       0
  4409 ;;      Locals:         0       4       0       0       0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0
  4411 ;;      Totals:         0       4       0       0       0       0       0
  4412 ;;Total ram usage:        4 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 13
  4415 ;; This function calls:
  4416 ;;		_SPI2_ExchangeByte
  4417 ;;		_printf
  4418 ;; This function is called by:
  4419 ;;		_main
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text19
  4424   00128A                     __ptext19:
  4425                           	callstack 0
  4426   00128A                     _SDCARD_Initialize:
  4427                           	callstack 17
  4428                           
  4429                           ;incstack = 0
  4430                           ;SDCARD_Initialize@verbose stored from wreg
  4431   00128A  0100               	movlb	0	; () banked
  4432   00128C  6F96               	movwf	SDCARD_Initialize@verbose& (0+255),b
  4433   00128E                     
  4434                           ;sdCard.c: 14: ;sdCard.c: 15: ;sdCard.c: 17:     SPI2_ExchangeByte(0xFF);;sdCard.c: 21: 
      +                              SPI2_ExchangeByte(0x00);
  4435   00128E  0E00               	movlw	0
  4436   001290  0100               	movlb	0	; () banked
  4437   001292  6F95               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  4438   001294  0E00               	movlw	0
  4439   001296  6F94               	movwf	SDCARD_Initialize@i& (0+255),b
  4440   001298                     l3899:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;sdCard.c: 22:     SPI2_ExchangeByte(0x00);;sdCard.c: 23:     SPI2_ExchangeByte(0x95);
  4444   001298  0EFF               	movlw	255
  4445   00129A  EC08  F00F         	call	_SPI2_ExchangeByte
  4446   00129E                     
  4447                           ;sdCard.c: 24:     SPI2_ExchangeByte(0xFF);
  4448   00129E  0100               	movlb	0	; () banked
  4449   0012A0  4B94               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  4450   0012A2  2B95               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  4451   0012A4                     
  4452                           ; BSR set to: 0
  4453   0012A4  BF95               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  4454   0012A6  EF5E  F009         	goto	u3001
  4455   0012AA  5195               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  4456   0012AC  E109               	bnz	u3000
  4457   0012AE  0E0A               	movlw	10
  4458   0012B0  5D94               	subwf	SDCARD_Initialize@i& (0+255),w,b
  4459   0012B2  A0D8               	btfss	status,0,c
  4460   0012B4  EF5E  F009         	goto	u3001
  4461   0012B8  EF60  F009         	goto	u3000
  4462   0012BC                     u3001:
  4463   0012BC  EF4C  F009         	goto	l3899
  4464   0012C0                     u3000:
  4465   0012C0                     
  4466                           ; BSR set to: 0
  4467   0012C0  988A               	bcf	138,4,c	;volatile
  4468   0012C2                     
  4469                           ; BSR set to: 0
  4470                           ;sdCard.c: 29: 
  4471   0012C2  0EFF               	movlw	255
  4472   0012C4  EC08  F00F         	call	_SPI2_ExchangeByte
  4473                           
  4474                           ;sdCard.c: 30: 
  4475   0012C8  0E40               	movlw	64
  4476   0012CA  EC08  F00F         	call	_SPI2_ExchangeByte
  4477                           
  4478                           ;sdCard.c: 31:     do
  4479   0012CE  0E00               	movlw	0
  4480   0012D0  EC08  F00F         	call	_SPI2_ExchangeByte
  4481                           
  4482                           ;sdCard.c: 32:     {
  4483   0012D4  0E00               	movlw	0
  4484   0012D6  EC08  F00F         	call	_SPI2_ExchangeByte
  4485                           
  4486                           ;sdCard.c: 33:         do { LATBbits.LATB4 = 0; } while(0);
  4487   0012DA  0E00               	movlw	0
  4488   0012DC  EC08  F00F         	call	_SPI2_ExchangeByte
  4489                           
  4490                           ;sdCard.c: 34:         SPI2_ExchangeByte(0xFF);
  4491   0012E0  0E00               	movlw	0
  4492   0012E2  EC08  F00F         	call	_SPI2_ExchangeByte
  4493                           
  4494                           ;sdCard.c: 35:         SPI2_ExchangeByte(0x40 | 1);
  4495   0012E6  0E95               	movlw	149
  4496   0012E8  EC08  F00F         	call	_SPI2_ExchangeByte
  4497                           
  4498                           ;sdCard.c: 36:         SPI2_ExchangeByte(0x00);
  4499   0012EC  0EFF               	movlw	255
  4500   0012EE  EC08  F00F         	call	_SPI2_ExchangeByte
  4501                           
  4502                           ;sdCard.c: 37:         SPI2_ExchangeByte(0x00);
  4503   0012F2  0EFF               	movlw	255
  4504   0012F4  EC08  F00F         	call	_SPI2_ExchangeByte
  4505   0012F8  0100               	movlb	0	; () banked
  4506   0012FA  6F97               	movwf	SDCARD_Initialize@response& (0+255),b
  4507   0012FC                     
  4508                           ; BSR set to: 0
  4509   0012FC  888A               	bsf	138,4,c	;volatile
  4510   0012FE                     
  4511                           ; BSR set to: 0
  4512                           ;sdCard.c: 39:         SPI2_ExchangeByte(0x00);
  4513   0012FE  0596               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  4514   001300  A4D8               	btfss	status,2,c
  4515   001302  EF85  F009         	goto	u3011
  4516   001306  EF87  F009         	goto	u3010
  4517   00130A                     u3011:
  4518   00130A  EF90  F009         	goto	l3913
  4519   00130E                     u3010:
  4520   00130E                     
  4521                           ; BSR set to: 0
  4522   00130E  0E84               	movlw	low STR_58
  4523   001310  6F8C               	movwf	printf@fmt& (0+255),b
  4524   001312  0E7E               	movlw	high STR_58
  4525   001314  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  4526   001316  C097  F08E         	movff	SDCARD_Initialize@response,?_printf+2
  4527   00131A  6B8F               	clrf	(?_printf+3)& (0+255),b
  4528   00131C  ECA3  F00E         	call	_printf	;wreg free
  4529   001320                     l3913:
  4530   001320  988A               	bcf	138,4,c	;volatile
  4531   001322                     
  4532                           ;sdCard.c: 46:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  4533   001322  0EFF               	movlw	255
  4534   001324  EC08  F00F         	call	_SPI2_ExchangeByte
  4535   001328                     
  4536                           ;sdCard.c: 47: 
  4537   001328  0E41               	movlw	65
  4538   00132A  EC08  F00F         	call	_SPI2_ExchangeByte
  4539   00132E                     
  4540                           ;sdCard.c: 48: 
  4541   00132E  0E00               	movlw	0
  4542   001330  EC08  F00F         	call	_SPI2_ExchangeByte
  4543   001334                     
  4544                           ;sdCard.c: 49: 
  4545   001334  0E00               	movlw	0
  4546   001336  EC08  F00F         	call	_SPI2_ExchangeByte
  4547   00133A                     
  4548                           ;sdCard.c: 50:     do
  4549   00133A  0E00               	movlw	0
  4550   00133C  EC08  F00F         	call	_SPI2_ExchangeByte
  4551   001340                     
  4552                           ;sdCard.c: 51:     {
  4553   001340  0E00               	movlw	0
  4554   001342  EC08  F00F         	call	_SPI2_ExchangeByte
  4555   001346                     
  4556                           ;sdCard.c: 52:         do { LATBbits.LATB4 = 0; } while(0);
  4557   001346  0EFF               	movlw	255
  4558   001348  EC08  F00F         	call	_SPI2_ExchangeByte
  4559   00134C                     
  4560                           ;sdCard.c: 53:         SPI2_ExchangeByte(0xFF);
  4561   00134C  0EFF               	movlw	255
  4562   00134E  EC08  F00F         	call	_SPI2_ExchangeByte
  4563   001352                     
  4564                           ;sdCard.c: 54:         SPI2_ExchangeByte(0x40 | 16);
  4565   001352  0EFF               	movlw	255
  4566   001354  EC08  F00F         	call	_SPI2_ExchangeByte
  4567   001358  0100               	movlb	0	; () banked
  4568   00135A  6F97               	movwf	SDCARD_Initialize@response& (0+255),b
  4569   00135C                     
  4570                           ; BSR set to: 0
  4571   00135C  888A               	bsf	138,4,c	;volatile
  4572   00135E                     
  4573                           ; BSR set to: 0
  4574                           ;sdCard.c: 56:         SPI2_ExchangeByte(0x00);
  4575   00135E  5197               	movf	SDCARD_Initialize@response& (0+255),w,b
  4576   001360  A4D8               	btfss	status,2,c
  4577   001362  EFB5  F009         	goto	u3021
  4578   001366  EFB7  F009         	goto	u3020
  4579   00136A                     u3021:
  4580   00136A  EF90  F009         	goto	l3913
  4581   00136E                     u3020:
  4582   00136E                     
  4583                           ; BSR set to: 0
  4584                           ;sdCard.c: 58:         SPI2_ExchangeByte(0x00);
  4585   00136E  0596               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  4586   001370  A4D8               	btfss	status,2,c
  4587   001372  EFBD  F009         	goto	u3031
  4588   001376  EFBF  F009         	goto	u3030
  4589   00137A                     u3031:
  4590   00137A  EFC8  F009         	goto	l3941
  4591   00137E                     u3030:
  4592   00137E                     
  4593                           ; BSR set to: 0
  4594   00137E  0EBA               	movlw	low STR_59
  4595   001380  6F8C               	movwf	printf@fmt& (0+255),b
  4596   001382  0E7E               	movlw	high STR_59
  4597   001384  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  4598   001386  C097  F08E         	movff	SDCARD_Initialize@response,?_printf+2
  4599   00138A  6B8F               	clrf	(?_printf+3)& (0+255),b
  4600   00138C  ECA3  F00E         	call	_printf	;wreg free
  4601   001390                     l3941:
  4602   001390  988A               	bcf	138,4,c	;volatile
  4603   001392                     
  4604                           ;sdCard.c: 65:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  4605   001392  0EFF               	movlw	255
  4606   001394  EC08  F00F         	call	_SPI2_ExchangeByte
  4607   001398                     
  4608                           ;sdCard.c: 66: }
  4609   001398  0E50               	movlw	80
  4610   00139A  EC08  F00F         	call	_SPI2_ExchangeByte
  4611   00139E                     
  4612                           ;sdCard.c: 67: 
  4613   00139E  0E00               	movlw	0
  4614   0013A0  EC08  F00F         	call	_SPI2_ExchangeByte
  4615   0013A4                     
  4616                           ;sdCard.c: 68: void SDCARD_ReadBlock(uint32_t addr, uint8_t sdCardBuffer[])
  4617   0013A4  0E00               	movlw	0
  4618   0013A6  EC08  F00F         	call	_SPI2_ExchangeByte
  4619   0013AA                     
  4620                           ;sdCard.c: 69: {
  4621   0013AA  0E02               	movlw	2
  4622   0013AC  EC08  F00F         	call	_SPI2_ExchangeByte
  4623   0013B0                     
  4624                           ;sdCard.c: 70: 
  4625   0013B0  0E00               	movlw	0
  4626   0013B2  EC08  F00F         	call	_SPI2_ExchangeByte
  4627   0013B6                     
  4628                           ;sdCard.c: 71:     uint16_t i = 0;
  4629   0013B6  0EFF               	movlw	255
  4630   0013B8  EC08  F00F         	call	_SPI2_ExchangeByte
  4631   0013BC                     
  4632                           ;sdCard.c: 72: 
  4633   0013BC  0EFF               	movlw	255
  4634   0013BE  EC08  F00F         	call	_SPI2_ExchangeByte
  4635   0013C2                     
  4636                           ;sdCard.c: 73: 
  4637   0013C2  0EFF               	movlw	255
  4638   0013C4  EC08  F00F         	call	_SPI2_ExchangeByte
  4639   0013C8  0100               	movlb	0	; () banked
  4640   0013CA  6F97               	movwf	SDCARD_Initialize@response& (0+255),b
  4641   0013CC                     
  4642                           ; BSR set to: 0
  4643   0013CC  888A               	bsf	138,4,c	;volatile
  4644   0013CE                     
  4645                           ; BSR set to: 0
  4646                           ;sdCard.c: 75: 
  4647   0013CE  2997               	incf	SDCARD_Initialize@response& (0+255),w,b
  4648   0013D0  B4D8               	btfsc	status,2,c
  4649   0013D2  EFED  F009         	goto	u3041
  4650   0013D6  EFEF  F009         	goto	u3040
  4651   0013DA                     u3041:
  4652   0013DA  EFC8  F009         	goto	l3941
  4653   0013DE                     u3040:
  4654   0013DE                     
  4655                           ; BSR set to: 0
  4656                           ;sdCard.c: 77:     SPI2_ExchangeByte(0x40 | 17);
  4657   0013DE  0596               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  4658   0013E0  A4D8               	btfss	status,2,c
  4659   0013E2  EFF5  F009         	goto	u3051
  4660   0013E6  EFF7  F009         	goto	u3050
  4661   0013EA                     u3051:
  4662   0013EA  EF00  F00A         	goto	l409
  4663   0013EE                     u3050:
  4664   0013EE                     
  4665                           ; BSR set to: 0
  4666   0013EE  0E4C               	movlw	low STR_60
  4667   0013F0  6F8C               	movwf	printf@fmt& (0+255),b
  4668   0013F2  0E7E               	movlw	high STR_60
  4669   0013F4  6F8D               	movwf	(printf@fmt+1)& (0+255),b
  4670   0013F6  C097  F08E         	movff	SDCARD_Initialize@response,?_printf+2
  4671   0013FA  6B8F               	clrf	(?_printf+3)& (0+255),b
  4672   0013FC  ECA3  F00E         	call	_printf	;wreg free
  4673   001400                     l409:
  4674   001400  0012               	return		;funcret
  4675   001402                     __end_of_SDCARD_Initialize:
  4676                           	callstack 0
  4677                           
  4678 ;; *************** function _printf *****************
  4679 ;; Defined at:
  4680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;  fmt             2   44[BANK0 ] PTR const unsigned char 
  4683 ;;		 -> STR_71(3), STR_70(3), STR_69(2), STR_68(4), 
  4684 ;;		 -> STR_67(6), STR_66(3), STR_65(3), STR_64(2), 
  4685 ;;		 -> STR_63(3), STR_62(2), STR_61(4), STR_60(28), 
  4686 ;;		 -> STR_59(26), STR_58(27), STR_57(3), STR_56(17), 
  4687 ;;		 -> STR_55(3), STR_54(5), STR_53(2), STR_52(5), 
  4688 ;;		 -> STR_51(17), STR_50(15), STR_49(23), STR_48(3), 
  4689 ;;		 -> STR_47(5), STR_46(2), STR_45(5), STR_44(17), 
  4690 ;;		 -> STR_43(43), STR_42(3), STR_41(5), STR_40(2), 
  4691 ;;		 -> STR_39(5), STR_38(19), STR_37(20), STR_36(28), 
  4692 ;;		 -> STR_35(20), STR_34(30), STR_33(29), STR_32(29), 
  4693 ;;		 -> STR_31(44), STR_30(27), STR_29(83), STR_28(83), 
  4694 ;;		 -> STR_27(2), STR_26(2), STR_25(9), STR_24(52), 
  4695 ;;		 -> STR_23(42), STR_22(43), STR_21(37), STR_20(24), 
  4696 ;;		 -> STR_19(52), STR_18(36), STR_17(52), STR_16(24), 
  4697 ;;		 -> STR_15(21), STR_14(7), STR_13(15), STR_12(52), 
  4698 ;;		 -> STR_11(3), STR_10(5), STR_9(2), STR_8(5), 
  4699 ;;		 -> STR_7(19), STR_6(54), STR_5(5), STR_4(42), 
  4700 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  ap              2   50[BANK0 ] PTR void [1]
  4703 ;;		 -> ?_printf(2), 
  4704 ;;  ret             2    0        int 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  2   44[BANK0 ] int 
  4707 ;; Registers used:
  4708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4714 ;;      Params:         0       6       0       0       0       0       0
  4715 ;;      Locals:         0       2       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0
  4717 ;;      Totals:         0       8       0       0       0       0       0
  4718 ;;Total ram usage:        8 bytes
  4719 ;; Hardware stack levels used: 1
  4720 ;; Hardware stack levels required when called: 12
  4721 ;; This function calls:
  4722 ;;		_vfprintf
  4723 ;; This function is called by:
  4724 ;;		_main
  4725 ;;		_SDCARD_Initialize
  4726 ;;		_hexDumpBuffer
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text20
  4731   001D46                     __ptext20:
  4732                           	callstack 0
  4733   001D46                     _printf:
  4734                           	callstack 18
  4735   001D46  0E8E               	movlw	low (?_printf+2)
  4736   001D48  0100               	movlb	0	; () banked
  4737   001D4A  6F92               	movwf	printf@ap& (0+255),b
  4738   001D4C  0E00               	movlw	high (?_printf+2)
  4739   001D4E  6F93               	movwf	(printf@ap+1)& (0+255),b
  4740   001D50                     
  4741                           ; BSR set to: 0
  4742   001D50  0E00               	movlw	0
  4743   001D52  6F84               	movwf	vfprintf@fp& (0+255),b
  4744   001D54  0E00               	movlw	0
  4745   001D56  6F85               	movwf	(vfprintf@fp+1)& (0+255),b
  4746   001D58  C08C  F086         	movff	printf@fmt,vfprintf@fmt
  4747   001D5C  C08D  F087         	movff	printf@fmt+1,vfprintf@fmt+1
  4748   001D60  0E92               	movlw	low printf@ap
  4749   001D62  6F88               	movwf	vfprintf@ap& (0+255),b
  4750   001D64  0E00               	movlw	high printf@ap
  4751   001D66  6F89               	movwf	(vfprintf@ap+1)& (0+255),b
  4752   001D68  EC3A  F00D         	call	_vfprintf	;wreg free
  4753   001D6C  0012               	return		;funcret
  4754   001D6E                     __end_of_printf:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _vfprintf *****************
  4758 ;; Defined at:
  4759 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  fp              2   36[BANK0 ] PTR struct _IO_FILE
  4762 ;;		 -> NULL(0), 
  4763 ;;  fmt             2   38[BANK0 ] PTR const unsigned char 
  4764 ;;		 -> STR_71(3), STR_70(3), STR_69(2), STR_68(4), 
  4765 ;;		 -> STR_67(6), STR_66(3), STR_65(3), STR_64(2), 
  4766 ;;		 -> STR_63(3), STR_62(2), STR_61(4), STR_60(28), 
  4767 ;;		 -> STR_59(26), STR_58(27), STR_57(3), STR_56(17), 
  4768 ;;		 -> STR_55(3), STR_54(5), STR_53(2), STR_52(5), 
  4769 ;;		 -> STR_51(17), STR_50(15), STR_49(23), STR_48(3), 
  4770 ;;		 -> STR_47(5), STR_46(2), STR_45(5), STR_44(17), 
  4771 ;;		 -> STR_43(43), STR_42(3), STR_41(5), STR_40(2), 
  4772 ;;		 -> STR_39(5), STR_38(19), STR_37(20), STR_36(28), 
  4773 ;;		 -> STR_35(20), STR_34(30), STR_33(29), STR_32(29), 
  4774 ;;		 -> STR_31(44), STR_30(27), STR_29(83), STR_28(83), 
  4775 ;;		 -> STR_27(2), STR_26(2), STR_25(9), STR_24(52), 
  4776 ;;		 -> STR_23(42), STR_22(43), STR_21(37), STR_20(24), 
  4777 ;;		 -> STR_19(52), STR_18(36), STR_17(52), STR_16(24), 
  4778 ;;		 -> STR_15(21), STR_14(7), STR_13(15), STR_12(52), 
  4779 ;;		 -> STR_11(3), STR_10(5), STR_9(2), STR_8(5), 
  4780 ;;		 -> STR_7(19), STR_6(54), STR_5(5), STR_4(42), 
  4781 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  4782 ;;  ap              2   40[BANK0 ] PTR PTR void 
  4783 ;;		 -> printf@ap(2), 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  cfmt            2   42[BANK0 ] PTR unsigned char 
  4786 ;;		 -> STR_71(3), STR_70(3), STR_69(2), STR_68(4), 
  4787 ;;		 -> STR_67(6), STR_66(3), STR_65(3), STR_64(2), 
  4788 ;;		 -> STR_63(3), STR_62(2), STR_61(4), STR_60(28), 
  4789 ;;		 -> STR_59(26), STR_58(27), STR_57(3), STR_56(17), 
  4790 ;;		 -> STR_55(3), STR_54(5), STR_53(2), STR_52(5), 
  4791 ;;		 -> STR_51(17), STR_50(15), STR_49(23), STR_48(3), 
  4792 ;;		 -> STR_47(5), STR_46(2), STR_45(5), STR_44(17), 
  4793 ;;		 -> STR_43(43), STR_42(3), STR_41(5), STR_40(2), 
  4794 ;;		 -> STR_39(5), STR_38(19), STR_37(20), STR_36(28), 
  4795 ;;		 -> STR_35(20), STR_34(30), STR_33(29), STR_32(29), 
  4796 ;;		 -> STR_31(44), STR_30(27), STR_29(83), STR_28(83), 
  4797 ;;		 -> STR_27(2), STR_26(2), STR_25(9), STR_24(52), 
  4798 ;;		 -> STR_23(42), STR_22(43), STR_21(37), STR_20(24), 
  4799 ;;		 -> STR_19(52), STR_18(36), STR_17(52), STR_16(24), 
  4800 ;;		 -> STR_15(21), STR_14(7), STR_13(15), STR_12(52), 
  4801 ;;		 -> STR_11(3), STR_10(5), STR_9(2), STR_8(5), 
  4802 ;;		 -> STR_7(19), STR_6(54), STR_5(5), STR_4(42), 
  4803 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2   36[BANK0 ] int 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4813 ;;      Params:         0       6       0       0       0       0       0
  4814 ;;      Locals:         0       2       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0
  4816 ;;      Totals:         0       8       0       0       0       0       0
  4817 ;;Total ram usage:        8 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 11
  4820 ;; This function calls:
  4821 ;;		_vfpfcnvrt
  4822 ;; This function is called by:
  4823 ;;		_printf
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text21
  4828   001A74                     __ptext21:
  4829                           	callstack 0
  4830   001A74                     _vfprintf:
  4831                           	callstack 18
  4832   001A74                     
  4833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  4834   001A74  C086  F08A         	movff	vfprintf@fmt,vfprintf@cfmt
  4835   001A78  C087  F08B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4836                           
  4837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4838   001A7C  EF4F  F00D         	goto	l3881
  4839   001A80                     l3879:
  4840                           
  4841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4842   001A80  C084  F071         	movff	vfprintf@fp,vfpfcnvrt@fp
  4843   001A84  C085  F072         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4844   001A88  0E8A               	movlw	low vfprintf@cfmt
  4845   001A8A  0100               	movlb	0	; () banked
  4846   001A8C  6F73               	movwf	vfpfcnvrt@fmt& (0+255),b
  4847   001A8E  0E00               	movlw	high vfprintf@cfmt
  4848   001A90  6F74               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  4849   001A92  C088  F075         	movff	vfprintf@ap,vfpfcnvrt@ap
  4850   001A96  C089  F076         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4851   001A9A  EC58  F003         	call	_vfpfcnvrt	;wreg free
  4852   001A9E                     l3881:
  4853                           
  4854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  4855   001A9E  C08A  FFF6         	movff	vfprintf@cfmt,tblptrl
  4856   001AA2  C08B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4857   001AA6                     	if	0	;tblptru may be non-zero
  4858   001AA6                     	endif
  4859   001AA6                     	if	0	;tblptru may be non-zero
  4860   001AA6                     	endif
  4861   001AA6  0008               	tblrd		*
  4862   001AA8  50F5               	movf	tablat,w,c
  4863   001AAA  0900               	iorlw	0
  4864   001AAC  A4D8               	btfss	status,2,c
  4865   001AAE  EF5B  F00D         	goto	u2991
  4866   001AB2  EF5D  F00D         	goto	u2990
  4867   001AB6                     u2991:
  4868   001AB6  EF40  F00D         	goto	l3879
  4869   001ABA                     u2990:
  4870   001ABA                     
  4871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  4872   001ABA  0E00               	movlw	0
  4873   001ABC  0100               	movlb	0	; () banked
  4874   001ABE  6F85               	movwf	(?_vfprintf+1)& (0+255),b
  4875   001AC0  0E00               	movlw	0
  4876   001AC2  6F84               	movwf	?_vfprintf& (0+255),b
  4877   001AC4                     
  4878                           ; BSR set to: 0
  4879   001AC4  0012               	return		;funcret
  4880   001AC6                     __end_of_vfprintf:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _vfpfcnvrt *****************
  4884 ;; Defined at:
  4885 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  fp              2   17[BANK0 ] PTR struct _IO_FILE
  4888 ;;		 -> NULL(0), 
  4889 ;;  fmt             2   19[BANK0 ] PTR PTR unsigned char 
  4890 ;;		 -> vfprintf@cfmt(2), 
  4891 ;;  ap              2   21[BANK0 ] PTR PTR void 
  4892 ;;		 -> printf@ap(2), 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;  convarg         8   26[BANK0 ] struct .
  4895 ;;  cp              2   34[BANK0 ] PTR unsigned char 
  4896 ;;		 -> STR_71(3), STR_70(3), STR_69(2), STR_68(4), 
  4897 ;;		 -> STR_67(6), STR_66(3), STR_65(3), STR_64(2), 
  4898 ;;		 -> STR_63(3), STR_62(2), STR_61(4), STR_60(28), 
  4899 ;;		 -> STR_59(26), STR_58(27), STR_57(3), STR_56(17), 
  4900 ;;		 -> STR_55(3), STR_54(5), STR_53(2), STR_52(5), 
  4901 ;;		 -> STR_51(17), STR_50(15), STR_49(23), STR_48(3), 
  4902 ;;		 -> STR_47(5), STR_46(2), STR_45(5), STR_44(17), 
  4903 ;;		 -> STR_43(43), STR_42(3), STR_41(5), STR_40(2), 
  4904 ;;		 -> STR_39(5), STR_38(19), STR_37(20), STR_36(28), 
  4905 ;;		 -> STR_35(20), STR_34(30), STR_33(29), STR_32(29), 
  4906 ;;		 -> STR_31(44), STR_30(27), STR_29(83), STR_28(83), 
  4907 ;;		 -> STR_27(2), STR_26(2), STR_25(9), STR_24(52), 
  4908 ;;		 -> STR_23(42), STR_22(43), STR_21(37), STR_20(24), 
  4909 ;;		 -> STR_19(52), STR_18(36), STR_17(52), STR_16(24), 
  4910 ;;		 -> STR_15(21), STR_14(7), STR_13(15), STR_12(52), 
  4911 ;;		 -> STR_11(3), STR_10(5), STR_9(2), STR_8(5), 
  4912 ;;		 -> STR_7(19), STR_6(54), STR_5(5), STR_4(42), 
  4913 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  4914 ;;  done            2   24[BANK0 ] int 
  4915 ;;  i               2    0        int 
  4916 ;;  c               1   23[BANK0 ] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  1    wreg      void 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4926 ;;      Params:         0       6       0       0       0       0       0
  4927 ;;      Locals:         0      13       0       0       0       0       0
  4928 ;;      Temps:          4       0       0       0       0       0       0
  4929 ;;      Totals:         4      19       0       0       0       0       0
  4930 ;;Total ram usage:       23 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; Hardware stack levels required when called: 10
  4933 ;; This function calls:
  4934 ;;		_atoi
  4935 ;;		_ctoa
  4936 ;;		_dtoa
  4937 ;;		_fputc
  4938 ;;		_isdigit
  4939 ;;		_xtoa
  4940 ;; This function is called by:
  4941 ;;		_vfprintf
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text22
  4946   0006B0                     __ptext22:
  4947                           	callstack 0
  4948   0006B0                     _vfpfcnvrt:
  4949                           	callstack 18
  4950   0006B0                     
  4951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  4952   0006B0  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4953   0006B4  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4954   0006B8  CFDE FFF6          	movff	postinc2,tblptrl
  4955   0006BC  CFDD FFF7          	movff	postdec2,tblptrh
  4956   0006C0                     	if	0	;tblptru may be non-zero
  4957   0006C0                     	endif
  4958   0006C0                     	if	0	;tblptru may be non-zero
  4959   0006C0                     	endif
  4960   0006C0  0008               	tblrd		*
  4961   0006C2  50F5               	movf	tablat,w,c
  4962   0006C4  0A25               	xorlw	37
  4963   0006C6  A4D8               	btfss	status,2,c
  4964   0006C8  EF68  F003         	goto	u2901
  4965   0006CC  EF6A  F003         	goto	u2900
  4966   0006D0                     u2901:
  4967   0006D0  EF33  F005         	goto	l3855
  4968   0006D4                     u2900:
  4969   0006D4                     
  4970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  4971   0006D4  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4972   0006D8  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4973   0006DC  2ADE               	incf	postinc2,f,c
  4974   0006DE  0E00               	movlw	0
  4975   0006E0  22DD               	addwfc	postdec2,f,c
  4976   0006E2                     
  4977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  4978   0006E2  0E00               	movlw	0
  4979   0006E4  6E43               	movwf	(_width+1)^0,c
  4980   0006E6  0E00               	movlw	0
  4981   0006E8  6E42               	movwf	_width^0,c
  4982   0006EA  C042  F04E         	movff	_width,_flags
  4983   0006EE                     
  4984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  4985   0006EE  6844               	setf	_prec^0,c
  4986   0006F0  6845               	setf	(_prec+1)^0,c
  4987   0006F2                     
  4988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  4989   0006F2  0E00               	movlw	0
  4990   0006F4  0100               	movlb	0	; () banked
  4991   0006F6  6F79               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  4992   0006F8  0E00               	movlw	0
  4993   0006FA  6F78               	movwf	vfpfcnvrt@done& (0+255),b
  4994                           
  4995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  4996   0006FC  EFAA  F003         	goto	l3801
  4997   000700                     l3791:
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  5001   000700  824E               	bsf	_flags^0,1,c
  5002   000702                     
  5003                           ; BSR set to: 0
  5004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  5005   000702  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5006   000706  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5007   00070A  2ADE               	incf	postinc2,f,c
  5008   00070C  0E00               	movlw	0
  5009   00070E  22DD               	addwfc	postdec2,f,c
  5010                           
  5011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  5012   000710  EFAA  F003         	goto	l3801
  5013   000714                     l3795:
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  5017   000714  0E00               	movlw	0
  5018   000716  6F79               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  5019   000718  0E01               	movlw	1
  5020   00071A  6F78               	movwf	vfpfcnvrt@done& (0+255),b
  5021                           
  5022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  5023   00071C  EFAA  F003         	goto	l3801
  5024   000720                     l3799:
  5025                           
  5026                           ; BSR set to: 0
  5027   000720  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5028   000724  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5029   000728  CFDE FFF6          	movff	postinc2,tblptrl
  5030   00072C  CFDD FFF7          	movff	postdec2,tblptrh
  5031   000730                     	if	0	;tblptru may be non-zero
  5032   000730                     	endif
  5033   000730                     	if	0	;tblptru may be non-zero
  5034   000730                     	endif
  5035   000730  0008               	tblrd		*
  5036   000732  50F5               	movf	tablat,w,c
  5037   000734  6E3E               	movwf	??_vfpfcnvrt^0,c
  5038   000736  6A3F               	clrf	(??_vfpfcnvrt+1)^0,c
  5039                           
  5040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5041                           ; Switch size 1, requested type "simple"
  5042                           ; Number of cases is 1, Range of values is 0 to 0
  5043                           ; switch strategies available:
  5044                           ; Name         Instructions Cycles
  5045                           ; simple_byte            4     3 (average)
  5046                           ;	Chosen strategy is simple_byte
  5047   000738  503F               	movf	(??_vfpfcnvrt+1)^0,w,c
  5048   00073A  0A00               	xorlw	0	; case 0
  5049   00073C  B4D8               	btfsc	status,2,c
  5050   00073E  EFA3  F003         	goto	l4301
  5051   000742  EF8A  F003         	goto	l3795
  5052   000746                     l4301:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ; Switch size 1, requested type "simple"
  5056                           ; Number of cases is 1, Range of values is 48 to 48
  5057                           ; switch strategies available:
  5058                           ; Name         Instructions Cycles
  5059                           ; simple_byte            4     3 (average)
  5060                           ;	Chosen strategy is simple_byte
  5061   000746  503E               	movf	??_vfpfcnvrt^0,w,c
  5062   000748  0A30               	xorlw	48	; case 48
  5063   00074A  B4D8               	btfsc	status,2,c
  5064   00074C  EF80  F003         	goto	l3791
  5065   000750  EF8A  F003         	goto	l3795
  5066   000754                     l3801:
  5067                           
  5068                           ; BSR set to: 0
  5069                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  5070   000754  5178               	movf	vfpfcnvrt@done& (0+255),w,b
  5071   000756  1179               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  5072   000758  B4D8               	btfsc	status,2,c
  5073   00075A  EFB1  F003         	goto	u2911
  5074   00075E  EFB3  F003         	goto	u2910
  5075   000762                     u2911:
  5076   000762  EF90  F003         	goto	l3799
  5077   000766                     u2910:
  5078   000766                     
  5079                           ; BSR set to: 0
  5080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  5081   000766  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5082   00076A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5083   00076E  CFDE FFF6          	movff	postinc2,tblptrl
  5084   000772  CFDD FFF7          	movff	postdec2,tblptrh
  5085   000776                     	if	0	;tblptru may be non-zero
  5086   000776                     	endif
  5087   000776                     	if	0	;tblptru may be non-zero
  5088   000776                     	endif
  5089   000776  0008               	tblrd		*
  5090   000778  50F5               	movf	tablat,w,c
  5091   00077A  0A2A               	xorlw	42
  5092   00077C  A4D8               	btfss	status,2,c
  5093   00077E  EFC3  F003         	goto	u2921
  5094   000782  EFC5  F003         	goto	u2920
  5095   000786                     u2921:
  5096   000786  EFEE  F003         	goto	l3811
  5097   00078A                     u2920:
  5098   00078A                     
  5099                           ; BSR set to: 0
  5100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  5101   00078A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5102   00078E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5103   000792  2ADE               	incf	postinc2,f,c
  5104   000794  0E00               	movlw	0
  5105   000796  22DD               	addwfc	postdec2,f,c
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5108   000798  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5109   00079C  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5110   0007A0  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  5111   0007A4  0E02               	movlw	2
  5112   0007A6  26DE               	addwf	postinc2,f,c
  5113   0007A8  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  5114   0007AC  0E00               	movlw	0
  5115   0007AE  22DD               	addwfc	postdec2,f,c
  5116   0007B0  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5117   0007B4  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5118   0007B8  CFDE F042          	movff	postinc2,_width
  5119   0007BC  CFDD F043          	movff	postdec2,_width+1
  5120   0007C0                     
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  5123   0007C0  BE43               	btfsc	(_width+1)^0,7,c
  5124   0007C2  EFE7  F003         	goto	u2930
  5125   0007C6  EFE5  F003         	goto	u2931
  5126   0007CA                     u2931:
  5127   0007CA  EF21  F004         	goto	l3819
  5128   0007CE                     u2930:
  5129   0007CE                     
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  5132   0007CE  804E               	bsf	_flags^0,0,c
  5133                           
  5134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  5135   0007D0  6C42               	negf	_width^0,c
  5136   0007D2  1E43               	comf	(_width+1)^0,f,c
  5137   0007D4  B0D8               	btfsc	status,0,c
  5138   0007D6  2A43               	incf	(_width+1)^0,f,c
  5139   0007D8  EF21  F004         	goto	l3819
  5140   0007DC                     l3811:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  5144   0007DC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5145   0007E0  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5146   0007E4  CFDE F015          	movff	postinc2,atoi@s
  5147   0007E8  CFDD F016          	movff	postdec2,atoi@s+1
  5148   0007EC  ECB3  F00A         	call	_atoi	;wreg free
  5149   0007F0  C015  F042         	movff	?_atoi,_width
  5150   0007F4  C016  F043         	movff	?_atoi+1,_width+1
  5151                           
  5152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  5153   0007F8  EF05  F004         	goto	l3817
  5154   0007FC                     l3813:
  5155                           
  5156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  5157   0007FC  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5158   000800  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5159   000804  2ADE               	incf	postinc2,f,c
  5160   000806  0E00               	movlw	0
  5161   000808  22DD               	addwfc	postdec2,f,c
  5162   00080A                     l3817:
  5163   00080A  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5164   00080E  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5165   000812  CFDE FFF6          	movff	postinc2,tblptrl
  5166   000816  CFDD FFF7          	movff	postdec2,tblptrh
  5167   00081A                     	if	0	;tblptru may be non-zero
  5168   00081A                     	endif
  5169   00081A                     	if	0	;tblptru may be non-zero
  5170   00081A                     	endif
  5171   00081A  0008               	tblrd		*
  5172   00081C  CFF5 F03E          	movff	tablat,??_vfpfcnvrt
  5173   000820  0ED0               	movlw	208
  5174   000822  243E               	addwf	??_vfpfcnvrt^0,w,c
  5175   000824  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  5176   000826  6A40               	clrf	(??_vfpfcnvrt+2)^0,c
  5177   000828  0EFF               	movlw	255
  5178   00082A  2240               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  5179   00082C  5040               	movf	(??_vfpfcnvrt+2)^0,w,c
  5180   00082E  E109               	bnz	u2940
  5181   000830  0E0A               	movlw	10
  5182   000832  5C3F               	subwf	(??_vfpfcnvrt+1)^0,w,c
  5183   000834  A0D8               	btfss	status,0,c
  5184   000836  EF1F  F004         	goto	u2941
  5185   00083A  EF21  F004         	goto	u2940
  5186   00083E                     u2941:
  5187   00083E  EFFE  F003         	goto	l3813
  5188   000842                     u2940:
  5189   000842                     l3819:
  5190                           
  5191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  5192   000842  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5193   000846  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5194   00084A  CFDE FFF6          	movff	postinc2,tblptrl
  5195   00084E  CFDD FFF7          	movff	postdec2,tblptrh
  5196   000852                     	if	0	;tblptru may be non-zero
  5197   000852                     	endif
  5198   000852                     	if	0	;tblptru may be non-zero
  5199   000852                     	endif
  5200   000852  0008               	tblrd		*
  5201   000854  50F5               	movf	tablat,w,c
  5202   000856  0A63               	xorlw	99
  5203   000858  A4D8               	btfss	status,2,c
  5204   00085A  EF31  F004         	goto	u2951
  5205   00085E  EF33  F004         	goto	u2950
  5206   000862                     u2951:
  5207   000862  EF57  F004         	goto	l3827
  5208   000866                     u2950:
  5209   000866                     
  5210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  5211   000866  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5212   00086A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5213   00086E  2ADE               	incf	postinc2,f,c
  5214   000870  0E00               	movlw	0
  5215   000872  22DD               	addwfc	postdec2,f,c
  5216                           
  5217                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5218   000874  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5219   000878  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5220   00087C  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  5221   000880  0E02               	movlw	2
  5222   000882  26DE               	addwf	postinc2,f,c
  5223   000884  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  5224   000888  0E00               	movlw	0
  5225   00088A  22DD               	addwfc	postdec2,f,c
  5226   00088C  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5227   000890  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5228   000894  50DF               	movf	indf2,w,c
  5229   000896  0100               	movlb	0	; () banked
  5230   000898  6F77               	movwf	vfpfcnvrt@c& (0+255),b
  5231   00089A                     
  5232                           ; BSR set to: 0
  5233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  5234   00089A  C071  F01A         	movff	vfpfcnvrt@fp,ctoa@fp
  5235   00089E  C072  F01B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  5236   0008A2  C077  F01C         	movff	vfpfcnvrt@c,ctoa@c
  5237   0008A6  EC58  F00B         	call	_ctoa	;wreg free
  5238   0008AA  EF47  F005         	goto	l1252
  5239   0008AE                     l3827:
  5240                           
  5241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  5242   0008AE  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5243   0008B2  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5244   0008B6  CFDE F082          	movff	postinc2,vfpfcnvrt@cp
  5245   0008BA  CFDD F083          	movff	postdec2,vfpfcnvrt@cp+1
  5246   0008BE                     
  5247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5248   0008BE  C082  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5249   0008C2  C083  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5250   0008C6                     	if	0	;tblptru may be non-zero
  5251   0008C6                     	endif
  5252   0008C6                     	if	0	;tblptru may be non-zero
  5253   0008C6                     	endif
  5254   0008C6  0008               	tblrd		*
  5255   0008C8  50F5               	movf	tablat,w,c
  5256   0008CA  0A64               	xorlw	100
  5257   0008CC  B4D8               	btfsc	status,2,c
  5258   0008CE  EF6B  F004         	goto	u2961
  5259   0008D2  EF6D  F004         	goto	u2960
  5260   0008D6                     u2961:
  5261   0008D6  EF7B  F004         	goto	l3833
  5262   0008DA                     u2960:
  5263   0008DA  C082  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5264   0008DE  C083  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5265   0008E2                     	if	0	;tblptru may be non-zero
  5266   0008E2                     	endif
  5267   0008E2                     	if	0	;tblptru may be non-zero
  5268   0008E2                     	endif
  5269   0008E2  0008               	tblrd		*
  5270   0008E4  50F5               	movf	tablat,w,c
  5271   0008E6  0A69               	xorlw	105
  5272   0008E8  A4D8               	btfss	status,2,c
  5273   0008EA  EF79  F004         	goto	u2971
  5274   0008EE  EF7B  F004         	goto	u2970
  5275   0008F2                     u2971:
  5276   0008F2  EFBF  F004         	goto	l3839
  5277   0008F6                     u2970:
  5278   0008F6                     l3833:
  5279                           
  5280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5281   0008F6  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5282   0008FA  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5283   0008FE  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  5284   000902  0E02               	movlw	2
  5285   000904  26DE               	addwf	postinc2,f,c
  5286   000906  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  5287   00090A  0E00               	movlw	0
  5288   00090C  22DD               	addwfc	postdec2,f,c
  5289   00090E  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5290   000912  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5291   000916  CFDE F07A          	movff	postinc2,vfpfcnvrt@convarg
  5292   00091A  CFDD F07B          	movff	postdec2,vfpfcnvrt@convarg+1
  5293   00091E  0100               	movlb	0	; () banked
  5294   000920  0E00               	movlw	0
  5295   000922  BF7B               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  5296   000924  0EFF               	movlw	-1
  5297   000926  6F7C               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  5298   000928  6F7D               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  5299   00092A  6F7E               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  5300   00092C  6F7F               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  5301   00092E  6F80               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  5302   000930  6F81               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  5305   000932  0E01               	movlw	1
  5306   000934  2582               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5307   000936  6E3E               	movwf	??_vfpfcnvrt^0,c
  5308   000938  0E00               	movlw	0
  5309   00093A  2183               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5310   00093C  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  5311   00093E  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5312   000942  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5313   000946  C03E  FFDE         	movff	??_vfpfcnvrt,postinc2
  5314   00094A  C03F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5315   00094E                     
  5316                           ; BSR set to: 0
  5317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  5318   00094E  C071  F02C         	movff	vfpfcnvrt@fp,dtoa@fp
  5319   000952  C072  F02D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5320   000956  C07A  F02E         	movff	vfpfcnvrt@convarg,dtoa@d
  5321   00095A  C07B  F02F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5322   00095E  C07C  F030         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  5323   000962  C07D  F031         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  5324   000966  C07E  F032         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  5325   00096A  C07F  F033         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  5326   00096E  C080  F034         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  5327   000972  C081  F035         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  5328   000976  EC48  F005         	call	_dtoa	;wreg free
  5329   00097A  EF47  F005         	goto	l1252
  5330   00097E                     l3839:
  5331   00097E  C082  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5332   000982  C083  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5333   000986                     	if	0	;tblptru may be non-zero
  5334   000986                     	endif
  5335   000986                     	if	0	;tblptru may be non-zero
  5336   000986                     	endif
  5337   000986  0008               	tblrd		*
  5338   000988  50F5               	movf	tablat,w,c
  5339   00098A  0A78               	xorlw	120
  5340   00098C  A4D8               	btfss	status,2,c
  5341   00098E  EFCB  F004         	goto	u2981
  5342   000992  EFCD  F004         	goto	u2980
  5343   000996                     u2981:
  5344   000996  EF2A  F005         	goto	l3851
  5345   00099A                     u2980:
  5346   00099A                     
  5347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  5348   00099A  C075  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5349   00099E  C076  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5350   0009A2  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  5351   0009A6  0E02               	movlw	2
  5352   0009A8  26DE               	addwf	postinc2,f,c
  5353   0009AA  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  5354   0009AE  0E00               	movlw	0
  5355   0009B0  22DD               	addwfc	postdec2,f,c
  5356   0009B2  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5357   0009B6  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5358   0009BA  CFDE F040          	movff	postinc2,??_vfpfcnvrt+2
  5359   0009BE  CFDD F041          	movff	postdec2,??_vfpfcnvrt+3
  5360   0009C2  C040  F07A         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  5361   0009C6  C041  F07B         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  5362   0009CA  0100               	movlb	0	; () banked
  5363   0009CC  6B7C               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  5364   0009CE  6B7D               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  5365   0009D0  6B7E               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  5366   0009D2  6B7F               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  5367   0009D4  6B80               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  5368   0009D6  6B81               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  5369                           
  5370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  5371   0009D8  0E01               	movlw	1
  5372   0009DA  2582               	addwf	vfpfcnvrt@cp& (0+255),w,b
  5373   0009DC  6E3E               	movwf	??_vfpfcnvrt^0,c
  5374   0009DE  0E00               	movlw	0
  5375   0009E0  2183               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  5376   0009E2  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  5377   0009E4  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5378   0009E8  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5379   0009EC  C03E  FFDE         	movff	??_vfpfcnvrt,postinc2
  5380   0009F0  C03F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5381                           
  5382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  5383   0009F4  EF14  F005         	goto	l3849
  5384   0009F8                     l3843:
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  5388   0009F8  C071  F02C         	movff	vfpfcnvrt@fp,xtoa@fp
  5389   0009FC  C072  F02D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  5390   000A00  C07A  F02E         	movff	vfpfcnvrt@convarg,xtoa@d
  5391   000A04  C07B  F02F         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  5392   000A08  C07C  F030         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  5393   000A0C  C07D  F031         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  5394   000A10  C07E  F032         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  5395   000A14  C07F  F033         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  5396   000A18  C080  F034         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  5397   000A1C  C081  F035         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  5398   000A20  EC9A  F007         	call	_xtoa	;wreg free
  5399   000A24  EF47  F005         	goto	l1252
  5400   000A28                     l3849:
  5401                           
  5402                           ; BSR set to: 0
  5403   000A28  C082  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5404   000A2C  C083  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5405   000A30                     	if	0	;tblptru may be non-zero
  5406   000A30                     	endif
  5407   000A30                     	if	0	;tblptru may be non-zero
  5408   000A30                     	endif
  5409   000A30  0008               	tblrd		*
  5410   000A32  50F5               	movf	tablat,w,c
  5411   000A34  6E3E               	movwf	??_vfpfcnvrt^0,c
  5412   000A36  6A3F               	clrf	(??_vfpfcnvrt+1)^0,c
  5413                           
  5414                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5415                           ; Switch size 1, requested type "simple"
  5416                           ; Number of cases is 1, Range of values is 0 to 0
  5417                           ; switch strategies available:
  5418                           ; Name         Instructions Cycles
  5419                           ; simple_byte            4     3 (average)
  5420                           ;	Chosen strategy is simple_byte
  5421   000A38  503F               	movf	(??_vfpfcnvrt+1)^0,w,c
  5422   000A3A  0A00               	xorlw	0	; case 0
  5423   000A3C  B4D8               	btfsc	status,2,c
  5424   000A3E  EF23  F005         	goto	l4303
  5425   000A42  EF2A  F005         	goto	l3851
  5426   000A46                     l4303:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ; Switch size 1, requested type "simple"
  5430                           ; Number of cases is 1, Range of values is 120 to 120
  5431                           ; switch strategies available:
  5432                           ; Name         Instructions Cycles
  5433                           ; simple_byte            4     3 (average)
  5434                           ;	Chosen strategy is simple_byte
  5435   000A46  503E               	movf	??_vfpfcnvrt^0,w,c
  5436   000A48  0A78               	xorlw	120	; case 120
  5437   000A4A  B4D8               	btfsc	status,2,c
  5438   000A4C  EFFC  F004         	goto	l3843
  5439   000A50  EF2A  F005         	goto	l3851
  5440   000A54                     l3851:
  5441                           
  5442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  5443   000A54  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5444   000A58  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5445   000A5C  2ADE               	incf	postinc2,f,c
  5446   000A5E  0E00               	movlw	0
  5447   000A60  22DD               	addwfc	postdec2,f,c
  5448   000A62  EF47  F005         	goto	l1252
  5449   000A66                     l3855:
  5450                           
  5451                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  5452   000A66  C073  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5453   000A6A  C074  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5454   000A6E  CFDE FFF6          	movff	postinc2,tblptrl
  5455   000A72  CFDD FFF7          	movff	postdec2,tblptrh
  5456   000A76                     	if	0	;tblptru may be non-zero
  5457   000A76                     	endif
  5458   000A76                     	if	0	;tblptru may be non-zero
  5459   000A76                     	endif
  5460   000A76  0008               	tblrd		*
  5461   000A78  50F5               	movf	tablat,w,c
  5462   000A7A  6E11               	movwf	fputc@c^0,c
  5463   000A7C  6A12               	clrf	(fputc@c+1)^0,c
  5464   000A7E  C071  F013         	movff	vfpfcnvrt@fp,fputc@fp
  5465   000A82  C072  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5466   000A86  EC5E  F00C         	call	_fputc	;wreg free
  5467   000A8A  EF2A  F005         	goto	l3851
  5468   000A8E                     l1252:
  5469   000A8E  0012               	return		;funcret
  5470   000A90                     __end_of_vfpfcnvrt:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _xtoa *****************
  5474 ;; Defined at:
  5475 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  5478 ;;		 -> NULL(0), 
  5479 ;;  d               8   45[COMRAM] unsigned long long 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  n               8    6[BANK0 ] unsigned long long 
  5482 ;;  i               2   14[BANK0 ] int 
  5483 ;;  w               2    4[BANK0 ] int 
  5484 ;;  p               2    2[BANK0 ] int 
  5485 ;;  c               1   16[BANK0 ] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5495 ;;      Params:        10       0       0       0       0       0       0
  5496 ;;      Locals:         0      17       0       0       0       0       0
  5497 ;;      Temps:          8       0       0       0       0       0       0
  5498 ;;      Totals:        18      17       0       0       0       0       0
  5499 ;;Total ram usage:       35 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 9
  5502 ;; This function calls:
  5503 ;;		_pad
  5504 ;; This function is called by:
  5505 ;;		_vfpfcnvrt
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text23
  5510   000F34                     __ptext23:
  5511                           	callstack 0
  5512   000F34                     _xtoa:
  5513                           	callstack 18
  5514   000F34                     
  5515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  5516   000F34  BE45               	btfsc	(_prec+1)^0,7,c
  5517   000F36  EF9F  F007         	goto	u2771
  5518   000F3A  EFA1  F007         	goto	u2770
  5519   000F3E                     u2771:
  5520   000F3E  EFA2  F007         	goto	l3707
  5521   000F42                     u2770:
  5522   000F42                     
  5523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  5524   000F42  924E               	bcf	_flags^0,1,c
  5525   000F44                     l3707:
  5526                           
  5527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  5528   000F44  BE45               	btfsc	(_prec+1)^0,7,c
  5529   000F46  EFAF  F007         	goto	u2780
  5530   000F4A  5045               	movf	(_prec+1)^0,w,c
  5531   000F4C  E106               	bnz	u2781
  5532   000F4E  0444               	decf	_prec^0,w,c
  5533   000F50  B0D8               	btfsc	status,0,c
  5534   000F52  EFAD  F007         	goto	u2781
  5535   000F56  EFAF  F007         	goto	u2780
  5536   000F5A                     u2781:
  5537   000F5A  EFB6  F007         	goto	l1218
  5538   000F5E                     u2780:
  5539   000F5E  0E00               	movlw	0
  5540   000F60  0100               	movlb	0	; () banked
  5541   000F62  6F63               	movwf	(xtoa@p+1)& (0+255),b
  5542   000F64  0E01               	movlw	1
  5543   000F66  6F62               	movwf	xtoa@p& (0+255),b
  5544   000F68  EFBA  F007         	goto	l1220
  5545   000F6C                     l1218:
  5546   000F6C  C044  F062         	movff	_prec,xtoa@p
  5547   000F70  C045  F063         	movff	_prec+1,xtoa@p+1
  5548   000F74                     l1220:
  5549                           
  5550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  5551   000F74  C042  F064         	movff	_width,xtoa@w
  5552   000F78  C043  F065         	movff	_width+1,xtoa@w+1
  5553                           
  5554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  5555   000F7C  C02E  F066         	movff	xtoa@d,xtoa@n
  5556   000F80  C02F  F067         	movff	xtoa@d+1,xtoa@n+1
  5557   000F84  C030  F068         	movff	xtoa@d+2,xtoa@n+2
  5558   000F88  C031  F069         	movff	xtoa@d+3,xtoa@n+3
  5559   000F8C  C032  F06A         	movff	xtoa@d+4,xtoa@n+4
  5560   000F90  C033  F06B         	movff	xtoa@d+5,xtoa@n+5
  5561   000F94  C034  F06C         	movff	xtoa@d+6,xtoa@n+6
  5562   000F98  C035  F06D         	movff	xtoa@d+7,xtoa@n+7
  5563   000F9C                     
  5564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  5565   000F9C  0E00               	movlw	0
  5566   000F9E  0100               	movlb	0	; () banked
  5567   000FA0  6F6F               	movwf	(xtoa@i+1)& (0+255),b
  5568   000FA2  0E1F               	movlw	31
  5569   000FA4  6F6E               	movwf	xtoa@i& (0+255),b
  5570   000FA6                     
  5571                           ; BSR set to: 0
  5572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  5573   000FA6  0E00               	movlw	0
  5574   000FA8  6FCA               	movwf	(_dbuf+31)& (0+255),b
  5575                           
  5576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  5577   000FAA  EF32  F008         	goto	l3735
  5578   000FAE                     l3715:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  5582   000FAE  076E               	decf	xtoa@i& (0+255),f,b
  5583   000FB0  A0D8               	btfss	status,0,c
  5584   000FB2  076F               	decf	(xtoa@i+1)& (0+255),f,b
  5585   000FB4                     
  5586                           ; BSR set to: 0
  5587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  5588   000FB4  5166               	movf	xtoa@n& (0+255),w,b
  5589   000FB6  0B0F               	andlw	15
  5590   000FB8  6F70               	movwf	xtoa@c& (0+255),b
  5591   000FBA                     
  5592                           ; BSR set to: 0
  5593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  5594   000FBA  0E09               	movlw	9
  5595   000FBC  6570               	cpfsgt	xtoa@c& (0+255),b
  5596   000FBE  EFE3  F007         	goto	u2791
  5597   000FC2  EFE5  F007         	goto	u2790
  5598   000FC6                     u2791:
  5599   000FC6  EFED  F007         	goto	l3723
  5600   000FCA                     u2790:
  5601   000FCA                     
  5602                           ; BSR set to: 0
  5603   000FCA  0E57               	movlw	87
  5604   000FCC  2570               	addwf	xtoa@c& (0+255),w,b
  5605   000FCE  6F60               	movwf	_xtoa$1714& (0+255),b
  5606   000FD0  6B61               	clrf	(_xtoa$1714+1)& (0+255),b
  5607   000FD2  0E00               	movlw	0
  5608   000FD4  2361               	addwfc	(_xtoa$1714+1)& (0+255),f,b
  5609   000FD6  EFF3  F007         	goto	l3725
  5610   000FDA                     l3723:
  5611                           
  5612                           ; BSR set to: 0
  5613   000FDA  0E30               	movlw	48
  5614   000FDC  2570               	addwf	xtoa@c& (0+255),w,b
  5615   000FDE  6F60               	movwf	_xtoa$1714& (0+255),b
  5616   000FE0  6B61               	clrf	(_xtoa$1714+1)& (0+255),b
  5617   000FE2  0E00               	movlw	0
  5618   000FE4  2361               	addwfc	(_xtoa$1714+1)& (0+255),f,b
  5619   000FE6                     l3725:
  5620                           
  5621                           ; BSR set to: 0
  5622   000FE6  C060  F070         	movff	_xtoa$1714,xtoa@c
  5623   000FEA                     
  5624                           ; BSR set to: 0
  5625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  5626   000FEA  0EAB               	movlw	low _dbuf
  5627   000FEC  256E               	addwf	xtoa@i& (0+255),w,b
  5628   000FEE  6ED9               	movwf	fsr2l,c
  5629   000FF0  0E00               	movlw	high _dbuf
  5630   000FF2  216F               	addwfc	(xtoa@i+1)& (0+255),w,b
  5631   000FF4  6EDA               	movwf	fsr2h,c
  5632   000FF6  C070  FFDF         	movff	xtoa@c,indf2
  5633   000FFA                     
  5634                           ; BSR set to: 0
  5635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  5636   000FFA  0762               	decf	xtoa@p& (0+255),f,b
  5637   000FFC  A0D8               	btfss	status,0,c
  5638   000FFE  0763               	decf	(xtoa@p+1)& (0+255),f,b
  5639   001000                     
  5640                           ; BSR set to: 0
  5641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  5642   001000  0764               	decf	xtoa@w& (0+255),f,b
  5643   001002  A0D8               	btfss	status,0,c
  5644   001004  0765               	decf	(xtoa@w+1)& (0+255),f,b
  5645   001006                     
  5646                           ; BSR set to: 0
  5647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  5648   001006  C066  F036         	movff	xtoa@n,??_xtoa
  5649   00100A  C067  F037         	movff	xtoa@n+1,??_xtoa+1
  5650   00100E  C068  F038         	movff	xtoa@n+2,??_xtoa+2
  5651   001012  C069  F039         	movff	xtoa@n+3,??_xtoa+3
  5652   001016  C06A  F03A         	movff	xtoa@n+4,??_xtoa+4
  5653   00101A  C06B  F03B         	movff	xtoa@n+5,??_xtoa+5
  5654   00101E  C06C  F03C         	movff	xtoa@n+6,??_xtoa+6
  5655   001022  C06D  F03D         	movff	xtoa@n+7,??_xtoa+7
  5656   001026  0E05               	movlw	5
  5657   001028  EF1F  F008         	goto	u2800
  5658   00102C                     u2805:
  5659   00102C  90D8               	bcf	status,0,c
  5660   00102E  323D               	rrcf	(??_xtoa+7)^0,f,c
  5661   001030  323C               	rrcf	(??_xtoa+6)^0,f,c
  5662   001032  323B               	rrcf	(??_xtoa+5)^0,f,c
  5663   001034  323A               	rrcf	(??_xtoa+4)^0,f,c
  5664   001036  3239               	rrcf	(??_xtoa+3)^0,f,c
  5665   001038  3238               	rrcf	(??_xtoa+2)^0,f,c
  5666   00103A  3237               	rrcf	(??_xtoa+1)^0,f,c
  5667   00103C  3236               	rrcf	??_xtoa^0,f,c
  5668   00103E                     u2800:
  5669   00103E  2EE8               	decfsz	wreg,f,c
  5670   001040  EF16  F008         	goto	u2805
  5671   001044  C036  F066         	movff	??_xtoa,xtoa@n
  5672   001048  C037  F067         	movff	??_xtoa+1,xtoa@n+1
  5673   00104C  C038  F068         	movff	??_xtoa+2,xtoa@n+2
  5674   001050  C039  F069         	movff	??_xtoa+3,xtoa@n+3
  5675   001054  C03A  F06A         	movff	??_xtoa+4,xtoa@n+4
  5676   001058  C03B  F06B         	movff	??_xtoa+5,xtoa@n+5
  5677   00105C  C03C  F06C         	movff	??_xtoa+6,xtoa@n+6
  5678   001060  C03D  F06D         	movff	??_xtoa+7,xtoa@n+7
  5679   001064                     l3735:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  5683   001064  BF6F               	btfsc	(xtoa@i+1)& (0+255),7,b
  5684   001066  EF3E  F008         	goto	u2811
  5685   00106A  516F               	movf	(xtoa@i+1)& (0+255),w,b
  5686   00106C  E109               	bnz	u2810
  5687   00106E  0E02               	movlw	2
  5688   001070  5D6E               	subwf	xtoa@i& (0+255),w,b
  5689   001072  A0D8               	btfss	status,0,c
  5690   001074  EF3E  F008         	goto	u2811
  5691   001078  EF40  F008         	goto	u2810
  5692   00107C                     u2811:
  5693   00107C  EF70  F008         	goto	l3745
  5694   001080                     u2810:
  5695   001080                     
  5696                           ; BSR set to: 0
  5697   001080  5166               	movf	xtoa@n& (0+255),w,b
  5698   001082  1167               	iorwf	(xtoa@n+1)& (0+255),w,b
  5699   001084  1168               	iorwf	(xtoa@n+2)& (0+255),w,b
  5700   001086  1169               	iorwf	(xtoa@n+3)& (0+255),w,b
  5701   001088  116A               	iorwf	(xtoa@n+4)& (0+255),w,b
  5702   00108A  116B               	iorwf	(xtoa@n+5)& (0+255),w,b
  5703   00108C  116C               	iorwf	(xtoa@n+6)& (0+255),w,b
  5704   00108E  116D               	iorwf	(xtoa@n+7)& (0+255),w,b
  5705   001090  A4D8               	btfss	status,2,c
  5706   001092  EF4D  F008         	goto	u2821
  5707   001096  EF4F  F008         	goto	u2820
  5708   00109A                     u2821:
  5709   00109A  EFD7  F007         	goto	l3715
  5710   00109E                     u2820:
  5711   00109E                     
  5712                           ; BSR set to: 0
  5713   00109E  BF63               	btfsc	(xtoa@p+1)& (0+255),7,b
  5714   0010A0  EF5C  F008         	goto	u2830
  5715   0010A4  5163               	movf	(xtoa@p+1)& (0+255),w,b
  5716   0010A6  E106               	bnz	u2831
  5717   0010A8  0562               	decf	xtoa@p& (0+255),w,b
  5718   0010AA  B0D8               	btfsc	status,0,c
  5719   0010AC  EF5A  F008         	goto	u2831
  5720   0010B0  EF5C  F008         	goto	u2830
  5721   0010B4                     u2831:
  5722   0010B4  EFD7  F007         	goto	l3715
  5723   0010B8                     u2830:
  5724   0010B8                     
  5725                           ; BSR set to: 0
  5726   0010B8  BF65               	btfsc	(xtoa@w+1)& (0+255),7,b
  5727   0010BA  EF67  F008         	goto	u2841
  5728   0010BE  5165               	movf	(xtoa@w+1)& (0+255),w,b
  5729   0010C0  E108               	bnz	u2840
  5730   0010C2  0564               	decf	xtoa@w& (0+255),w,b
  5731   0010C4  A0D8               	btfss	status,0,c
  5732   0010C6  EF67  F008         	goto	u2841
  5733   0010CA  EF69  F008         	goto	u2840
  5734   0010CE                     u2841:
  5735   0010CE  EF70  F008         	goto	l3745
  5736   0010D2                     u2840:
  5737   0010D2                     
  5738                           ; BSR set to: 0
  5739   0010D2  B24E               	btfsc	_flags^0,1,c
  5740   0010D4  EF6E  F008         	goto	u2851
  5741   0010D8  EF70  F008         	goto	u2850
  5742   0010DC                     u2851:
  5743   0010DC  EFD7  F007         	goto	l3715
  5744   0010E0                     u2850:
  5745   0010E0                     l3745:
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  5749   0010E0  C02C  F021         	movff	xtoa@fp,pad@fp
  5750   0010E4  C02D  F022         	movff	xtoa@fp+1,pad@fp+1
  5751   0010E8  0EAB               	movlw	low _dbuf
  5752   0010EA  256E               	addwf	xtoa@i& (0+255),w,b
  5753   0010EC  6E23               	movwf	pad@buf^0,c
  5754   0010EE  0E00               	movlw	high _dbuf
  5755   0010F0  216F               	addwfc	(xtoa@i+1)& (0+255),w,b
  5756   0010F2  6E24               	movwf	(pad@buf+1)^0,c
  5757   0010F4  C064  F025         	movff	xtoa@w,pad@p
  5758   0010F8  C065  F026         	movff	xtoa@w+1,pad@p+1
  5759   0010FC  ECBC  F00B         	call	_pad	;wreg free
  5760   001100  0012               	return		;funcret
  5761   001102                     __end_of_xtoa:
  5762                           	callstack 0
  5763                           
  5764 ;; *************** function _dtoa *****************
  5765 ;; Defined at:
  5766 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  5769 ;;		 -> NULL(0), 
  5770 ;;  d               8   45[COMRAM] long long 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  n               8    6[BANK0 ] long long 
  5773 ;;  i               2   15[BANK0 ] int 
  5774 ;;  w               2    4[BANK0 ] int 
  5775 ;;  p               2    2[BANK0 ] int 
  5776 ;;  s               1   14[BANK0 ] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5786 ;;      Params:        10       0       0       0       0       0       0
  5787 ;;      Locals:         0      17       0       0       0       0       0
  5788 ;;      Temps:          8       0       0       0       0       0       0
  5789 ;;      Totals:        18      17       0       0       0       0       0
  5790 ;;Total ram usage:       35 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 9
  5793 ;; This function calls:
  5794 ;;		___aodiv
  5795 ;;		___aomod
  5796 ;;		_abs
  5797 ;;		_pad
  5798 ;; This function is called by:
  5799 ;;		_vfpfcnvrt
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text24
  5804   000A90                     __ptext24:
  5805                           	callstack 0
  5806   000A90                     _dtoa:
  5807                           	callstack 18
  5808   000A90                     
  5809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5810   000A90  C02E  F066         	movff	dtoa@d,dtoa@n
  5811   000A94  C02F  F067         	movff	dtoa@d+1,dtoa@n+1
  5812   000A98  C030  F068         	movff	dtoa@d+2,dtoa@n+2
  5813   000A9C  C031  F069         	movff	dtoa@d+3,dtoa@n+3
  5814   000AA0  C032  F06A         	movff	dtoa@d+4,dtoa@n+4
  5815   000AA4  C033  F06B         	movff	dtoa@d+5,dtoa@n+5
  5816   000AA8  C034  F06C         	movff	dtoa@d+6,dtoa@n+6
  5817   000AAC  C035  F06D         	movff	dtoa@d+7,dtoa@n+7
  5818   000AB0                     
  5819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5820   000AB0  0100               	movlb	0	; () banked
  5821   000AB2  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  5822   000AB4  EF5E  F005         	goto	u2641
  5823   000AB8  EF61  F005         	goto	u2640
  5824   000ABC                     u2641:
  5825   000ABC  0E01               	movlw	1
  5826   000ABE  EF62  F005         	goto	u2650
  5827   000AC2                     u2640:
  5828   000AC2  0E00               	movlw	0
  5829   000AC4                     u2650:
  5830   000AC4  6F6E               	movwf	dtoa@s& (0+255),b
  5831   000AC6                     
  5832                           ; BSR set to: 0
  5833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5834   000AC6  516E               	movf	dtoa@s& (0+255),w,b
  5835   000AC8  B4D8               	btfsc	status,2,c
  5836   000ACA  EF69  F005         	goto	u2661
  5837   000ACE  EF6B  F005         	goto	u2660
  5838   000AD2                     u2661:
  5839   000AD2  EF7B  F005         	goto	l3651
  5840   000AD6                     u2660:
  5841   000AD6                     
  5842                           ; BSR set to: 0
  5843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5844   000AD6  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  5845   000AD8  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  5846   000ADA  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  5847   000ADC  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  5848   000ADE  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  5849   000AE0  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  5850   000AE2  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  5851   000AE4  6D66               	negf	dtoa@n& (0+255),b
  5852   000AE6  0E00               	movlw	0
  5853   000AE8  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  5854   000AEA  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  5855   000AEC  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  5856   000AEE  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  5857   000AF0  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  5858   000AF2  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  5859   000AF4  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  5860   000AF6                     l3651:
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  5864   000AF6  BE45               	btfsc	(_prec+1)^0,7,c
  5865   000AF8  EF80  F005         	goto	u2671
  5866   000AFC  EF82  F005         	goto	u2670
  5867   000B00                     u2671:
  5868   000B00  EF83  F005         	goto	l3655
  5869   000B04                     u2670:
  5870   000B04                     
  5871                           ; BSR set to: 0
  5872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  5873   000B04  924E               	bcf	_flags^0,1,c
  5874   000B06                     l3655:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5878   000B06  BE45               	btfsc	(_prec+1)^0,7,c
  5879   000B08  EF90  F005         	goto	u2680
  5880   000B0C  5045               	movf	(_prec+1)^0,w,c
  5881   000B0E  E106               	bnz	u2681
  5882   000B10  0444               	decf	_prec^0,w,c
  5883   000B12  B0D8               	btfsc	status,0,c
  5884   000B14  EF8E  F005         	goto	u2681
  5885   000B18  EF90  F005         	goto	u2680
  5886   000B1C                     u2681:
  5887   000B1C  EF96  F005         	goto	l1197
  5888   000B20                     u2680:
  5889   000B20                     
  5890                           ; BSR set to: 0
  5891   000B20  0E00               	movlw	0
  5892   000B22  6F63               	movwf	(dtoa@p+1)& (0+255),b
  5893   000B24  0E01               	movlw	1
  5894   000B26  6F62               	movwf	dtoa@p& (0+255),b
  5895   000B28  EF9A  F005         	goto	l1199
  5896   000B2C                     l1197:
  5897                           
  5898                           ; BSR set to: 0
  5899   000B2C  C044  F062         	movff	_prec,dtoa@p
  5900   000B30  C045  F063         	movff	_prec+1,dtoa@p+1
  5901   000B34                     l1199:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5905   000B34  C042  F064         	movff	_width,dtoa@w
  5906   000B38  C043  F065         	movff	_width+1,dtoa@w+1
  5907   000B3C                     
  5908                           ; BSR set to: 0
  5909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5910   000B3C  516E               	movf	dtoa@s& (0+255),w,b
  5911   000B3E  B4D8               	btfsc	status,2,c
  5912   000B40  EFA4  F005         	goto	u2691
  5913   000B44  EFA6  F005         	goto	u2690
  5914   000B48                     u2691:
  5915   000B48  EFBD  F005         	goto	l1200
  5916   000B4C                     u2690:
  5917   000B4C                     
  5918                           ; BSR set to: 0
  5919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5920   000B4C  0764               	decf	dtoa@w& (0+255),f,b
  5921   000B4E  A0D8               	btfss	status,0,c
  5922   000B50  0765               	decf	(dtoa@w+1)& (0+255),f,b
  5923   000B52                     
  5924                           ; BSR set to: 0
  5925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5926   000B52  516E               	movf	dtoa@s& (0+255),w,b
  5927   000B54  A4D8               	btfss	status,2,c
  5928   000B56  EFAF  F005         	goto	u2701
  5929   000B5A  EFB1  F005         	goto	u2700
  5930   000B5E                     u2701:
  5931   000B5E  EFB7  F005         	goto	l3667
  5932   000B62                     u2700:
  5933   000B62                     
  5934                           ; BSR set to: 0
  5935   000B62  0E00               	movlw	0
  5936   000B64  6F61               	movwf	(_dtoa$1704+1)& (0+255),b
  5937   000B66  0E2B               	movlw	43
  5938   000B68  6F60               	movwf	_dtoa$1704& (0+255),b
  5939   000B6A  EFBB  F005         	goto	l3669
  5940   000B6E                     l3667:
  5941                           
  5942                           ; BSR set to: 0
  5943   000B6E  0E00               	movlw	0
  5944   000B70  6F61               	movwf	(_dtoa$1704+1)& (0+255),b
  5945   000B72  0E2D               	movlw	45
  5946   000B74  6F60               	movwf	_dtoa$1704& (0+255),b
  5947   000B76                     l3669:
  5948                           
  5949                           ; BSR set to: 0
  5950   000B76  C060  F06E         	movff	_dtoa$1704,dtoa@s
  5951   000B7A                     l1200:
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5955   000B7A  0E00               	movlw	0
  5956   000B7C  6F70               	movwf	(dtoa@i+1)& (0+255),b
  5957   000B7E  0E1F               	movlw	31
  5958   000B80  6F6F               	movwf	dtoa@i& (0+255),b
  5959   000B82                     
  5960                           ; BSR set to: 0
  5961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5962   000B82  0E00               	movlw	0
  5963   000B84  6FCA               	movwf	(_dbuf+31)& (0+255),b
  5964                           
  5965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5966   000B86  EF42  F006         	goto	l3683
  5967   000B8A                     l3673:
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5971   000B8A  076F               	decf	dtoa@i& (0+255),f,b
  5972   000B8C  A0D8               	btfss	status,0,c
  5973   000B8E  0770               	decf	(dtoa@i+1)& (0+255),f,b
  5974   000B90                     
  5975                           ; BSR set to: 0
  5976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5977   000B90  0EAB               	movlw	low _dbuf
  5978   000B92  256F               	addwf	dtoa@i& (0+255),w,b
  5979   000B94  6ED9               	movwf	fsr2l,c
  5980   000B96  0E00               	movlw	high _dbuf
  5981   000B98  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  5982   000B9A  6EDA               	movwf	fsr2h,c
  5983   000B9C  C066  F00F         	movff	dtoa@n,___aomod@dividend
  5984   000BA0  C067  F010         	movff	dtoa@n+1,___aomod@dividend+1
  5985   000BA4  C068  F011         	movff	dtoa@n+2,___aomod@dividend+2
  5986   000BA8  C069  F012         	movff	dtoa@n+3,___aomod@dividend+3
  5987   000BAC  C06A  F013         	movff	dtoa@n+4,___aomod@dividend+4
  5988   000BB0  C06B  F014         	movff	dtoa@n+5,___aomod@dividend+5
  5989   000BB4  C06C  F015         	movff	dtoa@n+6,___aomod@dividend+6
  5990   000BB8  C06D  F016         	movff	dtoa@n+7,___aomod@dividend+7
  5991   000BBC  0E0A               	movlw	10
  5992   000BBE  6E17               	movwf	___aomod@divisor^0,c
  5993   000BC0  0E00               	movlw	0
  5994   000BC2  6E18               	movwf	(___aomod@divisor+1)^0,c
  5995   000BC4  0E00               	movlw	0
  5996   000BC6  6E19               	movwf	(___aomod@divisor+2)^0,c
  5997   000BC8  0E00               	movlw	0
  5998   000BCA  6E1A               	movwf	(___aomod@divisor+3)^0,c
  5999   000BCC  0E00               	movlw	0
  6000   000BCE  6E1B               	movwf	(___aomod@divisor+4)^0,c
  6001   000BD0  0E00               	movlw	0
  6002   000BD2  6E1C               	movwf	(___aomod@divisor+5)^0,c
  6003   000BD4  0E00               	movlw	0
  6004   000BD6  6E1D               	movwf	(___aomod@divisor+6)^0,c
  6005   000BD8  0E00               	movlw	0
  6006   000BDA  6E1E               	movwf	(___aomod@divisor+7)^0,c
  6007   000BDC  EC01  F00A         	call	___aomod	;wreg free
  6008   000BE0  C00F  F036         	movff	?___aomod,??_dtoa
  6009   000BE4  C010  F037         	movff	?___aomod+1,??_dtoa+1
  6010   000BE8  C011  F038         	movff	?___aomod+2,??_dtoa+2
  6011   000BEC  C012  F039         	movff	?___aomod+3,??_dtoa+3
  6012   000BF0  C013  F03A         	movff	?___aomod+4,??_dtoa+4
  6013   000BF4  C014  F03B         	movff	?___aomod+5,??_dtoa+5
  6014   000BF8  C015  F03C         	movff	?___aomod+6,??_dtoa+6
  6015   000BFC  C016  F03D         	movff	?___aomod+7,??_dtoa+7
  6016   000C00  C036  F021         	movff	??_dtoa,abs@a
  6017   000C04  C037  F022         	movff	??_dtoa+1,abs@a+1
  6018   000C08  ECA8  F00D         	call	_abs	;wreg free
  6019   000C0C  5021               	movf	?_abs^0,w,c
  6020   000C0E  0F30               	addlw	48
  6021   000C10  6EDF               	movwf	indf2,c
  6022   000C12                     
  6023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  6024   000C12  0100               	movlb	0	; () banked
  6025   000C14  0762               	decf	dtoa@p& (0+255),f,b
  6026   000C16  A0D8               	btfss	status,0,c
  6027   000C18  0763               	decf	(dtoa@p+1)& (0+255),f,b
  6028   000C1A                     
  6029                           ; BSR set to: 0
  6030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  6031   000C1A  0764               	decf	dtoa@w& (0+255),f,b
  6032   000C1C  A0D8               	btfss	status,0,c
  6033   000C1E  0765               	decf	(dtoa@w+1)& (0+255),f,b
  6034   000C20                     
  6035                           ; BSR set to: 0
  6036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  6037   000C20  C066  F00F         	movff	dtoa@n,___aodiv@dividend
  6038   000C24  C067  F010         	movff	dtoa@n+1,___aodiv@dividend+1
  6039   000C28  C068  F011         	movff	dtoa@n+2,___aodiv@dividend+2
  6040   000C2C  C069  F012         	movff	dtoa@n+3,___aodiv@dividend+3
  6041   000C30  C06A  F013         	movff	dtoa@n+4,___aodiv@dividend+4
  6042   000C34  C06B  F014         	movff	dtoa@n+5,___aodiv@dividend+5
  6043   000C38  C06C  F015         	movff	dtoa@n+6,___aodiv@dividend+6
  6044   000C3C  C06D  F016         	movff	dtoa@n+7,___aodiv@dividend+7
  6045   000C40  0E0A               	movlw	10
  6046   000C42  6E17               	movwf	___aodiv@divisor^0,c
  6047   000C44  0E00               	movlw	0
  6048   000C46  6E18               	movwf	(___aodiv@divisor+1)^0,c
  6049   000C48  0E00               	movlw	0
  6050   000C4A  6E19               	movwf	(___aodiv@divisor+2)^0,c
  6051   000C4C  0E00               	movlw	0
  6052   000C4E  6E1A               	movwf	(___aodiv@divisor+3)^0,c
  6053   000C50  0E00               	movlw	0
  6054   000C52  6E1B               	movwf	(___aodiv@divisor+4)^0,c
  6055   000C54  0E00               	movlw	0
  6056   000C56  6E1C               	movwf	(___aodiv@divisor+5)^0,c
  6057   000C58  0E00               	movlw	0
  6058   000C5A  6E1D               	movwf	(___aodiv@divisor+6)^0,c
  6059   000C5C  0E00               	movlw	0
  6060   000C5E  6E1E               	movwf	(___aodiv@divisor+7)^0,c
  6061   000C60  EC81  F008         	call	___aodiv	;wreg free
  6062   000C64  C00F  F066         	movff	?___aodiv,dtoa@n
  6063   000C68  C010  F067         	movff	?___aodiv+1,dtoa@n+1
  6064   000C6C  C011  F068         	movff	?___aodiv+2,dtoa@n+2
  6065   000C70  C012  F069         	movff	?___aodiv+3,dtoa@n+3
  6066   000C74  C013  F06A         	movff	?___aodiv+4,dtoa@n+4
  6067   000C78  C014  F06B         	movff	?___aodiv+5,dtoa@n+5
  6068   000C7C  C015  F06C         	movff	?___aodiv+6,dtoa@n+6
  6069   000C80  C016  F06D         	movff	?___aodiv+7,dtoa@n+7
  6070   000C84                     l3683:
  6071                           
  6072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  6073   000C84  0100               	movlb	0	; () banked
  6074   000C86  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  6075   000C88  EF4E  F006         	goto	u2711
  6076   000C8C  5170               	movf	(dtoa@i+1)& (0+255),w,b
  6077   000C8E  E108               	bnz	u2710
  6078   000C90  056F               	decf	dtoa@i& (0+255),w,b
  6079   000C92  A0D8               	btfss	status,0,c
  6080   000C94  EF4E  F006         	goto	u2711
  6081   000C98  EF50  F006         	goto	u2710
  6082   000C9C                     u2711:
  6083   000C9C  EF80  F006         	goto	l3693
  6084   000CA0                     u2710:
  6085   000CA0                     
  6086                           ; BSR set to: 0
  6087   000CA0  5166               	movf	dtoa@n& (0+255),w,b
  6088   000CA2  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  6089   000CA4  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  6090   000CA6  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  6091   000CA8  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  6092   000CAA  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  6093   000CAC  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  6094   000CAE  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  6095   000CB0  A4D8               	btfss	status,2,c
  6096   000CB2  EF5D  F006         	goto	u2721
  6097   000CB6  EF5F  F006         	goto	u2720
  6098   000CBA                     u2721:
  6099   000CBA  EFC5  F005         	goto	l3673
  6100   000CBE                     u2720:
  6101   000CBE                     
  6102                           ; BSR set to: 0
  6103   000CBE  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  6104   000CC0  EF6C  F006         	goto	u2730
  6105   000CC4  5163               	movf	(dtoa@p+1)& (0+255),w,b
  6106   000CC6  E106               	bnz	u2731
  6107   000CC8  0562               	decf	dtoa@p& (0+255),w,b
  6108   000CCA  B0D8               	btfsc	status,0,c
  6109   000CCC  EF6A  F006         	goto	u2731
  6110   000CD0  EF6C  F006         	goto	u2730
  6111   000CD4                     u2731:
  6112   000CD4  EFC5  F005         	goto	l3673
  6113   000CD8                     u2730:
  6114   000CD8                     
  6115                           ; BSR set to: 0
  6116   000CD8  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  6117   000CDA  EF77  F006         	goto	u2741
  6118   000CDE  5165               	movf	(dtoa@w+1)& (0+255),w,b
  6119   000CE0  E108               	bnz	u2740
  6120   000CE2  0564               	decf	dtoa@w& (0+255),w,b
  6121   000CE4  A0D8               	btfss	status,0,c
  6122   000CE6  EF77  F006         	goto	u2741
  6123   000CEA  EF79  F006         	goto	u2740
  6124   000CEE                     u2741:
  6125   000CEE  EF80  F006         	goto	l3693
  6126   000CF2                     u2740:
  6127   000CF2                     
  6128                           ; BSR set to: 0
  6129   000CF2  B24E               	btfsc	_flags^0,1,c
  6130   000CF4  EF7E  F006         	goto	u2751
  6131   000CF8  EF80  F006         	goto	u2750
  6132   000CFC                     u2751:
  6133   000CFC  EFC5  F005         	goto	l3673
  6134   000D00                     u2750:
  6135   000D00                     l3693:
  6136                           
  6137                           ; BSR set to: 0
  6138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  6139   000D00  516E               	movf	dtoa@s& (0+255),w,b
  6140   000D02  B4D8               	btfsc	status,2,c
  6141   000D04  EF86  F006         	goto	u2761
  6142   000D08  EF88  F006         	goto	u2760
  6143   000D0C                     u2761:
  6144   000D0C  EF93  F006         	goto	l3699
  6145   000D10                     u2760:
  6146   000D10                     
  6147                           ; BSR set to: 0
  6148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  6149   000D10  076F               	decf	dtoa@i& (0+255),f,b
  6150   000D12  A0D8               	btfss	status,0,c
  6151   000D14  0770               	decf	(dtoa@i+1)& (0+255),f,b
  6152   000D16                     
  6153                           ; BSR set to: 0
  6154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  6155   000D16  0EAB               	movlw	low _dbuf
  6156   000D18  256F               	addwf	dtoa@i& (0+255),w,b
  6157   000D1A  6ED9               	movwf	fsr2l,c
  6158   000D1C  0E00               	movlw	high _dbuf
  6159   000D1E  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  6160   000D20  6EDA               	movwf	fsr2h,c
  6161   000D22  C06E  FFDF         	movff	dtoa@s,indf2
  6162   000D26                     l3699:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6166   000D26  C02C  F021         	movff	dtoa@fp,pad@fp
  6167   000D2A  C02D  F022         	movff	dtoa@fp+1,pad@fp+1
  6168   000D2E  0EAB               	movlw	low _dbuf
  6169   000D30  256F               	addwf	dtoa@i& (0+255),w,b
  6170   000D32  6E23               	movwf	pad@buf^0,c
  6171   000D34  0E00               	movlw	high _dbuf
  6172   000D36  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  6173   000D38  6E24               	movwf	(pad@buf+1)^0,c
  6174   000D3A  C064  F025         	movff	dtoa@w,pad@p
  6175   000D3E  C065  F026         	movff	dtoa@w+1,pad@p+1
  6176   000D42  ECBC  F00B         	call	_pad	;wreg free
  6177   000D46  0012               	return		;funcret
  6178   000D48                     __end_of_dtoa:
  6179                           	callstack 0
  6180                           
  6181 ;; *************** function _pad *****************
  6182 ;; Defined at:
  6183 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  6186 ;;		 -> NULL(0), 
  6187 ;;  buf             2   34[COMRAM] PTR unsigned char 
  6188 ;;		 -> dbuf(32), 
  6189 ;;  p               2   36[COMRAM] int 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  w               2   41[COMRAM] int 
  6192 ;;  i               2   39[COMRAM] int 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6202 ;;      Params:         6       0       0       0       0       0       0
  6203 ;;      Locals:         4       0       0       0       0       0       0
  6204 ;;      Temps:          1       0       0       0       0       0       0
  6205 ;;      Totals:        11       0       0       0       0       0       0
  6206 ;;Total ram usage:       11 bytes
  6207 ;; Hardware stack levels used: 1
  6208 ;; Hardware stack levels required when called: 8
  6209 ;; This function calls:
  6210 ;;		_fputc
  6211 ;;		_fputs
  6212 ;; This function is called by:
  6213 ;;		_dtoa
  6214 ;;		_xtoa
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218                           	psect	text25
  6219   001778                     __ptext25:
  6220                           	callstack 0
  6221   001778                     _pad:
  6222                           	callstack 18
  6223   001778                     
  6224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  6225   001778  A04E               	btfss	_flags^0,0,c
  6226   00177A  EFC1  F00B         	goto	u2501
  6227   00177E  EFC3  F00B         	goto	u2500
  6228   001782                     u2501:
  6229   001782  EFCD  F00B         	goto	l3585
  6230   001786                     u2500:
  6231   001786                     
  6232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  6233   001786  C023  F01A         	movff	pad@buf,fputs@s
  6234   00178A  C024  F01B         	movff	pad@buf+1,fputs@s+1
  6235   00178E  C021  F01C         	movff	pad@fp,fputs@fp
  6236   001792  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  6237   001796  EC86  F00D         	call	_fputs	;wreg free
  6238   00179A                     l3585:
  6239                           
  6240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  6241   00179A  BE26               	btfsc	(pad@p+1)^0,7,c
  6242   00179C  EFD2  F00B         	goto	u2511
  6243   0017A0  EFD4  F00B         	goto	u2510
  6244   0017A4                     u2511:
  6245   0017A4  EFDA  F00B         	goto	l3589
  6246   0017A8                     u2510:
  6247   0017A8  C025  F02A         	movff	pad@p,pad@w
  6248   0017AC  C026  F02B         	movff	pad@p+1,pad@w+1
  6249   0017B0  EFDE  F00B         	goto	l1170
  6250   0017B4                     l3589:
  6251   0017B4  0E00               	movlw	0
  6252   0017B6  6E2B               	movwf	(pad@w+1)^0,c
  6253   0017B8  0E00               	movlw	0
  6254   0017BA  6E2A               	movwf	pad@w^0,c
  6255   0017BC                     l1170:
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6258   0017BC  0E00               	movlw	0
  6259   0017BE  6E29               	movwf	(pad@i+1)^0,c
  6260   0017C0  0E00               	movlw	0
  6261   0017C2  6E28               	movwf	pad@i^0,c
  6262                           
  6263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6264   0017C4  EFF0  F00B         	goto	l3595
  6265   0017C8                     l3591:
  6266                           
  6267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6268   0017C8  0E00               	movlw	0
  6269   0017CA  6E12               	movwf	(fputc@c+1)^0,c
  6270   0017CC  0E20               	movlw	32
  6271   0017CE  6E11               	movwf	fputc@c^0,c
  6272   0017D0  C021  F013         	movff	pad@fp,fputc@fp
  6273   0017D4  C022  F014         	movff	pad@fp+1,fputc@fp+1
  6274   0017D8  EC5E  F00C         	call	_fputc	;wreg free
  6275   0017DC                     
  6276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6277   0017DC  4A28               	infsnz	pad@i^0,f,c
  6278   0017DE  2A29               	incf	(pad@i+1)^0,f,c
  6279   0017E0                     l3595:
  6280                           
  6281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6282   0017E0  502A               	movf	pad@w^0,w,c
  6283   0017E2  5C28               	subwf	pad@i^0,w,c
  6284   0017E4  5029               	movf	(pad@i+1)^0,w,c
  6285   0017E6  0A80               	xorlw	128
  6286   0017E8  6E27               	movwf	??_pad^0,c
  6287   0017EA  502B               	movf	(pad@w+1)^0,w,c
  6288   0017EC  0A80               	xorlw	128
  6289   0017EE  5827               	subwfb	??_pad^0,w,c
  6290   0017F0  A0D8               	btfss	status,0,c
  6291   0017F2  EFFD  F00B         	goto	u2521
  6292   0017F6  EFFF  F00B         	goto	u2520
  6293   0017FA                     u2521:
  6294   0017FA  EFE4  F00B         	goto	l3591
  6295   0017FE                     u2520:
  6296   0017FE                     
  6297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  6298   0017FE  B04E               	btfsc	_flags^0,0,c
  6299   001800  EF04  F00C         	goto	u2531
  6300   001804  EF06  F00C         	goto	u2530
  6301   001808                     u2531:
  6302   001808  EF10  F00C         	goto	l1175
  6303   00180C                     u2530:
  6304   00180C                     
  6305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6306   00180C  C023  F01A         	movff	pad@buf,fputs@s
  6307   001810  C024  F01B         	movff	pad@buf+1,fputs@s+1
  6308   001814  C021  F01C         	movff	pad@fp,fputs@fp
  6309   001818  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  6310   00181C  EC86  F00D         	call	_fputs	;wreg free
  6311   001820                     l1175:
  6312   001820  0012               	return		;funcret
  6313   001822                     __end_of_pad:
  6314                           	callstack 0
  6315                           
  6316 ;; *************** function _fputs *****************
  6317 ;; Defined at:
  6318 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  s               2   25[COMRAM] PTR const unsigned char 
  6321 ;;		 -> dbuf(32), 
  6322 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6323 ;;		 -> NULL(0), 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;  i               2   30[COMRAM] int 
  6326 ;;  c               1   29[COMRAM] unsigned char 
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  2   25[COMRAM] int 
  6329 ;; Registers used:
  6330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6336 ;;      Params:         4       0       0       0       0       0       0
  6337 ;;      Locals:         3       0       0       0       0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0
  6339 ;;      Totals:         7       0       0       0       0       0       0
  6340 ;;Total ram usage:        7 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 7
  6343 ;; This function calls:
  6344 ;;		_fputc
  6345 ;; This function is called by:
  6346 ;;		_pad
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text26
  6351   001B0C                     __ptext26:
  6352                           	callstack 0
  6353   001B0C                     _fputs:
  6354                           	callstack 18
  6355   001B0C  0E00               	movlw	0
  6356   001B0E  6E20               	movwf	(fputs@i+1)^0,c
  6357   001B10  0E00               	movlw	0
  6358   001B12  6E1F               	movwf	fputs@i^0,c
  6359   001B14  EF97  F00D         	goto	l3493
  6360   001B18                     l3489:
  6361   001B18  C01E  F011         	movff	fputs@c,fputc@c
  6362   001B1C  6A12               	clrf	(fputc@c+1)^0,c
  6363   001B1E  C01C  F013         	movff	fputs@fp,fputc@fp
  6364   001B22  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  6365   001B26  EC5E  F00C         	call	_fputc	;wreg free
  6366   001B2A  4A1F               	infsnz	fputs@i^0,f,c
  6367   001B2C  2A20               	incf	(fputs@i+1)^0,f,c
  6368   001B2E                     l3493:
  6369   001B2E  501F               	movf	fputs@i^0,w,c
  6370   001B30  241A               	addwf	fputs@s^0,w,c
  6371   001B32  6ED9               	movwf	fsr2l,c
  6372   001B34  5020               	movf	(fputs@i+1)^0,w,c
  6373   001B36  201B               	addwfc	(fputs@s+1)^0,w,c
  6374   001B38  6EDA               	movwf	fsr2h,c
  6375   001B3A  50DF               	movf	indf2,w,c
  6376   001B3C  6E1E               	movwf	fputs@c^0,c
  6377   001B3E  501E               	movf	fputs@c^0,w,c
  6378   001B40  A4D8               	btfss	status,2,c
  6379   001B42  EFA5  F00D         	goto	u2361
  6380   001B46  EFA7  F00D         	goto	u2360
  6381   001B4A                     u2361:
  6382   001B4A  EF8C  F00D         	goto	l3489
  6383   001B4E                     u2360:
  6384   001B4E  0012               	return		;funcret
  6385   001B50                     __end_of_fputs:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function _abs *****************
  6389 ;; Defined at:
  6390 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  a               2   32[COMRAM] int 
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  2   32[COMRAM] int 
  6397 ;; Registers used:
  6398 ;;		wreg, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6404 ;;      Params:         2       0       0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0
  6406 ;;      Temps:          2       0       0       0       0       0       0
  6407 ;;      Totals:         4       0       0       0       0       0       0
  6408 ;;Total ram usage:        4 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; Hardware stack levels required when called: 4
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_dtoa
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text27
  6419   001B50                     __ptext27:
  6420                           	callstack 0
  6421   001B50                     _abs:
  6422                           	callstack 22
  6423   001B50  BE22               	btfsc	(abs@a+1)^0,7,c
  6424   001B52  EFB5  F00D         	goto	u2540
  6425   001B56  5022               	movf	(abs@a+1)^0,w,c
  6426   001B58  E106               	bnz	u2541
  6427   001B5A  0421               	decf	abs@a^0,w,c
  6428   001B5C  B0D8               	btfsc	status,0,c
  6429   001B5E  EFB3  F00D         	goto	u2541
  6430   001B62  EFB5  F00D         	goto	u2540
  6431   001B66                     u2541:
  6432   001B66  EFC3  F00D         	goto	l1271
  6433   001B6A                     u2540:
  6434   001B6A  C021  F023         	movff	abs@a,??_abs
  6435   001B6E  C022  F024         	movff	abs@a+1,??_abs+1
  6436   001B72  1E23               	comf	??_abs^0,f,c
  6437   001B74  1E24               	comf	(??_abs+1)^0,f,c
  6438   001B76  4A23               	infsnz	??_abs^0,f,c
  6439   001B78  2A24               	incf	(??_abs+1)^0,f,c
  6440   001B7A  C023  F021         	movff	??_abs,?_abs
  6441   001B7E  C024  F022         	movff	??_abs+1,?_abs+1
  6442   001B82  EFC7  F00D         	goto	l1274
  6443   001B86                     l1271:
  6444   001B86  C021  F021         	movff	abs@a,?_abs
  6445   001B8A  C022  F022         	movff	abs@a+1,?_abs+1
  6446   001B8E                     l1274:
  6447   001B8E  0012               	return		;funcret
  6448   001B90                     __end_of_abs:
  6449                           	callstack 0
  6450                           
  6451 ;; *************** function ___aomod *****************
  6452 ;; Defined at:
  6453 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6454 ;; Parameters:    Size  Location     Type
  6455 ;;  dividend        8   14[COMRAM] long long 
  6456 ;;  divisor         8   22[COMRAM] long long 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  sign            1   31[COMRAM] unsigned char 
  6459 ;;  counter         1   30[COMRAM] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  8   14[COMRAM] long long 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6469 ;;      Params:        16       0       0       0       0       0       0
  6470 ;;      Locals:         2       0       0       0       0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0
  6472 ;;      Totals:        18       0       0       0       0       0       0
  6473 ;;Total ram usage:       18 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 4
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_dtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text28
  6484   001402                     __ptext28:
  6485                           	callstack 0
  6486   001402                     ___aomod:
  6487                           	callstack 22
  6488   001402  0E00               	movlw	0
  6489   001404  6E20               	movwf	___aomod@sign^0,c
  6490   001406  BE16               	btfsc	(___aomod@dividend+7)^0,7,c
  6491   001408  EF0A  F00A         	goto	u2440
  6492   00140C  EF08  F00A         	goto	u2441
  6493   001410                     u2441:
  6494   001410  EF1C  F00A         	goto	l3553
  6495   001414                     u2440:
  6496   001414  1E16               	comf	(___aomod@dividend+7)^0,f,c
  6497   001416  1E15               	comf	(___aomod@dividend+6)^0,f,c
  6498   001418  1E14               	comf	(___aomod@dividend+5)^0,f,c
  6499   00141A  1E13               	comf	(___aomod@dividend+4)^0,f,c
  6500   00141C  1E12               	comf	(___aomod@dividend+3)^0,f,c
  6501   00141E  1E11               	comf	(___aomod@dividend+2)^0,f,c
  6502   001420  1E10               	comf	(___aomod@dividend+1)^0,f,c
  6503   001422  6C0F               	negf	___aomod@dividend^0,c
  6504   001424  0E00               	movlw	0
  6505   001426  2210               	addwfc	(___aomod@dividend+1)^0,f,c
  6506   001428  2211               	addwfc	(___aomod@dividend+2)^0,f,c
  6507   00142A  2212               	addwfc	(___aomod@dividend+3)^0,f,c
  6508   00142C  2213               	addwfc	(___aomod@dividend+4)^0,f,c
  6509   00142E  2214               	addwfc	(___aomod@dividend+5)^0,f,c
  6510   001430  2215               	addwfc	(___aomod@dividend+6)^0,f,c
  6511   001432  2216               	addwfc	(___aomod@dividend+7)^0,f,c
  6512   001434  0E01               	movlw	1
  6513   001436  6E20               	movwf	___aomod@sign^0,c
  6514   001438                     l3553:
  6515   001438  BE1E               	btfsc	(___aomod@divisor+7)^0,7,c
  6516   00143A  EF23  F00A         	goto	u2450
  6517   00143E  EF21  F00A         	goto	u2451
  6518   001442                     u2451:
  6519   001442  EF33  F00A         	goto	l3557
  6520   001446                     u2450:
  6521   001446  1E1E               	comf	(___aomod@divisor+7)^0,f,c
  6522   001448  1E1D               	comf	(___aomod@divisor+6)^0,f,c
  6523   00144A  1E1C               	comf	(___aomod@divisor+5)^0,f,c
  6524   00144C  1E1B               	comf	(___aomod@divisor+4)^0,f,c
  6525   00144E  1E1A               	comf	(___aomod@divisor+3)^0,f,c
  6526   001450  1E19               	comf	(___aomod@divisor+2)^0,f,c
  6527   001452  1E18               	comf	(___aomod@divisor+1)^0,f,c
  6528   001454  6C17               	negf	___aomod@divisor^0,c
  6529   001456  0E00               	movlw	0
  6530   001458  2218               	addwfc	(___aomod@divisor+1)^0,f,c
  6531   00145A  2219               	addwfc	(___aomod@divisor+2)^0,f,c
  6532   00145C  221A               	addwfc	(___aomod@divisor+3)^0,f,c
  6533   00145E  221B               	addwfc	(___aomod@divisor+4)^0,f,c
  6534   001460  221C               	addwfc	(___aomod@divisor+5)^0,f,c
  6535   001462  221D               	addwfc	(___aomod@divisor+6)^0,f,c
  6536   001464  221E               	addwfc	(___aomod@divisor+7)^0,f,c
  6537   001466                     l3557:
  6538   001466  5017               	movf	___aomod@divisor^0,w,c
  6539   001468  1018               	iorwf	(___aomod@divisor+1)^0,w,c
  6540   00146A  1019               	iorwf	(___aomod@divisor+2)^0,w,c
  6541   00146C  101A               	iorwf	(___aomod@divisor+3)^0,w,c
  6542   00146E  101B               	iorwf	(___aomod@divisor+4)^0,w,c
  6543   001470  101C               	iorwf	(___aomod@divisor+5)^0,w,c
  6544   001472  101D               	iorwf	(___aomod@divisor+6)^0,w,c
  6545   001474  101E               	iorwf	(___aomod@divisor+7)^0,w,c
  6546   001476  B4D8               	btfsc	status,2,c
  6547   001478  EF40  F00A         	goto	u2461
  6548   00147C  EF42  F00A         	goto	u2460
  6549   001480                     u2461:
  6550   001480  EF8A  F00A         	goto	l3573
  6551   001484                     u2460:
  6552   001484  0E01               	movlw	1
  6553   001486  6E1F               	movwf	___aomod@counter^0,c
  6554   001488  EF50  F00A         	goto	l3563
  6555   00148C                     l3561:
  6556   00148C  90D8               	bcf	status,0,c
  6557   00148E  3617               	rlcf	___aomod@divisor^0,f,c
  6558   001490  3618               	rlcf	(___aomod@divisor+1)^0,f,c
  6559   001492  3619               	rlcf	(___aomod@divisor+2)^0,f,c
  6560   001494  361A               	rlcf	(___aomod@divisor+3)^0,f,c
  6561   001496  361B               	rlcf	(___aomod@divisor+4)^0,f,c
  6562   001498  361C               	rlcf	(___aomod@divisor+5)^0,f,c
  6563   00149A  361D               	rlcf	(___aomod@divisor+6)^0,f,c
  6564   00149C  361E               	rlcf	(___aomod@divisor+7)^0,f,c
  6565   00149E  2A1F               	incf	___aomod@counter^0,f,c
  6566   0014A0                     l3563:
  6567   0014A0  AE1E               	btfss	(___aomod@divisor+7)^0,7,c
  6568   0014A2  EF55  F00A         	goto	u2471
  6569   0014A6  EF57  F00A         	goto	u2470
  6570   0014AA                     u2471:
  6571   0014AA  EF46  F00A         	goto	l3561
  6572   0014AE                     u2470:
  6573   0014AE                     l3565:
  6574   0014AE  5017               	movf	___aomod@divisor^0,w,c
  6575   0014B0  5C0F               	subwf	___aomod@dividend^0,w,c
  6576   0014B2  5018               	movf	(___aomod@divisor+1)^0,w,c
  6577   0014B4  5810               	subwfb	(___aomod@dividend+1)^0,w,c
  6578   0014B6  5019               	movf	(___aomod@divisor+2)^0,w,c
  6579   0014B8  5811               	subwfb	(___aomod@dividend+2)^0,w,c
  6580   0014BA  501A               	movf	(___aomod@divisor+3)^0,w,c
  6581   0014BC  5812               	subwfb	(___aomod@dividend+3)^0,w,c
  6582   0014BE  501B               	movf	(___aomod@divisor+4)^0,w,c
  6583   0014C0  5813               	subwfb	(___aomod@dividend+4)^0,w,c
  6584   0014C2  501C               	movf	(___aomod@divisor+5)^0,w,c
  6585   0014C4  5814               	subwfb	(___aomod@dividend+5)^0,w,c
  6586   0014C6  501D               	movf	(___aomod@divisor+6)^0,w,c
  6587   0014C8  5815               	subwfb	(___aomod@dividend+6)^0,w,c
  6588   0014CA  501E               	movf	(___aomod@divisor+7)^0,w,c
  6589   0014CC  5816               	subwfb	(___aomod@dividend+7)^0,w,c
  6590   0014CE  A0D8               	btfss	status,0,c
  6591   0014D0  EF6C  F00A         	goto	u2481
  6592   0014D4  EF6E  F00A         	goto	u2480
  6593   0014D8                     u2481:
  6594   0014D8  EF7E  F00A         	goto	l3569
  6595   0014DC                     u2480:
  6596   0014DC  5017               	movf	___aomod@divisor^0,w,c
  6597   0014DE  5E0F               	subwf	___aomod@dividend^0,f,c
  6598   0014E0  5018               	movf	(___aomod@divisor+1)^0,w,c
  6599   0014E2  5A10               	subwfb	(___aomod@dividend+1)^0,f,c
  6600   0014E4  5019               	movf	(___aomod@divisor+2)^0,w,c
  6601   0014E6  5A11               	subwfb	(___aomod@dividend+2)^0,f,c
  6602   0014E8  501A               	movf	(___aomod@divisor+3)^0,w,c
  6603   0014EA  5A12               	subwfb	(___aomod@dividend+3)^0,f,c
  6604   0014EC  501B               	movf	(___aomod@divisor+4)^0,w,c
  6605   0014EE  5A13               	subwfb	(___aomod@dividend+4)^0,f,c
  6606   0014F0  501C               	movf	(___aomod@divisor+5)^0,w,c
  6607   0014F2  5A14               	subwfb	(___aomod@dividend+5)^0,f,c
  6608   0014F4  501D               	movf	(___aomod@divisor+6)^0,w,c
  6609   0014F6  5A15               	subwfb	(___aomod@dividend+6)^0,f,c
  6610   0014F8  501E               	movf	(___aomod@divisor+7)^0,w,c
  6611   0014FA  5A16               	subwfb	(___aomod@dividend+7)^0,f,c
  6612   0014FC                     l3569:
  6613   0014FC  90D8               	bcf	status,0,c
  6614   0014FE  321E               	rrcf	(___aomod@divisor+7)^0,f,c
  6615   001500  321D               	rrcf	(___aomod@divisor+6)^0,f,c
  6616   001502  321C               	rrcf	(___aomod@divisor+5)^0,f,c
  6617   001504  321B               	rrcf	(___aomod@divisor+4)^0,f,c
  6618   001506  321A               	rrcf	(___aomod@divisor+3)^0,f,c
  6619   001508  3219               	rrcf	(___aomod@divisor+2)^0,f,c
  6620   00150A  3218               	rrcf	(___aomod@divisor+1)^0,f,c
  6621   00150C  3217               	rrcf	___aomod@divisor^0,f,c
  6622   00150E  2E1F               	decfsz	___aomod@counter^0,f,c
  6623   001510  EF57  F00A         	goto	l3565
  6624   001514                     l3573:
  6625   001514  5020               	movf	___aomod@sign^0,w,c
  6626   001516  B4D8               	btfsc	status,2,c
  6627   001518  EF90  F00A         	goto	u2491
  6628   00151C  EF92  F00A         	goto	u2490
  6629   001520                     u2491:
  6630   001520  EFA2  F00A         	goto	l3577
  6631   001524                     u2490:
  6632   001524  1E16               	comf	(___aomod@dividend+7)^0,f,c
  6633   001526  1E15               	comf	(___aomod@dividend+6)^0,f,c
  6634   001528  1E14               	comf	(___aomod@dividend+5)^0,f,c
  6635   00152A  1E13               	comf	(___aomod@dividend+4)^0,f,c
  6636   00152C  1E12               	comf	(___aomod@dividend+3)^0,f,c
  6637   00152E  1E11               	comf	(___aomod@dividend+2)^0,f,c
  6638   001530  1E10               	comf	(___aomod@dividend+1)^0,f,c
  6639   001532  6C0F               	negf	___aomod@dividend^0,c
  6640   001534  0E00               	movlw	0
  6641   001536  2210               	addwfc	(___aomod@dividend+1)^0,f,c
  6642   001538  2211               	addwfc	(___aomod@dividend+2)^0,f,c
  6643   00153A  2212               	addwfc	(___aomod@dividend+3)^0,f,c
  6644   00153C  2213               	addwfc	(___aomod@dividend+4)^0,f,c
  6645   00153E  2214               	addwfc	(___aomod@dividend+5)^0,f,c
  6646   001540  2215               	addwfc	(___aomod@dividend+6)^0,f,c
  6647   001542  2216               	addwfc	(___aomod@dividend+7)^0,f,c
  6648   001544                     l3577:
  6649   001544  C00F  F00F         	movff	___aomod@dividend,?___aomod
  6650   001548  C010  F010         	movff	___aomod@dividend+1,?___aomod+1
  6651   00154C  C011  F011         	movff	___aomod@dividend+2,?___aomod+2
  6652   001550  C012  F012         	movff	___aomod@dividend+3,?___aomod+3
  6653   001554  C013  F013         	movff	___aomod@dividend+4,?___aomod+4
  6654   001558  C014  F014         	movff	___aomod@dividend+5,?___aomod+5
  6655   00155C  C015  F015         	movff	___aomod@dividend+6,?___aomod+6
  6656   001560  C016  F016         	movff	___aomod@dividend+7,?___aomod+7
  6657   001564  0012               	return		;funcret
  6658   001566                     __end_of___aomod:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function ___aodiv *****************
  6662 ;; Defined at:
  6663 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  dividend        8   14[COMRAM] long long 
  6666 ;;  divisor         8   22[COMRAM] long long 
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  quotient        8   32[COMRAM] long long 
  6669 ;;  sign            1   31[COMRAM] unsigned char 
  6670 ;;  counter         1   30[COMRAM] unsigned char 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  8   14[COMRAM] long long 
  6673 ;; Registers used:
  6674 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6680 ;;      Params:        16       0       0       0       0       0       0
  6681 ;;      Locals:        10       0       0       0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0
  6683 ;;      Totals:        26       0       0       0       0       0       0
  6684 ;;Total ram usage:       26 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 4
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_dtoa
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text29
  6695   001102                     __ptext29:
  6696                           	callstack 0
  6697   001102                     ___aodiv:
  6698                           	callstack 22
  6699   001102  0E00               	movlw	0
  6700   001104  6E20               	movwf	___aodiv@sign^0,c
  6701   001106  BE1E               	btfsc	(___aodiv@divisor+7)^0,7,c
  6702   001108  EF8A  F008         	goto	u2370
  6703   00110C  EF88  F008         	goto	u2371
  6704   001110                     u2371:
  6705   001110  EF9C  F008         	goto	l3509
  6706   001114                     u2370:
  6707   001114  1E1E               	comf	(___aodiv@divisor+7)^0,f,c
  6708   001116  1E1D               	comf	(___aodiv@divisor+6)^0,f,c
  6709   001118  1E1C               	comf	(___aodiv@divisor+5)^0,f,c
  6710   00111A  1E1B               	comf	(___aodiv@divisor+4)^0,f,c
  6711   00111C  1E1A               	comf	(___aodiv@divisor+3)^0,f,c
  6712   00111E  1E19               	comf	(___aodiv@divisor+2)^0,f,c
  6713   001120  1E18               	comf	(___aodiv@divisor+1)^0,f,c
  6714   001122  6C17               	negf	___aodiv@divisor^0,c
  6715   001124  0E00               	movlw	0
  6716   001126  2218               	addwfc	(___aodiv@divisor+1)^0,f,c
  6717   001128  2219               	addwfc	(___aodiv@divisor+2)^0,f,c
  6718   00112A  221A               	addwfc	(___aodiv@divisor+3)^0,f,c
  6719   00112C  221B               	addwfc	(___aodiv@divisor+4)^0,f,c
  6720   00112E  221C               	addwfc	(___aodiv@divisor+5)^0,f,c
  6721   001130  221D               	addwfc	(___aodiv@divisor+6)^0,f,c
  6722   001132  221E               	addwfc	(___aodiv@divisor+7)^0,f,c
  6723   001134  0E01               	movlw	1
  6724   001136  6E20               	movwf	___aodiv@sign^0,c
  6725   001138                     l3509:
  6726   001138  BE16               	btfsc	(___aodiv@dividend+7)^0,7,c
  6727   00113A  EFA3  F008         	goto	u2380
  6728   00113E  EFA1  F008         	goto	u2381
  6729   001142                     u2381:
  6730   001142  EFB5  F008         	goto	l3515
  6731   001146                     u2380:
  6732   001146  1E16               	comf	(___aodiv@dividend+7)^0,f,c
  6733   001148  1E15               	comf	(___aodiv@dividend+6)^0,f,c
  6734   00114A  1E14               	comf	(___aodiv@dividend+5)^0,f,c
  6735   00114C  1E13               	comf	(___aodiv@dividend+4)^0,f,c
  6736   00114E  1E12               	comf	(___aodiv@dividend+3)^0,f,c
  6737   001150  1E11               	comf	(___aodiv@dividend+2)^0,f,c
  6738   001152  1E10               	comf	(___aodiv@dividend+1)^0,f,c
  6739   001154  6C0F               	negf	___aodiv@dividend^0,c
  6740   001156  0E00               	movlw	0
  6741   001158  2210               	addwfc	(___aodiv@dividend+1)^0,f,c
  6742   00115A  2211               	addwfc	(___aodiv@dividend+2)^0,f,c
  6743   00115C  2212               	addwfc	(___aodiv@dividend+3)^0,f,c
  6744   00115E  2213               	addwfc	(___aodiv@dividend+4)^0,f,c
  6745   001160  2214               	addwfc	(___aodiv@dividend+5)^0,f,c
  6746   001162  2215               	addwfc	(___aodiv@dividend+6)^0,f,c
  6747   001164  2216               	addwfc	(___aodiv@dividend+7)^0,f,c
  6748   001166  0E01               	movlw	1
  6749   001168  1A20               	xorwf	___aodiv@sign^0,f,c
  6750   00116A                     l3515:
  6751   00116A  EE20  F021         	lfsr	2,___aodiv@quotient
  6752   00116E  0E07               	movlw	7
  6753   001170                     u2391:
  6754   001170  6ADE               	clrf	postinc2,c
  6755   001172  06E8               	decf	wreg,f,c
  6756   001174  E2FD               	bc	u2391
  6757   001176  5017               	movf	___aodiv@divisor^0,w,c
  6758   001178  1018               	iorwf	(___aodiv@divisor+1)^0,w,c
  6759   00117A  1019               	iorwf	(___aodiv@divisor+2)^0,w,c
  6760   00117C  101A               	iorwf	(___aodiv@divisor+3)^0,w,c
  6761   00117E  101B               	iorwf	(___aodiv@divisor+4)^0,w,c
  6762   001180  101C               	iorwf	(___aodiv@divisor+5)^0,w,c
  6763   001182  101D               	iorwf	(___aodiv@divisor+6)^0,w,c
  6764   001184  101E               	iorwf	(___aodiv@divisor+7)^0,w,c
  6765   001186  B4D8               	btfsc	status,2,c
  6766   001188  EFC8  F008         	goto	u2401
  6767   00118C  EFCA  F008         	goto	u2400
  6768   001190                     u2401:
  6769   001190  EF1C  F009         	goto	l3537
  6770   001194                     u2400:
  6771   001194  0E01               	movlw	1
  6772   001196  6E1F               	movwf	___aodiv@counter^0,c
  6773   001198  EFD8  F008         	goto	l3523
  6774   00119C                     l3521:
  6775   00119C  90D8               	bcf	status,0,c
  6776   00119E  3617               	rlcf	___aodiv@divisor^0,f,c
  6777   0011A0  3618               	rlcf	(___aodiv@divisor+1)^0,f,c
  6778   0011A2  3619               	rlcf	(___aodiv@divisor+2)^0,f,c
  6779   0011A4  361A               	rlcf	(___aodiv@divisor+3)^0,f,c
  6780   0011A6  361B               	rlcf	(___aodiv@divisor+4)^0,f,c
  6781   0011A8  361C               	rlcf	(___aodiv@divisor+5)^0,f,c
  6782   0011AA  361D               	rlcf	(___aodiv@divisor+6)^0,f,c
  6783   0011AC  361E               	rlcf	(___aodiv@divisor+7)^0,f,c
  6784   0011AE  2A1F               	incf	___aodiv@counter^0,f,c
  6785   0011B0                     l3523:
  6786   0011B0  AE1E               	btfss	(___aodiv@divisor+7)^0,7,c
  6787   0011B2  EFDD  F008         	goto	u2411
  6788   0011B6  EFDF  F008         	goto	u2410
  6789   0011BA                     u2411:
  6790   0011BA  EFCE  F008         	goto	l3521
  6791   0011BE                     u2410:
  6792   0011BE                     l3525:
  6793   0011BE  90D8               	bcf	status,0,c
  6794   0011C0  3621               	rlcf	___aodiv@quotient^0,f,c
  6795   0011C2  3622               	rlcf	(___aodiv@quotient+1)^0,f,c
  6796   0011C4  3623               	rlcf	(___aodiv@quotient+2)^0,f,c
  6797   0011C6  3624               	rlcf	(___aodiv@quotient+3)^0,f,c
  6798   0011C8  3625               	rlcf	(___aodiv@quotient+4)^0,f,c
  6799   0011CA  3626               	rlcf	(___aodiv@quotient+5)^0,f,c
  6800   0011CC  3627               	rlcf	(___aodiv@quotient+6)^0,f,c
  6801   0011CE  3628               	rlcf	(___aodiv@quotient+7)^0,f,c
  6802   0011D0  5017               	movf	___aodiv@divisor^0,w,c
  6803   0011D2  5C0F               	subwf	___aodiv@dividend^0,w,c
  6804   0011D4  5018               	movf	(___aodiv@divisor+1)^0,w,c
  6805   0011D6  5810               	subwfb	(___aodiv@dividend+1)^0,w,c
  6806   0011D8  5019               	movf	(___aodiv@divisor+2)^0,w,c
  6807   0011DA  5811               	subwfb	(___aodiv@dividend+2)^0,w,c
  6808   0011DC  501A               	movf	(___aodiv@divisor+3)^0,w,c
  6809   0011DE  5812               	subwfb	(___aodiv@dividend+3)^0,w,c
  6810   0011E0  501B               	movf	(___aodiv@divisor+4)^0,w,c
  6811   0011E2  5813               	subwfb	(___aodiv@dividend+4)^0,w,c
  6812   0011E4  501C               	movf	(___aodiv@divisor+5)^0,w,c
  6813   0011E6  5814               	subwfb	(___aodiv@dividend+5)^0,w,c
  6814   0011E8  501D               	movf	(___aodiv@divisor+6)^0,w,c
  6815   0011EA  5815               	subwfb	(___aodiv@dividend+6)^0,w,c
  6816   0011EC  501E               	movf	(___aodiv@divisor+7)^0,w,c
  6817   0011EE  5816               	subwfb	(___aodiv@dividend+7)^0,w,c
  6818   0011F0  A0D8               	btfss	status,0,c
  6819   0011F2  EFFD  F008         	goto	u2421
  6820   0011F6  EFFF  F008         	goto	u2420
  6821   0011FA                     u2421:
  6822   0011FA  EF10  F009         	goto	l3533
  6823   0011FE                     u2420:
  6824   0011FE  5017               	movf	___aodiv@divisor^0,w,c
  6825   001200  5E0F               	subwf	___aodiv@dividend^0,f,c
  6826   001202  5018               	movf	(___aodiv@divisor+1)^0,w,c
  6827   001204  5A10               	subwfb	(___aodiv@dividend+1)^0,f,c
  6828   001206  5019               	movf	(___aodiv@divisor+2)^0,w,c
  6829   001208  5A11               	subwfb	(___aodiv@dividend+2)^0,f,c
  6830   00120A  501A               	movf	(___aodiv@divisor+3)^0,w,c
  6831   00120C  5A12               	subwfb	(___aodiv@dividend+3)^0,f,c
  6832   00120E  501B               	movf	(___aodiv@divisor+4)^0,w,c
  6833   001210  5A13               	subwfb	(___aodiv@dividend+4)^0,f,c
  6834   001212  501C               	movf	(___aodiv@divisor+5)^0,w,c
  6835   001214  5A14               	subwfb	(___aodiv@dividend+5)^0,f,c
  6836   001216  501D               	movf	(___aodiv@divisor+6)^0,w,c
  6837   001218  5A15               	subwfb	(___aodiv@dividend+6)^0,f,c
  6838   00121A  501E               	movf	(___aodiv@divisor+7)^0,w,c
  6839   00121C  5A16               	subwfb	(___aodiv@dividend+7)^0,f,c
  6840   00121E  8021               	bsf	___aodiv@quotient^0,0,c
  6841   001220                     l3533:
  6842   001220  90D8               	bcf	status,0,c
  6843   001222  321E               	rrcf	(___aodiv@divisor+7)^0,f,c
  6844   001224  321D               	rrcf	(___aodiv@divisor+6)^0,f,c
  6845   001226  321C               	rrcf	(___aodiv@divisor+5)^0,f,c
  6846   001228  321B               	rrcf	(___aodiv@divisor+4)^0,f,c
  6847   00122A  321A               	rrcf	(___aodiv@divisor+3)^0,f,c
  6848   00122C  3219               	rrcf	(___aodiv@divisor+2)^0,f,c
  6849   00122E  3218               	rrcf	(___aodiv@divisor+1)^0,f,c
  6850   001230  3217               	rrcf	___aodiv@divisor^0,f,c
  6851   001232  2E1F               	decfsz	___aodiv@counter^0,f,c
  6852   001234  EFDF  F008         	goto	l3525
  6853   001238                     l3537:
  6854   001238  5020               	movf	___aodiv@sign^0,w,c
  6855   00123A  B4D8               	btfsc	status,2,c
  6856   00123C  EF22  F009         	goto	u2431
  6857   001240  EF24  F009         	goto	u2430
  6858   001244                     u2431:
  6859   001244  EF34  F009         	goto	l3541
  6860   001248                     u2430:
  6861   001248  1E28               	comf	(___aodiv@quotient+7)^0,f,c
  6862   00124A  1E27               	comf	(___aodiv@quotient+6)^0,f,c
  6863   00124C  1E26               	comf	(___aodiv@quotient+5)^0,f,c
  6864   00124E  1E25               	comf	(___aodiv@quotient+4)^0,f,c
  6865   001250  1E24               	comf	(___aodiv@quotient+3)^0,f,c
  6866   001252  1E23               	comf	(___aodiv@quotient+2)^0,f,c
  6867   001254  1E22               	comf	(___aodiv@quotient+1)^0,f,c
  6868   001256  6C21               	negf	___aodiv@quotient^0,c
  6869   001258  0E00               	movlw	0
  6870   00125A  2222               	addwfc	(___aodiv@quotient+1)^0,f,c
  6871   00125C  2223               	addwfc	(___aodiv@quotient+2)^0,f,c
  6872   00125E  2224               	addwfc	(___aodiv@quotient+3)^0,f,c
  6873   001260  2225               	addwfc	(___aodiv@quotient+4)^0,f,c
  6874   001262  2226               	addwfc	(___aodiv@quotient+5)^0,f,c
  6875   001264  2227               	addwfc	(___aodiv@quotient+6)^0,f,c
  6876   001266  2228               	addwfc	(___aodiv@quotient+7)^0,f,c
  6877   001268                     l3541:
  6878   001268  C021  F00F         	movff	___aodiv@quotient,?___aodiv
  6879   00126C  C022  F010         	movff	___aodiv@quotient+1,?___aodiv+1
  6880   001270  C023  F011         	movff	___aodiv@quotient+2,?___aodiv+2
  6881   001274  C024  F012         	movff	___aodiv@quotient+3,?___aodiv+3
  6882   001278  C025  F013         	movff	___aodiv@quotient+4,?___aodiv+4
  6883   00127C  C026  F014         	movff	___aodiv@quotient+5,?___aodiv+5
  6884   001280  C027  F015         	movff	___aodiv@quotient+6,?___aodiv+6
  6885   001284  C028  F016         	movff	___aodiv@quotient+7,?___aodiv+7
  6886   001288  0012               	return		;funcret
  6887   00128A                     __end_of___aodiv:
  6888                           	callstack 0
  6889                           
  6890 ;; *************** function _ctoa *****************
  6891 ;; Defined at:
  6892 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  6895 ;;		 -> NULL(0), 
  6896 ;;  c               1   27[COMRAM] unsigned char 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  w               2   31[COMRAM] int 
  6899 ;;  l               2   29[COMRAM] int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  1    wreg      void 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6909 ;;      Params:         3       0       0       0       0       0       0
  6910 ;;      Locals:         4       0       0       0       0       0       0
  6911 ;;      Temps:          1       0       0       0       0       0       0
  6912 ;;      Totals:         8       0       0       0       0       0       0
  6913 ;;Total ram usage:        8 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 7
  6916 ;; This function calls:
  6917 ;;		_fputc
  6918 ;; This function is called by:
  6919 ;;		_vfpfcnvrt
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text30
  6924   0016B0                     __ptext30:
  6925                           	callstack 0
  6926   0016B0                     _ctoa:
  6927                           	callstack 20
  6928   0016B0                     
  6929                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  6930   0016B0  5042               	movf	_width^0,w,c
  6931   0016B2  1043               	iorwf	(_width+1)^0,w,c
  6932   0016B4  A4D8               	btfss	status,2,c
  6933   0016B6  EF5F  F00B         	goto	u2591
  6934   0016BA  EF61  F00B         	goto	u2590
  6935   0016BE                     u2591:
  6936   0016BE  EF67  F00B         	goto	l3623
  6937   0016C2                     u2590:
  6938   0016C2  C042  F020         	movff	_width,ctoa@w
  6939   0016C6  C043  F021         	movff	_width+1,ctoa@w+1
  6940   0016CA  EF6D  F00B         	goto	l3625
  6941   0016CE                     l3623:
  6942   0016CE  0EFF               	movlw	255
  6943   0016D0  2442               	addwf	_width^0,w,c
  6944   0016D2  6E20               	movwf	ctoa@w^0,c
  6945   0016D4  0EFF               	movlw	255
  6946   0016D6  2043               	addwfc	(_width+1)^0,w,c
  6947   0016D8  6E21               	movwf	(ctoa@w+1)^0,c
  6948   0016DA                     l3625:
  6949                           
  6950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  6951   0016DA  A04E               	btfss	_flags^0,0,c
  6952   0016DC  EF72  F00B         	goto	u2601
  6953   0016E0  EF74  F00B         	goto	u2600
  6954   0016E4                     u2601:
  6955   0016E4  EF7D  F00B         	goto	l3629
  6956   0016E8                     u2600:
  6957   0016E8                     
  6958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  6959   0016E8  C01C  F011         	movff	ctoa@c,fputc@c
  6960   0016EC  6A12               	clrf	(fputc@c+1)^0,c
  6961   0016EE  C01A  F013         	movff	ctoa@fp,fputc@fp
  6962   0016F2  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  6963   0016F6  EC5E  F00C         	call	_fputc	;wreg free
  6964   0016FA                     l3629:
  6965                           
  6966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  6967   0016FA  BE21               	btfsc	(ctoa@w+1)^0,7,c
  6968   0016FC  EF82  F00B         	goto	u2611
  6969   001700  EF84  F00B         	goto	u2610
  6970   001704                     u2611:
  6971   001704  EF86  F00B         	goto	l3633
  6972   001708                     u2610:
  6973   001708  EF8A  F00B         	goto	l1186
  6974   00170C                     l3633:
  6975   00170C  0E00               	movlw	0
  6976   00170E  6E21               	movwf	(ctoa@w+1)^0,c
  6977   001710  0E00               	movlw	0
  6978   001712  6E20               	movwf	ctoa@w^0,c
  6979   001714                     l1186:
  6980                           
  6981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  6982   001714  0E00               	movlw	0
  6983   001716  6E1F               	movwf	(ctoa@l+1)^0,c
  6984   001718  0E00               	movlw	0
  6985   00171A  6E1E               	movwf	ctoa@l^0,c
  6986                           
  6987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  6988   00171C  EF9C  F00B         	goto	l3639
  6989   001720                     l3635:
  6990                           
  6991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  6992   001720  0E00               	movlw	0
  6993   001722  6E12               	movwf	(fputc@c+1)^0,c
  6994   001724  0E20               	movlw	32
  6995   001726  6E11               	movwf	fputc@c^0,c
  6996   001728  C01A  F013         	movff	ctoa@fp,fputc@fp
  6997   00172C  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  6998   001730  EC5E  F00C         	call	_fputc	;wreg free
  6999   001734                     
  7000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  7001   001734  4A1E               	infsnz	ctoa@l^0,f,c
  7002   001736  2A1F               	incf	(ctoa@l+1)^0,f,c
  7003   001738                     l3639:
  7004                           
  7005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  7006   001738  5020               	movf	ctoa@w^0,w,c
  7007   00173A  5C1E               	subwf	ctoa@l^0,w,c
  7008   00173C  501F               	movf	(ctoa@l+1)^0,w,c
  7009   00173E  0A80               	xorlw	128
  7010   001740  6E1D               	movwf	??_ctoa^0,c
  7011   001742  5021               	movf	(ctoa@w+1)^0,w,c
  7012   001744  0A80               	xorlw	128
  7013   001746  581D               	subwfb	??_ctoa^0,w,c
  7014   001748  A0D8               	btfss	status,0,c
  7015   00174A  EFA9  F00B         	goto	u2621
  7016   00174E  EFAB  F00B         	goto	u2620
  7017   001752                     u2621:
  7018   001752  EF90  F00B         	goto	l3635
  7019   001756                     u2620:
  7020   001756                     
  7021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  7022   001756  B04E               	btfsc	_flags^0,0,c
  7023   001758  EFB0  F00B         	goto	u2631
  7024   00175C  EFB2  F00B         	goto	u2630
  7025   001760                     u2631:
  7026   001760  EFBB  F00B         	goto	l1191
  7027   001764                     u2630:
  7028   001764                     
  7029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  7030   001764  C01C  F011         	movff	ctoa@c,fputc@c
  7031   001768  6A12               	clrf	(fputc@c+1)^0,c
  7032   00176A  C01A  F013         	movff	ctoa@fp,fputc@fp
  7033   00176E  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  7034   001772  EC5E  F00C         	call	_fputc	;wreg free
  7035   001776                     l1191:
  7036   001776  0012               	return		;funcret
  7037   001778                     __end_of_ctoa:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _fputc *****************
  7041 ;; Defined at:
  7042 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  c               2   16[COMRAM] int 
  7045 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  7046 ;;		 -> NULL(0), 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  2   16[COMRAM] int 
  7051 ;; Registers used:
  7052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7058 ;;      Params:         4       0       0       0       0       0       0
  7059 ;;      Locals:         0       0       0       0       0       0       0
  7060 ;;      Temps:          5       0       0       0       0       0       0
  7061 ;;      Totals:         9       0       0       0       0       0       0
  7062 ;;Total ram usage:        9 bytes
  7063 ;; Hardware stack levels used: 1
  7064 ;; Hardware stack levels required when called: 6
  7065 ;; This function calls:
  7066 ;;		_putch
  7067 ;; This function is called by:
  7068 ;;		_pad
  7069 ;;		_ctoa
  7070 ;;		_vfpfcnvrt
  7071 ;;		_fputs
  7072 ;; This function uses a non-reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text31
  7076   0018BC                     __ptext31:
  7077                           	callstack 0
  7078   0018BC                     _fputc:
  7079                           	callstack 18
  7080   0018BC  5013               	movf	fputc@fp^0,w,c
  7081   0018BE  1014               	iorwf	(fputc@fp+1)^0,w,c
  7082   0018C0  B4D8               	btfsc	status,2,c
  7083   0018C2  EF65  F00C         	goto	u2321
  7084   0018C6  EF67  F00C         	goto	u2320
  7085   0018CA                     u2321:
  7086   0018CA  EF70  F00C         	goto	l3477
  7087   0018CE                     u2320:
  7088   0018CE  5013               	movf	fputc@fp^0,w,c
  7089   0018D0  1014               	iorwf	(fputc@fp+1)^0,w,c
  7090   0018D2  A4D8               	btfss	status,2,c
  7091   0018D4  EF6E  F00C         	goto	u2331
  7092   0018D8  EF70  F00C         	goto	u2330
  7093   0018DC                     u2331:
  7094   0018DC  EF75  F00C         	goto	l3479
  7095   0018E0                     u2330:
  7096   0018E0                     l3477:
  7097   0018E0  5011               	movf	fputc@c^0,w,c
  7098   0018E2  EC4C  F00F         	call	_putch
  7099   0018E6  EFA8  F00C         	goto	l1325
  7100   0018EA                     l3479:
  7101   0018EA  EE20 F009          	lfsr	2,9
  7102   0018EE  5013               	movf	fputc@fp^0,w,c
  7103   0018F0  26D9               	addwf	fsr2l,f,c
  7104   0018F2  5014               	movf	(fputc@fp+1)^0,w,c
  7105   0018F4  22DA               	addwfc	fsr2h,f,c
  7106   0018F6  50DE               	movf	postinc2,w,c
  7107   0018F8  10DE               	iorwf	postinc2,w,c
  7108   0018FA  B4D8               	btfsc	status,2,c
  7109   0018FC  EF82  F00C         	goto	u2341
  7110   001900  EF84  F00C         	goto	u2340
  7111   001904                     u2341:
  7112   001904  EF9F  F00C         	goto	l3483
  7113   001908                     u2340:
  7114   001908  EE20 F009          	lfsr	2,9
  7115   00190C  5013               	movf	fputc@fp^0,w,c
  7116   00190E  26D9               	addwf	fsr2l,f,c
  7117   001910  5014               	movf	(fputc@fp+1)^0,w,c
  7118   001912  22DA               	addwfc	fsr2h,f,c
  7119   001914  EE10 F003          	lfsr	1,3
  7120   001918  5013               	movf	fputc@fp^0,w,c
  7121   00191A  26E1               	addwf	fsr1l,f,c
  7122   00191C  5014               	movf	(fputc@fp+1)^0,w,c
  7123   00191E  22E2               	addwfc	fsr1h,f,c
  7124   001920  50DE               	movf	postinc2,w,c
  7125   001922  5CE6               	subwf	postinc1,w,c
  7126   001924  50E6               	movf	postinc1,w,c
  7127   001926  0A80               	xorlw	128
  7128   001928  6E19               	movwf	(??_fputc+4)^0,c
  7129   00192A  50DE               	movf	postinc2,w,c
  7130   00192C  0A80               	xorlw	128
  7131   00192E  5819               	subwfb	(??_fputc+4)^0,w,c
  7132   001930  B0D8               	btfsc	status,0,c
  7133   001932  EF9D  F00C         	goto	u2351
  7134   001936  EF9F  F00C         	goto	u2350
  7135   00193A                     u2351:
  7136   00193A  EFA8  F00C         	goto	l1325
  7137   00193E                     u2350:
  7138   00193E                     l3483:
  7139   00193E  EE20 F003          	lfsr	2,3
  7140   001942  5013               	movf	fputc@fp^0,w,c
  7141   001944  26D9               	addwf	fsr2l,f,c
  7142   001946  5014               	movf	(fputc@fp+1)^0,w,c
  7143   001948  22DA               	addwfc	fsr2h,f,c
  7144   00194A  2ADE               	incf	postinc2,f,c
  7145   00194C  0E00               	movlw	0
  7146   00194E  22DD               	addwfc	postdec2,f,c
  7147   001950                     l1325:
  7148   001950  0012               	return		;funcret
  7149   001952                     __end_of_fputc:
  7150                           	callstack 0
  7151                           
  7152 ;; *************** function _putch *****************
  7153 ;; Defined at:
  7154 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  txData          1    wreg     unsigned char 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  txData          1   15[COMRAM] unsigned char 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7168 ;;      Params:         0       0       0       0       0       0       0
  7169 ;;      Locals:         1       0       0       0       0       0       0
  7170 ;;      Temps:          0       0       0       0       0       0       0
  7171 ;;      Totals:         1       0       0       0       0       0       0
  7172 ;;Total ram usage:        1 bytes
  7173 ;; Hardware stack levels used: 1
  7174 ;; Hardware stack levels required when called: 5
  7175 ;; This function calls:
  7176 ;;		_EUSART1_Write
  7177 ;; This function is called by:
  7178 ;;		_fputc
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text32
  7183   001E98                     __ptext32:
  7184                           	callstack 0
  7185   001E98                     _putch:
  7186                           	callstack 18
  7187                           
  7188                           ;incstack = 0
  7189                           ;putch@txData stored from wreg
  7190   001E98  6E10               	movwf	putch@txData^0,c
  7191   001E9A                     
  7192                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  7193   001E9A  5010               	movf	putch@txData^0,w,c
  7194   001E9C  EC15  F00F         	call	_EUSART1_Write
  7195   001EA0  0012               	return		;funcret
  7196   001EA2                     __end_of_putch:
  7197                           	callstack 0
  7198                           
  7199 ;; *************** function _EUSART1_Write *****************
  7200 ;; Defined at:
  7201 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  txData          1    wreg     unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  txData          1   14[COMRAM] unsigned char 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7215 ;;      Params:         0       0       0       0       0       0       0
  7216 ;;      Locals:         1       0       0       0       0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0
  7218 ;;      Totals:         1       0       0       0       0       0       0
  7219 ;;Total ram usage:        1 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 4
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_putch
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text33
  7230   001E2A                     __ptext33:
  7231                           	callstack 0
  7232   001E2A                     _EUSART1_Write:
  7233                           	callstack 18
  7234                           
  7235                           ;incstack = 0
  7236                           ;EUSART1_Write@txData stored from wreg
  7237   001E2A  6E0F               	movwf	EUSART1_Write@txData^0,c
  7238   001E2C                     l245:
  7239                           
  7240                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  7241   001E2C  A89E               	btfss	158,4,c	;volatile
  7242   001E2E  EF1B  F00F         	goto	u2311
  7243   001E32  EF1D  F00F         	goto	u2310
  7244   001E36                     u2311:
  7245   001E36  EF16  F00F         	goto	l245
  7246   001E3A                     u2310:
  7247   001E3A                     
  7248                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  7249   001E3A  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  7250   001E3E  0012               	return		;funcret
  7251   001E40                     __end_of_EUSART1_Write:
  7252                           	callstack 0
  7253                           
  7254 ;; *************** function _atoi *****************
  7255 ;; Defined at:
  7256 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  s               2   20[COMRAM] PTR const unsigned char 
  7259 ;;		 -> STR_71(3), STR_70(3), STR_69(2), STR_68(4), 
  7260 ;;		 -> STR_67(6), STR_66(3), STR_65(3), STR_64(2), 
  7261 ;;		 -> STR_63(3), STR_62(2), STR_61(4), STR_60(28), 
  7262 ;;		 -> STR_59(26), STR_58(27), STR_57(3), STR_56(17), 
  7263 ;;		 -> STR_55(3), STR_54(5), STR_53(2), STR_52(5), 
  7264 ;;		 -> STR_51(17), STR_50(15), STR_49(23), STR_48(3), 
  7265 ;;		 -> STR_47(5), STR_46(2), STR_45(5), STR_44(17), 
  7266 ;;		 -> STR_43(43), STR_42(3), STR_41(5), STR_40(2), 
  7267 ;;		 -> STR_39(5), STR_38(19), STR_37(20), STR_36(28), 
  7268 ;;		 -> STR_35(20), STR_34(30), STR_33(29), STR_32(29), 
  7269 ;;		 -> STR_31(44), STR_30(27), STR_29(83), STR_28(83), 
  7270 ;;		 -> STR_27(2), STR_26(2), STR_25(9), STR_24(52), 
  7271 ;;		 -> STR_23(42), STR_22(43), STR_21(37), STR_20(24), 
  7272 ;;		 -> STR_19(52), STR_18(36), STR_17(52), STR_16(24), 
  7273 ;;		 -> STR_15(21), STR_14(7), STR_13(15), STR_12(52), 
  7274 ;;		 -> STR_11(3), STR_10(5), STR_9(2), STR_8(5), 
  7275 ;;		 -> STR_7(19), STR_6(54), STR_5(5), STR_4(42), 
  7276 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;  n               2   27[COMRAM] int 
  7279 ;;  neg             2   25[COMRAM] int 
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  2   20[COMRAM] int 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7289 ;;      Params:         2       0       0       0       0       0       0
  7290 ;;      Locals:         4       0       0       0       0       0       0
  7291 ;;      Temps:          3       0       0       0       0       0       0
  7292 ;;      Totals:         9       0       0       0       0       0       0
  7293 ;;Total ram usage:        9 bytes
  7294 ;; Hardware stack levels used: 1
  7295 ;; Hardware stack levels required when called: 5
  7296 ;; This function calls:
  7297 ;;		___wmul
  7298 ;;		_isdigit
  7299 ;;		_isspace
  7300 ;; This function is called by:
  7301 ;;		_vfpfcnvrt
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text34
  7306   001566                     __ptext34:
  7307                           	callstack 0
  7308   001566                     _atoi:
  7309                           	callstack 22
  7310   001566  0E00               	movlw	0
  7311   001568  6E1D               	movwf	(atoi@n+1)^0,c
  7312   00156A  0E00               	movlw	0
  7313   00156C  6E1C               	movwf	atoi@n^0,c
  7314   00156E  0E00               	movlw	0
  7315   001570  6E1B               	movwf	(atoi@neg+1)^0,c
  7316   001572  0E00               	movlw	0
  7317   001574  6E1A               	movwf	atoi@neg^0,c
  7318   001576  EFBF  F00A         	goto	l3755
  7319   00157A                     l3751:
  7320   00157A  4A15               	infsnz	atoi@s^0,f,c
  7321   00157C  2A16               	incf	(atoi@s+1)^0,f,c
  7322   00157E                     l3755:
  7323   00157E  C015  FFF6         	movff	atoi@s,tblptrl
  7324   001582  C016  FFF7         	movff	atoi@s+1,tblptrh
  7325   001586                     	if	0	;tblptru may be non-zero
  7326   001586                     	endif
  7327   001586                     	if	0	;tblptru may be non-zero
  7328   001586                     	endif
  7329   001586  0008               	tblrd		*
  7330   001588  50F5               	movf	tablat,w,c
  7331   00158A  0A20               	xorlw	32
  7332   00158C  B4D8               	btfsc	status,2,c
  7333   00158E  EFCB  F00A         	goto	u2861
  7334   001592  EFCD  F00A         	goto	u2860
  7335   001596                     u2861:
  7336   001596  EFBD  F00A         	goto	l3751
  7337   00159A                     u2860:
  7338   00159A  C015  FFF6         	movff	atoi@s,tblptrl
  7339   00159E  C016  FFF7         	movff	atoi@s+1,tblptrh
  7340   0015A2                     	if	0	;tblptru may be non-zero
  7341   0015A2                     	endif
  7342   0015A2                     	if	0	;tblptru may be non-zero
  7343   0015A2                     	endif
  7344   0015A2  0008               	tblrd		*
  7345   0015A4  CFF5 F017          	movff	tablat,??_atoi
  7346   0015A8  0EF7               	movlw	247
  7347   0015AA  2417               	addwf	??_atoi^0,w,c
  7348   0015AC  6E18               	movwf	(??_atoi+1)^0,c
  7349   0015AE  6A19               	clrf	(??_atoi+2)^0,c
  7350   0015B0  0EFF               	movlw	255
  7351   0015B2  2219               	addwfc	(??_atoi+2)^0,f,c
  7352   0015B4  5019               	movf	(??_atoi+2)^0,w,c
  7353   0015B6  E109               	bnz	u2870
  7354   0015B8  0E05               	movlw	5
  7355   0015BA  5C18               	subwf	(??_atoi+1)^0,w,c
  7356   0015BC  A0D8               	btfss	status,0,c
  7357   0015BE  EFE3  F00A         	goto	u2871
  7358   0015C2  EFE5  F00A         	goto	u2870
  7359   0015C6                     u2871:
  7360   0015C6  EFBD  F00A         	goto	l3751
  7361   0015CA                     u2870:
  7362   0015CA  EFEF  F00A         	goto	l3763
  7363   0015CE                     l3759:
  7364   0015CE  0E00               	movlw	0
  7365   0015D0  6E1B               	movwf	(atoi@neg+1)^0,c
  7366   0015D2  0E01               	movlw	1
  7367   0015D4  6E1A               	movwf	atoi@neg^0,c
  7368   0015D6                     l3761:
  7369   0015D6  4A15               	infsnz	atoi@s^0,f,c
  7370   0015D8  2A16               	incf	(atoi@s+1)^0,f,c
  7371   0015DA  EF24  F00B         	goto	l3771
  7372   0015DE                     l3763:
  7373   0015DE  C015  FFF6         	movff	atoi@s,tblptrl
  7374   0015E2  C016  FFF7         	movff	atoi@s+1,tblptrh
  7375   0015E6                     	if	0	;tblptru may be non-zero
  7376   0015E6                     	endif
  7377   0015E6                     	if	0	;tblptru may be non-zero
  7378   0015E6                     	endif
  7379   0015E6  0008               	tblrd		*
  7380   0015E8  50F5               	movf	tablat,w,c
  7381   0015EA  6E17               	movwf	??_atoi^0,c
  7382   0015EC  6A18               	clrf	(??_atoi+1)^0,c
  7383                           
  7384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7385                           ; Switch size 1, requested type "simple"
  7386                           ; Number of cases is 1, Range of values is 0 to 0
  7387                           ; switch strategies available:
  7388                           ; Name         Instructions Cycles
  7389                           ; simple_byte            4     3 (average)
  7390                           ;	Chosen strategy is simple_byte
  7391   0015EE  5018               	movf	(??_atoi+1)^0,w,c
  7392   0015F0  0A00               	xorlw	0	; case 0
  7393   0015F2  B4D8               	btfsc	status,2,c
  7394   0015F4  EFFE  F00A         	goto	l4305
  7395   0015F8  EF24  F00B         	goto	l3771
  7396   0015FC                     l4305:
  7397                           
  7398                           ; Switch size 1, requested type "simple"
  7399                           ; Number of cases is 2, Range of values is 43 to 45
  7400                           ; switch strategies available:
  7401                           ; Name         Instructions Cycles
  7402                           ; simple_byte            7     4 (average)
  7403                           ;	Chosen strategy is simple_byte
  7404   0015FC  5017               	movf	??_atoi^0,w,c
  7405   0015FE  0A2B               	xorlw	43	; case 43
  7406   001600  B4D8               	btfsc	status,2,c
  7407   001602  EFEB  F00A         	goto	l3761
  7408   001606  0A06               	xorlw	6	; case 45
  7409   001608  B4D8               	btfsc	status,2,c
  7410   00160A  EFE7  F00A         	goto	l3759
  7411   00160E  EF24  F00B         	goto	l3771
  7412   001612                     l3765:
  7413   001612  C01C  F00F         	movff	atoi@n,___wmul@multiplier
  7414   001616  C01D  F010         	movff	atoi@n+1,___wmul@multiplier+1
  7415   00161A  0E00               	movlw	0
  7416   00161C  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  7417   00161E  0E0A               	movlw	10
  7418   001620  6E11               	movwf	___wmul@multiplicand^0,c
  7419   001622  ECCB  F00E         	call	___wmul	;wreg free
  7420   001626  C015  FFF6         	movff	atoi@s,tblptrl
  7421   00162A  C016  FFF7         	movff	atoi@s+1,tblptrh
  7422   00162E                     	if	0	;tblptru may be non-zero
  7423   00162E                     	endif
  7424   00162E                     	if	0	;tblptru may be non-zero
  7425   00162E                     	endif
  7426   00162E  0008               	tblrd		*
  7427   001630  50F5               	movf	tablat,w,c
  7428   001632  5E0F               	subwf	?___wmul^0,f,c
  7429   001634  0E00               	movlw	0
  7430   001636  5A10               	subwfb	(?___wmul+1)^0,f,c
  7431   001638  0E30               	movlw	48
  7432   00163A  240F               	addwf	?___wmul^0,w,c
  7433   00163C  6E1C               	movwf	atoi@n^0,c
  7434   00163E  0E00               	movlw	0
  7435   001640  2010               	addwfc	(?___wmul+1)^0,w,c
  7436   001642  6E1D               	movwf	(atoi@n+1)^0,c
  7437   001644  EFEB  F00A         	goto	l3761
  7438   001648                     l3771:
  7439   001648  C015  FFF6         	movff	atoi@s,tblptrl
  7440   00164C  C016  FFF7         	movff	atoi@s+1,tblptrh
  7441   001650                     	if	0	;tblptru may be non-zero
  7442   001650                     	endif
  7443   001650                     	if	0	;tblptru may be non-zero
  7444   001650                     	endif
  7445   001650  0008               	tblrd		*
  7446   001652  CFF5 F017          	movff	tablat,??_atoi
  7447   001656  0ED0               	movlw	208
  7448   001658  2417               	addwf	??_atoi^0,w,c
  7449   00165A  6E18               	movwf	(??_atoi+1)^0,c
  7450   00165C  6A19               	clrf	(??_atoi+2)^0,c
  7451   00165E  0EFF               	movlw	255
  7452   001660  2219               	addwfc	(??_atoi+2)^0,f,c
  7453   001662  5019               	movf	(??_atoi+2)^0,w,c
  7454   001664  E109               	bnz	u2880
  7455   001666  0E0A               	movlw	10
  7456   001668  5C18               	subwf	(??_atoi+1)^0,w,c
  7457   00166A  A0D8               	btfss	status,0,c
  7458   00166C  EF3A  F00B         	goto	u2881
  7459   001670  EF3C  F00B         	goto	u2880
  7460   001674                     u2881:
  7461   001674  EF09  F00B         	goto	l3765
  7462   001678                     u2880:
  7463   001678  501A               	movf	atoi@neg^0,w,c
  7464   00167A  101B               	iorwf	(atoi@neg+1)^0,w,c
  7465   00167C  A4D8               	btfss	status,2,c
  7466   00167E  EF43  F00B         	goto	u2891
  7467   001682  EF45  F00B         	goto	u2890
  7468   001686                     u2891:
  7469   001686  EF53  F00B         	goto	l1296
  7470   00168A                     u2890:
  7471   00168A  C01C  F017         	movff	atoi@n,??_atoi
  7472   00168E  C01D  F018         	movff	atoi@n+1,??_atoi+1
  7473   001692  1E17               	comf	??_atoi^0,f,c
  7474   001694  1E18               	comf	(??_atoi+1)^0,f,c
  7475   001696  4A17               	infsnz	??_atoi^0,f,c
  7476   001698  2A18               	incf	(??_atoi+1)^0,f,c
  7477   00169A  C017  F015         	movff	??_atoi,?_atoi
  7478   00169E  C018  F016         	movff	??_atoi+1,?_atoi+1
  7479   0016A2  EF57  F00B         	goto	l1299
  7480   0016A6                     l1296:
  7481   0016A6  C01C  F015         	movff	atoi@n,?_atoi
  7482   0016AA  C01D  F016         	movff	atoi@n+1,?_atoi+1
  7483   0016AE                     l1299:
  7484   0016AE  0012               	return		;funcret
  7485   0016B0                     __end_of_atoi:
  7486                           	callstack 0
  7487                           
  7488 ;; *************** function _isspace *****************
  7489 ;; Defined at:
  7490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  7491 ;; Parameters:    Size  Location     Type
  7492 ;;  c               2   14[COMRAM] int 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;		None
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2   14[COMRAM] int 
  7497 ;; Registers used:
  7498 ;;		wreg, status,2, status,0
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7504 ;;      Params:         2       0       0       0       0       0       0
  7505 ;;      Locals:         1       0       0       0       0       0       0
  7506 ;;      Temps:          2       0       0       0       0       0       0
  7507 ;;      Totals:         5       0       0       0       0       0       0
  7508 ;;Total ram usage:        5 bytes
  7509 ;; Hardware stack levels used: 1
  7510 ;; Hardware stack levels required when called: 4
  7511 ;; This function calls:
  7512 ;;		Nothing
  7513 ;; This function is called by:
  7514 ;;		_atoi
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text35
  7519   001AC6                     __ptext35:
  7520                           	callstack 0
  7521   001AC6                     _isspace:
  7522                           	callstack 22
  7523   001AC6  0E01               	movlw	1
  7524   001AC8  6E13               	movwf	_isspace$1764^0,c
  7525   001ACA  0E20               	movlw	32
  7526   001ACC  180F               	xorwf	isspace@c^0,w,c
  7527   001ACE  1010               	iorwf	(isspace@c+1)^0,w,c
  7528   001AD0  B4D8               	btfsc	status,2,c
  7529   001AD2  EF6D  F00D         	goto	u2571
  7530   001AD6  EF6F  F00D         	goto	u2570
  7531   001ADA                     u2571:
  7532   001ADA  EF82  F00D         	goto	l3615
  7533   001ADE                     u2570:
  7534   001ADE  0EF7               	movlw	247
  7535   001AE0  240F               	addwf	isspace@c^0,w,c
  7536   001AE2  6E11               	movwf	??_isspace^0,c
  7537   001AE4  0EFF               	movlw	255
  7538   001AE6  2010               	addwfc	(isspace@c+1)^0,w,c
  7539   001AE8  6E12               	movwf	(??_isspace+1)^0,c
  7540   001AEA  5012               	movf	(??_isspace+1)^0,w,c
  7541   001AEC  E109               	bnz	u2580
  7542   001AEE  0E05               	movlw	5
  7543   001AF0  5C11               	subwf	??_isspace^0,w,c
  7544   001AF2  A0D8               	btfss	status,0,c
  7545   001AF4  EF7E  F00D         	goto	u2581
  7546   001AF8  EF80  F00D         	goto	u2580
  7547   001AFC                     u2581:
  7548   001AFC  EF82  F00D         	goto	l3615
  7549   001B00                     u2580:
  7550   001B00  0E00               	movlw	0
  7551   001B02  6E13               	movwf	_isspace$1764^0,c
  7552   001B04                     l3615:
  7553   001B04  C013  F00F         	movff	_isspace$1764,?_isspace
  7554   001B08  6A10               	clrf	(?_isspace+1)^0,c
  7555   001B0A  0012               	return		;funcret
  7556   001B0C                     __end_of_isspace:
  7557                           	callstack 0
  7558                           
  7559 ;; *************** function _isdigit *****************
  7560 ;; Defined at:
  7561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  c               2   14[COMRAM] int 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  2   14[COMRAM] int 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7575 ;;      Params:         2       0       0       0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0
  7577 ;;      Temps:          2       0       0       0       0       0       0
  7578 ;;      Totals:         4       0       0       0       0       0       0
  7579 ;;Total ram usage:        4 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 4
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_vfpfcnvrt
  7586 ;;		_atoi
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text36
  7591   001D1A                     __ptext36:
  7592                           	callstack 0
  7593   001D1A                     _isdigit:
  7594                           	callstack 23
  7595   001D1A  0ED0               	movlw	208
  7596   001D1C  240F               	addwf	isdigit@c^0,w,c
  7597   001D1E  6E11               	movwf	??_isdigit^0,c
  7598   001D20  0EFF               	movlw	255
  7599   001D22  2010               	addwfc	(isdigit@c+1)^0,w,c
  7600   001D24  6E12               	movwf	(??_isdigit+1)^0,c
  7601   001D26  5012               	movf	(??_isdigit+1)^0,w,c
  7602   001D28  E10A               	bnz	u2550
  7603   001D2A  0E0A               	movlw	10
  7604   001D2C  5C11               	subwf	??_isdigit^0,w,c
  7605   001D2E  A0D8               	btfss	status,0,c
  7606   001D30  EF9C  F00E         	goto	u2551
  7607   001D34  EF9F  F00E         	goto	u2550
  7608   001D38                     u2551:
  7609   001D38  0E01               	movlw	1
  7610   001D3A  EFA0  F00E         	goto	u2560
  7611   001D3E                     u2550:
  7612   001D3E  0E00               	movlw	0
  7613   001D40                     u2560:
  7614   001D40  6E0F               	movwf	?_isdigit^0,c
  7615   001D42  6A10               	clrf	(?_isdigit+1)^0,c
  7616   001D44  0012               	return		;funcret
  7617   001D46                     __end_of_isdigit:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function ___wmul *****************
  7621 ;; Defined at:
  7622 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  multiplier      2   14[COMRAM] unsigned int 
  7625 ;;  multiplicand    2   16[COMRAM] unsigned int 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  product         2   18[COMRAM] unsigned int 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  2   14[COMRAM] unsigned int 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, prodl, prodh
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7637 ;;      Params:         4       0       0       0       0       0       0
  7638 ;;      Locals:         2       0       0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0
  7640 ;;      Totals:         6       0       0       0       0       0       0
  7641 ;;Total ram usage:        6 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 4
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_atoi
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text37
  7652   001D96                     __ptext37:
  7653                           	callstack 0
  7654   001D96                     ___wmul:
  7655                           	callstack 22
  7656   001D96  500F               	movf	___wmul@multiplier^0,w,c
  7657   001D98  0211               	mulwf	___wmul@multiplicand^0,c
  7658   001D9A  CFF3 F013          	movff	prodl,___wmul@product
  7659   001D9E  CFF4 F014          	movff	prodh,___wmul@product+1
  7660   001DA2  500F               	movf	___wmul@multiplier^0,w,c
  7661   001DA4  0212               	mulwf	(___wmul@multiplicand+1)^0,c
  7662   001DA6  50F3               	movf	243,w,c
  7663   001DA8  2614               	addwf	(___wmul@product+1)^0,f,c
  7664   001DAA  5010               	movf	(___wmul@multiplier+1)^0,w,c
  7665   001DAC  0211               	mulwf	___wmul@multiplicand^0,c
  7666   001DAE  50F3               	movf	243,w,c
  7667   001DB0  2614               	addwf	(___wmul@product+1)^0,f,c
  7668   001DB2  C013  F00F         	movff	___wmul@product,?___wmul
  7669   001DB6  C014  F010         	movff	___wmul@product+1,?___wmul+1
  7670   001DBA  0012               	return		;funcret
  7671   001DBC                     __end_of___wmul:
  7672                           	callstack 0
  7673                           
  7674 ;; *************** function _SPI2_ExchangeByte *****************
  7675 ;; Defined at:
  7676 ;;		line 92 in file "mcc_generated_files/spi2.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;  data            1    wreg     unsigned char 
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;  data            1   14[COMRAM] unsigned char 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  1    wreg      unsigned char 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7690 ;;      Params:         0       0       0       0       0       0       0
  7691 ;;      Locals:         1       0       0       0       0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0
  7693 ;;      Totals:         1       0       0       0       0       0       0
  7694 ;;Total ram usage:        1 bytes
  7695 ;; Hardware stack levels used: 1
  7696 ;; Hardware stack levels required when called: 4
  7697 ;; This function calls:
  7698 ;;		Nothing
  7699 ;; This function is called by:
  7700 ;;		_main
  7701 ;;		_SDCARD_Initialize
  7702 ;;		_SDCARD_ReadBlock
  7703 ;;		_SDCARD_WriteBlock
  7704 ;;		_SDCARD_PollWriteComplete
  7705 ;;		_SPI2_WriteBlock
  7706 ;;		_SPI2_ReadBlock
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text38
  7711   001E10                     __ptext38:
  7712                           	callstack 0
  7713   001E10                     _SPI2_ExchangeByte:
  7714                           	callstack 26
  7715                           
  7716                           ;incstack = 0
  7717                           ;SPI2_ExchangeByte@data stored from wreg
  7718   001E10  6E0F               	movwf	SPI2_ExchangeByte@data^0,c
  7719   001E12                     
  7720                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
  7721   001E12  C00F  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
  7722   001E16                     l319:
  7723   001E16  AEA4               	btfss	164,7,c	;volatile
  7724   001E18  EF10  F00F         	goto	u1871
  7725   001E1C  EF12  F00F         	goto	u1870
  7726   001E20                     u1871:
  7727   001E20  EF0B  F00F         	goto	l319
  7728   001E24                     u1870:
  7729   001E24                     
  7730                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
  7731   001E24  9EA4               	bcf	164,7,c	;volatile
  7732                           
  7733                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
  7734   001E26  506F               	movf	111,w,c	;volatile
  7735   001E28  0012               	return		;funcret
  7736   001E2A                     __end_of_SPI2_ExchangeByte:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function _EUSART1_is_rx_ready *****************
  7740 ;; Defined at:
  7741 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      _Bool 
  7748 ;; Registers used:
  7749 ;;		wreg
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7755 ;;      Params:         0       0       0       0       0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 4
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_main
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text39
  7770   001E40                     __ptext39:
  7771                           	callstack 0
  7772   001E40                     _EUSART1_is_rx_ready:
  7773                           	callstack 26
  7774   001E40                     
  7775                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7776   001E40  BA9E               	btfsc	158,5,c	;volatile
  7777   001E42  EF25  F00F         	goto	u1931
  7778   001E46  EF28  F00F         	goto	u1930
  7779   001E4A                     u1931:
  7780   001E4A  0E01               	movlw	1
  7781   001E4C  EF29  F00F         	goto	u1936
  7782   001E50                     u1930:
  7783   001E50  0E00               	movlw	0
  7784   001E52                     u1936:
  7785   001E52  0012               	return		;funcret
  7786   001E54                     __end_of_EUSART1_is_rx_ready:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _EUSART1_Read *****************
  7790 ;; Defined at:
  7791 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      unsigned char 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7805 ;;      Params:         0       0       0       0       0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0
  7808 ;;      Totals:         0       0       0       0       0       0       0
  7809 ;;Total ram usage:        0 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; Hardware stack levels required when called: 4
  7812 ;; This function calls:
  7813 ;;		Nothing
  7814 ;; This function is called by:
  7815 ;;		_main
  7816 ;;		_getch
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text40
  7821   001D6E                     __ptext40:
  7822                           	callstack 0
  7823   001D6E                     _EUSART1_Read:
  7824                           	callstack 26
  7825   001D6E                     l238:
  7826                           
  7827                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7828   001D6E  AA9E               	btfss	158,5,c	;volatile
  7829   001D70  EFBC  F00E         	goto	u1941
  7830   001D74  EFBE  F00E         	goto	u1940
  7831   001D78                     u1941:
  7832   001D78  EFB7  F00E         	goto	l238
  7833   001D7C                     u1940:
  7834   001D7C                     
  7835                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7836   001D7C  0E00               	movlw	0
  7837   001D7E  6E4F               	movwf	_eusart1RxLastError^0,c	;volatile
  7838   001D80                     
  7839                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7840   001D80  A2AB               	btfss	171,1,c	;volatile
  7841   001D82  EFC5  F00E         	goto	u1951
  7842   001D86  EFC7  F00E         	goto	u1950
  7843   001D8A                     u1951:
  7844   001D8A  EFC9  F00E         	goto	l2961
  7845   001D8E                     u1950:
  7846   001D8E                     
  7847                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7848   001D8E  98AB               	bcf	171,4,c	;volatile
  7849                           
  7850                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7851   001D90  88AB               	bsf	171,4,c	;volatile
  7852   001D92                     l2961:
  7853                           
  7854                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7855   001D92  50AE               	movf	174,w,c	;volatile
  7856   001D94  0012               	return		;funcret
  7857   001D96                     __end_of_EUSART1_Read:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _INTERRUPT_InterruptManager *****************
  7861 ;; Defined at:
  7862 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7876 ;;      Params:         0       0       0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0
  7878 ;;      Temps:          2       0       0       0       0       0       0
  7879 ;;      Totals:         2       0       0       0       0       0       0
  7880 ;;Total ram usage:        2 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; Hardware stack levels required when called: 3
  7883 ;; This function calls:
  7884 ;;		_TMR0_ISR
  7885 ;; This function is called by:
  7886 ;;		Interrupt level 2
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	intcode
  7891   000008                     __pintcode:
  7892                           	callstack 0
  7893   000008                     _INTERRUPT_InterruptManager:
  7894                           	callstack 17
  7895                           
  7896                           ;incstack = 0
  7897   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7898   00000A  CFFA F00D          	movff	pclath,??_INTERRUPT_InterruptManager
  7899   00000E  CFFB F00E          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7900   000012                     
  7901                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7902   000012  AAF2               	btfss	242,5,c	;volatile
  7903   000014  EF0E  F000         	goto	i2u227_41
  7904   000018  EF10  F000         	goto	i2u227_40
  7905   00001C                     i2u227_41:
  7906   00001C  EF19  F000         	goto	i2l288
  7907   000020                     i2u227_40:
  7908   000020  A4F2               	btfss	242,2,c	;volatile
  7909   000022  EF15  F000         	goto	i2u228_41
  7910   000026  EF17  F000         	goto	i2u228_40
  7911   00002A                     i2u228_41:
  7912   00002A  EF19  F000         	goto	i2l288
  7913   00002E                     i2u228_40:
  7914   00002E                     
  7915                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  7916   00002E  EC3F  F00E         	call	_TMR0_ISR	;wreg free
  7917   000032                     i2l288:
  7918   000032  C00E  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7919   000036  C00D  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7920   00003A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7921   00003C  0011               	retfie		f
  7922   00003E                     __end_of_INTERRUPT_InterruptManager:
  7923                           	callstack 0
  7924                           
  7925 ;; *************** function _TMR0_ISR *****************
  7926 ;; Defined at:
  7927 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;		None
  7930 ;; Auto vars:     Size  Location     Type
  7931 ;;		None
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  1    wreg      void 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7941 ;;      Params:         0       0       0       0       0       0       0
  7942 ;;      Locals:         0       0       0       0       0       0       0
  7943 ;;      Temps:          0       0       0       0       0       0       0
  7944 ;;      Totals:         0       0       0       0       0       0       0
  7945 ;;Total ram usage:        0 bytes
  7946 ;; Hardware stack levels used: 1
  7947 ;; Hardware stack levels required when called: 2
  7948 ;; This function calls:
  7949 ;;		Absolute function
  7950 ;;		_TMR0_DefaultInterruptHandler
  7951 ;;		_myTMR0ISR
  7952 ;; This function is called by:
  7953 ;;		_INTERRUPT_InterruptManager
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text42
  7958   001C7E                     __ptext42:
  7959                           	callstack 0
  7960   001C7E                     _TMR0_ISR:
  7961                           	callstack 17
  7962   001C7E                     
  7963                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  7964   001C7E  94F2               	bcf	242,2,c	;volatile
  7965   001C80                     
  7966                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  7967   001C80  504B               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  7968   001C82  6ED7               	movwf	215,c	;volatile
  7969   001C84                     
  7970                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  7971   001C84  C04A  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7972   001C88                     
  7973                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  7974   001C88  504C               	movf	_TMR0_InterruptHandler^0,w,c
  7975   001C8A  104D               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  7976   001C8C  B4D8               	btfsc	status,2,c
  7977   001C8E  EF4B  F00E         	goto	i2u190_41
  7978   001C92  EF4D  F00E         	goto	i2u190_40
  7979   001C96                     i2u190_41:
  7980   001C96  EF5A  F00E         	goto	i2l40
  7981   001C9A                     i2u190_40:
  7982   001C9A                     
  7983                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  7984   001C9A  D802               	call	i2u191_48
  7985   001C9C  EF5A  F00E         	goto	i2u191_49
  7986   001CA0                     i2u191_48:
  7987   001CA0  0005               	push	
  7988   001CA2  6EFA               	movwf	pclath,c
  7989   001CA4  504C               	movf	_TMR0_InterruptHandler^0,w,c
  7990   001CA6  6EFD               	movwf	tosl,c
  7991   001CA8  504D               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  7992   001CAA  6EFE               	movwf	tosh,c
  7993   001CAC  50F8               	movf	tblptru,w,c
  7994   001CAE  6EFF               	movwf	tosu,c
  7995   001CB0  50FA               	movf	pclath,w,c
  7996   001CB2  0012               	return		;indir
  7997   001CB4                     i2u191_49:
  7998   001CB4                     i2l40:
  7999   001CB4  0012               	return		;funcret
  8000   001CB6                     __end_of_TMR0_ISR:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8004 ;; Defined at:
  8005 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;		None
  8010 ;; Return value:  Size  Location     Type
  8011 ;;                  1    wreg      void 
  8012 ;; Registers used:
  8013 ;;		None
  8014 ;; Tracked objects:
  8015 ;;		On entry : 0/0
  8016 ;;		On exit  : 0/0
  8017 ;;		Unchanged: 0/0
  8018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8019 ;;      Params:         0       0       0       0       0       0       0
  8020 ;;      Locals:         0       0       0       0       0       0       0
  8021 ;;      Temps:          0       0       0       0       0       0       0
  8022 ;;      Totals:         0       0       0       0       0       0       0
  8023 ;;Total ram usage:        0 bytes
  8024 ;; Hardware stack levels used: 1
  8025 ;; This function calls:
  8026 ;;		Nothing
  8027 ;; This function is called by:
  8028 ;;		_TMR0_Initialize
  8029 ;;		_TMR0_ISR
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           	psect	text43
  8034   001EB4                     __ptext43:
  8035                           	callstack 0
  8036   001EB4                     _TMR0_DefaultInterruptHandler:
  8037                           	callstack 18
  8038   001EB4  0012               	return		;funcret
  8039   001EB6                     __end_of_TMR0_DefaultInterruptHandler:
  8040                           	callstack 0
  8041                           
  8042 ;; *************** function _myTMR0ISR *****************
  8043 ;; Defined at:
  8044 ;;		line 245 in file "main.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;		None
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  bigOleWasteO    2   10[COMRAM] unsigned short 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8058 ;;      Params:         0       0       0       0       0       0       0
  8059 ;;      Locals:         2       0       0       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0
  8061 ;;      Totals:         2       0       0       0       0       0       0
  8062 ;;Total ram usage:        2 bytes
  8063 ;; Hardware stack levels used: 1
  8064 ;; Hardware stack levels required when called: 1
  8065 ;; This function calls:
  8066 ;;		_TMR0_ReadTimer
  8067 ;;		i2_TMR0_WriteTimer
  8068 ;; This function is called by:
  8069 ;;		_main
  8070 ;;		_TMR0_ISR
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text44
  8075   001BCE                     __ptext44:
  8076                           	callstack 0
  8077   001BCE                     _myTMR0ISR:
  8078                           	callstack 17
  8079   001BCE  8C89               	bsf	137,6,c	;volatile
  8080   001BD0                     
  8081                           ;main.c: 251:     for (bigOleWasteOfTime = 0; bigOleWasteOfTime < 40; bigOleWasteOfTime+
      +                          +);
  8082   001BD0  0E00               	movlw	0
  8083   001BD2  6E0C               	movwf	(myTMR0ISR@bigOleWasteOfTime+1)^0,c
  8084   001BD4  0E00               	movlw	0
  8085   001BD6  6E0B               	movwf	myTMR0ISR@bigOleWasteOfTime^0,c
  8086   001BD8                     i2l2873:
  8087   001BD8  4A0B               	infsnz	myTMR0ISR@bigOleWasteOfTime^0,f,c
  8088   001BDA  2A0C               	incf	(myTMR0ISR@bigOleWasteOfTime+1)^0,f,c
  8089   001BDC  500C               	movf	(myTMR0ISR@bigOleWasteOfTime+1)^0,w,c
  8090   001BDE  E109               	bnz	i2u188_40
  8091   001BE0  0E28               	movlw	40
  8092   001BE2  5C0B               	subwf	myTMR0ISR@bigOleWasteOfTime^0,w,c
  8093   001BE4  A0D8               	btfss	status,0,c
  8094   001BE6  EFF7  F00D         	goto	i2u188_41
  8095   001BEA  EFF9  F00D         	goto	i2u188_40
  8096   001BEE                     i2u188_41:
  8097   001BEE  EFEC  F00D         	goto	i2l2873
  8098   001BF2                     i2u188_40:
  8099   001BF2                     
  8100                           ;main.c: 253:     TMR0_WriteTimer(TMR0_ReadTimer() + (0x10000 - 1600));
  8101   001BF2  ECDE  F00E         	call	_TMR0_ReadTimer	;wreg free
  8102   001BF6  0EC0               	movlw	192
  8103   001BF8  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  8104   001BFA  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  8105   001BFC  0EF9               	movlw	249
  8106   001BFE  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  8107   001C00  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  8108   001C02  EC51  F00F         	call	i2_TMR0_WriteTimer	;wreg free
  8109   001C06                     
  8110                           ;main.c: 255:     INTCONbits.TMR0IF = 0;
  8111   001C06  94F2               	bcf	242,2,c	;volatile
  8112   001C08  9C89               	bcf	137,6,c	;volatile
  8113   001C0A  0012               	return		;funcret
  8114   001C0C                     __end_of_myTMR0ISR:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function i2_TMR0_WriteTimer *****************
  8118 ;; Defined at:
  8119 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  timerVal        2    8[COMRAM] unsigned short 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8133 ;;      Params:         2       0       0       0       0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0
  8136 ;;      Totals:         2       0       0       0       0       0       0
  8137 ;;Total ram usage:        2 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_myTMR0ISR
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text45
  8147   001EA2                     __ptext45:
  8148                           	callstack 0
  8149   001EA2                     i2_TMR0_WriteTimer:
  8150                           	callstack 17
  8151   001EA2                     
  8152                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  8153   001EA2  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  8154   001EA4  6ED7               	movwf	215,c	;volatile
  8155   001EA6                     
  8156                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  8157   001EA6  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  8158   001EAA  0012               	return		;funcret
  8159   001EAC                     __end_ofi2_TMR0_WriteTimer:
  8160                           	callstack 0
  8161                           
  8162 ;; *************** function _TMR0_ReadTimer *****************
  8163 ;; Defined at:
  8164 ;;		line 109 in file "mcc_generated_files/tmr0.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  readVal         2    4[COMRAM] unsigned short 
  8169 ;;  readValHigh     1    7[COMRAM] unsigned char 
  8170 ;;  readValLow      1    6[COMRAM] unsigned char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2    0[COMRAM] unsigned short 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8180 ;;      Params:         2       0       0       0       0       0       0
  8181 ;;      Locals:         4       0       0       0       0       0       0
  8182 ;;      Temps:          2       0       0       0       0       0       0
  8183 ;;      Totals:         8       0       0       0       0       0       0
  8184 ;;Total ram usage:        8 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_myTMR0ISR
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text46
  8194   001DBC                     __ptext46:
  8195                           	callstack 0
  8196   001DBC                     _TMR0_ReadTimer:
  8197                           	callstack 17
  8198   001DBC                     
  8199                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
  8200   001DBC  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  8201                           
  8202                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
  8203   001DC0  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  8204   001DC4                     
  8205                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  8206   001DC4  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  8207   001DC6  6E03               	movwf	??_TMR0_ReadTimer^0,c
  8208   001DC8  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  8209   001DCA  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  8210   001DCC  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  8211   001DD0                     
  8212                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
  8213   001DD0  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  8214   001DD4  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  8215   001DD8  0012               	return		;funcret
  8216   001DDA                     __end_of_TMR0_ReadTimer:
  8217                           	callstack 0
  8218                           
  8219                           	psect	text47
  8220   000000                     __ptext47:
  8221                           	callstack 0
  8222   000000                     
  8223                           	psect	rparam
  8224   000000                     
  8225                           	psect	temp
  8226   000050                     btemp:
  8227                           	callstack 0
  8228   000050                     	ds	1
  8229   000000                     int$flags	set	btemp
  8230   000000                     wtemp8	set	btemp+1
  8231   000000                     ttemp5	set	btemp+1
  8232   000000                     ttemp6	set	btemp+4
  8233   000000                     ttemp7	set	btemp+8
  8234                           
  8235                           	psect	idloc
  8236                           
  8237                           ;Config register IDLOC0 @ 0x200000
  8238                           ;	unspecified, using default values
  8239   200000                     	org	2097152
  8240   200000  FF                 	db	255
  8241                           
  8242                           ;Config register IDLOC1 @ 0x200001
  8243                           ;	unspecified, using default values
  8244   200001                     	org	2097153
  8245   200001  FF                 	db	255
  8246                           
  8247                           ;Config register IDLOC2 @ 0x200002
  8248                           ;	unspecified, using default values
  8249   200002                     	org	2097154
  8250   200002  FF                 	db	255
  8251                           
  8252                           ;Config register IDLOC3 @ 0x200003
  8253                           ;	unspecified, using default values
  8254   200003                     	org	2097155
  8255   200003  FF                 	db	255
  8256                           
  8257                           ;Config register IDLOC4 @ 0x200004
  8258                           ;	unspecified, using default values
  8259   200004                     	org	2097156
  8260   200004  FF                 	db	255
  8261                           
  8262                           ;Config register IDLOC5 @ 0x200005
  8263                           ;	unspecified, using default values
  8264   200005                     	org	2097157
  8265   200005  FF                 	db	255
  8266                           
  8267                           ;Config register IDLOC6 @ 0x200006
  8268                           ;	unspecified, using default values
  8269   200006                     	org	2097158
  8270   200006  FF                 	db	255
  8271                           
  8272                           ;Config register IDLOC7 @ 0x200007
  8273                           ;	unspecified, using default values
  8274   200007                     	org	2097159
  8275   200007  FF                 	db	255
  8276                           
  8277                           	psect	config
  8278                           
  8279                           ; Padding undefined space
  8280   300000                     	org	3145728
  8281   300000  FF                 	db	255
  8282                           
  8283                           ;Config register CONFIG1H @ 0x300001
  8284                           ;	Oscillator Selection bits
  8285                           ;	FOSC = INTIO67, Internal oscillator block
  8286                           ;	4X PLL Enable
  8287                           ;	PLLCFG = OFF, Oscillator used directly
  8288                           ;	Primary clock enable bit
  8289                           ;	PRICLKEN = ON, Primary clock enabled
  8290                           ;	Fail-Safe Clock Monitor Enable bit
  8291                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8292                           ;	Internal/External Oscillator Switchover bit
  8293                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8294   300001                     	org	3145729
  8295   300001  28                 	db	40
  8296                           
  8297                           ;Config register CONFIG2L @ 0x300002
  8298                           ;	Power-up Timer Enable bit
  8299                           ;	PWRTEN = OFF, Power up timer disabled
  8300                           ;	Brown-out Reset Enable bits
  8301                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8302                           ;	Brown Out Reset Voltage bits
  8303                           ;	BORV = 190, VBOR set to 1.90 V nominal
  8304   300002                     	org	3145730
  8305   300002  1F                 	db	31
  8306                           
  8307                           ;Config register CONFIG2H @ 0x300003
  8308                           ;	Watchdog Timer Enable bits
  8309                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8310                           ;	Watchdog Timer Postscale Select bits
  8311                           ;	WDTPS = 32768, 1:32768
  8312   300003                     	org	3145731
  8313   300003  3C                 	db	60
  8314                           
  8315                           ; Padding undefined space
  8316   300004                     	org	3145732
  8317   300004  FF                 	db	255
  8318                           
  8319                           ;Config register CONFIG3H @ 0x300005
  8320                           ;	CCP2 MUX bit
  8321                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  8322                           ;	PORTB A/D Enable bit
  8323                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  8324                           ;	P3A/CCP3 Mux bit
  8325                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  8326                           ;	HFINTOSC Fast Start-up
  8327                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  8328                           ;	Timer3 Clock input mux bit
  8329                           ;	T3CMX = PORTC0, T3CKI is on RC0
  8330                           ;	ECCP2 B output mux bit
  8331                           ;	P2BMX = PORTB5, P2B is on RB5
  8332                           ;	MCLR Pin Enable bit
  8333                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  8334   300005                     	org	3145733
  8335   300005  BF                 	db	191
  8336                           
  8337                           ;Config register CONFIG4L @ 0x300006
  8338                           ;	Stack Full/Underflow Reset Enable bit
  8339                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8340                           ;	Single-Supply ICSP Enable bit
  8341                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  8342                           ;	Extended Instruction Set Enable bit
  8343                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8344                           ;	Background Debug
  8345                           ;	DEBUG = OFF, Disabled
  8346   300006                     	org	3145734
  8347   300006  85                 	db	133
  8348                           
  8349                           ; Padding undefined space
  8350   300007                     	org	3145735
  8351   300007  FF                 	db	255
  8352                           
  8353                           ;Config register CONFIG5L @ 0x300008
  8354                           ;	Code Protection Block 0
  8355                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8356                           ;	Code Protection Block 1
  8357                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8358                           ;	Code Protection Block 2
  8359                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8360                           ;	Code Protection Block 3
  8361                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8362   300008                     	org	3145736
  8363   300008  0F                 	db	15
  8364                           
  8365                           ;Config register CONFIG5H @ 0x300009
  8366                           ;	Boot Block Code Protection bit
  8367                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8368                           ;	Data EEPROM Code Protection bit
  8369                           ;	CPD = OFF, Data EEPROM not code-protected
  8370   300009                     	org	3145737
  8371   300009  C0                 	db	192
  8372                           
  8373                           ;Config register CONFIG6L @ 0x30000A
  8374                           ;	Write Protection Block 0
  8375                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8376                           ;	Write Protection Block 1
  8377                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8378                           ;	Write Protection Block 2
  8379                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8380                           ;	Write Protection Block 3
  8381                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8382   30000A                     	org	3145738
  8383   30000A  0F                 	db	15
  8384                           
  8385                           ;Config register CONFIG6H @ 0x30000B
  8386                           ;	Configuration Register Write Protection bit
  8387                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8388                           ;	Boot Block Write Protection bit
  8389                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8390                           ;	Data EEPROM Write Protection bit
  8391                           ;	WRTD = OFF, Data EEPROM not write-protected
  8392   30000B                     	org	3145739
  8393   30000B  E0                 	db	224
  8394                           
  8395                           ;Config register CONFIG7L @ 0x30000C
  8396                           ;	Table Read Protection Block 0
  8397                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8398                           ;	Table Read Protection Block 1
  8399                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8400                           ;	Table Read Protection Block 2
  8401                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8402                           ;	Table Read Protection Block 3
  8403                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8404   30000C                     	org	3145740
  8405   30000C  0F                 	db	15
  8406                           
  8407                           ;Config register CONFIG7H @ 0x30000D
  8408                           ;	Boot Block Table Read Protection bit
  8409                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8410   30000D                     	org	3145741
  8411   30000D  40                 	db	64
  8412                           tosu	equ	0xFFF
  8413                           tosh	equ	0xFFE
  8414                           tosl	equ	0xFFD
  8415                           stkptr	equ	0xFFC
  8416                           pclatu	equ	0xFFB
  8417                           pclath	equ	0xFFA
  8418                           pcl	equ	0xFF9
  8419                           tblptru	equ	0xFF8
  8420                           tblptrh	equ	0xFF7
  8421                           tblptrl	equ	0xFF6
  8422                           tablat	equ	0xFF5
  8423                           prodh	equ	0xFF4
  8424                           prodl	equ	0xFF3
  8425                           indf0	equ	0xFEF
  8426                           postinc0	equ	0xFEE
  8427                           postdec0	equ	0xFED
  8428                           preinc0	equ	0xFEC
  8429                           plusw0	equ	0xFEB
  8430                           fsr0h	equ	0xFEA
  8431                           fsr0l	equ	0xFE9
  8432                           wreg	equ	0xFE8
  8433                           indf1	equ	0xFE7
  8434                           postinc1	equ	0xFE6
  8435                           postdec1	equ	0xFE5
  8436                           preinc1	equ	0xFE4
  8437                           plusw1	equ	0xFE3
  8438                           fsr1h	equ	0xFE2
  8439                           fsr1l	equ	0xFE1
  8440                           bsr	equ	0xFE0
  8441                           indf2	equ	0xFDF
  8442                           postinc2	equ	0xFDE
  8443                           postdec2	equ	0xFDD
  8444                           preinc2	equ	0xFDC
  8445                           plusw2	equ	0xFDB
  8446                           fsr2h	equ	0xFDA
  8447                           fsr2l	equ	0xFD9
  8448                           status	equ	0xFD8

Data Sizes:
    Strings     1133
    Constant    4
    Data        0
    BSS         560
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      79
    BANK0           160     73     107
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1621$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1621$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_71(CODE[3]), STR_70(CODE[3]), STR_69(CODE[2]), STR_68(CODE[4]), 
		 -> STR_67(CODE[6]), STR_66(CODE[3]), STR_65(CODE[3]), STR_64(CODE[2]), 
		 -> STR_63(CODE[3]), STR_62(CODE[2]), STR_61(CODE[4]), STR_60(CODE[28]), 
		 -> STR_59(CODE[26]), STR_58(CODE[27]), STR_57(CODE[3]), STR_56(CODE[17]), 
		 -> STR_55(CODE[3]), STR_54(CODE[5]), STR_53(CODE[2]), STR_52(CODE[5]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[23]), STR_48(CODE[3]), 
		 -> STR_47(CODE[5]), STR_46(CODE[2]), STR_45(CODE[5]), STR_44(CODE[17]), 
		 -> STR_43(CODE[43]), STR_42(CODE[3]), STR_41(CODE[5]), STR_40(CODE[2]), 
		 -> STR_39(CODE[5]), STR_38(CODE[19]), STR_37(CODE[20]), STR_36(CODE[28]), 
		 -> STR_35(CODE[20]), STR_34(CODE[30]), STR_33(CODE[29]), STR_32(CODE[29]), 
		 -> STR_31(CODE[44]), STR_30(CODE[27]), STR_29(CODE[83]), STR_28(CODE[83]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[9]), STR_24(CODE[52]), 
		 -> STR_23(CODE[42]), STR_22(CODE[43]), STR_21(CODE[37]), STR_20(CODE[24]), 
		 -> STR_19(CODE[52]), STR_18(CODE[36]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), STR_12(CODE[52]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[2]), STR_8(CODE[5]), 
		 -> STR_7(CODE[19]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_71(CODE[3]), STR_70(CODE[3]), STR_69(CODE[2]), STR_68(CODE[4]), 
		 -> STR_67(CODE[6]), STR_66(CODE[3]), STR_65(CODE[3]), STR_64(CODE[2]), 
		 -> STR_63(CODE[3]), STR_62(CODE[2]), STR_61(CODE[4]), STR_60(CODE[28]), 
		 -> STR_59(CODE[26]), STR_58(CODE[27]), STR_57(CODE[3]), STR_56(CODE[17]), 
		 -> STR_55(CODE[3]), STR_54(CODE[5]), STR_53(CODE[2]), STR_52(CODE[5]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[23]), STR_48(CODE[3]), 
		 -> STR_47(CODE[5]), STR_46(CODE[2]), STR_45(CODE[5]), STR_44(CODE[17]), 
		 -> STR_43(CODE[43]), STR_42(CODE[3]), STR_41(CODE[5]), STR_40(CODE[2]), 
		 -> STR_39(CODE[5]), STR_38(CODE[19]), STR_37(CODE[20]), STR_36(CODE[28]), 
		 -> STR_35(CODE[20]), STR_34(CODE[30]), STR_33(CODE[29]), STR_32(CODE[29]), 
		 -> STR_31(CODE[44]), STR_30(CODE[27]), STR_29(CODE[83]), STR_28(CODE[83]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[9]), STR_24(CODE[52]), 
		 -> STR_23(CODE[42]), STR_22(CODE[43]), STR_21(CODE[37]), STR_20(CODE[24]), 
		 -> STR_19(CODE[52]), STR_18(CODE[36]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), STR_12(CODE[52]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[2]), STR_8(CODE[5]), 
		 -> STR_7(CODE[19]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 83
		 -> STR_71(CODE[3]), STR_70(CODE[3]), STR_69(CODE[2]), STR_68(CODE[4]), 
		 -> STR_67(CODE[6]), STR_66(CODE[3]), STR_65(CODE[3]), STR_64(CODE[2]), 
		 -> STR_63(CODE[3]), STR_62(CODE[2]), STR_61(CODE[4]), STR_60(CODE[28]), 
		 -> STR_59(CODE[26]), STR_58(CODE[27]), STR_57(CODE[3]), STR_56(CODE[17]), 
		 -> STR_55(CODE[3]), STR_54(CODE[5]), STR_53(CODE[2]), STR_52(CODE[5]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[23]), STR_48(CODE[3]), 
		 -> STR_47(CODE[5]), STR_46(CODE[2]), STR_45(CODE[5]), STR_44(CODE[17]), 
		 -> STR_43(CODE[43]), STR_42(CODE[3]), STR_41(CODE[5]), STR_40(CODE[2]), 
		 -> STR_39(CODE[5]), STR_38(CODE[19]), STR_37(CODE[20]), STR_36(CODE[28]), 
		 -> STR_35(CODE[20]), STR_34(CODE[30]), STR_33(CODE[29]), STR_32(CODE[29]), 
		 -> STR_31(CODE[44]), STR_30(CODE[27]), STR_29(CODE[83]), STR_28(CODE[83]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[9]), STR_24(CODE[52]), 
		 -> STR_23(CODE[42]), STR_22(CODE[43]), STR_21(CODE[37]), STR_20(CODE[24]), 
		 -> STR_19(CODE[52]), STR_18(CODE[36]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), STR_12(CODE[52]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[2]), STR_8(CODE[5]), 
		 -> STR_7(CODE[19]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 83
		 -> STR_71(CODE[3]), STR_70(CODE[3]), STR_69(CODE[2]), STR_68(CODE[4]), 
		 -> STR_67(CODE[6]), STR_66(CODE[3]), STR_65(CODE[3]), STR_64(CODE[2]), 
		 -> STR_63(CODE[3]), STR_62(CODE[2]), STR_61(CODE[4]), STR_60(CODE[28]), 
		 -> STR_59(CODE[26]), STR_58(CODE[27]), STR_57(CODE[3]), STR_56(CODE[17]), 
		 -> STR_55(CODE[3]), STR_54(CODE[5]), STR_53(CODE[2]), STR_52(CODE[5]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[23]), STR_48(CODE[3]), 
		 -> STR_47(CODE[5]), STR_46(CODE[2]), STR_45(CODE[5]), STR_44(CODE[17]), 
		 -> STR_43(CODE[43]), STR_42(CODE[3]), STR_41(CODE[5]), STR_40(CODE[2]), 
		 -> STR_39(CODE[5]), STR_38(CODE[19]), STR_37(CODE[20]), STR_36(CODE[28]), 
		 -> STR_35(CODE[20]), STR_34(CODE[30]), STR_33(CODE[29]), STR_32(CODE[29]), 
		 -> STR_31(CODE[44]), STR_30(CODE[27]), STR_29(CODE[83]), STR_28(CODE[83]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[9]), STR_24(CODE[52]), 
		 -> STR_23(CODE[42]), STR_22(CODE[43]), STR_21(CODE[37]), STR_20(CODE[24]), 
		 -> STR_19(CODE[52]), STR_18(CODE[36]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), STR_12(CODE[52]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[2]), STR_8(CODE[5]), 
		 -> STR_7(CODE[19]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1661$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_71(CODE[3]), STR_70(CODE[3]), STR_69(CODE[2]), STR_68(CODE[4]), 
		 -> STR_67(CODE[6]), STR_66(CODE[3]), STR_65(CODE[3]), STR_64(CODE[2]), 
		 -> STR_63(CODE[3]), STR_62(CODE[2]), STR_61(CODE[4]), STR_60(CODE[28]), 
		 -> STR_59(CODE[26]), STR_58(CODE[27]), STR_57(CODE[3]), STR_56(CODE[17]), 
		 -> STR_55(CODE[3]), STR_54(CODE[5]), STR_53(CODE[2]), STR_52(CODE[5]), 
		 -> STR_51(CODE[17]), STR_50(CODE[15]), STR_49(CODE[23]), STR_48(CODE[3]), 
		 -> STR_47(CODE[5]), STR_46(CODE[2]), STR_45(CODE[5]), STR_44(CODE[17]), 
		 -> STR_43(CODE[43]), STR_42(CODE[3]), STR_41(CODE[5]), STR_40(CODE[2]), 
		 -> STR_39(CODE[5]), STR_38(CODE[19]), STR_37(CODE[20]), STR_36(CODE[28]), 
		 -> STR_35(CODE[20]), STR_34(CODE[30]), STR_33(CODE[29]), STR_32(CODE[29]), 
		 -> STR_31(CODE[44]), STR_30(CODE[27]), STR_29(CODE[83]), STR_28(CODE[83]), 
		 -> STR_27(CODE[2]), STR_26(CODE[2]), STR_25(CODE[9]), STR_24(CODE[52]), 
		 -> STR_23(CODE[42]), STR_22(CODE[43]), STR_21(CODE[37]), STR_20(CODE[24]), 
		 -> STR_19(CODE[52]), STR_18(CODE[36]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[21]), STR_14(CODE[7]), STR_13(CODE[15]), STR_12(CODE[52]), 
		 -> STR_11(CODE[3]), STR_10(CODE[5]), STR_9(CODE[2]), STR_8(CODE[5]), 
		 -> STR_7(CODE[19]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   77166
                                             62 BANK0     11    11      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                  _SPI2_ExchangeByte
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   25274
                                             52 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0      88
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6     353
                                             15 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     353
                                             15 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      67
                                             15 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   24831
                                             52 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   24484
                                             44 BANK0      8     2      6
                  _SPI2_ExchangeByte (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   17995
                                             36 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   17486
                                             61 COMRAM     4     4      0
                                             17 BANK0     19    13      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    4809
                                             43 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                                _pad
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    6363
                                             43 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4063
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1866
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             32 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             14 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             14 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1809
                                             25 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1366
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1454
                                             20 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             14 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SPI2_ExchangeByte                                    1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0     185
                                             12 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     185
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           2     2      0     185
                                             10 COMRAM     2     2      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _SPI2_ExchangeByte (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
               _fputs
                 _fputc
           _fputc
           _isdigit
           _xtoa
             _pad
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_ExchangeByte
   _SPI2_Open
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     200      30       33.4%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     49      6B       4       66.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      4F       1       84.0%
BITBIGSFRlllhl      26      0       0      28        0.0%
BITBIGSFRllh        19      0       0      26        0.0%
BITBIGSFRhhl        19      0       0      16        0.0%
BITBIGSFRlhlhhl     17      0       0      19        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRlllhh       9      0       0      27        0.0%
BITBIGSFRlhlhlh      7      0       0      20        0.0%
BITBIGSFRlhlhll      6      0       0      21        0.0%
BITBIGSFRlhllh       6      0       0      24        0.0%
BITBIGSFRlhlll       6      0       0      25        0.0%
BITBIGSFRlhlhll      5      0       0      22        0.0%
BITBIGSFRlhlhll      2      0       0      23        0.0%
BITBIGSFRlhlhhh      1      0       0      18        0.0%
BITBIGSFRlhh         1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BA      29        0.0%
DATA                 0      0     2BA      31        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 21:30:16 2023

                                            l21 1CEA                                              l33 1E6E  
                                            l43 1E78                                              l95 006C  
                          SDCARD_ReadBlock@addr 0010                             ___wmul@multiplicand 0011  
                               _timer0ReloadVal 004A                                  hexDumpBuffer@i 009C  
                                hexDumpBuffer@j 0098                                             l120 040A  
                                           l106 027E                                             l131 04DE  
                                           l221 1BCC                                             l134 056E  
                                           l126 04A8                                             l321 1E24  
                                           l313 19E4                                             l242 1D94  
                                           l322 1E28                                             l316 1EB2  
                                           l172 1E0E                                             l229 1E52  
                                           l245 1E2C                                             l309 1E64  
                                           l238 1D6E                                             l254 1EA0  
                                           l319 1E16                                             l175 1DE6  
                                           l248 1E3E                                             l424 18BA  
                                           l272 1E96                                             l409 1400  
                                           l281 1EAE                                             l434 1A70  
                                           l266 1E8C                                             l178 1DF4  
                                           l451 0E62                                             l444 1C7C  
                                           l436 1A72                                             l269 1E82  
                                           l390 12C0                                             l462 0F32  
                                           l439 1C46                                             l376 1D18  
                                           l465 1DBA                                             l592 1564  
                                           l579 1288                                             _abs 1B50  
                                           _pad 1778                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1200 0B7A                                            ?_abs 0021  
                                          l1220 0F74                                            l1213 0D46  
                                          l1302 1D44                                            l1310 1B0A  
                                          l1143 1D6C                                            l1232 1100  
                                          l1170 17BC                                            l1218 0F6C  
                                          l1252 0A8E                                            l1325 1950  
                                          l1333 1B4E                                            l1173 17FE  
                                          l3101 1830                                            l1191 1776  
                                          l1271 1B86                                            l1175 1820  
                                          l3111 184E                                            l3103 1836  
                                          l3121 1882                                            l3113 1864  
                                          l3105 183C                                            l3041 19E6  
                                          l4001 0E56                                            l1186 1714  
                                          l1274 1B8E                                            l1267 1AC4  
                                          l3123 1896                                            l3115 187A  
                                          l3107 1842                                            l3051 19FA  
                                          l3043 19E6                                            l4011 0EBC  
                                          l4003 0E86                                            l1189 1756  
                                          l1197 0B2C                                            l3125 189A  
                                          l3109 1848                                            l3061 1A28  
                                          l3053 1A00                                            l3045 19E8  
                                          l4021 0F26                                            l4013 0ED8  
                                          l4005 0E8C                                            l4101 0354  
                                          l1199 0B34                                            l3127 18AC  
                                          l3071 1A5A                                            l3063 1A40  
                                          l3055 1A06                                            l3047 19EE  
                                          l4015 0EE8                                            l4007 0E9E  
                                          l4103 0366                                            l4111 03BA  
                                          l4031 006A                                            l4023 0042  
                                          l1296 16A6                                            l3081 1C62  
                                          l3129 18B8                                            l3073 1A5E  
                                          l3057 1A0C                                            l3049 19F4  
                                          l4017 0F0A                                            l4009 0EAA  
                                          l4113 03DC                                            l4105 0388  
                                          l4041 0098                                            l4033 007A  
                                          l4025 0058                                            l1299 16AE  
                                          l3075 1C48                                            l3059 1A12  
                                          l4019 0F10                                            l4131 04AA  
                                          l4115 03E8                                            l4107 0394  
                                          l4051 00CC                                            l4043 00A6  
                                          l4035 0086                                            l4027 005C  
                                          l3501 1102                                            l4301 0746  
                                          l3077 1C50                                            l3093 1822  
                                          l3069 1A48                                            l4141 058E  
                                          l4133 04C6                                            l4125 0480  
                                          l4117 03FE                                            l4109 03AA  
                                          l4061 024E                                            l4053 00E0  
                                          l4045 00B4                                            l4037 0088  
                                          l4029 005E                                            l3511 1146  
                                          l3503 1106                                            l4303 0A46  
                                          l3087 1C68                                            l3079 1C52  
                                          l3095 1822                                            l4151 05F8  
                                          l4143 059C                                            l4135 04E0  
                                          l4127 0492                                            l4119 0478  
                                          l4071 0268                                            l4055 00E8  
                                          l4047 00C2                                            l4039 008A  
                                          l4305 15FC                                            l3521 119C  
                                          l3513 1166                                            l3505 1114  
                                          l3601 1B6A                                            l3089 1C7A  
                                          l3097 1824                                            l4153 0606  
                                          l4145 05AA                                            l4137 0570  
                                          l4129 0496                                            l4081 0298  
                                          l4073 0284                                            l4161 069A  
                                          l4057 00FE                                            l4049 00C6  
                                          l3603 1D1A                                            l3611 1ADE  
                                          l3531 121E                                            l3523 11B0  
                                          l3515 116A                                            l3507 1134  
                                          l3099 182A                                            l4155 0618  
                                          l4147 05C4                                            l4139 058C  
                                          l4091 0314                                            l4083 029E  
                                          l4067 0256                                            l4059 023E  
                                          l3613 1B00                                            l3621 16C2  
                                          l3541 1268                                            l3533 1220  
                                          l3525 11BE                                            l3517 1176  
                                          l3509 1138                                            l2901 1BB0  
                                          l4149 05D2                                            l4093 0338  
                                          l4085 02B8                                            l4069 0262  
                                          l3615 1B04                                            l3607 1AC6  
                                          l3471 1E9A                                            l3623 16CE  
                                          l3535 1232                                            l3527 11D0  
                                          l3519 1194                                            l3551 1434  
                                          l3711 0F9C                                            l3703 0F34  
                                          l2903 1BBC                                            l2815 1E70  
                                          l4095 0340                                            l4087 02FC  
                                          l4079 028C                                            l4159 062E  
                                          l3609 1ACA                                            l3481 1908  
                                          l3473 18BC                                            l3641 1764  
                                          l3633 170C                                            l3625 16DA  
                                          l3529 11FE                                            l3537 1238  
                                          l3561 148C                                            l3553 1438  
                                          l3545 1402                                            l3721 0FCA  
                                          l3713 0FA6                                            l3705 0F42  
                                          l3801 0754                                            l2825 1E84  
                                          l2905 1BC8                                            l2921 1DF6  
                                          l4097 0344                                            l4089 0310  
                                          l3467 1E2C                                            l3483 193E  
                                          l3475 18CE                                            l3635 1720  
                                          l3627 16E8                                            l3619 16B0  
                                          l3539 1248                                            l3571 150E  
                                          l3563 14A0                                            l3555 1446  
                                          l3547 1406                                            l3491 1B2A  
                                          l3651 0AF6                                            l3643 0A90  
                                          l3731 1000                                            l3723 0FDA  
                                          l3715 0FAE                                            l3707 0F44  
                                          l3811 07DC                                            l3803 0766  
                                          l2827 1E7A                                            l2851 1CD6  
                                          l2931 1E0A                                            l2923 1DFA  
                                          l2907 1E66                                            l4099 034A  
                                          l3469 1E3A                                            l3477 18E0  
                                          l3637 1734                                            l3629 16FA  
                                          l3565 14AE                                            l3573 1514  
                                          l3557 1466                                            l3549 1414  
                                          l3493 1B2E                                            l3581 1778  
                                          l3661 0B4C                                            l3653 0B04  
                                          l3645 0AB0                                            l3741 10B8  
                                          l3733 1006                                            l3725 0FE6  
                                          l3717 0FB4                                            l3709 0F5E  
                                          l3821 0866                                            l3813 07FC  
                                          l3805 078A                                            l3901 129E  
                                          l2933 1EB0                                            l2941 199A  
                                          l2829 1E8E                                            l2853 1CD8  
                                          l2845 1CB6                                            l2925 1DFE  
                                          l2909 1E6A                                            ?_pad 0021  
                                          l3495 1D96                                            l3751 157A  
                                          l3479 18EA                                            l3639 1738  
                                          l3575 1524                                            l3567 14DC  
                                          l3559 1484                                            l3487 1B0C  
                                          l3591 17C8                                            l3583 1786  
                                          l3671 0B82                                            l3663 0B52  
                                          l3655 0B06                                            l3647 0AC6  
                                          l3743 10D2                                            l3727 0FEA  
                                          l3719 0FBA                                            l3735 1064  
                                          l3831 08DA                                            l3823 089A  
                                          l3807 07C0                                            l3911 130E  
                                          l3903 12A4                                            l2943 19B8  
                                          l2935 1954                                            l2855 1CDA  
                                          l2847 1CB8                                            l2927 1E02  
                                          l2961 1D92                                            l2953 1D6E  
                                          l2865 1E12                                            l3497 1DB2  
                                          l3761 15D6                                            l3577 1544  
                                          l3569 14FC                                            l3489 1B18  
                                          l3593 17DC                                            l3585 179A  
                                          l3681 0C20                                            l3673 0B8A  
                                          l3665 0B62                                            l3657 0B20  
                                          l3649 0AD6                                            l3737 1080  
                                          l3745 10E0                                            l3729 0FFA  
                                          l3841 099A                                            l3833 08F6  
                                          l3817 080A                                            l3809 07CE  
                                          l3921 1334                                            l3913 1320  
                                          l3905 12C2                                            l2945 19E2  
                                          l2937 1962                                            l2857 1CE6  
                                          l2849 1CC0                                            l2929 1E06  
                                          l2955 1D7C                                            l3771 1648  
                                          l3763 15DE                                            l3755 157E  
                                          l3595 17E0                                            l3587 17A8  
                                          l3691 0CF2                                            l3675 0B90  
                                          l3683 0C84                                            l3667 0B6E  
                                          l3659 0B3C                                            l3739 109E  
                                          l3843 09F8                                            l3851 0A54  
                                          l3835 094E                                            l3827 08AE  
                                          l3819 0842                                            l3931 1352  
                                          l3923 133A                                            l3915 1322  
                                          l3907 12FC                                            l2939 1996  
                                          l2883 1EAC                                            l2891 1CEC  
                                          l4299 0644                                            l2957 1D80  
                                          l2949 1E40                                            l3773 1678  
                                          l3765 1612                                            l3757 159A  
                                          l3749 1566                                            l3597 180C  
                                          l3589 17B4                                            l3685 0CA0  
                                          l3693 0D00                                            l3677 0C12  
                                          l3669 0B76                                            l3829 08BE  
                                          l3781 06B0                                            l3941 1390  
                                          l3933 135C                                            l3925 1340  
                                          l3917 1328                                            l3909 12FE  
                                          l2893 1D16                                            l2885 1E54  
                                          l2959 1D8E                                            l3775 168A  
                                          l3759 15CE                                            l3599 1B50  
                                          l3695 0D10                                            l3687 0CBE  
                                          l3679 0C1A                                            l3839 097E  
                                          l3791 0700                                            l3783 06D4  
                                          l3855 0A66                                            l3951 13AA  
                                          l3943 1392                                            l3935 135E  
                                          l3927 1346                                            l3919 132E  
                                          l2895 1DDA                                            l2887 1E60  
                                          l3697 0D16                                            l3689 0CD8  
                                          l3849 0A28                                            l3793 0702  
                                          l3785 06E2                                            l3881 1A9E  
                                          l3961 13CC                                            l3953 13B0  
                                          l3945 1398                                            l3937 136E  
                                          l3929 134C                                            l2897 1B90  
                                          l2889 1E62                                            l3699 0D26  
                                          l3795 0714                                            l3787 06EE  
                                          l3883 1ABA                                            l3963 13CE  
                                          l3955 13B6                                            l3947 139E  
                                          l3939 137E                                            l2899 1BA4  
                                          l3971 0D56                                            l3789 06F2  
                                          l3877 1A74                                            l3965 13DE  
                                          l3957 13BC                                            l3949 13A4  
                                          l3893 128E                                            l3981 0D90  
                                          l3799 0720                                            l3879 1A80  
                                          l3887 1D46                                            l3967 13EE  
                                          l3959 13C2                                            l3991 0DEC  
                                          l3983 0D9C                                            l3889 1D50  
                                          l3993 0E08                                            l3985 0DB0  
                                          l3977 0D60                                            l3969 0D48  
                                          l3899 1298                                            l3995 0E18  
                                          l3987 0DCE                                            l3979 0D72  
                                          l3997 0E3A                                            l3989 0DDA  
                                          l3999 0E40                                            STR_1 7FBD  
                                          STR_2 7F6B                                            STR_3 7FCA  
                                          STR_4 7D81                                            STR_5 7FE9  
                                          STR_6 7C37                                            STR_7 7F58  
                                          STR_8 7FEE                                            STR_9 7FFC  
                                          u2020 1A28                                            u2021 1A24  
                                          u2030 1A70                                            u2031 1A6C  
                                          u3000 12C0                                            u2040 1C62  
                                          u3001 12BC                                            u2041 1C5E  
                                          u3010 130E                                            u2050 1864  
                                          u3011 130A                                            u2051 1860  
                                          u3020 136E                                            u2060 187A  
                                          u3100 0E08                                            u3021 136A  
                                          u2061 1876                                            u3101 0E04  
                                          _LATA 000F89                                            u2310 1E3A  
                                          u3030 137E                                            u2070 18AC  
                                          u3110 0E56                                            _LATB 000F8A  
                                          u2311 1E36                                            u3031 137A  
                                          u2071 18A8                                            u3111 0E52  
                                          _LATC 000F8B                                            u2320 18CE  
                                          u2400 1194                                            u3040 13DE  
                                          u3120 0E9E                                            u3200 0366  
                                          u2321 18CA                                            u2401 1190  
                                          u3041 13DA                                            u3121 0E9A  
                                          u3201 0362                                            u2330 18E0  
                                          u2410 11BE                                            u3050 13EE  
                                          u3130 0ED8                                            u3210 0388  
                                          u2331 18DC                                            u2411 11BA  
                                          u3051 13EA                                            u3131 0ED4  
                                          u3211 0384                                            u2340 1908  
                                          u2420 11FE                                            u2500 1786  
                                          u3140 0F26                                            u3060 0D72  
                                          u3220 03DC                                            u2341 1904  
                                          u2421 11FA                                            u2501 1782  
                                          u3141 0F22                                            u3061 0D6E  
                                          u3221 03D8                                            u2350 193E  
                                          u2430 1248                                            u2510 17A8  
                                          u3070 0D90                                            u3230 04A8  
                                          u3150 007A                                            u2351 193A  
                                          u2431 1244                                            u2511 17A4  
                                          u3071 0D8C                                            u3231 04A4  
                                          u3151 0076                                            u2600 16E8  
                                          u2440 1414                                            u2360 1B4E  
                                          u2520 17FE                                            u3080 0DB0  
                                          u3240 04DE                                            u3160 00E0  
                                          u2601 16E4                                            u2441 1410  
                                          u2361 1B4A                                            u2521 17FA  
                                          u3081 0DAC                                            u3241 04DA  
                                          u3161 00DC                                            u2610 1708  
                                          u2370 1114                                            u2450 1446  
                                          u2530 180C                                            u3090 0DCE  
                                          u3170 027E                                            u2611 1704  
                                          u2371 1110                                            u2451 1442  
                                          u2531 1808                                            u3091 0DCA  
                                          u3171 027A                                            u2620 1756  
                                          u2380 1146                                            u2460 1484  
                                          u2540 1B6A                                            u2700 0B62  
                                          u3180 02B4                                            u2621 1752  
                                          u2381 1142                                            u2461 1480  
                                          u2541 1B66                                            u2701 0B5E  
                                          u3181 02B0                                            u2550 1D3E  
                                          u2630 1764                                            u2470 14AE  
                                          u2710 0CA0                                            u3190 0310  
                                          u2551 1D38                                            u2631 1760  
                                          u2391 1170                                            u2471 14AA  
                                          u2711 0C9C                                            u3191 030C  
                                          u2560 1D40                                            u2480 14DC  
                                          u2720 0CBE                                            u2640 0AC2  
                                          u2800 103E                                            u1920 1962  
                                          u2481 14D8                                            u2721 0CBA  
                                          u2641 0ABC                                            u1921 195E  
                                          u1930 1E50                                            u2570 1ADE  
                                          u2490 1524                                            u2730 0CD8  
                                          u2650 0AC4                                            u2810 1080  
                                          u1931 1E4A                                            u2571 1ADA  
                                          u2491 1520                                            u2731 0CD4  
                                          u2811 107C                                            u1940 1D7C  
                                          u2580 1B00                                            u2740 0CF2  
                                          u2660 0AD6                                            u2820 109E  
                                          u2900 06D4                                            u1941 1D78  
                                          u2581 1AFC                                            u2741 0CEE  
                                          u2661 0AD2                                            u2821 109A  
                                          u2805 102C                                            u2901 06D0  
                                          u1950 1D8E                                            u1870 1E24  
                                          u2590 16C2                                            u2750 0D00  
                                          u2670 0B04                                            u2830 10B8  
                                          u2910 0766                                            u1951 1D8A  
                                          u1871 1E20                                            u2591 16BE  
                                          u2751 0CFC                                            u2671 0B00  
                                          u2831 10B4                                            u2911 0762  
                                          u1936 1E52                                            u2760 0D10  
                                          u2680 0B20                                            u2840 10D2  
                                          u2920 078A                                            u2761 0D0C  
                                          u2681 0B1C                                            u2841 10CE  
                                          u2921 0786                                            u2690 0B4C  
                                          u2850 10E0                                            u2770 0F42  
                                          u2930 07CE                                            u1890 1DF4  
                                          u2691 0B48                                            u2851 10DC  
                                          u2771 0F3E                                            u2931 07CA  
                                          u1891 1DF0                                            u2860 159A  
                                          u2780 0F5E                                            u2940 0842  
                                          u2861 1596                                            u2781 0F5A  
                                          u2941 083E                                            u2870 15CA  
                                          u2790 0FCA                                            u2950 0866  
                                          u2871 15C6                                            u2791 0FC6  
                                          u2951 0862                                            u2880 1678  
                                          u2960 08DA                                            u2881 1674  
                                          u2961 08D6                                            u2890 168A  
                                          u2970 08F6                                            u2891 1686  
                                          u2971 08F2                                            u2980 099A  
                                          u2981 0996                                            i2l30 1DD8  
                                          u2990 1ABA                                            u2991 1AB6  
                                          i2l40 1CB4                                            i2l33 1EAA  
                                          i2l46 1EB4                                            _WPUB 000F61  
                                 _EUSART1_Write 1E2A                                            abs@a 0021  
                                          _dbuf 00AB                                            _atoi 1566  
                                          _ctoa 16B0                                            _main 0042  
                                          _dtoa 0A90                                   ?_EUSART1_Read 0001  
                                          _prec 0044                                            pad@i 0028  
                                          pad@p 0025                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002A  
                                          fsr2l 000FD9                                            btemp 0050  
                                          _xtoa 0F34                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 0096  
                                          start 003E                                    ___param_bank 000000  
                                         ??_abs 0023                                           ??_pad 0027  
                       __end_of_TMR0_Initialize 1CEC                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 1DF6                                 __end_of___aodiv 128A  
                                         ?_atoi 0015                                     ?_SPI2_Close 0001  
                                         ?_ctoa 001A                                           ?_main 0001  
                                         ?_dtoa 002C                                 __end_of___aomod 1566  
                                         STR_10 7FEE                                           STR_11 7FAB  
                                         STR_12 7C39                                           STR_20 7ED4  
                                         STR_13 7FAE                                           STR_21 7DAB  
                                         STR_14 7FDC                                           STR_30 7E9F  
                                         STR_22 7D2C                                           STR_15 7F1B  
                                         STR_23 7D57                                           STR_31 7CD5  
                                         STR_24 7C39                                           STR_40 7FFC  
                                         STR_16 7EEC                                           STR_32 7E2F  
                                         STR_41 7FEE                                           STR_25 7FD3  
                                         STR_33 7E12                                           STR_17 7C6D  
                                         STR_26 7FF5                                           STR_42 7FAB  
                                         STR_50 7F9F                                           STR_34 7DF4  
                                         STR_18 7DD0                                           STR_27 7FF5  
                                         STR_51 7F8E                                           STR_35 7F30  
                                         STR_43 7D01                                           STR_19 7CA1  
                                         STR_52 7FEE                                           STR_44 7F8E  
                                         STR_36 7E68                                           STR_60 7E4C  
                                         STR_28 7B91                                           STR_53 7FFC  
                                         STR_45 7FEE                                           STR_61 7FF3  
                                         STR_37 7F44                                           STR_29 7BE4  
                                         STR_62 7F9D                                           STR_38 7F58  
                                         STR_46 7FFC                                           STR_70 7FF7  
                                         STR_54 7FEE                                           STR_71 7FAB  
                                         STR_55 7FAB                                           STR_63 7F9C  
                                         STR_47 7FEE                                           STR_39 7FEE  
                                         STR_48 7FAB                                           STR_64 7FFA  
                                         STR_56 7F7D                                           STR_57 7DA8  
                                         STR_65 7FF7                                           STR_49 7F04  
                                         STR_66 7FAB                                           STR_58 7E84  
                                         STR_67 7FE3                                           STR_59 7EBA  
                                         STR_68 7F9B                                           STR_69 7FFA  
                     TMR0_ReadTimer@readValHigh 0008                                           _T0CON 000FD5  
                                         ?_xtoa 002C                                           i2l143 1BCE  
                                         i2l149 1C0A                                 _TMR0_WriteTimer 1E66  
                                         i2l288 0032                                    vfpfcnvrt@fmt 0073  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                       ?_TMR0_SetInterruptHandler 000F  
                              __end_of_TMR0_ISR 1CB6                                           _flags 004E  
                                         _fputc 18BC                                           _fputs 1B0C  
                               __end_of_isdigit 1D46                                           atoi@n 001C  
                                         pad@fp 0021                                           atoi@s 0015  
                                         _width 0042                                           ctoa@c 001C  
                                         _putch 1E98                                           ctoa@l 001E  
                                         ctoa@w 0020                                           main@i 00A3  
                                         dtoa@d 002E                                           dtoa@i 006F  
                                         dtoa@n 0066                                           dtoa@p 0062  
                                         dtoa@s 006E                                           dtoa@w 0064  
                               __end_of_isspace 1B0C                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000F  
                                         ttemp5 0051                                           ttemp6 0054  
                                         ttemp7 0058                                           status 000FD8  
                                         wtemp8 0051                                           xtoa@c 0070  
                                         xtoa@d 002E                                           xtoa@i 006E  
                                         xtoa@n 0066                                           xtoa@p 0062  
                                         xtoa@w 0064              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 1C0C                    SDCARD_ReadBlock@sdCardBuffer 0014  
                                  __end_of_atoi 16B0                                    __end_of_ctoa 1778  
                    __end_of_EUSART1_Initialize 1BCE                                    __end_of_main 06B0  
                                  __end_of_dtoa 0D48                               _SPI2_ExchangeByte 1E10  
                                  __end_of_xtoa 1102                       ?_SDCARD_PollWriteComplete 0001  
                   ?_INTERRUPT_InterruptManager 0001                              ?_SPI2_ExchangeByte 0001  
                                        ??_atoi 0017                                          ??_ctoa 001D  
                                        ??_main 009E                                          ??_dtoa 0036  
                                        ??_xtoa 0036                                   __activetblptr 000002  
                           ??_SPI2_ExchangeByte 000F                                          ?_fputc 0011  
                                        ?_fputs 001A                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l3335 0012  
                                        i2l3337 0020                                          i2l3339 002E  
                                        i2l2821 1DD0                                          i2l2911 1C7E  
                                        i2l2817 1DBC                                          i2l2841 1EA2  
                                        i2l2913 1C80                                          i2l2819 1DC4  
                                        i2l2843 1EA6                                          i2l2915 1C84  
                                        i2l2917 1C88                                          i2l2919 1C9A  
                                        i2l2881 1C08                                          i2l2873 1BD8  
                                        i2l2875 1BDC                                          i2l2867 1BD0  
                                        i2l2877 1BF2                                          i2l2879 1C06  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0078                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                             __end_of_SPI2_Open 19E6                       __end_of_SPI2_ExchangeByte 1E2A  
                                  vfprintf@cfmt 008A                                       ??___aodiv 001F  
                                     ??___aomod 001F                                          ___wmul 1D96  
                       __end_of_TMR0_WriteTimer 1E70                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 000F                                ?_TMR0_Initialize 0001  
                                        clear_0 1C14                                          clear_1 1C26  
                                        clear_2 1C32                                          isa$std 000001  
                                        _printf 1D46                                          pad@buf 0023  
              ??_EUSART1_SetOverrunErrorHandler 0011                 ?_EUSART1_SetOverrunErrorHandler 000F  
                                        ctoa@fp 001A                                          dtoa@fp 002C  
                                        fputc@c 0011                                          fputs@c 001E  
                                        fputs@i 001F                                          fputs@s 001A  
                                     ??_isdigit 0011                                    __mediumconst 7B8C  
                                     ??_isspace 0011                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 1AC6                                 ??_EUSART1_Write 000F  
      TMR0_SetInterruptHandler@InterruptHandler 000F                                          xtoa@fp 002C  
                             _SYSTEM_Initialize 1DF6                                      __accesstop 0060  
                       __end_of__initialization 1C38                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                _SDCARD_ReadBlock 1822  
                    __end_of_spi2_configuration 7B91                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0013                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 1952                                   __end_of_fputs 1B50  
                                 __end_of_putch 1EA2                            __end_of_EUSART1_Read 1D96  
                                       ??_fputc 0015                       __end_of_SYSTEM_Initialize 1E10  
                                       ??_fputs 001E                                         ??_putch 0010  
                            SDCARD_WriteBlock@i 0016                               ??_SPI2_Initialize 000F  
                                    __pbssBANK0 00A9                 __end_of_EUSART1_SetErrorHandler 1E98  
              __end_of_TMR0_SetInterruptHandler 1E7A                                         ?___wmul 000F  
                                    ??_TMR0_ISR 000D                                ?_TMR0_WriteTimer 000F  
                                       ?_printf 008C                                    ??_SPI2_Close 000F  
        __end_of_EUSART1_SetFramingErrorHandler 1E8E                  _EUSART1_SetFramingErrorHandler 1E84  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                               SDCARD_ReadBlock@i 0016  
              __end_of_SDCARD_PollWriteComplete 1C7E                              __end_of_SPI2_Close 1EB4  
                                       __Hparam 0000                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 0F34                       SDCARD_Initialize@response 0097  
                                       ___aodiv 1102                                         ___aomod 1402  
                             __end_of_myTMR0ISR 1C0C                                       ?_vfprintf 0084  
                           _EUSART1_is_rx_ready 1E40                                         __pcinit 1C0C  
                                       __ramtop 0600                                         __ptext0 0042  
                                       __ptext1 0D48                                         __ptext2 1E66  
                                       __ptext3 1DF6                                         __ptext4 1CB6  
                                       __ptext5 1E70                                         __ptext6 1E54  
                                       __ptext7 1CEC                                         __ptext8 1DDA  
                                       __ptext9 1EAC                                       _T0CONbits 000FD5  
                         _OSCILLATOR_Initialize 1DDA                                         _isdigit 1D1A  
                            _EUSART1_Initialize 1B90                        ??_PIN_MANAGER_Initialize 000F  
                                       _isspace 1AC6                                    _sdCardBuffer 00CB  
                                       atoi@neg 001A                                         main@cmd 00A2  
                          end_of_initialization 1C38                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0013  
                                 __Lmediumconst 7B8C                     _EUSART1_OverrunErrorHandler 0046  
                                       fputs@fp 001C                   SDCARD_WriteBlock@sdCardBuffer 0014  
                             __end_of_vfpfcnvrt 0A90                           TMR0_ReadTimer@readVal 0005  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                vfpfcnvrt@convarg 007A  
                                    ??_vfprintf 0042                                       _SPI2_Open 1952  
                                _TMR0_ReadTimer 1DBC                            ??_EUSART1_Initialize 0011  
                         SDCARD_WriteBlock@addr 0010                      myTMR0ISR@bigOleWasteOfTime 000B  
                      _TMR0_SetInterruptHandler 1E70                        __end_of_SDCARD_ReadBlock 18BC  
                                     _TRISBbits 000F93                  SDCARD_PollWriteComplete@status 0010  
                           EUSART1_Write@txData 000F                           ??_EUSART1_is_rx_ready 000F  
                                  _EUSART1_Read 1D6E                                      main@letter 00A1  
                                    main@status 00A0                        _SDCARD_PollWriteComplete 1C46  
                        __end_of_TMR0_ReadTimer 1DDA                    __end_of_INTERRUPT_Initialize 1EB0  
                             _SDCARD_Initialize 128A                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0075                                     vfpfcnvrt@cp 0082  
                                   vfpfcnvrt@fp 0071                                  __end_of___wmul 1DBC  
                            ?_SDCARD_Initialize 0001                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 1E54                                  __end_of_printf 1D6E  
                            _spi2_configuration 7B8D                             start_initialization 1C0C  
                           ??_SDCARD_Initialize 0042                                     __end_of_abs 1B90  
                                   __end_of_pad 1822                                     putch@txData 0010  
                         __end_of_EUSART1_Write 1E40                               main@sdCardAddress 00A5  
                     __end_of_SDCARD_Initialize 1402                                     vfprintf@fmt 0086  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0013  
                                      ??_printf 0042                           SPI2_ExchangeByte@data 000F  
                                   __pbssBIGRAM 00CB                                     __pbssCOMRAM 0042  
                                 __pcstackBANK0 0060                             hexDumpBuffer@j_1176 009A  
                              ___aodiv@dividend 000F                ??_EUSART1_SetFramingErrorHandler 0011  
               ?_EUSART1_SetFramingErrorHandler 000F                           _TMR0_InterruptHandler 004C  
                        _PIN_MANAGER_Initialize 1CEC                                       _dtoa$1704 0060  
                             _SDCARD_WriteBlock 19E6                                       __pintcode 0008  
                                 __pmediumconst 7B8C                         __end_of_SPI2_Initialize 1E66  
                                      ?___aodiv 000F                                        ?___aomod 000F  
                              ___aodiv@quotient 0021                              ?_SDCARD_WriteBlock 0010  
                                   ??_SPI2_Open 000F                SPI2_Open@spi2UniqueConfiguration 0010  
                  ??_INTERRUPT_InterruptManager 000D                                       _myTMR0ISR 1BCE  
                           ??_SDCARD_WriteBlock 0016                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 000F  
                          _EUSART1_ErrorHandler 00A9                                        ?_isspace 000F  
                       _EUSART1_SetErrorHandler 1E8E                            _INTERRUPT_Initialize 1EAC  
                             ??_TMR0_Initialize 0011                                  ___wmul@product 0013  
                                      _LATAbits 000F89         EUSART1_SetErrorHandler@interruptHandler 000F  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
                     __end_of_SDCARD_WriteBlock 1A74                                        i2u227_40 0020  
                                      i2u227_41 001C                                        i2u228_40 002E  
                                      i2u228_41 002A                      ??_TMR0_SetInterruptHandler 0011  
                                      i2u190_40 1C9A                                        i2u190_41 1C96  
                                      i2u191_48 1CA0                                        i2u191_49 1CB4  
                                      _PIR1bits 000F9E                                        i2u188_40 1BF2  
                                      i2u188_41 1BEE                                        _PIR3bits 000FA4  
                                      _RCONbits 000FD0                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 1C7E  
                                      _SSP2STAT 000F6D                                       _vfpfcnvrt 06B0  
                      TMR0_ReadTimer@readValLow 0007                                       _xtoa$1714 0060  
                             ___wmul@multiplier 000F                                      ?_myTMR0ISR 0001  
                             i2_TMR0_WriteTimer 1EA2                               ?_SDCARD_ReadBlock 0010  
                                  _isspace$1764 0013                                      vfpfcnvrt@c 0077  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 0016  
                    ??_SDCARD_PollWriteComplete 0010                             ??i2_TMR0_WriteTimer 000B  
                                      __Hrparam 0000                                      vfprintf@ap 0088  
                                      __Lrparam 0000                                      vfprintf@fp 0084  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 000F  
                            SDCARD_Initialize@i 0094                                      ?_vfpfcnvrt 0071  
                               ___aodiv@divisor 0017                                 ___aodiv@counter 001F  
                     __end_ofi2_TMR0_WriteTimer 1EAC                       ??_EUSART1_SetErrorHandler 0011  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 1E54  
                                      __ptext10 1B90                                        __ptext11 1E7A  
                                      __ptext20 1D46                                        __ptext12 1E84  
                                      __ptext21 1A74                                        __ptext13 1E8E  
                                      __ptext30 16B0                                        __ptext22 06B0  
                                      __ptext14 1952                                        __ptext31 18BC  
                                      __ptext23 0F34                                        __ptext15 1EB0  
                                      __ptext40 1D6E                                        __ptext32 1E98  
                                      __ptext24 0A90                                        __ptext16 19E6  
                                      __ptext33 1E2A                                        __ptext25 1778  
                                      __ptext17 1822                                        __ptext42 1C7E  
                                      __ptext34 1566                                        __ptext26 1B0C  
                                      __ptext18 1C46                                        __ptext43 1EB4  
                                      __ptext35 1AC6                                        __ptext27 1B50  
                                      __ptext19 128A                                        __ptext44 1BCE  
                                      __ptext36 1D1A                                        __ptext28 1402  
                                      __ptext45 1EA2                                        __ptext37 1D96  
                                      __ptext29 1102                                        __ptext46 1DBC  
                                      __ptext38 1E10                                        __ptext47 0000  
                                      __ptext39 1E40                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 000F                               ??_TMR0_WriteTimer 0011  
                              ??_TMR0_ReadTimer 0003            __end_of_TMR0_DefaultInterruptHandler 1EB6  
                  _TMR0_DefaultInterruptHandler 1EB4  EUSART1_SetOverrunErrorHandler@interruptHandler 000F  
                                      isa$xinst 000000                                   _hexDumpBuffer 0D48  
                                      int$flags 0050                                        _vfprintf 1A74  
            __end_of_INTERRUPT_InterruptManager 003E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 008C                     _EUSART1_FramingErrorHandler 0048  
                              ___aomod@dividend 000F                                     ??_myTMR0ISR 000B  
                                    _INTCONbits 000FF2                                        isdigit@c 000F  
                        ??_INTERRUPT_Initialize 000F                        SDCARD_Initialize@verbose 0096  
                                      intlevel2 0000                                        isspace@c 000F  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 1E84  
                _EUSART1_SetOverrunErrorHandler 1E7A                                      _RCSTA1bits 000FAB  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 0094                                        printf@ap 0092  
EUSART1_SetFramingErrorHandler@interruptHandler 000F                                 ___aomod@divisor 0017  
                                   ??_vfpfcnvrt 003E                                 ___aomod@counter 001F  
                            _eusart1RxLastError 004F                                      _SPI2_Close 1EB0  
                               _TMR0_Initialize 1CB6                                    ___aodiv@sign 0020  
                __end_of_PIN_MANAGER_Initialize 1D1A                       hexDumpBuffer@sdCardBuffer 0094  
                                  ___aomod@sign 0020                                    fp__myTMR0ISR 0000  
