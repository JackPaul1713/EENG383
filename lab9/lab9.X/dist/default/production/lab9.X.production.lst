

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 14 01:56:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 09/02/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F25K22 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   111   000000                     
   112 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   113   000000                     
   114 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   115   000000                     
   116                           	psect	idataBANK0
   117   00277E                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for stoa@F1149
   121   00277E  28                 	db	40
   122   00277F  6E                 	db	110
   123   002780  75                 	db	117
   124   002781  6C                 	db	108
   125   002782  6C                 	db	108
   126   002783  29                 	db	41
   127   002784  00                 	db	0
   128                           
   129                           ;initializer for _sampleRate
   130   002785  0640               	dw	1600
   131                           
   132                           ;initializer for _writeIndex
   133   002787  01                 	db	1
   134                           
   135                           	psect	mediumconst
   136   0079A0                     __pmediumconst:
   137                           	callstack 0
   138   0079A0  00                 	db	0
   139   0079A1                     main@F6191:
   140                           	callstack 0
   141   0079A1  80                 	db	128
   142   0079A2  9F                 	db	159
   143   0079A3  BB                 	db	187
   144   0079A4  D5                 	db	213
   145   0079A5  E9                 	db	233
   146   0079A6  F8                 	db	248
   147   0079A7  FF                 	db	255
   148   0079A8  FF                 	db	255
   149   0079A9  F8                 	db	248
   150   0079AA  E9                 	db	233
   151   0079AB  D5                 	db	213
   152   0079AC  BB                 	db	187
   153   0079AD  9F                 	db	159
   154   0079AE  80                 	db	128
   155   0079AF  61                 	db	97
   156   0079B0  45                 	db	69
   157   0079B1  2B                 	db	43
   158   0079B2  17                 	db	23
   159   0079B3  08                 	db	8
   160   0079B4  01                 	db	1
   161   0079B5  01                 	db	1
   162   0079B6  08                 	db	8
   163   0079B7  17                 	db	23
   164   0079B8  2B                 	db	43
   165   0079B9  45                 	db	69
   166   0079BA  61                 	db	97
   167   0079BB                     __end_ofmain@F6191:
   168                           	callstack 0
   169   0079BB                     _spi2_configuration:
   170                           	callstack 0
   171   0079BB  01                 	db	1
   172   0079BC  40                 	db	64
   173   0079BD  01                 	db	1
   174   0079BE  00                 	db	0
   175   0079BF                     __end_of_spi2_configuration:
   176                           	callstack 0
   177   000000                     _ADCON0	set	4034
   178   000000                     _ADRESL	set	4035
   179   000000                     _T1CON	set	4045
   180   000000                     _TMR1L	set	4046
   181   000000                     _TMR1H	set	4047
   182   000000                     _ANSELA	set	3896
   183   000000                     _ANSELB	set	3897
   184   000000                     _ANSELC	set	3898
   185   000000                     _SSP2CON2	set	3947
   186   000000                     _SSP2CON1	set	3948
   187   000000                     _SSP2STAT	set	3949
   188   000000                     _TXREG1	set	4013
   189   000000                     _RCREG1	set	4014
   190   000000                     _SPBRG1	set	4015
   191   000000                     _TXSTA1	set	4012
   192   000000                     _OSCTUNE	set	3995
   193   000000                     _OSCCON2	set	4050
   194   000000                     _OSCCON	set	4051
   195   000000                     _TMR0L	set	4054
   196   000000                     _TMR0H	set	4055
   197   000000                     _T0CONbits	set	4053
   198   000000                     _TMR1	set	4046
   199   000000                     _LATCbits	set	3979
   200   000000                     _LATBbits	set	3978
   201   000000                     _ADCON0bits	set	4034
   202   000000                     _T1GCONbits	set	4044
   203   000000                     _T1CONbits	set	4045
   204   000000                     _TRISB	set	3987
   205   000000                     _SSP2CON1bits	set	3948
   206   000000                     _RCSTA1bits	set	4011
   207   000000                     _TXSTA1bits	set	4012
   208   000000                     _T0CON	set	4053
   209   000000                     _PLLRDY	set	32407
   210   000000                     _INTCON2bits	set	4081
   211   000000                     _INTCONbits	set	4082
   212   000000                     _PIR1bits	set	3998
   213   000000                     _RCSTA1	set	4011
   214   000000                     _BAUDCON1	set	4024
   215   000000                     _ADCON2	set	4032
   216   000000                     _ADCON1	set	4033
   217   000000                     _T1GCON	set	4044
   218   000000                     _RCONbits	set	4048
   219   000000                     _SPBRGH1	set	4016
   220   000000                     _PIR3bits	set	4004
   221   000000                     _LATA	set	3977
   222   000000                     _SSP2BUF	set	3951
   223   000000                     _TRISBbits	set	3987
   224   000000                     _SSP2ADD	set	3950
   225   000000                     _TRISC	set	3988
   226   000000                     _TRISA	set	3986
   227   000000                     _LATC	set	3979
   228   000000                     _LATB	set	3978
   229   000000                     _WPUB	set	3937
   230   000000                     _ADRESH	set	4036
   231   0079BF                     STR_76:
   232   0079BF  4C                 	db	76	;'L'
   233   0079C0  6F                 	db	111	;'o'
   234   0079C1  67                 	db	103	;'g'
   235   0079C2  20                 	db	32
   236   0079C3  66                 	db	102	;'f'
   237   0079C4  69                 	db	105	;'i'
   238   0079C5  6C                 	db	108	;'l'
   239   0079C6  65                 	db	101	;'e'
   240   0079C7  20                 	db	32
   241   0079C8  6E                 	db	110	;'n'
   242   0079C9  61                 	db	97	;'a'
   243   0079CA  6D                 	db	109	;'m'
   244   0079CB  65                 	db	101	;'e'
   245   0079CC  3A                 	db	58	;':'
   246   0079CD  20                 	db	32
   247   0079CE  20                 	db	32
   248   0079CF  42                 	db	66	;'B'
   249   0079D0  72                 	db	114	;'r'
   250   0079D1  6F                 	db	111	;'o'
   251   0079D2  77                 	db	119	;'w'
   252   0079D3  73                 	db	115	;'s'
   253   0079D4  65                 	db	101	;'e'
   254   0079D5  20                 	db	32
   255   0079D6  61                 	db	97	;'a'
   256   0079D7  6E                 	db	110	;'n'
   257   0079D8  64                 	db	100	;'d'
   258   0079D9  20                 	db	32
   259   0079DA  70                 	db	112	;'p'
   260   0079DB  72                 	db	114	;'r'
   261   0079DC  6F                 	db	111	;'o'
   262   0079DD  76                 	db	118	;'v'
   263   0079DE  69                 	db	105	;'i'
   264   0079DF  64                 	db	100	;'d'
   265   0079E0  65                 	db	101	;'e'
   266   0079E1  20                 	db	32
   267   0079E2  61                 	db	97	;'a'
   268   0079E3  20                 	db	32
   269   0079E4  2E                 	db	46
   270   0079E5  63                 	db	99	;'c'
   271   0079E6  73                 	db	115	;'s'
   272   0079E7  76                 	db	118	;'v'
   273   0079E8  20                 	db	32
   274   0079E9  65                 	db	101	;'e'
   275   0079EA  78                 	db	120	;'x'
   276   0079EB  74                 	db	116	;'t'
   277   0079EC  65                 	db	101	;'e'
   278   0079ED  6E                 	db	110	;'n'
   279   0079EE  73                 	db	115	;'s'
   280   0079EF  69                 	db	105	;'i'
   281   0079F0  6F                 	db	111	;'o'
   282   0079F1  6E                 	db	110	;'n'
   283   0079F2  20                 	db	32
   284   0079F3  74                 	db	116	;'t'
   285   0079F4  6F                 	db	111	;'o'
   286   0079F5  20                 	db	32
   287   0079F6  79                 	db	121	;'y'
   288   0079F7  6F                 	db	111	;'o'
   289   0079F8  75                 	db	117	;'u'
   290   0079F9  72                 	db	114	;'r'
   291   0079FA  20                 	db	32
   292   0079FB  66                 	db	102	;'f'
   293   0079FC  69                 	db	105	;'i'
   294   0079FD  6C                 	db	108	;'l'
   295   0079FE  65                 	db	101	;'e'
   296   0079FF  20                 	db	32
   297   007A00  6E                 	db	110	;'n'
   298   007A01  61                 	db	97	;'a'
   299   007A02  6D                 	db	109	;'m'
   300   007A03  65                 	db	101	;'e'
   301   007A04  0A                 	db	10
   302   007A05  0D                 	db	13
   303   007A06  00                 	db	0
   304   007A07                     STR_70:
   305   007A07  54                 	db	84	;'T'
   306   007A08  6F                 	db	111	;'o'
   307   007A09  20                 	db	32
   308   007A0A  73                 	db	115	;'s'
   309   007A0B  70                 	db	112	;'p'
   310   007A0C  6F                 	db	111	;'o'
   311   007A0D  6F                 	db	111	;'o'
   312   007A0E  6C                 	db	108	;'l'
   313   007A0F  20                 	db	32
   314   007A10  74                 	db	116	;'t'
   315   007A11  65                 	db	101	;'e'
   316   007A12  72                 	db	114	;'r'
   317   007A13  6D                 	db	109	;'m'
   318   007A14  69                 	db	105	;'i'
   319   007A15  6E                 	db	110	;'n'
   320   007A16  61                 	db	97	;'a'
   321   007A17  6C                 	db	108	;'l'
   322   007A18  20                 	db	32
   323   007A19  63                 	db	99	;'c'
   324   007A1A  6F                 	db	111	;'o'
   325   007A1B  6E                 	db	110	;'n'
   326   007A1C  74                 	db	116	;'t'
   327   007A1D  65                 	db	101	;'e'
   328   007A1E  6E                 	db	110	;'n'
   329   007A1F  74                 	db	116	;'t'
   330   007A20  73                 	db	115	;'s'
   331   007A21  20                 	db	32
   332   007A22  69                 	db	105	;'i'
   333   007A23  6E                 	db	110	;'n'
   334   007A24  74                 	db	116	;'t'
   335   007A25  6F                 	db	111	;'o'
   336   007A26  20                 	db	32
   337   007A27  61                 	db	97	;'a'
   338   007A28  20                 	db	32
   339   007A29  66                 	db	102	;'f'
   340   007A2A  69                 	db	105	;'i'
   341   007A2B  6C                 	db	108	;'l'
   342   007A2C  65                 	db	101	;'e'
   343   007A2D  20                 	db	32
   344   007A2E  66                 	db	102	;'f'
   345   007A2F  6F                 	db	111	;'o'
   346   007A30  6C                 	db	108	;'l'
   347   007A31  6C                 	db	108	;'l'
   348   007A32  6F                 	db	111	;'o'
   349   007A33  77                 	db	119	;'w'
   350   007A34  20                 	db	32
   351   007A35  74                 	db	116	;'t'
   352   007A36  68                 	db	104	;'h'
   353   007A37  65                 	db	101	;'e'
   354   007A38  73                 	db	115	;'s'
   355   007A39  65                 	db	101	;'e'
   356   007A3A  20                 	db	32
   357   007A3B  69                 	db	105	;'i'
   358   007A3C  6E                 	db	110	;'n'
   359   007A3D  73                 	db	115	;'s'
   360   007A3E  74                 	db	116	;'t'
   361   007A3F  72                 	db	114	;'r'
   362   007A40  75                 	db	117	;'u'
   363   007A41  63                 	db	99	;'c'
   364   007A42  74                 	db	116	;'t'
   365   007A43  69                 	db	105	;'i'
   366   007A44  6F                 	db	111	;'o'
   367   007A45  6E                 	db	110	;'n'
   368   007A46  73                 	db	115	;'s'
   369   007A47  3A                 	db	58	;':'
   370   007A48  0A                 	db	10
   371   007A49  0D                 	db	13
   372   007A4A  00                 	db	0
   373   007A4B                     STR_72:
   374   007A4B  52                 	db	82	;'R'
   375   007A4C  69                 	db	105	;'i'
   376   007A4D  67                 	db	103	;'g'
   377   007A4E  68                 	db	104	;'h'
   378   007A4F  74                 	db	116	;'t'
   379   007A50  20                 	db	32
   380   007A51  6D                 	db	109	;'m'
   381   007A52  6F                 	db	111	;'o'
   382   007A53  75                 	db	117	;'u'
   383   007A54  73                 	db	115	;'s'
   384   007A55  65                 	db	101	;'e'
   385   007A56  20                 	db	32
   386   007A57  63                 	db	99	;'c'
   387   007A58  6C                 	db	108	;'l'
   388   007A59  69                 	db	105	;'i'
   389   007A5A  63                 	db	99	;'c'
   390   007A5B  6B                 	db	107	;'k'
   391   007A5C  20                 	db	32
   392   007A5D  6F                 	db	111	;'o'
   393   007A5E  6E                 	db	110	;'n'
   394   007A5F  20                 	db	32
   395   007A60  74                 	db	116	;'t'
   396   007A61  68                 	db	104	;'h'
   397   007A62  65                 	db	101	;'e'
   398   007A63  20                 	db	32
   399   007A64  75                 	db	117	;'u'
   400   007A65  70                 	db	112	;'p'
   401   007A66  70                 	db	112	;'p'
   402   007A67  65                 	db	101	;'e'
   403   007A68  72                 	db	114	;'r'
   404   007A69  20                 	db	32
   405   007A6A  6C                 	db	108	;'l'
   406   007A6B  65                 	db	101	;'e'
   407   007A6C  66                 	db	102	;'f'
   408   007A6D  74                 	db	116	;'t'
   409   007A6E  20                 	db	32
   410   007A6F  6F                 	db	111	;'o'
   411   007A70  66                 	db	102	;'f'
   412   007A71  20                 	db	32
   413   007A72  74                 	db	116	;'t'
   414   007A73  68                 	db	104	;'h'
   415   007A74  65                 	db	101	;'e'
   416   007A75  20                 	db	32
   417   007A76  50                 	db	80	;'P'
   418   007A77  75                 	db	117	;'u'
   419   007A78  54                 	db	84	;'T'
   420   007A79  54                 	db	84	;'T'
   421   007A7A  59                 	db	89	;'Y'
   422   007A7B  20                 	db	32
   423   007A7C  77                 	db	119	;'w'
   424   007A7D  69                 	db	105	;'i'
   425   007A7E  6E                 	db	110	;'n'
   426   007A7F  64                 	db	100	;'d'
   427   007A80  6F                 	db	111	;'o'
   428   007A81  77                 	db	119	;'w'
   429   007A82  0A                 	db	10
   430   007A83  0D                 	db	13
   431   007A84  00                 	db	0
   432   007A85                     STR_69:
   433   007A85  59                 	db	89	;'Y'
   434   007A86  6F                 	db	111	;'o'
   435   007A87  75                 	db	117	;'u'
   436   007A88  20                 	db	32
   437   007A89  6D                 	db	109	;'m'
   438   007A8A  61                 	db	97	;'a'
   439   007A8B  79                 	db	121	;'y'
   440   007A8C  20                 	db	32
   441   007A8D  74                 	db	116	;'t'
   442   007A8E  65                 	db	101	;'e'
   443   007A8F  72                 	db	114	;'r'
   444   007A90  6D                 	db	109	;'m'
   445   007A91  69                 	db	105	;'i'
   446   007A92  6E                 	db	110	;'n'
   447   007A93  61                 	db	97	;'a'
   448   007A94  74                 	db	116	;'t'
   449   007A95  65                 	db	101	;'e'
   450   007A96  20                 	db	32
   451   007A97  73                 	db	115	;'s'
   452   007A98  70                 	db	112	;'p'
   453   007A99  6F                 	db	111	;'o'
   454   007A9A  6F                 	db	111	;'o'
   455   007A9B  6C                 	db	108	;'l'
   456   007A9C  69                 	db	105	;'i'
   457   007A9D  6E                 	db	110	;'n'
   458   007A9E  67                 	db	103	;'g'
   459   007A9F  20                 	db	32
   460   007AA0  61                 	db	97	;'a'
   461   007AA1  74                 	db	116	;'t'
   462   007AA2  20                 	db	32
   463   007AA3  61                 	db	97	;'a'
   464   007AA4  6E                 	db	110	;'n'
   465   007AA5  79                 	db	121	;'y'
   466   007AA6  74                 	db	116	;'t'
   467   007AA7  69                 	db	105	;'i'
   468   007AA8  6D                 	db	109	;'m'
   469   007AA9  65                 	db	101	;'e'
   470   007AAA  20                 	db	32
   471   007AAB  77                 	db	119	;'w'
   472   007AAC  69                 	db	105	;'i'
   473   007AAD  74                 	db	116	;'t'
   474   007AAE  68                 	db	104	;'h'
   475   007AAF  20                 	db	32
   476   007AB0  61                 	db	97	;'a'
   477   007AB1  20                 	db	32
   478   007AB2  6B                 	db	107	;'k'
   479   007AB3  65                 	db	101	;'e'
   480   007AB4  79                 	db	121	;'y'
   481   007AB5  70                 	db	112	;'p'
   482   007AB6  72                 	db	114	;'r'
   483   007AB7  65                 	db	101	;'e'
   484   007AB8  73                 	db	115	;'s'
   485   007AB9  73                 	db	115	;'s'
   486   007ABA  2E                 	db	46
   487   007ABB  0A                 	db	10
   488   007ABC  0D                 	db	13
   489   007ABD  00                 	db	0
   490   007ABE                     STR_6:
   491   007ABE  0D                 	db	13
   492   007ABF  0A                 	db	10
   493   007AC0  2D                 	db	45
   494   007AC1  2D                 	db	45
   495   007AC2  2D                 	db	45
   496   007AC3  2D                 	db	45
   497   007AC4  2D                 	db	45
   498   007AC5  2D                 	db	45
   499   007AC6  2D                 	db	45
   500   007AC7  2D                 	db	45
   501   007AC8  2D                 	db	45
   502   007AC9  2D                 	db	45
   503   007ACA  2D                 	db	45
   504   007ACB  2D                 	db	45
   505   007ACC  2D                 	db	45
   506   007ACD  2D                 	db	45
   507   007ACE  2D                 	db	45
   508   007ACF  2D                 	db	45
   509   007AD0  2D                 	db	45
   510   007AD1  2D                 	db	45
   511   007AD2  2D                 	db	45
   512   007AD3  2D                 	db	45
   513   007AD4  2D                 	db	45
   514   007AD5  2D                 	db	45
   515   007AD6  2D                 	db	45
   516   007AD7  2D                 	db	45
   517   007AD8  2D                 	db	45
   518   007AD9  2D                 	db	45
   519   007ADA  2D                 	db	45
   520   007ADB  2D                 	db	45
   521   007ADC  2D                 	db	45
   522   007ADD  2D                 	db	45
   523   007ADE  2D                 	db	45
   524   007ADF  2D                 	db	45
   525   007AE0  2D                 	db	45
   526   007AE1  2D                 	db	45
   527   007AE2  2D                 	db	45
   528   007AE3  2D                 	db	45
   529   007AE4  2D                 	db	45
   530   007AE5  2D                 	db	45
   531   007AE6  2D                 	db	45
   532   007AE7  2D                 	db	45
   533   007AE8  2D                 	db	45
   534   007AE9  2D                 	db	45
   535   007AEA  2D                 	db	45
   536   007AEB  2D                 	db	45
   537   007AEC  2D                 	db	45
   538   007AED  2D                 	db	45
   539   007AEE  2D                 	db	45
   540   007AEF  2D                 	db	45
   541   007AF0  2D                 	db	45
   542   007AF1  0D                 	db	13
   543   007AF2  0A                 	db	10
   544   007AF3  00                 	db	0
   545   007AF4                     STR_11:
   546   007AF4  2D                 	db	45
   547   007AF5  2D                 	db	45
   548   007AF6  2D                 	db	45
   549   007AF7  2D                 	db	45
   550   007AF8  2D                 	db	45
   551   007AF9  2D                 	db	45
   552   007AFA  2D                 	db	45
   553   007AFB  2D                 	db	45
   554   007AFC  2D                 	db	45
   555   007AFD  2D                 	db	45
   556   007AFE  2D                 	db	45
   557   007AFF  2D                 	db	45
   558   007B00  2D                 	db	45
   559   007B01  2D                 	db	45
   560   007B02  2D                 	db	45
   561   007B03  2D                 	db	45
   562   007B04  2D                 	db	45
   563   007B05  2D                 	db	45
   564   007B06  2D                 	db	45
   565   007B07  2D                 	db	45
   566   007B08  2D                 	db	45
   567   007B09  2D                 	db	45
   568   007B0A  2D                 	db	45
   569   007B0B  2D                 	db	45
   570   007B0C  2D                 	db	45
   571   007B0D  2D                 	db	45
   572   007B0E  2D                 	db	45
   573   007B0F  2D                 	db	45
   574   007B10  2D                 	db	45
   575   007B11  2D                 	db	45
   576   007B12  2D                 	db	45
   577   007B13  2D                 	db	45
   578   007B14  2D                 	db	45
   579   007B15  2D                 	db	45
   580   007B16  2D                 	db	45
   581   007B17  2D                 	db	45
   582   007B18  2D                 	db	45
   583   007B19  2D                 	db	45
   584   007B1A  2D                 	db	45
   585   007B1B  2D                 	db	45
   586   007B1C  2D                 	db	45
   587   007B1D  2D                 	db	45
   588   007B1E  2D                 	db	45
   589   007B1F  2D                 	db	45
   590   007B20  2D                 	db	45
   591   007B21  2D                 	db	45
   592   007B22  2D                 	db	45
   593   007B23  2D                 	db	45
   594   007B24  2D                 	db	45
   595   007B25  0A                 	db	10
   596   007B26  0D                 	db	13
   597   007B27  00                 	db	0
   598   007B28                     STR_17:
   599   007B28  31                 	db	49	;'1'
   600   007B29  3A                 	db	58	;':'
   601   007B2A  20                 	db	32
   602   007B2B  77                 	db	119	;'w'
   603   007B2C  72                 	db	114	;'r'
   604   007B2D  69                 	db	105	;'i'
   605   007B2E  74                 	db	116	;'t'
   606   007B2F  65                 	db	101	;'e'
   607   007B30  20                 	db	32
   608   007B31  70                 	db	112	;'p'
   609   007B32  65                 	db	101	;'e'
   610   007B33  72                 	db	114	;'r'
   611   007B34  66                 	db	102	;'f'
   612   007B35  65                 	db	101	;'e'
   613   007B36  63                 	db	99	;'c'
   614   007B37  74                 	db	116	;'t'
   615   007B38  20                 	db	32
   616   007B39  32                 	db	50	;'2'
   617   007B3A  36                 	db	54	;'6'
   618   007B3B  20                 	db	32
   619   007B3C  76                 	db	118	;'v'
   620   007B3D  61                 	db	97	;'a'
   621   007B3E  6C                 	db	108	;'l'
   622   007B3F  75                 	db	117	;'u'
   623   007B40  65                 	db	101	;'e'
   624   007B41  20                 	db	32
   625   007B42  73                 	db	115	;'s'
   626   007B43  69                 	db	105	;'i'
   627   007B44  6E                 	db	110	;'n'
   628   007B45  65                 	db	101	;'e'
   629   007B46  20                 	db	32
   630   007B47  77                 	db	119	;'w'
   631   007B48  61                 	db	97	;'a'
   632   007B49  76                 	db	118	;'v'
   633   007B4A  65                 	db	101	;'e'
   634   007B4B  20                 	db	32
   635   007B4C  74                 	db	116	;'t'
   636   007B4D  6F                 	db	111	;'o'
   637   007B4E  20                 	db	32
   638   007B4F  31                 	db	49	;'1'
   639   007B50  32                 	db	50	;'2'
   640   007B51  38                 	db	56	;'8'
   641   007B52  20                 	db	32
   642   007B53  62                 	db	98	;'b'
   643   007B54  6C                 	db	108	;'l'
   644   007B55  6F                 	db	111	;'o'
   645   007B56  63                 	db	99	;'c'
   646   007B57  6B                 	db	107	;'k'
   647   007B58  73                 	db	115	;'s'
   648   007B59  0A                 	db	10
   649   007B5A  0D                 	db	13
   650   007B5B  00                 	db	0
   651   007B5C                     STR_19:
   652   007B5C  2B                 	db	43
   653   007B5D  2F                 	db	47
   654   007B5E  2D                 	db	45
   655   007B5F  3A                 	db	58	;':'
   656   007B60  20                 	db	32
   657   007B61  49                 	db	73	;'I'
   658   007B62  6E                 	db	110	;'n'
   659   007B63  63                 	db	99	;'c'
   660   007B64  72                 	db	114	;'r'
   661   007B65  65                 	db	101	;'e'
   662   007B66  61                 	db	97	;'a'
   663   007B67  73                 	db	115	;'s'
   664   007B68  65                 	db	101	;'e'
   665   007B69  2F                 	db	47
   666   007B6A  44                 	db	68	;'D'
   667   007B6B  65                 	db	101	;'e'
   668   007B6C  63                 	db	99	;'c'
   669   007B6D  72                 	db	114	;'r'
   670   007B6E  65                 	db	101	;'e'
   671   007B6F  61                 	db	97	;'a'
   672   007B70  73                 	db	115	;'s'
   673   007B71  65                 	db	101	;'e'
   674   007B72  20                 	db	32
   675   007B73  74                 	db	116	;'t'
   676   007B74  68                 	db	104	;'h'
   677   007B75  65                 	db	101	;'e'
   678   007B76  20                 	db	32
   679   007B77  73                 	db	115	;'s'
   680   007B78  61                 	db	97	;'a'
   681   007B79  6D                 	db	109	;'m'
   682   007B7A  70                 	db	112	;'p'
   683   007B7B  6C                 	db	108	;'l'
   684   007B7C  65                 	db	101	;'e'
   685   007B7D  20                 	db	32
   686   007B7E  72                 	db	114	;'r'
   687   007B7F  61                 	db	97	;'a'
   688   007B80  74                 	db	116	;'t'
   689   007B81  65                 	db	101	;'e'
   690   007B82  20                 	db	32
   691   007B83  62                 	db	98	;'b'
   692   007B84  79                 	db	121	;'y'
   693   007B85  20                 	db	32
   694   007B86  31                 	db	49	;'1'
   695   007B87  30                 	db	48	;'0'
   696   007B88  20                 	db	32
   697   007B89  75                 	db	117	;'u'
   698   007B8A  73                 	db	115	;'s'
   699   007B8B  0A                 	db	10
   700   007B8C  0D                 	db	13
   701   007B8D  00                 	db	0
   702   007B8E                     STR_75:
   703   007B8E  53                 	db	83	;'S'
   704   007B8F  65                 	db	101	;'e'
   705   007B90  6C                 	db	108	;'l'
   706   007B91  65                 	db	101	;'e'
   707   007B92  63                 	db	99	;'c'
   708   007B93  74                 	db	116	;'t'
   709   007B94  3A                 	db	58	;':'
   710   007B95  20                 	db	32
   711   007B96  20                 	db	32
   712   007B97  20                 	db	32
   713   007B98  20                 	db	32
   714   007B99  20                 	db	32
   715   007B9A  53                 	db	83	;'S'
   716   007B9B  65                 	db	101	;'e'
   717   007B9C  73                 	db	115	;'s'
   718   007B9D  73                 	db	115	;'s'
   719   007B9E  69                 	db	105	;'i'
   720   007B9F  6F                 	db	111	;'o'
   721   007BA0  6E                 	db	110	;'n'
   722   007BA1  20                 	db	32
   723   007BA2  6C                 	db	108	;'l'
   724   007BA3  6F                 	db	111	;'o'
   725   007BA4  67                 	db	103	;'g'
   726   007BA5  67                 	db	103	;'g'
   727   007BA6  69                 	db	105	;'i'
   728   007BA7  6E                 	db	110	;'n'
   729   007BA8  67                 	db	103	;'g'
   730   007BA9  3A                 	db	58	;':'
   731   007BAA  20                 	db	32
   732   007BAB  41                 	db	65	;'A'
   733   007BAC  6C                 	db	108	;'l'
   734   007BAD  6C                 	db	108	;'l'
   735   007BAE  20                 	db	32
   736   007BAF  73                 	db	115	;'s'
   737   007BB0  65                 	db	101	;'e'
   738   007BB1  73                 	db	115	;'s'
   739   007BB2  73                 	db	115	;'s'
   740   007BB3  69                 	db	105	;'i'
   741   007BB4  6F                 	db	111	;'o'
   742   007BB5  6E                 	db	110	;'n'
   743   007BB6  20                 	db	32
   744   007BB7  6F                 	db	111	;'o'
   745   007BB8  75                 	db	117	;'u'
   746   007BB9  74                 	db	116	;'t'
   747   007BBA  70                 	db	112	;'p'
   748   007BBB  75                 	db	117	;'u'
   749   007BBC  74                 	db	116	;'t'
   750   007BBD  0A                 	db	10
   751   007BBE  0D                 	db	13
   752   007BBF  00                 	db	0
   753   007BC0                     STR_82:
   754   007BC0  54                 	db	84	;'T'
   755   007BC1  6F                 	db	111	;'o'
   756   007BC2  20                 	db	32
   757   007BC3  63                 	db	99	;'c'
   758   007BC4  6C                 	db	108	;'l'
   759   007BC5  6F                 	db	111	;'o'
   760   007BC6  73                 	db	115	;'s'
   761   007BC7  65                 	db	101	;'e'
   762   007BC8  20                 	db	32
   763   007BC9  74                 	db	116	;'t'
   764   007BCA  68                 	db	104	;'h'
   765   007BCB  65                 	db	101	;'e'
   766   007BCC  20                 	db	32
   767   007BCD  66                 	db	102	;'f'
   768   007BCE  69                 	db	105	;'i'
   769   007BCF  6C                 	db	108	;'l'
   770   007BD0  65                 	db	101	;'e'
   771   007BD1  20                 	db	32
   772   007BD2  66                 	db	102	;'f'
   773   007BD3  6F                 	db	111	;'o'
   774   007BD4  6C                 	db	108	;'l'
   775   007BD5  6C                 	db	108	;'l'
   776   007BD6  6F                 	db	111	;'o'
   777   007BD7  77                 	db	119	;'w'
   778   007BD8  20                 	db	32
   779   007BD9  74                 	db	116	;'t'
   780   007BDA  68                 	db	104	;'h'
   781   007BDB  65                 	db	101	;'e'
   782   007BDC  73                 	db	115	;'s'
   783   007BDD  65                 	db	101	;'e'
   784   007BDE  20                 	db	32
   785   007BDF  69                 	db	105	;'i'
   786   007BE0  6E                 	db	110	;'n'
   787   007BE1  73                 	db	115	;'s'
   788   007BE2  74                 	db	116	;'t'
   789   007BE3  72                 	db	114	;'r'
   790   007BE4  75                 	db	117	;'u'
   791   007BE5  63                 	db	99	;'c'
   792   007BE6  74                 	db	116	;'t'
   793   007BE7  69                 	db	105	;'i'
   794   007BE8  6F                 	db	111	;'o'
   795   007BE9  6E                 	db	110	;'n'
   796   007BEA  73                 	db	115	;'s'
   797   007BEB  3A                 	db	58	;':'
   798   007BEC  0A                 	db	10
   799   007BED  0D                 	db	13
   800   007BEE  00                 	db	0
   801   007BEF                     STR_15:
   802   007BEF  72                 	db	114	;'r'
   803   007BF0  3A                 	db	58	;':'
   804   007BF1  20                 	db	32
   805   007BF2  72                 	db	114	;'r'
   806   007BF3  65                 	db	101	;'e'
   807   007BF4  61                 	db	97	;'a'
   808   007BF5  64                 	db	100	;'d'
   809   007BF6  20                 	db	32
   810   007BF7  61                 	db	97	;'a'
   811   007BF8  20                 	db	32
   812   007BF9  62                 	db	98	;'b'
   813   007BFA  6C                 	db	108	;'l'
   814   007BFB  6F                 	db	111	;'o'
   815   007BFC  63                 	db	99	;'c'
   816   007BFD  6B                 	db	107	;'k'
   817   007BFE  20                 	db	32
   818   007BFF  6F                 	db	111	;'o'
   819   007C00  66                 	db	102	;'f'
   820   007C01  20                 	db	32
   821   007C02  35                 	db	53	;'5'
   822   007C03  31                 	db	49	;'1'
   823   007C04  32                 	db	50	;'2'
   824   007C05  20                 	db	32
   825   007C06  62                 	db	98	;'b'
   826   007C07  79                 	db	121	;'y'
   827   007C08  74                 	db	116	;'t'
   828   007C09  65                 	db	101	;'e'
   829   007C0A  73                 	db	115	;'s'
   830   007C0B  20                 	db	32
   831   007C0C  66                 	db	102	;'f'
   832   007C0D  72                 	db	114	;'r'
   833   007C0E  6F                 	db	111	;'o'
   834   007C0F  6D                 	db	109	;'m'
   835   007C10  20                 	db	32
   836   007C11  53                 	db	83	;'S'
   837   007C12  44                 	db	68	;'D'
   838   007C13  20                 	db	32
   839   007C14  63                 	db	99	;'c'
   840   007C15  61                 	db	97	;'a'
   841   007C16  72                 	db	114	;'r'
   842   007C17  64                 	db	100	;'d'
   843   007C18  0A                 	db	10
   844   007C19  0D                 	db	13
   845   007C1A  00                 	db	0
   846   007C1B                     STR_20:
   847   007C1B  57                 	db	87	;'W'
   848   007C1C  3A                 	db	58	;':'
   849   007C1D  20                 	db	32
   850   007C1E  57                 	db	87	;'W'
   851   007C1F  72                 	db	114	;'r'
   852   007C20  69                 	db	105	;'i'
   853   007C21  74                 	db	116	;'t'
   854   007C22  65                 	db	101	;'e'
   855   007C23  20                 	db	32
   856   007C24  6D                 	db	109	;'m'
   857   007C25  69                 	db	105	;'i'
   858   007C26  63                 	db	99	;'c'
   859   007C27  72                 	db	114	;'r'
   860   007C28  6F                 	db	111	;'o'
   861   007C29  70                 	db	112	;'p'
   862   007C2A  68                 	db	104	;'h'
   863   007C2B  6F                 	db	111	;'o'
   864   007C2C  6E                 	db	110	;'n'
   865   007C2D  65                 	db	101	;'e'
   866   007C2E  20                 	db	32
   867   007C2F  3D                 	db	61	;'='
   868   007C30  3E                 	db	62	;'>'
   869   007C31  20                 	db	32
   870   007C32  53                 	db	83	;'S'
   871   007C33  44                 	db	68	;'D'
   872   007C34  20                 	db	32
   873   007C35  63                 	db	99	;'c'
   874   007C36  61                 	db	97	;'a'
   875   007C37  72                 	db	114	;'r'
   876   007C38  64                 	db	100	;'d'
   877   007C39  20                 	db	32
   878   007C3A  61                 	db	97	;'a'
   879   007C3B  74                 	db	116	;'t'
   880   007C3C  20                 	db	32
   881   007C3D  31                 	db	49	;'1'
   882   007C3E  36                 	db	54	;'6'
   883   007C3F  30                 	db	48	;'0'
   884   007C40  30                 	db	48	;'0'
   885   007C41  20                 	db	32
   886   007C42  75                 	db	117	;'u'
   887   007C43  73                 	db	115	;'s'
   888   007C44  0A                 	db	10
   889   007C45  0D                 	db	13
   890   007C46  00                 	db	0
   891   007C47                     STR_46:
   892   007C47  57                 	db	87	;'W'
   893   007C48  72                 	db	114	;'r'
   894   007C49  69                 	db	105	;'i'
   895   007C4A  74                 	db	116	;'t'
   896   007C4B  65                 	db	101	;'e'
   897   007C4C  20                 	db	32
   898   007C4D  62                 	db	98	;'b'
   899   007C4E  6C                 	db	108	;'l'
   900   007C4F  6F                 	db	111	;'o'
   901   007C50  63                 	db	99	;'c'
   902   007C51  6B                 	db	107	;'k'
   903   007C52  20                 	db	32
   904   007C53  6F                 	db	111	;'o'
   905   007C54  66                 	db	102	;'f'
   906   007C55  20                 	db	32
   907   007C56  64                 	db	100	;'d'
   908   007C57  65                 	db	101	;'e'
   909   007C58  63                 	db	99	;'c'
   910   007C59  72                 	db	114	;'r'
   911   007C5A  65                 	db	101	;'e'
   912   007C5B  6D                 	db	109	;'m'
   913   007C5C  65                 	db	101	;'e'
   914   007C5D  6E                 	db	110	;'n'
   915   007C5E  74                 	db	116	;'t'
   916   007C5F  65                 	db	101	;'e'
   917   007C60  64                 	db	100	;'d'
   918   007C61  20                 	db	32
   919   007C62  38                 	db	56	;'8'
   920   007C63  2D                 	db	45
   921   007C64  62                 	db	98	;'b'
   922   007C65  69                 	db	105	;'i'
   923   007C66  74                 	db	116	;'t'
   924   007C67  20                 	db	32
   925   007C68  76                 	db	118	;'v'
   926   007C69  61                 	db	97	;'a'
   927   007C6A  6C                 	db	108	;'l'
   928   007C6B  75                 	db	117	;'u'
   929   007C6C  65                 	db	101	;'e'
   930   007C6D  73                 	db	115	;'s'
   931   007C6E  3A                 	db	58	;':'
   932   007C6F  0D                 	db	13
   933   007C70  0A                 	db	10
   934   007C71  00                 	db	0
   935   007C72                     STR_4:
   936   007C72  4E                 	db	78	;'N'
   937   007C73  6F                 	db	111	;'o'
   938   007C74  20                 	db	32
   939   007C75  63                 	db	99	;'c'
   940   007C76  6F                 	db	111	;'o'
   941   007C77  6E                 	db	110	;'n'
   942   007C78  66                 	db	102	;'f'
   943   007C79  69                 	db	105	;'i'
   944   007C7A  67                 	db	103	;'g'
   945   007C7B  75                 	db	117	;'u'
   946   007C7C  72                 	db	114	;'r'
   947   007C7D  61                 	db	97	;'a'
   948   007C7E  74                 	db	116	;'t'
   949   007C7F  69                 	db	105	;'i'
   950   007C80  6F                 	db	111	;'o'
   951   007C81  6E                 	db	110	;'n'
   952   007C82  20                 	db	32
   953   007C83  6F                 	db	111	;'o'
   954   007C84  66                 	db	102	;'f'
   955   007C85  20                 	db	32
   956   007C86  64                 	db	100	;'d'
   957   007C87  65                 	db	101	;'e'
   958   007C88  76                 	db	118	;'v'
   959   007C89  65                 	db	101	;'e'
   960   007C8A  6C                 	db	108	;'l'
   961   007C8B  6F                 	db	111	;'o'
   962   007C8C  70                 	db	112	;'p'
   963   007C8D  6D                 	db	109	;'m'
   964   007C8E  65                 	db	101	;'e'
   965   007C8F  6E                 	db	110	;'n'
   966   007C90  74                 	db	116	;'t'
   967   007C91  20                 	db	32
   968   007C92  62                 	db	98	;'b'
   969   007C93  6F                 	db	111	;'o'
   970   007C94  61                 	db	97	;'a'
   971   007C95  72                 	db	114	;'r'
   972   007C96  64                 	db	100	;'d'
   973   007C97  0D                 	db	13
   974   007C98  0A                 	db	10
   975   007C99  3E                 	db	62	;'>'
   976   007C9A  20                 	db	32
   977   007C9B  00                 	db	0
   978   007C9C                     STR_81:
   979   007C9C  0A                 	db	10
   980   007C9D  0D                 	db	13
   981   007C9E  53                 	db	83	;'S'
   982   007C9F  70                 	db	112	;'p'
   983   007CA0  6F                 	db	111	;'o'
   984   007CA1  6F                 	db	111	;'o'
   985   007CA2  6C                 	db	108	;'l'
   986   007CA3  65                 	db	101	;'e'
   987   007CA4  64                 	db	100	;'d'
   988   007CA5  20                 	db	32
   989   007CA6  25                 	db	37
   990   007CA7  75                 	db	117	;'u'
   991   007CA8  20                 	db	32
   992   007CA9  6F                 	db	111	;'o'
   993   007CAA  75                 	db	117	;'u'
   994   007CAB  74                 	db	116	;'t'
   995   007CAC  20                 	db	32
   996   007CAD  6F                 	db	111	;'o'
   997   007CAE  66                 	db	102	;'f'
   998   007CAF  20                 	db	32
   999   007CB0  74                 	db	116	;'t'
  1000   007CB1  68                 	db	104	;'h'
  1001   007CB2  65                 	db	101	;'e'
  1002   007CB3  20                 	db	32
  1003   007CB4  25                 	db	37
  1004   007CB5  75                 	db	117	;'u'
  1005   007CB6  20                 	db	32
  1006   007CB7  62                 	db	98	;'b'
  1007   007CB8  6C                 	db	108	;'l'
  1008   007CB9  6F                 	db	111	;'o'
  1009   007CBA  63                 	db	99	;'c'
  1010   007CBB  6B                 	db	107	;'k'
  1011   007CBC  73                 	db	115	;'s'
  1012   007CBD  2E                 	db	46
  1013   007CBE  0A                 	db	10
  1014   007CBF  0D                 	db	13
  1015   007CC0  00                 	db	0
  1016   007CC1                     STR_87:
  1017   007CC1  53                 	db	83	;'S'
  1018   007CC2  65                 	db	101	;'e'
  1019   007CC3  6C                 	db	108	;'l'
  1020   007CC4  65                 	db	101	;'e'
  1021   007CC5  63                 	db	99	;'c'
  1022   007CC6  74                 	db	116	;'t'
  1023   007CC7  3A                 	db	58	;':'
  1024   007CC8  20                 	db	32
  1025   007CC9  20                 	db	32
  1026   007CCA  20                 	db	32
  1027   007CCB  20                 	db	32
  1028   007CCC  20                 	db	32
  1029   007CCD  53                 	db	83	;'S'
  1030   007CCE  65                 	db	101	;'e'
  1031   007CCF  73                 	db	115	;'s'
  1032   007CD0  73                 	db	115	;'s'
  1033   007CD1  69                 	db	105	;'i'
  1034   007CD2  6F                 	db	111	;'o'
  1035   007CD3  6E                 	db	110	;'n'
  1036   007CD4  20                 	db	32
  1037   007CD5  20                 	db	32
  1038   007CD6  6C                 	db	108	;'l'
  1039   007CD7  6F                 	db	111	;'o'
  1040   007CD8  67                 	db	103	;'g'
  1041   007CD9  67                 	db	103	;'g'
  1042   007CDA  69                 	db	105	;'i'
  1043   007CDB  6E                 	db	110	;'n'
  1044   007CDC  67                 	db	103	;'g'
  1045   007CDD  3A                 	db	58	;':'
  1046   007CDE  20                 	db	32
  1047   007CDF  4E                 	db	78	;'N'
  1048   007CE0  6F                 	db	111	;'o'
  1049   007CE1  6E                 	db	110	;'n'
  1050   007CE2  65                 	db	101	;'e'
  1051   007CE3  0A                 	db	10
  1052   007CE4  0D                 	db	13
  1053   007CE5  00                 	db	0
  1054   007CE6                     STR_14:
  1055   007CE6  61                 	db	97	;'a'
  1056   007CE7  2F                 	db	47
  1057   007CE8  41                 	db	65	;'A'
  1058   007CE9  20                 	db	32
  1059   007CEA  64                 	db	100	;'d'
  1060   007CEB  65                 	db	101	;'e'
  1061   007CEC  63                 	db	99	;'c'
  1062   007CED  72                 	db	114	;'r'
  1063   007CEE  65                 	db	101	;'e'
  1064   007CEF  61                 	db	97	;'a'
  1065   007CF0  73                 	db	115	;'s'
  1066   007CF1  65                 	db	101	;'e'
  1067   007CF2  2F                 	db	47
  1068   007CF3  69                 	db	105	;'i'
  1069   007CF4  6E                 	db	110	;'n'
  1070   007CF5  63                 	db	99	;'c'
  1071   007CF6  72                 	db	114	;'r'
  1072   007CF7  65                 	db	101	;'e'
  1073   007CF8  61                 	db	97	;'a'
  1074   007CF9  73                 	db	115	;'s'
  1075   007CFA  65                 	db	101	;'e'
  1076   007CFB  20                 	db	32
  1077   007CFC  72                 	db	114	;'r'
  1078   007CFD  65                 	db	101	;'e'
  1079   007CFE  61                 	db	97	;'a'
  1080   007CFF  64                 	db	100	;'d'
  1081   007D00  20                 	db	32
  1082   007D01  61                 	db	97	;'a'
  1083   007D02  64                 	db	100	;'d'
  1084   007D03  64                 	db	100	;'d'
  1085   007D04  72                 	db	114	;'r'
  1086   007D05  65                 	db	101	;'e'
  1087   007D06  73                 	db	115	;'s'
  1088   007D07  73                 	db	115	;'s'
  1089   007D08  0A                 	db	10
  1090   007D09  0D                 	db	13
  1091   007D0A  00                 	db	0
  1092   007D0B                     STR_73:
  1093   007D0B  53                 	db	83	;'S'
  1094   007D0C  65                 	db	101	;'e'
  1095   007D0D  6C                 	db	108	;'l'
  1096   007D0E  65                 	db	101	;'e'
  1097   007D0F  63                 	db	99	;'c'
  1098   007D10  74                 	db	116	;'t'
  1099   007D11  3A                 	db	58	;':'
  1100   007D12  20                 	db	32
  1101   007D13  20                 	db	32
  1102   007D14  20                 	db	32
  1103   007D15  20                 	db	32
  1104   007D16  20                 	db	32
  1105   007D17  43                 	db	67	;'C'
  1106   007D18  68                 	db	104	;'h'
  1107   007D19  61                 	db	97	;'a'
  1108   007D1A  6E                 	db	110	;'n'
  1109   007D1B  67                 	db	103	;'g'
  1110   007D1C  65                 	db	101	;'e'
  1111   007D1D  20                 	db	32
  1112   007D1E  73                 	db	115	;'s'
  1113   007D1F  65                 	db	101	;'e'
  1114   007D20  74                 	db	116	;'t'
  1115   007D21  74                 	db	116	;'t'
  1116   007D22  69                 	db	105	;'i'
  1117   007D23  6E                 	db	110	;'n'
  1118   007D24  67                 	db	103	;'g'
  1119   007D25  73                 	db	115	;'s'
  1120   007D26  2E                 	db	46
  1121   007D27  2E                 	db	46
  1122   007D28  2E                 	db	46
  1123   007D29  0A                 	db	10
  1124   007D2A  0D                 	db	13
  1125   007D2B  00                 	db	0
  1126   007D2C                     STR_21:
  1127   007D2C  73                 	db	115	;'s'
  1128   007D2D  3A                 	db	58	;':'
  1129   007D2E  20                 	db	32
  1130   007D2F  73                 	db	115	;'s'
  1131   007D30  70                 	db	112	;'p'
  1132   007D31  6F                 	db	111	;'o'
  1133   007D32  6F                 	db	111	;'o'
  1134   007D33  6C                 	db	108	;'l'
  1135   007D34  20                 	db	32
  1136   007D35  6D                 	db	109	;'m'
  1137   007D36  65                 	db	101	;'e'
  1138   007D37  6D                 	db	109	;'m'
  1139   007D38  6F                 	db	111	;'o'
  1140   007D39  72                 	db	114	;'r'
  1141   007D3A  79                 	db	121	;'y'
  1142   007D3B  20                 	db	32
  1143   007D3C  74                 	db	116	;'t'
  1144   007D3D  6F                 	db	111	;'o'
  1145   007D3E  20                 	db	32
  1146   007D3F  61                 	db	97	;'a'
  1147   007D40  20                 	db	32
  1148   007D41  63                 	db	99	;'c'
  1149   007D42  73                 	db	115	;'s'
  1150   007D43  76                 	db	118	;'v'
  1151   007D44  20                 	db	32
  1152   007D45  66                 	db	102	;'f'
  1153   007D46  69                 	db	105	;'i'
  1154   007D47  6C                 	db	108	;'l'
  1155   007D48  65                 	db	101	;'e'
  1156   007D49  0A                 	db	10
  1157   007D4A  0D                 	db	13
  1158   007D4B  00                 	db	0
  1159   007D4C                     STR_26:
  1160   007D4C  55                 	db	85	;'U'
  1161   007D4D  6E                 	db	110	;'n'
  1162   007D4E  64                 	db	100	;'d'
  1163   007D4F  65                 	db	101	;'e'
  1164   007D50  72                 	db	114	;'r'
  1165   007D51  66                 	db	102	;'f'
  1166   007D52  6C                 	db	108	;'l'
  1167   007D53  6F                 	db	111	;'o'
  1168   007D54  77                 	db	119	;'w'
  1169   007D55  65                 	db	101	;'e'
  1170   007D56  64                 	db	100	;'d'
  1171   007D57  20                 	db	32
  1172   007D58  74                 	db	116	;'t'
  1173   007D59  6F                 	db	111	;'o'
  1174   007D5A  20                 	db	32
  1175   007D5B  68                 	db	104	;'h'
  1176   007D5C  69                 	db	105	;'i'
  1177   007D5D  67                 	db	103	;'g'
  1178   007D5E  68                 	db	104	;'h'
  1179   007D5F  20                 	db	32
  1180   007D60  61                 	db	97	;'a'
  1181   007D61  64                 	db	100	;'d'
  1182   007D62  64                 	db	100	;'d'
  1183   007D63  72                 	db	114	;'r'
  1184   007D64  65                 	db	101	;'e'
  1185   007D65  73                 	db	115	;'s'
  1186   007D66  73                 	db	115	;'s'
  1187   007D67  0D                 	db	13
  1188   007D68  0A                 	db	10
  1189   007D69  00                 	db	0
  1190   007D6A                     STR_66:
  1191   007D6A  77                 	db	119	;'w'
  1192   007D6B  72                 	db	114	;'r'
  1193   007D6C  69                 	db	105	;'i'
  1194   007D6D  74                 	db	116	;'t'
  1195   007D6E  65                 	db	101	;'e'
  1196   007D6F  20                 	db	32
  1197   007D70  64                 	db	100	;'d'
  1198   007D71  6F                 	db	111	;'o'
  1199   007D72  75                 	db	117	;'u'
  1200   007D73  62                 	db	98	;'b'
  1201   007D74  6C                 	db	108	;'l'
  1202   007D75  65                 	db	101	;'e'
  1203   007D76  42                 	db	66	;'B'
  1204   007D77  75                 	db	117	;'u'
  1205   007D78  66                 	db	102	;'f'
  1206   007D79  66                 	db	102	;'f'
  1207   007D7A  65                 	db	101	;'e'
  1208   007D7B  72                 	db	114	;'r'
  1209   007D7C  5B                 	db	91	;'['
  1210   007D7D  25                 	db	37
  1211   007D7E  75                 	db	117	;'u'
  1212   007D7F  5D                 	db	93	;']'
  1213   007D80  20                 	db	32
  1214   007D81  25                 	db	37
  1215   007D82  30                 	db	48	;'0'
  1216   007D83  34                 	db	52	;'4'
  1217   007D84  78                 	db	120	;'x'
  1218   007D85  3A                 	db	58	;':'
  1219   007D86  00                 	db	0
  1220   007D87                     STR_93:
  1221   007D87  42                 	db	66	;'B'
  1222   007D88  6C                 	db	108	;'l'
  1223   007D89  6F                 	db	111	;'o'
  1224   007D8A  63                 	db	99	;'c'
  1225   007D8B  6B                 	db	107	;'k'
  1226   007D8C  20                 	db	32
  1227   007D8D  4C                 	db	76	;'L'
  1228   007D8E  65                 	db	101	;'e'
  1229   007D8F  6E                 	db	110	;'n'
  1230   007D90  67                 	db	103	;'g'
  1231   007D91  74                 	db	116	;'t'
  1232   007D92  68                 	db	104	;'h'
  1233   007D93  20                 	db	32
  1234   007D94  52                 	db	82	;'R'
  1235   007D95  65                 	db	101	;'e'
  1236   007D96  73                 	db	115	;'s'
  1237   007D97  70                 	db	112	;'p'
  1238   007D98  6F                 	db	111	;'o'
  1239   007D99  6E                 	db	110	;'n'
  1240   007D9A  73                 	db	115	;'s'
  1241   007D9B  65                 	db	101	;'e'
  1242   007D9C  3A                 	db	58	;':'
  1243   007D9D  20                 	db	32
  1244   007D9E  25                 	db	37
  1245   007D9F  78                 	db	120	;'x'
  1246   007DA0  0D                 	db	13
  1247   007DA1  0A                 	db	10
  1248   007DA2  00                 	db	0
  1249   007DA3                     STR_33:
  1250   007DA3  4F                 	db	79	;'O'
  1251   007DA4  76                 	db	118	;'v'
  1252   007DA5  65                 	db	101	;'e'
  1253   007DA6  72                 	db	114	;'r'
  1254   007DA7  66                 	db	102	;'f'
  1255   007DA8  6C                 	db	108	;'l'
  1256   007DA9  6F                 	db	111	;'o'
  1257   007DAA  77                 	db	119	;'w'
  1258   007DAB  65                 	db	101	;'e'
  1259   007DAC  64                 	db	100	;'d'
  1260   007DAD  20                 	db	32
  1261   007DAE  74                 	db	116	;'t'
  1262   007DAF  6F                 	db	111	;'o'
  1263   007DB0  20                 	db	32
  1264   007DB1  6C                 	db	108	;'l'
  1265   007DB2  6F                 	db	111	;'o'
  1266   007DB3  77                 	db	119	;'w'
  1267   007DB4  20                 	db	32
  1268   007DB5  61                 	db	97	;'a'
  1269   007DB6  64                 	db	100	;'d'
  1270   007DB7  64                 	db	100	;'d'
  1271   007DB8  72                 	db	114	;'r'
  1272   007DB9  65                 	db	101	;'e'
  1273   007DBA  73                 	db	115	;'s'
  1274   007DBB  73                 	db	115	;'s'
  1275   007DBC  0D                 	db	13
  1276   007DBD  0A                 	db	10
  1277   007DBE  00                 	db	0
  1278   007DBF                     STR_91:
  1279   007DBF  43                 	db	67	;'C'
  1280   007DC0  4D                 	db	77	;'M'
  1281   007DC1  44                 	db	68	;'D'
  1282   007DC2  30                 	db	48	;'0'
  1283   007DC3  2C                 	db	44
  1284   007DC4  20                 	db	32
  1285   007DC5  52                 	db	82	;'R'
  1286   007DC6  65                 	db	101	;'e'
  1287   007DC7  73                 	db	115	;'s'
  1288   007DC8  65                 	db	101	;'e'
  1289   007DC9  74                 	db	116	;'t'
  1290   007DCA  20                 	db	32
  1291   007DCB  52                 	db	82	;'R'
  1292   007DCC  65                 	db	101	;'e'
  1293   007DCD  73                 	db	115	;'s'
  1294   007DCE  70                 	db	112	;'p'
  1295   007DCF  6F                 	db	111	;'o'
  1296   007DD0  6E                 	db	110	;'n'
  1297   007DD1  73                 	db	115	;'s'
  1298   007DD2  65                 	db	101	;'e'
  1299   007DD3  3A                 	db	58	;':'
  1300   007DD4  20                 	db	32
  1301   007DD5  25                 	db	37
  1302   007DD6  78                 	db	120	;'x'
  1303   007DD7  0D                 	db	13
  1304   007DD8  0A                 	db	10
  1305   007DD9  00                 	db	0
  1306   007DDA                     STR_92:
  1307   007DDA  43                 	db	67	;'C'
  1308   007DDB  4D                 	db	77	;'M'
  1309   007DDC  44                 	db	68	;'D'
  1310   007DDD  31                 	db	49	;'1'
  1311   007DDE  2C                 	db	44
  1312   007DDF  20                 	db	32
  1313   007DE0  49                 	db	73	;'I'
  1314   007DE1  6E                 	db	110	;'n'
  1315   007DE2  69                 	db	105	;'i'
  1316   007DE3  74                 	db	116	;'t'
  1317   007DE4  20                 	db	32
  1318   007DE5  52                 	db	82	;'R'
  1319   007DE6  65                 	db	101	;'e'
  1320   007DE7  73                 	db	115	;'s'
  1321   007DE8  70                 	db	112	;'p'
  1322   007DE9  6F                 	db	111	;'o'
  1323   007DEA  6E                 	db	110	;'n'
  1324   007DEB  73                 	db	115	;'s'
  1325   007DEC  65                 	db	101	;'e'
  1326   007DED  3A                 	db	58	;':'
  1327   007DEE  20                 	db	32
  1328   007DEF  25                 	db	37
  1329   007DF0  78                 	db	120	;'x'
  1330   007DF1  0D                 	db	13
  1331   007DF2  0A                 	db	10
  1332   007DF3  00                 	db	0
  1333   007DF4                     STR_64:
  1334   007DF4  73                 	db	115	;'s'
  1335   007DF5  61                 	db	97	;'a'
  1336   007DF6  6D                 	db	109	;'m'
  1337   007DF7  70                 	db	112	;'p'
  1338   007DF8  6C                 	db	108	;'l'
  1339   007DF9  65                 	db	101	;'e'
  1340   007DFA  20                 	db	32
  1341   007DFB  74                 	db	116	;'t'
  1342   007DFC  69                 	db	105	;'i'
  1343   007DFD  6D                 	db	109	;'m'
  1344   007DFE  65                 	db	101	;'e'
  1345   007DFF  3A                 	db	58	;':'
  1346   007E00  20                 	db	32
  1347   007E01  25                 	db	37
  1348   007E02  75                 	db	117	;'u'
  1349   007E03  20                 	db	32
  1350   007E04  63                 	db	99	;'c'
  1351   007E05  6F                 	db	111	;'o'
  1352   007E06  75                 	db	117	;'u'
  1353   007E07  6E                 	db	110	;'n'
  1354   007E08  74                 	db	116	;'t'
  1355   007E09  73                 	db	115	;'s'
  1356   007E0A  0A                 	db	10
  1357   007E0B  0D                 	db	13
  1358   007E0C  00                 	db	0
  1359   007E0D                     STR_78:
  1360   007E0D  50                 	db	80	;'P'
  1361   007E0E  72                 	db	114	;'r'
  1362   007E0F  65                 	db	101	;'e'
  1363   007E10  73                 	db	115	;'s'
  1364   007E11  73                 	db	115	;'s'
  1365   007E12  20                 	db	32
  1366   007E13  61                 	db	97	;'a'
  1367   007E14  6E                 	db	110	;'n'
  1368   007E15  79                 	db	121	;'y'
  1369   007E16  20                 	db	32
  1370   007E17  6B                 	db	107	;'k'
  1371   007E18  65                 	db	101	;'e'
  1372   007E19  79                 	db	121	;'y'
  1373   007E1A  20                 	db	32
  1374   007E1B  74                 	db	116	;'t'
  1375   007E1C  6F                 	db	111	;'o'
  1376   007E1D  20                 	db	32
  1377   007E1E  73                 	db	115	;'s'
  1378   007E1F  74                 	db	116	;'t'
  1379   007E20  61                 	db	97	;'a'
  1380   007E21  72                 	db	114	;'r'
  1381   007E22  74                 	db	116	;'t'
  1382   007E23  0A                 	db	10
  1383   007E24  0D                 	db	13
  1384   007E25  00                 	db	0
  1385   007E26                     STR_12:
  1386   007E26  69                 	db	105	;'i'
  1387   007E27  3A                 	db	58	;':'
  1388   007E28  20                 	db	32
  1389   007E29  49                 	db	73	;'I'
  1390   007E2A  6E                 	db	110	;'n'
  1391   007E2B  69                 	db	105	;'i'
  1392   007E2C  74                 	db	116	;'t'
  1393   007E2D  69                 	db	105	;'i'
  1394   007E2E  61                 	db	97	;'a'
  1395   007E2F  6C                 	db	108	;'l'
  1396   007E30  69                 	db	105	;'i'
  1397   007E31  7A                 	db	122	;'z'
  1398   007E32  65                 	db	101	;'e'
  1399   007E33  20                 	db	32
  1400   007E34  53                 	db	83	;'S'
  1401   007E35  44                 	db	68	;'D'
  1402   007E36  20                 	db	32
  1403   007E37  63                 	db	99	;'c'
  1404   007E38  61                 	db	97	;'a'
  1405   007E39  72                 	db	114	;'r'
  1406   007E3A  64                 	db	100	;'d'
  1407   007E3B  0A                 	db	10
  1408   007E3C  0D                 	db	13
  1409   007E3D  00                 	db	0
  1410   007E3E                     STR_10:
  1411   007E3E  7A                 	db	122	;'z'
  1412   007E3F  3A                 	db	58	;':'
  1413   007E40  20                 	db	32
  1414   007E41  43                 	db	67	;'C'
  1415   007E42  6C                 	db	108	;'l'
  1416   007E43  65                 	db	101	;'e'
  1417   007E44  61                 	db	97	;'a'
  1418   007E45  72                 	db	114	;'r'
  1419   007E46  20                 	db	32
  1420   007E47  74                 	db	116	;'t'
  1421   007E48  68                 	db	104	;'h'
  1422   007E49  65                 	db	101	;'e'
  1423   007E4A  20                 	db	32
  1424   007E4B  74                 	db	116	;'t'
  1425   007E4C  65                 	db	101	;'e'
  1426   007E4D  72                 	db	114	;'r'
  1427   007E4E  6D                 	db	109	;'m'
  1428   007E4F  69                 	db	105	;'i'
  1429   007E50  6E                 	db	110	;'n'
  1430   007E51  61                 	db	97	;'a'
  1431   007E52  6C                 	db	108	;'l'
  1432   007E53  0A                 	db	10
  1433   007E54  0D                 	db	13
  1434   007E55  00                 	db	0
  1435   007E56                     STR_16:
  1436   007E56  30                 	db	48	;'0'
  1437   007E57  3A                 	db	58	;':'
  1438   007E58  20                 	db	32
  1439   007E59  7A                 	db	122	;'z'
  1440   007E5A  65                 	db	101	;'e'
  1441   007E5B  72                 	db	114	;'r'
  1442   007E5C  6F                 	db	111	;'o'
  1443   007E5D  20                 	db	32
  1444   007E5E  74                 	db	116	;'t'
  1445   007E5F  6F                 	db	111	;'o'
  1446   007E60  20                 	db	32
  1447   007E61  31                 	db	49	;'1'
  1448   007E62  32                 	db	50	;'2'
  1449   007E63  38                 	db	56	;'8'
  1450   007E64  20                 	db	32
  1451   007E65  62                 	db	98	;'b'
  1452   007E66  6C                 	db	108	;'l'
  1453   007E67  6F                 	db	111	;'o'
  1454   007E68  63                 	db	99	;'c'
  1455   007E69  6B                 	db	107	;'k'
  1456   007E6A  73                 	db	115	;'s'
  1457   007E6B  0A                 	db	10
  1458   007E6C  0D                 	db	13
  1459   007E6D  00                 	db	0
  1460   007E6E                     STR_52:
  1461   007E6E  20                 	db	32
  1462   007E6F  20                 	db	32
  1463   007E70  20                 	db	32
  1464   007E71  20                 	db	32
  1465   007E72  53                 	db	83	;'S'
  1466   007E73  74                 	db	116	;'t'
  1467   007E74  61                 	db	97	;'a'
  1468   007E75  74                 	db	116	;'t'
  1469   007E76  75                 	db	117	;'u'
  1470   007E77  73                 	db	115	;'s'
  1471   007E78  3A                 	db	58	;':'
  1472   007E79  20                 	db	32
  1473   007E7A  20                 	db	32
  1474   007E7B  20                 	db	32
  1475   007E7C  20                 	db	32
  1476   007E7D  20                 	db	32
  1477   007E7E  25                 	db	37
  1478   007E7F  30                 	db	48	;'0'
  1479   007E80  32                 	db	50	;'2'
  1480   007E81  78                 	db	120	;'x'
  1481   007E82  0D                 	db	13
  1482   007E83  0A                 	db	10
  1483   007E84  00                 	db	0
  1484   007E85                     STR_74:
  1485   007E85  53                 	db	83	;'S'
  1486   007E86  65                 	db	101	;'e'
  1487   007E87  6C                 	db	108	;'l'
  1488   007E88  65                 	db	101	;'e'
  1489   007E89  63                 	db	99	;'c'
  1490   007E8A  74                 	db	116	;'t'
  1491   007E8B  3A                 	db	58	;':'
  1492   007E8C  20                 	db	32
  1493   007E8D  20                 	db	32
  1494   007E8E  20                 	db	32
  1495   007E8F  20                 	db	32
  1496   007E90  20                 	db	32
  1497   007E91  4C                 	db	76	;'L'
  1498   007E92  6F                 	db	111	;'o'
  1499   007E93  67                 	db	103	;'g'
  1500   007E94  67                 	db	103	;'g'
  1501   007E95  69                 	db	105	;'i'
  1502   007E96  6E                 	db	110	;'n'
  1503   007E97  67                 	db	103	;'g'
  1504   007E98  0A                 	db	10
  1505   007E99  0D                 	db	13
  1506   007E9A  00                 	db	0
  1507   007E9B                     STR_9:
  1508   007E9B  5A                 	db	90	;'Z'
  1509   007E9C  3A                 	db	58	;':'
  1510   007E9D  20                 	db	32
  1511   007E9E  52                 	db	82	;'R'
  1512   007E9F  65                 	db	101	;'e'
  1513   007EA0  73                 	db	115	;'s'
  1514   007EA1  65                 	db	101	;'e'
  1515   007EA2  74                 	db	116	;'t'
  1516   007EA3  20                 	db	32
  1517   007EA4  70                 	db	112	;'p'
  1518   007EA5  72                 	db	114	;'r'
  1519   007EA6  6F                 	db	111	;'o'
  1520   007EA7  63                 	db	99	;'c'
  1521   007EA8  65                 	db	101	;'e'
  1522   007EA9  73                 	db	115	;'s'
  1523   007EAA  73                 	db	115	;'s'
  1524   007EAB  6F                 	db	111	;'o'
  1525   007EAC  72                 	db	114	;'r'
  1526   007EAD  0A                 	db	10
  1527   007EAE  0D                 	db	13
  1528   007EAF  00                 	db	0
  1529   007EB0                     STR_27:
  1530   007EB0  44                 	db	68	;'D'
  1531   007EB1  65                 	db	101	;'e'
  1532   007EB2  63                 	db	99	;'c'
  1533   007EB3  72                 	db	114	;'r'
  1534   007EB4  65                 	db	101	;'e'
  1535   007EB5  61                 	db	97	;'a'
  1536   007EB6  73                 	db	115	;'s'
  1537   007EB7  65                 	db	101	;'e'
  1538   007EB8  64                 	db	100	;'d'
  1539   007EB9  20                 	db	32
  1540   007EBA  61                 	db	97	;'a'
  1541   007EBB  64                 	db	100	;'d'
  1542   007EBC  64                 	db	100	;'d'
  1543   007EBD  72                 	db	114	;'r'
  1544   007EBE  65                 	db	101	;'e'
  1545   007EBF  73                 	db	115	;'s'
  1546   007EC0  73                 	db	115	;'s'
  1547   007EC1  0D                 	db	13
  1548   007EC2  0A                 	db	10
  1549   007EC3  00                 	db	0
  1550   007EC4                     STR_34:
  1551   007EC4  49                 	db	73	;'I'
  1552   007EC5  6E                 	db	110	;'n'
  1553   007EC6  63                 	db	99	;'c'
  1554   007EC7  72                 	db	114	;'r'
  1555   007EC8  65                 	db	101	;'e'
  1556   007EC9  61                 	db	97	;'a'
  1557   007ECA  73                 	db	115	;'s'
  1558   007ECB  65                 	db	101	;'e'
  1559   007ECC  64                 	db	100	;'d'
  1560   007ECD  20                 	db	32
  1561   007ECE  61                 	db	97	;'a'
  1562   007ECF  64                 	db	100	;'d'
  1563   007ED0  64                 	db	100	;'d'
  1564   007ED1  72                 	db	114	;'r'
  1565   007ED2  65                 	db	101	;'e'
  1566   007ED3  73                 	db	115	;'s'
  1567   007ED4  73                 	db	115	;'s'
  1568   007ED5  0D                 	db	13
  1569   007ED6  0A                 	db	10
  1570   007ED7  00                 	db	0
  1571   007ED8                     STR_77:
  1572   007ED8  53                 	db	83	;'S'
  1573   007ED9  65                 	db	101	;'e'
  1574   007EDA  6C                 	db	108	;'l'
  1575   007EDB  65                 	db	101	;'e'
  1576   007EDC  63                 	db	99	;'c'
  1577   007EDD  74                 	db	116	;'t'
  1578   007EDE  3A                 	db	58	;':'
  1579   007EDF  20                 	db	32
  1580   007EE0  20                 	db	32
  1581   007EE1  20                 	db	32
  1582   007EE2  20                 	db	32
  1583   007EE3  20                 	db	32
  1584   007EE4  41                 	db	65	;'A'
  1585   007EE5  70                 	db	112	;'p'
  1586   007EE6  70                 	db	112	;'p'
  1587   007EE7  6C                 	db	108	;'l'
  1588   007EE8  79                 	db	121	;'y'
  1589   007EE9  0A                 	db	10
  1590   007EEA  0D                 	db	13
  1591   007EEB  00                 	db	0
  1592   007EEC                     STR_63:
  1593   007EEC  73                 	db	115	;'s'
  1594   007EED  69                 	db	105	;'i'
  1595   007EEE  6E                 	db	110	;'n'
  1596   007EEF  20                 	db	32
  1597   007EF0  77                 	db	119	;'w'
  1598   007EF1  61                 	db	97	;'a'
  1599   007EF2  76                 	db	118	;'v'
  1600   007EF3  65                 	db	101	;'e'
  1601   007EF4  20                 	db	32
  1602   007EF5  77                 	db	119	;'w'
  1603   007EF6  72                 	db	114	;'r'
  1604   007EF7  69                 	db	105	;'i'
  1605   007EF8  74                 	db	116	;'t'
  1606   007EF9  74                 	db	116	;'t'
  1607   007EFA  65                 	db	101	;'e'
  1608   007EFB  6E                 	db	110	;'n'
  1609   007EFC  0A                 	db	10
  1610   007EFD  0D                 	db	13
  1611   007EFE  00                 	db	0
  1612   007EFF                     STR_28:
  1613   007EFF  53                 	db	83	;'S'
  1614   007F00  44                 	db	68	;'D'
  1615   007F01  20                 	db	32
  1616   007F02  63                 	db	99	;'c'
  1617   007F03  61                 	db	97	;'a'
  1618   007F04  72                 	db	114	;'r'
  1619   007F05  64                 	db	100	;'d'
  1620   007F06  20                 	db	32
  1621   007F07  61                 	db	97	;'a'
  1622   007F08  64                 	db	100	;'d'
  1623   007F09  64                 	db	100	;'d'
  1624   007F0A  72                 	db	114	;'r'
  1625   007F0B  65                 	db	101	;'e'
  1626   007F0C  73                 	db	115	;'s'
  1627   007F0D  73                 	db	115	;'s'
  1628   007F0E  3A                 	db	58	;':'
  1629   007F0F  20                 	db	32
  1630   007F10  20                 	db	32
  1631   007F11  00                 	db	0
  1632   007F12                     STR_2:
  1633   007F12  53                 	db	83	;'S'
  1634   007F13  44                 	db	68	;'D'
  1635   007F14  20                 	db	32
  1636   007F15  63                 	db	99	;'c'
  1637   007F16  61                 	db	97	;'a'
  1638   007F17  72                 	db	114	;'r'
  1639   007F18  64                 	db	100	;'d'
  1640   007F19  20                 	db	32
  1641   007F1A  74                 	db	116	;'t'
  1642   007F1B  65                 	db	101	;'e'
  1643   007F1C  73                 	db	115	;'s'
  1644   007F1D  74                 	db	116	;'t'
  1645   007F1E  69                 	db	105	;'i'
  1646   007F1F  6E                 	db	110	;'n'
  1647   007F20  67                 	db	103	;'g'
  1648   007F21  0D                 	db	13
  1649   007F22  0A                 	db	10
  1650   007F23  00                 	db	0
  1651   007F24                     STR_89:
  1652   007F24  55                 	db	85	;'U'
  1653   007F25  6E                 	db	110	;'n'
  1654   007F26  6B                 	db	107	;'k'
  1655   007F27  6E                 	db	110	;'n'
  1656   007F28  6F                 	db	111	;'o'
  1657   007F29  77                 	db	119	;'w'
  1658   007F2A  6E                 	db	110	;'n'
  1659   007F2B  20                 	db	32
  1660   007F2C  6B                 	db	107	;'k'
  1661   007F2D  65                 	db	101	;'e'
  1662   007F2E  79                 	db	121	;'y'
  1663   007F2F  20                 	db	32
  1664   007F30  25                 	db	37
  1665   007F31  63                 	db	99	;'c'
  1666   007F32  0D                 	db	13
  1667   007F33  0A                 	db	10
  1668   007F34  00                 	db	0
  1669   007F35                     STR_68:
  1670   007F35  61                 	db	97	;'a'
  1671   007F36  75                 	db	117	;'u'
  1672   007F37  64                 	db	100	;'d'
  1673   007F38  69                 	db	105	;'i'
  1674   007F39  6F                 	db	111	;'o'
  1675   007F3A  20                 	db	32
  1676   007F3B  72                 	db	114	;'r'
  1677   007F3C  65                 	db	101	;'e'
  1678   007F3D  63                 	db	99	;'c'
  1679   007F3E  6F                 	db	111	;'o'
  1680   007F3F  72                 	db	114	;'r'
  1681   007F40  64                 	db	100	;'d'
  1682   007F41  65                 	db	101	;'e'
  1683   007F42  64                 	db	100	;'d'
  1684   007F43  0A                 	db	10
  1685   007F44  0D                 	db	13
  1686   007F45  00                 	db	0
  1687   007F46                     STR_41:
  1688   007F46  20                 	db	32
  1689   007F47  20                 	db	32
  1690   007F48  20                 	db	32
  1691   007F49  20                 	db	32
  1692   007F4A  41                 	db	65	;'A'
  1693   007F4B  64                 	db	100	;'d'
  1694   007F4C  64                 	db	100	;'d'
  1695   007F4D  72                 	db	114	;'r'
  1696   007F4E  65                 	db	101	;'e'
  1697   007F4F  73                 	db	115	;'s'
  1698   007F50  73                 	db	115	;'s'
  1699   007F51  3A                 	db	58	;':'
  1700   007F52  20                 	db	32
  1701   007F53  20                 	db	32
  1702   007F54  20                 	db	32
  1703   007F55  20                 	db	32
  1704   007F56  00                 	db	0
  1705   007F57                     STR_58:
  1706   007F57  7A                 	db	122	;'z'
  1707   007F58  65                 	db	101	;'e'
  1708   007F59  72                 	db	114	;'r'
  1709   007F5A  6F                 	db	111	;'o'
  1710   007F5B  73                 	db	115	;'s'
  1711   007F5C  20                 	db	32
  1712   007F5D  77                 	db	119	;'w'
  1713   007F5E  72                 	db	114	;'r'
  1714   007F5F  69                 	db	105	;'i'
  1715   007F60  74                 	db	116	;'t'
  1716   007F61  74                 	db	116	;'t'
  1717   007F62  65                 	db	101	;'e'
  1718   007F63  6E                 	db	110	;'n'
  1719   007F64  0A                 	db	10
  1720   007F65  0D                 	db	13
  1721   007F66  00                 	db	0
  1722   007F67                     STR_40:
  1723   007F67  52                 	db	82	;'R'
  1724   007F68  65                 	db	101	;'e'
  1725   007F69  61                 	db	97	;'a'
  1726   007F6A  64                 	db	100	;'d'
  1727   007F6B  20                 	db	32
  1728   007F6C  62                 	db	98	;'b'
  1729   007F6D  6C                 	db	108	;'l'
  1730   007F6E  6F                 	db	111	;'o'
  1731   007F6F  63                 	db	99	;'c'
  1732   007F70  6B                 	db	107	;'k'
  1733   007F71  3A                 	db	58	;':'
  1734   007F72  20                 	db	32
  1735   007F73  0D                 	db	13
  1736   007F74  0A                 	db	10
  1737   007F75  00                 	db	0
  1738   007F76                     STR_7:
  1739   007F76  3F                 	db	63	;'?'
  1740   007F77  3A                 	db	58	;':'
  1741   007F78  20                 	db	32
  1742   007F79  68                 	db	104	;'h'
  1743   007F7A  65                 	db	101	;'e'
  1744   007F7B  6C                 	db	108	;'l'
  1745   007F7C  70                 	db	112	;'p'
  1746   007F7D  20                 	db	32
  1747   007F7E  6D                 	db	109	;'m'
  1748   007F7F  65                 	db	101	;'e'
  1749   007F80  6E                 	db	110	;'n'
  1750   007F81  75                 	db	117	;'u'
  1751   007F82  0A                 	db	10
  1752   007F83  0D                 	db	13
  1753   007F84  00                 	db	0
  1754   007F85                     STR_53:
  1755   007F85  61                 	db	97	;'a'
  1756   007F86  64                 	db	100	;'d'
  1757   007F87  64                 	db	100	;'d'
  1758   007F88  72                 	db	114	;'r'
  1759   007F89  65                 	db	101	;'e'
  1760   007F8A  73                 	db	115	;'s'
  1761   007F8B  73                 	db	115	;'s'
  1762   007F8C  3A                 	db	58	;':'
  1763   007F8D  20                 	db	32
  1764   007F8E  25                 	db	37
  1765   007F8F  75                 	db	117	;'u'
  1766   007F90  3A                 	db	58	;':'
  1767   007F91  25                 	db	37
  1768   007F92  75                 	db	117	;'u'
  1769   007F93  00                 	db	0
  1770   007F94                     STR_1:
  1771   007F94  0A                 	db	10
  1772   007F95  0D                 	db	13
  1773   007F96  69                 	db	105	;'i'
  1774   007F97  6E                 	db	110	;'n'
  1775   007F98  4C                 	db	76	;'L'
  1776   007F99  61                 	db	97	;'a'
  1777   007F9A  62                 	db	98	;'b'
  1778   007F9B  20                 	db	32
  1779   007F9C  30                 	db	48	;'0'
  1780   007F9D  39                 	db	57	;'9'
  1781   007F9E  0D                 	db	13
  1782   007F9F  0A                 	db	10
  1783   007FA0  00                 	db	0
  1784   007FA1                     STR_57:
  1785   007FA1  63                 	db	99	;'c'
  1786   007FA2  6F                 	db	111	;'o'
  1787   007FA3  6D                 	db	109	;'m'
  1788   007FA4  70                 	db	112	;'p'
  1789   007FA5  6C                 	db	108	;'l'
  1790   007FA6  65                 	db	101	;'e'
  1791   007FA7  74                 	db	116	;'t'
  1792   007FA8  65                 	db	101	;'e'
  1793   007FA9  0A                 	db	10
  1794   007FAA  0D                 	db	13
  1795   007FAB  00                 	db	0
  1796   007FAC                     STR_54:
  1797   007FAC  77                 	db	119	;'w'
  1798   007FAD  72                 	db	114	;'r'
  1799   007FAE  69                 	db	105	;'i'
  1800   007FAF  74                 	db	116	;'t'
  1801   007FB0  65                 	db	101	;'e'
  1802   007FB1  20                 	db	32
  1803   007FB2  74                 	db	116	;'t'
  1804   007FB3  6F                 	db	111	;'o'
  1805   007FB4  20                 	db	32
  1806   007FB5  00                 	db	0
  1807   007FB6                     STR_3:
  1808   007FB6  44                 	db	68	;'D'
  1809   007FB7  65                 	db	101	;'e'
  1810   007FB8  76                 	db	118	;'v'
  1811   007FB9  27                 	db	39
  1812   007FBA  32                 	db	50	;'2'
  1813   007FBB  31                 	db	49	;'1'
  1814   007FBC  0D                 	db	13
  1815   007FBD  0A                 	db	10
  1816   007FBE  00                 	db	0
  1817   007FBF                     STR_23:
  1818   007FBF  6F                 	db	111	;'o'
  1819   007FC0  3A                 	db	58	;':'
  1820   007FC1  20                 	db	32
  1821   007FC2  20                 	db	32
  1822   007FC3  6F                 	db	111	;'o'
  1823   007FC4  6B                 	db	107	;'k'
  1824   007FC5  0D                 	db	13
  1825   007FC6  0A                 	db	10
  1826   007FC7  00                 	db	0
  1827   007FC8                     STR_8:
  1828   007FC8  6F                 	db	111	;'o'
  1829   007FC9  3A                 	db	58	;':'
  1830   007FCA  20                 	db	32
  1831   007FCB  6B                 	db	107	;'k'
  1832   007FCC  0A                 	db	10
  1833   007FCD  0D                 	db	13
  1834   007FCE  00                 	db	0
  1835   007FCF                     STR_67:
  1836   007FCF  25                 	db	37
  1837   007FD0  30                 	db	48	;'0'
  1838   007FD1  34                 	db	52	;'4'
  1839   007FD2  78                 	db	120	;'x'
  1840   007FD3  0A                 	db	10
  1841   007FD4  0D                 	db	13
  1842   007FD5  00                 	db	0
  1843   007FD6                     STR_100:
  1844   007FD6  25                 	db	37
  1845   007FD7  30                 	db	48	;'0'
  1846   007FD8  32                 	db	50	;'2'
  1847   007FD9  78                 	db	120	;'x'
  1848   007FDA  20                 	db	32
  1849   007FDB  00                 	db	0
  1850   007FDC                     STR_56:
  1851   007FDC  25                 	db	37
  1852   007FDD  30                 	db	48	;'0'
  1853   007FDE  34                 	db	52	;'4'
  1854   007FDF  78                 	db	120	;'x'
  1855   007FE0  20                 	db	32
  1856   007FE1  00                 	db	0
  1857   007FE2                     STR_5:
  1858   007FE2  25                 	db	37
  1859   007FE3  63                 	db	99	;'c'
  1860   007FE4  0A                 	db	10
  1861   007FE5  0D                 	db	13
  1862   007FE6  00                 	db	0
  1863   007FE7                     STR_79:
  1864   007FE7  25                 	db	37
  1865   007FE8  75                 	db	117	;'u'
  1866   007FE9  25                 	db	37
  1867   007FEA  73                 	db	115	;'s'
  1868   007FEB  00                 	db	0
  1869   007FEC                     STR_29:
  1870   007FEC  25                 	db	37
  1871   007FED  30                 	db	48	;'0'
  1872   007FEE  34                 	db	52	;'4'
  1873   007FEF  78                 	db	120	;'x'
  1874   007FF0  00                 	db	0
  1875   007FF1                     STR_105:
  1876   007FF1  6C                 	db	108	;'l'
  1877   007FF2  6C                 	db	108	;'l'
  1878   007FF3  73                 	db	115	;'s'
  1879   007FF4  00                 	db	0
  1880   007FF5                     STR_94:
  1881   007FF5  0D                 	db	13
  1882   007FF6  0A                 	db	10
  1883   007FF7  0A                 	db	10
  1884   007FF8  00                 	db	0
  1885   007FF9                     STR_98:
  1886   007FF9  25                 	db	37
  1887   007FFA  63                 	db	99	;'c'
  1888   007FFB  00                 	db	0
  1889   007FFC                     STR_97:
  1890   007FFC  2E                 	db	46
  1891   007FFD  00                 	db	0
  1892   007FFE  00                 	db	0	; dummy byte at the end
  1893   000000                     
  1894                           ; #config settings
  1895                           
  1896                           	psect	cinit
  1897   002314                     __pcinit:
  1898                           	callstack 0
  1899   002314                     start_initialization:
  1900                           	callstack 0
  1901   002314                     __initialization:
  1902                           	callstack 0
  1903                           
  1904                           ; Initialize objects allocated to BANK0 (10 bytes)
  1905                           ; load TBLPTR registers with __pidataBANK0
  1906   002314  0E7E               	movlw	low __pidataBANK0
  1907   002316  6EF6               	movwf	tblptrl,c
  1908   002318  0E27               	movlw	high __pidataBANK0
  1909   00231A  6EF7               	movwf	tblptrh,c
  1910   00231C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1911   00231E  6EF8               	movwf	tblptru,c
  1912   002320  EE00  F0DF         	lfsr	0,__pdataBANK0
  1913   002324  EE10 F00A          	lfsr	1,10
  1914   002328                     copy_data0:
  1915   002328  0009               	tblrd		*+
  1916   00232A  CFF5 FFEE          	movff	tablat,postinc0
  1917   00232E  50E5               	movf	postdec1,w,c
  1918   002330  50E1               	movf	fsr1l,w,c
  1919   002332  E1FA               	bnz	copy_data0
  1920                           
  1921                           ; Clear objects allocated to BIGRAM (1024 bytes)
  1922   002334  EE01  F029         	lfsr	0,__pbssBIGRAM
  1923   002338  EE14 F000          	lfsr	1,1024
  1924   00233C                     clear_0:
  1925   00233C  6AEE               	clrf	postinc0,c
  1926   00233E  50E5               	movf	postdec1,w,c
  1927   002340  50E1               	movf	fsr1l,w,c
  1928   002342  E1FC               	bnz	clear_0
  1929   002344  50E2               	movf	fsr1h,w,c
  1930   002346  E1FA               	bnz	clear_0
  1931                           
  1932                           ; Clear objects allocated to BANK0 (37 bytes)
  1933   002348  EE00  F0BA         	lfsr	0,__pbssBANK0
  1934   00234C  0E25               	movlw	37
  1935   00234E                     clear_1:
  1936   00234E  6AEE               	clrf	postinc0,c
  1937   002350  06E8               	decf	wreg,f,c
  1938   002352  E1FD               	bnz	clear_1
  1939                           
  1940                           ; Clear objects allocated to COMRAM (20 bytes)
  1941   002354  EE00  F037         	lfsr	0,__pbssCOMRAM
  1942   002358  0E14               	movlw	20
  1943   00235A                     clear_2:
  1944   00235A  6AEE               	clrf	postinc0,c
  1945   00235C  06E8               	decf	wreg,f,c
  1946   00235E  E1FD               	bnz	clear_2
  1947   002360                     end_of_initialization:
  1948                           	callstack 0
  1949   002360                     __end_of__initialization:
  1950                           	callstack 0
  1951   002360  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1952   002362  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1953   002364  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1954   002366  6EF8               	movwf	tblptru,c
  1955   002368  0100               	movlb	0
  1956   00236A  EF31  F000         	goto	_main	;jump to C main() function
  1957                           
  1958                           	psect	bssCOMRAM
  1959   000037                     __pbssCOMRAM:
  1960                           	callstack 0
  1961   000037                     _width:
  1962                           	callstack 0
  1963   000037                     	ds	2
  1964   000039                     _prec:
  1965                           	callstack 0
  1966   000039                     	ds	2
  1967   00003B                     rwTMR0ISR@i:
  1968                           	callstack 0
  1969   00003B                     	ds	2
  1970   00003D                     _timer1ReloadVal:
  1971                           	callstack 0
  1972   00003D                     	ds	2
  1973   00003F                     _EUSART1_OverrunErrorHandler:
  1974                           	callstack 0
  1975   00003F                     	ds	2
  1976   000041                     _EUSART1_FramingErrorHandler:
  1977                           	callstack 0
  1978   000041                     	ds	2
  1979   000043                     _timer0ReloadVal:
  1980                           	callstack 0
  1981   000043                     	ds	2
  1982   000045                     _TMR0_InterruptHandler:
  1983                           	callstack 0
  1984   000045                     	ds	2
  1985   000047                     _flags:
  1986                           	callstack 0
  1987   000047                     	ds	1
  1988   000048                     _sampleIndex:
  1989                           	callstack 0
  1990   000048                     	ds	1
  1991   000049                     _recording:
  1992                           	callstack 0
  1993   000049                     	ds	1
  1994   00004A                     _eusart1RxLastError:
  1995                           	callstack 0
  1996   00004A                     	ds	1
  1997                           
  1998                           	psect	bssBANK0
  1999   0000BA                     __pbssBANK0:
  2000                           	callstack 0
  2001   0000BA                     _ADC_InterruptHandler:
  2002                           	callstack 0
  2003   0000BA                     	ds	2
  2004   0000BC                     _EUSART1_ErrorHandler:
  2005                           	callstack 0
  2006   0000BC                     	ds	2
  2007   0000BE                     _write:
  2008                           	callstack 0
  2009   0000BE                     	ds	1
  2010   0000BF                     _dbuf:
  2011                           	callstack 0
  2012   0000BF                     	ds	32
  2013                           
  2014                           	psect	dataBANK0
  2015   0000DF                     __pdataBANK0:
  2016                           	callstack 0
  2017   0000DF                     stoa@F1149:
  2018                           	callstack 0
  2019   0000DF                     	ds	7
  2020   0000E6                     _sampleRate:
  2021                           	callstack 0
  2022   0000E6                     	ds	2
  2023   0000E8                     _writeIndex:
  2024                           	callstack 0
  2025   0000E8                     	ds	1
  2026                           
  2027                           	psect	bssBIGRAM
  2028   000129                     __pbssBIGRAM:
  2029                           	callstack 0
  2030   000129                     _doubleBuffer:
  2031                           	callstack 0
  2032   000129                     	ds	1024
  2033                           
  2034                           	psect	cstackBANK1
  2035   000100                     __pcstackBANK1:
  2036                           	callstack 0
  2037   000100                     main@sin:
  2038                           	callstack 0
  2039                           
  2040                           ; 26 bytes @ 0x0
  2041   000100                     	ds	26
  2042   00011A                     main@status:
  2043                           	callstack 0
  2044                           
  2045                           ; 1 bytes @ 0x1A
  2046   00011A                     	ds	1
  2047   00011B                     main@cmd:
  2048                           	callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x1B
  2051   00011B                     	ds	1
  2052   00011C                     main@si:
  2053                           	callstack 0
  2054                           
  2055                           ; 1 bytes @ 0x1C
  2056   00011C                     	ds	1
  2057   00011D                     main@j:
  2058                           	callstack 0
  2059                           
  2060                           ; 2 bytes @ 0x1D
  2061   00011D                     	ds	2
  2062   00011F                     main@currentAddress:
  2063                           	callstack 0
  2064                           
  2065                           ; 4 bytes @ 0x1F
  2066   00011F                     	ds	4
  2067   000123                     main@address:
  2068                           	callstack 0
  2069                           
  2070                           ; 4 bytes @ 0x23
  2071   000123                     	ds	4
  2072   000127                     main@i:
  2073                           	callstack 0
  2074                           
  2075                           ; 2 bytes @ 0x27
  2076   000127                     	ds	2
  2077                           
  2078                           	psect	cstackBANK0
  2079   000060                     __pcstackBANK0:
  2080                           	callstack 0
  2081   000060                     utoa@fp:
  2082                           	callstack 0
  2083   000060                     xtoa@fp:
  2084                           	callstack 0
  2085                           
  2086                           ; 2 bytes @ 0x0
  2087   000060                     	ds	2
  2088   000062                     utoa@d:
  2089                           	callstack 0
  2090   000062                     xtoa@d:
  2091                           	callstack 0
  2092                           
  2093                           ; 8 bytes @ 0x2
  2094   000062                     	ds	8
  2095   00006A                     ??_utoa:
  2096   00006A                     ??_xtoa:
  2097                           
  2098                           ; 1 bytes @ 0xA
  2099   00006A                     	ds	8
  2100   000072                     utoa@p:
  2101                           	callstack 0
  2102   000072                     _xtoa$2033:
  2103                           	callstack 0
  2104                           
  2105                           ; 2 bytes @ 0x12
  2106   000072                     	ds	2
  2107   000074                     utoa@w:
  2108                           	callstack 0
  2109   000074                     xtoa@p:
  2110                           	callstack 0
  2111                           
  2112                           ; 2 bytes @ 0x14
  2113   000074                     	ds	2
  2114   000076                     xtoa@w:
  2115                           	callstack 0
  2116   000076                     utoa@n:
  2117                           	callstack 0
  2118                           
  2119                           ; 8 bytes @ 0x16
  2120   000076                     	ds	2
  2121   000078                     xtoa@n:
  2122                           	callstack 0
  2123                           
  2124                           ; 8 bytes @ 0x18
  2125   000078                     	ds	6
  2126   00007E                     utoa@i:
  2127                           	callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x1E
  2130   00007E                     	ds	2
  2131   000080                     xtoa@i:
  2132                           	callstack 0
  2133                           
  2134                           ; 2 bytes @ 0x20
  2135   000080                     	ds	2
  2136   000082                     xtoa@c:
  2137                           	callstack 0
  2138                           
  2139                           ; 1 bytes @ 0x22
  2140   000082                     	ds	1
  2141   000083                     vfpfcnvrt@fp:
  2142                           	callstack 0
  2143                           
  2144                           ; 2 bytes @ 0x23
  2145   000083                     	ds	2
  2146   000085                     vfpfcnvrt@fmt:
  2147                           	callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x25
  2150   000085                     	ds	2
  2151   000087                     vfpfcnvrt@ap:
  2152                           	callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x27
  2155   000087                     	ds	2
  2156   000089                     ??_vfpfcnvrt:
  2157                           
  2158                           ; 1 bytes @ 0x29
  2159   000089                     	ds	4
  2160   00008D                     vfpfcnvrt@c:
  2161                           	callstack 0
  2162                           
  2163                           ; 1 bytes @ 0x2D
  2164   00008D                     	ds	1
  2165   00008E                     vfpfcnvrt@done:
  2166                           	callstack 0
  2167                           
  2168                           ; 2 bytes @ 0x2E
  2169   00008E                     	ds	2
  2170   000090                     _vfpfcnvrt$2053:
  2171                           	callstack 0
  2172                           
  2173                           ; 2 bytes @ 0x30
  2174   000090                     	ds	2
  2175   000092                     vfpfcnvrt@convarg:
  2176                           	callstack 0
  2177                           
  2178                           ; 8 bytes @ 0x32
  2179   000092                     	ds	8
  2180   00009A                     vfpfcnvrt@cp:
  2181                           	callstack 0
  2182                           
  2183                           ; 2 bytes @ 0x3A
  2184   00009A                     	ds	2
  2185   00009C                     ?_vfprintf:
  2186                           	callstack 0
  2187   00009C                     vfprintf@fp:
  2188                           	callstack 0
  2189                           
  2190                           ; 2 bytes @ 0x3C
  2191   00009C                     	ds	2
  2192   00009E                     vfprintf@fmt:
  2193                           	callstack 0
  2194                           
  2195                           ; 2 bytes @ 0x3E
  2196   00009E                     	ds	2
  2197   0000A0                     vfprintf@ap:
  2198                           	callstack 0
  2199                           
  2200                           ; 2 bytes @ 0x40
  2201   0000A0                     	ds	2
  2202   0000A2                     ?_printf:
  2203                           	callstack 0
  2204   0000A2                     printf@fmt:
  2205                           	callstack 0
  2206                           
  2207                           ; 2 bytes @ 0x42
  2208   0000A2                     	ds	10
  2209   0000AC                     printf@ap:
  2210                           	callstack 0
  2211                           
  2212                           ; 2 bytes @ 0x4C
  2213   0000AC                     	ds	2
  2214   0000AE                     SDCARD_Initialize@i:
  2215                           	callstack 0
  2216   0000AE                     hexDumpBuffer@sdCardBuffer:
  2217                           	callstack 0
  2218                           
  2219                           ; 2 bytes @ 0x4E
  2220   0000AE                     	ds	2
  2221   0000B0                     ??_hexDumpBuffer:
  2222   0000B0                     SDCARD_Initialize@verbose:
  2223                           	callstack 0
  2224                           
  2225                           ; 1 bytes @ 0x50
  2226   0000B0                     	ds	1
  2227   0000B1                     SDCARD_Initialize@response:
  2228                           	callstack 0
  2229                           
  2230                           ; 1 bytes @ 0x51
  2231   0000B1                     	ds	1
  2232   0000B2                     hexDumpBuffer@j:
  2233                           	callstack 0
  2234                           
  2235                           ; 2 bytes @ 0x52
  2236   0000B2                     	ds	2
  2237   0000B4                     hexDumpBuffer@j_1480:
  2238                           	callstack 0
  2239                           
  2240                           ; 2 bytes @ 0x54
  2241   0000B4                     	ds	2
  2242   0000B6                     hexDumpBuffer@i:
  2243                           	callstack 0
  2244                           
  2245                           ; 2 bytes @ 0x56
  2246   0000B6                     	ds	2
  2247   0000B8                     ??_main:
  2248                           
  2249                           ; 1 bytes @ 0x58
  2250   0000B8                     	ds	2
  2251                           
  2252                           	psect	cstackCOMRAM
  2253   000001                     __pcstackCOMRAM:
  2254                           	callstack 0
  2255   000001                     ?_TMR0_ReadTimer:
  2256                           	callstack 0
  2257   000001                     ?i2___wmul:
  2258                           	callstack 0
  2259   000001                     i2___wmul@multiplier:
  2260                           	callstack 0
  2261                           
  2262                           ; 2 bytes @ 0x0
  2263   000001                     	ds	2
  2264   000003                     ??_TMR0_ReadTimer:
  2265   000003                     i2___wmul@multiplicand:
  2266                           	callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x2
  2269   000003                     	ds	2
  2270   000005                     TMR0_ReadTimer@readVal:
  2271                           	callstack 0
  2272   000005                     i2___wmul@product:
  2273                           	callstack 0
  2274                           
  2275                           ; 2 bytes @ 0x4
  2276   000005                     	ds	2
  2277   000007                     TMR0_ReadTimer@readValLow:
  2278                           	callstack 0
  2279                           
  2280                           ; 1 bytes @ 0x6
  2281   000007                     	ds	1
  2282   000008                     TMR0_ReadTimer@readValHigh:
  2283                           	callstack 0
  2284                           
  2285                           ; 1 bytes @ 0x7
  2286   000008                     	ds	1
  2287   000009                     i2TMR0_WriteTimer@timerVal:
  2288                           	callstack 0
  2289                           
  2290                           ; 2 bytes @ 0x8
  2291   000009                     	ds	2
  2292   00000B                     ??_rwTMR0ISR:
  2293   00000B                     
  2294                           ; 1 bytes @ 0xA
  2295   00000B                     	ds	2
  2296   00000D                     rwTMR0ISR@character:
  2297                           	callstack 0
  2298                           
  2299                           ; 1 bytes @ 0xC
  2300   00000D                     	ds	1
  2301   00000E                     ??_INTERRUPT_InterruptManager:
  2302                           
  2303                           ; 1 bytes @ 0xD
  2304   00000E                     	ds	6
  2305   000014                     ??_SPI2_Open:
  2306   000014                     ?_strlen:
  2307                           	callstack 0
  2308   000014                     ?_isdigit:
  2309                           	callstack 0
  2310   000014                     ?_strncmp:
  2311                           	callstack 0
  2312   000014                     ?_isspace:
  2313                           	callstack 0
  2314   000014                     ?___wmul:
  2315                           	callstack 0
  2316   000014                     ?___lodiv:
  2317                           	callstack 0
  2318   000014                     ?___lomod:
  2319                           	callstack 0
  2320   000014                     EUSART1_Write@txData:
  2321                           	callstack 0
  2322   000014                     SPI2_ExchangeByte@data:
  2323                           	callstack 0
  2324   000014                     TMR0_WriteTimer@timerVal:
  2325                           	callstack 0
  2326   000014                     TMR0_SetInterruptHandler@InterruptHandler:
  2327                           	callstack 0
  2328   000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
  2329                           	callstack 0
  2330   000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  2331                           	callstack 0
  2332   000014                     EUSART1_SetErrorHandler@interruptHandler:
  2333                           	callstack 0
  2334   000014                     TMR1_WriteTimer@timerVal:
  2335                           	callstack 0
  2336   000014                     ___wmul@multiplier:
  2337                           	callstack 0
  2338   000014                     isdigit@c:
  2339                           	callstack 0
  2340   000014                     isspace@c:
  2341                           	callstack 0
  2342   000014                     strlen@s:
  2343                           	callstack 0
  2344   000014                     strncmp@_l:
  2345                           	callstack 0
  2346   000014                     ___lodiv@dividend:
  2347                           	callstack 0
  2348   000014                     ___lomod@dividend:
  2349                           	callstack 0
  2350                           
  2351                           ; 8 bytes @ 0x13
  2352   000014                     	ds	1
  2353   000015                     putch@txData:
  2354                           	callstack 0
  2355   000015                     SPI2_Open@spi2UniqueConfiguration:
  2356                           	callstack 0
  2357   000015                     SDCARD_PollWriteComplete@status:
  2358                           	callstack 0
  2359   000015                     SDCARD_ReadBlock@addr:
  2360                           	callstack 0
  2361                           
  2362                           ; 4 bytes @ 0x14
  2363   000015                     	ds	1
  2364   000016                     ??_isdigit:
  2365   000016                     ??_isspace:
  2366   000016                     ??_TMR0_Initialize:
  2367   000016                     ___wmul@multiplicand:
  2368                           	callstack 0
  2369   000016                     fputc@c:
  2370                           	callstack 0
  2371   000016                     strlen@a:
  2372                           	callstack 0
  2373   000016                     strncmp@_r:
  2374                           	callstack 0
  2375                           
  2376                           ; 2 bytes @ 0x15
  2377   000016                     	ds	2
  2378   000018                     _isspace$2088:
  2379                           	callstack 0
  2380   000018                     ___wmul@product:
  2381                           	callstack 0
  2382   000018                     fputc@fp:
  2383                           	callstack 0
  2384   000018                     strncmp@n:
  2385                           	callstack 0
  2386                           
  2387                           ; 2 bytes @ 0x17
  2388   000018                     	ds	1
  2389   000019                     SDCARD_ReadBlock@sdCardBuffer:
  2390                           	callstack 0
  2391                           
  2392                           ; 2 bytes @ 0x18
  2393   000019                     	ds	1
  2394   00001A                     ??_fputc:
  2395   00001A                     ??_strncmp:
  2396   00001A                     ?_atoi:
  2397                           	callstack 0
  2398   00001A                     atoi@s:
  2399                           	callstack 0
  2400   00001A                     SDCARD_WriteBlock@addr:
  2401                           	callstack 0
  2402                           
  2403                           ; 4 bytes @ 0x19
  2404   00001A                     	ds	1
  2405   00001B                     SDCARD_ReadBlock@i:
  2406                           	callstack 0
  2407   00001B                     strncmp@l:
  2408                           	callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x1A
  2411   00001B                     	ds	1
  2412   00001C                     ??_atoi:
  2413   00001C                     ___lodiv@divisor:
  2414                           	callstack 0
  2415   00001C                     ___lomod@divisor:
  2416                           	callstack 0
  2417                           
  2418                           ; 8 bytes @ 0x1B
  2419   00001C                     	ds	1
  2420   00001D                     strncmp@r:
  2421                           	callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x1C
  2424   00001D                     	ds	1
  2425   00001E                     SDCARD_WriteBlock@sdCardBuffer:
  2426                           	callstack 0
  2427                           
  2428                           ; 2 bytes @ 0x1D
  2429   00001E                     	ds	1
  2430   00001F                     ctoa@fp:
  2431                           	callstack 0
  2432   00001F                     stoa@fp:
  2433                           	callstack 0
  2434   00001F                     atoi@neg:
  2435                           	callstack 0
  2436   00001F                     fputs@s:
  2437                           	callstack 0
  2438                           
  2439                           ; 2 bytes @ 0x1E
  2440   00001F                     	ds	1
  2441   000020                     SDCARD_WriteBlock@i:
  2442                           	callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x1F
  2445   000020                     	ds	1
  2446   000021                     ctoa@c:
  2447                           	callstack 0
  2448   000021                     stoa@s:
  2449                           	callstack 0
  2450   000021                     atoi@n:
  2451                           	callstack 0
  2452   000021                     fputs@fp:
  2453                           	callstack 0
  2454                           
  2455                           ; 2 bytes @ 0x20
  2456   000021                     	ds	1
  2457   000022                     ??_ctoa:
  2458                           
  2459                           ; 1 bytes @ 0x21
  2460   000022                     	ds	1
  2461   000023                     ??_stoa:
  2462   000023                     fputs@c:
  2463                           	callstack 0
  2464   000023                     ctoa@l:
  2465                           	callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x22
  2468   000023                     	ds	1
  2469   000024                     ___lomod@counter:
  2470                           	callstack 0
  2471   000024                     fputs@i:
  2472                           	callstack 0
  2473   000024                     stoa@nuls:
  2474                           	callstack 0
  2475   000024                     ___lodiv@quotient:
  2476                           	callstack 0
  2477                           
  2478                           ; 8 bytes @ 0x23
  2479   000024                     	ds	1
  2480   000025                     ctoa@w:
  2481                           	callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x24
  2484   000025                     	ds	1
  2485   000026                     pad@fp:
  2486                           	callstack 0
  2487                           
  2488                           ; 2 bytes @ 0x25
  2489   000026                     	ds	2
  2490   000028                     pad@buf:
  2491                           	callstack 0
  2492                           
  2493                           ; 2 bytes @ 0x27
  2494   000028                     	ds	2
  2495   00002A                     pad@p:
  2496                           	callstack 0
  2497                           
  2498                           ; 2 bytes @ 0x29
  2499   00002A                     	ds	1
  2500   00002B                     stoa@i:
  2501                           	callstack 0
  2502                           
  2503                           ; 2 bytes @ 0x2A
  2504   00002B                     	ds	1
  2505   00002C                     ??_pad:
  2506   00002C                     ___lodiv@counter:
  2507                           	callstack 0
  2508                           
  2509                           ; 1 bytes @ 0x2B
  2510   00002C                     	ds	1
  2511   00002D                     pad@i:
  2512                           	callstack 0
  2513   00002D                     stoa@w:
  2514                           	callstack 0
  2515                           
  2516                           ; 2 bytes @ 0x2C
  2517   00002D                     	ds	2
  2518   00002F                     pad@w:
  2519                           	callstack 0
  2520   00002F                     stoa@cp:
  2521                           	callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x2E
  2524   00002F                     	ds	2
  2525   000031                     stoa@p:
  2526                           	callstack 0
  2527                           
  2528                           ; 2 bytes @ 0x30
  2529   000031                     	ds	2
  2530   000033                     stoa@l:
  2531                           	callstack 0
  2532                           
  2533                           ; 2 bytes @ 0x32
  2534   000033                     	ds	2
  2535   000035                     vfprintf@cfmt:
  2536                           	callstack 0
  2537                           
  2538                           ; 2 bytes @ 0x34
  2539   000035                     	ds	2
  2540   000037                     
  2541                           ; 1 bytes @ 0x36
  2542 ;;
  2543 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2544 ;;
  2545 ;; *************** function _main *****************
  2546 ;; Defined at:
  2547 ;;		line 54 in file "main.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;  sin            26    0[BANK1 ] const unsigned char [26]
  2552 ;;  address         4   35[BANK1 ] unsigned long 
  2553 ;;  currentAddre    4   31[BANK1 ] unsigned long 
  2554 ;;  i               2   39[BANK1 ] unsigned short 
  2555 ;;  j               2   29[BANK1 ] unsigned short 
  2556 ;;  si              1   28[BANK1 ] unsigned char 
  2557 ;;  cmd             1   27[BANK1 ] unsigned char 
  2558 ;;  status          1   26[BANK1 ] unsigned char 
  2559 ;; Return value:  Size  Location     Type
  2560 ;;                  1    wreg      void 
  2561 ;; Registers used:
  2562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2563 ;; Tracked objects:
  2564 ;;		On entry : 0/0
  2565 ;;		On exit  : 0/0
  2566 ;;		Unchanged: 0/0
  2567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2568 ;;      Params:         0       0       0       0       0       0       0
  2569 ;;      Locals:         0       0      41       0       0       0       0
  2570 ;;      Temps:          0       2       0       0       0       0       0
  2571 ;;      Totals:         0       2      41       0       0       0       0
  2572 ;;Total ram usage:       43 bytes
  2573 ;; Hardware stack levels required when called: 14
  2574 ;; This function calls:
  2575 ;;		_EUSART1_Read
  2576 ;;		_EUSART1_is_rx_ready
  2577 ;;		_SDCARD_Initialize
  2578 ;;		_SDCARD_PollWriteComplete
  2579 ;;		_SDCARD_ReadBlock
  2580 ;;		_SDCARD_WriteBlock
  2581 ;;		_SPI2_Close
  2582 ;;		_SPI2_Open
  2583 ;;		_SYSTEM_Initialize
  2584 ;;		_TMR0_SetInterruptHandler
  2585 ;;		_TMR0_WriteTimer
  2586 ;;		_TMR1_WriteTimer
  2587 ;;		___wmul
  2588 ;;		_hexDumpBuffer
  2589 ;;		_printf
  2590 ;; This function is called by:
  2591 ;;		Startup code after reset
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text0
  2596   000062                     __ptext0:
  2597                           	callstack 0
  2598   000062                     _main:
  2599                           	callstack 17
  2600   000062                     
  2601                           ;main.c: 57: ;main.c: 58:     for (;;)
  2602   000062  0E00               	movlw	0
  2603   000064  0101               	movlb	1	; () banked
  2604   000066  6F23               	movwf	main@address& (0+255),b
  2605   000068  0E00               	movlw	0
  2606   00006A  6F24               	movwf	(main@address+1)& (0+255),b
  2607   00006C  0E00               	movlw	0
  2608   00006E  6F25               	movwf	(main@address+2)& (0+255),b
  2609   000070  0E00               	movlw	0
  2610   000072  6F26               	movwf	(main@address+3)& (0+255),b
  2611                           
  2612                           ;main.c: 60:         if ((EUSART1_is_rx_ready()))
  2613   000074  0E00               	movlw	0
  2614   000076  6F28               	movwf	(main@i+1)& (0+255),b
  2615   000078  0E00               	movlw	0
  2616   00007A  6F27               	movwf	main@i& (0+255),b
  2617                           
  2618                           ;main.c: 61:         {
  2619   00007C  0E00               	movlw	0
  2620   00007E  6F1E               	movwf	(main@j+1)& (0+255),b
  2621   000080  0E00               	movlw	0
  2622   000082  6F1D               	movwf	main@j& (0+255),b
  2623                           
  2624                           ;main.c: 62:             cmd = EUSART1_Read();
  2625   000084  0E00               	movlw	0
  2626   000086  6F1A               	movwf	main@status& (0+255),b
  2627   000088                     
  2628                           ; BSR set to: 1
  2629                           ;main.c: 63:             printf("%c\n\r", cmd);
  2630   000088  0EA1               	movlw	low main@F6191
  2631   00008A  6EF6               	movwf	tblptrl,c
  2632   00008C                     	if	1	;There is more than 1 active tblptr byte
  2633   00008C  0E79               	movlw	high main@F6191
  2634   00008E  6EF7               	movwf	tblptrh,c
  2635   000090                     	endif
  2636   000090                     	if	0	;There are less than 3 active tblptr bytes
  2637   000090                     	endif
  2638   000090  EE21  F000         	lfsr	2,main@sin
  2639   000094  0E19               	movlw	25
  2640   000096                     u4010:
  2641   000096  0009               	tblrd		*+
  2642   000098  CFF5 FFDE          	movff	tablat,postinc2
  2643   00009C  06E8               	decf	wreg,f,c
  2644   00009E  E2FB               	bc	u4010
  2645   0000A0                     
  2646                           ; BSR set to: 1
  2647                           ;main.c: 64: 
  2648   0000A0  0E00               	movlw	0
  2649   0000A2  6F1C               	movwf	main@si& (0+255),b
  2650   0000A4                     
  2651                           ; BSR set to: 1
  2652                           ;main.c: 66:             {
  2653   0000A4  EC4D  F013         	call	_SYSTEM_Initialize	;wreg free
  2654   0000A8  888A               	bsf	138,4,c	;volatile
  2655   0000AA                     
  2656                           ;main.c: 70:                     printf("?: help menu\n\r");
  2657   0000AA  0E00               	movlw	0
  2658   0000AC  6E15               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2659   0000AE  0E00               	movlw	0
  2660   0000B0  6E14               	movwf	TMR0_WriteTimer@timerVal^0,c
  2661   0000B2  ECC4  F013         	call	_TMR0_WriteTimer	;wreg free
  2662   0000B6                     
  2663                           ;main.c: 71:                     printf("o: k\n\r");
  2664   0000B6  94F2               	bcf	242,2,c	;volatile
  2665   0000B8                     l432:
  2666   0000B8  A4F2               	btfss	242,2,c	;volatile
  2667   0000BA  EF61  F000         	goto	u4021
  2668   0000BE  EF63  F000         	goto	u4020
  2669   0000C2                     u4021:
  2670   0000C2  EF5C  F000         	goto	l432
  2671   0000C6                     u4020:
  2672   0000C6                     
  2673                           ;main.c: 74:                     printf("-----------------------------------------------
      +                          --\n\r");
  2674   0000C6  0E6A               	movlw	low _rwTMR0ISR
  2675   0000C8  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2676   0000CA  0E1F               	movlw	high _rwTMR0ISR
  2677   0000CC  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2678   0000CE  ECC9  F013         	call	_TMR0_SetInterruptHandler	;wreg free
  2679   0000D2                     
  2680                           ;main.c: 75:                     printf("i: Initialize SD card\n\r");
  2681   0000D2  8EF2               	bsf	242,7,c	;volatile
  2682   0000D4                     
  2683                           ;main.c: 76:                     printf("-----------------------------------------------
      +                          --\n\r");
  2684   0000D4  8CF2               	bsf	242,6,c	;volatile
  2685   0000D6                     
  2686                           ;main.c: 78:                     printf("r: read a block of 512 bytes from SD card\n\r")
      +                          ;
  2687   0000D6  ECE9  F013         	call	_SPI2_Close	;wreg free
  2688   0000DA                     
  2689                           ;main.c: 79:                     printf("0: zero to 128 blocks\n\r");
  2690   0000DA  0E00               	movlw	0
  2691   0000DC  ECF9  F010         	call	_SPI2_Open
  2692   0000E0                     
  2693                           ;main.c: 81:                     printf("-----------------------------------------------
      +                          --\n\r");
  2694   0000E0  0E94               	movlw	low STR_1
  2695   0000E2  0100               	movlb	0	; () banked
  2696   0000E4  6FA2               	movwf	printf@fmt& (0+255),b
  2697   0000E6  0E7F               	movlw	high STR_1
  2698   0000E8  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2699   0000EA  ECFF  F012         	call	_printf	;wreg free
  2700   0000EE                     
  2701                           ;main.c: 82:                     printf("+/-: Increase/Decrease the sample rate by 10 us
      +                          \n\r");
  2702   0000EE  0E12               	movlw	low STR_2
  2703   0000F0  0100               	movlb	0	; () banked
  2704   0000F2  6FA2               	movwf	printf@fmt& (0+255),b
  2705   0000F4  0E7F               	movlw	high STR_2
  2706   0000F6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2707   0000F8  ECFF  F012         	call	_printf	;wreg free
  2708   0000FC                     
  2709                           ;main.c: 83:                     printf("W: Write microphone => SD card at 1600 us\n\r")
      +                          ;
  2710   0000FC  0EB6               	movlw	low STR_3
  2711   0000FE  0100               	movlb	0	; () banked
  2712   000100  6FA2               	movwf	printf@fmt& (0+255),b
  2713   000102  0E7F               	movlw	high STR_3
  2714   000104  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2715   000106  ECFF  F012         	call	_printf	;wreg free
  2716   00010A                     
  2717                           ;main.c: 84:                     printf("s: spool memory to a csv file\n\r");
  2718   00010A  0E72               	movlw	low STR_4
  2719   00010C  0100               	movlb	0	; () banked
  2720   00010E  6FA2               	movwf	printf@fmt& (0+255),b
  2721   000110  0E7C               	movlw	high STR_4
  2722   000112  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2723   000114  ECFF  F012         	call	_printf	;wreg free
  2724   000118                     l4980:
  2725                           
  2726                           ;main.c: 88:                 case 'o':;main.c: 89:                     printf("o:  ok\r\
      +                          n");
  2727   000118  ECAC  F013         	call	_EUSART1_is_rx_ready	;wreg free
  2728   00011C  0900               	iorlw	0
  2729   00011E  B4D8               	btfsc	status,2,c
  2730   000120  EF94  F000         	goto	u4031
  2731   000124  EF96  F000         	goto	u4030
  2732   000128                     u4031:
  2733   000128  EF8C  F000         	goto	l4980
  2734   00012C                     u4030:
  2735   00012C                     
  2736                           ;main.c: 90:                     break;;main.c: 91: 
  2737   00012C  EC13  F013         	call	_EUSART1_Read	;wreg free
  2738   000130  0101               	movlb	1	; () banked
  2739   000132  6F1B               	movwf	main@cmd& (0+255),b
  2740   000134                     
  2741                           ; BSR set to: 1
  2742                           ;main.c: 92:                 case 'Z':
  2743   000134  0EE2               	movlw	low STR_5
  2744   000136  0100               	movlb	0	; () banked
  2745   000138  6FA2               	movwf	printf@fmt& (0+255),b
  2746   00013A  0E7F               	movlw	high STR_5
  2747   00013C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2748   00013E  C11B  F0A4         	movff	main@cmd,?_printf+2
  2749   000142  6BA5               	clrf	(?_printf+3)& (0+255),b
  2750   000144  ECFF  F012         	call	_printf	;wreg free
  2751                           
  2752                           ;main.c: 94:                     __asm("reset");
  2753   000148  EF7F  F006         	goto	l5266
  2754   00014C                     l4986:
  2755                           
  2756                           ; BSR set to: 0
  2757                           ;main.c: 98:                     for (i = 0; i < 40; i++) printf("\n");
  2758   00014C  0EBE               	movlw	low STR_6
  2759   00014E  6FA2               	movwf	printf@fmt& (0+255),b
  2760   000150  0E7A               	movlw	high STR_6
  2761   000152  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2762   000154  ECFF  F012         	call	_printf	;wreg free
  2763                           
  2764                           ;main.c: 99:                     break;
  2765   000158  0E76               	movlw	low STR_7
  2766   00015A  0100               	movlb	0	; () banked
  2767   00015C  6FA2               	movwf	printf@fmt& (0+255),b
  2768   00015E  0E7F               	movlw	high STR_7
  2769   000160  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2770   000162  ECFF  F012         	call	_printf	;wreg free
  2771                           
  2772                           ;main.c: 100: 
  2773   000166  0EC8               	movlw	low STR_8
  2774   000168  0100               	movlb	0	; () banked
  2775   00016A  6FA2               	movwf	printf@fmt& (0+255),b
  2776   00016C  0E7F               	movlw	high STR_8
  2777   00016E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2778   000170  ECFF  F012         	call	_printf	;wreg free
  2779                           
  2780                           ;main.c: 101:                 case 'i':
  2781   000174  0E9B               	movlw	low STR_9
  2782   000176  0100               	movlb	0	; () banked
  2783   000178  6FA2               	movwf	printf@fmt& (0+255),b
  2784   00017A  0E7E               	movlw	high STR_9
  2785   00017C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2786   00017E  ECFF  F012         	call	_printf	;wreg free
  2787                           
  2788                           ;main.c: 102: 
  2789   000182  0E3E               	movlw	low STR_10
  2790   000184  0100               	movlb	0	; () banked
  2791   000186  6FA2               	movwf	printf@fmt& (0+255),b
  2792   000188  0E7E               	movlw	high STR_10
  2793   00018A  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2794   00018C  ECFF  F012         	call	_printf	;wreg free
  2795                           
  2796                           ;main.c: 103:                     SPI2_Close();
  2797   000190  0EF4               	movlw	low STR_11
  2798   000192  0100               	movlb	0	; () banked
  2799   000194  6FA2               	movwf	printf@fmt& (0+255),b
  2800   000196  0E7A               	movlw	high STR_11
  2801   000198  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2802   00019A  ECFF  F012         	call	_printf	;wreg free
  2803                           
  2804                           ;main.c: 104:                     SPI2_Open(SPI2_DEFAULT);
  2805   00019E  0E26               	movlw	low STR_12
  2806   0001A0  0100               	movlb	0	; () banked
  2807   0001A2  6FA2               	movwf	printf@fmt& (0+255),b
  2808   0001A4  0E7E               	movlw	high STR_12
  2809   0001A6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2810   0001A8  ECFF  F012         	call	_printf	;wreg free
  2811                           
  2812                           ;main.c: 105:                     SDCARD_Initialize(1);
  2813   0001AC  0EF4               	movlw	low STR_11
  2814   0001AE  0100               	movlb	0	; () banked
  2815   0001B0  6FA2               	movwf	printf@fmt& (0+255),b
  2816   0001B2  0E7A               	movlw	high STR_11
  2817   0001B4  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2818   0001B6  ECFF  F012         	call	_printf	;wreg free
  2819                           
  2820                           ;main.c: 106:                     break;
  2821   0001BA  0EE6               	movlw	low STR_14
  2822   0001BC  0100               	movlb	0	; () banked
  2823   0001BE  6FA2               	movwf	printf@fmt& (0+255),b
  2824   0001C0  0E7C               	movlw	high STR_14
  2825   0001C2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2826   0001C4  ECFF  F012         	call	_printf	;wreg free
  2827                           
  2828                           ;main.c: 107: 
  2829   0001C8  0EEF               	movlw	low STR_15
  2830   0001CA  0100               	movlb	0	; () banked
  2831   0001CC  6FA2               	movwf	printf@fmt& (0+255),b
  2832   0001CE  0E7B               	movlw	high STR_15
  2833   0001D0  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2834   0001D2  ECFF  F012         	call	_printf	;wreg free
  2835                           
  2836                           ;main.c: 108:                 case 'a':
  2837   0001D6  0E56               	movlw	low STR_16
  2838   0001D8  0100               	movlb	0	; () banked
  2839   0001DA  6FA2               	movwf	printf@fmt& (0+255),b
  2840   0001DC  0E7E               	movlw	high STR_16
  2841   0001DE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2842   0001E0  ECFF  F012         	call	_printf	;wreg free
  2843                           
  2844                           ;main.c: 109: 
  2845   0001E4  0E28               	movlw	low STR_17
  2846   0001E6  0100               	movlb	0	; () banked
  2847   0001E8  6FA2               	movwf	printf@fmt& (0+255),b
  2848   0001EA  0E7B               	movlw	high STR_17
  2849   0001EC  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2850   0001EE  ECFF  F012         	call	_printf	;wreg free
  2851                           
  2852                           ;main.c: 110:                     address -= 512;
  2853   0001F2  0EF4               	movlw	low STR_11
  2854   0001F4  0100               	movlb	0	; () banked
  2855   0001F6  6FA2               	movwf	printf@fmt& (0+255),b
  2856   0001F8  0E7A               	movlw	high STR_11
  2857   0001FA  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2858   0001FC  ECFF  F012         	call	_printf	;wreg free
  2859                           
  2860                           ;main.c: 111:                     if (address >= 0x04000000)
  2861   000200  0E5C               	movlw	low STR_19
  2862   000202  0100               	movlb	0	; () banked
  2863   000204  6FA2               	movwf	printf@fmt& (0+255),b
  2864   000206  0E7B               	movlw	high STR_19
  2865   000208  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2866   00020A  ECFF  F012         	call	_printf	;wreg free
  2867                           
  2868                           ;main.c: 112:                     {
  2869   00020E  0E1B               	movlw	low STR_20
  2870   000210  0100               	movlb	0	; () banked
  2871   000212  6FA2               	movwf	printf@fmt& (0+255),b
  2872   000214  0E7C               	movlw	high STR_20
  2873   000216  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2874   000218  ECFF  F012         	call	_printf	;wreg free
  2875                           
  2876                           ;main.c: 113:                         printf("Underflowed to high address\r\n");
  2877   00021C  0E2C               	movlw	low STR_21
  2878   00021E  0100               	movlb	0	; () banked
  2879   000220  6FA2               	movwf	printf@fmt& (0+255),b
  2880   000222  0E7D               	movlw	high STR_21
  2881   000224  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2882   000226  ECFF  F012         	call	_printf	;wreg free
  2883                           
  2884                           ;main.c: 114:                         address = 0x04000000 - 512;
  2885   00022A  0EC0               	movlw	low (STR_6+2)
  2886   00022C  0100               	movlb	0	; () banked
  2887   00022E  6FA2               	movwf	printf@fmt& (0+255),b
  2888   000230  0E7A               	movlw	high (STR_6+2)
  2889   000232  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2890   000234  ECFF  F012         	call	_printf	;wreg free
  2891                           
  2892                           ;main.c: 115:                     }
  2893   000238  EFCA  F006         	goto	l5268
  2894   00023C                     l4988:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;main.c: 118:                         printf("Decreased address\r\n");
  2898   00023C  0EBF               	movlw	low STR_23
  2899   00023E  6FA2               	movwf	printf@fmt& (0+255),b
  2900   000240  0E7F               	movlw	high STR_23
  2901   000242  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2902   000244  ECFF  F012         	call	_printf	;wreg free
  2903                           
  2904                           ;main.c: 119:                     }
  2905   000248  EFCA  F006         	goto	l5268
  2906   00024C                     l4990:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;main.c: 122:                     printf("SD card address:  ");
  2910   00024C  0E00               	movlw	0
  2911   00024E  0101               	movlb	1	; () banked
  2912   000250  6F28               	movwf	(main@i+1)& (0+255),b
  2913   000252  0E00               	movlw	0
  2914   000254  6F27               	movwf	main@i& (0+255),b
  2915   000256                     l4996:
  2916                           
  2917                           ; BSR set to: 1
  2918   000256  0EF7               	movlw	low (STR_94+2)
  2919   000258  0100               	movlb	0	; () banked
  2920   00025A  6FA2               	movwf	printf@fmt& (0+255),b
  2921   00025C  0E7F               	movlw	high (STR_94+2)
  2922   00025E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2923   000260  ECFF  F012         	call	_printf	;wreg free
  2924   000264  0101               	movlb	1	; () banked
  2925   000266  4B27               	infsnz	main@i& (0+255),f,b
  2926   000268  2B28               	incf	(main@i+1)& (0+255),f,b
  2927   00026A                     
  2928                           ; BSR set to: 1
  2929   00026A  5128               	movf	(main@i+1)& (0+255),w,b
  2930   00026C  E109               	bnz	u4040
  2931   00026E  0E28               	movlw	40
  2932   000270  5D27               	subwf	main@i& (0+255),w,b
  2933   000272  A0D8               	btfss	status,0,c
  2934   000274  EF3E  F001         	goto	u4041
  2935   000278  EF40  F001         	goto	u4040
  2936   00027C                     u4041:
  2937   00027C  EF2B  F001         	goto	l4996
  2938   000280                     u4040:
  2939   000280                     
  2940                           ; BSR set to: 1
  2941   000280  00FF               	reset		;# 
  2942                           
  2943                           ;main.c: 124:                     printf(":");
  2944   000282  EFCA  F006         	goto	l5268
  2945   000286                     l5002:
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;main.c: 127:                     break;
  2949   000286  0E00               	movlw	0
  2950   000288  0101               	movlb	1	; () banked
  2951   00028A  6F28               	movwf	(main@i+1)& (0+255),b
  2952   00028C  0E00               	movlw	0
  2953   00028E  6F27               	movwf	main@i& (0+255),b
  2954   000290                     l5008:
  2955                           
  2956                           ; BSR set to: 1
  2957   000290  0EF7               	movlw	low (STR_94+2)
  2958   000292  0100               	movlb	0	; () banked
  2959   000294  6FA2               	movwf	printf@fmt& (0+255),b
  2960   000296  0E7F               	movlw	high (STR_94+2)
  2961   000298  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  2962   00029A  ECFF  F012         	call	_printf	;wreg free
  2963   00029E  0101               	movlb	1	; () banked
  2964   0002A0  4B27               	infsnz	main@i& (0+255),f,b
  2965   0002A2  2B28               	incf	(main@i+1)& (0+255),f,b
  2966   0002A4                     
  2967                           ; BSR set to: 1
  2968   0002A4  5128               	movf	(main@i+1)& (0+255),w,b
  2969   0002A6  E109               	bnz	u4050
  2970   0002A8  0E28               	movlw	40
  2971   0002AA  5D27               	subwf	main@i& (0+255),w,b
  2972   0002AC  A0D8               	btfss	status,0,c
  2973   0002AE  EF5B  F001         	goto	u4051
  2974   0002B2  EF5D  F001         	goto	u4050
  2975   0002B6                     u4051:
  2976   0002B6  EF48  F001         	goto	l5008
  2977   0002BA                     u4050:
  2978   0002BA  EFCA  F006         	goto	l5268
  2979   0002BE                     l5014:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;main.c: 132:                     {
  2983   0002BE  ECE9  F013         	call	_SPI2_Close	;wreg free
  2984   0002C2                     
  2985                           ;main.c: 133:                         printf("Overflowed to low address\r\n");
  2986   0002C2  0E00               	movlw	0
  2987   0002C4  ECF9  F010         	call	_SPI2_Open
  2988   0002C8                     
  2989                           ;main.c: 134:                         address = 0x00000000;
  2990   0002C8  0E01               	movlw	1
  2991   0002CA  ECA1  F00C         	call	_SDCARD_Initialize
  2992                           
  2993                           ;main.c: 135:                     }
  2994   0002CE  EFCA  F006         	goto	l5268
  2995   0002D2                     l5020:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;main.c: 139:                     }
  2999   0002D2  0E00               	movlw	0
  3000   0002D4  0101               	movlb	1	; () banked
  3001   0002D6  5F23               	subwf	main@address& (0+255),f,b
  3002   0002D8  0E02               	movlw	2
  3003   0002DA  5B24               	subwfb	(main@address+1)& (0+255),f,b
  3004   0002DC  0E00               	movlw	0
  3005   0002DE  5B25               	subwfb	(main@address+2)& (0+255),f,b
  3006   0002E0  0E00               	movlw	0
  3007   0002E2  5B26               	subwfb	(main@address+3)& (0+255),f,b
  3008                           
  3009                           ;main.c: 140: 
  3010   0002E4  0E04               	movlw	4
  3011   0002E6  5D26               	subwf	(main@address+3)& (0+255),w,b
  3012   0002E8  A0D8               	btfss	status,0,c
  3013   0002EA  EF79  F001         	goto	u4061
  3014   0002EE  EF7B  F001         	goto	u4060
  3015   0002F2                     u4061:
  3016   0002F2  EF8D  F001         	goto	l5026
  3017   0002F6                     u4060:
  3018   0002F6                     
  3019                           ; BSR set to: 1
  3020                           ;main.c: 141: ;main.c: 142:                     printf("SD card address:  ");
  3021   0002F6  0E4C               	movlw	low STR_26
  3022   0002F8  0100               	movlb	0	; () banked
  3023   0002FA  6FA2               	movwf	printf@fmt& (0+255),b
  3024   0002FC  0E7D               	movlw	high STR_26
  3025   0002FE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3026   000300  ECFF  F012         	call	_printf	;wreg free
  3027   000304                     
  3028                           ;main.c: 143:                     printf("%04x", address >> 16);
  3029   000304  0E00               	movlw	0
  3030   000306  0101               	movlb	1	; () banked
  3031   000308  6F23               	movwf	main@address& (0+255),b
  3032   00030A  0EFE               	movlw	254
  3033   00030C  6F24               	movwf	(main@address+1)& (0+255),b
  3034   00030E  0EFF               	movlw	255
  3035   000310  6F25               	movwf	(main@address+2)& (0+255),b
  3036   000312  0E03               	movlw	3
  3037   000314  6F26               	movwf	(main@address+3)& (0+255),b
  3038                           
  3039                           ;main.c: 144:                     printf(":");
  3040   000316  EF94  F001         	goto	l450
  3041   00031A                     l5026:
  3042                           
  3043                           ; BSR set to: 1
  3044                           ;main.c: 146:                     printf("\r\n");;main.c: 147:                     break
      +                          ;
  3045   00031A  0EB0               	movlw	low STR_27
  3046   00031C  0100               	movlb	0	; () banked
  3047   00031E  6FA2               	movwf	printf@fmt& (0+255),b
  3048   000320  0E7E               	movlw	high STR_27
  3049   000322  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3050   000324  ECFF  F012         	call	_printf	;wreg free
  3051   000328                     l450:
  3052                           
  3053                           ;main.c: 151:                     SDCARD_ReadBlock(address, doubleBuffer[0]);
  3054   000328  0EFF               	movlw	low STR_28
  3055   00032A  0100               	movlb	0	; () banked
  3056   00032C  6FA2               	movwf	printf@fmt& (0+255),b
  3057   00032E  0E7E               	movlw	high STR_28
  3058   000330  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3059   000332  ECFF  F012         	call	_printf	;wreg free
  3060                           
  3061                           ;main.c: 152:                     do { LATCbits.LATC5 = 0; } while(0);
  3062   000336  0EEC               	movlw	low STR_29
  3063   000338  0100               	movlb	0	; () banked
  3064   00033A  6FA2               	movwf	printf@fmt& (0+255),b
  3065   00033C  0E7F               	movlw	high STR_29
  3066   00033E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3067   000340  C125  F0A4         	movff	main@address+2,?_printf+2
  3068   000344  C126  F0A5         	movff	main@address+3,?_printf+3
  3069   000348  6BA6               	clrf	(?_printf+4)& (0+255),b
  3070   00034A  6BA7               	clrf	(?_printf+5)& (0+255),b
  3071   00034C  ECFF  F012         	call	_printf	;wreg free
  3072                           
  3073                           ;main.c: 153:                     printf("Read block: \r\n");
  3074   000350  0E85               	movlw	low (STR_66+27)
  3075   000352  0100               	movlb	0	; () banked
  3076   000354  6FA2               	movwf	printf@fmt& (0+255),b
  3077   000356  0E7D               	movlw	high (STR_66+27)
  3078   000358  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3079   00035A  ECFF  F012         	call	_printf	;wreg free
  3080                           
  3081                           ;main.c: 154:                     printf("    Address:    ");
  3082   00035E  0EEC               	movlw	low STR_29
  3083   000360  0100               	movlb	0	; () banked
  3084   000362  6FA2               	movwf	printf@fmt& (0+255),b
  3085   000364  0E7F               	movlw	high STR_29
  3086   000366  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3087   000368  0EFF               	movlw	255
  3088   00036A  0101               	movlb	1	; () banked
  3089   00036C  1523               	andwf	main@address& (0+255),w,b
  3090   00036E  0100               	movlb	0	; () banked
  3091   000370  6FA4               	movwf	(?_printf+2)& (0+255),b
  3092   000372  0EFF               	movlw	255
  3093   000374  0101               	movlb	1	; () banked
  3094   000376  1524               	andwf	(main@address+1)& (0+255),w,b
  3095   000378  0100               	movlb	0	; () banked
  3096   00037A  6FA5               	movwf	(?_printf+3)& (0+255),b
  3097   00037C  0E00               	movlw	0
  3098   00037E  0101               	movlb	1	; () banked
  3099   000380  1525               	andwf	(main@address+2)& (0+255),w,b
  3100   000382  0100               	movlb	0	; () banked
  3101   000384  6FA6               	movwf	(?_printf+4)& (0+255),b
  3102   000386  0E00               	movlw	0
  3103   000388  0101               	movlb	1	; () banked
  3104   00038A  1526               	andwf	(main@address+3)& (0+255),w,b
  3105   00038C  0100               	movlb	0	; () banked
  3106   00038E  6FA7               	movwf	(?_printf+5)& (0+255),b
  3107   000390  ECFF  F012         	call	_printf	;wreg free
  3108                           
  3109                           ;main.c: 155:                     printf("%04x", address >> 16);
  3110   000394  0E73               	movlw	low (STR_40+12)
  3111   000396  0100               	movlb	0	; () banked
  3112   000398  6FA2               	movwf	printf@fmt& (0+255),b
  3113   00039A  0E7F               	movlw	high (STR_40+12)
  3114   00039C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3115   00039E  ECFF  F012         	call	_printf	;wreg free
  3116                           
  3117                           ;main.c: 156:                     printf(":");
  3118   0003A2  EFCA  F006         	goto	l5268
  3119   0003A6                     l5028:
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;main.c: 159:                     hexDumpBuffer(doubleBuffer[0]);
  3123   0003A6  0E00               	movlw	0
  3124   0003A8  0101               	movlb	1	; () banked
  3125   0003AA  2723               	addwf	main@address& (0+255),f,b
  3126   0003AC  0E02               	movlw	2
  3127   0003AE  2324               	addwfc	(main@address+1)& (0+255),f,b
  3128   0003B0  0E00               	movlw	0
  3129   0003B2  2325               	addwfc	(main@address+2)& (0+255),f,b
  3130   0003B4  0E00               	movlw	0
  3131   0003B6  2326               	addwfc	(main@address+3)& (0+255),f,b
  3132                           
  3133                           ;main.c: 160:                     break;
  3134   0003B8  0E04               	movlw	4
  3135   0003BA  5D26               	subwf	(main@address+3)& (0+255),w,b
  3136   0003BC  A0D8               	btfss	status,0,c
  3137   0003BE  EFE3  F001         	goto	u4071
  3138   0003C2  EFE5  F001         	goto	u4070
  3139   0003C6                     u4071:
  3140   0003C6  EFF7  F001         	goto	l5034
  3141   0003CA                     u4070:
  3142   0003CA                     
  3143                           ; BSR set to: 1
  3144                           ;main.c: 161:                 case 'w':;main.c: 162:                     for (i = 0; i <
      +                           512; i++) doubleBuffer[0][i] = 255 - i;
  3145   0003CA  0EA3               	movlw	low STR_33
  3146   0003CC  0100               	movlb	0	; () banked
  3147   0003CE  6FA2               	movwf	printf@fmt& (0+255),b
  3148   0003D0  0E7D               	movlw	high STR_33
  3149   0003D2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3150   0003D4  ECFF  F012         	call	_printf	;wreg free
  3151   0003D8                     
  3152                           ;main.c: 163:                     do { LATCbits.LATC4 = 1; } while(0);
  3153   0003D8  0E00               	movlw	0
  3154   0003DA  0101               	movlb	1	; () banked
  3155   0003DC  6F23               	movwf	main@address& (0+255),b
  3156   0003DE  0E00               	movlw	0
  3157   0003E0  6F24               	movwf	(main@address+1)& (0+255),b
  3158   0003E2  0E00               	movlw	0
  3159   0003E4  6F25               	movwf	(main@address+2)& (0+255),b
  3160   0003E6  0E00               	movlw	0
  3161   0003E8  6F26               	movwf	(main@address+3)& (0+255),b
  3162                           
  3163                           ;main.c: 164:                     SDCARD_WriteBlock(address, doubleBuffer[0]);
  3164   0003EA  EFFE  F001         	goto	l453
  3165   0003EE                     l5034:
  3166                           
  3167                           ; BSR set to: 1
  3168                           ;main.c: 166:                     do { LATCbits.LATC4 = 0; } while(0);;main.c: 167: 
  3169   0003EE  0EC4               	movlw	low STR_34
  3170   0003F0  0100               	movlb	0	; () banked
  3171   0003F2  6FA2               	movwf	printf@fmt& (0+255),b
  3172   0003F4  0E7E               	movlw	high STR_34
  3173   0003F6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3174   0003F8  ECFF  F012         	call	_printf	;wreg free
  3175   0003FC                     l453:
  3176                           
  3177                           ;main.c: 171:                     printf(":");
  3178   0003FC  0EFF               	movlw	low STR_28
  3179   0003FE  0100               	movlb	0	; () banked
  3180   000400  6FA2               	movwf	printf@fmt& (0+255),b
  3181   000402  0E7E               	movlw	high STR_28
  3182   000404  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3183   000406  ECFF  F012         	call	_printf	;wreg free
  3184                           
  3185                           ;main.c: 172:                     printf("%04x", address & 0X0000FFFF);
  3186   00040A  0EEC               	movlw	low STR_29
  3187   00040C  0100               	movlb	0	; () banked
  3188   00040E  6FA2               	movwf	printf@fmt& (0+255),b
  3189   000410  0E7F               	movlw	high STR_29
  3190   000412  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3191   000414  C125  F0A4         	movff	main@address+2,?_printf+2
  3192   000418  C126  F0A5         	movff	main@address+3,?_printf+3
  3193   00041C  6BA6               	clrf	(?_printf+4)& (0+255),b
  3194   00041E  6BA7               	clrf	(?_printf+5)& (0+255),b
  3195   000420  ECFF  F012         	call	_printf	;wreg free
  3196                           
  3197                           ;main.c: 173:                     printf("\r\n");
  3198   000424  0E85               	movlw	low (STR_66+27)
  3199   000426  0100               	movlb	0	; () banked
  3200   000428  6FA2               	movwf	printf@fmt& (0+255),b
  3201   00042A  0E7D               	movlw	high (STR_66+27)
  3202   00042C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3203   00042E  ECFF  F012         	call	_printf	;wreg free
  3204                           
  3205                           ;main.c: 174:                     printf("    Status:     %02x\r\n", status);
  3206   000432  0EEC               	movlw	low STR_29
  3207   000434  0100               	movlb	0	; () banked
  3208   000436  6FA2               	movwf	printf@fmt& (0+255),b
  3209   000438  0E7F               	movlw	high STR_29
  3210   00043A  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3211   00043C  0EFF               	movlw	255
  3212   00043E  0101               	movlb	1	; () banked
  3213   000440  1523               	andwf	main@address& (0+255),w,b
  3214   000442  0100               	movlb	0	; () banked
  3215   000444  6FA4               	movwf	(?_printf+2)& (0+255),b
  3216   000446  0EFF               	movlw	255
  3217   000448  0101               	movlb	1	; () banked
  3218   00044A  1524               	andwf	(main@address+1)& (0+255),w,b
  3219   00044C  0100               	movlb	0	; () banked
  3220   00044E  6FA5               	movwf	(?_printf+3)& (0+255),b
  3221   000450  0E00               	movlw	0
  3222   000452  0101               	movlb	1	; () banked
  3223   000454  1525               	andwf	(main@address+2)& (0+255),w,b
  3224   000456  0100               	movlb	0	; () banked
  3225   000458  6FA6               	movwf	(?_printf+4)& (0+255),b
  3226   00045A  0E00               	movlw	0
  3227   00045C  0101               	movlb	1	; () banked
  3228   00045E  1526               	andwf	(main@address+3)& (0+255),w,b
  3229   000460  0100               	movlb	0	; () banked
  3230   000462  6FA7               	movwf	(?_printf+5)& (0+255),b
  3231   000464  ECFF  F012         	call	_printf	;wreg free
  3232                           
  3233                           ;main.c: 175:                     break;
  3234   000468  0E73               	movlw	low (STR_40+12)
  3235   00046A  0100               	movlb	0	; () banked
  3236   00046C  6FA2               	movwf	printf@fmt& (0+255),b
  3237   00046E  0E7F               	movlw	high (STR_40+12)
  3238   000470  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3239   000472  ECFF  F012         	call	_printf	;wreg free
  3240                           
  3241                           ;main.c: 176:                 case '0':
  3242   000476  EFCA  F006         	goto	l5268
  3243   00047A                     l455:
  3244                           
  3245                           ; BSR set to: 0
  3246   00047A  8A8B               	bsf	139,5,c	;volatile
  3247   00047C                     
  3248                           ; BSR set to: 0
  3249                           ;main.c: 180:                     for(i = 0; i < 512; i++)
  3250   00047C  C123  F015         	movff	main@address,SDCARD_ReadBlock@addr
  3251   000480  C124  F016         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  3252   000484  C125  F017         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  3253   000488  C126  F018         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  3254   00048C  0E29               	movlw	low _doubleBuffer
  3255   00048E  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  3256   000490  0E01               	movlw	high _doubleBuffer
  3257   000492  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  3258   000494  EC61  F010         	call	_SDCARD_ReadBlock	;wreg free
  3259   000498  9A8B               	bcf	139,5,c	;volatile
  3260   00049A                     
  3261                           ;main.c: 182:                         doubleBuffer[0][i] = 0;
  3262   00049A  0E67               	movlw	low STR_40
  3263   00049C  0100               	movlb	0	; () banked
  3264   00049E  6FA2               	movwf	printf@fmt& (0+255),b
  3265   0004A0  0E7F               	movlw	high STR_40
  3266   0004A2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3267   0004A4  ECFF  F012         	call	_printf	;wreg free
  3268   0004A8                     
  3269                           ;main.c: 183:                         si++;
  3270   0004A8  0E46               	movlw	low STR_41
  3271   0004AA  0100               	movlb	0	; () banked
  3272   0004AC  6FA2               	movwf	printf@fmt& (0+255),b
  3273   0004AE  0E7F               	movlw	high STR_41
  3274   0004B0  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3275   0004B2  ECFF  F012         	call	_printf	;wreg free
  3276   0004B6                     
  3277                           ;main.c: 184:                         if(si >= 26) si = 0;
  3278   0004B6  0EEC               	movlw	low STR_29
  3279   0004B8  0100               	movlb	0	; () banked
  3280   0004BA  6FA2               	movwf	printf@fmt& (0+255),b
  3281   0004BC  0E7F               	movlw	high STR_29
  3282   0004BE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3283   0004C0  C125  F0A4         	movff	main@address+2,?_printf+2
  3284   0004C4  C126  F0A5         	movff	main@address+3,?_printf+3
  3285   0004C8  6BA6               	clrf	(?_printf+4)& (0+255),b
  3286   0004CA  6BA7               	clrf	(?_printf+5)& (0+255),b
  3287   0004CC  ECFF  F012         	call	_printf	;wreg free
  3288   0004D0                     
  3289                           ;main.c: 185:                     }
  3290   0004D0  0E85               	movlw	low (STR_66+27)
  3291   0004D2  0100               	movlb	0	; () banked
  3292   0004D4  6FA2               	movwf	printf@fmt& (0+255),b
  3293   0004D6  0E7D               	movlw	high (STR_66+27)
  3294   0004D8  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3295   0004DA  ECFF  F012         	call	_printf	;wreg free
  3296   0004DE                     
  3297                           ;main.c: 186: 
  3298   0004DE  0EEC               	movlw	low STR_29
  3299   0004E0  0100               	movlb	0	; () banked
  3300   0004E2  6FA2               	movwf	printf@fmt& (0+255),b
  3301   0004E4  0E7F               	movlw	high STR_29
  3302   0004E6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3303   0004E8  0EFF               	movlw	255
  3304   0004EA  0101               	movlb	1	; () banked
  3305   0004EC  1523               	andwf	main@address& (0+255),w,b
  3306   0004EE  0100               	movlb	0	; () banked
  3307   0004F0  6FA4               	movwf	(?_printf+2)& (0+255),b
  3308   0004F2  0EFF               	movlw	255
  3309   0004F4  0101               	movlb	1	; () banked
  3310   0004F6  1524               	andwf	(main@address+1)& (0+255),w,b
  3311   0004F8  0100               	movlb	0	; () banked
  3312   0004FA  6FA5               	movwf	(?_printf+3)& (0+255),b
  3313   0004FC  0E00               	movlw	0
  3314   0004FE  0101               	movlb	1	; () banked
  3315   000500  1525               	andwf	(main@address+2)& (0+255),w,b
  3316   000502  0100               	movlb	0	; () banked
  3317   000504  6FA6               	movwf	(?_printf+4)& (0+255),b
  3318   000506  0E00               	movlw	0
  3319   000508  0101               	movlb	1	; () banked
  3320   00050A  1526               	andwf	(main@address+3)& (0+255),w,b
  3321   00050C  0100               	movlb	0	; () banked
  3322   00050E  6FA7               	movwf	(?_printf+5)& (0+255),b
  3323   000510  ECFF  F012         	call	_printf	;wreg free
  3324   000514                     
  3325                           ;main.c: 187:                     for (i = 0; i < 512; i++)
  3326   000514  0E73               	movlw	low (STR_40+12)
  3327   000516  0100               	movlb	0	; () banked
  3328   000518  6FA2               	movwf	printf@fmt& (0+255),b
  3329   00051A  0E7F               	movlw	high (STR_40+12)
  3330   00051C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3331   00051E  ECFF  F012         	call	_printf	;wreg free
  3332   000522                     
  3333                           ;main.c: 188:                     {
  3334   000522  0E29               	movlw	low _doubleBuffer
  3335   000524  0100               	movlb	0	; () banked
  3336   000526  6FAE               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  3337   000528  0E01               	movlw	high _doubleBuffer
  3338   00052A  6FAF               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  3339   00052C  ECFC  F009         	call	_hexDumpBuffer	;wreg free
  3340                           
  3341                           ;main.c: 189: 
  3342   000530  EFCA  F006         	goto	l5268
  3343   000534                     l5054:
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;main.c: 191:                         SDCARD_WriteBlock(currentAddress, doubleBuffer[0])
      +                          ;
  3347   000534  0E00               	movlw	0
  3348   000536  0101               	movlb	1	; () banked
  3349   000538  6F28               	movwf	(main@i+1)& (0+255),b
  3350   00053A  0E00               	movlw	0
  3351   00053C  6F27               	movwf	main@i& (0+255),b
  3352   00053E                     l5060:
  3353                           
  3354                           ; BSR set to: 1
  3355   00053E  0E29               	movlw	low _doubleBuffer
  3356   000540  2527               	addwf	main@i& (0+255),w,b
  3357   000542  6ED9               	movwf	fsr2l,c
  3358   000544  0E01               	movlw	high _doubleBuffer
  3359   000546  2128               	addwfc	(main@i+1)& (0+255),w,b
  3360   000548  6EDA               	movwf	fsr2h,c
  3361   00054A  5127               	movf	main@i& (0+255),w,b
  3362   00054C  0AFF               	xorlw	255
  3363   00054E  6EDF               	movwf	indf2,c
  3364   000550                     
  3365                           ; BSR set to: 1
  3366   000550  4B27               	infsnz	main@i& (0+255),f,b
  3367   000552  2B28               	incf	(main@i+1)& (0+255),f,b
  3368   000554                     
  3369                           ; BSR set to: 1
  3370   000554  0E02               	movlw	2
  3371   000556  5D28               	subwf	(main@i+1)& (0+255),w,b
  3372   000558  A0D8               	btfss	status,0,c
  3373   00055A  EFB1  F002         	goto	u4081
  3374   00055E  EFB3  F002         	goto	u4080
  3375   000562                     u4081:
  3376   000562  EF9F  F002         	goto	l5060
  3377   000566                     u4080:
  3378   000566                     
  3379                           ; BSR set to: 1
  3380   000566  888B               	bsf	139,4,c	;volatile
  3381   000568                     
  3382                           ; BSR set to: 1
  3383                           ;main.c: 193:                         while(SDCARD_PollWriteComplete() == 0xFF);
  3384   000568  C123  F01A         	movff	main@address,SDCARD_WriteBlock@addr
  3385   00056C  C124  F01B         	movff	main@address+1,SDCARD_WriteBlock@addr+1
  3386   000570  C125  F01C         	movff	main@address+2,SDCARD_WriteBlock@addr+2
  3387   000574  C126  F01D         	movff	main@address+3,SDCARD_WriteBlock@addr+3
  3388   000578  0E29               	movlw	low _doubleBuffer
  3389   00057A  6E1E               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3390   00057C  0E01               	movlw	high _doubleBuffer
  3391   00057E  6E1F               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3392   000580  EC43  F011         	call	_SDCARD_WriteBlock	;wreg free
  3393   000584                     l5068:
  3394   000584  EC6B  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  3395   000588  0101               	movlb	1	; () banked
  3396   00058A  6F1A               	movwf	main@status& (0+255),b
  3397   00058C  291A               	incf	main@status& (0+255),w,b
  3398   00058E  B4D8               	btfsc	status,2,c
  3399   000590  EFCC  F002         	goto	u4091
  3400   000594  EFCE  F002         	goto	u4090
  3401   000598                     u4091:
  3402   000598  EFC2  F002         	goto	l5068
  3403   00059C                     u4090:
  3404   00059C                     
  3405                           ; BSR set to: 1
  3406   00059C  988B               	bcf	139,4,c	;volatile
  3407   00059E                     
  3408                           ; BSR set to: 1
  3409                           ;main.c: 197: 
  3410   00059E  0E47               	movlw	low STR_46
  3411   0005A0  0100               	movlb	0	; () banked
  3412   0005A2  6FA2               	movwf	printf@fmt& (0+255),b
  3413   0005A4  0E7C               	movlw	high STR_46
  3414   0005A6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3415   0005A8  ECFF  F012         	call	_printf	;wreg free
  3416                           
  3417                           ;main.c: 198:                         currentAddress += 512;
  3418   0005AC  0E46               	movlw	low STR_41
  3419   0005AE  0100               	movlb	0	; () banked
  3420   0005B0  6FA2               	movwf	printf@fmt& (0+255),b
  3421   0005B2  0E7F               	movlw	high STR_41
  3422   0005B4  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3423   0005B6  ECFF  F012         	call	_printf	;wreg free
  3424                           
  3425                           ;main.c: 199:                         printf("complete\n\r");
  3426   0005BA  0EEC               	movlw	low STR_29
  3427   0005BC  0100               	movlb	0	; () banked
  3428   0005BE  6FA2               	movwf	printf@fmt& (0+255),b
  3429   0005C0  0E7F               	movlw	high STR_29
  3430   0005C2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3431   0005C4  C125  F0A4         	movff	main@address+2,?_printf+2
  3432   0005C8  C126  F0A5         	movff	main@address+3,?_printf+3
  3433   0005CC  6BA6               	clrf	(?_printf+4)& (0+255),b
  3434   0005CE  6BA7               	clrf	(?_printf+5)& (0+255),b
  3435   0005D0  ECFF  F012         	call	_printf	;wreg free
  3436                           
  3437                           ;main.c: 200:                     }
  3438   0005D4  0E85               	movlw	low (STR_66+27)
  3439   0005D6  0100               	movlb	0	; () banked
  3440   0005D8  6FA2               	movwf	printf@fmt& (0+255),b
  3441   0005DA  0E7D               	movlw	high (STR_66+27)
  3442   0005DC  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3443   0005DE  ECFF  F012         	call	_printf	;wreg free
  3444                           
  3445                           ;main.c: 201:                     printf("zeros written\n\r");
  3446   0005E2  0EEC               	movlw	low STR_29
  3447   0005E4  0100               	movlb	0	; () banked
  3448   0005E6  6FA2               	movwf	printf@fmt& (0+255),b
  3449   0005E8  0E7F               	movlw	high STR_29
  3450   0005EA  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3451   0005EC  0EFF               	movlw	255
  3452   0005EE  0101               	movlb	1	; () banked
  3453   0005F0  1523               	andwf	main@address& (0+255),w,b
  3454   0005F2  0100               	movlb	0	; () banked
  3455   0005F4  6FA4               	movwf	(?_printf+2)& (0+255),b
  3456   0005F6  0EFF               	movlw	255
  3457   0005F8  0101               	movlb	1	; () banked
  3458   0005FA  1524               	andwf	(main@address+1)& (0+255),w,b
  3459   0005FC  0100               	movlb	0	; () banked
  3460   0005FE  6FA5               	movwf	(?_printf+3)& (0+255),b
  3461   000600  0E00               	movlw	0
  3462   000602  0101               	movlb	1	; () banked
  3463   000604  1525               	andwf	(main@address+2)& (0+255),w,b
  3464   000606  0100               	movlb	0	; () banked
  3465   000608  6FA6               	movwf	(?_printf+4)& (0+255),b
  3466   00060A  0E00               	movlw	0
  3467   00060C  0101               	movlb	1	; () banked
  3468   00060E  1526               	andwf	(main@address+3)& (0+255),w,b
  3469   000610  0100               	movlb	0	; () banked
  3470   000612  6FA7               	movwf	(?_printf+5)& (0+255),b
  3471   000614  ECFF  F012         	call	_printf	;wreg free
  3472                           
  3473                           ;main.c: 202:                     break;
  3474   000618  0E73               	movlw	low (STR_40+12)
  3475   00061A  0100               	movlb	0	; () banked
  3476   00061C  6FA2               	movwf	printf@fmt& (0+255),b
  3477   00061E  0E7F               	movlw	high (STR_40+12)
  3478   000620  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3479   000622  ECFF  F012         	call	_printf	;wreg free
  3480                           
  3481                           ;main.c: 203:                 case '1':
  3482   000626  0E6E               	movlw	low STR_52
  3483   000628  0100               	movlb	0	; () banked
  3484   00062A  6FA2               	movwf	printf@fmt& (0+255),b
  3485   00062C  0E7E               	movlw	high STR_52
  3486   00062E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3487   000630  C11A  F0A4         	movff	main@status,?_printf+2
  3488   000634  6BA5               	clrf	(?_printf+3)& (0+255),b
  3489   000636  ECFF  F012         	call	_printf	;wreg free
  3490                           
  3491                           ;main.c: 204:                     currentAddress = address;
  3492   00063A  EFCA  F006         	goto	l5268
  3493   00063E                     l469:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;main.c: 206:                     for (i = 0; i < 512; i++)
  3497   00063E  C123  F11F         	movff	main@address,main@currentAddress
  3498   000642  C124  F120         	movff	main@address+1,main@currentAddress+1
  3499   000646  C125  F121         	movff	main@address+2,main@currentAddress+2
  3500   00064A  C126  F122         	movff	main@address+3,main@currentAddress+3
  3501   00064E                     
  3502                           ; BSR set to: 0
  3503                           ;main.c: 207:                     {
  3504   00064E  0E85               	movlw	low STR_53
  3505   000650  6FA2               	movwf	printf@fmt& (0+255),b
  3506   000652  0E7F               	movlw	high STR_53
  3507   000654  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3508   000656  C125  F0A4         	movff	main@address+2,?_printf+2
  3509   00065A  C126  F0A5         	movff	main@address+3,?_printf+3
  3510   00065E  6BA6               	clrf	(?_printf+4)& (0+255),b
  3511   000660  6BA7               	clrf	(?_printf+5)& (0+255),b
  3512   000662  0EFF               	movlw	255
  3513   000664  0101               	movlb	1	; () banked
  3514   000666  1523               	andwf	main@address& (0+255),w,b
  3515   000668  0100               	movlb	0	; () banked
  3516   00066A  6FA8               	movwf	(?_printf+6)& (0+255),b
  3517   00066C  0EFF               	movlw	255
  3518   00066E  0101               	movlb	1	; () banked
  3519   000670  1524               	andwf	(main@address+1)& (0+255),w,b
  3520   000672  0100               	movlb	0	; () banked
  3521   000674  6FA9               	movwf	(?_printf+7)& (0+255),b
  3522   000676  0E00               	movlw	0
  3523   000678  0101               	movlb	1	; () banked
  3524   00067A  1525               	andwf	(main@address+2)& (0+255),w,b
  3525   00067C  0100               	movlb	0	; () banked
  3526   00067E  6FAA               	movwf	(?_printf+8)& (0+255),b
  3527   000680  0E00               	movlw	0
  3528   000682  0101               	movlb	1	; () banked
  3529   000684  1526               	andwf	(main@address+3)& (0+255),w,b
  3530   000686  0100               	movlb	0	; () banked
  3531   000688  6FAB               	movwf	(?_printf+9)& (0+255),b
  3532   00068A  ECFF  F012         	call	_printf	;wreg free
  3533   00068E                     
  3534                           ;main.c: 209:                         printf("write to "); printf("%04x:", currentAddres
      +                          s >> 16); printf("%04x ", currentAddress & 0x0000FFFF);
  3535   00068E  0E00               	movlw	0
  3536   000690  0101               	movlb	1	; () banked
  3537   000692  6F28               	movwf	(main@i+1)& (0+255),b
  3538   000694  0E00               	movlw	0
  3539   000696  6F27               	movwf	main@i& (0+255),b
  3540   000698                     l5080:
  3541                           
  3542                           ; BSR set to: 1
  3543                           ;main.c: 210:                         for(j = 0; j < 512; j++);main.c: 211:             
      +                                      {
  3544   000698  0E29               	movlw	low _doubleBuffer
  3545   00069A  2527               	addwf	main@i& (0+255),w,b
  3546   00069C  6ED9               	movwf	fsr2l,c
  3547   00069E  0E01               	movlw	high _doubleBuffer
  3548   0006A0  2128               	addwfc	(main@i+1)& (0+255),w,b
  3549   0006A2  6EDA               	movwf	fsr2h,c
  3550   0006A4  0E00               	movlw	0
  3551   0006A6  6EDF               	movwf	indf2,c
  3552   0006A8                     
  3553                           ; BSR set to: 1
  3554                           ;main.c: 212:                             doubleBuffer[0][j] = sin[si];
  3555   0006A8  2B1C               	incf	main@si& (0+255),f,b
  3556   0006AA                     
  3557                           ; BSR set to: 1
  3558                           ;main.c: 213:                             si++;
  3559   0006AA  0E19               	movlw	25
  3560   0006AC  651C               	cpfsgt	main@si& (0+255),b
  3561   0006AE  EF5B  F003         	goto	u4101
  3562   0006B2  EF5D  F003         	goto	u4100
  3563   0006B6                     u4101:
  3564   0006B6  EF5F  F003         	goto	l5088
  3565   0006BA                     u4100:
  3566   0006BA                     
  3567                           ; BSR set to: 1
  3568   0006BA  0E00               	movlw	0
  3569   0006BC  6F1C               	movwf	main@si& (0+255),b
  3570   0006BE                     l5088:
  3571                           
  3572                           ; BSR set to: 1
  3573                           ;main.c: 214:                             if(si >= 26) si = 0;
  3574   0006BE  4B27               	infsnz	main@i& (0+255),f,b
  3575   0006C0  2B28               	incf	(main@i+1)& (0+255),f,b
  3576   0006C2                     
  3577                           ; BSR set to: 1
  3578   0006C2  0E02               	movlw	2
  3579   0006C4  5D28               	subwf	(main@i+1)& (0+255),w,b
  3580   0006C6  A0D8               	btfss	status,0,c
  3581   0006C8  EF68  F003         	goto	u4111
  3582   0006CC  EF6A  F003         	goto	u4110
  3583   0006D0                     u4111:
  3584   0006D0  EF4C  F003         	goto	l5080
  3585   0006D4                     u4110:
  3586   0006D4                     
  3587                           ; BSR set to: 1
  3588                           ;main.c: 216: 
  3589   0006D4  0E00               	movlw	0
  3590   0006D6  6F28               	movwf	(main@i+1)& (0+255),b
  3591   0006D8  0E00               	movlw	0
  3592   0006DA  6F27               	movwf	main@i& (0+255),b
  3593   0006DC                     l5098:
  3594                           
  3595                           ; BSR set to: 1
  3596                           ;main.c: 217:                         SDCARD_WriteBlock(currentAddress, doubleBuffer[0])
      +                          ;;main.c: 219:                         while(SDCARD_PollWriteComplete() == 0xFF);
  3597   0006DC  0EAC               	movlw	low STR_54
  3598   0006DE  0100               	movlb	0	; () banked
  3599   0006E0  6FA2               	movwf	printf@fmt& (0+255),b
  3600   0006E2  0E7F               	movlw	high STR_54
  3601   0006E4  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3602   0006E6  ECFF  F012         	call	_printf	;wreg free
  3603   0006EA  0E81               	movlw	low (STR_66+23)
  3604   0006EC  0100               	movlb	0	; () banked
  3605   0006EE  6FA2               	movwf	printf@fmt& (0+255),b
  3606   0006F0  0E7D               	movlw	high (STR_66+23)
  3607   0006F2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3608   0006F4  C121  F0A4         	movff	main@currentAddress+2,?_printf+2
  3609   0006F8  C122  F0A5         	movff	main@currentAddress+3,?_printf+3
  3610   0006FC  6BA6               	clrf	(?_printf+4)& (0+255),b
  3611   0006FE  6BA7               	clrf	(?_printf+5)& (0+255),b
  3612   000700  ECFF  F012         	call	_printf	;wreg free
  3613   000704  0EDC               	movlw	low STR_56
  3614   000706  0100               	movlb	0	; () banked
  3615   000708  6FA2               	movwf	printf@fmt& (0+255),b
  3616   00070A  0E7F               	movlw	high STR_56
  3617   00070C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3618   00070E  0EFF               	movlw	255
  3619   000710  0101               	movlb	1	; () banked
  3620   000712  151F               	andwf	main@currentAddress& (0+255),w,b
  3621   000714  0100               	movlb	0	; () banked
  3622   000716  6FA4               	movwf	(?_printf+2)& (0+255),b
  3623   000718  0EFF               	movlw	255
  3624   00071A  0101               	movlb	1	; () banked
  3625   00071C  1520               	andwf	(main@currentAddress+1)& (0+255),w,b
  3626   00071E  0100               	movlb	0	; () banked
  3627   000720  6FA5               	movwf	(?_printf+3)& (0+255),b
  3628   000722  0E00               	movlw	0
  3629   000724  0101               	movlb	1	; () banked
  3630   000726  1521               	andwf	(main@currentAddress+2)& (0+255),w,b
  3631   000728  0100               	movlb	0	; () banked
  3632   00072A  6FA6               	movwf	(?_printf+4)& (0+255),b
  3633   00072C  0E00               	movlw	0
  3634   00072E  0101               	movlb	1	; () banked
  3635   000730  1522               	andwf	(main@currentAddress+3)& (0+255),w,b
  3636   000732  0100               	movlb	0	; () banked
  3637   000734  6FA7               	movwf	(?_printf+5)& (0+255),b
  3638   000736  ECFF  F012         	call	_printf	;wreg free
  3639   00073A                     
  3640                           ;main.c: 220:                         TMR1_WriteTimer(0x0000);
  3641   00073A  C11F  F01A         	movff	main@currentAddress,SDCARD_WriteBlock@addr
  3642   00073E  C120  F01B         	movff	main@currentAddress+1,SDCARD_WriteBlock@addr+1
  3643   000742  C121  F01C         	movff	main@currentAddress+2,SDCARD_WriteBlock@addr+2
  3644   000746  C122  F01D         	movff	main@currentAddress+3,SDCARD_WriteBlock@addr+3
  3645   00074A  0E29               	movlw	low _doubleBuffer
  3646   00074C  6E1E               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3647   00074E  0E01               	movlw	high _doubleBuffer
  3648   000750  6E1F               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3649   000752  EC43  F011         	call	_SDCARD_WriteBlock	;wreg free
  3650   000756                     l5102:
  3651   000756  EC6B  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  3652   00075A  0AFF               	xorlw	255
  3653   00075C  B4D8               	btfsc	status,2,c
  3654   00075E  EFB3  F003         	goto	u4121
  3655   000762  EFB5  F003         	goto	u4120
  3656   000766                     u4121:
  3657   000766  EFAB  F003         	goto	l5102
  3658   00076A                     u4120:
  3659   00076A                     
  3660                           ;main.c: 223: 
  3661   00076A  0E00               	movlw	0
  3662   00076C  6E15               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3663   00076E  0E00               	movlw	0
  3664   000770  6E14               	movwf	TMR1_WriteTimer@timerVal^0,c
  3665   000772  ECEB  F012         	call	_TMR1_WriteTimer	;wreg free
  3666   000776                     
  3667                           ;main.c: 224: 
  3668   000776  909E               	bcf	158,0,c	;volatile
  3669   000778                     l478:
  3670   000778  A09E               	btfss	158,0,c	;volatile
  3671   00077A  EFC1  F003         	goto	u4131
  3672   00077E  EFC3  F003         	goto	u4130
  3673   000782                     u4131:
  3674   000782  EFBC  F003         	goto	l478
  3675   000786                     u4130:
  3676   000786                     
  3677                           ;main.c: 227: 
  3678   000786  0E00               	movlw	0
  3679   000788  0101               	movlb	1	; () banked
  3680   00078A  271F               	addwf	main@currentAddress& (0+255),f,b
  3681   00078C  0E02               	movlw	2
  3682   00078E  2320               	addwfc	(main@currentAddress+1)& (0+255),f,b
  3683   000790  0E00               	movlw	0
  3684   000792  2321               	addwfc	(main@currentAddress+2)& (0+255),f,b
  3685   000794  0E00               	movlw	0
  3686   000796  2322               	addwfc	(main@currentAddress+3)& (0+255),f,b
  3687   000798                     
  3688                           ; BSR set to: 1
  3689                           ;main.c: 228: 
  3690   000798  0EA1               	movlw	low STR_57
  3691   00079A  0100               	movlb	0	; () banked
  3692   00079C  6FA2               	movwf	printf@fmt& (0+255),b
  3693   00079E  0E7F               	movlw	high STR_57
  3694   0007A0  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3695   0007A2  ECFF  F012         	call	_printf	;wreg free
  3696   0007A6                     
  3697                           ;main.c: 229: 
  3698   0007A6  0101               	movlb	1	; () banked
  3699   0007A8  4B27               	infsnz	main@i& (0+255),f,b
  3700   0007AA  2B28               	incf	(main@i+1)& (0+255),f,b
  3701   0007AC                     
  3702                           ; BSR set to: 1
  3703   0007AC  0E02               	movlw	2
  3704   0007AE  5D28               	subwf	(main@i+1)& (0+255),w,b
  3705   0007B0  A0D8               	btfss	status,0,c
  3706   0007B2  EFDD  F003         	goto	u4141
  3707   0007B6  EFDF  F003         	goto	u4140
  3708   0007BA                     u4141:
  3709   0007BA  EF6E  F003         	goto	l5098
  3710   0007BE                     u4140:
  3711   0007BE                     
  3712                           ; BSR set to: 1
  3713                           ;main.c: 230:                         currentAddress += 512;
  3714   0007BE  0E57               	movlw	low STR_58
  3715   0007C0  0100               	movlb	0	; () banked
  3716   0007C2  6FA2               	movwf	printf@fmt& (0+255),b
  3717   0007C4  0E7F               	movlw	high STR_58
  3718   0007C6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3719   0007C8  ECFF  F012         	call	_printf	;wreg free
  3720                           
  3721                           ;main.c: 231:                         printf("complete\n\r");
  3722   0007CC  EFCA  F006         	goto	l5268
  3723   0007D0                     l481:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;main.c: 233:                     printf("sin wave written\n\r");
  3727   0007D0  C123  F11F         	movff	main@address,main@currentAddress
  3728   0007D4  C124  F120         	movff	main@address+1,main@currentAddress+1
  3729   0007D8  C125  F121         	movff	main@address+2,main@currentAddress+2
  3730   0007DC  C126  F122         	movff	main@address+3,main@currentAddress+3
  3731   0007E0                     
  3732                           ; BSR set to: 0
  3733                           ;main.c: 235: 
  3734   0007E0  0E00               	movlw	0
  3735   0007E2  0101               	movlb	1	; () banked
  3736   0007E4  6F28               	movwf	(main@i+1)& (0+255),b
  3737   0007E6  0E00               	movlw	0
  3738   0007E8  6F27               	movwf	main@i& (0+255),b
  3739   0007EA                     l5124:
  3740                           
  3741                           ; BSR set to: 1
  3742                           ;main.c: 236:                 case '+':;main.c: 238:                     printf("sample 
      +                          time: %u counts\n\r", sampleRate);
  3743   0007EA  0EAC               	movlw	low STR_54
  3744   0007EC  0100               	movlb	0	; () banked
  3745   0007EE  6FA2               	movwf	printf@fmt& (0+255),b
  3746   0007F0  0E7F               	movlw	high STR_54
  3747   0007F2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3748   0007F4  ECFF  F012         	call	_printf	;wreg free
  3749   0007F8  0E81               	movlw	low (STR_66+23)
  3750   0007FA  0100               	movlb	0	; () banked
  3751   0007FC  6FA2               	movwf	printf@fmt& (0+255),b
  3752   0007FE  0E7D               	movlw	high (STR_66+23)
  3753   000800  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3754   000802  C121  F0A4         	movff	main@currentAddress+2,?_printf+2
  3755   000806  C122  F0A5         	movff	main@currentAddress+3,?_printf+3
  3756   00080A  6BA6               	clrf	(?_printf+4)& (0+255),b
  3757   00080C  6BA7               	clrf	(?_printf+5)& (0+255),b
  3758   00080E  ECFF  F012         	call	_printf	;wreg free
  3759   000812  0EDC               	movlw	low STR_56
  3760   000814  0100               	movlb	0	; () banked
  3761   000816  6FA2               	movwf	printf@fmt& (0+255),b
  3762   000818  0E7F               	movlw	high STR_56
  3763   00081A  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3764   00081C  0EFF               	movlw	255
  3765   00081E  0101               	movlb	1	; () banked
  3766   000820  151F               	andwf	main@currentAddress& (0+255),w,b
  3767   000822  0100               	movlb	0	; () banked
  3768   000824  6FA4               	movwf	(?_printf+2)& (0+255),b
  3769   000826  0EFF               	movlw	255
  3770   000828  0101               	movlb	1	; () banked
  3771   00082A  1520               	andwf	(main@currentAddress+1)& (0+255),w,b
  3772   00082C  0100               	movlb	0	; () banked
  3773   00082E  6FA5               	movwf	(?_printf+3)& (0+255),b
  3774   000830  0E00               	movlw	0
  3775   000832  0101               	movlb	1	; () banked
  3776   000834  1521               	andwf	(main@currentAddress+2)& (0+255),w,b
  3777   000836  0100               	movlb	0	; () banked
  3778   000838  6FA6               	movwf	(?_printf+4)& (0+255),b
  3779   00083A  0E00               	movlw	0
  3780   00083C  0101               	movlb	1	; () banked
  3781   00083E  1522               	andwf	(main@currentAddress+3)& (0+255),w,b
  3782   000840  0100               	movlb	0	; () banked
  3783   000842  6FA7               	movwf	(?_printf+5)& (0+255),b
  3784   000844  ECFF  F012         	call	_printf	;wreg free
  3785   000848                     
  3786                           ;main.c: 239:                     break;
  3787   000848  0E00               	movlw	0
  3788   00084A  0101               	movlb	1	; () banked
  3789   00084C  6F1E               	movwf	(main@j+1)& (0+255),b
  3790   00084E  0E00               	movlw	0
  3791   000850  6F1D               	movwf	main@j& (0+255),b
  3792   000852                     l5132:
  3793                           
  3794                           ; BSR set to: 1
  3795                           ;main.c: 240:                 case '-':;main.c: 241:                     if((sampleRate 
      +                          - 160) < sampleRate) sampleRate -= 160;
  3796   000852  0E00               	movlw	low main@sin
  3797   000854  251C               	addwf	main@si& (0+255),w,b
  3798   000856  6ED9               	movwf	fsr2l,c
  3799   000858  6ADA               	clrf	fsr2h,c
  3800   00085A  0E01               	movlw	high main@sin
  3801   00085C  22DA               	addwfc	fsr2h,f,c
  3802   00085E  0E29               	movlw	low _doubleBuffer
  3803   000860  251D               	addwf	main@j& (0+255),w,b
  3804   000862  6EE1               	movwf	fsr1l,c
  3805   000864  0E01               	movlw	high _doubleBuffer
  3806   000866  211E               	addwfc	(main@j+1)& (0+255),w,b
  3807   000868  6EE2               	movwf	fsr1h,c
  3808   00086A  CFDF FFE7          	movff	indf2,indf1
  3809   00086E                     
  3810                           ; BSR set to: 1
  3811                           ;main.c: 242:                     printf("sample time: %u counts\n\r", sampleRate);
  3812   00086E  2B1C               	incf	main@si& (0+255),f,b
  3813   000870                     
  3814                           ; BSR set to: 1
  3815                           ;main.c: 243:                     break;
  3816   000870  0E19               	movlw	25
  3817   000872  651C               	cpfsgt	main@si& (0+255),b
  3818   000874  EF3E  F004         	goto	u4151
  3819   000878  EF40  F004         	goto	u4150
  3820   00087C                     u4151:
  3821   00087C  EF42  F004         	goto	l5140
  3822   000880                     u4150:
  3823   000880                     
  3824                           ; BSR set to: 1
  3825   000880  0E00               	movlw	0
  3826   000882  6F1C               	movwf	main@si& (0+255),b
  3827   000884                     l5140:
  3828                           
  3829                           ; BSR set to: 1
  3830                           ;main.c: 244: 
  3831   000884  4B1D               	infsnz	main@j& (0+255),f,b
  3832   000886  2B1E               	incf	(main@j+1)& (0+255),f,b
  3833   000888                     
  3834                           ; BSR set to: 1
  3835   000888  0E02               	movlw	2
  3836   00088A  5D1E               	subwf	(main@j+1)& (0+255),w,b
  3837   00088C  A0D8               	btfss	status,0,c
  3838   00088E  EF4B  F004         	goto	u4161
  3839   000892  EF4D  F004         	goto	u4160
  3840   000896                     u4161:
  3841   000896  EF29  F004         	goto	l5132
  3842   00089A                     u4160:
  3843   00089A                     
  3844                           ; BSR set to: 1
  3845                           ;main.c: 246: 
  3846   00089A  C11F  F01A         	movff	main@currentAddress,SDCARD_WriteBlock@addr
  3847   00089E  C120  F01B         	movff	main@currentAddress+1,SDCARD_WriteBlock@addr+1
  3848   0008A2  C121  F01C         	movff	main@currentAddress+2,SDCARD_WriteBlock@addr+2
  3849   0008A6  C122  F01D         	movff	main@currentAddress+3,SDCARD_WriteBlock@addr+3
  3850   0008AA  0E29               	movlw	low _doubleBuffer
  3851   0008AC  6E1E               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  3852   0008AE  0E01               	movlw	high _doubleBuffer
  3853   0008B0  6E1F               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  3854   0008B2  EC43  F011         	call	_SDCARD_WriteBlock	;wreg free
  3855   0008B6                     l5146:
  3856   0008B6  EC6B  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  3857   0008BA  0AFF               	xorlw	255
  3858   0008BC  B4D8               	btfsc	status,2,c
  3859   0008BE  EF63  F004         	goto	u4171
  3860   0008C2  EF65  F004         	goto	u4170
  3861   0008C6                     u4171:
  3862   0008C6  EF5B  F004         	goto	l5146
  3863   0008CA                     u4170:
  3864   0008CA                     
  3865                           ;main.c: 249: 
  3866   0008CA  0E00               	movlw	0
  3867   0008CC  6E15               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  3868   0008CE  0E00               	movlw	0
  3869   0008D0  6E14               	movwf	TMR1_WriteTimer@timerVal^0,c
  3870   0008D2  ECEB  F012         	call	_TMR1_WriteTimer	;wreg free
  3871   0008D6                     
  3872                           ;main.c: 250:                     recording = 1;
  3873   0008D6  909E               	bcf	158,0,c	;volatile
  3874   0008D8                     l490:
  3875   0008D8  A09E               	btfss	158,0,c	;volatile
  3876   0008DA  EF71  F004         	goto	u4181
  3877   0008DE  EF73  F004         	goto	u4180
  3878   0008E2                     u4181:
  3879   0008E2  EF6C  F004         	goto	l490
  3880   0008E6                     u4180:
  3881   0008E6                     
  3882                           ;main.c: 259: 
  3883   0008E6  0E00               	movlw	0
  3884   0008E8  0101               	movlb	1	; () banked
  3885   0008EA  271F               	addwf	main@currentAddress& (0+255),f,b
  3886   0008EC  0E02               	movlw	2
  3887   0008EE  2320               	addwfc	(main@currentAddress+1)& (0+255),f,b
  3888   0008F0  0E00               	movlw	0
  3889   0008F2  2321               	addwfc	(main@currentAddress+2)& (0+255),f,b
  3890   0008F4  0E00               	movlw	0
  3891   0008F6  2322               	addwfc	(main@currentAddress+3)& (0+255),f,b
  3892   0008F8                     
  3893                           ; BSR set to: 1
  3894                           ;main.c: 260:                             while(SDCARD_PollWriteComplete() == 0xFF);
  3895   0008F8  0EA1               	movlw	low STR_57
  3896   0008FA  0100               	movlb	0	; () banked
  3897   0008FC  6FA2               	movwf	printf@fmt& (0+255),b
  3898   0008FE  0E7F               	movlw	high STR_57
  3899   000900  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3900   000902  ECFF  F012         	call	_printf	;wreg free
  3901   000906                     
  3902                           ;main.c: 261:                             TMR1_WriteTimer(0x0000);
  3903   000906  0101               	movlb	1	; () banked
  3904   000908  4B27               	infsnz	main@i& (0+255),f,b
  3905   00090A  2B28               	incf	(main@i+1)& (0+255),f,b
  3906   00090C                     
  3907                           ; BSR set to: 1
  3908   00090C  0E02               	movlw	2
  3909   00090E  5D28               	subwf	(main@i+1)& (0+255),w,b
  3910   000910  A0D8               	btfss	status,0,c
  3911   000912  EF8D  F004         	goto	u4191
  3912   000916  EF8F  F004         	goto	u4190
  3913   00091A                     u4191:
  3914   00091A  EFF5  F003         	goto	l5124
  3915   00091E                     u4190:
  3916   00091E                     
  3917                           ; BSR set to: 1
  3918                           ;main.c: 262:                             PIR1bits.TMR1IF = 0;
  3919   00091E  0EEC               	movlw	low STR_63
  3920   000920  0100               	movlb	0	; () banked
  3921   000922  6FA2               	movwf	printf@fmt& (0+255),b
  3922   000924  0E7E               	movlw	high STR_63
  3923   000926  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3924   000928  ECFF  F012         	call	_printf	;wreg free
  3925                           
  3926                           ;main.c: 263:                             while (PIR1bits.TMR1IF == 0);
  3927   00092C  EFCA  F006         	goto	l5268
  3928   000930                     l5162:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;main.c: 266:                             write = 0;
  3932   000930  0EA0               	movlw	160
  3933   000932  25E6               	addwf	_sampleRate& (0+255),w,b
  3934   000934  6FB8               	movwf	??_main& (0+255),b
  3935   000936  0E00               	movlw	0
  3936   000938  21E7               	addwfc	(_sampleRate+1)& (0+255),w,b
  3937   00093A  6FB9               	movwf	(??_main+1)& (0+255),b
  3938   00093C  51B8               	movf	??_main& (0+255),w,b
  3939   00093E  5DE6               	subwf	_sampleRate& (0+255),w,b
  3940   000940  51B9               	movf	(??_main+1)& (0+255),w,b
  3941   000942  59E7               	subwfb	(_sampleRate+1)& (0+255),w,b
  3942   000944  B0D8               	btfsc	status,0,c
  3943   000946  EFA7  F004         	goto	u4201
  3944   00094A  EFA9  F004         	goto	u4200
  3945   00094E                     u4201:
  3946   00094E  EFAD  F004         	goto	l5166
  3947   000952                     u4200:
  3948   000952                     
  3949                           ; BSR set to: 0
  3950   000952  0EA0               	movlw	160
  3951   000954  27E6               	addwf	_sampleRate& (0+255),f,b
  3952   000956  0E00               	movlw	0
  3953   000958  23E7               	addwfc	(_sampleRate+1)& (0+255),f,b
  3954   00095A                     l5166:
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;main.c: 267:                         }
  3958   00095A  0EF4               	movlw	low STR_64
  3959   00095C  6FA2               	movwf	printf@fmt& (0+255),b
  3960   00095E  0E7D               	movlw	high STR_64
  3961   000960  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  3962   000962  C0E6  F0A4         	movff	_sampleRate,?_printf+2
  3963   000966  C0E7  F0A5         	movff	_sampleRate+1,?_printf+3
  3964   00096A  ECFF  F012         	call	_printf	;wreg free
  3965                           
  3966                           ;main.c: 268:                     }
  3967   00096E  EFCA  F006         	goto	l5268
  3968   000972                     l5168:
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;main.c: 270: 
  3972   000972  0E60               	movlw	96
  3973   000974  25E6               	addwf	_sampleRate& (0+255),w,b
  3974   000976  6FB8               	movwf	??_main& (0+255),b
  3975   000978  0EFF               	movlw	255
  3976   00097A  21E7               	addwfc	(_sampleRate+1)& (0+255),w,b
  3977   00097C  6FB9               	movwf	(??_main+1)& (0+255),b
  3978   00097E  51E6               	movf	_sampleRate& (0+255),w,b
  3979   000980  5DB8               	subwf	??_main& (0+255),w,b
  3980   000982  51E7               	movf	(_sampleRate+1)& (0+255),w,b
  3981   000984  59B9               	subwfb	(??_main+1)& (0+255),w,b
  3982   000986  B0D8               	btfsc	status,0,c
  3983   000988  EFC8  F004         	goto	u4211
  3984   00098C  EFCA  F004         	goto	u4210
  3985   000990                     u4211:
  3986   000990  EFCE  F004         	goto	l5172
  3987   000994                     u4210:
  3988   000994                     
  3989                           ; BSR set to: 0
  3990   000994  0EA0               	movlw	160
  3991   000996  5FE6               	subwf	_sampleRate& (0+255),f,b
  3992   000998  0E00               	movlw	0
  3993   00099A  5BE7               	subwfb	(_sampleRate+1)& (0+255),f,b
  3994   00099C                     l5172:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;main.c: 271:                     recording = 0;
  3998   00099C  0EF4               	movlw	low STR_64
  3999   00099E  6FA2               	movwf	printf@fmt& (0+255),b
  4000   0009A0  0E7D               	movlw	high STR_64
  4001   0009A2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4002   0009A4  C0E6  F0A4         	movff	_sampleRate,?_printf+2
  4003   0009A8  C0E7  F0A5         	movff	_sampleRate+1,?_printf+3
  4004   0009AC  ECFF  F012         	call	_printf	;wreg free
  4005                           
  4006                           ;main.c: 272:                     printf("audio recorded\n\r");
  4007   0009B0  EFCA  F006         	goto	l5268
  4008   0009B4                     l5174:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;main.c: 276: 
  4012   0009B4  0E00               	movlw	0
  4013   0009B6  6FBE               	movwf	_write& (0+255),b
  4014   0009B8                     
  4015                           ; BSR set to: 0
  4016                           ;main.c: 277:                     printf("You may terminate spooling at anytime with a k
      +                          eypress.\n\r");
  4017   0009B8  C123  F11F         	movff	main@address,main@currentAddress
  4018   0009BC  C124  F120         	movff	main@address+1,main@currentAddress+1
  4019   0009C0  C125  F121         	movff	main@address+2,main@currentAddress+2
  4020   0009C4  C126  F122         	movff	main@address+3,main@currentAddress+3
  4021                           
  4022                           ;main.c: 279:                     printf("\n\r");
  4023   0009C8  0E01               	movlw	1
  4024   0009CA  6E49               	movwf	_recording^0,c
  4025                           
  4026                           ;main.c: 280:                     printf("Right mouse click on the upper left of the PuT
      +                          TY window\n\r");
  4027   0009CC  EF58  F005         	goto	l5194
  4028   0009D0                     l5178:
  4029                           
  4030                           ;main.c: 281:                     printf("Select:     Change settings...\n\r");;main.c: 
      +                          283:                     printf("Select:     Session logging: All session output\n\r");
  4031   0009D0  0100               	movlb	0	; () banked
  4032   0009D2  51BE               	movf	_write& (0+255),w,b
  4033   0009D4  B4D8               	btfsc	status,2,c
  4034   0009D6  EFEF  F004         	goto	u4221
  4035   0009DA  EFF1  F004         	goto	u4220
  4036   0009DE                     u4221:
  4037   0009DE  EF58  F005         	goto	l5194
  4038   0009E2                     u4220:
  4039   0009E2                     
  4040                           ; BSR set to: 0
  4041                           ;main.c: 284:                     printf("Log file name:  Browse and provide a .csv exte
      +                          nsion to your file name\n\r");;main.c: 286:                     printf("Press any key to
      +                           start\n\r");
  4042   0009E2  0E6A               	movlw	low STR_66
  4043   0009E4  6FA2               	movwf	printf@fmt& (0+255),b
  4044   0009E6  0E7D               	movlw	high STR_66
  4045   0009E8  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4046   0009EA  C0E8  F0A4         	movff	_writeIndex,?_printf+2
  4047   0009EE  6BA5               	clrf	(?_printf+3)& (0+255),b
  4048   0009F0  C121  F0A6         	movff	main@currentAddress+2,?_printf+4
  4049   0009F4  C122  F0A7         	movff	main@currentAddress+3,?_printf+5
  4050   0009F8  6BA8               	clrf	(?_printf+6)& (0+255),b
  4051   0009FA  6BA9               	clrf	(?_printf+7)& (0+255),b
  4052   0009FC  ECFF  F012         	call	_printf	;wreg free
  4053   000A00  0ECF               	movlw	low STR_67
  4054   000A02  0100               	movlb	0	; () banked
  4055   000A04  6FA2               	movwf	printf@fmt& (0+255),b
  4056   000A06  0E7F               	movlw	high STR_67
  4057   000A08  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4058   000A0A  0EFF               	movlw	255
  4059   000A0C  0101               	movlb	1	; () banked
  4060   000A0E  151F               	andwf	main@currentAddress& (0+255),w,b
  4061   000A10  0100               	movlb	0	; () banked
  4062   000A12  6FA4               	movwf	(?_printf+2)& (0+255),b
  4063   000A14  0EFF               	movlw	255
  4064   000A16  0101               	movlb	1	; () banked
  4065   000A18  1520               	andwf	(main@currentAddress+1)& (0+255),w,b
  4066   000A1A  0100               	movlb	0	; () banked
  4067   000A1C  6FA5               	movwf	(?_printf+3)& (0+255),b
  4068   000A1E  0E00               	movlw	0
  4069   000A20  0101               	movlb	1	; () banked
  4070   000A22  1521               	andwf	(main@currentAddress+2)& (0+255),w,b
  4071   000A24  0100               	movlb	0	; () banked
  4072   000A26  6FA6               	movwf	(?_printf+4)& (0+255),b
  4073   000A28  0E00               	movlw	0
  4074   000A2A  0101               	movlb	1	; () banked
  4075   000A2C  1522               	andwf	(main@currentAddress+3)& (0+255),w,b
  4076   000A2E  0100               	movlb	0	; () banked
  4077   000A30  6FA7               	movwf	(?_printf+5)& (0+255),b
  4078   000A32  ECFF  F012         	call	_printf	;wreg free
  4079   000A36                     
  4080                           ;main.c: 287:                     while((EUSART1_is_rx_ready()) == 0);
  4081   000A36  C11F  F01A         	movff	main@currentAddress,SDCARD_WriteBlock@addr
  4082   000A3A  C120  F01B         	movff	main@currentAddress+1,SDCARD_WriteBlock@addr+1
  4083   000A3E  C121  F01C         	movff	main@currentAddress+2,SDCARD_WriteBlock@addr+2
  4084   000A42  C122  F01D         	movff	main@currentAddress+3,SDCARD_WriteBlock@addr+3
  4085   000A46  C0E8  F014         	movff	_writeIndex,___wmul@multiplier
  4086   000A4A  6A15               	clrf	(___wmul@multiplier+1)^0,c
  4087   000A4C  0E02               	movlw	2
  4088   000A4E  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  4089   000A50  0E00               	movlw	0
  4090   000A52  6E16               	movwf	___wmul@multiplicand^0,c
  4091   000A54  EC27  F013         	call	___wmul	;wreg free
  4092   000A58  0E29               	movlw	low _doubleBuffer
  4093   000A5A  2414               	addwf	?___wmul^0,w,c
  4094   000A5C  6E1E               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  4095   000A5E  0E01               	movlw	high _doubleBuffer
  4096   000A60  2015               	addwfc	(?___wmul+1)^0,w,c
  4097   000A62  6E1F               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  4098   000A64  EC43  F011         	call	_SDCARD_WriteBlock	;wreg free
  4099   000A68                     l5184:
  4100   000A68  EC6B  F012         	call	_SDCARD_PollWriteComplete	;wreg free
  4101   000A6C  0AFF               	xorlw	255
  4102   000A6E  B4D8               	btfsc	status,2,c
  4103   000A70  EF3C  F005         	goto	u4231
  4104   000A74  EF3E  F005         	goto	u4230
  4105   000A78                     u4231:
  4106   000A78  EF34  F005         	goto	l5184
  4107   000A7C                     u4230:
  4108   000A7C                     
  4109                           ;main.c: 290:                     currentAddress = address;
  4110   000A7C  0E00               	movlw	0
  4111   000A7E  6E15               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  4112   000A80  0E00               	movlw	0
  4113   000A82  6E14               	movwf	TMR1_WriteTimer@timerVal^0,c
  4114   000A84  ECEB  F012         	call	_TMR1_WriteTimer	;wreg free
  4115   000A88                     
  4116                           ;main.c: 291:                     for(i = 0; i < 512; i++)
  4117   000A88  909E               	bcf	158,0,c	;volatile
  4118   000A8A                     l504:
  4119   000A8A  A09E               	btfss	158,0,c	;volatile
  4120   000A8C  EF4A  F005         	goto	u4241
  4121   000A90  EF4C  F005         	goto	u4240
  4122   000A94                     u4241:
  4123   000A94  EF45  F005         	goto	l504
  4124   000A98                     u4240:
  4125   000A98                     
  4126                           ;main.c: 294:                         SDCARD_ReadBlock(currentAddress, doubleBuffer[0]);
  4127   000A98  0E00               	movlw	0
  4128   000A9A  0101               	movlb	1	; () banked
  4129   000A9C  271F               	addwf	main@currentAddress& (0+255),f,b
  4130   000A9E  0E02               	movlw	2
  4131   000AA0  2320               	addwfc	(main@currentAddress+1)& (0+255),f,b
  4132   000AA2  0E00               	movlw	0
  4133   000AA4  2321               	addwfc	(main@currentAddress+2)& (0+255),f,b
  4134   000AA6  0E00               	movlw	0
  4135   000AA8  2322               	addwfc	(main@currentAddress+3)& (0+255),f,b
  4136   000AAA                     
  4137                           ; BSR set to: 1
  4138                           ;main.c: 295: 
  4139   000AAA  0E00               	movlw	0
  4140   000AAC  0100               	movlb	0	; () banked
  4141   000AAE  6FBE               	movwf	_write& (0+255),b
  4142   000AB0                     l5194:
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;main.c: 280:                     printf("Right mouse click on the upper left of the PuT
      +                          TY window\n\r");
  4146   000AB0  ECAC  F013         	call	_EUSART1_is_rx_ready	;wreg free
  4147   000AB4  0900               	iorlw	0
  4148   000AB6  B4D8               	btfsc	status,2,c
  4149   000AB8  EF60  F005         	goto	u4251
  4150   000ABC  EF62  F005         	goto	u4250
  4151   000AC0                     u4251:
  4152   000AC0  EFE8  F004         	goto	l5178
  4153   000AC4                     u4250:
  4154   000AC4                     
  4155                           ;main.c: 298:                             printf("%u%s", doubleBuffer[0][j], "\n");
  4156   000AC4  EC13  F013         	call	_EUSART1_Read	;wreg free
  4157   000AC8                     
  4158                           ;main.c: 300:                         }
  4159   000AC8  0E00               	movlw	0
  4160   000ACA  6E49               	movwf	_recording^0,c
  4161   000ACC                     
  4162                           ;main.c: 301:                         if((EUSART1_is_rx_ready()) == 1) break;
  4163   000ACC  0E35               	movlw	low STR_68
  4164   000ACE  0100               	movlb	0	; () banked
  4165   000AD0  6FA2               	movwf	printf@fmt& (0+255),b
  4166   000AD2  0E7F               	movlw	high STR_68
  4167   000AD4  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4168   000AD6  ECFF  F012         	call	_printf	;wreg free
  4169                           
  4170                           ;main.c: 302: 
  4171   000ADA  EFCA  F006         	goto	l5268
  4172   000ADE                     l5202:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;main.c: 306: 
  4176   000ADE  0E85               	movlw	low STR_69
  4177   000AE0  6FA2               	movwf	printf@fmt& (0+255),b
  4178   000AE2  0E7A               	movlw	high STR_69
  4179   000AE4  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4180   000AE6  ECFF  F012         	call	_printf	;wreg free
  4181                           
  4182                           ;main.c: 307:                     printf("\n\rSpooled %u out of the %u blocks.\n\r", i, 
      +                          512);
  4183   000AEA  0E07               	movlw	low STR_70
  4184   000AEC  0100               	movlb	0	; () banked
  4185   000AEE  6FA2               	movwf	printf@fmt& (0+255),b
  4186   000AF0  0E7A               	movlw	high STR_70
  4187   000AF2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4188   000AF4  ECFF  F012         	call	_printf	;wreg free
  4189                           
  4190                           ;main.c: 308:                     printf("To close the file follow these instructions:\n
      +                          \r");
  4191   000AF8  0E25               	movlw	low (STR_11+49)
  4192   000AFA  0100               	movlb	0	; () banked
  4193   000AFC  6FA2               	movwf	printf@fmt& (0+255),b
  4194   000AFE  0E7B               	movlw	high (STR_11+49)
  4195   000B00  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4196   000B02  ECFF  F012         	call	_printf	;wreg free
  4197                           
  4198                           ;main.c: 309:                     printf("\n\r");
  4199   000B06  0E4B               	movlw	low STR_72
  4200   000B08  0100               	movlb	0	; () banked
  4201   000B0A  6FA2               	movwf	printf@fmt& (0+255),b
  4202   000B0C  0E7A               	movlw	high STR_72
  4203   000B0E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4204   000B10  ECFF  F012         	call	_printf	;wreg free
  4205                           
  4206                           ;main.c: 310:                     printf("Right mouse click on the upper left of the PuT
      +                          TY window\n\r");
  4207   000B14  0E0B               	movlw	low STR_73
  4208   000B16  0100               	movlb	0	; () banked
  4209   000B18  6FA2               	movwf	printf@fmt& (0+255),b
  4210   000B1A  0E7D               	movlw	high STR_73
  4211   000B1C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4212   000B1E  ECFF  F012         	call	_printf	;wreg free
  4213                           
  4214                           ;main.c: 311:                     printf("Select:     Change settings...\n\r");
  4215   000B22  0E85               	movlw	low STR_74
  4216   000B24  0100               	movlb	0	; () banked
  4217   000B26  6FA2               	movwf	printf@fmt& (0+255),b
  4218   000B28  0E7E               	movlw	high STR_74
  4219   000B2A  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4220   000B2C  ECFF  F012         	call	_printf	;wreg free
  4221                           
  4222                           ;main.c: 312:                     printf("Select:     Logging\n\r");
  4223   000B30  0E8E               	movlw	low STR_75
  4224   000B32  0100               	movlb	0	; () banked
  4225   000B34  6FA2               	movwf	printf@fmt& (0+255),b
  4226   000B36  0E7B               	movlw	high STR_75
  4227   000B38  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4228   000B3A  ECFF  F012         	call	_printf	;wreg free
  4229                           
  4230                           ;main.c: 313:                     printf("Select:     Session  logging: None\n\r");
  4231   000B3E  0EBF               	movlw	low STR_76
  4232   000B40  0100               	movlb	0	; () banked
  4233   000B42  6FA2               	movwf	printf@fmt& (0+255),b
  4234   000B44  0E79               	movlw	high STR_76
  4235   000B46  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4236   000B48  ECFF  F012         	call	_printf	;wreg free
  4237                           
  4238                           ;main.c: 314:                     printf("Select:     Apply\n\r");
  4239   000B4C  0ED8               	movlw	low STR_77
  4240   000B4E  0100               	movlb	0	; () banked
  4241   000B50  6FA2               	movwf	printf@fmt& (0+255),b
  4242   000B52  0E7E               	movlw	high STR_77
  4243   000B54  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4244   000B56  ECFF  F012         	call	_printf	;wreg free
  4245                           
  4246                           ;main.c: 315:                     break;
  4247   000B5A  0E0D               	movlw	low STR_78
  4248   000B5C  0100               	movlb	0	; () banked
  4249   000B5E  6FA2               	movwf	printf@fmt& (0+255),b
  4250   000B60  0E7E               	movlw	high STR_78
  4251   000B62  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4252   000B64  ECFF  F012         	call	_printf	;wreg free
  4253   000B68                     l5204:
  4254   000B68  ECAC  F013         	call	_EUSART1_is_rx_ready	;wreg free
  4255   000B6C  0900               	iorlw	0
  4256   000B6E  B4D8               	btfsc	status,2,c
  4257   000B70  EFBC  F005         	goto	u4261
  4258   000B74  EFBE  F005         	goto	u4260
  4259   000B78                     u4261:
  4260   000B78  EFB4  F005         	goto	l5204
  4261   000B7C                     u4260:
  4262   000B7C                     
  4263                           ;main.c: 317:                 default:
  4264   000B7C  EC13  F013         	call	_EUSART1_Read	;wreg free
  4265   000B80                     
  4266                           ;main.c: 319:                     break;
  4267   000B80  C123  F11F         	movff	main@address,main@currentAddress
  4268   000B84  C124  F120         	movff	main@address+1,main@currentAddress+1
  4269   000B88  C125  F121         	movff	main@address+2,main@currentAddress+2
  4270   000B8C  C126  F122         	movff	main@address+3,main@currentAddress+3
  4271   000B90                     
  4272                           ;main.c: 320:             }
  4273   000B90  0E00               	movlw	0
  4274   000B92  0101               	movlb	1	; () banked
  4275   000B94  6F28               	movwf	(main@i+1)& (0+255),b
  4276   000B96  0E00               	movlw	0
  4277   000B98  6F27               	movwf	main@i& (0+255),b
  4278   000B9A                     l5216:
  4279                           
  4280                           ; BSR set to: 1
  4281                           ;main.c: 321:             printf("> ");;main.c: 323:     }
  4282   000B9A  C11F  F015         	movff	main@currentAddress,SDCARD_ReadBlock@addr
  4283   000B9E  C120  F016         	movff	main@currentAddress+1,SDCARD_ReadBlock@addr+1
  4284   000BA2  C121  F017         	movff	main@currentAddress+2,SDCARD_ReadBlock@addr+2
  4285   000BA6  C122  F018         	movff	main@currentAddress+3,SDCARD_ReadBlock@addr+3
  4286   000BAA  0E29               	movlw	low _doubleBuffer
  4287   000BAC  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  4288   000BAE  0E01               	movlw	high _doubleBuffer
  4289   000BB0  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  4290   000BB2  EC61  F010         	call	_SDCARD_ReadBlock	;wreg free
  4291   000BB6  0E00               	movlw	0
  4292   000BB8  0101               	movlb	1	; () banked
  4293   000BBA  6F1E               	movwf	(main@j+1)& (0+255),b
  4294   000BBC  0E00               	movlw	0
  4295   000BBE  6F1D               	movwf	main@j& (0+255),b
  4296   000BC0                     l5224:
  4297                           
  4298                           ; BSR set to: 1
  4299   000BC0  0EE7               	movlw	low STR_79
  4300   000BC2  0100               	movlb	0	; () banked
  4301   000BC4  6FA2               	movwf	printf@fmt& (0+255),b
  4302   000BC6  0E7F               	movlw	high STR_79
  4303   000BC8  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4304   000BCA  0E29               	movlw	low _doubleBuffer
  4305   000BCC  0101               	movlb	1	; () banked
  4306   000BCE  251D               	addwf	main@j& (0+255),w,b
  4307   000BD0  6ED9               	movwf	fsr2l,c
  4308   000BD2  0E01               	movlw	high _doubleBuffer
  4309   000BD4  211E               	addwfc	(main@j+1)& (0+255),w,b
  4310   000BD6  6EDA               	movwf	fsr2h,c
  4311   000BD8  50DF               	movf	indf2,w,c
  4312   000BDA  0100               	movlb	0	; () banked
  4313   000BDC  6FB8               	movwf	??_main& (0+255),b
  4314   000BDE  51B8               	movf	??_main& (0+255),w,b
  4315   000BE0  6FA4               	movwf	(?_printf+2)& (0+255),b
  4316   000BE2  6BA5               	clrf	(?_printf+3)& (0+255),b
  4317   000BE4  0EF7               	movlw	low (STR_94+2)
  4318   000BE6  6FA6               	movwf	(?_printf+4)& (0+255),b
  4319   000BE8  0E7F               	movlw	high (STR_94+2)
  4320   000BEA  6FA7               	movwf	(?_printf+5)& (0+255),b
  4321   000BEC  ECFF  F012         	call	_printf	;wreg free
  4322   000BF0  ECAC  F013         	call	_EUSART1_is_rx_ready	;wreg free
  4323   000BF4  06E8               	decf	wreg,f,c
  4324   000BF6  A4D8               	btfss	status,2,c
  4325   000BF8  EF00  F006         	goto	u4271
  4326   000BFC  EF02  F006         	goto	u4270
  4327   000C00                     u4271:
  4328   000C00  EF04  F006         	goto	l5230
  4329   000C04                     u4270:
  4330   000C04  EF10  F006         	goto	l5234
  4331   000C08                     l5230:
  4332   000C08  0101               	movlb	1	; () banked
  4333   000C0A  4B1D               	infsnz	main@j& (0+255),f,b
  4334   000C0C  2B1E               	incf	(main@j+1)& (0+255),f,b
  4335   000C0E                     
  4336                           ; BSR set to: 1
  4337   000C0E  0E02               	movlw	2
  4338   000C10  5D1E               	subwf	(main@j+1)& (0+255),w,b
  4339   000C12  A0D8               	btfss	status,0,c
  4340   000C14  EF0E  F006         	goto	u4281
  4341   000C18  EF10  F006         	goto	u4280
  4342   000C1C                     u4281:
  4343   000C1C  EFE0  F005         	goto	l5224
  4344   000C20                     u4280:
  4345   000C20                     l5234:
  4346   000C20  ECAC  F013         	call	_EUSART1_is_rx_ready	;wreg free
  4347   000C24  06E8               	decf	wreg,f,c
  4348   000C26  A4D8               	btfss	status,2,c
  4349   000C28  EF18  F006         	goto	u4291
  4350   000C2C  EF1A  F006         	goto	u4290
  4351   000C30                     u4291:
  4352   000C30  EF1C  F006         	goto	l5238
  4353   000C34                     u4290:
  4354   000C34  EF30  F006         	goto	l5244
  4355   000C38                     l5238:
  4356   000C38  0E00               	movlw	0
  4357   000C3A  0101               	movlb	1	; () banked
  4358   000C3C  271F               	addwf	main@currentAddress& (0+255),f,b
  4359   000C3E  0E02               	movlw	2
  4360   000C40  2320               	addwfc	(main@currentAddress+1)& (0+255),f,b
  4361   000C42  0E00               	movlw	0
  4362   000C44  2321               	addwfc	(main@currentAddress+2)& (0+255),f,b
  4363   000C46  0E00               	movlw	0
  4364   000C48  2322               	addwfc	(main@currentAddress+3)& (0+255),f,b
  4365   000C4A                     
  4366                           ; BSR set to: 1
  4367   000C4A  4B27               	infsnz	main@i& (0+255),f,b
  4368   000C4C  2B28               	incf	(main@i+1)& (0+255),f,b
  4369   000C4E                     
  4370                           ; BSR set to: 1
  4371   000C4E  0E02               	movlw	2
  4372   000C50  5D28               	subwf	(main@i+1)& (0+255),w,b
  4373   000C52  A0D8               	btfss	status,0,c
  4374   000C54  EF2E  F006         	goto	u4301
  4375   000C58  EF30  F006         	goto	u4300
  4376   000C5C                     u4301:
  4377   000C5C  EFCD  F005         	goto	l5216
  4378   000C60                     u4300:
  4379   000C60                     l5244:
  4380   000C60  EC13  F013         	call	_EUSART1_Read	;wreg free
  4381   000C64  0E9C               	movlw	low STR_81
  4382   000C66  0100               	movlb	0	; () banked
  4383   000C68  6FA2               	movwf	printf@fmt& (0+255),b
  4384   000C6A  0E7C               	movlw	high STR_81
  4385   000C6C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4386   000C6E  C127  F0A4         	movff	main@i,?_printf+2
  4387   000C72  C128  F0A5         	movff	main@i+1,?_printf+3
  4388   000C76  0E02               	movlw	2
  4389   000C78  6FA7               	movwf	(?_printf+5)& (0+255),b
  4390   000C7A  0E00               	movlw	0
  4391   000C7C  6FA6               	movwf	(?_printf+4)& (0+255),b
  4392   000C7E  ECFF  F012         	call	_printf	;wreg free
  4393   000C82  0EC0               	movlw	low STR_82
  4394   000C84  0100               	movlb	0	; () banked
  4395   000C86  6FA2               	movwf	printf@fmt& (0+255),b
  4396   000C88  0E7B               	movlw	high STR_82
  4397   000C8A  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4398   000C8C  ECFF  F012         	call	_printf	;wreg free
  4399   000C90  0E25               	movlw	low (STR_11+49)
  4400   000C92  0100               	movlb	0	; () banked
  4401   000C94  6FA2               	movwf	printf@fmt& (0+255),b
  4402   000C96  0E7B               	movlw	high (STR_11+49)
  4403   000C98  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4404   000C9A  ECFF  F012         	call	_printf	;wreg free
  4405   000C9E  0E4B               	movlw	low STR_72
  4406   000CA0  0100               	movlb	0	; () banked
  4407   000CA2  6FA2               	movwf	printf@fmt& (0+255),b
  4408   000CA4  0E7A               	movlw	high STR_72
  4409   000CA6  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4410   000CA8  ECFF  F012         	call	_printf	;wreg free
  4411   000CAC  0E0B               	movlw	low STR_73
  4412   000CAE  0100               	movlb	0	; () banked
  4413   000CB0  6FA2               	movwf	printf@fmt& (0+255),b
  4414   000CB2  0E7D               	movlw	high STR_73
  4415   000CB4  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4416   000CB6  ECFF  F012         	call	_printf	;wreg free
  4417   000CBA  0E85               	movlw	low STR_74
  4418   000CBC  0100               	movlb	0	; () banked
  4419   000CBE  6FA2               	movwf	printf@fmt& (0+255),b
  4420   000CC0  0E7E               	movlw	high STR_74
  4421   000CC2  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4422   000CC4  ECFF  F012         	call	_printf	;wreg free
  4423   000CC8  0EC1               	movlw	low STR_87
  4424   000CCA  0100               	movlb	0	; () banked
  4425   000CCC  6FA2               	movwf	printf@fmt& (0+255),b
  4426   000CCE  0E7C               	movlw	high STR_87
  4427   000CD0  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4428   000CD2  ECFF  F012         	call	_printf	;wreg free
  4429   000CD6  0ED8               	movlw	low STR_77
  4430   000CD8  0100               	movlb	0	; () banked
  4431   000CDA  6FA2               	movwf	printf@fmt& (0+255),b
  4432   000CDC  0E7E               	movlw	high STR_77
  4433   000CDE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4434   000CE0  ECFF  F012         	call	_printf	;wreg free
  4435   000CE4  EFCA  F006         	goto	l5268
  4436   000CE8                     l5262:
  4437                           
  4438                           ; BSR set to: 0
  4439   000CE8  0E24               	movlw	low STR_89
  4440   000CEA  6FA2               	movwf	printf@fmt& (0+255),b
  4441   000CEC  0E7F               	movlw	high STR_89
  4442   000CEE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4443   000CF0  C11B  F0A4         	movff	main@cmd,?_printf+2
  4444   000CF4  6BA5               	clrf	(?_printf+3)& (0+255),b
  4445   000CF6  ECFF  F012         	call	_printf	;wreg free
  4446   000CFA  EFCA  F006         	goto	l5268
  4447   000CFE                     l5266:
  4448   000CFE  0101               	movlb	1	; () banked
  4449   000D00  511B               	movf	main@cmd& (0+255),w,b
  4450   000D02  0100               	movlb	0	; () banked
  4451   000D04  6FB8               	movwf	??_main& (0+255),b
  4452   000D06  6BB9               	clrf	(??_main+1)& (0+255),b
  4453                           
  4454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4455                           ; Switch size 1, requested type "simple"
  4456                           ; Number of cases is 1, Range of values is 0 to 0
  4457                           ; switch strategies available:
  4458                           ; Name         Instructions Cycles
  4459                           ; simple_byte            4     3 (average)
  4460                           ;	Chosen strategy is simple_byte
  4461   000D08  51B9               	movf	(??_main+1)& (0+255),w,b
  4462   000D0A  0A00               	xorlw	0	; case 0
  4463   000D0C  B4D8               	btfsc	status,2,c
  4464   000D0E  EF8B  F006         	goto	l5386
  4465   000D12  EF74  F006         	goto	l5262
  4466   000D16                     l5386:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ; Switch size 1, requested type "simple"
  4470                           ; Number of cases is 15, Range of values is 43 to 122
  4471                           ; switch strategies available:
  4472                           ; Name         Instructions Cycles
  4473                           ; simple_byte           46    24 (average)
  4474                           ;	Chosen strategy is simple_byte
  4475   000D16  51B8               	movf	??_main& (0+255),w,b
  4476   000D18  0A2B               	xorlw	43	; case 43
  4477   000D1A  B4D8               	btfsc	status,2,c
  4478   000D1C  EF98  F004         	goto	l5162
  4479   000D20  0A06               	xorlw	6	; case 45
  4480   000D22  B4D8               	btfsc	status,2,c
  4481   000D24  EFB9  F004         	goto	l5168
  4482   000D28  0A1D               	xorlw	29	; case 48
  4483   000D2A  B4D8               	btfsc	status,2,c
  4484   000D2C  EF1F  F003         	goto	l469
  4485   000D30  0A01               	xorlw	1	; case 49
  4486   000D32  B4D8               	btfsc	status,2,c
  4487   000D34  EFE8  F003         	goto	l481
  4488   000D38  0A0E               	xorlw	14	; case 63
  4489   000D3A  B4D8               	btfsc	status,2,c
  4490   000D3C  EFA6  F000         	goto	l4986
  4491   000D40  0A7E               	xorlw	126	; case 65
  4492   000D42  B4D8               	btfsc	status,2,c
  4493   000D44  EFD3  F001         	goto	l5028
  4494   000D48  0A16               	xorlw	22	; case 87
  4495   000D4A  B4D8               	btfsc	status,2,c
  4496   000D4C  EFDA  F004         	goto	l5174
  4497   000D50  0A0D               	xorlw	13	; case 90
  4498   000D52  B4D8               	btfsc	status,2,c
  4499   000D54  EF26  F001         	goto	l4990
  4500   000D58  0A3B               	xorlw	59	; case 97
  4501   000D5A  B4D8               	btfsc	status,2,c
  4502   000D5C  EF69  F001         	goto	l5020
  4503   000D60  0A08               	xorlw	8	; case 105
  4504   000D62  B4D8               	btfsc	status,2,c
  4505   000D64  EF5F  F001         	goto	l5014
  4506   000D68  0A06               	xorlw	6	; case 111
  4507   000D6A  B4D8               	btfsc	status,2,c
  4508   000D6C  EF1E  F001         	goto	l4988
  4509   000D70  0A1D               	xorlw	29	; case 114
  4510   000D72  B4D8               	btfsc	status,2,c
  4511   000D74  EF3D  F002         	goto	l455
  4512   000D78  0A01               	xorlw	1	; case 115
  4513   000D7A  B4D8               	btfsc	status,2,c
  4514   000D7C  EF6F  F005         	goto	l5202
  4515   000D80  0A04               	xorlw	4	; case 119
  4516   000D82  B4D8               	btfsc	status,2,c
  4517   000D84  EF9A  F002         	goto	l5054
  4518   000D88  0A0D               	xorlw	13	; case 122
  4519   000D8A  B4D8               	btfsc	status,2,c
  4520   000D8C  EF43  F001         	goto	l5002
  4521   000D90  EF74  F006         	goto	l5262
  4522   000D94                     l5268:
  4523   000D94  0E99               	movlw	low (STR_4+39)
  4524   000D96  0100               	movlb	0	; () banked
  4525   000D98  6FA2               	movwf	printf@fmt& (0+255),b
  4526   000D9A  0E7C               	movlw	high (STR_4+39)
  4527   000D9C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4528   000D9E  ECFF  F012         	call	_printf	;wreg free
  4529   000DA2  EF8C  F000         	goto	l4980
  4530   000DA6  EF2F  F000         	goto	start
  4531   000DAA                     __end_of_main:
  4532                           	callstack 0
  4533                           
  4534 ;; *************** function _hexDumpBuffer *****************
  4535 ;; Defined at:
  4536 ;;		line 160 in file "sdCard.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;  sdCardBuffer    2   78[BANK0 ] PTR unsigned char 
  4539 ;;		 -> doubleBuffer(1024), 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  j               2   84[BANK0 ] int 
  4542 ;;  i               2   86[BANK0 ] unsigned short 
  4543 ;;  j               2   82[BANK0 ] unsigned short 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4553 ;;      Params:         0       2       0       0       0       0       0
  4554 ;;      Locals:         0       6       0       0       0       0       0
  4555 ;;      Temps:          0       2       0       0       0       0       0
  4556 ;;      Totals:         0      10       0       0       0       0       0
  4557 ;;Total ram usage:       10 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 13
  4560 ;; This function calls:
  4561 ;;		_printf
  4562 ;; This function is called by:
  4563 ;;		_main
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text1
  4568   0013F8                     __ptext1:
  4569                           	callstack 0
  4570   0013F8                     _hexDumpBuffer:
  4571                           	callstack 17
  4572   0013F8                     
  4573                           ;sdCard.c: 160:             printf("  ");;sdCard.c: 161:             for (j = i - 16; j 
      +                          < i; j++);sdCard.c: 163:                 if (sdCardBuffer[j] < 32);sdCard.c: 164:       
      +                                    {;sdCard.c: 166:                 }
  4574   0013F8  0EF5               	movlw	low STR_94
  4575   0013FA  0100               	movlb	0	; () banked
  4576   0013FC  6FA2               	movwf	printf@fmt& (0+255),b
  4577   0013FE  0E7F               	movlw	high STR_94
  4578   001400  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4579   001402  ECFF  F012         	call	_printf	;wreg free
  4580   001406                     
  4581                           ;sdCard.c: 167:                 else
  4582   001406  0E00               	movlw	0
  4583   001408  0100               	movlb	0	; () banked
  4584   00140A  6FB7               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  4585   00140C  0E00               	movlw	0
  4586   00140E  6FB6               	movwf	hexDumpBuffer@i& (0+255),b
  4587   001410                     l4828:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;sdCard.c: 168:                 {;sdCard.c: 169:                     printf("%c", sdCard
      +                          Buffer[j]);
  4591   001410  51B6               	movf	hexDumpBuffer@i& (0+255),w,b
  4592   001412  11B7               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4593   001414  B4D8               	btfsc	status,2,c
  4594   001416  EF0F  F00A         	goto	u3871
  4595   00141A  EF11  F00A         	goto	u3870
  4596   00141E                     u3871:
  4597   00141E  EF26  F00A         	goto	l4834
  4598   001422                     u3870:
  4599   001422                     
  4600                           ; BSR set to: 0
  4601   001422  0E07               	movlw	7
  4602   001424  15B6               	andwf	hexDumpBuffer@i& (0+255),w,b
  4603   001426  6FB0               	movwf	??_hexDumpBuffer& (0+255),b
  4604   001428  0E00               	movlw	0
  4605   00142A  15B7               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4606   00142C  6FB1               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4607   00142E  51B0               	movf	??_hexDumpBuffer& (0+255),w,b
  4608   001430  11B1               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4609   001432  A4D8               	btfss	status,2,c
  4610   001434  EF1E  F00A         	goto	u3881
  4611   001438  EF20  F00A         	goto	u3880
  4612   00143C                     u3881:
  4613   00143C  EF26  F00A         	goto	l4834
  4614   001440                     u3880:
  4615   001440                     
  4616                           ; BSR set to: 0
  4617   001440  0E55               	movlw	low (STR_41+15)
  4618   001442  6FA2               	movwf	printf@fmt& (0+255),b
  4619   001444  0E7F               	movlw	high (STR_41+15)
  4620   001446  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4621   001448  ECFF  F012         	call	_printf	;wreg free
  4622   00144C                     l4834:
  4623                           
  4624                           ;sdCard.c: 170:                 }
  4625   00144C  0100               	movlb	0	; () banked
  4626   00144E  51B6               	movf	hexDumpBuffer@i& (0+255),w,b
  4627   001450  11B7               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4628   001452  B4D8               	btfsc	status,2,c
  4629   001454  EF2E  F00A         	goto	u3891
  4630   001458  EF30  F00A         	goto	u3890
  4631   00145C                     u3891:
  4632   00145C  EF89  F00A         	goto	l599
  4633   001460                     u3890:
  4634   001460                     
  4635                           ; BSR set to: 0
  4636   001460  0E0F               	movlw	15
  4637   001462  15B6               	andwf	hexDumpBuffer@i& (0+255),w,b
  4638   001464  6FB0               	movwf	??_hexDumpBuffer& (0+255),b
  4639   001466  0E00               	movlw	0
  4640   001468  15B7               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4641   00146A  6FB1               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  4642   00146C  51B0               	movf	??_hexDumpBuffer& (0+255),w,b
  4643   00146E  11B1               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  4644   001470  A4D8               	btfss	status,2,c
  4645   001472  EF3D  F00A         	goto	u3901
  4646   001476  EF3F  F00A         	goto	u3900
  4647   00147A                     u3901:
  4648   00147A  EF89  F00A         	goto	l599
  4649   00147E                     u3900:
  4650   00147E                     
  4651                           ; BSR set to: 0
  4652                           ;sdCard.c: 171:             };sdCard.c: 172:             printf("\r\n");
  4653   00147E  0E54               	movlw	low (STR_41+14)
  4654   001480  6FA2               	movwf	printf@fmt& (0+255),b
  4655   001482  0E7F               	movlw	high (STR_41+14)
  4656   001484  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4657   001486  ECFF  F012         	call	_printf	;wreg free
  4658   00148A                     
  4659                           ;sdCard.c: 173:         }
  4660   00148A  0EF0               	movlw	240
  4661   00148C  0100               	movlb	0	; () banked
  4662   00148E  25B6               	addwf	hexDumpBuffer@i& (0+255),w,b
  4663   001490  6FB2               	movwf	hexDumpBuffer@j& (0+255),b
  4664   001492  0EFF               	movlw	255
  4665   001494  21B7               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4666   001496  6FB3               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  4667   001498  EF78  F00A         	goto	l4850
  4668   00149C                     l4842:
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;sdCard.c: 174:         printf("%02x ", sdCardBuffer[i]);;sdCard.c: 175:     }
  4672   00149C  51B2               	movf	hexDumpBuffer@j& (0+255),w,b
  4673   00149E  25AE               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4674   0014A0  6ED9               	movwf	fsr2l,c
  4675   0014A2  51B3               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4676   0014A4  21AF               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4677   0014A6  6EDA               	movwf	fsr2h,c
  4678   0014A8  0E20               	movlw	32
  4679   0014AA  60DF               	cpfslt	indf2,c
  4680   0014AC  EF5A  F00A         	goto	u3911
  4681   0014B0  EF5C  F00A         	goto	u3910
  4682   0014B4                     u3911:
  4683   0014B4  EF64  F00A         	goto	l4846
  4684   0014B8                     u3910:
  4685   0014B8                     
  4686                           ; BSR set to: 0
  4687                           ;sdCard.c: 176:     printf("   ");;sdCard.c: 177:     for (int j = i - 16; j < i; j++)
  4688   0014B8  0EFC               	movlw	low STR_97
  4689   0014BA  6FA2               	movwf	printf@fmt& (0+255),b
  4690   0014BC  0E7F               	movlw	high STR_97
  4691   0014BE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4692   0014C0  ECFF  F012         	call	_printf	;wreg free
  4693                           
  4694                           ;sdCard.c: 178:     {
  4695   0014C4  EF75  F00A         	goto	l4848
  4696   0014C8                     l4846:
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;sdCard.c: 180:         {;sdCard.c: 181:             printf(".");
  4700   0014C8  0EF9               	movlw	low STR_98
  4701   0014CA  6FA2               	movwf	printf@fmt& (0+255),b
  4702   0014CC  0E7F               	movlw	high STR_98
  4703   0014CE  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4704   0014D0  51B2               	movf	hexDumpBuffer@j& (0+255),w,b
  4705   0014D2  25AE               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4706   0014D4  6ED9               	movwf	fsr2l,c
  4707   0014D6  51B3               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  4708   0014D8  21AF               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4709   0014DA  6EDA               	movwf	fsr2h,c
  4710   0014DC  50DF               	movf	indf2,w,c
  4711   0014DE  6FB0               	movwf	??_hexDumpBuffer& (0+255),b
  4712   0014E0  51B0               	movf	??_hexDumpBuffer& (0+255),w,b
  4713   0014E2  6FA4               	movwf	(?_printf+2)& (0+255),b
  4714   0014E4  6BA5               	clrf	(?_printf+3)& (0+255),b
  4715   0014E6  ECFF  F012         	call	_printf	;wreg free
  4716   0014EA                     l4848:
  4717                           
  4718                           ;sdCard.c: 183:         else
  4719   0014EA  0100               	movlb	0	; () banked
  4720   0014EC  4BB2               	infsnz	hexDumpBuffer@j& (0+255),f,b
  4721   0014EE  2BB3               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  4722   0014F0                     l4850:
  4723                           
  4724                           ; BSR set to: 0
  4725   0014F0  51B6               	movf	hexDumpBuffer@i& (0+255),w,b
  4726   0014F2  5DB2               	subwf	hexDumpBuffer@j& (0+255),w,b
  4727   0014F4  51B7               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4728   0014F6  59B3               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  4729   0014F8  A0D8               	btfss	status,0,c
  4730   0014FA  EF81  F00A         	goto	u3921
  4731   0014FE  EF83  F00A         	goto	u3920
  4732   001502                     u3921:
  4733   001502  EF4E  F00A         	goto	l4842
  4734   001506                     u3920:
  4735   001506                     
  4736                           ; BSR set to: 0
  4737                           ;sdCard.c: 184:         {
  4738   001506  0E73               	movlw	low (STR_40+12)
  4739   001508  6FA2               	movwf	printf@fmt& (0+255),b
  4740   00150A  0E7F               	movlw	high (STR_40+12)
  4741   00150C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4742   00150E  ECFF  F012         	call	_printf	;wreg free
  4743   001512                     l599:
  4744                           
  4745                           ;sdCard.c: 186:         }
  4746   001512  0ED6               	movlw	low STR_100
  4747   001514  0100               	movlb	0	; () banked
  4748   001516  6FA2               	movwf	printf@fmt& (0+255),b
  4749   001518  0E7F               	movlw	high STR_100
  4750   00151A  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4751   00151C  51B6               	movf	hexDumpBuffer@i& (0+255),w,b
  4752   00151E  25AE               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4753   001520  6ED9               	movwf	fsr2l,c
  4754   001522  51B7               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4755   001524  21AF               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4756   001526  6EDA               	movwf	fsr2h,c
  4757   001528  50DF               	movf	indf2,w,c
  4758   00152A  6FB0               	movwf	??_hexDumpBuffer& (0+255),b
  4759   00152C  51B0               	movf	??_hexDumpBuffer& (0+255),w,b
  4760   00152E  6FA4               	movwf	(?_printf+2)& (0+255),b
  4761   001530  6BA5               	clrf	(?_printf+3)& (0+255),b
  4762   001532  ECFF  F012         	call	_printf	;wreg free
  4763   001536                     
  4764                           ;sdCard.c: 187:     }
  4765   001536  0100               	movlb	0	; () banked
  4766   001538  4BB6               	infsnz	hexDumpBuffer@i& (0+255),f,b
  4767   00153A  2BB7               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  4768   00153C                     
  4769                           ; BSR set to: 0
  4770   00153C  0E02               	movlw	2
  4771   00153E  5DB7               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  4772   001540  A0D8               	btfss	status,0,c
  4773   001542  EFA5  F00A         	goto	u3931
  4774   001546  EFA7  F00A         	goto	u3930
  4775   00154A                     u3931:
  4776   00154A  EF08  F00A         	goto	l4828
  4777   00154E                     u3930:
  4778   00154E                     
  4779                           ; BSR set to: 0
  4780                           ;sdCard.c: 188:     printf("\r\n");
  4781   00154E  0E53               	movlw	low (STR_41+13)
  4782   001550  6FA2               	movwf	printf@fmt& (0+255),b
  4783   001552  0E7F               	movlw	high (STR_41+13)
  4784   001554  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4785   001556  ECFF  F012         	call	_printf	;wreg free
  4786   00155A                     
  4787                           ;sdCard.c: 189: }
  4788   00155A  0EF0               	movlw	240
  4789   00155C  0100               	movlb	0	; () banked
  4790   00155E  25B6               	addwf	hexDumpBuffer@i& (0+255),w,b
  4791   001560  6FB4               	movwf	hexDumpBuffer@j_1480& (0+255),b
  4792   001562  0EFF               	movlw	255
  4793   001564  21B7               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  4794   001566  6FB5               	movwf	(hexDumpBuffer@j_1480+1)& (0+255),b
  4795   001568  EFE0  F00A         	goto	l4870
  4796   00156C                     l4862:
  4797                           
  4798                           ; BSR set to: 0
  4799   00156C  51B4               	movf	hexDumpBuffer@j_1480& (0+255),w,b
  4800   00156E  25AE               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4801   001570  6ED9               	movwf	fsr2l,c
  4802   001572  51B5               	movf	(hexDumpBuffer@j_1480+1)& (0+255),w,b
  4803   001574  21AF               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4804   001576  6EDA               	movwf	fsr2h,c
  4805   001578  0E20               	movlw	32
  4806   00157A  60DF               	cpfslt	indf2,c
  4807   00157C  EFC2  F00A         	goto	u3941
  4808   001580  EFC4  F00A         	goto	u3940
  4809   001584                     u3941:
  4810   001584  EFCC  F00A         	goto	l4866
  4811   001588                     u3940:
  4812   001588                     
  4813                           ; BSR set to: 0
  4814   001588  0EFC               	movlw	low STR_97
  4815   00158A  6FA2               	movwf	printf@fmt& (0+255),b
  4816   00158C  0E7F               	movlw	high STR_97
  4817   00158E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4818   001590  ECFF  F012         	call	_printf	;wreg free
  4819   001594  EFDD  F00A         	goto	l4868
  4820   001598                     l4866:
  4821                           
  4822                           ; BSR set to: 0
  4823   001598  0EF9               	movlw	low STR_98
  4824   00159A  6FA2               	movwf	printf@fmt& (0+255),b
  4825   00159C  0E7F               	movlw	high STR_98
  4826   00159E  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4827   0015A0  51B4               	movf	hexDumpBuffer@j_1480& (0+255),w,b
  4828   0015A2  25AE               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  4829   0015A4  6ED9               	movwf	fsr2l,c
  4830   0015A6  51B5               	movf	(hexDumpBuffer@j_1480+1)& (0+255),w,b
  4831   0015A8  21AF               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  4832   0015AA  6EDA               	movwf	fsr2h,c
  4833   0015AC  50DF               	movf	indf2,w,c
  4834   0015AE  6FB0               	movwf	??_hexDumpBuffer& (0+255),b
  4835   0015B0  51B0               	movf	??_hexDumpBuffer& (0+255),w,b
  4836   0015B2  6FA4               	movwf	(?_printf+2)& (0+255),b
  4837   0015B4  6BA5               	clrf	(?_printf+3)& (0+255),b
  4838   0015B6  ECFF  F012         	call	_printf	;wreg free
  4839   0015BA                     l4868:
  4840   0015BA  0100               	movlb	0	; () banked
  4841   0015BC  4BB4               	infsnz	hexDumpBuffer@j_1480& (0+255),f,b
  4842   0015BE  2BB5               	incf	(hexDumpBuffer@j_1480+1)& (0+255),f,b
  4843   0015C0                     l4870:
  4844                           
  4845                           ; BSR set to: 0
  4846   0015C0  51B6               	movf	hexDumpBuffer@i& (0+255),w,b
  4847   0015C2  5DB4               	subwf	hexDumpBuffer@j_1480& (0+255),w,b
  4848   0015C4  51B7               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  4849   0015C6  59B5               	subwfb	(hexDumpBuffer@j_1480+1)& (0+255),w,b
  4850   0015C8  A0D8               	btfss	status,0,c
  4851   0015CA  EFE9  F00A         	goto	u3951
  4852   0015CE  EFEB  F00A         	goto	u3950
  4853   0015D2                     u3951:
  4854   0015D2  EFB6  F00A         	goto	l4862
  4855   0015D6                     u3950:
  4856   0015D6                     
  4857                           ; BSR set to: 0
  4858   0015D6  0E73               	movlw	low (STR_40+12)
  4859   0015D8  6FA2               	movwf	printf@fmt& (0+255),b
  4860   0015DA  0E7F               	movlw	high (STR_40+12)
  4861   0015DC  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  4862   0015DE  ECFF  F012         	call	_printf	;wreg free
  4863   0015E2  0012               	return		;funcret
  4864   0015E4                     __end_of_hexDumpBuffer:
  4865                           	callstack 0
  4866                           
  4867 ;; *************** function _TMR1_WriteTimer *****************
  4868 ;; Defined at:
  4869 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  timerVal        2   19[COMRAM] unsigned short 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      void 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4883 ;;      Params:         2       0       0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0
  4886 ;;      Totals:         2       0       0       0       0       0       0
  4887 ;;Total ram usage:        2 bytes
  4888 ;; Hardware stack levels used: 1
  4889 ;; Hardware stack levels required when called: 4
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_main
  4894 ;;		_TMR1_Reload
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text2
  4899   0025D6                     __ptext2:
  4900                           	callstack 0
  4901   0025D6                     _TMR1_WriteTimer:
  4902                           	callstack 26
  4903   0025D6                     
  4904                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  4905   0025D6  A4CD               	btfss	205,2,c	;volatile
  4906   0025D8  EFF0  F012         	goto	u3771
  4907   0025DC  EFF2  F012         	goto	u3770
  4908   0025E0                     u3771:
  4909   0025E0  EFFA  F012         	goto	l4702
  4910   0025E4                     u3770:
  4911   0025E4                     
  4912                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  4913   0025E4  90CD               	bcf	205,0,c	;volatile
  4914   0025E6                     
  4915                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (uint8_t)(timerVal >> 8);
  4916   0025E6  5015               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4917   0025E8  6ECF               	movwf	207,c	;volatile
  4918   0025EA                     
  4919                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t)timerVal;
  4920   0025EA  C014  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4921   0025EE                     
  4922                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  4923   0025EE  80CD               	bsf	205,0,c	;volatile
  4924                           
  4925                           ;mcc_generated_files/tmr1.c: 127:     }
  4926   0025F0  EFFE  F012         	goto	l315
  4927   0025F4                     l4702:
  4928                           
  4929                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4930   0025F4  5015               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4931   0025F6  6ECF               	movwf	207,c	;volatile
  4932   0025F8                     
  4933                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  4934   0025F8  C014  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4935   0025FC                     l315:
  4936   0025FC  0012               	return		;funcret
  4937   0025FE                     __end_of_TMR1_WriteTimer:
  4938                           	callstack 0
  4939                           
  4940 ;; *************** function _TMR0_WriteTimer *****************
  4941 ;; Defined at:
  4942 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;  timerVal        2   19[COMRAM] unsigned short 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;		None
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4956 ;;      Params:         2       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0
  4959 ;;      Totals:         2       0       0       0       0       0       0
  4960 ;;Total ram usage:        2 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 4
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_main
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text3
  4971   002788                     __ptext3:
  4972                           	callstack 0
  4973   002788                     _TMR0_WriteTimer:
  4974                           	callstack 26
  4975   002788                     
  4976                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4977   002788  5015               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4978   00278A  6ED7               	movwf	215,c	;volatile
  4979   00278C                     
  4980                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4981   00278C  C014  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4982   002790  0012               	return		;funcret
  4983   002792                     __end_of_TMR0_WriteTimer:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _SYSTEM_Initialize *****************
  4987 ;; Defined at:
  4988 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         0       0       0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 6
  5009 ;; This function calls:
  5010 ;;		_ADC_Initialize
  5011 ;;		_EUSART1_Initialize
  5012 ;;		_INTERRUPT_Initialize
  5013 ;;		_OSCILLATOR_Initialize
  5014 ;;		_PIN_MANAGER_Initialize
  5015 ;;		_SPI2_Initialize
  5016 ;;		_TMR0_Initialize
  5017 ;;		_TMR1_Initialize
  5018 ;; This function is called by:
  5019 ;;		_main
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text4
  5024   00269A                     __ptext4:
  5025                           	callstack 0
  5026   00269A                     _SYSTEM_Initialize:
  5027                           	callstack 24
  5028   00269A                     
  5029                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5030   00269A  ECE7  F013         	call	_INTERRUPT_Initialize	;wreg free
  5031   00269E                     
  5032                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  5033   00269E  ECB6  F013         	call	_SPI2_Initialize	;wreg free
  5034   0026A2                     
  5035                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  5036   0026A2  ECBE  F012         	call	_PIN_MANAGER_Initialize	;wreg free
  5037   0026A6                     
  5038                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  5039   0026A6  EC7B  F013         	call	_OSCILLATOR_Initialize	;wreg free
  5040   0026AA                     
  5041                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  5042   0026AA  EC96  F013         	call	_ADC_Initialize	;wreg free
  5043   0026AE                     
  5044                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  5045   0026AE  EC6D  F013         	call	_TMR1_Initialize	;wreg free
  5046   0026B2                     
  5047                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  5048   0026B2  ECA3  F012         	call	_TMR0_Initialize	;wreg free
  5049   0026B6                     
  5050                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  5051   0026B6  EC4C  F012         	call	_EUSART1_Initialize	;wreg free
  5052   0026BA  0012               	return		;funcret
  5053   0026BC                     __end_of_SYSTEM_Initialize:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _TMR1_Initialize *****************
  5057 ;; Defined at:
  5058 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5072 ;;      Params:         0       0       0       0       0       0       0
  5073 ;;      Locals:         0       0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0
  5075 ;;      Totals:         0       0       0       0       0       0       0
  5076 ;;Total ram usage:        0 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 4
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_SYSTEM_Initialize
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text5
  5087   0026DA                     __ptext5:
  5088                           	callstack 0
  5089   0026DA                     _TMR1_Initialize:
  5090                           	callstack 25
  5091   0026DA                     
  5092                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5093   0026DA  0E00               	movlw	0
  5094   0026DC  6ECC               	movwf	204,c	;volatile
  5095                           
  5096                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x44;
  5097   0026DE  0E44               	movlw	68
  5098   0026E0  6ECF               	movwf	207,c	;volatile
  5099                           
  5100                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x80;
  5101   0026E2  0E80               	movlw	128
  5102   0026E4  6ECE               	movwf	206,c	;volatile
  5103   0026E6                     
  5104                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  5105   0026E6  CFCE F03D          	movff	4046,_timer1ReloadVal	;volatile
  5106   0026EA  CFCF F03E          	movff	4047,_timer1ReloadVal+1	;volatile
  5107   0026EE                     
  5108                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  5109   0026EE  909E               	bcf	158,0,c	;volatile
  5110                           
  5111                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  5112   0026F0  0E31               	movlw	49
  5113   0026F2  6ECD               	movwf	205,c	;volatile
  5114   0026F4  0012               	return		;funcret
  5115   0026F6                     __end_of_TMR1_Initialize:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _TMR0_Initialize *****************
  5119 ;; Defined at:
  5120 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5134 ;;      Params:         0       0       0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0
  5136 ;;      Temps:          2       0       0       0       0       0       0
  5137 ;;      Totals:         2       0       0       0       0       0       0
  5138 ;;Total ram usage:        2 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; Hardware stack levels required when called: 5
  5141 ;; This function calls:
  5142 ;;		_TMR0_SetInterruptHandler
  5143 ;; This function is called by:
  5144 ;;		_SYSTEM_Initialize
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text6
  5149   002546                     __ptext6:
  5150                           	callstack 0
  5151   002546                     _TMR0_Initialize:
  5152                           	callstack 24
  5153   002546                     
  5154                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5155   002546  9CD5               	bcf	213,6,c	;volatile
  5156   002548                     
  5157                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  5158   002548  0E00               	movlw	0
  5159   00254A  6ED7               	movwf	215,c	;volatile
  5160                           
  5161                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  5162   00254C  0E00               	movlw	0
  5163   00254E  6ED6               	movwf	214,c	;volatile
  5164   002550                     
  5165                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5166   002550  50D6               	movf	214,w,c	;volatile
  5167   002552  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  5168   002556  6A17               	clrf	(??_TMR0_Initialize+1)^0,c
  5169   002558  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5170   00255C  6A16               	clrf	??_TMR0_Initialize^0,c
  5171   00255E  1016               	iorwf	??_TMR0_Initialize^0,w,c
  5172   002560  6E43               	movwf	_timer0ReloadVal^0,c	;volatile
  5173   002562  5017               	movf	(??_TMR0_Initialize+1)^0,w,c
  5174   002564  6E44               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5175   002566                     
  5176                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5177   002566  94F2               	bcf	242,2,c	;volatile
  5178   002568                     
  5179                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5180   002568  8AF2               	bsf	242,5,c	;volatile
  5181   00256A                     
  5182                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5183   00256A  0ED6               	movlw	low _TMR0_DefaultInterruptHandler
  5184   00256C  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5185   00256E  0E27               	movlw	high _TMR0_DefaultInterruptHandler
  5186   002570  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5187   002572  ECC9  F013         	call	_TMR0_SetInterruptHandler	;wreg free
  5188   002576                     
  5189                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  5190   002576  0E9F               	movlw	159
  5191   002578  6ED5               	movwf	213,c	;volatile
  5192   00257A  0012               	return		;funcret
  5193   00257C                     __end_of_TMR0_Initialize:
  5194                           	callstack 0
  5195                           
  5196 ;; *************** function _TMR0_SetInterruptHandler *****************
  5197 ;; Defined at:
  5198 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  5201 ;;		 -> rwTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5213 ;;      Params:         2       0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0
  5216 ;;      Totals:         2       0       0       0       0       0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 4
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_TMR0_Initialize
  5224 ;;		_main
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text7
  5229   002792                     __ptext7:
  5230                           	callstack 0
  5231   002792                     _TMR0_SetInterruptHandler:
  5232                           	callstack 26
  5233   002792                     
  5234                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5235   002792  C014  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5236   002796  C015  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5237   00279A  0012               	return		;funcret
  5238   00279C                     __end_of_TMR0_SetInterruptHandler:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function _SPI2_Initialize *****************
  5242 ;; Defined at:
  5243 ;;		line 62 in file "mcc_generated_files/spi2.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5257 ;;      Params:         0       0       0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0
  5260 ;;      Totals:         0       0       0       0       0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 4
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_SYSTEM_Initialize
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text8
  5272   00276C                     __ptext8:
  5273                           	callstack 0
  5274   00276C                     _SPI2_Initialize:
  5275                           	callstack 25
  5276   00276C                     
  5277                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  5278   00276C  0E40               	movlw	64
  5279   00276E  6E6D               	movwf	109,c	;volatile
  5280                           
  5281                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  5282   002770  0E01               	movlw	1
  5283   002772  6E6C               	movwf	108,c	;volatile
  5284                           
  5285                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  5286   002774  0E01               	movlw	1
  5287   002776  6E6E               	movwf	110,c	;volatile
  5288   002778                     
  5289                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  5290   002778  9293               	bcf	147,1,c	;volatile
  5291   00277A                     
  5292                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  5293   00277A  9A6C               	bcf	108,5,c	;volatile
  5294   00277C  0012               	return		;funcret
  5295   00277E                     __end_of_SPI2_Initialize:
  5296                           	callstack 0
  5297                           
  5298 ;; *************** function _PIN_MANAGER_Initialize *****************
  5299 ;; Defined at:
  5300 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5314 ;;      Params:         0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0
  5316 ;;      Temps:          0       0       0       0       0       0       0
  5317 ;;      Totals:         0       0       0       0       0       0       0
  5318 ;;Total ram usage:        0 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 4
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		_SYSTEM_Initialize
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text9
  5329   00257C                     __ptext9:
  5330                           	callstack 0
  5331   00257C                     _PIN_MANAGER_Initialize:
  5332                           	callstack 25
  5333   00257C                     
  5334                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5335   00257C  0E00               	movlw	0
  5336   00257E  6E89               	movwf	137,c	;volatile
  5337                           
  5338                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5339   002580  0E00               	movlw	0
  5340   002582  6E8A               	movwf	138,c	;volatile
  5341                           
  5342                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5343   002584  0E00               	movlw	0
  5344   002586  6E8B               	movwf	139,c	;volatile
  5345                           
  5346                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xBF;
  5347   002588  0EBF               	movlw	191
  5348   00258A  6E92               	movwf	146,c	;volatile
  5349                           
  5350                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  5351   00258C  0EE5               	movlw	229
  5352   00258E  6E93               	movwf	147,c	;volatile
  5353                           
  5354                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x8F;
  5355   002590  0E8F               	movlw	143
  5356   002592  6E94               	movwf	148,c	;volatile
  5357                           
  5358                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5359   002594  0E3C               	movlw	60
  5360   002596  010F               	movlb	15	; () banked
  5361   002598  6F3A               	movwf	58,b	;volatile
  5362                           
  5363                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  5364   00259A  0E31               	movlw	49
  5365   00259C  6F39               	movwf	57,b	;volatile
  5366                           
  5367                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5368   00259E  0E2F               	movlw	47
  5369   0025A0  6F38               	movwf	56,b	;volatile
  5370                           
  5371                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5372   0025A2  0E00               	movlw	0
  5373   0025A4  6E61               	movwf	97,c	;volatile
  5374   0025A6                     
  5375                           ; BSR set to: 15
  5376                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5377   0025A6  8EF1               	bsf	241,7,c	;volatile
  5378   0025A8                     
  5379                           ; BSR set to: 15
  5380   0025A8  0012               	return		;funcret
  5381   0025AA                     __end_of_PIN_MANAGER_Initialize:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _OSCILLATOR_Initialize *****************
  5385 ;; Defined at:
  5386 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;		None
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5400 ;;      Params:         0       0       0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0
  5403 ;;      Totals:         0       0       0       0       0       0       0
  5404 ;;Total ram usage:        0 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; Hardware stack levels required when called: 4
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_SYSTEM_Initialize
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text10
  5415   0026F6                     __ptext10:
  5416                           	callstack 0
  5417   0026F6                     _OSCILLATOR_Initialize:
  5418                           	callstack 25
  5419   0026F6                     
  5420                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  5421   0026F6  0E70               	movlw	112
  5422   0026F8  6ED3               	movwf	211,c	;volatile
  5423                           
  5424                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  5425   0026FA  0E04               	movlw	4
  5426   0026FC  6ED2               	movwf	210,c	;volatile
  5427                           
  5428                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  5429   0026FE  0E40               	movlw	64
  5430   002700  6E9B               	movwf	155,c	;volatile
  5431   002702                     l76:
  5432                           
  5433                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  5434   002702  AED2               	btfss	4050,7,c	;volatile
  5435   002704  EF86  F013         	goto	u3711
  5436   002708  EF88  F013         	goto	u3710
  5437   00270C                     u3711:
  5438   00270C  EF81  F013         	goto	l76
  5439   002710                     u3710:
  5440   002710  0012               	return		;funcret
  5441   002712                     __end_of_OSCILLATOR_Initialize:
  5442                           	callstack 0
  5443                           
  5444 ;; *************** function _INTERRUPT_Initialize *****************
  5445 ;; Defined at:
  5446 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;		None
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;		None
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		None
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5460 ;;      Params:         0       0       0       0       0       0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0
  5463 ;;      Totals:         0       0       0       0       0       0       0
  5464 ;;Total ram usage:        0 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 4
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_SYSTEM_Initialize
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text11
  5475   0027CE                     __ptext11:
  5476                           	callstack 0
  5477   0027CE                     _INTERRUPT_Initialize:
  5478                           	callstack 25
  5479   0027CE                     
  5480                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5481   0027CE  9ED0               	bcf	208,7,c	;volatile
  5482   0027D0  0012               	return		;funcret
  5483   0027D2                     __end_of_INTERRUPT_Initialize:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _EUSART1_Initialize *****************
  5487 ;; Defined at:
  5488 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0, cstack
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5502 ;;      Params:         0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0
  5505 ;;      Totals:         0       0       0       0       0       0       0
  5506 ;;Total ram usage:        0 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; Hardware stack levels required when called: 5
  5509 ;; This function calls:
  5510 ;;		_EUSART1_SetErrorHandler
  5511 ;;		_EUSART1_SetFramingErrorHandler
  5512 ;;		_EUSART1_SetOverrunErrorHandler
  5513 ;; This function is called by:
  5514 ;;		_SYSTEM_Initialize
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text12
  5519   002498                     __ptext12:
  5520                           	callstack 0
  5521   002498                     _EUSART1_Initialize:
  5522                           	callstack 24
  5523   002498                     
  5524                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5525   002498  0E08               	movlw	8
  5526   00249A  6EB8               	movwf	184,c	;volatile
  5527                           
  5528                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5529   00249C  0E90               	movlw	144
  5530   00249E  6EAB               	movwf	171,c	;volatile
  5531                           
  5532                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5533   0024A0  0E24               	movlw	36
  5534   0024A2  6EAC               	movwf	172,c	;volatile
  5535                           
  5536                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x8A;
  5537   0024A4  0E8A               	movlw	138
  5538   0024A6  6EAF               	movwf	175,c	;volatile
  5539                           
  5540                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x00;
  5541   0024A8  0E00               	movlw	0
  5542   0024AA  6EB0               	movwf	176,c	;volatile
  5543   0024AC                     
  5544                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5545   0024AC  0E00               	movlw	0
  5546   0024AE  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5547   0024B0  0E00               	movlw	0
  5548   0024B2  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5549   0024B4  ECD3  F013         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5550   0024B8                     
  5551                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5552   0024B8  0E00               	movlw	0
  5553   0024BA  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5554   0024BC  0E00               	movlw	0
  5555   0024BE  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5556   0024C0  ECCE  F013         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5557   0024C4                     
  5558                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5559   0024C4  0E00               	movlw	0
  5560   0024C6  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5561   0024C8  0E00               	movlw	0
  5562   0024CA  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5563   0024CC  ECD8  F013         	call	_EUSART1_SetErrorHandler	;wreg free
  5564   0024D0                     
  5565                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5566   0024D0  0E00               	movlw	0
  5567   0024D2  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
  5568   0024D4  0012               	return		;funcret
  5569   0024D6                     __end_of_EUSART1_Initialize:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5573 ;; Defined at:
  5574 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  5577 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  1    wreg      void 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5589 ;;      Params:         2       0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0
  5592 ;;      Totals:         2       0       0       0       0       0       0
  5593 ;;Total ram usage:        2 bytes
  5594 ;; Hardware stack levels used: 1
  5595 ;; Hardware stack levels required when called: 4
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_EUSART1_Initialize
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text13
  5604   00279C                     __ptext13:
  5605                           	callstack 0
  5606   00279C                     _EUSART1_SetOverrunErrorHandler:
  5607                           	callstack 24
  5608   00279C                     
  5609                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5610   00279C  C014  F03F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5611   0027A0  C015  F040         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5612   0027A4  0012               	return		;funcret
  5613   0027A6                     __end_of_EUSART1_SetOverrunErrorHandler:
  5614                           	callstack 0
  5615                           
  5616 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5617 ;; Defined at:
  5618 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  5621 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  1    wreg      void 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5633 ;;      Params:         2       0       0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0
  5635 ;;      Temps:          0       0       0       0       0       0       0
  5636 ;;      Totals:         2       0       0       0       0       0       0
  5637 ;;Total ram usage:        2 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 4
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_EUSART1_Initialize
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text14
  5648   0027A6                     __ptext14:
  5649                           	callstack 0
  5650   0027A6                     _EUSART1_SetFramingErrorHandler:
  5651                           	callstack 24
  5652   0027A6                     
  5653                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5654   0027A6  C014  F041         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5655   0027AA  C015  F042         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5656   0027AE  0012               	return		;funcret
  5657   0027B0                     __end_of_EUSART1_SetFramingErrorHandler:
  5658                           	callstack 0
  5659                           
  5660 ;; *************** function _EUSART1_SetErrorHandler *****************
  5661 ;; Defined at:
  5662 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  5665 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5677 ;;      Params:         2       0       0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0
  5680 ;;      Totals:         2       0       0       0       0       0       0
  5681 ;;Total ram usage:        2 bytes
  5682 ;; Hardware stack levels used: 1
  5683 ;; Hardware stack levels required when called: 4
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_EUSART1_Initialize
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text15
  5692   0027B0                     __ptext15:
  5693                           	callstack 0
  5694   0027B0                     _EUSART1_SetErrorHandler:
  5695                           	callstack 24
  5696   0027B0                     
  5697                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5698   0027B0  C014  F0BC         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5699   0027B4  C015  F0BD         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5700   0027B8  0012               	return		;funcret
  5701   0027BA                     __end_of_EUSART1_SetErrorHandler:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _ADC_Initialize *****************
  5705 ;; Defined at:
  5706 ;;		line 62 in file "mcc_generated_files/adc.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;		None
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg, status,2
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5720 ;;      Params:         0       0       0       0       0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0
  5723 ;;      Totals:         0       0       0       0       0       0       0
  5724 ;;Total ram usage:        0 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 4
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_SYSTEM_Initialize
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text16
  5735   00272C                     __ptext16:
  5736                           	callstack 0
  5737   00272C                     _ADC_Initialize:
  5738                           	callstack 25
  5739   00272C                     
  5740                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  5741   00272C  0E00               	movlw	0
  5742   00272E  6EC1               	movwf	193,c	;volatile
  5743                           
  5744                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  5745   002730  0E26               	movlw	38
  5746   002732  6EC0               	movwf	192,c	;volatile
  5747                           
  5748                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  5749   002734  0E00               	movlw	0
  5750   002736  6EC3               	movwf	195,c	;volatile
  5751                           
  5752                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  5753   002738  0E00               	movlw	0
  5754   00273A  6EC4               	movwf	196,c	;volatile
  5755                           
  5756                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  5757   00273C  0E11               	movlw	17
  5758   00273E  6EC2               	movwf	194,c	;volatile
  5759   002740  0012               	return		;funcret
  5760   002742                     __end_of_ADC_Initialize:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function _SPI2_Open *****************
  5764 ;; Defined at:
  5765 ;;		line 72 in file "mcc_generated_files/spi2.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  spi2UniqueCo    1    wreg     enum E355
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  spi2UniqueCo    1   20[COMRAM] enum E355
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      _Bool 
  5772 ;; Registers used:
  5773 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5779 ;;      Params:         0       0       0       0       0       0       0
  5780 ;;      Locals:         1       0       0       0       0       0       0
  5781 ;;      Temps:          1       0       0       0       0       0       0
  5782 ;;      Totals:         2       0       0       0       0       0       0
  5783 ;;Total ram usage:        2 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 4
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_main
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text17
  5794   0021F2                     __ptext17:
  5795                           	callstack 0
  5796   0021F2                     _SPI2_Open:
  5797                           	callstack 26
  5798                           
  5799                           ;incstack = 0
  5800                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  5801   0021F2  6E15               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  5802   0021F4                     
  5803                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  5804   0021F4  BA6C               	btfsc	108,5,c	;volatile
  5805   0021F6  EFFF  F010         	goto	u3761
  5806   0021FA  EF01  F011         	goto	u3760
  5807   0021FE                     u3761:
  5808   0021FE  EF42  F011         	goto	l214
  5809   002202                     u3760:
  5810   002202                     
  5811                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  5812   002202  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5813   002204  0D04               	mullw	4
  5814   002206  0E01               	movlw	1
  5815   002208  26F3               	addwf	243,f,c
  5816   00220A  0E00               	movlw	0
  5817   00220C  22F4               	addwfc	244,f,c
  5818   00220E  0EBB               	movlw	low _spi2_configuration
  5819   002210  24F3               	addwf	243,w,c
  5820   002212  6EF6               	movwf	tblptrl,c
  5821   002214  0E79               	movlw	high _spi2_configuration
  5822   002216  20F4               	addwfc	244,w,c
  5823   002218  6EF7               	movwf	tblptrh,c
  5824   00221A                     	if	0	;There are less than 3 active tblptr bytes
  5825   00221A                     	endif
  5826   00221A  0008               	tblrd		*
  5827   00221C  CFF5 FF6D          	movff	tablat,3949	;volatile
  5828                           
  5829                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  5830   002220  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5831   002222  0D04               	mullw	4
  5832   002224  0EBB               	movlw	low _spi2_configuration
  5833   002226  24F3               	addwf	243,w,c
  5834   002228  6EF6               	movwf	tblptrl,c
  5835   00222A  0E79               	movlw	high _spi2_configuration
  5836   00222C  20F4               	addwfc	244,w,c
  5837   00222E  6EF7               	movwf	tblptrh,c
  5838   002230                     	if	0	;There are less than 3 active tblptr bytes
  5839   002230                     	endif
  5840   002230  0008               	tblrd		*
  5841   002232  CFF5 FF6C          	movff	tablat,3948	;volatile
  5842   002236                     
  5843                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  5844   002236  0E00               	movlw	0
  5845   002238  6E6B               	movwf	107,c	;volatile
  5846   00223A                     
  5847                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  5848   00223A  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5849   00223C  0D04               	mullw	4
  5850   00223E  0E02               	movlw	2
  5851   002240  26F3               	addwf	243,f,c
  5852   002242  0E00               	movlw	0
  5853   002244  22F4               	addwfc	244,f,c
  5854   002246  0EBB               	movlw	low _spi2_configuration
  5855   002248  24F3               	addwf	243,w,c
  5856   00224A  6EF6               	movwf	tblptrl,c
  5857   00224C  0E79               	movlw	high _spi2_configuration
  5858   00224E  20F4               	addwfc	244,w,c
  5859   002250  6EF7               	movwf	tblptrh,c
  5860   002252                     	if	0	;There are less than 3 active tblptr bytes
  5861   002252                     	endif
  5862   002252  0008               	tblrd		*
  5863   002254  CFF5 FF6E          	movff	tablat,3950	;volatile
  5864   002258                     
  5865                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  5866   002258  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  5867   00225A  0D04               	mullw	4
  5868   00225C  0E03               	movlw	3
  5869   00225E  26F3               	addwf	243,f,c
  5870   002260  0E00               	movlw	0
  5871   002262  22F4               	addwfc	244,f,c
  5872   002264  0EBB               	movlw	low _spi2_configuration
  5873   002266  24F3               	addwf	243,w,c
  5874   002268  6EF6               	movwf	tblptrl,c
  5875   00226A  0E79               	movlw	high _spi2_configuration
  5876   00226C  20F4               	addwfc	244,w,c
  5877   00226E  6EF7               	movwf	tblptrh,c
  5878   002270                     	if	0	;There are less than 3 active tblptr bytes
  5879   002270                     	endif
  5880   002270  0008               	tblrd		*
  5881   002272  CFF5 F014          	movff	tablat,??_SPI2_Open
  5882   002276  4614               	rlncf	??_SPI2_Open^0,f,c
  5883   002278  5093               	movf	147,w,c	;volatile
  5884   00227A  1814               	xorwf	??_SPI2_Open^0,w,c
  5885   00227C  0BFD               	andlw	-3
  5886   00227E  1814               	xorwf	??_SPI2_Open^0,w,c
  5887   002280  6E93               	movwf	147,c	;volatile
  5888   002282                     
  5889                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  5890   002282  8A6C               	bsf	108,5,c	;volatile
  5891   002284                     l214:
  5892   002284  0012               	return		;funcret
  5893   002286                     __end_of_SPI2_Open:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _SPI2_Close *****************
  5897 ;; Defined at:
  5898 ;;		line 87 in file "mcc_generated_files/spi2.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		None
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5912 ;;      Params:         0       0       0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 4
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		_main
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text18
  5927   0027D2                     __ptext18:
  5928                           	callstack 0
  5929   0027D2                     _SPI2_Close:
  5930                           	callstack 26
  5931   0027D2                     
  5932                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  5933   0027D2  9A6C               	bcf	108,5,c	;volatile
  5934   0027D4  0012               	return		;funcret
  5935   0027D6                     __end_of_SPI2_Close:
  5936                           	callstack 0
  5937                           
  5938 ;; *************** function _SDCARD_WriteBlock *****************
  5939 ;; Defined at:
  5940 ;;		line 106 in file "sdCard.c"
  5941 ;; Parameters:    Size  Location     Type
  5942 ;;  addr            4   25[COMRAM] unsigned long 
  5943 ;;  sdCardBuffer    2   29[COMRAM] PTR unsigned char 
  5944 ;;		 -> doubleBuffer(1024), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  i               2   31[COMRAM] unsigned short 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  1    wreg      void 
  5949 ;; Registers used:
  5950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5956 ;;      Params:         6       0       0       0       0       0       0
  5957 ;;      Locals:         2       0       0       0       0       0       0
  5958 ;;      Temps:          0       0       0       0       0       0       0
  5959 ;;      Totals:         8       0       0       0       0       0       0
  5960 ;;Total ram usage:        8 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 5
  5963 ;; This function calls:
  5964 ;;		_SPI2_ExchangeByte
  5965 ;; This function is called by:
  5966 ;;		_main
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           	psect	text19
  5971   002286                     __ptext19:
  5972                           	callstack 0
  5973   002286                     _SDCARD_WriteBlock:
  5974                           	callstack 25
  5975   002286  988A               	bcf	138,4,c	;volatile
  5976   002288                     
  5977                           ;sdCard.c: 114:     SPI2_ExchangeByte(0xFF);
  5978   002288  0EFF               	movlw	255
  5979   00228A  EC89  F013         	call	_SPI2_ExchangeByte
  5980   00228E                     
  5981                           ;sdCard.c: 115: 
  5982   00228E  0E58               	movlw	88
  5983   002290  EC89  F013         	call	_SPI2_ExchangeByte
  5984   002294                     
  5985                           ;sdCard.c: 116:     SPI2_ExchangeByte(0xFE);
  5986   002294  501D               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  5987   002296  EC89  F013         	call	_SPI2_ExchangeByte
  5988   00229A                     
  5989                           ;sdCard.c: 117:     for (i = 0; i < 512; i++)
  5990   00229A  501C               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  5991   00229C  EC89  F013         	call	_SPI2_ExchangeByte
  5992   0022A0                     
  5993                           ;sdCard.c: 118:         SPI2_ExchangeByte(sdCardBuffer[i]);
  5994   0022A0  501B               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  5995   0022A2  EC89  F013         	call	_SPI2_ExchangeByte
  5996   0022A6                     
  5997                           ;sdCard.c: 119: 
  5998   0022A6  501A               	movf	SDCARD_WriteBlock@addr^0,w,c
  5999   0022A8  EC89  F013         	call	_SPI2_ExchangeByte
  6000   0022AC                     
  6001                           ;sdCard.c: 120:     do { LATBbits.LATB4 = 1; } while(0);
  6002   0022AC  0EFF               	movlw	255
  6003   0022AE  EC89  F013         	call	_SPI2_ExchangeByte
  6004   0022B2                     l4892:
  6005   0022B2  0EFF               	movlw	255
  6006   0022B4  EC89  F013         	call	_SPI2_ExchangeByte
  6007   0022B8  0AFF               	xorlw	255
  6008   0022BA  B4D8               	btfsc	status,2,c
  6009   0022BC  EF62  F011         	goto	u3961
  6010   0022C0  EF64  F011         	goto	u3960
  6011   0022C4                     u3961:
  6012   0022C4  EF59  F011         	goto	l4892
  6013   0022C8                     u3960:
  6014   0022C8                     
  6015                           ;sdCard.c: 124: {
  6016   0022C8  0EFF               	movlw	255
  6017   0022CA  EC89  F013         	call	_SPI2_ExchangeByte
  6018                           
  6019                           ;sdCard.c: 125: 
  6020   0022CE  0EFF               	movlw	255
  6021   0022D0  EC89  F013         	call	_SPI2_ExchangeByte
  6022                           
  6023                           ;sdCard.c: 126:     uint8_t status;
  6024   0022D4  0EFF               	movlw	255
  6025   0022D6  EC89  F013         	call	_SPI2_ExchangeByte
  6026                           
  6027                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 0; } while(0);
  6028   0022DA  0EFE               	movlw	254
  6029   0022DC  EC89  F013         	call	_SPI2_ExchangeByte
  6030   0022E0                     
  6031                           ;sdCard.c: 129:     status = SPI2_ExchangeByte(13);
  6032   0022E0  0E00               	movlw	0
  6033   0022E2  6E21               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  6034   0022E4  0E00               	movlw	0
  6035   0022E6  6E20               	movwf	SDCARD_WriteBlock@i^0,c
  6036   0022E8                     l4902:
  6037                           
  6038                           ;sdCard.c: 130:     do { LATBbits.LATB4 = 1; } while(0);
  6039   0022E8  5020               	movf	SDCARD_WriteBlock@i^0,w,c
  6040   0022EA  241E               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  6041   0022EC  6ED9               	movwf	fsr2l,c
  6042   0022EE  5021               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  6043   0022F0  201F               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  6044   0022F2  6EDA               	movwf	fsr2h,c
  6045   0022F4  50DF               	movf	indf2,w,c
  6046   0022F6  EC89  F013         	call	_SPI2_ExchangeByte
  6047   0022FA  4A20               	infsnz	SDCARD_WriteBlock@i^0,f,c
  6048   0022FC  2A21               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  6049   0022FE  0E02               	movlw	2
  6050   002300  5C21               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  6051   002302  A0D8               	btfss	status,0,c
  6052   002304  EF86  F011         	goto	u3971
  6053   002308  EF88  F011         	goto	u3970
  6054   00230C                     u3971:
  6055   00230C  EF74  F011         	goto	l4902
  6056   002310                     u3970:
  6057   002310  888A               	bsf	138,4,c	;volatile
  6058   002312  0012               	return		;funcret
  6059   002314                     __end_of_SDCARD_WriteBlock:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _SDCARD_ReadBlock *****************
  6063 ;; Defined at:
  6064 ;;		line 80 in file "sdCard.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  addr            4   20[COMRAM] unsigned long 
  6067 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  6068 ;;		 -> doubleBuffer(1024), 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  i               2   26[COMRAM] unsigned short 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : 0/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6080 ;;      Params:         6       0       0       0       0       0       0
  6081 ;;      Locals:         2       0       0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0
  6083 ;;      Totals:         8       0       0       0       0       0       0
  6084 ;;Total ram usage:        8 bytes
  6085 ;; Hardware stack levels used: 1
  6086 ;; Hardware stack levels required when called: 5
  6087 ;; This function calls:
  6088 ;;		_SPI2_ExchangeByte
  6089 ;; This function is called by:
  6090 ;;		_main
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text20
  6095   0020C2                     __ptext20:
  6096                           	callstack 0
  6097   0020C2                     _SDCARD_ReadBlock:
  6098                           	callstack 25
  6099   0020C2  988A               	bcf	138,4,c	;volatile
  6100   0020C4                     
  6101                           ;sdCard.c: 88:         sdCardBuffer[i] = SPI2_ExchangeByte(0xFF);
  6102   0020C4  0EFF               	movlw	255
  6103   0020C6  EC89  F013         	call	_SPI2_ExchangeByte
  6104   0020CA                     
  6105                           ;sdCard.c: 89:     SPI2_ExchangeByte(0xFF);
  6106   0020CA  0E51               	movlw	81
  6107   0020CC  EC89  F013         	call	_SPI2_ExchangeByte
  6108   0020D0                     
  6109                           ;sdCard.c: 90:     SPI2_ExchangeByte(0xFF);
  6110   0020D0  5018               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  6111   0020D2  EC89  F013         	call	_SPI2_ExchangeByte
  6112   0020D6                     
  6113                           ;sdCard.c: 91: 
  6114   0020D6  5017               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  6115   0020D8  EC89  F013         	call	_SPI2_ExchangeByte
  6116   0020DC                     
  6117                           ;sdCard.c: 92:     do { LATBbits.LATB4 = 1; } while(0);
  6118   0020DC  5016               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  6119   0020DE  EC89  F013         	call	_SPI2_ExchangeByte
  6120   0020E2                     
  6121                           ;sdCard.c: 93: }
  6122   0020E2  5015               	movf	SDCARD_ReadBlock@addr^0,w,c
  6123   0020E4  EC89  F013         	call	_SPI2_ExchangeByte
  6124   0020E8                     
  6125                           ;sdCard.c: 94: void SDCARD_WriteBlock(uint32_t addr, uint8_t sdCardBuffer[])
  6126   0020E8  0EFF               	movlw	255
  6127   0020EA  EC89  F013         	call	_SPI2_ExchangeByte
  6128   0020EE                     l4800:
  6129   0020EE  0EFF               	movlw	255
  6130   0020F0  EC89  F013         	call	_SPI2_ExchangeByte
  6131   0020F4  0AFF               	xorlw	255
  6132   0020F6  B4D8               	btfsc	status,2,c
  6133   0020F8  EF80  F010         	goto	u3841
  6134   0020FC  EF82  F010         	goto	u3840
  6135   002100                     u3841:
  6136   002100  EF77  F010         	goto	l4800
  6137   002104                     u3840:
  6138   002104                     l4802:
  6139   002104  0EFF               	movlw	255
  6140   002106  EC89  F013         	call	_SPI2_ExchangeByte
  6141   00210A  0AFF               	xorlw	255
  6142   00210C  B4D8               	btfsc	status,2,c
  6143   00210E  EF8B  F010         	goto	u3851
  6144   002112  EF8D  F010         	goto	u3850
  6145   002116                     u3851:
  6146   002116  EF82  F010         	goto	l4802
  6147   00211A                     u3850:
  6148   00211A                     
  6149                           ;sdCard.c: 99: 
  6150   00211A  0E00               	movlw	0
  6151   00211C  6E1C               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  6152   00211E  0E00               	movlw	0
  6153   002120  6E1B               	movwf	SDCARD_ReadBlock@i^0,c
  6154   002122                     l4810:
  6155                           
  6156                           ;sdCard.c: 100:     do { LATBbits.LATB4 = 0; } while(0);
  6157   002122  501B               	movf	SDCARD_ReadBlock@i^0,w,c
  6158   002124  2419               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  6159   002126  6ED9               	movwf	fsr2l,c
  6160   002128  501C               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  6161   00212A  201A               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  6162   00212C  6EDA               	movwf	fsr2h,c
  6163   00212E  0EFF               	movlw	255
  6164   002130  EC89  F013         	call	_SPI2_ExchangeByte
  6165   002134  6EDF               	movwf	indf2,c
  6166   002136  4A1B               	infsnz	SDCARD_ReadBlock@i^0,f,c
  6167   002138  2A1C               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  6168   00213A  0E02               	movlw	2
  6169   00213C  5C1C               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  6170   00213E  A0D8               	btfss	status,0,c
  6171   002140  EFA4  F010         	goto	u3861
  6172   002144  EFA6  F010         	goto	u3860
  6173   002148                     u3861:
  6174   002148  EF91  F010         	goto	l4810
  6175   00214C                     u3860:
  6176   00214C                     
  6177                           ;sdCard.c: 101: 
  6178   00214C  0EFF               	movlw	255
  6179   00214E  EC89  F013         	call	_SPI2_ExchangeByte
  6180                           
  6181                           ;sdCard.c: 102:     SPI2_ExchangeByte(0xFF);
  6182   002152  0EFF               	movlw	255
  6183   002154  EC89  F013         	call	_SPI2_ExchangeByte
  6184   002158  888A               	bsf	138,4,c	;volatile
  6185   00215A  0012               	return		;funcret
  6186   00215C                     __end_of_SDCARD_ReadBlock:
  6187                           	callstack 0
  6188                           
  6189 ;; *************** function _SDCARD_PollWriteComplete *****************
  6190 ;; Defined at:
  6191 ;;		line 135 in file "sdCard.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  status          1   20[COMRAM] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      unsigned char 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6205 ;;      Params:         0       0       0       0       0       0       0
  6206 ;;      Locals:         1       0       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0
  6208 ;;      Totals:         1       0       0       0       0       0       0
  6209 ;;Total ram usage:        1 bytes
  6210 ;; Hardware stack levels used: 1
  6211 ;; Hardware stack levels required when called: 5
  6212 ;; This function calls:
  6213 ;;		_SPI2_ExchangeByte
  6214 ;; This function is called by:
  6215 ;;		_main
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text21
  6220   0024D6                     __ptext21:
  6221                           	callstack 0
  6222   0024D6                     _SDCARD_PollWriteComplete:
  6223                           	callstack 25
  6224   0024D6  988A               	bcf	138,4,c	;volatile
  6225   0024D8                     
  6226                           ;sdCard.c: 141:         (void) SPI2_ExchangeByte(0xFF);
  6227   0024D8  0E0D               	movlw	13
  6228   0024DA  EC89  F013         	call	_SPI2_ExchangeByte
  6229   0024DE  6E15               	movwf	SDCARD_PollWriteComplete@status^0,c
  6230   0024E0  888A               	bsf	138,4,c	;volatile
  6231   0024E2                     
  6232                           ;sdCard.c: 144: }
  6233   0024E2  2815               	incf	SDCARD_PollWriteComplete@status^0,w,c
  6234   0024E4  A4D8               	btfss	status,2,c
  6235   0024E6  EF77  F012         	goto	u3981
  6236   0024EA  EF79  F012         	goto	u3980
  6237   0024EE                     u3981:
  6238   0024EE  EF7C  F012         	goto	l4920
  6239   0024F2                     u3980:
  6240   0024F2                     
  6241                           ;sdCard.c: 145: ;sdCard.c: 146: 
  6242   0024F2  0EFF               	movlw	255
  6243   0024F4  EF86  F012         	goto	l592
  6244   0024F8                     l4920:
  6245                           
  6246                           ;sdCard.c: 149: {;sdCard.c: 151:     uint16_t i;
  6247   0024F8  0EFF               	movlw	255
  6248   0024FA  EC89  F013         	call	_SPI2_ExchangeByte
  6249                           
  6250                           ;sdCard.c: 152:     uint16_t j;
  6251   0024FE  0EFF               	movlw	255
  6252   002500  EC89  F013         	call	_SPI2_ExchangeByte
  6253                           
  6254                           ;sdCard.c: 153: 
  6255   002504  0EFF               	movlw	255
  6256   002506  EC89  F013         	call	_SPI2_ExchangeByte
  6257   00250A                     
  6258                           ;sdCard.c: 154:     printf("\r\n\n");
  6259   00250A  5015               	movf	SDCARD_PollWriteComplete@status^0,w,c
  6260   00250C                     l592:
  6261   00250C  0012               	return		;funcret
  6262   00250E                     __end_of_SDCARD_PollWriteComplete:
  6263                           	callstack 0
  6264                           
  6265 ;; *************** function _SDCARD_Initialize *****************
  6266 ;; Defined at:
  6267 ;;		line 14 in file "sdCard.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  verbose         1    wreg     unsigned char 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  verbose         1   80[BANK0 ] unsigned char 
  6272 ;;  i               2   78[BANK0 ] int 
  6273 ;;  response        1   81[BANK0 ] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      void 
  6276 ;; Registers used:
  6277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6283 ;;      Params:         0       0       0       0       0       0       0
  6284 ;;      Locals:         0       4       0       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0
  6286 ;;      Totals:         0       4       0       0       0       0       0
  6287 ;;Total ram usage:        4 bytes
  6288 ;; Hardware stack levels used: 1
  6289 ;; Hardware stack levels required when called: 13
  6290 ;; This function calls:
  6291 ;;		_SPI2_ExchangeByte
  6292 ;;		_printf
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           	psect	text22
  6299   001942                     __ptext22:
  6300                           	callstack 0
  6301   001942                     _SDCARD_Initialize:
  6302                           	callstack 17
  6303                           
  6304                           ;incstack = 0
  6305                           ;SDCARD_Initialize@verbose stored from wreg
  6306   001942  0100               	movlb	0	; () banked
  6307   001944  6FB0               	movwf	SDCARD_Initialize@verbose& (0+255),b
  6308   001946                     
  6309                           ;sdCard.c: 14: ;sdCard.c: 15: ;sdCard.c: 17:     SPI2_ExchangeByte(0xFF);;sdCard.c: 21: 
      +                              SPI2_ExchangeByte(0x00);
  6310   001946  0E00               	movlw	0
  6311   001948  0100               	movlb	0	; () banked
  6312   00194A  6FAF               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  6313   00194C  0E00               	movlw	0
  6314   00194E  6FAE               	movwf	SDCARD_Initialize@i& (0+255),b
  6315   001950                     l4712:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;sdCard.c: 22:     SPI2_ExchangeByte(0x00);;sdCard.c: 23:     SPI2_ExchangeByte(0x95);
  6319   001950  0EFF               	movlw	255
  6320   001952  EC89  F013         	call	_SPI2_ExchangeByte
  6321   001956                     
  6322                           ;sdCard.c: 24:     SPI2_ExchangeByte(0xFF);
  6323   001956  0100               	movlb	0	; () banked
  6324   001958  4BAE               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  6325   00195A  2BAF               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  6326   00195C                     
  6327                           ; BSR set to: 0
  6328   00195C  BFAF               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  6329   00195E  EFBA  F00C         	goto	u3781
  6330   001962  51AF               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  6331   001964  E109               	bnz	u3780
  6332   001966  0E0A               	movlw	10
  6333   001968  5DAE               	subwf	SDCARD_Initialize@i& (0+255),w,b
  6334   00196A  A0D8               	btfss	status,0,c
  6335   00196C  EFBA  F00C         	goto	u3781
  6336   001970  EFBC  F00C         	goto	u3780
  6337   001974                     u3781:
  6338   001974  EFA8  F00C         	goto	l4712
  6339   001978                     u3780:
  6340   001978                     
  6341                           ; BSR set to: 0
  6342   001978  988A               	bcf	138,4,c	;volatile
  6343   00197A                     
  6344                           ; BSR set to: 0
  6345                           ;sdCard.c: 29: 
  6346   00197A  0EFF               	movlw	255
  6347   00197C  EC89  F013         	call	_SPI2_ExchangeByte
  6348                           
  6349                           ;sdCard.c: 30: 
  6350   001980  0E40               	movlw	64
  6351   001982  EC89  F013         	call	_SPI2_ExchangeByte
  6352                           
  6353                           ;sdCard.c: 31:     do
  6354   001986  0E00               	movlw	0
  6355   001988  EC89  F013         	call	_SPI2_ExchangeByte
  6356                           
  6357                           ;sdCard.c: 32:     {
  6358   00198C  0E00               	movlw	0
  6359   00198E  EC89  F013         	call	_SPI2_ExchangeByte
  6360                           
  6361                           ;sdCard.c: 33:         do { LATBbits.LATB4 = 0; } while(0);
  6362   001992  0E00               	movlw	0
  6363   001994  EC89  F013         	call	_SPI2_ExchangeByte
  6364                           
  6365                           ;sdCard.c: 34:         SPI2_ExchangeByte(0xFF);
  6366   001998  0E00               	movlw	0
  6367   00199A  EC89  F013         	call	_SPI2_ExchangeByte
  6368                           
  6369                           ;sdCard.c: 35:         SPI2_ExchangeByte(0x40 | 1);
  6370   00199E  0E95               	movlw	149
  6371   0019A0  EC89  F013         	call	_SPI2_ExchangeByte
  6372                           
  6373                           ;sdCard.c: 36:         SPI2_ExchangeByte(0x00);
  6374   0019A4  0EFF               	movlw	255
  6375   0019A6  EC89  F013         	call	_SPI2_ExchangeByte
  6376                           
  6377                           ;sdCard.c: 37:         SPI2_ExchangeByte(0x00);
  6378   0019AA  0EFF               	movlw	255
  6379   0019AC  EC89  F013         	call	_SPI2_ExchangeByte
  6380   0019B0  0100               	movlb	0	; () banked
  6381   0019B2  6FB1               	movwf	SDCARD_Initialize@response& (0+255),b
  6382   0019B4                     
  6383                           ; BSR set to: 0
  6384   0019B4  888A               	bsf	138,4,c	;volatile
  6385   0019B6                     
  6386                           ; BSR set to: 0
  6387                           ;sdCard.c: 39:         SPI2_ExchangeByte(0x00);
  6388   0019B6  05B0               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  6389   0019B8  A4D8               	btfss	status,2,c
  6390   0019BA  EFE1  F00C         	goto	u3791
  6391   0019BE  EFE3  F00C         	goto	u3790
  6392   0019C2                     u3791:
  6393   0019C2  EFEC  F00C         	goto	l4726
  6394   0019C6                     u3790:
  6395   0019C6                     
  6396                           ; BSR set to: 0
  6397   0019C6  0EBF               	movlw	low STR_91
  6398   0019C8  6FA2               	movwf	printf@fmt& (0+255),b
  6399   0019CA  0E7D               	movlw	high STR_91
  6400   0019CC  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  6401   0019CE  C0B1  F0A4         	movff	SDCARD_Initialize@response,?_printf+2
  6402   0019D2  6BA5               	clrf	(?_printf+3)& (0+255),b
  6403   0019D4  ECFF  F012         	call	_printf	;wreg free
  6404   0019D8                     l4726:
  6405   0019D8  988A               	bcf	138,4,c	;volatile
  6406   0019DA                     
  6407                           ;sdCard.c: 46:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  6408   0019DA  0EFF               	movlw	255
  6409   0019DC  EC89  F013         	call	_SPI2_ExchangeByte
  6410   0019E0                     
  6411                           ;sdCard.c: 47: 
  6412   0019E0  0E41               	movlw	65
  6413   0019E2  EC89  F013         	call	_SPI2_ExchangeByte
  6414   0019E6                     
  6415                           ;sdCard.c: 48: 
  6416   0019E6  0E00               	movlw	0
  6417   0019E8  EC89  F013         	call	_SPI2_ExchangeByte
  6418   0019EC                     
  6419                           ;sdCard.c: 49: 
  6420   0019EC  0E00               	movlw	0
  6421   0019EE  EC89  F013         	call	_SPI2_ExchangeByte
  6422   0019F2                     
  6423                           ;sdCard.c: 50:     do
  6424   0019F2  0E00               	movlw	0
  6425   0019F4  EC89  F013         	call	_SPI2_ExchangeByte
  6426   0019F8                     
  6427                           ;sdCard.c: 51:     {
  6428   0019F8  0E00               	movlw	0
  6429   0019FA  EC89  F013         	call	_SPI2_ExchangeByte
  6430   0019FE                     
  6431                           ;sdCard.c: 52:         do { LATBbits.LATB4 = 0; } while(0);
  6432   0019FE  0EFF               	movlw	255
  6433   001A00  EC89  F013         	call	_SPI2_ExchangeByte
  6434   001A04                     
  6435                           ;sdCard.c: 53:         SPI2_ExchangeByte(0xFF);
  6436   001A04  0EFF               	movlw	255
  6437   001A06  EC89  F013         	call	_SPI2_ExchangeByte
  6438   001A0A                     
  6439                           ;sdCard.c: 54:         SPI2_ExchangeByte(0x40 | 16);
  6440   001A0A  0EFF               	movlw	255
  6441   001A0C  EC89  F013         	call	_SPI2_ExchangeByte
  6442   001A10  0100               	movlb	0	; () banked
  6443   001A12  6FB1               	movwf	SDCARD_Initialize@response& (0+255),b
  6444   001A14                     
  6445                           ; BSR set to: 0
  6446   001A14  888A               	bsf	138,4,c	;volatile
  6447   001A16                     
  6448                           ; BSR set to: 0
  6449                           ;sdCard.c: 56:         SPI2_ExchangeByte(0x00);
  6450   001A16  51B1               	movf	SDCARD_Initialize@response& (0+255),w,b
  6451   001A18  A4D8               	btfss	status,2,c
  6452   001A1A  EF11  F00D         	goto	u3801
  6453   001A1E  EF13  F00D         	goto	u3800
  6454   001A22                     u3801:
  6455   001A22  EFEC  F00C         	goto	l4726
  6456   001A26                     u3800:
  6457   001A26                     
  6458                           ; BSR set to: 0
  6459                           ;sdCard.c: 58:         SPI2_ExchangeByte(0x00);
  6460   001A26  05B0               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  6461   001A28  A4D8               	btfss	status,2,c
  6462   001A2A  EF19  F00D         	goto	u3811
  6463   001A2E  EF1B  F00D         	goto	u3810
  6464   001A32                     u3811:
  6465   001A32  EF24  F00D         	goto	l4754
  6466   001A36                     u3810:
  6467   001A36                     
  6468                           ; BSR set to: 0
  6469   001A36  0EDA               	movlw	low STR_92
  6470   001A38  6FA2               	movwf	printf@fmt& (0+255),b
  6471   001A3A  0E7D               	movlw	high STR_92
  6472   001A3C  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  6473   001A3E  C0B1  F0A4         	movff	SDCARD_Initialize@response,?_printf+2
  6474   001A42  6BA5               	clrf	(?_printf+3)& (0+255),b
  6475   001A44  ECFF  F012         	call	_printf	;wreg free
  6476   001A48                     l4754:
  6477   001A48  988A               	bcf	138,4,c	;volatile
  6478   001A4A                     
  6479                           ;sdCard.c: 65:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  6480   001A4A  0EFF               	movlw	255
  6481   001A4C  EC89  F013         	call	_SPI2_ExchangeByte
  6482   001A50                     
  6483                           ;sdCard.c: 66: }
  6484   001A50  0E50               	movlw	80
  6485   001A52  EC89  F013         	call	_SPI2_ExchangeByte
  6486   001A56                     
  6487                           ;sdCard.c: 67: 
  6488   001A56  0E00               	movlw	0
  6489   001A58  EC89  F013         	call	_SPI2_ExchangeByte
  6490   001A5C                     
  6491                           ;sdCard.c: 68: void SDCARD_ReadBlock(uint32_t addr, uint8_t sdCardBuffer[])
  6492   001A5C  0E00               	movlw	0
  6493   001A5E  EC89  F013         	call	_SPI2_ExchangeByte
  6494   001A62                     
  6495                           ;sdCard.c: 69: {
  6496   001A62  0E02               	movlw	2
  6497   001A64  EC89  F013         	call	_SPI2_ExchangeByte
  6498   001A68                     
  6499                           ;sdCard.c: 70: 
  6500   001A68  0E00               	movlw	0
  6501   001A6A  EC89  F013         	call	_SPI2_ExchangeByte
  6502   001A6E                     
  6503                           ;sdCard.c: 71:     uint16_t i = 0;
  6504   001A6E  0EFF               	movlw	255
  6505   001A70  EC89  F013         	call	_SPI2_ExchangeByte
  6506   001A74                     
  6507                           ;sdCard.c: 72: 
  6508   001A74  0EFF               	movlw	255
  6509   001A76  EC89  F013         	call	_SPI2_ExchangeByte
  6510   001A7A                     
  6511                           ;sdCard.c: 73: 
  6512   001A7A  0EFF               	movlw	255
  6513   001A7C  EC89  F013         	call	_SPI2_ExchangeByte
  6514   001A80  0100               	movlb	0	; () banked
  6515   001A82  6FB1               	movwf	SDCARD_Initialize@response& (0+255),b
  6516   001A84                     
  6517                           ; BSR set to: 0
  6518   001A84  888A               	bsf	138,4,c	;volatile
  6519   001A86                     
  6520                           ; BSR set to: 0
  6521                           ;sdCard.c: 75: 
  6522   001A86  29B1               	incf	SDCARD_Initialize@response& (0+255),w,b
  6523   001A88  B4D8               	btfsc	status,2,c
  6524   001A8A  EF49  F00D         	goto	u3821
  6525   001A8E  EF4B  F00D         	goto	u3820
  6526   001A92                     u3821:
  6527   001A92  EF24  F00D         	goto	l4754
  6528   001A96                     u3820:
  6529   001A96                     
  6530                           ; BSR set to: 0
  6531                           ;sdCard.c: 77:     SPI2_ExchangeByte(0x40 | 17);
  6532   001A96  05B0               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  6533   001A98  A4D8               	btfss	status,2,c
  6534   001A9A  EF51  F00D         	goto	u3831
  6535   001A9E  EF53  F00D         	goto	u3830
  6536   001AA2                     u3831:
  6537   001AA2  EF5C  F00D         	goto	l557
  6538   001AA6                     u3830:
  6539   001AA6                     
  6540                           ; BSR set to: 0
  6541   001AA6  0E87               	movlw	low STR_93
  6542   001AA8  6FA2               	movwf	printf@fmt& (0+255),b
  6543   001AAA  0E7D               	movlw	high STR_93
  6544   001AAC  6FA3               	movwf	(printf@fmt+1)& (0+255),b
  6545   001AAE  C0B1  F0A4         	movff	SDCARD_Initialize@response,?_printf+2
  6546   001AB2  6BA5               	clrf	(?_printf+3)& (0+255),b
  6547   001AB4  ECFF  F012         	call	_printf	;wreg free
  6548   001AB8                     l557:
  6549   001AB8  0012               	return		;funcret
  6550   001ABA                     __end_of_SDCARD_Initialize:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _printf *****************
  6554 ;; Defined at:
  6555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  fmt             2   66[BANK0 ] PTR const unsigned char 
  6558 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  6559 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  6560 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  6561 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  6562 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  6563 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  6564 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  6565 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  6566 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  6567 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  6568 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  6569 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  6570 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  6571 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  6572 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  6573 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  6574 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  6575 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  6576 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  6577 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  6578 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  6579 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  6580 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  6581 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  6582 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  6583 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  ap              2   76[BANK0 ] PTR void [1]
  6586 ;;		 -> ?_printf(2), 
  6587 ;;  ret             2    0        int 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  2   66[BANK0 ] int 
  6590 ;; Registers used:
  6591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6597 ;;      Params:         0      10       0       0       0       0       0
  6598 ;;      Locals:         0       2       0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0
  6600 ;;      Totals:         0      12       0       0       0       0       0
  6601 ;;Total ram usage:       12 bytes
  6602 ;; Hardware stack levels used: 1
  6603 ;; Hardware stack levels required when called: 12
  6604 ;; This function calls:
  6605 ;;		_vfprintf
  6606 ;; This function is called by:
  6607 ;;		_main
  6608 ;;		_SDCARD_Initialize
  6609 ;;		_hexDumpBuffer
  6610 ;; This function uses a non-reentrant model
  6611 ;;
  6612                           
  6613                           	psect	text23
  6614   0025FE                     __ptext23:
  6615                           	callstack 0
  6616   0025FE                     _printf:
  6617                           	callstack 18
  6618   0025FE  0EA4               	movlw	low (?_printf+2)
  6619   002600  0100               	movlb	0	; () banked
  6620   002602  6FAC               	movwf	printf@ap& (0+255),b
  6621   002604  0E00               	movlw	high (?_printf+2)
  6622   002606  6FAD               	movwf	(printf@ap+1)& (0+255),b
  6623   002608                     
  6624                           ; BSR set to: 0
  6625   002608  0E00               	movlw	0
  6626   00260A  6F9C               	movwf	vfprintf@fp& (0+255),b
  6627   00260C  0E00               	movlw	0
  6628   00260E  6F9D               	movwf	(vfprintf@fp+1)& (0+255),b
  6629   002610  C0A2  F09E         	movff	printf@fmt,vfprintf@fmt
  6630   002614  C0A3  F09F         	movff	printf@fmt+1,vfprintf@fmt+1
  6631   002618  0EAC               	movlw	low printf@ap
  6632   00261A  6FA0               	movwf	vfprintf@ap& (0+255),b
  6633   00261C  0E00               	movlw	high printf@ap
  6634   00261E  6FA1               	movwf	(vfprintf@ap+1)& (0+255),b
  6635   002620  ECB7  F011         	call	_vfprintf	;wreg free
  6636   002624  0012               	return		;funcret
  6637   002626                     __end_of_printf:
  6638                           	callstack 0
  6639                           
  6640 ;; *************** function _vfprintf *****************
  6641 ;; Defined at:
  6642 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  6645 ;;		 -> NULL(0), 
  6646 ;;  fmt             2   62[BANK0 ] PTR const unsigned char 
  6647 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  6648 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  6649 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  6650 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  6651 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  6652 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  6653 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  6654 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  6655 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  6656 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  6657 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  6658 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  6659 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  6660 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  6661 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  6662 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  6663 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  6664 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  6665 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  6666 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  6667 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  6668 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  6669 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  6670 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  6671 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  6672 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  6673 ;;  ap              2   64[BANK0 ] PTR PTR void 
  6674 ;;		 -> printf@ap(2), 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  cfmt            2   52[COMRAM] PTR unsigned char 
  6677 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  6678 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  6679 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  6680 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  6681 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  6682 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  6683 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  6684 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  6685 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  6686 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  6687 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  6688 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  6689 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  6690 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  6691 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  6692 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  6693 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  6694 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  6695 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  6696 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  6697 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  6698 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  6699 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  6700 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  6701 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  6702 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  2   60[BANK0 ] int 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6712 ;;      Params:         0       6       0       0       0       0       0
  6713 ;;      Locals:         2       0       0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0
  6715 ;;      Totals:         2       6       0       0       0       0       0
  6716 ;;Total ram usage:        8 bytes
  6717 ;; Hardware stack levels used: 1
  6718 ;; Hardware stack levels required when called: 11
  6719 ;; This function calls:
  6720 ;;		_vfpfcnvrt
  6721 ;; This function is called by:
  6722 ;;		_printf
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text24
  6727   00236E                     __ptext24:
  6728                           	callstack 0
  6729   00236E                     _vfprintf:
  6730                           	callstack 18
  6731   00236E                     
  6732                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  6733   00236E  C09E  F035         	movff	vfprintf@fmt,vfprintf@cfmt
  6734   002372  C09F  F036         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6735                           
  6736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6737   002376  EFCC  F011         	goto	l4580
  6738   00237A                     l4578:
  6739                           
  6740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6741   00237A  C09C  F083         	movff	vfprintf@fp,vfpfcnvrt@fp
  6742   00237E  C09D  F084         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6743   002382  0E35               	movlw	low vfprintf@cfmt
  6744   002384  0100               	movlb	0	; () banked
  6745   002386  6F85               	movwf	vfpfcnvrt@fmt& (0+255),b
  6746   002388  0E00               	movlw	high vfprintf@cfmt
  6747   00238A  6F86               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6748   00238C  C0A0  F087         	movff	vfprintf@ap,vfpfcnvrt@ap
  6749   002390  C0A1  F088         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6750   002394  ECD5  F006         	call	_vfpfcnvrt	;wreg free
  6751   002398                     l4580:
  6752                           
  6753                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  6754   002398  C035  FFF6         	movff	vfprintf@cfmt,tblptrl
  6755   00239C  C036  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6756   0023A0                     	if	0	;tblptru may be non-zero
  6757   0023A0                     	endif
  6758   0023A0                     	if	0	;tblptru may be non-zero
  6759   0023A0                     	endif
  6760   0023A0  0008               	tblrd		*
  6761   0023A2  50F5               	movf	tablat,w,c
  6762   0023A4  0900               	iorlw	0
  6763   0023A6  A4D8               	btfss	status,2,c
  6764   0023A8  EFD8  F011         	goto	u3701
  6765   0023AC  EFDA  F011         	goto	u3700
  6766   0023B0                     u3701:
  6767   0023B0  EFBD  F011         	goto	l4578
  6768   0023B4                     u3700:
  6769   0023B4                     
  6770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  6771   0023B4  0E00               	movlw	0
  6772   0023B6  0100               	movlb	0	; () banked
  6773   0023B8  6F9D               	movwf	(?_vfprintf+1)& (0+255),b
  6774   0023BA  0E00               	movlw	0
  6775   0023BC  6F9C               	movwf	?_vfprintf& (0+255),b
  6776   0023BE                     
  6777                           ; BSR set to: 0
  6778   0023BE  0012               	return		;funcret
  6779   0023C0                     __end_of_vfprintf:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function _vfpfcnvrt *****************
  6783 ;; Defined at:
  6784 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  fp              2   35[BANK0 ] PTR struct _IO_FILE
  6787 ;;		 -> NULL(0), 
  6788 ;;  fmt             2   37[BANK0 ] PTR PTR unsigned char 
  6789 ;;		 -> vfprintf@cfmt(2), 
  6790 ;;  ap              2   39[BANK0 ] PTR PTR void 
  6791 ;;		 -> printf@ap(2), 
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  convarg         8   50[BANK0 ] struct .
  6794 ;;  cp              2   58[BANK0 ] PTR unsigned char 
  6795 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  6796 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  6797 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  6798 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  6799 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  6800 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  6801 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  6802 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  6803 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  6804 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  6805 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  6806 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  6807 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  6808 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  6809 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  6810 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  6811 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  6812 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  6813 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  6814 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  6815 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  6816 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  6817 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  6818 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  6819 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  6820 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  6821 ;;  done            2   46[BANK0 ] int 
  6822 ;;  i               2    0        int 
  6823 ;;  c               1   45[BANK0 ] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6833 ;;      Params:         0       6       0       0       0       0       0
  6834 ;;      Locals:         0      15       0       0       0       0       0
  6835 ;;      Temps:          0       4       0       0       0       0       0
  6836 ;;      Totals:         0      25       0       0       0       0       0
  6837 ;;Total ram usage:       25 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; Hardware stack levels required when called: 10
  6840 ;; This function calls:
  6841 ;;		_atoi
  6842 ;;		_ctoa
  6843 ;;		_fputc
  6844 ;;		_isdigit
  6845 ;;		_stoa
  6846 ;;		_strncmp
  6847 ;;		_utoa
  6848 ;;		_xtoa
  6849 ;; This function is called by:
  6850 ;;		_vfprintf
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text25
  6855   000DAA                     __ptext25:
  6856                           	callstack 0
  6857   000DAA                     _vfpfcnvrt:
  6858                           	callstack 18
  6859   000DAA                     
  6860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  6861   000DAA  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6862   000DAE  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6863   000DB2  CFDE FFF6          	movff	postinc2,tblptrl
  6864   000DB6  CFDD FFF7          	movff	postdec2,tblptrh
  6865   000DBA                     	if	0	;tblptru may be non-zero
  6866   000DBA                     	endif
  6867   000DBA                     	if	0	;tblptru may be non-zero
  6868   000DBA                     	endif
  6869   000DBA  0008               	tblrd		*
  6870   000DBC  50F5               	movf	tablat,w,c
  6871   000DBE  0A25               	xorlw	37
  6872   000DC0  A4D8               	btfss	status,2,c
  6873   000DC2  EFE5  F006         	goto	u3591
  6874   000DC6  EFE7  F006         	goto	u3590
  6875   000DCA                     u3591:
  6876   000DCA  EFE8  F008         	goto	l4550
  6877   000DCE                     u3590:
  6878   000DCE                     
  6879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  6880   000DCE  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6881   000DD2  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6882   000DD6  2ADE               	incf	postinc2,f,c
  6883   000DD8  0E00               	movlw	0
  6884   000DDA  22DD               	addwfc	postdec2,f,c
  6885   000DDC                     
  6886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  6887   000DDC  0E00               	movlw	0
  6888   000DDE  6E38               	movwf	(_width+1)^0,c
  6889   000DE0  0E00               	movlw	0
  6890   000DE2  6E37               	movwf	_width^0,c
  6891   000DE4  C037  F047         	movff	_width,_flags
  6892   000DE8                     
  6893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  6894   000DE8  6839               	setf	_prec^0,c
  6895   000DEA  683A               	setf	(_prec+1)^0,c
  6896   000DEC                     
  6897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  6898   000DEC  0E00               	movlw	0
  6899   000DEE  0100               	movlb	0	; () banked
  6900   000DF0  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6901   000DF2  0E00               	movlw	0
  6902   000DF4  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6903                           
  6904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6905   000DF6  EF27  F007         	goto	l4484
  6906   000DFA                     l4474:
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  6910   000DFA  8247               	bsf	_flags^0,1,c
  6911   000DFC                     
  6912                           ; BSR set to: 0
  6913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  6914   000DFC  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6915   000E00  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6916   000E04  2ADE               	incf	postinc2,f,c
  6917   000E06  0E00               	movlw	0
  6918   000E08  22DD               	addwfc	postdec2,f,c
  6919                           
  6920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  6921   000E0A  EF27  F007         	goto	l4484
  6922   000E0E                     l4478:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  6926   000E0E  0E00               	movlw	0
  6927   000E10  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  6928   000E12  0E01               	movlw	1
  6929   000E14  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  6930                           
  6931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  6932   000E16  EF27  F007         	goto	l4484
  6933   000E1A                     l4482:
  6934                           
  6935                           ; BSR set to: 0
  6936   000E1A  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6937   000E1E  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6938   000E22  CFDE FFF6          	movff	postinc2,tblptrl
  6939   000E26  CFDD FFF7          	movff	postdec2,tblptrh
  6940   000E2A                     	if	0	;tblptru may be non-zero
  6941   000E2A                     	endif
  6942   000E2A                     	if	0	;tblptru may be non-zero
  6943   000E2A                     	endif
  6944   000E2A  0008               	tblrd		*
  6945   000E2C  50F5               	movf	tablat,w,c
  6946   000E2E  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  6947   000E30  6B8A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  6948                           
  6949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6950                           ; Switch size 1, requested type "simple"
  6951                           ; Number of cases is 1, Range of values is 0 to 0
  6952                           ; switch strategies available:
  6953                           ; Name         Instructions Cycles
  6954                           ; simple_byte            4     3 (average)
  6955                           ;	Chosen strategy is simple_byte
  6956   000E32  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6957   000E34  0A00               	xorlw	0	; case 0
  6958   000E36  B4D8               	btfsc	status,2,c
  6959   000E38  EF20  F007         	goto	l5388
  6960   000E3C  EF07  F007         	goto	l4478
  6961   000E40                     l5388:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ; Switch size 1, requested type "simple"
  6965                           ; Number of cases is 1, Range of values is 48 to 48
  6966                           ; switch strategies available:
  6967                           ; Name         Instructions Cycles
  6968                           ; simple_byte            4     3 (average)
  6969                           ;	Chosen strategy is simple_byte
  6970   000E40  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  6971   000E42  0A30               	xorlw	48	; case 48
  6972   000E44  B4D8               	btfsc	status,2,c
  6973   000E46  EFFD  F006         	goto	l4474
  6974   000E4A  EF07  F007         	goto	l4478
  6975   000E4E                     l4484:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  6979   000E4E  518E               	movf	vfpfcnvrt@done& (0+255),w,b
  6980   000E50  118F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  6981   000E52  B4D8               	btfsc	status,2,c
  6982   000E54  EF2E  F007         	goto	u3601
  6983   000E58  EF30  F007         	goto	u3600
  6984   000E5C                     u3601:
  6985   000E5C  EF0D  F007         	goto	l4482
  6986   000E60                     u3600:
  6987   000E60                     
  6988                           ; BSR set to: 0
  6989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  6990   000E60  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6991   000E64  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6992   000E68  CFDE FFF6          	movff	postinc2,tblptrl
  6993   000E6C  CFDD FFF7          	movff	postdec2,tblptrh
  6994   000E70                     	if	0	;tblptru may be non-zero
  6995   000E70                     	endif
  6996   000E70                     	if	0	;tblptru may be non-zero
  6997   000E70                     	endif
  6998   000E70  0008               	tblrd		*
  6999   000E72  50F5               	movf	tablat,w,c
  7000   000E74  0A2A               	xorlw	42
  7001   000E76  A4D8               	btfss	status,2,c
  7002   000E78  EF40  F007         	goto	u3611
  7003   000E7C  EF42  F007         	goto	u3610
  7004   000E80                     u3611:
  7005   000E80  EF6B  F007         	goto	l4494
  7006   000E84                     u3610:
  7007   000E84                     
  7008                           ; BSR set to: 0
  7009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  7010   000E84  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7011   000E88  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7012   000E8C  2ADE               	incf	postinc2,f,c
  7013   000E8E  0E00               	movlw	0
  7014   000E90  22DD               	addwfc	postdec2,f,c
  7015                           
  7016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7017   000E92  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7018   000E96  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7019   000E9A  CFDF F089          	movff	indf2,??_vfpfcnvrt
  7020   000E9E  0E02               	movlw	2
  7021   000EA0  26DE               	addwf	postinc2,f,c
  7022   000EA2  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  7023   000EA6  0E00               	movlw	0
  7024   000EA8  22DD               	addwfc	postdec2,f,c
  7025   000EAA  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7026   000EAE  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7027   000EB2  CFDE F037          	movff	postinc2,_width
  7028   000EB6  CFDD F038          	movff	postdec2,_width+1
  7029   000EBA                     
  7030                           ; BSR set to: 0
  7031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  7032   000EBA  BE38               	btfsc	(_width+1)^0,7,c
  7033   000EBC  EF64  F007         	goto	u3620
  7034   000EC0  EF62  F007         	goto	u3621
  7035   000EC4                     u3621:
  7036   000EC4  EF9F  F007         	goto	l4502
  7037   000EC8                     u3620:
  7038   000EC8                     
  7039                           ; BSR set to: 0
  7040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  7041   000EC8  8047               	bsf	_flags^0,0,c
  7042                           
  7043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  7044   000ECA  6C37               	negf	_width^0,c
  7045   000ECC  1E38               	comf	(_width+1)^0,f,c
  7046   000ECE  B0D8               	btfsc	status,0,c
  7047   000ED0  2A38               	incf	(_width+1)^0,f,c
  7048   000ED2  EF9F  F007         	goto	l4502
  7049   000ED6                     l4494:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  7053   000ED6  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7054   000EDA  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7055   000EDE  CFDE F01A          	movff	postinc2,atoi@s
  7056   000EE2  CFDD F01B          	movff	postdec2,atoi@s+1
  7057   000EE6  EC5D  F00D         	call	_atoi	;wreg free
  7058   000EEA  C01A  F037         	movff	?_atoi,_width
  7059   000EEE  C01B  F038         	movff	?_atoi+1,_width+1
  7060                           
  7061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  7062   000EF2  EF82  F007         	goto	l4500
  7063   000EF6                     l4496:
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  7067   000EF6  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7068   000EFA  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7069   000EFE  2ADE               	incf	postinc2,f,c
  7070   000F00  0E00               	movlw	0
  7071   000F02  22DD               	addwfc	postdec2,f,c
  7072   000F04                     l4500:
  7073   000F04  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7074   000F08  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7075   000F0C  CFDE FFF6          	movff	postinc2,tblptrl
  7076   000F10  CFDD FFF7          	movff	postdec2,tblptrh
  7077   000F14                     	if	0	;tblptru may be non-zero
  7078   000F14                     	endif
  7079   000F14                     	if	0	;tblptru may be non-zero
  7080   000F14                     	endif
  7081   000F14  0008               	tblrd		*
  7082   000F16  CFF5 F089          	movff	tablat,??_vfpfcnvrt
  7083   000F1A  0ED0               	movlw	208
  7084   000F1C  0100               	movlb	0	; () banked
  7085   000F1E  2589               	addwf	??_vfpfcnvrt& (0+255),w,b
  7086   000F20  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7087   000F22  6B8B               	clrf	(??_vfpfcnvrt+2)& (0+255),b
  7088   000F24  0EFF               	movlw	255
  7089   000F26  238B               	addwfc	(??_vfpfcnvrt+2)& (0+255),f,b
  7090   000F28  518B               	movf	(??_vfpfcnvrt+2)& (0+255),w,b
  7091   000F2A  E109               	bnz	u3630
  7092   000F2C  0E0A               	movlw	10
  7093   000F2E  5D8A               	subwf	(??_vfpfcnvrt+1)& (0+255),w,b
  7094   000F30  A0D8               	btfss	status,0,c
  7095   000F32  EF9D  F007         	goto	u3631
  7096   000F36  EF9F  F007         	goto	u3630
  7097   000F3A                     u3631:
  7098   000F3A  EF7B  F007         	goto	l4496
  7099   000F3E                     u3630:
  7100   000F3E                     l4502:
  7101                           
  7102                           ; BSR set to: 0
  7103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  7104   000F3E  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7105   000F42  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7106   000F46  CFDE FFF6          	movff	postinc2,tblptrl
  7107   000F4A  CFDD FFF7          	movff	postdec2,tblptrh
  7108   000F4E                     	if	0	;tblptru may be non-zero
  7109   000F4E                     	endif
  7110   000F4E                     	if	0	;tblptru may be non-zero
  7111   000F4E                     	endif
  7112   000F4E  0008               	tblrd		*
  7113   000F50  50F5               	movf	tablat,w,c
  7114   000F52  0A63               	xorlw	99
  7115   000F54  A4D8               	btfss	status,2,c
  7116   000F56  EFAF  F007         	goto	u3641
  7117   000F5A  EFB1  F007         	goto	u3640
  7118   000F5E                     u3641:
  7119   000F5E  EFD4  F007         	goto	l4510
  7120   000F62                     u3640:
  7121   000F62                     
  7122                           ; BSR set to: 0
  7123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  7124   000F62  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7125   000F66  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7126   000F6A  2ADE               	incf	postinc2,f,c
  7127   000F6C  0E00               	movlw	0
  7128   000F6E  22DD               	addwfc	postdec2,f,c
  7129                           
  7130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7131   000F70  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7132   000F74  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7133   000F78  CFDF F089          	movff	indf2,??_vfpfcnvrt
  7134   000F7C  0E02               	movlw	2
  7135   000F7E  26DE               	addwf	postinc2,f,c
  7136   000F80  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  7137   000F84  0E00               	movlw	0
  7138   000F86  22DD               	addwfc	postdec2,f,c
  7139   000F88  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7140   000F8C  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7141   000F90  50DF               	movf	indf2,w,c
  7142   000F92  6F8D               	movwf	vfpfcnvrt@c& (0+255),b
  7143   000F94                     
  7144                           ; BSR set to: 0
  7145                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  7146   000F94  C083  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
  7147   000F98  C084  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  7148   000F9C  C08D  F021         	movff	vfpfcnvrt@c,ctoa@c
  7149   000FA0  EC51  F00F         	call	_ctoa	;wreg free
  7150   000FA4  EFFC  F008         	goto	l1418
  7151   000FA8                     l4510:
  7152                           
  7153                           ; BSR set to: 0
  7154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  7155   000FA8  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7156   000FAC  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7157   000FB0  CFDE F09A          	movff	postinc2,vfpfcnvrt@cp
  7158   000FB4  CFDD F09B          	movff	postdec2,vfpfcnvrt@cp+1
  7159   000FB8                     
  7160                           ; BSR set to: 0
  7161   000FB8  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7162   000FBC  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7163   000FC0                     	if	0	;tblptru may be non-zero
  7164   000FC0                     	endif
  7165   000FC0                     	if	0	;tblptru may be non-zero
  7166   000FC0                     	endif
  7167   000FC0  0008               	tblrd		*
  7168   000FC2  50F5               	movf	tablat,w,c
  7169   000FC4  0A78               	xorlw	120
  7170   000FC6  B4D8               	btfsc	status,2,c
  7171   000FC8  EFE8  F007         	goto	u3651
  7172   000FCC  EFEA  F007         	goto	u3650
  7173   000FD0                     u3651:
  7174   000FD0  EFF8  F007         	goto	l4516
  7175   000FD4                     u3650:
  7176   000FD4                     
  7177                           ; BSR set to: 0
  7178   000FD4  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7179   000FD8  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7180   000FDC                     	if	0	;tblptru may be non-zero
  7181   000FDC                     	endif
  7182   000FDC                     	if	0	;tblptru may be non-zero
  7183   000FDC                     	endif
  7184   000FDC  0008               	tblrd		*
  7185   000FDE  50F5               	movf	tablat,w,c
  7186   000FE0  0A75               	xorlw	117
  7187   000FE2  A4D8               	btfss	status,2,c
  7188   000FE4  EFF6  F007         	goto	u3661
  7189   000FE8  EFF8  F007         	goto	u3660
  7190   000FEC                     u3661:
  7191   000FEC  EF70  F008         	goto	l4530
  7192   000FF0                     u3660:
  7193   000FF0                     l4516:
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  7197   000FF0  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7198   000FF4  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7199   000FF8  CFDF F089          	movff	indf2,??_vfpfcnvrt
  7200   000FFC  0E02               	movlw	2
  7201   000FFE  26DE               	addwf	postinc2,f,c
  7202   001000  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  7203   001004  0E00               	movlw	0
  7204   001006  22DD               	addwfc	postdec2,f,c
  7205   001008  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7206   00100C  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7207   001010  CFDE F08B          	movff	postinc2,??_vfpfcnvrt+2
  7208   001014  CFDD F08C          	movff	postdec2,??_vfpfcnvrt+3
  7209   001018  C08B  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  7210   00101C  C08C  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  7211   001020  6B94               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  7212   001022  6B95               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  7213   001024  6B96               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  7214   001026  6B97               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  7215   001028  6B98               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  7216   00102A  6B99               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  7217                           
  7218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  7219   00102C  0E01               	movlw	1
  7220   00102E  259A               	addwf	vfpfcnvrt@cp& (0+255),w,b
  7221   001030  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  7222   001032  0E00               	movlw	0
  7223   001034  219B               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  7224   001036  6F8A               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7225   001038  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7226   00103C  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7227   001040  C089  FFDE         	movff	??_vfpfcnvrt,postinc2
  7228   001044  C08A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  7229                           
  7230                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  7231   001048  EF56  F008         	goto	l4528
  7232   00104C                     l4518:
  7233                           
  7234                           ; BSR set to: 0
  7235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  7236   00104C  C083  F060         	movff	vfpfcnvrt@fp,utoa@fp
  7237   001050  C084  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  7238   001054  C092  F062         	movff	vfpfcnvrt@convarg,utoa@d
  7239   001058  C093  F063         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  7240   00105C  C094  F064         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  7241   001060  C095  F065         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  7242   001064  C096  F066         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  7243   001068  C097  F067         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  7244   00106C  C098  F068         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  7245   001070  C099  F069         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  7246   001074  ECFD  F008         	call	_utoa	;wreg free
  7247   001078  EFFC  F008         	goto	l1418
  7248   00107C                     l4522:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  7252   00107C  C083  F060         	movff	vfpfcnvrt@fp,xtoa@fp
  7253   001080  C084  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  7254   001084  C092  F062         	movff	vfpfcnvrt@convarg,xtoa@d
  7255   001088  C093  F063         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  7256   00108C  C094  F064         	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  7257   001090  C095  F065         	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  7258   001094  C096  F066         	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  7259   001098  C097  F067         	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  7260   00109C  C098  F068         	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  7261   0010A0  C099  F069         	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  7262   0010A4  ECF2  F00A         	call	_xtoa	;wreg free
  7263   0010A8  EFFC  F008         	goto	l1418
  7264   0010AC                     l4528:
  7265                           
  7266                           ; BSR set to: 0
  7267   0010AC  C09A  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  7268   0010B0  C09B  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  7269   0010B4                     	if	0	;tblptru may be non-zero
  7270   0010B4                     	endif
  7271   0010B4                     	if	0	;tblptru may be non-zero
  7272   0010B4                     	endif
  7273   0010B4  0008               	tblrd		*
  7274   0010B6  50F5               	movf	tablat,w,c
  7275   0010B8  6F89               	movwf	??_vfpfcnvrt& (0+255),b
  7276   0010BA  6B8A               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  7277                           
  7278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7279                           ; Switch size 1, requested type "simple"
  7280                           ; Number of cases is 1, Range of values is 0 to 0
  7281                           ; switch strategies available:
  7282                           ; Name         Instructions Cycles
  7283                           ; simple_byte            4     3 (average)
  7284                           ;	Chosen strategy is simple_byte
  7285   0010BC  518A               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7286   0010BE  0A00               	xorlw	0	; case 0
  7287   0010C0  B4D8               	btfsc	status,2,c
  7288   0010C2  EF65  F008         	goto	l5390
  7289   0010C6  EF70  F008         	goto	l4530
  7290   0010CA                     l5390:
  7291                           
  7292                           ; BSR set to: 0
  7293                           ; Switch size 1, requested type "simple"
  7294                           ; Number of cases is 2, Range of values is 117 to 120
  7295                           ; switch strategies available:
  7296                           ; Name         Instructions Cycles
  7297                           ; simple_byte            7     4 (average)
  7298                           ;	Chosen strategy is simple_byte
  7299   0010CA  5189               	movf	??_vfpfcnvrt& (0+255),w,b
  7300   0010CC  0A75               	xorlw	117	; case 117
  7301   0010CE  B4D8               	btfsc	status,2,c
  7302   0010D0  EF26  F008         	goto	l4518
  7303   0010D4  0A0D               	xorlw	13	; case 120
  7304   0010D6  B4D8               	btfsc	status,2,c
  7305   0010D8  EF3E  F008         	goto	l4522
  7306   0010DC  EF70  F008         	goto	l4530
  7307   0010E0                     l4530:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  7311   0010E0  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7312   0010E4  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7313   0010E8  CFDE FFF6          	movff	postinc2,tblptrl
  7314   0010EC  CFDD FFF7          	movff	postdec2,tblptrh
  7315   0010F0                     	if	0	;tblptru may be non-zero
  7316   0010F0                     	endif
  7317   0010F0                     	if	0	;tblptru may be non-zero
  7318   0010F0                     	endif
  7319   0010F0  0008               	tblrd		*
  7320   0010F2  50F5               	movf	tablat,w,c
  7321   0010F4  0A73               	xorlw	115
  7322   0010F6  B4D8               	btfsc	status,2,c
  7323   0010F8  EF80  F008         	goto	u3671
  7324   0010FC  EF82  F008         	goto	u3670
  7325   001100                     u3671:
  7326   001100  EF9D  F008         	goto	l4534
  7327   001104                     u3670:
  7328   001104                     
  7329                           ; BSR set to: 0
  7330   001104  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7331   001108  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7332   00110C  CFDE F014          	movff	postinc2,strncmp@_l
  7333   001110  CFDD F015          	movff	postdec2,strncmp@_l+1
  7334   001114  0EF1               	movlw	low STR_105
  7335   001116  6E16               	movwf	strncmp@_r^0,c
  7336   001118  0E7F               	movlw	high STR_105
  7337   00111A  6E17               	movwf	(strncmp@_r+1)^0,c
  7338   00111C  0E00               	movlw	0
  7339   00111E  6E19               	movwf	(strncmp@n+1)^0,c
  7340   001120  0E03               	movlw	3
  7341   001122  6E18               	movwf	strncmp@n^0,c
  7342   001124  EC7A  F00E         	call	_strncmp	;wreg free
  7343   001128  5014               	movf	?_strncmp^0,w,c
  7344   00112A  1015               	iorwf	(?_strncmp+1)^0,w,c
  7345   00112C  A4D8               	btfss	status,2,c
  7346   00112E  EF9B  F008         	goto	u3681
  7347   001132  EF9D  F008         	goto	u3680
  7348   001136                     u3681:
  7349   001136  EFDF  F008         	goto	l4546
  7350   00113A                     u3680:
  7351   00113A                     l4534:
  7352                           
  7353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  7354   00113A  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7355   00113E  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7356   001142  CFDE FFF6          	movff	postinc2,tblptrl
  7357   001146  CFDD FFF7          	movff	postdec2,tblptrh
  7358   00114A                     	if	0	;tblptru may be non-zero
  7359   00114A                     	endif
  7360   00114A                     	if	0	;tblptru may be non-zero
  7361   00114A                     	endif
  7362   00114A  0008               	tblrd		*
  7363   00114C  50F5               	movf	tablat,w,c
  7364   00114E  0A73               	xorlw	115
  7365   001150  B4D8               	btfsc	status,2,c
  7366   001152  EFAD  F008         	goto	u3691
  7367   001156  EFAF  F008         	goto	u3690
  7368   00115A                     u3691:
  7369   00115A  EFB6  F008         	goto	l4538
  7370   00115E                     u3690:
  7371   00115E  0E00               	movlw	0
  7372   001160  0100               	movlb	0	; () banked
  7373   001162  6F91               	movwf	(_vfpfcnvrt$2053+1)& (0+255),b
  7374   001164  0E03               	movlw	3
  7375   001166  6F90               	movwf	_vfpfcnvrt$2053& (0+255),b
  7376   001168  EFBB  F008         	goto	l4540
  7377   00116C                     l4538:
  7378   00116C  0E00               	movlw	0
  7379   00116E  0100               	movlb	0	; () banked
  7380   001170  6F91               	movwf	(_vfpfcnvrt$2053+1)& (0+255),b
  7381   001172  0E01               	movlw	1
  7382   001174  6F90               	movwf	_vfpfcnvrt$2053& (0+255),b
  7383   001176                     l4540:
  7384                           
  7385                           ; BSR set to: 0
  7386   001176  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7387   00117A  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7388   00117E  5190               	movf	_vfpfcnvrt$2053& (0+255),w,b
  7389   001180  26DE               	addwf	postinc2,f,c
  7390   001182  5191               	movf	(_vfpfcnvrt$2053+1)& (0+255),w,b
  7391   001184  22DD               	addwfc	postdec2,f,c
  7392   001186                     
  7393                           ; BSR set to: 0
  7394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  7395   001186  C083  F01F         	movff	vfpfcnvrt@fp,stoa@fp
  7396   00118A  C084  F020         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  7397   00118E  C087  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7398   001192  C088  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7399   001196  CFDF F089          	movff	indf2,??_vfpfcnvrt
  7400   00119A  0E02               	movlw	2
  7401   00119C  26DE               	addwf	postinc2,f,c
  7402   00119E  CFDF F08A          	movff	indf2,??_vfpfcnvrt+1
  7403   0011A2  0E00               	movlw	0
  7404   0011A4  22DD               	addwfc	postdec2,f,c
  7405   0011A6  C089  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7406   0011AA  C08A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7407   0011AE  CFDE F021          	movff	postinc2,stoa@s
  7408   0011B2  CFDD F022          	movff	postdec2,stoa@s+1
  7409   0011B6  ECD9  F00B         	call	_stoa	;wreg free
  7410   0011BA  EFFC  F008         	goto	l1418
  7411   0011BE                     l4546:
  7412                           
  7413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  7414   0011BE  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7415   0011C2  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7416   0011C6  2ADE               	incf	postinc2,f,c
  7417   0011C8  0E00               	movlw	0
  7418   0011CA  22DD               	addwfc	postdec2,f,c
  7419   0011CC  EFFC  F008         	goto	l1418
  7420   0011D0                     l4550:
  7421                           
  7422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  7423   0011D0  C085  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7424   0011D4  C086  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7425   0011D8  CFDE FFF6          	movff	postinc2,tblptrl
  7426   0011DC  CFDD FFF7          	movff	postdec2,tblptrh
  7427   0011E0                     	if	0	;tblptru may be non-zero
  7428   0011E0                     	endif
  7429   0011E0                     	if	0	;tblptru may be non-zero
  7430   0011E0                     	endif
  7431   0011E0  0008               	tblrd		*
  7432   0011E2  50F5               	movf	tablat,w,c
  7433   0011E4  6E16               	movwf	fputc@c^0,c
  7434   0011E6  6A17               	clrf	(fputc@c+1)^0,c
  7435   0011E8  C083  F018         	movff	vfpfcnvrt@fp,fputc@fp
  7436   0011EC  C084  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7437   0011F0  ECAE  F010         	call	_fputc	;wreg free
  7438   0011F4  EFDF  F008         	goto	l4546
  7439   0011F8                     l1418:
  7440   0011F8  0012               	return		;funcret
  7441   0011FA                     __end_of_vfpfcnvrt:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function _xtoa *****************
  7445 ;; Defined at:
  7446 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7449 ;;		 -> NULL(0), 
  7450 ;;  d               8    2[BANK0 ] unsigned long long 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;  n               8   24[BANK0 ] unsigned long long 
  7453 ;;  i               2   32[BANK0 ] int 
  7454 ;;  w               2   22[BANK0 ] int 
  7455 ;;  p               2   20[BANK0 ] int 
  7456 ;;  c               1   34[BANK0 ] unsigned char 
  7457 ;; Return value:  Size  Location     Type
  7458 ;;                  1    wreg      void 
  7459 ;; Registers used:
  7460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7461 ;; Tracked objects:
  7462 ;;		On entry : 0/0
  7463 ;;		On exit  : 0/0
  7464 ;;		Unchanged: 0/0
  7465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7466 ;;      Params:         0      10       0       0       0       0       0
  7467 ;;      Locals:         0      17       0       0       0       0       0
  7468 ;;      Temps:          0       8       0       0       0       0       0
  7469 ;;      Totals:         0      35       0       0       0       0       0
  7470 ;;Total ram usage:       35 bytes
  7471 ;; Hardware stack levels used: 1
  7472 ;; Hardware stack levels required when called: 9
  7473 ;; This function calls:
  7474 ;;		_pad
  7475 ;; This function is called by:
  7476 ;;		_vfpfcnvrt
  7477 ;; This function uses a non-reentrant model
  7478 ;;
  7479                           
  7480                           	psect	text26
  7481   0015E4                     __ptext26:
  7482                           	callstack 0
  7483   0015E4                     _xtoa:
  7484                           	callstack 18
  7485   0015E4                     
  7486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  7487   0015E4  BE3A               	btfsc	(_prec+1)^0,7,c
  7488   0015E6  EFF7  F00A         	goto	u3411
  7489   0015EA  EFF9  F00A         	goto	u3410
  7490   0015EE                     u3411:
  7491   0015EE  EFFA  F00A         	goto	l4370
  7492   0015F2                     u3410:
  7493   0015F2                     
  7494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  7495   0015F2  9247               	bcf	_flags^0,1,c
  7496   0015F4                     l4370:
  7497                           
  7498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  7499   0015F4  BE3A               	btfsc	(_prec+1)^0,7,c
  7500   0015F6  EF07  F00B         	goto	u3420
  7501   0015FA  503A               	movf	(_prec+1)^0,w,c
  7502   0015FC  E106               	bnz	u3421
  7503   0015FE  0439               	decf	_prec^0,w,c
  7504   001600  B0D8               	btfsc	status,0,c
  7505   001602  EF05  F00B         	goto	u3421
  7506   001606  EF07  F00B         	goto	u3420
  7507   00160A                     u3421:
  7508   00160A  EF0E  F00B         	goto	l1384
  7509   00160E                     u3420:
  7510   00160E  0E00               	movlw	0
  7511   001610  0100               	movlb	0	; () banked
  7512   001612  6F75               	movwf	(xtoa@p+1)& (0+255),b
  7513   001614  0E01               	movlw	1
  7514   001616  6F74               	movwf	xtoa@p& (0+255),b
  7515   001618  EF12  F00B         	goto	l1386
  7516   00161C                     l1384:
  7517   00161C  C039  F074         	movff	_prec,xtoa@p
  7518   001620  C03A  F075         	movff	_prec+1,xtoa@p+1
  7519   001624                     l1386:
  7520                           
  7521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  7522   001624  C037  F076         	movff	_width,xtoa@w
  7523   001628  C038  F077         	movff	_width+1,xtoa@w+1
  7524                           
  7525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  7526   00162C  C062  F078         	movff	xtoa@d,xtoa@n
  7527   001630  C063  F079         	movff	xtoa@d+1,xtoa@n+1
  7528   001634  C064  F07A         	movff	xtoa@d+2,xtoa@n+2
  7529   001638  C065  F07B         	movff	xtoa@d+3,xtoa@n+3
  7530   00163C  C066  F07C         	movff	xtoa@d+4,xtoa@n+4
  7531   001640  C067  F07D         	movff	xtoa@d+5,xtoa@n+5
  7532   001644  C068  F07E         	movff	xtoa@d+6,xtoa@n+6
  7533   001648  C069  F07F         	movff	xtoa@d+7,xtoa@n+7
  7534   00164C                     
  7535                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  7536   00164C  0E00               	movlw	0
  7537   00164E  0100               	movlb	0	; () banked
  7538   001650  6F81               	movwf	(xtoa@i+1)& (0+255),b
  7539   001652  0E1F               	movlw	31
  7540   001654  6F80               	movwf	xtoa@i& (0+255),b
  7541   001656                     
  7542                           ; BSR set to: 0
  7543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  7544   001656  0E00               	movlw	0
  7545   001658  6FDE               	movwf	(_dbuf+31)& (0+255),b
  7546                           
  7547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7548   00165A  EF8A  F00B         	goto	l4398
  7549   00165E                     l4378:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  7553   00165E  0780               	decf	xtoa@i& (0+255),f,b
  7554   001660  A0D8               	btfss	status,0,c
  7555   001662  0781               	decf	(xtoa@i+1)& (0+255),f,b
  7556   001664                     
  7557                           ; BSR set to: 0
  7558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  7559   001664  5178               	movf	xtoa@n& (0+255),w,b
  7560   001666  0B0F               	andlw	15
  7561   001668  6F82               	movwf	xtoa@c& (0+255),b
  7562   00166A                     
  7563                           ; BSR set to: 0
  7564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  7565   00166A  0E09               	movlw	9
  7566   00166C  6582               	cpfsgt	xtoa@c& (0+255),b
  7567   00166E  EF3B  F00B         	goto	u3431
  7568   001672  EF3D  F00B         	goto	u3430
  7569   001676                     u3431:
  7570   001676  EF45  F00B         	goto	l4386
  7571   00167A                     u3430:
  7572   00167A                     
  7573                           ; BSR set to: 0
  7574   00167A  0E57               	movlw	87
  7575   00167C  2582               	addwf	xtoa@c& (0+255),w,b
  7576   00167E  6F72               	movwf	_xtoa$2033& (0+255),b
  7577   001680  6B73               	clrf	(_xtoa$2033+1)& (0+255),b
  7578   001682  0E00               	movlw	0
  7579   001684  2373               	addwfc	(_xtoa$2033+1)& (0+255),f,b
  7580   001686  EF4B  F00B         	goto	l4388
  7581   00168A                     l4386:
  7582                           
  7583                           ; BSR set to: 0
  7584   00168A  0E30               	movlw	48
  7585   00168C  2582               	addwf	xtoa@c& (0+255),w,b
  7586   00168E  6F72               	movwf	_xtoa$2033& (0+255),b
  7587   001690  6B73               	clrf	(_xtoa$2033+1)& (0+255),b
  7588   001692  0E00               	movlw	0
  7589   001694  2373               	addwfc	(_xtoa$2033+1)& (0+255),f,b
  7590   001696                     l4388:
  7591                           
  7592                           ; BSR set to: 0
  7593   001696  C072  F082         	movff	_xtoa$2033,xtoa@c
  7594   00169A                     
  7595                           ; BSR set to: 0
  7596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  7597   00169A  0EBF               	movlw	low _dbuf
  7598   00169C  2580               	addwf	xtoa@i& (0+255),w,b
  7599   00169E  6ED9               	movwf	fsr2l,c
  7600   0016A0  0E00               	movlw	high _dbuf
  7601   0016A2  2181               	addwfc	(xtoa@i+1)& (0+255),w,b
  7602   0016A4  6EDA               	movwf	fsr2h,c
  7603   0016A6  C082  FFDF         	movff	xtoa@c,indf2
  7604   0016AA                     
  7605                           ; BSR set to: 0
  7606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  7607   0016AA  0774               	decf	xtoa@p& (0+255),f,b
  7608   0016AC  A0D8               	btfss	status,0,c
  7609   0016AE  0775               	decf	(xtoa@p+1)& (0+255),f,b
  7610   0016B0                     
  7611                           ; BSR set to: 0
  7612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  7613   0016B0  0776               	decf	xtoa@w& (0+255),f,b
  7614   0016B2  A0D8               	btfss	status,0,c
  7615   0016B4  0777               	decf	(xtoa@w+1)& (0+255),f,b
  7616   0016B6                     
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  7619   0016B6  C078  F06A         	movff	xtoa@n,??_xtoa
  7620   0016BA  C079  F06B         	movff	xtoa@n+1,??_xtoa+1
  7621   0016BE  C07A  F06C         	movff	xtoa@n+2,??_xtoa+2
  7622   0016C2  C07B  F06D         	movff	xtoa@n+3,??_xtoa+3
  7623   0016C6  C07C  F06E         	movff	xtoa@n+4,??_xtoa+4
  7624   0016CA  C07D  F06F         	movff	xtoa@n+5,??_xtoa+5
  7625   0016CE  C07E  F070         	movff	xtoa@n+6,??_xtoa+6
  7626   0016D2  C07F  F071         	movff	xtoa@n+7,??_xtoa+7
  7627   0016D6  0E05               	movlw	5
  7628   0016D8  EF77  F00B         	goto	u3440
  7629   0016DC                     u3445:
  7630   0016DC  90D8               	bcf	status,0,c
  7631   0016DE  3371               	rrcf	(??_xtoa+7)& (0+255),f,b
  7632   0016E0  3370               	rrcf	(??_xtoa+6)& (0+255),f,b
  7633   0016E2  336F               	rrcf	(??_xtoa+5)& (0+255),f,b
  7634   0016E4  336E               	rrcf	(??_xtoa+4)& (0+255),f,b
  7635   0016E6  336D               	rrcf	(??_xtoa+3)& (0+255),f,b
  7636   0016E8  336C               	rrcf	(??_xtoa+2)& (0+255),f,b
  7637   0016EA  336B               	rrcf	(??_xtoa+1)& (0+255),f,b
  7638   0016EC  336A               	rrcf	??_xtoa& (0+255),f,b
  7639   0016EE                     u3440:
  7640   0016EE  2EE8               	decfsz	wreg,f,c
  7641   0016F0  EF6E  F00B         	goto	u3445
  7642   0016F4  C06A  F078         	movff	??_xtoa,xtoa@n
  7643   0016F8  C06B  F079         	movff	??_xtoa+1,xtoa@n+1
  7644   0016FC  C06C  F07A         	movff	??_xtoa+2,xtoa@n+2
  7645   001700  C06D  F07B         	movff	??_xtoa+3,xtoa@n+3
  7646   001704  C06E  F07C         	movff	??_xtoa+4,xtoa@n+4
  7647   001708  C06F  F07D         	movff	??_xtoa+5,xtoa@n+5
  7648   00170C  C070  F07E         	movff	??_xtoa+6,xtoa@n+6
  7649   001710  C071  F07F         	movff	??_xtoa+7,xtoa@n+7
  7650   001714                     l4398:
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  7654   001714  BF81               	btfsc	(xtoa@i+1)& (0+255),7,b
  7655   001716  EF96  F00B         	goto	u3451
  7656   00171A  5181               	movf	(xtoa@i+1)& (0+255),w,b
  7657   00171C  E109               	bnz	u3450
  7658   00171E  0E02               	movlw	2
  7659   001720  5D80               	subwf	xtoa@i& (0+255),w,b
  7660   001722  A0D8               	btfss	status,0,c
  7661   001724  EF96  F00B         	goto	u3451
  7662   001728  EF98  F00B         	goto	u3450
  7663   00172C                     u3451:
  7664   00172C  EFC8  F00B         	goto	l4408
  7665   001730                     u3450:
  7666   001730                     
  7667                           ; BSR set to: 0
  7668   001730  5178               	movf	xtoa@n& (0+255),w,b
  7669   001732  1179               	iorwf	(xtoa@n+1)& (0+255),w,b
  7670   001734  117A               	iorwf	(xtoa@n+2)& (0+255),w,b
  7671   001736  117B               	iorwf	(xtoa@n+3)& (0+255),w,b
  7672   001738  117C               	iorwf	(xtoa@n+4)& (0+255),w,b
  7673   00173A  117D               	iorwf	(xtoa@n+5)& (0+255),w,b
  7674   00173C  117E               	iorwf	(xtoa@n+6)& (0+255),w,b
  7675   00173E  117F               	iorwf	(xtoa@n+7)& (0+255),w,b
  7676   001740  A4D8               	btfss	status,2,c
  7677   001742  EFA5  F00B         	goto	u3461
  7678   001746  EFA7  F00B         	goto	u3460
  7679   00174A                     u3461:
  7680   00174A  EF2F  F00B         	goto	l4378
  7681   00174E                     u3460:
  7682   00174E                     
  7683                           ; BSR set to: 0
  7684   00174E  BF75               	btfsc	(xtoa@p+1)& (0+255),7,b
  7685   001750  EFB4  F00B         	goto	u3470
  7686   001754  5175               	movf	(xtoa@p+1)& (0+255),w,b
  7687   001756  E106               	bnz	u3471
  7688   001758  0574               	decf	xtoa@p& (0+255),w,b
  7689   00175A  B0D8               	btfsc	status,0,c
  7690   00175C  EFB2  F00B         	goto	u3471
  7691   001760  EFB4  F00B         	goto	u3470
  7692   001764                     u3471:
  7693   001764  EF2F  F00B         	goto	l4378
  7694   001768                     u3470:
  7695   001768                     
  7696                           ; BSR set to: 0
  7697   001768  BF77               	btfsc	(xtoa@w+1)& (0+255),7,b
  7698   00176A  EFBF  F00B         	goto	u3481
  7699   00176E  5177               	movf	(xtoa@w+1)& (0+255),w,b
  7700   001770  E108               	bnz	u3480
  7701   001772  0576               	decf	xtoa@w& (0+255),w,b
  7702   001774  A0D8               	btfss	status,0,c
  7703   001776  EFBF  F00B         	goto	u3481
  7704   00177A  EFC1  F00B         	goto	u3480
  7705   00177E                     u3481:
  7706   00177E  EFC8  F00B         	goto	l4408
  7707   001782                     u3480:
  7708   001782                     
  7709                           ; BSR set to: 0
  7710   001782  B247               	btfsc	_flags^0,1,c
  7711   001784  EFC6  F00B         	goto	u3491
  7712   001788  EFC8  F00B         	goto	u3490
  7713   00178C                     u3491:
  7714   00178C  EF2F  F00B         	goto	l4378
  7715   001790                     u3490:
  7716   001790                     l4408:
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  7720   001790  C060  F026         	movff	xtoa@fp,pad@fp
  7721   001794  C061  F027         	movff	xtoa@fp+1,pad@fp+1
  7722   001798  0EBF               	movlw	low _dbuf
  7723   00179A  2580               	addwf	xtoa@i& (0+255),w,b
  7724   00179C  6E28               	movwf	pad@buf^0,c
  7725   00179E  0E00               	movlw	high _dbuf
  7726   0017A0  2181               	addwfc	(xtoa@i+1)& (0+255),w,b
  7727   0017A2  6E29               	movwf	(pad@buf+1)^0,c
  7728   0017A4  C076  F02A         	movff	xtoa@w,pad@p
  7729   0017A8  C077  F02B         	movff	xtoa@w+1,pad@p+1
  7730   0017AC  EC0C  F010         	call	_pad	;wreg free
  7731   0017B0  0012               	return		;funcret
  7732   0017B2                     __end_of_xtoa:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _utoa *****************
  7736 ;; Defined at:
  7737 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7740 ;;		 -> NULL(0), 
  7741 ;;  d               8    2[BANK0 ] unsigned long long 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  n               8   22[BANK0 ] unsigned long long 
  7744 ;;  i               2   30[BANK0 ] int 
  7745 ;;  w               2   20[BANK0 ] int 
  7746 ;;  p               2   18[BANK0 ] int 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7756 ;;      Params:         0      10       0       0       0       0       0
  7757 ;;      Locals:         0      14       0       0       0       0       0
  7758 ;;      Temps:          0       8       0       0       0       0       0
  7759 ;;      Totals:         0      32       0       0       0       0       0
  7760 ;;Total ram usage:       32 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 9
  7763 ;; This function calls:
  7764 ;;		___lodiv
  7765 ;;		___lomod
  7766 ;;		_pad
  7767 ;; This function is called by:
  7768 ;;		_vfpfcnvrt
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text27
  7773   0011FA                     __ptext27:
  7774                           	callstack 0
  7775   0011FA                     _utoa:
  7776                           	callstack 18
  7777   0011FA                     
  7778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  7779   0011FA  BE3A               	btfsc	(_prec+1)^0,7,c
  7780   0011FC  EF02  F009         	goto	u3341
  7781   001200  EF04  F009         	goto	u3340
  7782   001204                     u3341:
  7783   001204  EF05  F009         	goto	l4334
  7784   001208                     u3340:
  7785   001208                     
  7786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  7787   001208  9247               	bcf	_flags^0,1,c
  7788   00120A                     l4334:
  7789                           
  7790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  7791   00120A  BE3A               	btfsc	(_prec+1)^0,7,c
  7792   00120C  EF12  F009         	goto	u3350
  7793   001210  503A               	movf	(_prec+1)^0,w,c
  7794   001212  E106               	bnz	u3351
  7795   001214  0439               	decf	_prec^0,w,c
  7796   001216  B0D8               	btfsc	status,0,c
  7797   001218  EF10  F009         	goto	u3351
  7798   00121C  EF12  F009         	goto	u3350
  7799   001220                     u3351:
  7800   001220  EF19  F009         	goto	l1369
  7801   001224                     u3350:
  7802   001224  0E00               	movlw	0
  7803   001226  0100               	movlb	0	; () banked
  7804   001228  6F73               	movwf	(utoa@p+1)& (0+255),b
  7805   00122A  0E01               	movlw	1
  7806   00122C  6F72               	movwf	utoa@p& (0+255),b
  7807   00122E  EF1D  F009         	goto	l1371
  7808   001232                     l1369:
  7809   001232  C039  F072         	movff	_prec,utoa@p
  7810   001236  C03A  F073         	movff	_prec+1,utoa@p+1
  7811   00123A                     l1371:
  7812                           
  7813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  7814   00123A  C037  F074         	movff	_width,utoa@w
  7815   00123E  C038  F075         	movff	_width+1,utoa@w+1
  7816                           
  7817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  7818   001242  C062  F076         	movff	utoa@d,utoa@n
  7819   001246  C063  F077         	movff	utoa@d+1,utoa@n+1
  7820   00124A  C064  F078         	movff	utoa@d+2,utoa@n+2
  7821   00124E  C065  F079         	movff	utoa@d+3,utoa@n+3
  7822   001252  C066  F07A         	movff	utoa@d+4,utoa@n+4
  7823   001256  C067  F07B         	movff	utoa@d+5,utoa@n+5
  7824   00125A  C068  F07C         	movff	utoa@d+6,utoa@n+6
  7825   00125E  C069  F07D         	movff	utoa@d+7,utoa@n+7
  7826   001262                     
  7827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  7828   001262  0E00               	movlw	0
  7829   001264  0100               	movlb	0	; () banked
  7830   001266  6F7F               	movwf	(utoa@i+1)& (0+255),b
  7831   001268  0E1F               	movlw	31
  7832   00126A  6F7E               	movwf	utoa@i& (0+255),b
  7833   00126C                     
  7834                           ; BSR set to: 0
  7835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  7836   00126C  0E00               	movlw	0
  7837   00126E  6FDE               	movwf	(_dbuf+31)& (0+255),b
  7838                           
  7839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  7840   001270  EFB1  F009         	goto	l4352
  7841   001274                     l4342:
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  7845   001274  077E               	decf	utoa@i& (0+255),f,b
  7846   001276  A0D8               	btfss	status,0,c
  7847   001278  077F               	decf	(utoa@i+1)& (0+255),f,b
  7848   00127A                     
  7849                           ; BSR set to: 0
  7850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  7851   00127A  0EBF               	movlw	low _dbuf
  7852   00127C  257E               	addwf	utoa@i& (0+255),w,b
  7853   00127E  6ED9               	movwf	fsr2l,c
  7854   001280  0E00               	movlw	high _dbuf
  7855   001282  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  7856   001284  6EDA               	movwf	fsr2h,c
  7857   001286  C076  F014         	movff	utoa@n,___lomod@dividend
  7858   00128A  C077  F015         	movff	utoa@n+1,___lomod@dividend+1
  7859   00128E  C078  F016         	movff	utoa@n+2,___lomod@dividend+2
  7860   001292  C079  F017         	movff	utoa@n+3,___lomod@dividend+3
  7861   001296  C07A  F018         	movff	utoa@n+4,___lomod@dividend+4
  7862   00129A  C07B  F019         	movff	utoa@n+5,___lomod@dividend+5
  7863   00129E  C07C  F01A         	movff	utoa@n+6,___lomod@dividend+6
  7864   0012A2  C07D  F01B         	movff	utoa@n+7,___lomod@dividend+7
  7865   0012A6  0E0A               	movlw	10
  7866   0012A8  6E1C               	movwf	___lomod@divisor^0,c
  7867   0012AA  0E00               	movlw	0
  7868   0012AC  6E1D               	movwf	(___lomod@divisor+1)^0,c
  7869   0012AE  0E00               	movlw	0
  7870   0012B0  6E1E               	movwf	(___lomod@divisor+2)^0,c
  7871   0012B2  0E00               	movlw	0
  7872   0012B4  6E1F               	movwf	(___lomod@divisor+3)^0,c
  7873   0012B6  0E00               	movlw	0
  7874   0012B8  6E20               	movwf	(___lomod@divisor+4)^0,c
  7875   0012BA  0E00               	movlw	0
  7876   0012BC  6E21               	movwf	(___lomod@divisor+5)^0,c
  7877   0012BE  0E00               	movlw	0
  7878   0012C0  6E22               	movwf	(___lomod@divisor+6)^0,c
  7879   0012C2  0E00               	movlw	0
  7880   0012C4  6E23               	movwf	(___lomod@divisor+7)^0,c
  7881   0012C6  ECE9  F00E         	call	___lomod	;wreg free
  7882   0012CA  C014  F06A         	movff	?___lomod,??_utoa
  7883   0012CE  C015  F06B         	movff	?___lomod+1,??_utoa+1
  7884   0012D2  C016  F06C         	movff	?___lomod+2,??_utoa+2
  7885   0012D6  C017  F06D         	movff	?___lomod+3,??_utoa+3
  7886   0012DA  C018  F06E         	movff	?___lomod+4,??_utoa+4
  7887   0012DE  C019  F06F         	movff	?___lomod+5,??_utoa+5
  7888   0012E2  C01A  F070         	movff	?___lomod+6,??_utoa+6
  7889   0012E6  C01B  F071         	movff	?___lomod+7,??_utoa+7
  7890   0012EA  0100               	movlb	0	; () banked
  7891   0012EC  516A               	movf	??_utoa& (0+255),w,b
  7892   0012EE  0F30               	addlw	48
  7893   0012F0  6EDF               	movwf	indf2,c
  7894   0012F2                     
  7895                           ; BSR set to: 0
  7896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  7897   0012F2  0772               	decf	utoa@p& (0+255),f,b
  7898   0012F4  A0D8               	btfss	status,0,c
  7899   0012F6  0773               	decf	(utoa@p+1)& (0+255),f,b
  7900   0012F8                     
  7901                           ; BSR set to: 0
  7902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  7903   0012F8  0774               	decf	utoa@w& (0+255),f,b
  7904   0012FA  A0D8               	btfss	status,0,c
  7905   0012FC  0775               	decf	(utoa@w+1)& (0+255),f,b
  7906   0012FE                     
  7907                           ; BSR set to: 0
  7908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  7909   0012FE  C076  F014         	movff	utoa@n,___lodiv@dividend
  7910   001302  C077  F015         	movff	utoa@n+1,___lodiv@dividend+1
  7911   001306  C078  F016         	movff	utoa@n+2,___lodiv@dividend+2
  7912   00130A  C079  F017         	movff	utoa@n+3,___lodiv@dividend+3
  7913   00130E  C07A  F018         	movff	utoa@n+4,___lodiv@dividend+4
  7914   001312  C07B  F019         	movff	utoa@n+5,___lodiv@dividend+5
  7915   001316  C07C  F01A         	movff	utoa@n+6,___lodiv@dividend+6
  7916   00131A  C07D  F01B         	movff	utoa@n+7,___lodiv@dividend+7
  7917   00131E  0E0A               	movlw	10
  7918   001320  6E1C               	movwf	___lodiv@divisor^0,c
  7919   001322  0E00               	movlw	0
  7920   001324  6E1D               	movwf	(___lodiv@divisor+1)^0,c
  7921   001326  0E00               	movlw	0
  7922   001328  6E1E               	movwf	(___lodiv@divisor+2)^0,c
  7923   00132A  0E00               	movlw	0
  7924   00132C  6E1F               	movwf	(___lodiv@divisor+3)^0,c
  7925   00132E  0E00               	movlw	0
  7926   001330  6E20               	movwf	(___lodiv@divisor+4)^0,c
  7927   001332  0E00               	movlw	0
  7928   001334  6E21               	movwf	(___lodiv@divisor+5)^0,c
  7929   001336  0E00               	movlw	0
  7930   001338  6E22               	movwf	(___lodiv@divisor+6)^0,c
  7931   00133A  0E00               	movlw	0
  7932   00133C  6E23               	movwf	(___lodiv@divisor+7)^0,c
  7933   00133E  EC02  F00E         	call	___lodiv	;wreg free
  7934   001342  C014  F076         	movff	?___lodiv,utoa@n
  7935   001346  C015  F077         	movff	?___lodiv+1,utoa@n+1
  7936   00134A  C016  F078         	movff	?___lodiv+2,utoa@n+2
  7937   00134E  C017  F079         	movff	?___lodiv+3,utoa@n+3
  7938   001352  C018  F07A         	movff	?___lodiv+4,utoa@n+4
  7939   001356  C019  F07B         	movff	?___lodiv+5,utoa@n+5
  7940   00135A  C01A  F07C         	movff	?___lodiv+6,utoa@n+6
  7941   00135E  C01B  F07D         	movff	?___lodiv+7,utoa@n+7
  7942   001362                     l4352:
  7943                           
  7944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  7945   001362  0100               	movlb	0	; () banked
  7946   001364  517E               	movf	utoa@i& (0+255),w,b
  7947   001366  117F               	iorwf	(utoa@i+1)& (0+255),w,b
  7948   001368  B4D8               	btfsc	status,2,c
  7949   00136A  EFB9  F009         	goto	u3361
  7950   00136E  EFBB  F009         	goto	u3360
  7951   001372                     u3361:
  7952   001372  EFEB  F009         	goto	l4362
  7953   001376                     u3360:
  7954   001376                     
  7955                           ; BSR set to: 0
  7956   001376  5176               	movf	utoa@n& (0+255),w,b
  7957   001378  1177               	iorwf	(utoa@n+1)& (0+255),w,b
  7958   00137A  1178               	iorwf	(utoa@n+2)& (0+255),w,b
  7959   00137C  1179               	iorwf	(utoa@n+3)& (0+255),w,b
  7960   00137E  117A               	iorwf	(utoa@n+4)& (0+255),w,b
  7961   001380  117B               	iorwf	(utoa@n+5)& (0+255),w,b
  7962   001382  117C               	iorwf	(utoa@n+6)& (0+255),w,b
  7963   001384  117D               	iorwf	(utoa@n+7)& (0+255),w,b
  7964   001386  A4D8               	btfss	status,2,c
  7965   001388  EFC8  F009         	goto	u3371
  7966   00138C  EFCA  F009         	goto	u3370
  7967   001390                     u3371:
  7968   001390  EF3A  F009         	goto	l4342
  7969   001394                     u3370:
  7970   001394                     
  7971                           ; BSR set to: 0
  7972   001394  BF73               	btfsc	(utoa@p+1)& (0+255),7,b
  7973   001396  EFD7  F009         	goto	u3380
  7974   00139A  5173               	movf	(utoa@p+1)& (0+255),w,b
  7975   00139C  E106               	bnz	u3381
  7976   00139E  0572               	decf	utoa@p& (0+255),w,b
  7977   0013A0  B0D8               	btfsc	status,0,c
  7978   0013A2  EFD5  F009         	goto	u3381
  7979   0013A6  EFD7  F009         	goto	u3380
  7980   0013AA                     u3381:
  7981   0013AA  EF3A  F009         	goto	l4342
  7982   0013AE                     u3380:
  7983   0013AE                     
  7984                           ; BSR set to: 0
  7985   0013AE  BF75               	btfsc	(utoa@w+1)& (0+255),7,b
  7986   0013B0  EFE2  F009         	goto	u3391
  7987   0013B4  5175               	movf	(utoa@w+1)& (0+255),w,b
  7988   0013B6  E108               	bnz	u3390
  7989   0013B8  0574               	decf	utoa@w& (0+255),w,b
  7990   0013BA  A0D8               	btfss	status,0,c
  7991   0013BC  EFE2  F009         	goto	u3391
  7992   0013C0  EFE4  F009         	goto	u3390
  7993   0013C4                     u3391:
  7994   0013C4  EFEB  F009         	goto	l4362
  7995   0013C8                     u3390:
  7996   0013C8                     
  7997                           ; BSR set to: 0
  7998   0013C8  B247               	btfsc	_flags^0,1,c
  7999   0013CA  EFE9  F009         	goto	u3401
  8000   0013CE  EFEB  F009         	goto	u3400
  8001   0013D2                     u3401:
  8002   0013D2  EF3A  F009         	goto	l4342
  8003   0013D6                     u3400:
  8004   0013D6                     l4362:
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8008   0013D6  C060  F026         	movff	utoa@fp,pad@fp
  8009   0013DA  C061  F027         	movff	utoa@fp+1,pad@fp+1
  8010   0013DE  0EBF               	movlw	low _dbuf
  8011   0013E0  257E               	addwf	utoa@i& (0+255),w,b
  8012   0013E2  6E28               	movwf	pad@buf^0,c
  8013   0013E4  0E00               	movlw	high _dbuf
  8014   0013E6  217F               	addwfc	(utoa@i+1)& (0+255),w,b
  8015   0013E8  6E29               	movwf	(pad@buf+1)^0,c
  8016   0013EA  C074  F02A         	movff	utoa@w,pad@p
  8017   0013EE  C075  F02B         	movff	utoa@w+1,pad@p+1
  8018   0013F2  EC0C  F010         	call	_pad	;wreg free
  8019   0013F6  0012               	return		;funcret
  8020   0013F8                     __end_of_utoa:
  8021                           	callstack 0
  8022                           
  8023 ;; *************** function _pad *****************
  8024 ;; Defined at:
  8025 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
  8028 ;;		 -> NULL(0), 
  8029 ;;  buf             2   39[COMRAM] PTR unsigned char 
  8030 ;;		 -> dbuf(32), 
  8031 ;;  p               2   41[COMRAM] int 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  w               2   46[COMRAM] int 
  8034 ;;  i               2   44[COMRAM] int 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  1    wreg      void 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8044 ;;      Params:         6       0       0       0       0       0       0
  8045 ;;      Locals:         4       0       0       0       0       0       0
  8046 ;;      Temps:          1       0       0       0       0       0       0
  8047 ;;      Totals:        11       0       0       0       0       0       0
  8048 ;;Total ram usage:       11 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; Hardware stack levels required when called: 8
  8051 ;; This function calls:
  8052 ;;		_fputc
  8053 ;;		_fputs
  8054 ;; This function is called by:
  8055 ;;		_utoa
  8056 ;;		_xtoa
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text28
  8061   002018                     __ptext28:
  8062                           	callstack 0
  8063   002018                     _pad:
  8064                           	callstack 18
  8065   002018                     
  8066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  8067   002018  A047               	btfss	_flags^0,0,c
  8068   00201A  EF11  F010         	goto	u3091
  8069   00201E  EF13  F010         	goto	u3090
  8070   002022                     u3091:
  8071   002022  EF1D  F010         	goto	l4224
  8072   002026                     u3090:
  8073   002026                     
  8074                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  8075   002026  C028  F01F         	movff	pad@buf,fputs@s
  8076   00202A  C029  F020         	movff	pad@buf+1,fputs@s+1
  8077   00202E  C026  F021         	movff	pad@fp,fputs@fp
  8078   002032  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8079   002036  EC2A  F012         	call	_fputs	;wreg free
  8080   00203A                     l4224:
  8081                           
  8082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  8083   00203A  BE2B               	btfsc	(pad@p+1)^0,7,c
  8084   00203C  EF22  F010         	goto	u3101
  8085   002040  EF24  F010         	goto	u3100
  8086   002044                     u3101:
  8087   002044  EF2A  F010         	goto	l4228
  8088   002048                     u3100:
  8089   002048  C02A  F02F         	movff	pad@p,pad@w
  8090   00204C  C02B  F030         	movff	pad@p+1,pad@w+1
  8091   002050  EF2E  F010         	goto	l1320
  8092   002054                     l4228:
  8093   002054  0E00               	movlw	0
  8094   002056  6E30               	movwf	(pad@w+1)^0,c
  8095   002058  0E00               	movlw	0
  8096   00205A  6E2F               	movwf	pad@w^0,c
  8097   00205C                     l1320:
  8098                           
  8099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8100   00205C  0E00               	movlw	0
  8101   00205E  6E2E               	movwf	(pad@i+1)^0,c
  8102   002060  0E00               	movlw	0
  8103   002062  6E2D               	movwf	pad@i^0,c
  8104                           
  8105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8106   002064  EF40  F010         	goto	l4234
  8107   002068                     l4230:
  8108                           
  8109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8110   002068  0E00               	movlw	0
  8111   00206A  6E17               	movwf	(fputc@c+1)^0,c
  8112   00206C  0E20               	movlw	32
  8113   00206E  6E16               	movwf	fputc@c^0,c
  8114   002070  C026  F018         	movff	pad@fp,fputc@fp
  8115   002074  C027  F019         	movff	pad@fp+1,fputc@fp+1
  8116   002078  ECAE  F010         	call	_fputc	;wreg free
  8117   00207C                     
  8118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8119   00207C  4A2D               	infsnz	pad@i^0,f,c
  8120   00207E  2A2E               	incf	(pad@i+1)^0,f,c
  8121   002080                     l4234:
  8122                           
  8123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8124   002080  502F               	movf	pad@w^0,w,c
  8125   002082  5C2D               	subwf	pad@i^0,w,c
  8126   002084  502E               	movf	(pad@i+1)^0,w,c
  8127   002086  0A80               	xorlw	128
  8128   002088  6E2C               	movwf	??_pad^0,c
  8129   00208A  5030               	movf	(pad@w+1)^0,w,c
  8130   00208C  0A80               	xorlw	128
  8131   00208E  582C               	subwfb	??_pad^0,w,c
  8132   002090  A0D8               	btfss	status,0,c
  8133   002092  EF4D  F010         	goto	u3111
  8134   002096  EF4F  F010         	goto	u3110
  8135   00209A                     u3111:
  8136   00209A  EF34  F010         	goto	l4230
  8137   00209E                     u3110:
  8138   00209E                     
  8139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  8140   00209E  B047               	btfsc	_flags^0,0,c
  8141   0020A0  EF54  F010         	goto	u3121
  8142   0020A4  EF56  F010         	goto	u3120
  8143   0020A8                     u3121:
  8144   0020A8  EF60  F010         	goto	l1325
  8145   0020AC                     u3120:
  8146   0020AC                     
  8147                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8148   0020AC  C028  F01F         	movff	pad@buf,fputs@s
  8149   0020B0  C029  F020         	movff	pad@buf+1,fputs@s+1
  8150   0020B4  C026  F021         	movff	pad@fp,fputs@fp
  8151   0020B8  C027  F022         	movff	pad@fp+1,fputs@fp+1
  8152   0020BC  EC2A  F012         	call	_fputs	;wreg free
  8153   0020C0                     l1325:
  8154   0020C0  0012               	return		;funcret
  8155   0020C2                     __end_of_pad:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function _fputs *****************
  8159 ;; Defined at:
  8160 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  s               2   30[COMRAM] PTR const unsigned char 
  8163 ;;		 -> dbuf(32), 
  8164 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  8165 ;;		 -> NULL(0), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  i               2   35[COMRAM] int 
  8168 ;;  c               1   34[COMRAM] unsigned char 
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  2   30[COMRAM] int 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8178 ;;      Params:         4       0       0       0       0       0       0
  8179 ;;      Locals:         3       0       0       0       0       0       0
  8180 ;;      Temps:          0       0       0       0       0       0       0
  8181 ;;      Totals:         7       0       0       0       0       0       0
  8182 ;;Total ram usage:        7 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; Hardware stack levels required when called: 7
  8185 ;; This function calls:
  8186 ;;		_fputc
  8187 ;; This function is called by:
  8188 ;;		_pad
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text29
  8193   002454                     __ptext29:
  8194                           	callstack 0
  8195   002454                     _fputs:
  8196                           	callstack 18
  8197   002454  0E00               	movlw	0
  8198   002456  6E25               	movwf	(fputs@i+1)^0,c
  8199   002458  0E00               	movlw	0
  8200   00245A  6E24               	movwf	fputs@i^0,c
  8201   00245C  EF3B  F012         	goto	l4174
  8202   002460                     l4170:
  8203   002460  C023  F016         	movff	fputs@c,fputc@c
  8204   002464  6A17               	clrf	(fputc@c+1)^0,c
  8205   002466  C021  F018         	movff	fputs@fp,fputc@fp
  8206   00246A  C022  F019         	movff	fputs@fp+1,fputc@fp+1
  8207   00246E  ECAE  F010         	call	_fputc	;wreg free
  8208   002472  4A24               	infsnz	fputs@i^0,f,c
  8209   002474  2A25               	incf	(fputs@i+1)^0,f,c
  8210   002476                     l4174:
  8211   002476  5024               	movf	fputs@i^0,w,c
  8212   002478  241F               	addwf	fputs@s^0,w,c
  8213   00247A  6ED9               	movwf	fsr2l,c
  8214   00247C  5025               	movf	(fputs@i+1)^0,w,c
  8215   00247E  2020               	addwfc	(fputs@s+1)^0,w,c
  8216   002480  6EDA               	movwf	fsr2h,c
  8217   002482  50DF               	movf	indf2,w,c
  8218   002484  6E23               	movwf	fputs@c^0,c
  8219   002486  5023               	movf	fputs@c^0,w,c
  8220   002488  A4D8               	btfss	status,2,c
  8221   00248A  EF49  F012         	goto	u3011
  8222   00248E  EF4B  F012         	goto	u3010
  8223   002492                     u3011:
  8224   002492  EF30  F012         	goto	l4170
  8225   002496                     u3010:
  8226   002496  0012               	return		;funcret
  8227   002498                     __end_of_fputs:
  8228                           	callstack 0
  8229                           
  8230 ;; *************** function ___lomod *****************
  8231 ;; Defined at:
  8232 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  dividend        8   19[COMRAM] unsigned long long 
  8235 ;;  divisor         8   27[COMRAM] unsigned long long 
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;  counter         1   35[COMRAM] unsigned char 
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  8   19[COMRAM] unsigned long long 
  8240 ;; Registers used:
  8241 ;;		wreg, status,2, status,0
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8247 ;;      Params:        16       0       0       0       0       0       0
  8248 ;;      Locals:         1       0       0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0
  8250 ;;      Totals:        17       0       0       0       0       0       0
  8251 ;;Total ram usage:       17 bytes
  8252 ;; Hardware stack levels used: 1
  8253 ;; Hardware stack levels required when called: 4
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_utoa
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           	psect	text30
  8262   001DD2                     __ptext30:
  8263                           	callstack 0
  8264   001DD2                     ___lomod:
  8265                           	callstack 22
  8266   001DD2  501C               	movf	___lomod@divisor^0,w,c
  8267   001DD4  101D               	iorwf	(___lomod@divisor+1)^0,w,c
  8268   001DD6  101E               	iorwf	(___lomod@divisor+2)^0,w,c
  8269   001DD8  101F               	iorwf	(___lomod@divisor+3)^0,w,c
  8270   001DDA  1020               	iorwf	(___lomod@divisor+4)^0,w,c
  8271   001DDC  1021               	iorwf	(___lomod@divisor+5)^0,w,c
  8272   001DDE  1022               	iorwf	(___lomod@divisor+6)^0,w,c
  8273   001DE0  1023               	iorwf	(___lomod@divisor+7)^0,w,c
  8274   001DE2  B4D8               	btfsc	status,2,c
  8275   001DE4  EFF6  F00E         	goto	u3061
  8276   001DE8  EFF8  F00E         	goto	u3060
  8277   001DEC                     u3061:
  8278   001DEC  EF40  F00F         	goto	l1061
  8279   001DF0                     u3060:
  8280   001DF0  0E01               	movlw	1
  8281   001DF2  6E24               	movwf	___lomod@counter^0,c
  8282   001DF4  EF06  F00F         	goto	l4210
  8283   001DF8                     l4208:
  8284   001DF8  90D8               	bcf	status,0,c
  8285   001DFA  361C               	rlcf	___lomod@divisor^0,f,c
  8286   001DFC  361D               	rlcf	(___lomod@divisor+1)^0,f,c
  8287   001DFE  361E               	rlcf	(___lomod@divisor+2)^0,f,c
  8288   001E00  361F               	rlcf	(___lomod@divisor+3)^0,f,c
  8289   001E02  3620               	rlcf	(___lomod@divisor+4)^0,f,c
  8290   001E04  3621               	rlcf	(___lomod@divisor+5)^0,f,c
  8291   001E06  3622               	rlcf	(___lomod@divisor+6)^0,f,c
  8292   001E08  3623               	rlcf	(___lomod@divisor+7)^0,f,c
  8293   001E0A  2A24               	incf	___lomod@counter^0,f,c
  8294   001E0C                     l4210:
  8295   001E0C  AE23               	btfss	(___lomod@divisor+7)^0,7,c
  8296   001E0E  EF0B  F00F         	goto	u3071
  8297   001E12  EF0D  F00F         	goto	u3070
  8298   001E16                     u3071:
  8299   001E16  EFFC  F00E         	goto	l4208
  8300   001E1A                     u3070:
  8301   001E1A                     l4212:
  8302   001E1A  501C               	movf	___lomod@divisor^0,w,c
  8303   001E1C  5C14               	subwf	___lomod@dividend^0,w,c
  8304   001E1E  501D               	movf	(___lomod@divisor+1)^0,w,c
  8305   001E20  5815               	subwfb	(___lomod@dividend+1)^0,w,c
  8306   001E22  501E               	movf	(___lomod@divisor+2)^0,w,c
  8307   001E24  5816               	subwfb	(___lomod@dividend+2)^0,w,c
  8308   001E26  501F               	movf	(___lomod@divisor+3)^0,w,c
  8309   001E28  5817               	subwfb	(___lomod@dividend+3)^0,w,c
  8310   001E2A  5020               	movf	(___lomod@divisor+4)^0,w,c
  8311   001E2C  5818               	subwfb	(___lomod@dividend+4)^0,w,c
  8312   001E2E  5021               	movf	(___lomod@divisor+5)^0,w,c
  8313   001E30  5819               	subwfb	(___lomod@dividend+5)^0,w,c
  8314   001E32  5022               	movf	(___lomod@divisor+6)^0,w,c
  8315   001E34  581A               	subwfb	(___lomod@dividend+6)^0,w,c
  8316   001E36  5023               	movf	(___lomod@divisor+7)^0,w,c
  8317   001E38  581B               	subwfb	(___lomod@dividend+7)^0,w,c
  8318   001E3A  A0D8               	btfss	status,0,c
  8319   001E3C  EF22  F00F         	goto	u3081
  8320   001E40  EF24  F00F         	goto	u3080
  8321   001E44                     u3081:
  8322   001E44  EF34  F00F         	goto	l4216
  8323   001E48                     u3080:
  8324   001E48  501C               	movf	___lomod@divisor^0,w,c
  8325   001E4A  5E14               	subwf	___lomod@dividend^0,f,c
  8326   001E4C  501D               	movf	(___lomod@divisor+1)^0,w,c
  8327   001E4E  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
  8328   001E50  501E               	movf	(___lomod@divisor+2)^0,w,c
  8329   001E52  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
  8330   001E54  501F               	movf	(___lomod@divisor+3)^0,w,c
  8331   001E56  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
  8332   001E58  5020               	movf	(___lomod@divisor+4)^0,w,c
  8333   001E5A  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
  8334   001E5C  5021               	movf	(___lomod@divisor+5)^0,w,c
  8335   001E5E  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
  8336   001E60  5022               	movf	(___lomod@divisor+6)^0,w,c
  8337   001E62  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
  8338   001E64  5023               	movf	(___lomod@divisor+7)^0,w,c
  8339   001E66  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
  8340   001E68                     l4216:
  8341   001E68  90D8               	bcf	status,0,c
  8342   001E6A  3223               	rrcf	(___lomod@divisor+7)^0,f,c
  8343   001E6C  3222               	rrcf	(___lomod@divisor+6)^0,f,c
  8344   001E6E  3221               	rrcf	(___lomod@divisor+5)^0,f,c
  8345   001E70  3220               	rrcf	(___lomod@divisor+4)^0,f,c
  8346   001E72  321F               	rrcf	(___lomod@divisor+3)^0,f,c
  8347   001E74  321E               	rrcf	(___lomod@divisor+2)^0,f,c
  8348   001E76  321D               	rrcf	(___lomod@divisor+1)^0,f,c
  8349   001E78  321C               	rrcf	___lomod@divisor^0,f,c
  8350   001E7A  2E24               	decfsz	___lomod@counter^0,f,c
  8351   001E7C  EF0D  F00F         	goto	l4212
  8352   001E80                     l1061:
  8353   001E80  C014  F014         	movff	___lomod@dividend,?___lomod
  8354   001E84  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
  8355   001E88  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
  8356   001E8C  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
  8357   001E90  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
  8358   001E94  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
  8359   001E98  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
  8360   001E9C  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
  8361   001EA0  0012               	return		;funcret
  8362   001EA2                     __end_of___lomod:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function ___lodiv *****************
  8366 ;; Defined at:
  8367 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  dividend        8   19[COMRAM] unsigned long long 
  8370 ;;  divisor         8   27[COMRAM] unsigned long long 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  quotient        8   35[COMRAM] unsigned long long 
  8373 ;;  counter         1   43[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  8   19[COMRAM] unsigned long long 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8383 ;;      Params:        16       0       0       0       0       0       0
  8384 ;;      Locals:         9       0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0
  8386 ;;      Totals:        25       0       0       0       0       0       0
  8387 ;;Total ram usage:       25 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 4
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_utoa
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text31
  8398   001C04                     __ptext31:
  8399                           	callstack 0
  8400   001C04                     ___lodiv:
  8401                           	callstack 22
  8402   001C04  EE20  F024         	lfsr	2,___lodiv@quotient
  8403   001C08  0E07               	movlw	7
  8404   001C0A                     u3021:
  8405   001C0A  6ADE               	clrf	postinc2,c
  8406   001C0C  06E8               	decf	wreg,f,c
  8407   001C0E  E2FD               	bc	u3021
  8408   001C10  501C               	movf	___lodiv@divisor^0,w,c
  8409   001C12  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
  8410   001C14  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
  8411   001C16  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
  8412   001C18  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
  8413   001C1A  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
  8414   001C1C  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
  8415   001C1E  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
  8416   001C20  B4D8               	btfsc	status,2,c
  8417   001C22  EF15  F00E         	goto	u3031
  8418   001C26  EF17  F00E         	goto	u3030
  8419   001C2A                     u3031:
  8420   001C2A  EF69  F00E         	goto	l1051
  8421   001C2E                     u3030:
  8422   001C2E  0E01               	movlw	1
  8423   001C30  6E2C               	movwf	___lodiv@counter^0,c
  8424   001C32  EF25  F00E         	goto	l4190
  8425   001C36                     l4188:
  8426   001C36  90D8               	bcf	status,0,c
  8427   001C38  361C               	rlcf	___lodiv@divisor^0,f,c
  8428   001C3A  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
  8429   001C3C  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
  8430   001C3E  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
  8431   001C40  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
  8432   001C42  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
  8433   001C44  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
  8434   001C46  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
  8435   001C48  2A2C               	incf	___lodiv@counter^0,f,c
  8436   001C4A                     l4190:
  8437   001C4A  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
  8438   001C4C  EF2A  F00E         	goto	u3041
  8439   001C50  EF2C  F00E         	goto	u3040
  8440   001C54                     u3041:
  8441   001C54  EF1B  F00E         	goto	l4188
  8442   001C58                     u3040:
  8443   001C58                     l4192:
  8444   001C58  90D8               	bcf	status,0,c
  8445   001C5A  3624               	rlcf	___lodiv@quotient^0,f,c
  8446   001C5C  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
  8447   001C5E  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
  8448   001C60  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
  8449   001C62  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
  8450   001C64  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
  8451   001C66  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
  8452   001C68  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
  8453   001C6A  501C               	movf	___lodiv@divisor^0,w,c
  8454   001C6C  5C14               	subwf	___lodiv@dividend^0,w,c
  8455   001C6E  501D               	movf	(___lodiv@divisor+1)^0,w,c
  8456   001C70  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
  8457   001C72  501E               	movf	(___lodiv@divisor+2)^0,w,c
  8458   001C74  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
  8459   001C76  501F               	movf	(___lodiv@divisor+3)^0,w,c
  8460   001C78  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
  8461   001C7A  5020               	movf	(___lodiv@divisor+4)^0,w,c
  8462   001C7C  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
  8463   001C7E  5021               	movf	(___lodiv@divisor+5)^0,w,c
  8464   001C80  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
  8465   001C82  5022               	movf	(___lodiv@divisor+6)^0,w,c
  8466   001C84  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
  8467   001C86  5023               	movf	(___lodiv@divisor+7)^0,w,c
  8468   001C88  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
  8469   001C8A  A0D8               	btfss	status,0,c
  8470   001C8C  EF4A  F00E         	goto	u3051
  8471   001C90  EF4C  F00E         	goto	u3050
  8472   001C94                     u3051:
  8473   001C94  EF5D  F00E         	goto	l4200
  8474   001C98                     u3050:
  8475   001C98  501C               	movf	___lodiv@divisor^0,w,c
  8476   001C9A  5E14               	subwf	___lodiv@dividend^0,f,c
  8477   001C9C  501D               	movf	(___lodiv@divisor+1)^0,w,c
  8478   001C9E  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
  8479   001CA0  501E               	movf	(___lodiv@divisor+2)^0,w,c
  8480   001CA2  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
  8481   001CA4  501F               	movf	(___lodiv@divisor+3)^0,w,c
  8482   001CA6  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
  8483   001CA8  5020               	movf	(___lodiv@divisor+4)^0,w,c
  8484   001CAA  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
  8485   001CAC  5021               	movf	(___lodiv@divisor+5)^0,w,c
  8486   001CAE  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
  8487   001CB0  5022               	movf	(___lodiv@divisor+6)^0,w,c
  8488   001CB2  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
  8489   001CB4  5023               	movf	(___lodiv@divisor+7)^0,w,c
  8490   001CB6  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
  8491   001CB8  8024               	bsf	___lodiv@quotient^0,0,c
  8492   001CBA                     l4200:
  8493   001CBA  90D8               	bcf	status,0,c
  8494   001CBC  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
  8495   001CBE  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
  8496   001CC0  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
  8497   001CC2  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
  8498   001CC4  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
  8499   001CC6  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
  8500   001CC8  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
  8501   001CCA  321C               	rrcf	___lodiv@divisor^0,f,c
  8502   001CCC  2E2C               	decfsz	___lodiv@counter^0,f,c
  8503   001CCE  EF2C  F00E         	goto	l4192
  8504   001CD2                     l1051:
  8505   001CD2  C024  F014         	movff	___lodiv@quotient,?___lodiv
  8506   001CD6  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
  8507   001CDA  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
  8508   001CDE  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
  8509   001CE2  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
  8510   001CE6  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
  8511   001CEA  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
  8512   001CEE  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
  8513   001CF2  0012               	return		;funcret
  8514   001CF4                     __end_of___lodiv:
  8515                           	callstack 0
  8516                           
  8517 ;; *************** function _strncmp *****************
  8518 ;; Defined at:
  8519 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  _l              2   19[COMRAM] PTR const unsigned char 
  8522 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  8523 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  8524 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  8525 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  8526 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  8527 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  8528 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  8529 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  8530 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  8531 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  8532 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  8533 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  8534 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  8535 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  8536 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  8537 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  8538 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  8539 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  8540 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  8541 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  8542 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  8543 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  8544 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  8545 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  8546 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  8547 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  8548 ;;  _r              2   21[COMRAM] PTR const unsigned char 
  8549 ;;		 -> STR_107(4), 
  8550 ;;  n               2   23[COMRAM] unsigned int 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  r               2   28[COMRAM] PTR const unsigned char 
  8553 ;;		 -> STR_107(4), 
  8554 ;;  l               2   26[COMRAM] PTR const unsigned char 
  8555 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  8556 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  8557 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  8558 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  8559 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  8560 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  8561 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  8562 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  8563 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  8564 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  8565 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  8566 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  8567 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  8568 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  8569 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  8570 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  8571 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  8572 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  8573 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  8574 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  8575 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  8576 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  8577 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  8578 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  8579 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  8580 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  2   19[COMRAM] int 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8590 ;;      Params:         6       0       0       0       0       0       0
  8591 ;;      Locals:         4       0       0       0       0       0       0
  8592 ;;      Temps:          1       0       0       0       0       0       0
  8593 ;;      Totals:        11       0       0       0       0       0       0
  8594 ;;Total ram usage:       11 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; Hardware stack levels required when called: 4
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_vfpfcnvrt
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text32
  8605   001CF4                     __ptext32:
  8606                           	callstack 0
  8607   001CF4                     _strncmp:
  8608                           	callstack 23
  8609   001CF4  C014  F01B         	movff	strncmp@_l,strncmp@l
  8610   001CF8  C015  F01C         	movff	strncmp@_l+1,strncmp@l+1
  8611   001CFC  C016  F01D         	movff	strncmp@_r,strncmp@r
  8612   001D00  C017  F01E         	movff	strncmp@_r+1,strncmp@r+1
  8613   001D04  0618               	decf	strncmp@n^0,f,c
  8614   001D06  A0D8               	btfss	status,0,c
  8615   001D08  0619               	decf	(strncmp@n+1)^0,f,c
  8616   001D0A  2818               	incf	strncmp@n^0,w,c
  8617   001D0C  E106               	bnz	u3541
  8618   001D0E  2819               	incf	(strncmp@n+1)^0,w,c
  8619   001D10  A4D8               	btfss	status,2,c
  8620   001D12  EF8D  F00E         	goto	u3541
  8621   001D16  EF8F  F00E         	goto	u3540
  8622   001D1A                     u3541:
  8623   001D1A  EF9C  F00E         	goto	l4452
  8624   001D1E                     u3540:
  8625   001D1E  0E00               	movlw	0
  8626   001D20  6E15               	movwf	(?_strncmp+1)^0,c
  8627   001D22  0E00               	movlw	0
  8628   001D24  6E14               	movwf	?_strncmp^0,c
  8629   001D26  EFE8  F00E         	goto	l1507
  8630   001D2A                     l4450:
  8631   001D2A  4A1B               	infsnz	strncmp@l^0,f,c
  8632   001D2C  2A1C               	incf	(strncmp@l+1)^0,f,c
  8633   001D2E  4A1D               	infsnz	strncmp@r^0,f,c
  8634   001D30  2A1E               	incf	(strncmp@r+1)^0,f,c
  8635   001D32  0618               	decf	strncmp@n^0,f,c
  8636   001D34  A0D8               	btfss	status,0,c
  8637   001D36  0619               	decf	(strncmp@n+1)^0,f,c
  8638   001D38                     l4452:
  8639   001D38  C01B  FFF6         	movff	strncmp@l,tblptrl
  8640   001D3C  C01C  FFF7         	movff	strncmp@l+1,tblptrh
  8641   001D40                     	if	0	;tblptru may be non-zero
  8642   001D40                     	endif
  8643   001D40                     	if	0	;tblptru may be non-zero
  8644   001D40                     	endif
  8645   001D40  0008               	tblrd		*
  8646   001D42  50F5               	movf	tablat,w,c
  8647   001D44  0900               	iorlw	0
  8648   001D46  B4D8               	btfsc	status,2,c
  8649   001D48  EFA8  F00E         	goto	u3551
  8650   001D4C  EFAA  F00E         	goto	u3550
  8651   001D50                     u3551:
  8652   001D50  EFD6  F00E         	goto	l4460
  8653   001D54                     u3550:
  8654   001D54  C01D  FFF6         	movff	strncmp@r,tblptrl
  8655   001D58  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  8656   001D5C                     	if	0	;tblptru may be non-zero
  8657   001D5C                     	endif
  8658   001D5C                     	if	0	;tblptru may be non-zero
  8659   001D5C                     	endif
  8660   001D5C  0008               	tblrd		*
  8661   001D5E  50F5               	movf	tablat,w,c
  8662   001D60  0900               	iorlw	0
  8663   001D62  B4D8               	btfsc	status,2,c
  8664   001D64  EFB6  F00E         	goto	u3561
  8665   001D68  EFB8  F00E         	goto	u3560
  8666   001D6C                     u3561:
  8667   001D6C  EFD6  F00E         	goto	l4460
  8668   001D70                     u3560:
  8669   001D70  5018               	movf	strncmp@n^0,w,c
  8670   001D72  1019               	iorwf	(strncmp@n+1)^0,w,c
  8671   001D74  B4D8               	btfsc	status,2,c
  8672   001D76  EFBF  F00E         	goto	u3571
  8673   001D7A  EFC1  F00E         	goto	u3570
  8674   001D7E                     u3571:
  8675   001D7E  EFD6  F00E         	goto	l4460
  8676   001D82                     u3570:
  8677   001D82  C01B  FFF6         	movff	strncmp@l,tblptrl
  8678   001D86  C01C  FFF7         	movff	strncmp@l+1,tblptrh
  8679   001D8A                     	if	0	;tblptru may be non-zero
  8680   001D8A                     	endif
  8681   001D8A                     	if	0	;tblptru may be non-zero
  8682   001D8A                     	endif
  8683   001D8A  0008               	tblrd		*
  8684   001D8C  CFF5 F01A          	movff	tablat,??_strncmp
  8685   001D90  C01D  FFF6         	movff	strncmp@r,tblptrl
  8686   001D94  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  8687   001D98                     	if	0	;tblptru may be non-zero
  8688   001D98                     	endif
  8689   001D98                     	if	0	;tblptru may be non-zero
  8690   001D98                     	endif
  8691   001D98  0008               	tblrd		*
  8692   001D9A  50F5               	movf	tablat,w,c
  8693   001D9C  181A               	xorwf	??_strncmp^0,w,c
  8694   001D9E  B4D8               	btfsc	status,2,c
  8695   001DA0  EFD4  F00E         	goto	u3581
  8696   001DA4  EFD6  F00E         	goto	u3580
  8697   001DA8                     u3581:
  8698   001DA8  EF95  F00E         	goto	l4450
  8699   001DAC                     u3580:
  8700   001DAC                     l4460:
  8701   001DAC  C01B  FFF6         	movff	strncmp@l,tblptrl
  8702   001DB0  C01C  FFF7         	movff	strncmp@l+1,tblptrh
  8703   001DB4                     	if	0	;tblptru may be non-zero
  8704   001DB4                     	endif
  8705   001DB4                     	if	0	;tblptru may be non-zero
  8706   001DB4                     	endif
  8707   001DB4  0008               	tblrd		*
  8708   001DB6  CFF5 F01A          	movff	tablat,??_strncmp
  8709   001DBA  C01D  FFF6         	movff	strncmp@r,tblptrl
  8710   001DBE  C01E  FFF7         	movff	strncmp@r+1,tblptrh
  8711   001DC2                     	if	0	;tblptru may be non-zero
  8712   001DC2                     	endif
  8713   001DC2                     	if	0	;tblptru may be non-zero
  8714   001DC2                     	endif
  8715   001DC2  0008               	tblrd		*
  8716   001DC4  50F5               	movf	tablat,w,c
  8717   001DC6  5C1A               	subwf	??_strncmp^0,w,c
  8718   001DC8  6E14               	movwf	?_strncmp^0,c
  8719   001DCA  6A15               	clrf	(?_strncmp+1)^0,c
  8720   001DCC  A0D8               	btfss	status,0,c
  8721   001DCE  0615               	decf	(?_strncmp+1)^0,f,c
  8722   001DD0                     l1507:
  8723   001DD0  0012               	return		;funcret
  8724   001DD2                     __end_of_strncmp:
  8725                           	callstack 0
  8726                           
  8727 ;; *************** function _stoa *****************
  8728 ;; Defined at:
  8729 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  8732 ;;		 -> NULL(0), 
  8733 ;;  s               2   32[COMRAM] PTR unsigned char 
  8734 ;;		 -> ?_printf(2), STR_80(2), doubleBuffer(1024), 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;  nuls            7   35[COMRAM] unsigned char [7]
  8737 ;;  l               2   50[COMRAM] int 
  8738 ;;  p               2   48[COMRAM] int 
  8739 ;;  cp              2   46[COMRAM] PTR unsigned char 
  8740 ;;		 -> stoa@nuls(7), ?_printf(2), STR_80(2), doubleBuffer(1024), 
  8741 ;;  w               2   44[COMRAM] int 
  8742 ;;  i               2   42[COMRAM] int 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8752 ;;      Params:         4       0       0       0       0       0       0
  8753 ;;      Locals:        17       0       0       0       0       0       0
  8754 ;;      Temps:          1       0       0       0       0       0       0
  8755 ;;      Totals:        22       0       0       0       0       0       0
  8756 ;;Total ram usage:       22 bytes
  8757 ;; Hardware stack levels used: 1
  8758 ;; Hardware stack levels required when called: 7
  8759 ;; This function calls:
  8760 ;;		_fputc
  8761 ;;		_strlen
  8762 ;; This function is called by:
  8763 ;;		_vfpfcnvrt
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text33
  8768   0017B2                     __ptext33:
  8769                           	callstack 0
  8770   0017B2                     _stoa:
  8771                           	callstack 20
  8772   0017B2                     
  8773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  8774   0017B2  EE20  F0DF         	lfsr	2,stoa@F1149
  8775   0017B6  EE10  F024         	lfsr	1,stoa@nuls
  8776   0017BA  0E06               	movlw	6
  8777   0017BC                     u3241:
  8778   0017BC  CFDB FFE3          	movff	plusw2,plusw1
  8779   0017C0  06E8               	decf	wreg,f,c
  8780   0017C2  E2FC               	bc	u3241
  8781   0017C4                     
  8782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  8783   0017C4  C021  F02F         	movff	stoa@s,stoa@cp
  8784   0017C8  C022  F030         	movff	stoa@s+1,stoa@cp+1
  8785   0017CC                     
  8786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  8787   0017CC  502F               	movf	stoa@cp^0,w,c
  8788   0017CE  1030               	iorwf	(stoa@cp+1)^0,w,c
  8789   0017D0  A4D8               	btfss	status,2,c
  8790   0017D2  EFED  F00B         	goto	u3251
  8791   0017D6  EFEF  F00B         	goto	u3250
  8792   0017DA                     u3251:
  8793   0017DA  EFF3  F00B         	goto	l4296
  8794   0017DE                     u3250:
  8795   0017DE                     
  8796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  8797   0017DE  0E24               	movlw	low stoa@nuls
  8798   0017E0  6E2F               	movwf	stoa@cp^0,c
  8799   0017E2  0E00               	movlw	high stoa@nuls
  8800   0017E4  6E30               	movwf	(stoa@cp+1)^0,c
  8801   0017E6                     l4296:
  8802                           
  8803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  8804   0017E6  C02F  F014         	movff	stoa@cp,strlen@s
  8805   0017EA  C030  F015         	movff	stoa@cp+1,strlen@s+1
  8806   0017EE  ECE0  F011         	call	_strlen	;wreg free
  8807   0017F2  C014  F033         	movff	?_strlen,stoa@l
  8808   0017F6  C015  F034         	movff	?_strlen+1,stoa@l+1
  8809   0017FA                     
  8810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  8811   0017FA  C039  F031         	movff	_prec,stoa@p
  8812   0017FE  C03A  F032         	movff	_prec+1,stoa@p+1
  8813   001802                     
  8814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  8815   001802  BE32               	btfsc	(stoa@p+1)^0,7,c
  8816   001804  EF06  F00C         	goto	u3261
  8817   001808  EF08  F00C         	goto	u3260
  8818   00180C                     u3261:
  8819   00180C  EF1D  F00C         	goto	l1350
  8820   001810                     u3260:
  8821   001810  5033               	movf	stoa@l^0,w,c
  8822   001812  5C31               	subwf	stoa@p^0,w,c
  8823   001814  5032               	movf	(stoa@p+1)^0,w,c
  8824   001816  0A80               	xorlw	128
  8825   001818  6E23               	movwf	??_stoa^0,c
  8826   00181A  5034               	movf	(stoa@l+1)^0,w,c
  8827   00181C  0A80               	xorlw	128
  8828   00181E  5823               	subwfb	??_stoa^0,w,c
  8829   001820  A0D8               	btfss	status,0,c
  8830   001822  EF15  F00C         	goto	u3271
  8831   001826  EF17  F00C         	goto	u3270
  8832   00182A                     u3271:
  8833   00182A  EF19  F00C         	goto	l1348
  8834   00182E                     u3270:
  8835   00182E  EF1D  F00C         	goto	l1350
  8836   001832                     l1348:
  8837   001832  C031  F033         	movff	stoa@p,stoa@l
  8838   001836  C032  F034         	movff	stoa@p+1,stoa@l+1
  8839   00183A                     l1350:
  8840                           
  8841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  8842   00183A  C033  F031         	movff	stoa@l,stoa@p
  8843   00183E  C034  F032         	movff	stoa@l+1,stoa@p+1
  8844                           
  8845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  8846   001842  C037  F02D         	movff	_width,stoa@w
  8847   001846  C038  F02E         	movff	_width+1,stoa@w+1
  8848                           
  8849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 859:     if (!(fl
      +                          ags & (1 << 0))) {
  8850   00184A  B047               	btfsc	_flags^0,0,c
  8851   00184C  EF2A  F00C         	goto	u3281
  8852   001850  EF2C  F00C         	goto	u3280
  8853   001854                     u3281:
  8854   001854  EF49  F00C         	goto	l4312
  8855   001858                     u3280:
  8856   001858  EF3A  F00C         	goto	l4310
  8857   00185C                     l4306:
  8858                           
  8859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  8860   00185C  0E00               	movlw	0
  8861   00185E  6E17               	movwf	(fputc@c+1)^0,c
  8862   001860  0E20               	movlw	32
  8863   001862  6E16               	movwf	fputc@c^0,c
  8864   001864  C01F  F018         	movff	stoa@fp,fputc@fp
  8865   001868  C020  F019         	movff	stoa@fp+1,fputc@fp+1
  8866   00186C  ECAE  F010         	call	_fputc	;wreg free
  8867   001870                     
  8868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  8869   001870  4A33               	infsnz	stoa@l^0,f,c
  8870   001872  2A34               	incf	(stoa@l+1)^0,f,c
  8871   001874                     l4310:
  8872                           
  8873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  8874   001874  502D               	movf	stoa@w^0,w,c
  8875   001876  5C33               	subwf	stoa@l^0,w,c
  8876   001878  5034               	movf	(stoa@l+1)^0,w,c
  8877   00187A  0A80               	xorlw	128
  8878   00187C  6E23               	movwf	??_stoa^0,c
  8879   00187E  502E               	movf	(stoa@w+1)^0,w,c
  8880   001880  0A80               	xorlw	128
  8881   001882  5823               	subwfb	??_stoa^0,w,c
  8882   001884  A0D8               	btfss	status,0,c
  8883   001886  EF47  F00C         	goto	u3291
  8884   00188A  EF49  F00C         	goto	u3290
  8885   00188E                     u3291:
  8886   00188E  EF2E  F00C         	goto	l4306
  8887   001892                     u3290:
  8888   001892                     l4312:
  8889                           
  8890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  8891   001892  0E00               	movlw	0
  8892   001894  6E2C               	movwf	(stoa@i+1)^0,c
  8893   001896  0E00               	movlw	0
  8894   001898  6E2B               	movwf	stoa@i^0,c
  8895                           
  8896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  8897   00189A  EF6D  F00C         	goto	l4320
  8898   00189E                     l4314:
  8899                           
  8900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  8901   00189E  C02F  FFF6         	movff	stoa@cp,tblptrl
  8902   0018A2  C030  FFF7         	movff	stoa@cp+1,tblptrh
  8903   0018A6  6AF8               	clrf	tblptru,c
  8904   0018A8  0E05               	movlw	(high __ramtop+-1)
  8905   0018AA  64F7               	cpfsgt	tblptrh,c
  8906   0018AC  D003               	bra	u3307
  8907   0018AE  0008               	tblrd		*
  8908   0018B0  50F5               	movf	tablat,w,c
  8909   0018B2  D005               	bra	u3300
  8910   0018B4                     u3307:
  8911   0018B4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8912   0018B8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8913   0018BC  50E7               	movf	indf1,w,c
  8914   0018BE                     u3300:
  8915   0018BE  6E23               	movwf	??_stoa^0,c
  8916   0018C0  5023               	movf	??_stoa^0,w,c
  8917   0018C2  6E16               	movwf	fputc@c^0,c
  8918   0018C4  6A17               	clrf	(fputc@c+1)^0,c
  8919   0018C6  C01F  F018         	movff	stoa@fp,fputc@fp
  8920   0018CA  C020  F019         	movff	stoa@fp+1,fputc@fp+1
  8921   0018CE  ECAE  F010         	call	_fputc	;wreg free
  8922   0018D2                     
  8923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  8924   0018D2  4A2F               	infsnz	stoa@cp^0,f,c
  8925   0018D4  2A30               	incf	(stoa@cp+1)^0,f,c
  8926   0018D6                     
  8927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  8928   0018D6  4A2B               	infsnz	stoa@i^0,f,c
  8929   0018D8  2A2C               	incf	(stoa@i+1)^0,f,c
  8930   0018DA                     l4320:
  8931                           
  8932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  8933   0018DA  5031               	movf	stoa@p^0,w,c
  8934   0018DC  5C2B               	subwf	stoa@i^0,w,c
  8935   0018DE  502C               	movf	(stoa@i+1)^0,w,c
  8936   0018E0  0A80               	xorlw	128
  8937   0018E2  6E23               	movwf	??_stoa^0,c
  8938   0018E4  5032               	movf	(stoa@p+1)^0,w,c
  8939   0018E6  0A80               	xorlw	128
  8940   0018E8  5823               	subwfb	??_stoa^0,w,c
  8941   0018EA  A0D8               	btfss	status,0,c
  8942   0018EC  EF7A  F00C         	goto	u3311
  8943   0018F0  EF7C  F00C         	goto	u3310
  8944   0018F4                     u3311:
  8945   0018F4  EF4F  F00C         	goto	l4314
  8946   0018F8                     u3310:
  8947   0018F8                     
  8948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 879:     if (flag
      +                          s & (1 << 0)) {
  8949   0018F8  A047               	btfss	_flags^0,0,c
  8950   0018FA  EF81  F00C         	goto	u3321
  8951   0018FE  EF83  F00C         	goto	u3320
  8952   001902                     u3321:
  8953   001902  EFA0  F00C         	goto	l1364
  8954   001906                     u3320:
  8955   001906  EF91  F00C         	goto	l4328
  8956   00190A                     l4324:
  8957                           
  8958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 881:             
      +                          fputc(' ', fp);
  8959   00190A  0E00               	movlw	0
  8960   00190C  6E17               	movwf	(fputc@c+1)^0,c
  8961   00190E  0E20               	movlw	32
  8962   001910  6E16               	movwf	fputc@c^0,c
  8963   001912  C01F  F018         	movff	stoa@fp,fputc@fp
  8964   001916  C020  F019         	movff	stoa@fp+1,fputc@fp+1
  8965   00191A  ECAE  F010         	call	_fputc	;wreg free
  8966   00191E                     
  8967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 882:             
      +                          ++l;
  8968   00191E  4A33               	infsnz	stoa@l^0,f,c
  8969   001920  2A34               	incf	(stoa@l+1)^0,f,c
  8970   001922                     l4328:
  8971                           
  8972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 880:         whil
      +                          e (l < w) {
  8973   001922  502D               	movf	stoa@w^0,w,c
  8974   001924  5C33               	subwf	stoa@l^0,w,c
  8975   001926  5034               	movf	(stoa@l+1)^0,w,c
  8976   001928  0A80               	xorlw	128
  8977   00192A  6E23               	movwf	??_stoa^0,c
  8978   00192C  502E               	movf	(stoa@w+1)^0,w,c
  8979   00192E  0A80               	xorlw	128
  8980   001930  5823               	subwfb	??_stoa^0,w,c
  8981   001932  A0D8               	btfss	status,0,c
  8982   001934  EF9E  F00C         	goto	u3331
  8983   001938  EFA0  F00C         	goto	u3330
  8984   00193C                     u3331:
  8985   00193C  EF85  F00C         	goto	l4324
  8986   001940                     u3330:
  8987   001940                     l1364:
  8988   001940  0012               	return		;funcret
  8989   001942                     __end_of_stoa:
  8990                           	callstack 0
  8991                           
  8992 ;; *************** function _strlen *****************
  8993 ;; Defined at:
  8994 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;  s               2   19[COMRAM] PTR const unsigned char 
  8997 ;;		 -> stoa@nuls(7), ?_printf(2), STR_80(2), doubleBuffer(1024), 
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;  a               2   21[COMRAM] PTR const unsigned char 
  9000 ;;		 -> stoa@nuls(7), ?_printf(2), STR_80(2), doubleBuffer(1024), 
  9001 ;; Return value:  Size  Location     Type
  9002 ;;                  2   19[COMRAM] unsigned int 
  9003 ;; Registers used:
  9004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  9005 ;; Tracked objects:
  9006 ;;		On entry : 0/0
  9007 ;;		On exit  : 0/0
  9008 ;;		Unchanged: 0/0
  9009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9010 ;;      Params:         2       0       0       0       0       0       0
  9011 ;;      Locals:         2       0       0       0       0       0       0
  9012 ;;      Temps:          0       0       0       0       0       0       0
  9013 ;;      Totals:         4       0       0       0       0       0       0
  9014 ;;Total ram usage:        4 bytes
  9015 ;; Hardware stack levels used: 1
  9016 ;; Hardware stack levels required when called: 4
  9017 ;; This function calls:
  9018 ;;		Nothing
  9019 ;; This function is called by:
  9020 ;;		_stoa
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text34
  9025   0023C0                     __ptext34:
  9026                           	callstack 0
  9027   0023C0                     _strlen:
  9028                           	callstack 22
  9029   0023C0  C014  F016         	movff	strlen@s,strlen@a
  9030   0023C4  C015  F017         	movff	strlen@s+1,strlen@a+1
  9031   0023C8  EFE8  F011         	goto	l4242
  9032   0023CC                     l4240:
  9033   0023CC  4A14               	infsnz	strlen@s^0,f,c
  9034   0023CE  2A15               	incf	(strlen@s+1)^0,f,c
  9035   0023D0                     l4242:
  9036   0023D0  C014  FFF6         	movff	strlen@s,tblptrl
  9037   0023D4  C015  FFF7         	movff	strlen@s+1,tblptrh
  9038   0023D8  6AF8               	clrf	tblptru,c
  9039   0023DA  0E05               	movlw	(high __ramtop+-1)
  9040   0023DC  64F7               	cpfsgt	tblptrh,c
  9041   0023DE  D003               	bra	u3137
  9042   0023E0  0008               	tblrd		*
  9043   0023E2  50F5               	movf	tablat,w,c
  9044   0023E4  D005               	bra	u3130
  9045   0023E6                     u3137:
  9046   0023E6  CFF6 FFE1          	movff	tblptrl,fsr1l
  9047   0023EA  CFF7 FFE2          	movff	tblptrh,fsr1h
  9048   0023EE  50E7               	movf	indf1,w,c
  9049   0023F0                     u3130:
  9050   0023F0  0900               	iorlw	0
  9051   0023F2  A4D8               	btfss	status,2,c
  9052   0023F4  EFFE  F011         	goto	u3141
  9053   0023F8  EF00  F012         	goto	u3140
  9054   0023FC                     u3141:
  9055   0023FC  EFE6  F011         	goto	l4240
  9056   002400                     u3140:
  9057   002400  5016               	movf	strlen@a^0,w,c
  9058   002402  5C14               	subwf	strlen@s^0,w,c
  9059   002404  6E14               	movwf	?_strlen^0,c
  9060   002406  5017               	movf	(strlen@a+1)^0,w,c
  9061   002408  5815               	subwfb	(strlen@s+1)^0,w,c
  9062   00240A  6E15               	movwf	(?_strlen+1)^0,c
  9063   00240C  0012               	return		;funcret
  9064   00240E                     __end_of_strlen:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function _ctoa *****************
  9068 ;; Defined at:
  9069 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  9072 ;;		 -> NULL(0), 
  9073 ;;  c               1   32[COMRAM] unsigned char 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  w               2   36[COMRAM] int 
  9076 ;;  l               2   34[COMRAM] int 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9086 ;;      Params:         3       0       0       0       0       0       0
  9087 ;;      Locals:         4       0       0       0       0       0       0
  9088 ;;      Temps:          1       0       0       0       0       0       0
  9089 ;;      Totals:         8       0       0       0       0       0       0
  9090 ;;Total ram usage:        8 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 7
  9093 ;; This function calls:
  9094 ;;		_fputc
  9095 ;; This function is called by:
  9096 ;;		_vfpfcnvrt
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text35
  9101   001EA2                     __ptext35:
  9102                           	callstack 0
  9103   001EA2                     _ctoa:
  9104                           	callstack 20
  9105   001EA2                     
  9106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  9107   001EA2  5037               	movf	_width^0,w,c
  9108   001EA4  1038               	iorwf	(_width+1)^0,w,c
  9109   001EA6  A4D8               	btfss	status,2,c
  9110   001EA8  EF58  F00F         	goto	u3191
  9111   001EAC  EF5A  F00F         	goto	u3190
  9112   001EB0                     u3191:
  9113   001EB0  EF60  F00F         	goto	l4268
  9114   001EB4                     u3190:
  9115   001EB4  C037  F025         	movff	_width,ctoa@w
  9116   001EB8  C038  F026         	movff	_width+1,ctoa@w+1
  9117   001EBC  EF66  F00F         	goto	l4270
  9118   001EC0                     l4268:
  9119   001EC0  0EFF               	movlw	255
  9120   001EC2  2437               	addwf	_width^0,w,c
  9121   001EC4  6E25               	movwf	ctoa@w^0,c
  9122   001EC6  0EFF               	movlw	255
  9123   001EC8  2038               	addwfc	(_width+1)^0,w,c
  9124   001ECA  6E26               	movwf	(ctoa@w+1)^0,c
  9125   001ECC                     l4270:
  9126                           
  9127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  9128   001ECC  A047               	btfss	_flags^0,0,c
  9129   001ECE  EF6B  F00F         	goto	u3201
  9130   001ED2  EF6D  F00F         	goto	u3200
  9131   001ED6                     u3201:
  9132   001ED6  EF76  F00F         	goto	l4274
  9133   001EDA                     u3200:
  9134   001EDA                     
  9135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  9136   001EDA  C021  F016         	movff	ctoa@c,fputc@c
  9137   001EDE  6A17               	clrf	(fputc@c+1)^0,c
  9138   001EE0  C01F  F018         	movff	ctoa@fp,fputc@fp
  9139   001EE4  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  9140   001EE8  ECAE  F010         	call	_fputc	;wreg free
  9141   001EEC                     l4274:
  9142                           
  9143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  9144   001EEC  BE26               	btfsc	(ctoa@w+1)^0,7,c
  9145   001EEE  EF7B  F00F         	goto	u3211
  9146   001EF2  EF7D  F00F         	goto	u3210
  9147   001EF6                     u3211:
  9148   001EF6  EF7F  F00F         	goto	l4278
  9149   001EFA                     u3210:
  9150   001EFA  EF83  F00F         	goto	l1336
  9151   001EFE                     l4278:
  9152   001EFE  0E00               	movlw	0
  9153   001F00  6E26               	movwf	(ctoa@w+1)^0,c
  9154   001F02  0E00               	movlw	0
  9155   001F04  6E25               	movwf	ctoa@w^0,c
  9156   001F06                     l1336:
  9157                           
  9158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  9159   001F06  0E00               	movlw	0
  9160   001F08  6E24               	movwf	(ctoa@l+1)^0,c
  9161   001F0A  0E00               	movlw	0
  9162   001F0C  6E23               	movwf	ctoa@l^0,c
  9163                           
  9164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  9165   001F0E  EF95  F00F         	goto	l4284
  9166   001F12                     l4280:
  9167                           
  9168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  9169   001F12  0E00               	movlw	0
  9170   001F14  6E17               	movwf	(fputc@c+1)^0,c
  9171   001F16  0E20               	movlw	32
  9172   001F18  6E16               	movwf	fputc@c^0,c
  9173   001F1A  C01F  F018         	movff	ctoa@fp,fputc@fp
  9174   001F1E  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  9175   001F22  ECAE  F010         	call	_fputc	;wreg free
  9176   001F26                     
  9177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  9178   001F26  4A23               	infsnz	ctoa@l^0,f,c
  9179   001F28  2A24               	incf	(ctoa@l+1)^0,f,c
  9180   001F2A                     l4284:
  9181                           
  9182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  9183   001F2A  5025               	movf	ctoa@w^0,w,c
  9184   001F2C  5C23               	subwf	ctoa@l^0,w,c
  9185   001F2E  5024               	movf	(ctoa@l+1)^0,w,c
  9186   001F30  0A80               	xorlw	128
  9187   001F32  6E22               	movwf	??_ctoa^0,c
  9188   001F34  5026               	movf	(ctoa@w+1)^0,w,c
  9189   001F36  0A80               	xorlw	128
  9190   001F38  5822               	subwfb	??_ctoa^0,w,c
  9191   001F3A  A0D8               	btfss	status,0,c
  9192   001F3C  EFA2  F00F         	goto	u3221
  9193   001F40  EFA4  F00F         	goto	u3220
  9194   001F44                     u3221:
  9195   001F44  EF89  F00F         	goto	l4280
  9196   001F48                     u3220:
  9197   001F48                     
  9198                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  9199   001F48  B047               	btfsc	_flags^0,0,c
  9200   001F4A  EFA9  F00F         	goto	u3231
  9201   001F4E  EFAB  F00F         	goto	u3230
  9202   001F52                     u3231:
  9203   001F52  EFB4  F00F         	goto	l1341
  9204   001F56                     u3230:
  9205   001F56                     
  9206                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  9207   001F56  C021  F016         	movff	ctoa@c,fputc@c
  9208   001F5A  6A17               	clrf	(fputc@c+1)^0,c
  9209   001F5C  C01F  F018         	movff	ctoa@fp,fputc@fp
  9210   001F60  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
  9211   001F64  ECAE  F010         	call	_fputc	;wreg free
  9212   001F68                     l1341:
  9213   001F68  0012               	return		;funcret
  9214   001F6A                     __end_of_ctoa:
  9215                           	callstack 0
  9216                           
  9217 ;; *************** function _fputc *****************
  9218 ;; Defined at:
  9219 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;  c               2   21[COMRAM] int 
  9222 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  9223 ;;		 -> NULL(0), 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;		None
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  2   21[COMRAM] int 
  9228 ;; Registers used:
  9229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9235 ;;      Params:         4       0       0       0       0       0       0
  9236 ;;      Locals:         0       0       0       0       0       0       0
  9237 ;;      Temps:          5       0       0       0       0       0       0
  9238 ;;      Totals:         9       0       0       0       0       0       0
  9239 ;;Total ram usage:        9 bytes
  9240 ;; Hardware stack levels used: 1
  9241 ;; Hardware stack levels required when called: 6
  9242 ;; This function calls:
  9243 ;;		_putch
  9244 ;; This function is called by:
  9245 ;;		_pad
  9246 ;;		_ctoa
  9247 ;;		_stoa
  9248 ;;		_vfpfcnvrt
  9249 ;;		_fputs
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text36
  9254   00215C                     __ptext36:
  9255                           	callstack 0
  9256   00215C                     _fputc:
  9257                           	callstack 18
  9258   00215C  5018               	movf	fputc@fp^0,w,c
  9259   00215E  1019               	iorwf	(fputc@fp+1)^0,w,c
  9260   002160  B4D8               	btfsc	status,2,c
  9261   002162  EFB5  F010         	goto	u2971
  9262   002166  EFB7  F010         	goto	u2970
  9263   00216A                     u2971:
  9264   00216A  EFC0  F010         	goto	l4158
  9265   00216E                     u2970:
  9266   00216E  5018               	movf	fputc@fp^0,w,c
  9267   002170  1019               	iorwf	(fputc@fp+1)^0,w,c
  9268   002172  A4D8               	btfss	status,2,c
  9269   002174  EFBE  F010         	goto	u2981
  9270   002178  EFC0  F010         	goto	u2980
  9271   00217C                     u2981:
  9272   00217C  EFC5  F010         	goto	l4160
  9273   002180                     u2980:
  9274   002180                     l4158:
  9275   002180  5016               	movf	fputc@c^0,w,c
  9276   002182  ECDD  F013         	call	_putch
  9277   002186  EFF8  F010         	goto	l1489
  9278   00218A                     l4160:
  9279   00218A  EE20 F009          	lfsr	2,9
  9280   00218E  5018               	movf	fputc@fp^0,w,c
  9281   002190  26D9               	addwf	fsr2l,f,c
  9282   002192  5019               	movf	(fputc@fp+1)^0,w,c
  9283   002194  22DA               	addwfc	fsr2h,f,c
  9284   002196  50DE               	movf	postinc2,w,c
  9285   002198  10DE               	iorwf	postinc2,w,c
  9286   00219A  B4D8               	btfsc	status,2,c
  9287   00219C  EFD2  F010         	goto	u2991
  9288   0021A0  EFD4  F010         	goto	u2990
  9289   0021A4                     u2991:
  9290   0021A4  EFEF  F010         	goto	l4164
  9291   0021A8                     u2990:
  9292   0021A8  EE20 F009          	lfsr	2,9
  9293   0021AC  5018               	movf	fputc@fp^0,w,c
  9294   0021AE  26D9               	addwf	fsr2l,f,c
  9295   0021B0  5019               	movf	(fputc@fp+1)^0,w,c
  9296   0021B2  22DA               	addwfc	fsr2h,f,c
  9297   0021B4  EE10 F003          	lfsr	1,3
  9298   0021B8  5018               	movf	fputc@fp^0,w,c
  9299   0021BA  26E1               	addwf	fsr1l,f,c
  9300   0021BC  5019               	movf	(fputc@fp+1)^0,w,c
  9301   0021BE  22E2               	addwfc	fsr1h,f,c
  9302   0021C0  50DE               	movf	postinc2,w,c
  9303   0021C2  5CE6               	subwf	postinc1,w,c
  9304   0021C4  50E6               	movf	postinc1,w,c
  9305   0021C6  0A80               	xorlw	128
  9306   0021C8  6E1E               	movwf	(??_fputc+4)^0,c
  9307   0021CA  50DE               	movf	postinc2,w,c
  9308   0021CC  0A80               	xorlw	128
  9309   0021CE  581E               	subwfb	(??_fputc+4)^0,w,c
  9310   0021D0  B0D8               	btfsc	status,0,c
  9311   0021D2  EFED  F010         	goto	u3001
  9312   0021D6  EFEF  F010         	goto	u3000
  9313   0021DA                     u3001:
  9314   0021DA  EFF8  F010         	goto	l1489
  9315   0021DE                     u3000:
  9316   0021DE                     l4164:
  9317   0021DE  EE20 F003          	lfsr	2,3
  9318   0021E2  5018               	movf	fputc@fp^0,w,c
  9319   0021E4  26D9               	addwf	fsr2l,f,c
  9320   0021E6  5019               	movf	(fputc@fp+1)^0,w,c
  9321   0021E8  22DA               	addwfc	fsr2h,f,c
  9322   0021EA  2ADE               	incf	postinc2,f,c
  9323   0021EC  0E00               	movlw	0
  9324   0021EE  22DD               	addwfc	postdec2,f,c
  9325   0021F0                     l1489:
  9326   0021F0  0012               	return		;funcret
  9327   0021F2                     __end_of_fputc:
  9328                           	callstack 0
  9329                           
  9330 ;; *************** function _putch *****************
  9331 ;; Defined at:
  9332 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  txData          1    wreg     unsigned char 
  9335 ;; Auto vars:     Size  Location     Type
  9336 ;;  txData          1   20[COMRAM] unsigned char 
  9337 ;; Return value:  Size  Location     Type
  9338 ;;                  1    wreg      void 
  9339 ;; Registers used:
  9340 ;;		wreg, status,2, cstack
  9341 ;; Tracked objects:
  9342 ;;		On entry : 0/0
  9343 ;;		On exit  : 0/0
  9344 ;;		Unchanged: 0/0
  9345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9346 ;;      Params:         0       0       0       0       0       0       0
  9347 ;;      Locals:         1       0       0       0       0       0       0
  9348 ;;      Temps:          0       0       0       0       0       0       0
  9349 ;;      Totals:         1       0       0       0       0       0       0
  9350 ;;Total ram usage:        1 bytes
  9351 ;; Hardware stack levels used: 1
  9352 ;; Hardware stack levels required when called: 5
  9353 ;; This function calls:
  9354 ;;		_EUSART1_Write
  9355 ;; This function is called by:
  9356 ;;		_fputc
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           	psect	text37
  9361   0027BA                     __ptext37:
  9362                           	callstack 0
  9363   0027BA                     _putch:
  9364                           	callstack 18
  9365                           
  9366                           ;incstack = 0
  9367                           ;putch@txData stored from wreg
  9368   0027BA  6E15               	movwf	putch@txData^0,c
  9369   0027BC                     
  9370                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  9371   0027BC  5015               	movf	putch@txData^0,w,c
  9372   0027BE  ECA1  F013         	call	_EUSART1_Write
  9373   0027C2  0012               	return		;funcret
  9374   0027C4                     __end_of_putch:
  9375                           	callstack 0
  9376                           
  9377 ;; *************** function _EUSART1_Write *****************
  9378 ;; Defined at:
  9379 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  txData          1    wreg     unsigned char 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;  txData          1   19[COMRAM] unsigned char 
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  1    wreg      void 
  9386 ;; Registers used:
  9387 ;;		wreg
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9393 ;;      Params:         0       0       0       0       0       0       0
  9394 ;;      Locals:         1       0       0       0       0       0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0
  9396 ;;      Totals:         1       0       0       0       0       0       0
  9397 ;;Total ram usage:        1 bytes
  9398 ;; Hardware stack levels used: 1
  9399 ;; Hardware stack levels required when called: 4
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_putch
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text38
  9408   002742                     __ptext38:
  9409                           	callstack 0
  9410   002742                     _EUSART1_Write:
  9411                           	callstack 18
  9412                           
  9413                           ;incstack = 0
  9414                           ;EUSART1_Write@txData stored from wreg
  9415   002742  6E14               	movwf	EUSART1_Write@txData^0,c
  9416   002744                     l146:
  9417                           
  9418                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  9419   002744  A89E               	btfss	158,4,c	;volatile
  9420   002746  EFA7  F013         	goto	u2961
  9421   00274A  EFA9  F013         	goto	u2960
  9422   00274E                     u2961:
  9423   00274E  EFA2  F013         	goto	l146
  9424   002752                     u2960:
  9425   002752                     
  9426                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  9427   002752  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  9428   002756  0012               	return		;funcret
  9429   002758                     __end_of_EUSART1_Write:
  9430                           	callstack 0
  9431                           
  9432 ;; *************** function _atoi *****************
  9433 ;; Defined at:
  9434 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  s               2   25[COMRAM] PTR const unsigned char 
  9437 ;;		 -> STR_104(3), STR_103(3), STR_102(2), STR_101(4), 
  9438 ;;		 -> STR_100(6), STR_99(3), STR_98(3), STR_97(2), 
  9439 ;;		 -> STR_96(3), STR_95(2), STR_94(4), STR_93(28), 
  9440 ;;		 -> STR_92(26), STR_91(27), STR_90(3), STR_89(17), 
  9441 ;;		 -> STR_88(20), STR_87(37), STR_86(22), STR_85(33), 
  9442 ;;		 -> STR_84(58), STR_83(3), STR_82(47), STR_81(37), 
  9443 ;;		 -> STR_79(5), STR_78(25), STR_77(20), STR_76(72), 
  9444 ;;		 -> STR_75(50), STR_74(22), STR_73(33), STR_72(58), 
  9445 ;;		 -> STR_71(3), STR_70(68), STR_69(57), STR_68(17), 
  9446 ;;		 -> STR_67(7), STR_66(29), STR_65(25), STR_64(25), 
  9447 ;;		 -> STR_63(19), STR_62(11), STR_61(6), STR_60(6), 
  9448 ;;		 -> STR_59(10), STR_58(16), STR_57(11), STR_56(6), 
  9449 ;;		 -> STR_55(6), STR_54(10), STR_53(15), STR_52(23), 
  9450 ;;		 -> STR_51(3), STR_50(5), STR_49(2), STR_48(5), 
  9451 ;;		 -> STR_47(17), STR_46(43), STR_45(3), STR_44(5), 
  9452 ;;		 -> STR_43(2), STR_42(5), STR_41(17), STR_40(15), 
  9453 ;;		 -> STR_39(3), STR_38(5), STR_37(2), STR_36(5), 
  9454 ;;		 -> STR_35(19), STR_34(20), STR_33(28), STR_32(3), 
  9455 ;;		 -> STR_31(5), STR_30(2), STR_29(5), STR_28(19), 
  9456 ;;		 -> STR_27(20), STR_26(30), STR_25(2), STR_24(2), 
  9457 ;;		 -> STR_23(9), STR_22(52), STR_21(32), STR_20(44), 
  9458 ;;		 -> STR_19(50), STR_18(52), STR_17(52), STR_16(24), 
  9459 ;;		 -> STR_15(44), STR_14(37), STR_13(52), STR_12(24), 
  9460 ;;		 -> STR_11(52), STR_10(24), STR_9(21), STR_8(7), 
  9461 ;;		 -> STR_7(15), STR_6(54), STR_5(5), STR_4(42), 
  9462 ;;		 -> STR_3(9), STR_2(18), STR_1(13), 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  n               2   32[COMRAM] int 
  9465 ;;  neg             2   30[COMRAM] int 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  2   25[COMRAM] int 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 0/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9475 ;;      Params:         2       0       0       0       0       0       0
  9476 ;;      Locals:         4       0       0       0       0       0       0
  9477 ;;      Temps:          3       0       0       0       0       0       0
  9478 ;;      Totals:         9       0       0       0       0       0       0
  9479 ;;Total ram usage:        9 bytes
  9480 ;; Hardware stack levels used: 1
  9481 ;; Hardware stack levels required when called: 5
  9482 ;; This function calls:
  9483 ;;		___wmul
  9484 ;;		_isdigit
  9485 ;;		_isspace
  9486 ;; This function is called by:
  9487 ;;		_vfpfcnvrt
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text39
  9492   001ABA                     __ptext39:
  9493                           	callstack 0
  9494   001ABA                     _atoi:
  9495                           	callstack 22
  9496   001ABA  0E00               	movlw	0
  9497   001ABC  6E22               	movwf	(atoi@n+1)^0,c
  9498   001ABE  0E00               	movlw	0
  9499   001AC0  6E21               	movwf	atoi@n^0,c
  9500   001AC2  0E00               	movlw	0
  9501   001AC4  6E20               	movwf	(atoi@neg+1)^0,c
  9502   001AC6  0E00               	movlw	0
  9503   001AC8  6E1F               	movwf	atoi@neg^0,c
  9504   001ACA  EF69  F00D         	goto	l4418
  9505   001ACE                     l4414:
  9506   001ACE  4A1A               	infsnz	atoi@s^0,f,c
  9507   001AD0  2A1B               	incf	(atoi@s+1)^0,f,c
  9508   001AD2                     l4418:
  9509   001AD2  C01A  FFF6         	movff	atoi@s,tblptrl
  9510   001AD6  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9511   001ADA                     	if	0	;tblptru may be non-zero
  9512   001ADA                     	endif
  9513   001ADA                     	if	0	;tblptru may be non-zero
  9514   001ADA                     	endif
  9515   001ADA  0008               	tblrd		*
  9516   001ADC  50F5               	movf	tablat,w,c
  9517   001ADE  0A20               	xorlw	32
  9518   001AE0  B4D8               	btfsc	status,2,c
  9519   001AE2  EF75  F00D         	goto	u3501
  9520   001AE6  EF77  F00D         	goto	u3500
  9521   001AEA                     u3501:
  9522   001AEA  EF67  F00D         	goto	l4414
  9523   001AEE                     u3500:
  9524   001AEE  C01A  FFF6         	movff	atoi@s,tblptrl
  9525   001AF2  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9526   001AF6                     	if	0	;tblptru may be non-zero
  9527   001AF6                     	endif
  9528   001AF6                     	if	0	;tblptru may be non-zero
  9529   001AF6                     	endif
  9530   001AF6  0008               	tblrd		*
  9531   001AF8  CFF5 F01C          	movff	tablat,??_atoi
  9532   001AFC  0EF7               	movlw	247
  9533   001AFE  241C               	addwf	??_atoi^0,w,c
  9534   001B00  6E1D               	movwf	(??_atoi+1)^0,c
  9535   001B02  6A1E               	clrf	(??_atoi+2)^0,c
  9536   001B04  0EFF               	movlw	255
  9537   001B06  221E               	addwfc	(??_atoi+2)^0,f,c
  9538   001B08  501E               	movf	(??_atoi+2)^0,w,c
  9539   001B0A  E109               	bnz	u3510
  9540   001B0C  0E05               	movlw	5
  9541   001B0E  5C1D               	subwf	(??_atoi+1)^0,w,c
  9542   001B10  A0D8               	btfss	status,0,c
  9543   001B12  EF8D  F00D         	goto	u3511
  9544   001B16  EF8F  F00D         	goto	u3510
  9545   001B1A                     u3511:
  9546   001B1A  EF67  F00D         	goto	l4414
  9547   001B1E                     u3510:
  9548   001B1E  EF99  F00D         	goto	l4426
  9549   001B22                     l4422:
  9550   001B22  0E00               	movlw	0
  9551   001B24  6E20               	movwf	(atoi@neg+1)^0,c
  9552   001B26  0E01               	movlw	1
  9553   001B28  6E1F               	movwf	atoi@neg^0,c
  9554   001B2A                     l4424:
  9555   001B2A  4A1A               	infsnz	atoi@s^0,f,c
  9556   001B2C  2A1B               	incf	(atoi@s+1)^0,f,c
  9557   001B2E  EFCE  F00D         	goto	l4434
  9558   001B32                     l4426:
  9559   001B32  C01A  FFF6         	movff	atoi@s,tblptrl
  9560   001B36  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9561   001B3A                     	if	0	;tblptru may be non-zero
  9562   001B3A                     	endif
  9563   001B3A                     	if	0	;tblptru may be non-zero
  9564   001B3A                     	endif
  9565   001B3A  0008               	tblrd		*
  9566   001B3C  50F5               	movf	tablat,w,c
  9567   001B3E  6E1C               	movwf	??_atoi^0,c
  9568   001B40  6A1D               	clrf	(??_atoi+1)^0,c
  9569                           
  9570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9571                           ; Switch size 1, requested type "simple"
  9572                           ; Number of cases is 1, Range of values is 0 to 0
  9573                           ; switch strategies available:
  9574                           ; Name         Instructions Cycles
  9575                           ; simple_byte            4     3 (average)
  9576                           ;	Chosen strategy is simple_byte
  9577   001B42  501D               	movf	(??_atoi+1)^0,w,c
  9578   001B44  0A00               	xorlw	0	; case 0
  9579   001B46  B4D8               	btfsc	status,2,c
  9580   001B48  EFA8  F00D         	goto	l5392
  9581   001B4C  EFCE  F00D         	goto	l4434
  9582   001B50                     l5392:
  9583                           
  9584                           ; Switch size 1, requested type "simple"
  9585                           ; Number of cases is 2, Range of values is 43 to 45
  9586                           ; switch strategies available:
  9587                           ; Name         Instructions Cycles
  9588                           ; simple_byte            7     4 (average)
  9589                           ;	Chosen strategy is simple_byte
  9590   001B50  501C               	movf	??_atoi^0,w,c
  9591   001B52  0A2B               	xorlw	43	; case 43
  9592   001B54  B4D8               	btfsc	status,2,c
  9593   001B56  EF95  F00D         	goto	l4424
  9594   001B5A  0A06               	xorlw	6	; case 45
  9595   001B5C  B4D8               	btfsc	status,2,c
  9596   001B5E  EF91  F00D         	goto	l4422
  9597   001B62  EFCE  F00D         	goto	l4434
  9598   001B66                     l4428:
  9599   001B66  C021  F014         	movff	atoi@n,___wmul@multiplier
  9600   001B6A  C022  F015         	movff	atoi@n+1,___wmul@multiplier+1
  9601   001B6E  0E00               	movlw	0
  9602   001B70  6E17               	movwf	(___wmul@multiplicand+1)^0,c
  9603   001B72  0E0A               	movlw	10
  9604   001B74  6E16               	movwf	___wmul@multiplicand^0,c
  9605   001B76  EC27  F013         	call	___wmul	;wreg free
  9606   001B7A  C01A  FFF6         	movff	atoi@s,tblptrl
  9607   001B7E  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9608   001B82                     	if	0	;tblptru may be non-zero
  9609   001B82                     	endif
  9610   001B82                     	if	0	;tblptru may be non-zero
  9611   001B82                     	endif
  9612   001B82  0008               	tblrd		*
  9613   001B84  50F5               	movf	tablat,w,c
  9614   001B86  5E14               	subwf	?___wmul^0,f,c
  9615   001B88  0E00               	movlw	0
  9616   001B8A  5A15               	subwfb	(?___wmul+1)^0,f,c
  9617   001B8C  0E30               	movlw	48
  9618   001B8E  2414               	addwf	?___wmul^0,w,c
  9619   001B90  6E21               	movwf	atoi@n^0,c
  9620   001B92  0E00               	movlw	0
  9621   001B94  2015               	addwfc	(?___wmul+1)^0,w,c
  9622   001B96  6E22               	movwf	(atoi@n+1)^0,c
  9623   001B98  EF95  F00D         	goto	l4424
  9624   001B9C                     l4434:
  9625   001B9C  C01A  FFF6         	movff	atoi@s,tblptrl
  9626   001BA0  C01B  FFF7         	movff	atoi@s+1,tblptrh
  9627   001BA4                     	if	0	;tblptru may be non-zero
  9628   001BA4                     	endif
  9629   001BA4                     	if	0	;tblptru may be non-zero
  9630   001BA4                     	endif
  9631   001BA4  0008               	tblrd		*
  9632   001BA6  CFF5 F01C          	movff	tablat,??_atoi
  9633   001BAA  0ED0               	movlw	208
  9634   001BAC  241C               	addwf	??_atoi^0,w,c
  9635   001BAE  6E1D               	movwf	(??_atoi+1)^0,c
  9636   001BB0  6A1E               	clrf	(??_atoi+2)^0,c
  9637   001BB2  0EFF               	movlw	255
  9638   001BB4  221E               	addwfc	(??_atoi+2)^0,f,c
  9639   001BB6  501E               	movf	(??_atoi+2)^0,w,c
  9640   001BB8  E109               	bnz	u3520
  9641   001BBA  0E0A               	movlw	10
  9642   001BBC  5C1D               	subwf	(??_atoi+1)^0,w,c
  9643   001BBE  A0D8               	btfss	status,0,c
  9644   001BC0  EFE4  F00D         	goto	u3521
  9645   001BC4  EFE6  F00D         	goto	u3520
  9646   001BC8                     u3521:
  9647   001BC8  EFB3  F00D         	goto	l4428
  9648   001BCC                     u3520:
  9649   001BCC  501F               	movf	atoi@neg^0,w,c
  9650   001BCE  1020               	iorwf	(atoi@neg+1)^0,w,c
  9651   001BD0  A4D8               	btfss	status,2,c
  9652   001BD2  EFED  F00D         	goto	u3531
  9653   001BD6  EFEF  F00D         	goto	u3530
  9654   001BDA                     u3531:
  9655   001BDA  EFFD  F00D         	goto	l1460
  9656   001BDE                     u3530:
  9657   001BDE  C021  F01C         	movff	atoi@n,??_atoi
  9658   001BE2  C022  F01D         	movff	atoi@n+1,??_atoi+1
  9659   001BE6  1E1C               	comf	??_atoi^0,f,c
  9660   001BE8  1E1D               	comf	(??_atoi+1)^0,f,c
  9661   001BEA  4A1C               	infsnz	??_atoi^0,f,c
  9662   001BEC  2A1D               	incf	(??_atoi+1)^0,f,c
  9663   001BEE  C01C  F01A         	movff	??_atoi,?_atoi
  9664   001BF2  C01D  F01B         	movff	??_atoi+1,?_atoi+1
  9665   001BF6  EF01  F00E         	goto	l1463
  9666   001BFA                     l1460:
  9667   001BFA  C021  F01A         	movff	atoi@n,?_atoi
  9668   001BFE  C022  F01B         	movff	atoi@n+1,?_atoi+1
  9669   001C02                     l1463:
  9670   001C02  0012               	return		;funcret
  9671   001C04                     __end_of_atoi:
  9672                           	callstack 0
  9673                           
  9674 ;; *************** function _isspace *****************
  9675 ;; Defined at:
  9676 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  c               2   19[COMRAM] int 
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  2   19[COMRAM] int 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9690 ;;      Params:         2       0       0       0       0       0       0
  9691 ;;      Locals:         1       0       0       0       0       0       0
  9692 ;;      Temps:          2       0       0       0       0       0       0
  9693 ;;      Totals:         5       0       0       0       0       0       0
  9694 ;;Total ram usage:        5 bytes
  9695 ;; Hardware stack levels used: 1
  9696 ;; Hardware stack levels required when called: 4
  9697 ;; This function calls:
  9698 ;;		Nothing
  9699 ;; This function is called by:
  9700 ;;		_atoi
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text40
  9705   00240E                     __ptext40:
  9706                           	callstack 0
  9707   00240E                     _isspace:
  9708                           	callstack 22
  9709   00240E  0E01               	movlw	1
  9710   002410  6E18               	movwf	_isspace$2088^0,c
  9711   002412  0E20               	movlw	32
  9712   002414  1814               	xorwf	isspace@c^0,w,c
  9713   002416  1015               	iorwf	(isspace@c+1)^0,w,c
  9714   002418  B4D8               	btfsc	status,2,c
  9715   00241A  EF11  F012         	goto	u3171
  9716   00241E  EF13  F012         	goto	u3170
  9717   002422                     u3171:
  9718   002422  EF26  F012         	goto	l4260
  9719   002426                     u3170:
  9720   002426  0EF7               	movlw	247
  9721   002428  2414               	addwf	isspace@c^0,w,c
  9722   00242A  6E16               	movwf	??_isspace^0,c
  9723   00242C  0EFF               	movlw	255
  9724   00242E  2015               	addwfc	(isspace@c+1)^0,w,c
  9725   002430  6E17               	movwf	(??_isspace+1)^0,c
  9726   002432  5017               	movf	(??_isspace+1)^0,w,c
  9727   002434  E109               	bnz	u3180
  9728   002436  0E05               	movlw	5
  9729   002438  5C16               	subwf	??_isspace^0,w,c
  9730   00243A  A0D8               	btfss	status,0,c
  9731   00243C  EF22  F012         	goto	u3181
  9732   002440  EF24  F012         	goto	u3180
  9733   002444                     u3181:
  9734   002444  EF26  F012         	goto	l4260
  9735   002448                     u3180:
  9736   002448  0E00               	movlw	0
  9737   00244A  6E18               	movwf	_isspace$2088^0,c
  9738   00244C                     l4260:
  9739   00244C  C018  F014         	movff	_isspace$2088,?_isspace
  9740   002450  6A15               	clrf	(?_isspace+1)^0,c
  9741   002452  0012               	return		;funcret
  9742   002454                     __end_of_isspace:
  9743                           	callstack 0
  9744                           
  9745 ;; *************** function _isdigit *****************
  9746 ;; Defined at:
  9747 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  c               2   19[COMRAM] int 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;		None
  9752 ;; Return value:  Size  Location     Type
  9753 ;;                  2   19[COMRAM] int 
  9754 ;; Registers used:
  9755 ;;		wreg, status,2, status,0
  9756 ;; Tracked objects:
  9757 ;;		On entry : 0/0
  9758 ;;		On exit  : 0/0
  9759 ;;		Unchanged: 0/0
  9760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9761 ;;      Params:         2       0       0       0       0       0       0
  9762 ;;      Locals:         0       0       0       0       0       0       0
  9763 ;;      Temps:          2       0       0       0       0       0       0
  9764 ;;      Totals:         4       0       0       0       0       0       0
  9765 ;;Total ram usage:        4 bytes
  9766 ;; Hardware stack levels used: 1
  9767 ;; Hardware stack levels required when called: 4
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_vfpfcnvrt
  9772 ;;		_atoi
  9773 ;; This function uses a non-reentrant model
  9774 ;;
  9775                           
  9776                           	psect	text41
  9777   0025AA                     __ptext41:
  9778                           	callstack 0
  9779   0025AA                     _isdigit:
  9780                           	callstack 23
  9781   0025AA  0ED0               	movlw	208
  9782   0025AC  2414               	addwf	isdigit@c^0,w,c
  9783   0025AE  6E16               	movwf	??_isdigit^0,c
  9784   0025B0  0EFF               	movlw	255
  9785   0025B2  2015               	addwfc	(isdigit@c+1)^0,w,c
  9786   0025B4  6E17               	movwf	(??_isdigit+1)^0,c
  9787   0025B6  5017               	movf	(??_isdigit+1)^0,w,c
  9788   0025B8  E10A               	bnz	u3150
  9789   0025BA  0E0A               	movlw	10
  9790   0025BC  5C16               	subwf	??_isdigit^0,w,c
  9791   0025BE  A0D8               	btfss	status,0,c
  9792   0025C0  EFE4  F012         	goto	u3151
  9793   0025C4  EFE7  F012         	goto	u3150
  9794   0025C8                     u3151:
  9795   0025C8  0E01               	movlw	1
  9796   0025CA  EFE8  F012         	goto	u3160
  9797   0025CE                     u3150:
  9798   0025CE  0E00               	movlw	0
  9799   0025D0                     u3160:
  9800   0025D0  6E14               	movwf	?_isdigit^0,c
  9801   0025D2  6A15               	clrf	(?_isdigit+1)^0,c
  9802   0025D4  0012               	return		;funcret
  9803   0025D6                     __end_of_isdigit:
  9804                           	callstack 0
  9805                           
  9806 ;; *************** function ___wmul *****************
  9807 ;; Defined at:
  9808 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;  multiplier      2   19[COMRAM] unsigned int 
  9811 ;;  multiplicand    2   21[COMRAM] unsigned int 
  9812 ;; Auto vars:     Size  Location     Type
  9813 ;;  product         2   23[COMRAM] unsigned int 
  9814 ;; Return value:  Size  Location     Type
  9815 ;;                  2   19[COMRAM] unsigned int 
  9816 ;; Registers used:
  9817 ;;		wreg, status,2, status,0, prodl, prodh
  9818 ;; Tracked objects:
  9819 ;;		On entry : 0/0
  9820 ;;		On exit  : 0/0
  9821 ;;		Unchanged: 0/0
  9822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9823 ;;      Params:         4       0       0       0       0       0       0
  9824 ;;      Locals:         2       0       0       0       0       0       0
  9825 ;;      Temps:          0       0       0       0       0       0       0
  9826 ;;      Totals:         6       0       0       0       0       0       0
  9827 ;;Total ram usage:        6 bytes
  9828 ;; Hardware stack levels used: 1
  9829 ;; Hardware stack levels required when called: 4
  9830 ;; This function calls:
  9831 ;;		Nothing
  9832 ;; This function is called by:
  9833 ;;		_main
  9834 ;;		_atoi
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text42
  9839   00264E                     __ptext42:
  9840                           	callstack 0
  9841   00264E                     ___wmul:
  9842                           	callstack 22
  9843   00264E  5014               	movf	___wmul@multiplier^0,w,c
  9844   002650  0216               	mulwf	___wmul@multiplicand^0,c
  9845   002652  CFF3 F018          	movff	prodl,___wmul@product
  9846   002656  CFF4 F019          	movff	prodh,___wmul@product+1
  9847   00265A  5014               	movf	___wmul@multiplier^0,w,c
  9848   00265C  0217               	mulwf	(___wmul@multiplicand+1)^0,c
  9849   00265E  50F3               	movf	243,w,c
  9850   002660  2619               	addwf	(___wmul@product+1)^0,f,c
  9851   002662  5015               	movf	(___wmul@multiplier+1)^0,w,c
  9852   002664  0216               	mulwf	___wmul@multiplicand^0,c
  9853   002666  50F3               	movf	243,w,c
  9854   002668  2619               	addwf	(___wmul@product+1)^0,f,c
  9855   00266A  C018  F014         	movff	___wmul@product,?___wmul
  9856   00266E  C019  F015         	movff	___wmul@product+1,?___wmul+1
  9857   002672  0012               	return		;funcret
  9858   002674                     __end_of___wmul:
  9859                           	callstack 0
  9860                           
  9861 ;; *************** function _SPI2_ExchangeByte *****************
  9862 ;; Defined at:
  9863 ;;		line 92 in file "mcc_generated_files/spi2.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;  data            1    wreg     unsigned char 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  data            1   19[COMRAM] unsigned char 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  1    wreg      unsigned char 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9877 ;;      Params:         0       0       0       0       0       0       0
  9878 ;;      Locals:         1       0       0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0
  9880 ;;      Totals:         1       0       0       0       0       0       0
  9881 ;;Total ram usage:        1 bytes
  9882 ;; Hardware stack levels used: 1
  9883 ;; Hardware stack levels required when called: 4
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_SDCARD_Initialize
  9888 ;;		_SDCARD_ReadBlock
  9889 ;;		_SDCARD_WriteBlock
  9890 ;;		_SDCARD_PollWriteComplete
  9891 ;;		_SPI2_WriteBlock
  9892 ;;		_SPI2_ReadBlock
  9893 ;; This function uses a non-reentrant model
  9894 ;;
  9895                           
  9896                           	psect	text43
  9897   002712                     __ptext43:
  9898                           	callstack 0
  9899   002712                     _SPI2_ExchangeByte:
  9900                           	callstack 25
  9901                           
  9902                           ;incstack = 0
  9903                           ;SPI2_ExchangeByte@data stored from wreg
  9904   002712  6E14               	movwf	SPI2_ExchangeByte@data^0,c
  9905   002714                     
  9906                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
  9907   002714  C014  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
  9908   002718                     l220:
  9909   002718  AEA4               	btfss	164,7,c	;volatile
  9910   00271A  EF91  F013         	goto	u3721
  9911   00271E  EF93  F013         	goto	u3720
  9912   002722                     u3721:
  9913   002722  EF8C  F013         	goto	l220
  9914   002726                     u3720:
  9915   002726                     
  9916                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
  9917   002726  9EA4               	bcf	164,7,c	;volatile
  9918                           
  9919                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
  9920   002728  506F               	movf	111,w,c	;volatile
  9921   00272A  0012               	return		;funcret
  9922   00272C                     __end_of_SPI2_ExchangeByte:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function _EUSART1_is_rx_ready *****************
  9926 ;; Defined at:
  9927 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      _Bool 
  9934 ;; Registers used:
  9935 ;;		wreg
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9941 ;;      Params:         0       0       0       0       0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 4
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_main
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text44
  9956   002758                     __ptext44:
  9957                           	callstack 0
  9958   002758                     _EUSART1_is_rx_ready:
  9959                           	callstack 26
  9960   002758                     
  9961                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  9962   002758  BA9E               	btfsc	158,5,c	;volatile
  9963   00275A  EFB1  F013         	goto	u3731
  9964   00275E  EFB4  F013         	goto	u3730
  9965   002762                     u3731:
  9966   002762  0E01               	movlw	1
  9967   002764  EFB5  F013         	goto	u3736
  9968   002768                     u3730:
  9969   002768  0E00               	movlw	0
  9970   00276A                     u3736:
  9971   00276A  0012               	return		;funcret
  9972   00276C                     __end_of_EUSART1_is_rx_ready:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _EUSART1_Read *****************
  9976 ;; Defined at:
  9977 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;		None
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      unsigned char 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9991 ;;      Params:         0       0       0       0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used: 1
  9997 ;; Hardware stack levels required when called: 4
  9998 ;; This function calls:
  9999 ;;		Nothing
 10000 ;; This function is called by:
 10001 ;;		_main
 10002 ;;		_getch
 10003 ;; This function uses a non-reentrant model
 10004 ;;
 10005                           
 10006                           	psect	text45
 10007   002626                     __ptext45:
 10008                           	callstack 0
 10009   002626                     _EUSART1_Read:
 10010                           	callstack 26
 10011   002626                     l139:
 10012                           
 10013                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 10014   002626  AA9E               	btfss	158,5,c	;volatile
 10015   002628  EF18  F013         	goto	u3741
 10016   00262C  EF1A  F013         	goto	u3740
 10017   002630                     u3741:
 10018   002630  EF13  F013         	goto	l139
 10019   002634                     u3740:
 10020   002634                     
 10021                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 10022   002634  0E00               	movlw	0
 10023   002636  6E4A               	movwf	_eusart1RxLastError^0,c	;volatile
 10024   002638                     
 10025                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 10026   002638  A2AB               	btfss	171,1,c	;volatile
 10027   00263A  EF21  F013         	goto	u3751
 10028   00263E  EF23  F013         	goto	u3750
 10029   002642                     u3751:
 10030   002642  EF25  F013         	goto	l4672
 10031   002646                     u3750:
 10032   002646                     
 10033                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 10034   002646  98AB               	bcf	171,4,c	;volatile
 10035                           
 10036                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 10037   002648  88AB               	bsf	171,4,c	;volatile
 10038   00264A                     l4672:
 10039                           
 10040                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 10041   00264A  50AE               	movf	174,w,c	;volatile
 10042   00264C  0012               	return		;funcret
 10043   00264E                     __end_of_EUSART1_Read:
 10044                           	callstack 0
 10045                           
 10046 ;; *************** function _INTERRUPT_InterruptManager *****************
 10047 ;; Defined at:
 10048 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10062 ;;      Params:         0       0       0       0       0       0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0
 10064 ;;      Temps:          6       0       0       0       0       0       0
 10065 ;;      Totals:         6       0       0       0       0       0       0
 10066 ;;Total ram usage:        6 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 3
 10069 ;; This function calls:
 10070 ;;		_TMR0_ISR
 10071 ;; This function is called by:
 10072 ;;		Interrupt level 2
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           	psect	intcode
 10077   000008                     __pintcode:
 10078                           	callstack 0
 10079   000008                     _INTERRUPT_InterruptManager:
 10080                           	callstack 17
 10081                           
 10082                           ;incstack = 0
 10083   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10084   00000A  CFFA F00E          	movff	pclath,??_INTERRUPT_InterruptManager
 10085   00000E  CFFB F00F          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 10086   000012  CFD9 F010          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 10087   000016  CFDA F011          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 10088   00001A  CFF3 F012          	movff	prodl,??_INTERRUPT_InterruptManager+4
 10089   00001E  CFF4 F013          	movff	prodh,??_INTERRUPT_InterruptManager+5
 10090   000022                     
 10091                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10092   000022  AAF2               	btfss	242,5,c	;volatile
 10093   000024  EF16  F000         	goto	i2u262_41
 10094   000028  EF18  F000         	goto	i2u262_40
 10095   00002C                     i2u262_41:
 10096   00002C  EF21  F000         	goto	i2l189
 10097   000030                     i2u262_40:
 10098   000030  A4F2               	btfss	242,2,c	;volatile
 10099   000032  EF1D  F000         	goto	i2u263_41
 10100   000036  EF1F  F000         	goto	i2u263_40
 10101   00003A                     i2u263_41:
 10102   00003A  EF21  F000         	goto	i2l189
 10103   00003E                     i2u263_40:
 10104   00003E                     
 10105                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 10106   00003E  EC87  F012         	call	_TMR0_ISR	;wreg free
 10107   000042                     i2l189:
 10108   000042  C013  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
 10109   000046  C012  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
 10110   00004A  C011  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 10111   00004E  C010  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 10112   000052  C00F  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 10113   000056  C00E  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 10114   00005A  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10115   00005C  0011               	retfie		f
 10116   00005E                     __end_of_INTERRUPT_InterruptManager:
 10117                           	callstack 0
 10118                           
 10119 ;; *************** function _TMR0_ISR *****************
 10120 ;; Defined at:
 10121 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;		None
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;		None
 10126 ;; Return value:  Size  Location     Type
 10127 ;;                  1    wreg      void 
 10128 ;; Registers used:
 10129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10135 ;;      Params:         0       0       0       0       0       0       0
 10136 ;;      Locals:         0       0       0       0       0       0       0
 10137 ;;      Temps:          0       0       0       0       0       0       0
 10138 ;;      Totals:         0       0       0       0       0       0       0
 10139 ;;Total ram usage:        0 bytes
 10140 ;; Hardware stack levels used: 1
 10141 ;; Hardware stack levels required when called: 2
 10142 ;; This function calls:
 10143 ;;		Absolute function
 10144 ;;		_TMR0_DefaultInterruptHandler
 10145 ;;		_rwTMR0ISR
 10146 ;; This function is called by:
 10147 ;;		_INTERRUPT_InterruptManager
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           	psect	text47
 10152   00250E                     __ptext47:
 10153                           	callstack 0
 10154   00250E                     _TMR0_ISR:
 10155                           	callstack 17
 10156   00250E                     
 10157                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 10158   00250E  94F2               	bcf	242,2,c	;volatile
 10159   002510                     
 10160                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 10161   002510  5044               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 10162   002512  6ED7               	movwf	215,c	;volatile
 10163   002514                     
 10164                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 10165   002514  C043  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 10166   002518                     
 10167                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 10168   002518  5045               	movf	_TMR0_InterruptHandler^0,w,c
 10169   00251A  1046               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 10170   00251C  B4D8               	btfsc	status,2,c
 10171   00251E  EF93  F012         	goto	i2u234_41
 10172   002522  EF95  F012         	goto	i2u234_40
 10173   002526                     i2u234_41:
 10174   002526  EFA2  F012         	goto	i2l40
 10175   00252A                     i2u234_40:
 10176   00252A                     
 10177                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 10178   00252A  D802               	call	i2u235_48
 10179   00252C  EFA2  F012         	goto	i2u235_49
 10180   002530                     i2u235_48:
 10181   002530  0005               	push	
 10182   002532  6EFA               	movwf	pclath,c
 10183   002534  5045               	movf	_TMR0_InterruptHandler^0,w,c
 10184   002536  6EFD               	movwf	tosl,c
 10185   002538  5046               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 10186   00253A  6EFE               	movwf	tosh,c
 10187   00253C  50F8               	movf	tblptru,w,c
 10188   00253E  6EFF               	movwf	tosu,c
 10189   002540  50FA               	movf	pclath,w,c
 10190   002542  0012               	return		;indir
 10191   002544                     i2u235_49:
 10192   002544                     i2l40:
 10193   002544  0012               	return		;funcret
 10194   002546                     __end_of_TMR0_ISR:
 10195                           	callstack 0
 10196                           
 10197 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10198 ;; Defined at:
 10199 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;		None
 10202 ;; Auto vars:     Size  Location     Type
 10203 ;;		None
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      void 
 10206 ;; Registers used:
 10207 ;;		None
 10208 ;; Tracked objects:
 10209 ;;		On entry : 0/0
 10210 ;;		On exit  : 0/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10213 ;;      Params:         0       0       0       0       0       0       0
 10214 ;;      Locals:         0       0       0       0       0       0       0
 10215 ;;      Temps:          0       0       0       0       0       0       0
 10216 ;;      Totals:         0       0       0       0       0       0       0
 10217 ;;Total ram usage:        0 bytes
 10218 ;; Hardware stack levels used: 1
 10219 ;; This function calls:
 10220 ;;		Nothing
 10221 ;; This function is called by:
 10222 ;;		_TMR0_Initialize
 10223 ;;		_TMR0_ISR
 10224 ;; This function uses a non-reentrant model
 10225 ;;
 10226                           
 10227                           	psect	text48
 10228   0027D6                     __ptext48:
 10229                           	callstack 0
 10230   0027D6                     _TMR0_DefaultInterruptHandler:
 10231                           	callstack 18
 10232   0027D6  0012               	return		;funcret
 10233   0027D8                     __end_of_TMR0_DefaultInterruptHandler:
 10234                           	callstack 0
 10235                           
 10236 ;; *************** function _rwTMR0ISR *****************
 10237 ;; Defined at:
 10238 ;;		line 368 in file "main.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;		None
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;  character       1   12[COMRAM] unsigned char 
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10252 ;;      Params:         0       0       0       0       0       0       0
 10253 ;;      Locals:         1       0       0       0       0       0       0
 10254 ;;      Temps:          2       0       0       0       0       0       0
 10255 ;;      Totals:         3       0       0       0       0       0       0
 10256 ;;Total ram usage:        3 bytes
 10257 ;; Hardware stack levels used: 1
 10258 ;; Hardware stack levels required when called: 1
 10259 ;; This function calls:
 10260 ;;		_TMR0_ReadTimer
 10261 ;;		i2_TMR0_WriteTimer
 10262 ;;		i2___wmul
 10263 ;; This function is called by:
 10264 ;;		_main
 10265 ;;		_TMR0_ISR
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268                           
 10269                           	psect	text49
 10270   001F6A                     __ptext49:
 10271                           	callstack 0
 10272   001F6A                     _rwTMR0ISR:
 10273                           	callstack 17
 10274   001F6A                     
 10275                           ;main.c: 371:     static uint16_t i = 0;;main.c: 372:     uint8_t character;;main.c: 374
      +                          :     if(recording)
 10276   001F6A  5049               	movf	_recording^0,w,c
 10277   001F6C  B4D8               	btfsc	status,2,c
 10278   001F6E  EFBB  F00F         	goto	i2u228_41
 10279   001F72  EFBD  F00F         	goto	i2u228_40
 10280   001F76                     i2u228_41:
 10281   001F76  EF00  F010         	goto	i2l3384
 10282   001F7A                     i2u228_40:
 10283   001F7A                     
 10284                           ;main.c: 375:     {;main.c: 377:         ADCON0bits.GO_NOT_DONE = 1;
 10285   001F7A  82C2               	bsf	194,1,c	;volatile
 10286                           
 10287                           ;main.c: 378:         character = ADRESH;
 10288   001F7C  CFC4 F00D          	movff	4036,rwTMR0ISR@character	;volatile
 10289   001F80                     
 10290                           ;main.c: 379:         doubleBuffer[sampleIndex][i] = character;
 10291   001F80  C048  F001         	movff	_sampleIndex,i2___wmul@multiplier
 10292   001F84  6A02               	clrf	(i2___wmul@multiplier+1)^0,c
 10293   001F86  0E02               	movlw	2
 10294   001F88  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
 10295   001F8A  0E00               	movlw	0
 10296   001F8C  6E03               	movwf	i2___wmul@multiplicand^0,c
 10297   001F8E  EC3A  F013         	call	i2___wmul	;wreg free
 10298   001F92  0E29               	movlw	low _doubleBuffer
 10299   001F94  2401               	addwf	?i2___wmul^0,w,c
 10300   001F96  6E0B               	movwf	??_rwTMR0ISR^0,c
 10301   001F98  0E01               	movlw	high _doubleBuffer
 10302   001F9A  2002               	addwfc	(?i2___wmul+1)^0,w,c
 10303   001F9C  6E0C               	movwf	(??_rwTMR0ISR+1)^0,c
 10304   001F9E  503B               	movf	rwTMR0ISR@i^0,w,c
 10305   001FA0  240B               	addwf	??_rwTMR0ISR^0,w,c
 10306   001FA2  6ED9               	movwf	fsr2l,c
 10307   001FA4  503C               	movf	(rwTMR0ISR@i+1)^0,w,c
 10308   001FA6  200C               	addwfc	(??_rwTMR0ISR+1)^0,w,c
 10309   001FA8  6EDA               	movwf	fsr2h,c
 10310   001FAA  C00D  FFDF         	movff	rwTMR0ISR@character,indf2
 10311   001FAE                     
 10312                           ;main.c: 381:         i++;
 10313   001FAE  4A3B               	infsnz	rwTMR0ISR@i^0,f,c
 10314   001FB0  2A3C               	incf	(rwTMR0ISR@i+1)^0,f,c
 10315   001FB2                     
 10316                           ;main.c: 383:         if(i > 512)
 10317   001FB2  043B               	decf	rwTMR0ISR@i^0,w,c
 10318   001FB4  0E02               	movlw	2
 10319   001FB6  583C               	subwfb	(rwTMR0ISR@i+1)^0,w,c
 10320   001FB8  A0D8               	btfss	status,0,c
 10321   001FBA  EFE1  F00F         	goto	i2u229_41
 10322   001FBE  EFE3  F00F         	goto	i2u229_40
 10323   001FC2                     i2u229_41:
 10324   001FC2  EF00  F010         	goto	i2l3384
 10325   001FC6                     i2u229_40:
 10326   001FC6                     
 10327                           ;main.c: 384:         {;main.c: 386:             sampleIndex = !sampleIndex;
 10328   001FC6  5048               	movf	_sampleIndex^0,w,c
 10329   001FC8  B4D8               	btfsc	status,2,c
 10330   001FCA  EFE9  F00F         	goto	i2u230_41
 10331   001FCE  EFEC  F00F         	goto	i2u230_40
 10332   001FD2                     i2u230_41:
 10333   001FD2  0E01               	movlw	1
 10334   001FD4  EFED  F00F         	goto	i2u231_40
 10335   001FD8                     i2u230_40:
 10336   001FD8  0E00               	movlw	0
 10337   001FDA                     i2u231_40:
 10338   001FDA  6E48               	movwf	_sampleIndex^0,c
 10339                           
 10340                           ;main.c: 387:             writeIndex = !writeIndex;
 10341   001FDC  0100               	movlb	0	; () banked
 10342   001FDE  51E8               	movf	_writeIndex& (0+255),w,b
 10343   001FE0  B4D8               	btfsc	status,2,c
 10344   001FE2  EFF5  F00F         	goto	i2u232_41
 10345   001FE6  EFF8  F00F         	goto	i2u232_40
 10346   001FEA                     i2u232_41:
 10347   001FEA  0E01               	movlw	1
 10348   001FEC  EFF9  F00F         	goto	i2u233_40
 10349   001FF0                     i2u232_40:
 10350   001FF0  0E00               	movlw	0
 10351   001FF2                     i2u233_40:
 10352   001FF2  6FE8               	movwf	_writeIndex& (0+255),b
 10353                           
 10354                           ;main.c: 389:             write = 1;
 10355   001FF4  0E01               	movlw	1
 10356   001FF6  6FBE               	movwf	_write& (0+255),b
 10357                           
 10358                           ;main.c: 390:             i = 0;
 10359   001FF8  0E00               	movlw	0
 10360   001FFA  6E3C               	movwf	(rwTMR0ISR@i+1)^0,c
 10361   001FFC  0E00               	movlw	0
 10362   001FFE  6E3B               	movwf	rwTMR0ISR@i^0,c
 10363   002000                     i2l3384:
 10364                           
 10365                           ;main.c: 393:     TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 10366   002000  EC5E  F013         	call	_TMR0_ReadTimer	;wreg free
 10367   002004  0100               	movlb	0	; () banked
 10368   002006  51E6               	movf	_sampleRate& (0+255),w,b
 10369   002008  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 10370   00200A  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 10371   00200C  51E7               	movf	(_sampleRate+1)& (0+255),w,b
 10372   00200E  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 10373   002010  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 10374   002012  ECE2  F013         	call	i2_TMR0_WriteTimer	;wreg free
 10375   002016  0012               	return		;funcret
 10376   002018                     __end_of_rwTMR0ISR:
 10377                           	callstack 0
 10378                           
 10379 ;; *************** function i2___wmul *****************
 10380 ;; Defined at:
 10381 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10382 ;; Parameters:    Size  Location     Type
 10383 ;;  multiplier      2    0[COMRAM] unsigned int 
 10384 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;  product         2    4[COMRAM] unsigned int 
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  2    0[COMRAM] unsigned int 
 10389 ;; Registers used:
 10390 ;;		wreg, status,2, status,0, prodl, prodh
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10396 ;;      Params:         4       0       0       0       0       0       0
 10397 ;;      Locals:         2       0       0       0       0       0       0
 10398 ;;      Temps:          0       0       0       0       0       0       0
 10399 ;;      Totals:         6       0       0       0       0       0       0
 10400 ;;Total ram usage:        6 bytes
 10401 ;; Hardware stack levels used: 1
 10402 ;; This function calls:
 10403 ;;		Nothing
 10404 ;; This function is called by:
 10405 ;;		_rwTMR0ISR
 10406 ;; This function uses a non-reentrant model
 10407 ;;
 10408                           
 10409                           	psect	text50
 10410   002674                     __ptext50:
 10411                           	callstack 0
 10412   002674                     i2___wmul:
 10413                           	callstack 17
 10414   002674  5001               	movf	i2___wmul@multiplier^0,w,c
 10415   002676  0203               	mulwf	i2___wmul@multiplicand^0,c
 10416   002678  CFF3 F005          	movff	prodl,i2___wmul@product
 10417   00267C  CFF4 F006          	movff	prodh,i2___wmul@product+1
 10418   002680  5001               	movf	i2___wmul@multiplier^0,w,c
 10419   002682  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 10420   002684  50F3               	movf	243,w,c
 10421   002686  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10422   002688  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 10423   00268A  0203               	mulwf	i2___wmul@multiplicand^0,c
 10424   00268C  50F3               	movf	243,w,c
 10425   00268E  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10426   002690  C005  F001         	movff	i2___wmul@product,?i2___wmul
 10427   002694  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 10428   002698  0012               	return		;funcret
 10429   00269A                     __end_ofi2___wmul:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function i2_TMR0_WriteTimer *****************
 10433 ;; Defined at:
 10434 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;  timerVal        2    8[COMRAM] unsigned short 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      void 
 10441 ;; Registers used:
 10442 ;;		wreg, status,2
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10448 ;;      Params:         2       0       0       0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0       0       0
 10451 ;;      Totals:         2       0       0       0       0       0       0
 10452 ;;Total ram usage:        2 bytes
 10453 ;; Hardware stack levels used: 1
 10454 ;; This function calls:
 10455 ;;		Nothing
 10456 ;; This function is called by:
 10457 ;;		_rwTMR0ISR
 10458 ;; This function uses a non-reentrant model
 10459 ;;
 10460                           
 10461                           	psect	text51
 10462   0027C4                     __ptext51:
 10463                           	callstack 0
 10464   0027C4                     i2_TMR0_WriteTimer:
 10465                           	callstack 17
 10466   0027C4                     
 10467                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 10468   0027C4  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 10469   0027C6  6ED7               	movwf	215,c	;volatile
 10470   0027C8                     
 10471                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 10472   0027C8  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 10473   0027CC  0012               	return		;funcret
 10474   0027CE                     __end_ofi2_TMR0_WriteTimer:
 10475                           	callstack 0
 10476                           
 10477 ;; *************** function _TMR0_ReadTimer *****************
 10478 ;; Defined at:
 10479 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;		None
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;  readVal         2    4[COMRAM] unsigned short 
 10484 ;;  readValHigh     1    7[COMRAM] unsigned char 
 10485 ;;  readValLow      1    6[COMRAM] unsigned char 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  2    0[COMRAM] unsigned short 
 10488 ;; Registers used:
 10489 ;;		wreg, status,2
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10495 ;;      Params:         2       0       0       0       0       0       0
 10496 ;;      Locals:         4       0       0       0       0       0       0
 10497 ;;      Temps:          2       0       0       0       0       0       0
 10498 ;;      Totals:         8       0       0       0       0       0       0
 10499 ;;Total ram usage:        8 bytes
 10500 ;; Hardware stack levels used: 1
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_rwTMR0ISR
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           	psect	text52
 10509   0026BC                     __ptext52:
 10510                           	callstack 0
 10511   0026BC                     _TMR0_ReadTimer:
 10512                           	callstack 17
 10513   0026BC                     
 10514                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 10515   0026BC  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 10516                           
 10517                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 10518   0026C0  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 10519   0026C4                     
 10520                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 10521   0026C4  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 10522   0026C6  6E03               	movwf	??_TMR0_ReadTimer^0,c
 10523   0026C8  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 10524   0026CA  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 10525   0026CC  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 10526   0026D0                     
 10527                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 10528   0026D0  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 10529   0026D4  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 10530   0026D8  0012               	return		;funcret
 10531   0026DA                     __end_of_TMR0_ReadTimer:
 10532                           	callstack 0
 10533                           
 10534                           	psect	text53
 10535   000000                     __ptext53:
 10536                           	callstack 0
 10537   000000                     
 10538                           	psect	rparam
 10539   000000                     
 10540                           	psect	temp
 10541   00004B                     btemp:
 10542                           	callstack 0
 10543   00004B                     	ds	1
 10544   000000                     int$flags	set	btemp
 10545   000000                     wtemp8	set	btemp+1
 10546   000000                     ttemp5	set	btemp+1
 10547   000000                     ttemp6	set	btemp+4
 10548   000000                     ttemp7	set	btemp+8
 10549                           
 10550                           	psect	idloc
 10551                           
 10552                           ;Config register IDLOC0 @ 0x200000
 10553                           ;	unspecified, using default values
 10554   200000                     	org	2097152
 10555   200000  FF                 	db	255
 10556                           
 10557                           ;Config register IDLOC1 @ 0x200001
 10558                           ;	unspecified, using default values
 10559   200001                     	org	2097153
 10560   200001  FF                 	db	255
 10561                           
 10562                           ;Config register IDLOC2 @ 0x200002
 10563                           ;	unspecified, using default values
 10564   200002                     	org	2097154
 10565   200002  FF                 	db	255
 10566                           
 10567                           ;Config register IDLOC3 @ 0x200003
 10568                           ;	unspecified, using default values
 10569   200003                     	org	2097155
 10570   200003  FF                 	db	255
 10571                           
 10572                           ;Config register IDLOC4 @ 0x200004
 10573                           ;	unspecified, using default values
 10574   200004                     	org	2097156
 10575   200004  FF                 	db	255
 10576                           
 10577                           ;Config register IDLOC5 @ 0x200005
 10578                           ;	unspecified, using default values
 10579   200005                     	org	2097157
 10580   200005  FF                 	db	255
 10581                           
 10582                           ;Config register IDLOC6 @ 0x200006
 10583                           ;	unspecified, using default values
 10584   200006                     	org	2097158
 10585   200006  FF                 	db	255
 10586                           
 10587                           ;Config register IDLOC7 @ 0x200007
 10588                           ;	unspecified, using default values
 10589   200007                     	org	2097159
 10590   200007  FF                 	db	255
 10591                           
 10592                           	psect	config
 10593                           
 10594                           ; Padding undefined space
 10595   300000                     	org	3145728
 10596   300000  FF                 	db	255
 10597                           
 10598                           ;Config register CONFIG1H @ 0x300001
 10599                           ;	Oscillator Selection bits
 10600                           ;	FOSC = INTIO67, Internal oscillator block
 10601                           ;	4X PLL Enable
 10602                           ;	PLLCFG = OFF, Oscillator used directly
 10603                           ;	Primary clock enable bit
 10604                           ;	PRICLKEN = ON, Primary clock enabled
 10605                           ;	Fail-Safe Clock Monitor Enable bit
 10606                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10607                           ;	Internal/External Oscillator Switchover bit
 10608                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10609   300001                     	org	3145729
 10610   300001  28                 	db	40
 10611                           
 10612                           ;Config register CONFIG2L @ 0x300002
 10613                           ;	Power-up Timer Enable bit
 10614                           ;	PWRTEN = OFF, Power up timer disabled
 10615                           ;	Brown-out Reset Enable bits
 10616                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10617                           ;	Brown Out Reset Voltage bits
 10618                           ;	BORV = 190, VBOR set to 1.90 V nominal
 10619   300002                     	org	3145730
 10620   300002  1F                 	db	31
 10621                           
 10622                           ;Config register CONFIG2H @ 0x300003
 10623                           ;	Watchdog Timer Enable bits
 10624                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 10625                           ;	Watchdog Timer Postscale Select bits
 10626                           ;	WDTPS = 32768, 1:32768
 10627   300003                     	org	3145731
 10628   300003  3C                 	db	60
 10629                           
 10630                           ; Padding undefined space
 10631   300004                     	org	3145732
 10632   300004  FF                 	db	255
 10633                           
 10634                           ;Config register CONFIG3H @ 0x300005
 10635                           ;	CCP2 MUX bit
 10636                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 10637                           ;	PORTB A/D Enable bit
 10638                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 10639                           ;	P3A/CCP3 Mux bit
 10640                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 10641                           ;	HFINTOSC Fast Start-up
 10642                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 10643                           ;	Timer3 Clock input mux bit
 10644                           ;	T3CMX = PORTC0, T3CKI is on RC0
 10645                           ;	ECCP2 B output mux bit
 10646                           ;	P2BMX = PORTB5, P2B is on RB5
 10647                           ;	MCLR Pin Enable bit
 10648                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 10649   300005                     	org	3145733
 10650   300005  BF                 	db	191
 10651                           
 10652                           ;Config register CONFIG4L @ 0x300006
 10653                           ;	Stack Full/Underflow Reset Enable bit
 10654                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10655                           ;	Single-Supply ICSP Enable bit
 10656                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 10657                           ;	Extended Instruction Set Enable bit
 10658                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10659                           ;	Background Debug
 10660                           ;	DEBUG = OFF, Disabled
 10661   300006                     	org	3145734
 10662   300006  85                 	db	133
 10663                           
 10664                           ; Padding undefined space
 10665   300007                     	org	3145735
 10666   300007  FF                 	db	255
 10667                           
 10668                           ;Config register CONFIG5L @ 0x300008
 10669                           ;	Code Protection Block 0
 10670                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 10671                           ;	Code Protection Block 1
 10672                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 10673                           ;	Code Protection Block 2
 10674                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 10675                           ;	Code Protection Block 3
 10676                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 10677   300008                     	org	3145736
 10678   300008  0F                 	db	15
 10679                           
 10680                           ;Config register CONFIG5H @ 0x300009
 10681                           ;	Boot Block Code Protection bit
 10682                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10683                           ;	Data EEPROM Code Protection bit
 10684                           ;	CPD = OFF, Data EEPROM not code-protected
 10685   300009                     	org	3145737
 10686   300009  C0                 	db	192
 10687                           
 10688                           ;Config register CONFIG6L @ 0x30000A
 10689                           ;	Write Protection Block 0
 10690                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 10691                           ;	Write Protection Block 1
 10692                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 10693                           ;	Write Protection Block 2
 10694                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 10695                           ;	Write Protection Block 3
 10696                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 10697   30000A                     	org	3145738
 10698   30000A  0F                 	db	15
 10699                           
 10700                           ;Config register CONFIG6H @ 0x30000B
 10701                           ;	Configuration Register Write Protection bit
 10702                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10703                           ;	Boot Block Write Protection bit
 10704                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10705                           ;	Data EEPROM Write Protection bit
 10706                           ;	WRTD = OFF, Data EEPROM not write-protected
 10707   30000B                     	org	3145739
 10708   30000B  E0                 	db	224
 10709                           
 10710                           ;Config register CONFIG7L @ 0x30000C
 10711                           ;	Table Read Protection Block 0
 10712                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 10713                           ;	Table Read Protection Block 1
 10714                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 10715                           ;	Table Read Protection Block 2
 10716                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 10717                           ;	Table Read Protection Block 3
 10718                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10719   30000C                     	org	3145740
 10720   30000C  0F                 	db	15
 10721                           
 10722                           ;Config register CONFIG7H @ 0x30000D
 10723                           ;	Boot Block Table Read Protection bit
 10724                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10725   30000D                     	org	3145741
 10726   30000D  40                 	db	64
 10727                           tosu	equ	0xFFF
 10728                           tosh	equ	0xFFE
 10729                           tosl	equ	0xFFD
 10730                           stkptr	equ	0xFFC
 10731                           pclatu	equ	0xFFB
 10732                           pclath	equ	0xFFA
 10733                           pcl	equ	0xFF9
 10734                           tblptru	equ	0xFF8
 10735                           tblptrh	equ	0xFF7
 10736                           tblptrl	equ	0xFF6
 10737                           tablat	equ	0xFF5
 10738                           prodh	equ	0xFF4
 10739                           prodl	equ	0xFF3
 10740                           indf0	equ	0xFEF
 10741                           postinc0	equ	0xFEE
 10742                           postdec0	equ	0xFED
 10743                           preinc0	equ	0xFEC
 10744                           plusw0	equ	0xFEB
 10745                           fsr0h	equ	0xFEA
 10746                           fsr0l	equ	0xFE9
 10747                           wreg	equ	0xFE8
 10748                           indf1	equ	0xFE7
 10749                           postinc1	equ	0xFE6
 10750                           postdec1	equ	0xFE5
 10751                           preinc1	equ	0xFE4
 10752                           plusw1	equ	0xFE3
 10753                           fsr1h	equ	0xFE2
 10754                           fsr1l	equ	0xFE1
 10755                           bsr	equ	0xFE0
 10756                           indf2	equ	0xFDF
 10757                           postinc2	equ	0xFDE
 10758                           postdec2	equ	0xFDD
 10759                           preinc2	equ	0xFDC
 10760                           plusw2	equ	0xFDB
 10761                           fsr2h	equ	0xFDA
 10762                           fsr2l	equ	0xFD9
 10763                           status	equ	0xFD8

Data Sizes:
    Strings     1599
    Constant    30
    Data        10
    BSS         1081
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     54      74
    BANK0           160     90     137
    BANK1           256     41      41
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_107(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), STR_80(CODE[2]), doubleBuffer(BIGRAM[1024]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), STR_80(CODE[2]), doubleBuffer(BIGRAM[1024]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1925$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1925$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1965$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), STR_80(CODE[2]), doubleBuffer(BIGRAM[1024]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> stoa@nuls(COMRAM[7]), ?_printf(BANK0[2]), STR_80(CODE[2]), doubleBuffer(BIGRAM[1024]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 72
		 -> STR_104(CODE[3]), STR_103(CODE[3]), STR_102(CODE[2]), STR_101(CODE[4]), 
		 -> STR_100(CODE[6]), STR_99(CODE[3]), STR_98(CODE[3]), STR_97(CODE[2]), 
		 -> STR_96(CODE[3]), STR_95(CODE[2]), STR_94(CODE[4]), STR_93(CODE[28]), 
		 -> STR_92(CODE[26]), STR_91(CODE[27]), STR_90(CODE[3]), STR_89(CODE[17]), 
		 -> STR_88(CODE[20]), STR_87(CODE[37]), STR_86(CODE[22]), STR_85(CODE[33]), 
		 -> STR_84(CODE[58]), STR_83(CODE[3]), STR_82(CODE[47]), STR_81(CODE[37]), 
		 -> STR_79(CODE[5]), STR_78(CODE[25]), STR_77(CODE[20]), STR_76(CODE[72]), 
		 -> STR_75(CODE[50]), STR_74(CODE[22]), STR_73(CODE[33]), STR_72(CODE[58]), 
		 -> STR_71(CODE[3]), STR_70(CODE[68]), STR_69(CODE[57]), STR_68(CODE[17]), 
		 -> STR_67(CODE[7]), STR_66(CODE[29]), STR_65(CODE[25]), STR_64(CODE[25]), 
		 -> STR_63(CODE[19]), STR_62(CODE[11]), STR_61(CODE[6]), STR_60(CODE[6]), 
		 -> STR_59(CODE[10]), STR_58(CODE[16]), STR_57(CODE[11]), STR_56(CODE[6]), 
		 -> STR_55(CODE[6]), STR_54(CODE[10]), STR_53(CODE[15]), STR_52(CODE[23]), 
		 -> STR_51(CODE[3]), STR_50(CODE[5]), STR_49(CODE[2]), STR_48(CODE[5]), 
		 -> STR_47(CODE[17]), STR_46(CODE[43]), STR_45(CODE[3]), STR_44(CODE[5]), 
		 -> STR_43(CODE[2]), STR_42(CODE[5]), STR_41(CODE[17]), STR_40(CODE[15]), 
		 -> STR_39(CODE[3]), STR_38(CODE[5]), STR_37(CODE[2]), STR_36(CODE[5]), 
		 -> STR_35(CODE[19]), STR_34(CODE[20]), STR_33(CODE[28]), STR_32(CODE[3]), 
		 -> STR_31(CODE[5]), STR_30(CODE[2]), STR_29(CODE[5]), STR_28(CODE[19]), 
		 -> STR_27(CODE[20]), STR_26(CODE[30]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[9]), STR_22(CODE[52]), STR_21(CODE[32]), STR_20(CODE[44]), 
		 -> STR_19(CODE[50]), STR_18(CODE[52]), STR_17(CODE[52]), STR_16(CODE[24]), 
		 -> STR_15(CODE[44]), STR_14(CODE[37]), STR_13(CODE[52]), STR_12(CODE[24]), 
		 -> STR_11(CODE[52]), STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), 
		 -> STR_7(CODE[15]), STR_6(CODE[54]), STR_5(CODE[5]), STR_4(CODE[42]), 
		 -> STR_3(CODE[9]), STR_2(CODE[18]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> doubleBuffer(BIGRAM[1024]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> doubleBuffer(BIGRAM[1024]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> doubleBuffer(BIGRAM[1024]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rwTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> rwTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->___wmul
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _printf->_vfprintf
    _vfpfcnvrt->_stoa
    _xtoa->_pad
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _stoa->_fputc
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_rwTMR0ISR
    _rwTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0  108580
                                             88 BANK0      2     2      0
                                              0 BANK1     41    41      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                    _TMR1_WriteTimer
                             ___wmul
                      _hexDumpBuffer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   34536
                                             78 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     484
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0     124
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6    1008
                                             25 COMRAM     8     2      6
                  _SPI2_ExchangeByte
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6     648
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      96
                                             20 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   34102
                                             78 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   33746
                                             66 BANK0     12     2     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24377
                                             52 COMRAM     2     2      0
                                             60 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           27    21      6   23859
                                             35 BANK0     25    19      6
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    5889
                                              0 BANK0     35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6555
                                              0 BANK0     32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    5143
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2406
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             19 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                22    18      4    2940
                                             30 COMRAM    22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2349
                                             30 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1906
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1844
                                             25 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                             19 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     852
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          6     6      0     373
                                             13 COMRAM     6     6      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     373
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _rwTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _rwTMR0ISR                                           3     3      0     373
                                             10 COMRAM     3     3      0
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
                           i2___wmul
 ---------------------------------------------------------------------------------
 (14) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _fputc
           _isdigit
           _stoa
             _fputc
             _strlen
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
           _xtoa
             _pad
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
     ___wmul (ARG)
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _TMR1_WriteTimer
   ___wmul
   _hexDumpBuffer
     _printf
   _printf

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _rwTMR0ISR *
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)
       i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     400      31       66.7%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     29      29       6       16.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5A      89       4       85.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     36      4A       1       78.7%
BITBIGSFRllllhl     26      0       0      29        0.0%
BITBIGSFRlllhll     19      0       0      27        0.0%
BITBIGSFRhhl        19      0       0      16        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRllllhh      9      0       0      28        0.0%
BITBIGSFRllhhll      7      0       0      19        0.0%
BITBIGSFRllhlhh      7      0       0      21        0.0%
BITBIGSFRllhhll      7      0       0      20        0.0%
BITBIGSFRlllhlh      6      0       0      26        0.0%
BITBIGSFRllhllh      6      0       0      22        0.0%
BITBIGSFRlllhh       6      0       0      25        0.0%
BITBIGSFRllhllh      5      0       0      23        0.0%
BITBIGSFRllhlll      2      0       0      24        0.0%
BITBIGSFRllhhh       1      0       0      18        0.0%
BITBIGSFRlh          1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FC      30        0.0%
DATA                 0      0     4FC      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 14 01:56:33 2023

                                            l21 257A                                              l33 2790  
                                            l43 279A                                              l73 26BA  
                                            l76 2702                                              l79 2710  
                                  fp__rwTMR0ISR 0000                            SDCARD_ReadBlock@addr 0015  
                           ___wmul@multiplicand 0016                                 _timer0ReloadVal 0043  
                                hexDumpBuffer@i 00B6                                  hexDumpBuffer@j 00B2  
                                           l130 276A                                             l122 24D4  
                                           l210 277C                                             l220 2718  
                                           l301 26F4                                             l222 2726  
                                           l214 2284                                             l143 264C  
                                           l223 272A                                             l217 27D4  
                                           l146 2744                                             l170 27A4  
                                           l139 2626                                             l155 27C2  
                                           l315 25FC                                             l149 2756  
                                           l173 27B8                                             l182 27D0  
                                           l167 27AE                                             l504 0A8A  
                                           l432 00B8                                             l346 2740  
                                           l610 15E2                                             l450 0328  
                                           l443 0280                                             l613 2672  
                                           l277 25A8                                             l453 03FC  
                                           l462 0566                                             l455 047A  
                                           l481 07D0                                             l538 1978  
                                           l490 08D8                                             l467 059C  
                                           l572 215A                                             l557 1AB8  
                                           l469 063E                                             l582 2310  
                                           l478 0778                                             l592 250C  
                                           l584 2312                                             l587 24D6  
                                           l599 1512                                 _timer1ReloadVal 003D  
                                           _pad 2018                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                   main@address 0123                                            l1051 1CD2  
                                          l1061 1E80                                            l1320 205C  
                                          l1058 1CF2                                            l1323 209E  
                                          l1068 1EA0                                            l1341 1F68  
                                          l1325 20C0                                            l1350 183A  
                                          l1503 240C                                            l1336 1F06  
                                          l1418 11F8                                            l1339 1F48  
                                          l1507 1DD0                                            l1371 123A  
                                          l1291 2624                                            l1460 1BFA  
                                          l1364 1940                                            l1348 1832  
                                          l1438 23BE                                            l1463 1C02  
                                          l1359 18F8                                            l4200 1CBA  
                                          l1384 161C                                            l5000 026A  
                                          l1369 1232                                            l1466 25D4  
                                          l1474 2452                                            l4202 1CCC  
                                          l4210 1E0C                                            l1386 1624  
                                          l5010 029E                                            l5002 0286  
                                          l1379 13F6                                            l4300 1802  
                                          l4212 1E1A                                            l4204 1DD2  
                                          l4220 2018                                            l5100 073A  
                                          l5020 02D2                                            l5012 02A4  
                                          l4150 2752                                            l4310 1874  
                                          l4302 1810                                            l4214 1E48  
                                          l4206 1DF0                                            l4230 2068  
                                          l4222 2026                                            l1398 17B0  
                                          l5110 0798                                            l5102 0756  
                                          l5030 03CA                                            l5022 02F6  
                                          l5014 02BE                                            l4152 27BC  
                                          l4160 218A                                            l4240 23CC  
                                          l4320 18DA                                            l4312 1892  
                                          l4216 1E68                                            l4208 1DF8  
                                          l4232 207C                                            l4224 203A  
                                          l4400 1730                                            l5200 0ACC  
                                          l5112 07A6                                            l5104 076A  
                                          l5040 049A                                            l5032 03D8  
                                          l5024 0304                                            l5016 02C2  
                                          l5008 0290                                            l1489 21F0  
                                          l1497 2496                                            l4162 21A8  
                                          l4154 215C                                            l4242 23D0  
                                          l4314 189E                                            l4306 185C  
                                          l4218 1E7A                                            l4170 2460  
                                          l4234 2080                                            l4226 2048  
                                          l4330 11FA                                            l4402 174E  
                                          l5210 0B90                                            l5202 0ADE  
                                          l5114 07AC                                            l5106 0776  
                                          l5050 0514                                            l5042 04A8  
                                          l5034 03EE                                            l5026 031A  
                                          l5018 02C8                                            l4260 244C  
                                          l4252 240E                                            l4420 1AEE  
                                          l4412 1ABA                                            l4148 2744  
                                          l4164 21DE                                            l4156 216E  
                                          l4244 2400                                            l4324 190A  
                                          l4316 18D2                                            l4308 1870  
                                          l4172 2472                                            l4236 20AC  
                                          l4228 2054                                            l4340 126C  
                                          l4332 1208                                            l4404 1768  
                                          l4500 0F04                                            l5204 0B68  
                                          l5140 0884                                            l5132 0852  
                                          l5124 07EA                                            l5116 07BE  
                                          l5108 0786                                            l5060 053E  
                                          l5052 0522                                            l5044 04B6  
                                          l5036 047C                                            l5028 03A6  
                                          l4254 2412                                            l4422 1B22  
                                          l4414 1ACE                                            l4158 2180  
                                          l4270 1ECC                                            l4238 23C0  
                                          l4326 191E                                            l4318 18D6  
                                          l4190 1C4A                                            l4182 1C04  
                                          l4174 2476                                            l4350 12FE  
                                          l4342 1274                                            l4334 120A  
                                          l4406 1782                                            l4510 0FA8  
                                          l4502 0F3E                                            l5230 0C08  
                                          l5206 0B7C                                            l5150 08D6  
                                          l5142 0888                                            l5134 086E  
                                          l5126 0848                                            l5118 07E0  
                                          l5070 059E                                            l5062 0550  
                                          l5054 0534                                            l5046 04D0  
                                          l5038 0498                                            l4176 264E  
                                          l4248 25AA                                            l4256 2426  
                                          l4424 1B2A                                            l4280 1F12  
                                          l4272 1EDA                                            l4264 1EA2  
                                          l4328 1922                                            l4192 1C58  
                                          l4184 1C10                                            l4168 2454  
                                          l4360 13C8                                            l4344 127A  
                                          l4352 1362                                            l4336 1224  
                                          l4408 1790                                            l4512 0FB8  
                                          l4504 0F62                                            l4600 27CE  
                                          l5240 0C4A                                            l5232 0C0E  
                                          l5224 0BC0                                            l5216 0B9A  
                                          l5208 0B80                                            l5160 091E  
                                          l5152 08E6                                            l5144 089A  
                                          l5136 0870                                            l5080 0698  
                                          l5072 064E                                            l5064 0554  
                                          l5048 04DE                                            l4178 266A  
                                          l4258 2448                                            l4434 1B9C  
                                          l4426 1B32                                            l4418 1AD2  
                                          l4282 1F26                                            l4274 1EEC  
                                          l4266 1EB4                                            l4290 17C4  
                                          l4450 1D2A                                            l4194 1C6A  
                                          l4186 1C2E                                            l4354 1376  
                                          l4362 13D6                                            l4346 12F2  
                                          l4338 1262                                            l4370 15F4  
                                          l4522 107C                                            l4530 10E0  
                                          l4514 0FD4                                            l4506 0F94  
                                          l4610 25A6                                            l4602 276C  
                                          l5250 0C90                                            l5242 0C4E  
                                          l5234 0C20                                            l5226 0BF0  
                                          l5218 0BB6                                            l5170 0994  
                                          l5162 0930                                            l5154 08F8  
                                          l5146 08B6                                            l5138 0880  
                                          l5090 06C2                                            l5082 06A8  
                                          l5074 068E                                            l5066 0568  
                                          l4436 1BCC                                            l4428 1B66  
                                          l4284 1F2A                                            l4268 1EC0  
                                          l4292 17CC                                            l4460 1DAC  
                                          l4452 1D38                                            l4444 1CF4  
                                          l4196 1C98                                            l4188 1C36  
                                          l4356 1394                                            l4348 12F8  
                                          l4380 1664                                            l4372 160E  
                                          l4540 1176                                            l4532 1104  
                                          l4516 0FF0                                            l4612 26F6  
                                          l4604 2778                                            l4620 26EE  
                                          l4700 25EE                                            l5260 0CD6  
                                          l5252 0C9E                                            l5244 0C60  
                                          l5180 09E2                                            l5172 099C  
                                          l5164 0952                                            l5156 0906  
                                          l5148 08CA                                            l5092 06D4  
                                          l5084 06AA                                            l5068 0584  
                                          l4438 1BDE                                            l4286 1F56  
                                          l4278 1EFE                                            l4294 17DE  
                                          l4454 1D54                                            l4446 1D1E  
                                          l4198 1CB8                                            l4358 13AE  
                                          l4390 169A                                            l4382 166A  
                                          l4374 164C                                            l4366 15E4  
                                          l4542 1186                                            l4534 113A  
                                          l4518 104C                                            l4470 0DE8  
                                          l4550 11D0                                            l4614 272C  
                                          l4630 24D0                                            l4622 2498  
                                          l4606 277A                                            l4702 25F4  
                                          l5262 0CE8                                            l5254 0CAC  
                                          l5246 0C64                                            l5238 0C38  
                                          l5190 0A98                                            l5182 0A36  
                                          l5174 09B4                                            l5166 095A  
                                          l5158 090C                                            l5086 06BA  
                                          ?_pad 0026                                            l4632 2714  
                                          l4296 17E6                                            l4288 17B2  
                                          l4456 1D70                                            l4392 16AA  
                                          l4384 167A                                            l4376 1656  
                                          l4368 15F2                                            l4536 115E  
                                          l4528 10AC                                            l4472 0DEC  
                                          l4464 0DAA                                            l4720 19B4  
                                          l4712 1950                                            l4800 20EE  
                                          l4624 24AC                                            l4608 257C  
                                          l4616 26DA                                            l4640 2788  
                                          l4704 25F8                                            l5256 0CBA  
                                          l5248 0C82                                            l5192 0AAA  
                                          l5184 0A68                                            l5176 09B8  
                                          l5168 0972                                            l5088 06BE  
                                          l4298 17FA                                            l4458 1D82  
                                          l4394 16B0                                            l4386 168A  
                                          l4378 165E                                            l4538 116C  
                                          l4546 11BE                                            l4490 0EBA  
                                          l4482 0E1A                                            l4474 0DFA  
                                          l4466 0DCE                                            l4634 25FE  
                                          l4730 19E0                                            l4722 19B6  
                                          l4714 1956                                            l4706 1946  
                                          l4810 2122                                            l4802 2104  
                                          l4570 27A6                                            l4626 24B8  
                                          l4618 26E6                                            l4650 26A6  
                                          l4642 278C                                            l5258 0CC8  
                                          l5186 0A7C                                            l5178 09D0  
                                          l5194 0AB0                                            l5098 06DC  
                                          l5266 0CFE                                            l4660 2758  
                                          l4396 16B6                                            l4388 1696  
                                          l4492 0EC8                                            l4476 0DFC  
                                          l4484 0E4E                                            l4468 0DDC  
                                          l4580 2398                                            l4636 2608  
                                          l4740 19FE                                            l4732 19E6  
                                          l4724 19C6                                            l4716 195C  
                                          l4812 2136                                            l4804 211A  
                                          l4572 279C                                            l4628 24C4  
                                          l4652 26AA                                            l4644 269A  
                                          l4820 13F8                                            l5196 0AC4  
                                          l5188 0A88                                            l5268 0D94  
                                          l4670 2646                                            l4398 1714  
                                          l5390 10CA                                            l4494 0ED6  
                                          l4486 0E60                                            l4478 0E0E  
                                          l4582 23B4                                            l4750 1A26  
                                          l4742 1A04                                            l4734 19EC  
                                          l4726 19D8                                            l4718 197A  
                                          l4910 24E0                                            l4814 213A  
                                          l4902 22E8                                            l4574 27B0  
                                          l4590 2550                                            l4654 26AE  
                                          l4646 269E                                            l4830 1422  
                                          l4822 1406                                            l5198 0AC8  
                                          l4672 264A                                            l4664 2626  
                                          l5392 1B50                                            l4496 0EF6  
                                          l4488 0E84                                            l4576 236E  
                                          l4760 1A56                                            l4752 1A36  
                                          l4744 1A0A                                            l4736 19F2  
                                          l4728 19DA                                            l4920 24F8  
                                          l4912 24E2                                            l4816 214C  
                                          l4904 22FA                                            l4680 2236  
                                          l4568 2792                                            l4592 2566  
                                          l4656 26B2                                            l4648 26A2  
                                          l4840 148A                                            l4832 1440  
                                          l4666 2634                                            l4578 237A  
                                          l4770 1A74                                            l4762 1A5C  
                                          l4754 1A48                                            l4746 1A14  
                                          l4738 19F8                                            l4922 250A  
                                          l4914 24F2                                            l4818 2158  
                                          l4906 22FE                                            l4690 27D2  
                                          l4682 223A                                            l4594 2568  
                                          l4586 2546                                            l4658 26B6  
                                          l4842 149C                                            l4850 14F0  
                                          l4834 144C                                            l5386 0D16  
                                          l4668 2638                                            l5388 0E40  
                                          l4780 1AA6                                            l4772 1A7A  
                                          l4764 1A62                                            l4756 1A4A  
                                          l4748 1A16                                            l4908 24D8  
                                          l4684 2258                                            l4676 21F4  
                                          l4596 256A                                            l4588 2548  
                                          l4692 25D6                                            l4860 155A  
                                          l4852 1506                                            l4844 14B8  
                                          l4836 1460                                            l4828 1410  
                                          l4774 1A84                                            l4766 1A68  
                                          l4758 1A50                                            l4790 20D0  
                                          l4782 20C2                                            l4686 2282  
                                          l4678 2202                                            l4598 2576  
                                          l4694 25E4                                            l4862 156C  
                                          l4870 15C0                                            l4854 1536  
                                          l4846 14C8                                            l4838 147E  
                                          l4950 0088                                            l4776 1A86  
                                          l4768 1A6E                                            l4792 20D6  
                                          l4784 20C2                                            l4880 228E  
                                          l4696 25E6                                            l4872 15D6  
                                          l4864 1588                                            l4856 153C  
                                          l4848 14EA                                            l4960 00B6  
                                          l4952 00A0                                            l4778 1A96  
                                          l4794 20DC                                            l4786 20C4  
                                          l4890 22AC                                            l4882 2294  
                                          l4874 2286                                            l4698 25EA  
                                          l4866 1598                                            l4858 154E  
                                          l4970 00DA                                            l4962 00C6  
                                          l4954 00A4                                            l4796 20E2  
                                          l4788 20CA                                            l4892 22B2  
                                          l4884 229A                                            l4876 2286  
                                          l4868 15BA                                            l4980 0118  
                                          l4972 00E0                                            l4964 00D2  
                                          l4956 00A8                                            l4948 0062  
                                          l4798 20E8                                            l4894 22C8  
                                          l4886 22A0                                            l4878 2288  
                                          l4990 024C                                            l4982 012C  
                                          l4974 00EE                                            l4966 00D4  
                                          l4958 00AA                                            l4896 22E0  
                                          l4888 22A6                                            l4984 0134  
                                          l4976 00FC                                            l4968 00D6  
                                          l4986 014C                                            l4978 010A  
                                          l4996 0256                                            l4988 023C  
                                          l4998 0264                                            STR_1 7F94  
                                          STR_2 7F12                                            STR_3 7FB6  
                                          STR_4 7C72                                            STR_5 7FE2  
                                          STR_6 7ABE                                            STR_7 7F76  
                                          STR_8 7FC8                                            STR_9 7E9B  
                                          u3000 21DE                                            u3001 21DA  
                                          u3010 2496                                            u3011 2492  
                                          u3100 2048                                            u3021 1C0A  
                                          u3101 2044                                            _LATA 000F89  
                                          u3030 1C2E                                            u3110 209E  
                                          _LATB 000F8A                                            u3031 1C2A  
                                          u3111 209A                                            _LATC 000F8B  
                                          u3200 1EDA                                            u3040 1C58  
                                          u3120 20AC                                            u3201 1ED6  
                                          u3041 1C54                                            u3121 20A8  
                                          u3210 1EFA                                            u3130 23F0  
                                          u3050 1C98                                            u4010 0096  
                                          u3211 1EF6                                            u3051 1C94  
                                          u3220 1F48                                            u3140 2400  
                                          u3300 18BE                                            u3060 1DF0  
                                          u4100 06BA                                            u4020 00C6  
                                          u3221 1F44                                            u3141 23FC  
                                          u3061 1DEC                                            u4101 06B6  
                                          u4021 00C2                                            u3150 25CE  
                                          u3230 1F56                                            u3310 18F8  
                                          u3070 1E1A                                            u4110 06D4  
                                          u4030 012C                                            u3151 25C8  
                                          u3231 1F52                                            u3311 18F4  
                                          u3071 1E16                                            u4111 06D0  
                                          u4031 0128                                            u3160 25D0  
                                          u3320 1906                                            u3080 1E48  
                                          u3400 13D6                                            u4200 0952  
                                          u4120 076A                                            u4040 0280  
                                          u3137 23E6                                            u3321 1902  
                                          u3241 17BC                                            u3081 1E44  
                                          u3401 13D2                                            u4201 094E  
                                          u4121 0766                                            u4041 027C  
                                          u3170 2426                                            u3330 1940  
                                          u3250 17DE                                            u3090 2026  
                                          u3410 15F2                                            u4210 0994  
                                          u4130 0786                                            u4050 02BA  
                                          u3171 2422                                            u3331 193C  
                                          u3307 18B4                                            u3251 17DA  
                                          u3091 2022                                            u3411 15EE  
                                          u4211 0990                                            u4131 0782  
                                          u4051 02B6                                            u3180 2448  
                                          u3500 1AEE                                            u3260 1810  
                                          u3340 1208                                            u3420 160E  
                                          u4300 0C60                                            u4220 09E2  
                                          u4140 07BE                                            u4060 02F6  
                                          u3181 2444                                            u3501 1AEA  
                                          u3261 180C                                            u3341 1204  
                                          u3421 160A                                            u4301 0C5C  
                                          u4221 09DE                                            u4141 07BA  
                                          u4061 02F2                                            u3510 1B1E  
                                          u3190 1EB4                                            u3270 182E  
                                          u3350 1224                                            u3430 167A  
                                          u4230 0A7C                                            u4150 0880  
                                          u4070 03CA                                            u3511 1B1A  
                                          u3191 1EB0                                            u3271 182A  
                                          u3351 1220                                            u3431 1676  
                                          u4231 0A78                                            u4151 087C  
                                          u4071 03C6                                            u3520 1BCC  
                                          u3280 1858                                            u3360 1376  
                                          u3440 16EE                                            u3600 0E60  
                                          u4240 0A98                                            u4160 089A  
                                          u4080 0566                                            u3521 1BC8  
                                          u3281 1854                                            u3361 1372  
                                          u3601 0E5C                                            u4241 0A94  
                                          u4161 0896                                            u4081 0562  
                                          u3530 1BDE                                            u3290 1892  
                                          u3370 1394                                            u3450 1730  
                                          u3610 0E84                                            u4250 0AC4  
                                          u4170 08CA                                            u4090 059C  
                                          u3531 1BDA                                            u3291 188E  
                                          u3371 1390                                            u3451 172C  
                                          u3611 0E80                                            u4251 0AC0  
                                          u4171 08C6                                            u4091 0598  
                                          u3540 1D1E                                            u3380 13AE  
                                          u3460 174E                                            u3620 0EC8  
                                          u3700 23B4                                            u4260 0B7C  
                                          u4180 08E6                                            u3541 1D1A  
                                          u3381 13AA                                            u3461 174A  
                                          u3445 16DC                                            u3621 0EC4  
                                          u3701 23B0                                            u4261 0B78  
                                          u4181 08E2                                            u3550 1D54  
                                          u3390 13C8                                            u3470 1768  
                                          u3630 0F3E                                            u3710 2710  
                                          u4270 0C04                                            u4190 091E  
                                          u3551 1D50                                            u3391 13C4  
                                          u3471 1764                                            u3631 0F3A  
                                          u3711 270C                                            u4271 0C00  
                                          u4191 091A                                            u3720 2726  
                                          u3560 1D70                                            u3480 1782  
                                          u3640 0F62                                            u3800 1A26  
                                          u4280 0C20                                            u3721 2722  
                                          u3561 1D6C                                            u3481 177E  
                                          u3641 0F5E                                            u3801 1A22  
                                          u4281 0C1C                                            u3730 2768  
                                          u3570 1D82                                            u3490 1790  
                                          u3650 0FD4                                            u3810 1A36  
                                          u4290 0C34                                            u3731 2762  
                                          u3571 1D7E                                            u3491 178C  
                                          u3651 0FD0                                            u3811 1A32  
                                          u4291 0C30                                            u3740 2634  
                                          u3580 1DAC                                            u3660 0FF0  
                                          u3820 1A96                                            u3900 147E  
                                          u3741 2630                                            u3581 1DA8  
                                          u3661 0FEC                                            u3821 1A92  
                                          u3901 147A                                            u3750 2646  
                                          u3670 1104                                            u3590 0DCE  
                                          u3830 1AA6                                            u3910 14B8  
                                          u3751 2642                                            u3671 1100  
                                          u3591 0DCA                                            u3831 1AA2  
                                          u3911 14B4                                            u3736 276A  
                                          u2960 2752                                            u3680 113A  
                                          u3840 2104                                            u3760 2202  
                                          u3920 1506                                            u2961 274E  
                                          u3681 1136                                            u3841 2100  
                                          u3761 21FE                                            u3921 1502  
                                          u2970 216E                                            u3690 115E  
                                          u3850 211A                                            u3770 25E4  
                                          u3930 154E                                            u2971 216A  
                                          u3691 115A                                            u3851 2116  
                                          u3771 25E0                                            u3931 154A  
                                          u2980 2180                                            u3780 1978  
                                          u3860 214C                                            u3940 1588  
                                          u2981 217C                                            u3781 1974  
                                          u3861 2148                                            u3941 1584  
                                          i2l30 26D8                                            u2990 21A8  
                                          u3790 19C6                                            u3950 15D6  
                                          u3870 1422                                            u2991 21A4  
                                          u3791 19C2                                            u3951 15D2  
                                          u3871 141E                                            i2l40 2544  
                                          u3960 22C8                                            u3880 1440  
                                          i2l33 27CC                                            u3961 22C4  
                                          u3881 143C                                            u3970 2310  
                                          u3890 1460                                            u3971 230C  
                                          u3891 145C                                            u3980 24F2  
                                          u3981 24EE                                            i2l46 27D6  
                                          _TMR1 000FCE                                            _WPUB 000F61  
                                 _EUSART1_Write 2742                                            _dbuf 00BF  
                                          _atoi 1ABA                                            _ctoa 1EA2  
                                          _main 0062                              main@currentAddress 011F  
                                 ?_EUSART1_Read 0001                                            _prec 0039  
                                          pad@i 002D                                            pad@p 002A  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002F  
                                          fsr2l 000FD9                                            _stoa 17B2  
                                          btemp 004B                                            _utoa 11FA  
                                          _xtoa 15E4                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00B0  
                                          start 005E                                    ___param_bank 000000  
                                         ??_pad 002C                         __end_of_TMR0_Initialize 257C  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 2712  
                                         ?_atoi 001A                                     ?_SPI2_Close 0001  
                                         ?_ctoa 001F                                           ?_main 0001  
                                         STR_10 7E3E                                           STR_11 7AF4  
                                         STR_12 7E26                                           STR_20 7C1B  
                                         STR_13 7AF4                                           STR_21 7D2C  
                                         STR_22 7AC0                                           STR_30 7D85  
                                         STR_14 7CE6                                           STR_31 7FEC  
                                         STR_23 7FBF                                           STR_15 7BEF  
                                         STR_24 7FF7                                           STR_32 7F73  
                                         STR_40 7F67                                           STR_16 7E56  
                                         STR_25 7FF7                                           STR_41 7F46  
                                         STR_33 7DA3                                           STR_17 7B28  
                                         STR_18 7AF4                                           STR_50 7FEC  
                                         STR_42 7FEC                                           STR_34 7EC4  
                                         STR_26 7D4C                                           STR_51 7F73  
                                         STR_35 7EFF                                           STR_43 7D85  
                                         STR_27 7EB0                                           STR_19 7B5C  
                                         STR_60 7D81                                           STR_44 7FEC  
                                         STR_36 7FEC                                           STR_28 7EFF  
                                         STR_52 7E6E                                           STR_45 7F73  
                                         STR_61 7FDC                                           STR_37 7D85  
                                         STR_29 7FEC                                           STR_53 7F85  
                                         STR_62 7FA1                                           STR_38 7FEC  
                                         STR_54 7FAC                                           STR_46 7C47  
                                         STR_70 7A07                                           STR_39 7F73  
                                         STR_71 7B25                                           STR_47 7F46  
                                         STR_55 7D81                                           STR_63 7EEC  
                                         STR_80 7FF7                                           STR_48 7FEC  
                                         STR_56 7FDC                                           STR_64 7DF4  
                                         STR_72 7A4B                                           STR_65 7DF4  
                                         STR_49 7D85                                           STR_57 7FA1  
                                         STR_73 7D0B                                           STR_81 7C9C  
                                         STR_90 7C99                                           STR_58 7F57  
                                         STR_74 7E85                                           STR_66 7D6A  
                                         STR_82 7BC0                                           STR_83 7B25  
                                         STR_59 7FAC                                           STR_67 7FCF  
                                         STR_91 7DBF                                           STR_75 7B8E  
                                         STR_84 7A4B                                           STR_68 7F35  
                                         STR_92 7DDA                                           STR_76 79BF  
                                         STR_85 7D0B                                           STR_77 7ED8  
                                         STR_93 7D87                                           STR_69 7A85  
                                         STR_86 7E85                                           STR_94 7FF5  
                                         STR_78 7E0D                                           STR_95 7F55  
                                         STR_79 7FE7                                           STR_87 7CC1  
                                         STR_88 7ED8                                           STR_96 7F54  
                                         STR_97 7FFC                                           STR_89 7F24  
                                         STR_98 7FF9                                           STR_99 7F73  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_stoa 001F  
                                         ?_utoa 0060                                           _T0CON 000FD5  
                               __end_of___lodiv 1CF4                                           ?_xtoa 0060  
                                         _T1CON 000FCD                                 __end_of___lomod 1EA2  
                               _TMR0_WriteTimer 2788                                           i2l613 2698  
                                         i2l189 0042                                           i2l527 2016  
                                  vfpfcnvrt@fmt 0085                                           _TMR0H 000FD7  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                     ?_TMR0_SetInterruptHandler 0014                                __end_of_TMR0_ISR 2546  
                                         _flags 0047                                           _fputc 215C  
                                         _fputs 2454                                 __end_of_isdigit 25D6  
                                         atoi@n 0021                                           pad@fp 0026  
                                         atoi@s 001A                                           _width 0037  
                                         ctoa@c 0021                                           _putch 27BA  
                                         ctoa@l 0023                                           ctoa@w 0025  
                                         main@i 0127                                           main@j 011D  
                                         _write 00BE                                 __end_of_isspace 2454  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 26F6  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                __end_ofi2___wmul 269A  
                                ??_EUSART1_Read 0014                                           plusw1 000FE3  
                                         plusw2 000FDB                                           stoa@i 002B  
                                         stoa@l 0033                                           stoa@p 0031  
                                         stoa@s 0021                                           stoa@w 002D  
                                         ttemp5 004C                                           ttemp6 004F  
                                         ttemp7 0053                                           utoa@d 0062  
                                         utoa@i 007E                                           utoa@n 0076  
                                         utoa@p 0072                                           utoa@w 0074  
                                         status 000FD8                                           wtemp8 004C  
                                         xtoa@c 0082                                           xtoa@d 0062  
                                         xtoa@i 0080                                           xtoa@n 0078  
                                         xtoa@p 0074                                           xtoa@w 0076  
                               __end_of_strncmp 1DD2                                ___lodiv@dividend 0014  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 25D6  
                               __initialization 2314                    SDCARD_ReadBlock@sdCardBuffer 0019  
                                  __end_of_atoi 1C04                                    __end_of_ctoa 1F6A  
                    __end_of_EUSART1_Initialize 24D6                                    __end_of_main 0DAA  
                                  __end_of_stoa 1942                                    __end_of_utoa 13F8  
                             _SPI2_ExchangeByte 2712                                    __end_of_xtoa 17B2  
                     ?_SDCARD_PollWriteComplete 0001                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_atoi 001C  
                                        ??_ctoa 0022                                          ??_main 00B8  
                                        ??_stoa 0023                                          ??_utoa 006A  
                                        ??_xtoa 006A                                   __activetblptr 000002  
                              ___lodiv@quotient 0024                             ??_SPI2_ExchangeByte 0014  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0016  
                                        STR_100 7FD6                                          STR_101 7F53  
                                        STR_102 7FFC                                          ?_fputs 001F  
                                        STR_103 7FF9                                          STR_104 7F73  
                                        STR_105 7FF1                                          _ADRESH 000FC4  
                                        STR_107 7FF1                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 0014  
                                        i2l3310 27C8                                          i2l3312 2674  
                                        i2l3314 2690                                          i2l3308 27C4  
                                        i2l3284 26BC                                          i2l3380 1FB2  
                                        i2l3372 1F6A                                          i2l3286 26C4  
                                        i2l3382 1FC6                                          i2l3374 1F7A  
                                        i2l3390 250E                                          i2l3288 26D0  
                                        i2l3376 1F80                                          i2l3384 2000  
                                        i2l3392 2510                                          i2l3378 1FAE  
                                        i2l3394 2514                                          i2l3396 2518  
                                        i2l3398 252A                                          i2l3690 003E  
                                        i2l3686 0022                                          i2l3688 0030  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 008E                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                             __end_of_SPI2_Open 2286                       __end_of_SPI2_ExchangeByte 272C  
                                  vfprintf@cfmt 0035                                          ___wmul 264E  
                       __end_of_TMR0_WriteTimer 2792                                       ??___lodiv 0024  
                                     ??___lomod 0024                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0014                                ?_TMR0_Initialize 0001  
                                        clear_0 233C                                          clear_1 234E  
                                        clear_2 235A                                          isa$std 000001  
                                        _printf 25FE                                          pad@buf 0028  
              ??_EUSART1_SetOverrunErrorHandler 0016                 ?_EUSART1_SetOverrunErrorHandler 0014  
                                        ctoa@fp 001F                                          main@si 011C  
                                        _strlen 23C0                                          fputc@c 0016  
                                        fputs@c 0023                                          fputs@i 0024  
                                        fputs@s 001F                                       ??_isdigit 0016  
                                  __mediumconst 79A0                                       ??_isspace 0016  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                          stoa@cp 002F  
                                        stoa@fp 001F                                __end_of_vfprintf 23C0  
                               ??_EUSART1_Write 0014                                          utoa@fp 0060  
      TMR0_SetInterruptHandler@InterruptHandler 0014                         __end_of_TMR1_WriteTimer 25FE  
                                        xtoa@fp 0060                                       ??_strncmp 001A  
                              ?_TMR1_Initialize 0001                               _SYSTEM_Initialize 269A  
                                    __accesstop 0060                         __end_of__initialization 2360  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 20C2                      __end_of_spi2_configuration 79BF  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 277E  
                           ??_SYSTEM_Initialize 0018                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 21F2                                   __end_of_fputs 2498  
                                 __end_of_putch 27C4                            __end_of_EUSART1_Read 264E  
                                     ?i2___wmul 0001                                         ??_fputc 001A  
                     __end_of_SYSTEM_Initialize 26BC                                         ??_fputs 0023  
                                       ??_putch 0015                              SDCARD_WriteBlock@i 0020  
                             ??_SPI2_Initialize 0014                                      __pbssBANK0 00BA  
               __end_of_EUSART1_SetErrorHandler 27BA                __end_of_TMR0_SetInterruptHandler 279C  
                                       ?___wmul 0014                                      ??_TMR0_ISR 000E  
                              ?_TMR0_WriteTimer 0014                                         ?_printf 00A2  
                                  ??_SPI2_Close 0014                                         ?_strlen 0014  
        __end_of_EUSART1_SetFramingErrorHandler 27B0                  _EUSART1_SetFramingErrorHandler 27A6  
                                    ??i2___wmul 0005                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                              ?_TMR1_WriteTimer 0014                                ___lomod@dividend 0014  
                             SDCARD_ReadBlock@i 001B                __end_of_SDCARD_PollWriteComplete 250E  
                            __end_of_SPI2_Close 27D6                            _ADC_InterruptHandler 00BA  
                                       __Hparam 0000                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 15E4                       SDCARD_Initialize@response 00B1  
                                       ___lodiv 1C04                                         ___lomod 1DD2  
                                     ?_vfprintf 009C                             _EUSART1_is_rx_ready 2758  
                                       __pcinit 2314                                         __ramtop 0600  
                                       __ptext0 0062                                         __ptext1 13F8  
                                       __ptext2 25D6                                         __ptext3 2788  
                                       __ptext4 269A                                         __ptext5 26DA  
                                       __ptext6 2546                                         __ptext7 2792  
                                       __ptext8 276C                                         __ptext9 257C  
                                     _T0CONbits 000FD5                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 26F6                               __end_of_rwTMR0ISR 2018  
                                       _isdigit 25AA                              _EUSART1_Initialize 2498  
                      ??_PIN_MANAGER_Initialize 0014                                         _isspace 240E  
                                       atoi@neg 001F                                         main@cmd 011B  
                                       main@sin 0100                                         _strncmp 1CF4  
                          end_of_initialization 2360                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _sampleRate 00E6  
                                       fputc@fp 0018                                   __Lmediumconst 79A0  
                   _EUSART1_OverrunErrorHandler 003F                                         fputs@fp 0021  
                           i2___wmul@multiplier 0001                               __end_ofmain@F6191 79BB  
                 SDCARD_WriteBlock@sdCardBuffer 001E                               __end_of_vfpfcnvrt 11FA  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0092                                      ??_vfprintf 0035  
                                     _SPI2_Open 21F2                                  _TMR0_ReadTimer 26BC  
                          ??_EUSART1_Initialize 0016                           SDCARD_WriteBlock@addr 001A  
                                       strlen@a 0016                                         strlen@s 0014  
                      _TMR0_SetInterruptHandler 2792                        __end_of_SDCARD_ReadBlock 215C  
                                     _TRISBbits 000F93                  SDCARD_PollWriteComplete@status 0015  
                           EUSART1_Write@txData 0014                           ??_EUSART1_is_rx_ready 0014  
                                  _EUSART1_Read 2626                                    _doubleBuffer 0129  
                                    main@status 011A                        _SDCARD_PollWriteComplete 24D6  
                        __end_of_TMR0_ReadTimer 26DA                    __end_of_INTERRUPT_Initialize 27D2  
                             _SDCARD_Initialize 1942                                      _writeIndex 00E8  
                                    ?_SPI2_Open 0001                                     vfpfcnvrt@ap 0087  
                                   vfpfcnvrt@cp 009A                                     vfpfcnvrt@fp 0083  
                                __end_of___wmul 2674                              ?_SDCARD_Initialize 0001  
                                _ADC_Initialize 272C                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 276C                                i2___wmul@product 0005  
                                __end_of_printf 2626                                  __end_of_strlen 240E  
                            _spi2_configuration 79BB                             start_initialization 2314  
                               ___lodiv@divisor 001C                                 ___lodiv@counter 002C  
                           ??_SDCARD_Initialize 0037                                     __end_of_pad 20C2  
                                   putch@txData 0015                           __end_of_EUSART1_Write 2758  
                     __end_of_SDCARD_Initialize 1ABA                                     vfprintf@fmt 009E  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0018  
                                    rwTMR0ISR@i 003B                          __end_of_ADC_Initialize 2742  
                                   __pdataBANK0 00DF                                        ??_printf 0037  
                         SPI2_ExchangeByte@data 0014                                        ??_strlen 0016  
                                   __pbssBIGRAM 0129                                     __pbssCOMRAM 0037  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 0100  
                           hexDumpBuffer@j_1480 00B4                ??_EUSART1_SetFramingErrorHandler 0016  
               ?_EUSART1_SetFramingErrorHandler 0014                           _TMR0_InterruptHandler 0045  
                        _PIN_MANAGER_Initialize 257C                               _SDCARD_WriteBlock 2286  
                                     __pintcode 0008                                   __pmediumconst 79A0  
                       __end_of_SPI2_Initialize 277E                              ?_SDCARD_WriteBlock 001A  
                                      ?___lodiv 0014                                        ?___lomod 0014  
                               ?_ADC_Initialize 0001                                     ??_SPI2_Open 0014  
              SPI2_Open@spi2UniqueConfiguration 0015                    ??_INTERRUPT_InterruptManager 000E  
                               ___lomod@divisor 001C                             ??_SDCARD_WriteBlock 0020  
                               ___lomod@counter 0024                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0014  
                          _EUSART1_ErrorHandler 00BC                                        ?_isspace 0014  
                       _EUSART1_SetErrorHandler 27B0                                       _rwTMR0ISR 1F6A  
                                      ?_strncmp 0014                            _INTERRUPT_Initialize 27CE  
                             ??_TMR0_Initialize 0016                                  ___wmul@product 0018  
       EUSART1_SetErrorHandler@interruptHandler 0014                                        _LATBbits 000F8A  
                                     _recording 0049                                        _LATCbits 000F8B  
                     __end_of_SDCARD_WriteBlock 2314                                        i2u230_40 1FD8  
                                      i2u230_41 1FD2                                        i2u231_40 1FDA  
                                      i2u232_40 1FF0                                        i2u232_41 1FEA  
                                      i2u233_40 1FF2                                        i2u234_40 252A  
                                      i2u234_41 2526                                        i2u228_40 1F7A  
                                      i2u235_48 2530                                        i2u228_41 1F76  
                                      i2u235_49 2544                                        i2u229_40 1FC6  
                    ??_TMR0_SetInterruptHandler 0016                                        i2u229_41 1FC2  
                                      i2u262_40 0030                                        i2u262_41 002C  
                                      i2u263_40 003E                                        i2u263_41 003A  
                                      _PIR1bits 000F9E                                        _PIR3bits 000FA4  
                                      _RCONbits 000FD0                                       main@F6191 79A1  
                                      _SSP2CON1 000F6C                                        _SSP2CON2 000F6B  
                                      _TMR0_ISR 250E                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 0DAA                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$2033 0072                               ??_TMR1_Initialize 0014  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0014  
                                      i2___wmul 2674                               i2_TMR0_WriteTimer 27C4  
                             ?_SDCARD_ReadBlock 0015                                    _isspace$2088 0018  
                                    vfpfcnvrt@c 008D                                      ?_rwTMR0ISR 0001  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                                     copy_data0 2328                           ?_INTERRUPT_Initialize 0001  
                            ??_SDCARD_ReadBlock 001B                      ??_SDCARD_PollWriteComplete 0015  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 00A0                                        __Lrparam 0000  
                                    vfprintf@fp 009C                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0014                              SDCARD_Initialize@i 00AE  
                         i2___wmul@multiplicand 0003                                      ?_vfpfcnvrt 0083  
                            rwTMR0ISR@character 000D                       __end_ofi2_TMR0_WriteTimer 27CE  
                     ??_EUSART1_SetErrorHandler 0016                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 276C                                        __ptext10 26F6  
                                      __ptext11 27CE                                        __ptext20 20C2  
                                      __ptext12 2498                                        __ptext21 24D6  
                                      __ptext13 279C                                      _T1GCONbits 000FCC  
                                      __ptext30 1DD2                                        __ptext22 1942  
                                      __ptext14 27A6                                        __ptext31 1C04  
                                      __ptext23 25FE                                        __ptext15 27B0  
                                      __ptext40 240E                                        __ptext32 1CF4  
                                      __ptext24 236E                                        __ptext16 272C  
                                      __ptext41 25AA                                        __ptext33 17B2  
                                      __ptext25 0DAA                                        __ptext17 21F2  
                                      __ptext50 2674                                        __ptext42 264E  
                                      __ptext34 23C0                                        __ptext26 15E4  
                                      __ptext18 27D2                                        __ptext51 27C4  
                                      __ptext43 2712                                        __ptext35 1EA2  
                                      __ptext27 11FA                                        __ptext19 2286  
                                      __ptext52 26BC                                        __ptext44 2758  
                                      __ptext36 215C                                        __ptext28 2018  
                                      __ptext53 0000                                        __ptext45 2626  
                                      __ptext37 27BA                                        __ptext29 2454  
                                      __ptext38 2742                                        __ptext47 250E  
                                      __ptext39 1ABA                                        __ptext48 27D6  
                                      __ptext49 1F6A                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0014                               ??_TMR0_WriteTimer 0016  
                              ??_TMR0_ReadTimer 0003            __end_of_TMR0_DefaultInterruptHandler 27D8  
                  _TMR0_DefaultInterruptHandler 27D6                                       stoa@F1149 00DF  
EUSART1_SetOverrunErrorHandler@interruptHandler 0014                                        isa$xinst 000000  
                                 _hexDumpBuffer 13F8                                        int$flags 004B  
                                      _vfprintf 236E              __end_of_INTERRUPT_InterruptManager 005E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00A2  
                             ??_TMR1_WriteTimer 0016                     _EUSART1_FramingErrorHandler 0041  
                                _vfpfcnvrt$2053 0090                                      _INTCONbits 000FF2  
                                   _sampleIndex 0048                                        isdigit@c 0014  
                        ??_INTERRUPT_Initialize 0014                                     ??_rwTMR0ISR 000B  
                      SDCARD_Initialize@verbose 00B0                                        intlevel2 0000  
                                      isspace@c 0014                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 27A6                  _EUSART1_SetOverrunErrorHandler 279C  
                                    _RCSTA1bits 000FAB                                       strncmp@_l 0014  
                                     strncmp@_r 0016                                ??_ADC_Initialize 0014  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 00AE                                        printf@ap 00AC  
EUSART1_SetFramingErrorHandler@interruptHandler 0014                                     ??_vfpfcnvrt 0089  
                                      stoa@nuls 0024                              _eusart1RxLastError 004A  
                                    _SPI2_Close 27D2                                 _TMR0_Initialize 2546  
                                      strncmp@l 001B                                        strncmp@n 0018  
                                      strncmp@r 001D                  __end_of_PIN_MANAGER_Initialize 25AA  
                     hexDumpBuffer@sdCardBuffer 00AE                                 _TMR1_Initialize 26DA  
