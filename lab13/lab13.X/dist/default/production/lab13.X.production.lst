

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Apr 01 18:42:47 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 09/02/2023 GMT
    68                           ; 
    69                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F25K22 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     
   102 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   103   000000                     
   104 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   105   000000                     
   106 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   107   000000                     _T2CON	set	4026
   108   000000                     _TMR2	set	4028
   109   000000                     _PR2	set	4027
   110   000000                     _CCPR1L	set	4030
   111   000000                     _CCPR1H	set	4031
   112   000000                     _PSTR1CON	set	4025
   113   000000                     _PWM1CON	set	4023
   114   000000                     _CCP1CON	set	4029
   115   000000                     _CCPR2L	set	3943
   116   000000                     _CCPR2H	set	3944
   117   000000                     _PWM2CON	set	3941
   118   000000                     _TXREG1	set	4013
   119   000000                     _RCREG1	set	4014
   120   000000                     _SPBRG1	set	4015
   121   000000                     _TXSTA1	set	4012
   122   000000                     _ANSELA	set	3896
   123   000000                     _ANSELB	set	3897
   124   000000                     _ANSELC	set	3898
   125   000000                     _TMR0L	set	4054
   126   000000                     _TMR0H	set	4055
   127   000000                     _T1CON	set	4045
   128   000000                     _TMR1L	set	4046
   129   000000                     _TMR1H	set	4047
   130   000000                     _CCPTMRS1bits	set	3912
   131   000000                     _CCP4CON	set	3927
   132   000000                     _CCP4CONbits	set	3927
   133   000000                     _TMR1	set	4046
   134   000000                     _LATCbits	set	3979
   135   000000                     _T2CONbits	set	4026
   136   000000                     _RCSTA1bits	set	4011
   137   000000                     _TXSTA1bits	set	4012
   138   000000                     _T0CON	set	4053
   139   000000                     _T1GCONbits	set	4044
   140   000000                     _T1CONbits	set	4045
   141   000000                     _PLLRDY	set	32407
   142   000000                     _WPUB	set	3937
   143   000000                     _PIE4bits	set	3962
   144   000000                     _PIR4bits	set	3963
   145   000000                     _CCPR4H	set	3929
   146   000000                     _CCPR4L	set	3928
   147   000000                     _CCPTMRS0bits	set	3913
   148   000000                     _LATA	set	3977
   149   000000                     _OSCTUNE	set	3995
   150   000000                     _OSCCON2	set	4050
   151   000000                     _OSCCON	set	4051
   152   000000                     _T0CONbits	set	4053
   153   000000                     _INTCONbits	set	4082
   154   000000                     _PIR1bits	set	3998
   155   000000                     _T1GCON	set	4044
   156   000000                     _RCONbits	set	4048
   157   000000                     _RCSTA1	set	4011
   158   000000                     _BAUDCON1	set	4024
   159   000000                     _INTCON2bits	set	4081
   160   000000                     _TRISA	set	3986
   161   000000                     _LATC	set	3979
   162   000000                     _LATB	set	3978
   163   000000                     _TRISC	set	3988
   164   000000                     _TRISB	set	3987
   165   000000                     _PSTR2CON	set	3939
   166   000000                     _ECCP2AS	set	3940
   167   000000                     _CCP2CON	set	3942
   168   000000                     _ECCP1AS	set	4022
   169   000000                     _SPBRGH1	set	4016
   170                           
   171                           	psect	mediumconst
   172   007DEE                     __pmediumconst:
   173                           	callstack 0
   174   007DEE  00                 	db	0
   175   007DEF                     STR_4:
   176   007DEF  20                 	db	32
   177   007DF0  20                 	db	32
   178   007DF1  20                 	db	32
   179   007DF2  20                 	db	32
   180   007DF3  56                 	db	86	;'V'
   181   007DF4  63                 	db	99	;'c'
   182   007DF5  63                 	db	99	;'c'
   183   007DF6  3A                 	db	58	;':'
   184   007DF7  20                 	db	32
   185   007DF8  6C                 	db	108	;'l'
   186   007DF9  65                 	db	101	;'e'
   187   007DFA  66                 	db	102	;'f'
   188   007DFB  74                 	db	116	;'t'
   189   007DFC  20                 	db	32
   190   007DFD  70                 	db	112	;'p'
   191   007DFE  69                 	db	105	;'i'
   192   007DFF  6E                 	db	110	;'n'
   193   007E00  20                 	db	32
   194   007E01  6F                 	db	111	;'o'
   195   007E02  6E                 	db	110	;'n'
   196   007E03  20                 	db	32
   197   007E04  4A                 	db	74	;'J'
   198   007E05  50                 	db	80	;'P'
   199   007E06  31                 	db	49	;'1'
   200   007E07  20                 	db	32
   201   007E08  68                 	db	104	;'h'
   202   007E09  65                 	db	101	;'e'
   203   007E0A  61                 	db	97	;'a'
   204   007E0B  64                 	db	100	;'d'
   205   007E0C  65                 	db	101	;'e'
   206   007E0D  72                 	db	114	;'r'
   207   007E0E  20                 	db	32
   208   007E0F  28                 	db	40
   209   007E10  63                 	db	99	;'c'
   210   007E11  6C                 	db	108	;'l'
   211   007E12  6F                 	db	111	;'o'
   212   007E13  73                 	db	115	;'s'
   213   007E14  65                 	db	101	;'e'
   214   007E15  73                 	db	115	;'s'
   215   007E16  74                 	db	116	;'t'
   216   007E17  20                 	db	32
   217   007E18  74                 	db	116	;'t'
   218   007E19  6F                 	db	111	;'o'
   219   007E1A  20                 	db	32
   220   007E1B  6D                 	db	109	;'m'
   221   007E1C  69                 	db	105	;'i'
   222   007E1D  6E                 	db	110	;'n'
   223   007E1E  69                 	db	105	;'i'
   224   007E1F  20                 	db	32
   225   007E20  55                 	db	85	;'U'
   226   007E21  53                 	db	83	;'S'
   227   007E22  42                 	db	66	;'B'
   228   007E23  29                 	db	41
   229   007E24  2E                 	db	46
   230   007E25  0D                 	db	13
   231   007E26  0A                 	db	10
   232   007E27  00                 	db	0
   233   007E28                     STR_7:
   234   007E28  20                 	db	32
   235   007E29  20                 	db	32
   236   007E2A  20                 	db	32
   237   007E2B  20                 	db	32
   238   007E2C  47                 	db	71	;'G'
   239   007E2D  4E                 	db	78	;'N'
   240   007E2E  44                 	db	68	;'D'
   241   007E2F  3A                 	db	58	;':'
   242   007E30  20                 	db	32
   243   007E31  20                 	db	32
   244   007E32  20                 	db	32
   245   007E33  20                 	db	32
   246   007E34  47                 	db	71	;'G'
   247   007E35  4E                 	db	78	;'N'
   248   007E36  44                 	db	68	;'D'
   249   007E37  20                 	db	32
   250   007E38  68                 	db	104	;'h'
   251   007E39  65                 	db	101	;'e'
   252   007E3A  61                 	db	97	;'a'
   253   007E3B  64                 	db	100	;'d'
   254   007E3C  65                 	db	101	;'e'
   255   007E3D  72                 	db	114	;'r'
   256   007E3E  20                 	db	32
   257   007E3F  70                 	db	112	;'p'
   258   007E40  69                 	db	105	;'i'
   259   007E41  6E                 	db	110	;'n'
   260   007E42  20                 	db	32
   261   007E43  6F                 	db	111	;'o'
   262   007E44  6E                 	db	110	;'n'
   263   007E45  20                 	db	32
   264   007E46  50                 	db	80	;'P'
   265   007E47  49                 	db	73	;'I'
   266   007E48  43                 	db	67	;'C'
   267   007E49  20                 	db	32
   268   007E4A  62                 	db	98	;'b'
   269   007E4B  72                 	db	114	;'r'
   270   007E4C  65                 	db	101	;'e'
   271   007E4D  61                 	db	97	;'a'
   272   007E4E  6B                 	db	107	;'k'
   273   007E4F  6F                 	db	111	;'o'
   274   007E50  75                 	db	117	;'u'
   275   007E51  74                 	db	116	;'t'
   276   007E52  20                 	db	32
   277   007E53  68                 	db	104	;'h'
   278   007E54  65                 	db	101	;'e'
   279   007E55  61                 	db	97	;'a'
   280   007E56  64                 	db	100	;'d'
   281   007E57  65                 	db	101	;'e'
   282   007E58  72                 	db	114	;'r'
   283   007E59  2E                 	db	46
   284   007E5A  0D                 	db	13
   285   007E5B  0A                 	db	10
   286   007E5C  00                 	db	0
   287   007E5D                     STR_10:
   288   007E5D  2D                 	db	45
   289   007E5E  2D                 	db	45
   290   007E5F  2D                 	db	45
   291   007E60  2D                 	db	45
   292   007E61  2D                 	db	45
   293   007E62  2D                 	db	45
   294   007E63  2D                 	db	45
   295   007E64  2D                 	db	45
   296   007E65  2D                 	db	45
   297   007E66  2D                 	db	45
   298   007E67  2D                 	db	45
   299   007E68  2D                 	db	45
   300   007E69  2D                 	db	45
   301   007E6A  2D                 	db	45
   302   007E6B  2D                 	db	45
   303   007E6C  2D                 	db	45
   304   007E6D  2D                 	db	45
   305   007E6E  2D                 	db	45
   306   007E6F  2D                 	db	45
   307   007E70  2D                 	db	45
   308   007E71  2D                 	db	45
   309   007E72  2D                 	db	45
   310   007E73  2D                 	db	45
   311   007E74  2D                 	db	45
   312   007E75  2D                 	db	45
   313   007E76  2D                 	db	45
   314   007E77  2D                 	db	45
   315   007E78  2D                 	db	45
   316   007E79  2D                 	db	45
   317   007E7A  2D                 	db	45
   318   007E7B  0D                 	db	13
   319   007E7C  0A                 	db	10
   320   007E7D  00                 	db	0
   321   007E7E                     STR_18:
   322   007E7E  43                 	db	67	;'C'
   323   007E7F  3A                 	db	58	;':'
   324   007E80  20                 	db	32
   325   007E81  63                 	db	99	;'c'
   326   007E82  6F                 	db	111	;'o'
   327   007E83  6E                 	db	110	;'n'
   328   007E84  76                 	db	118	;'v'
   329   007E85  65                 	db	101	;'e'
   330   007E86  72                 	db	114	;'r'
   331   007E87  74                 	db	116	;'t'
   332   007E88  20                 	db	32
   333   007E89  64                 	db	100	;'d'
   334   007E8A  69                 	db	105	;'i'
   335   007E8B  73                 	db	115	;'s'
   336   007E8C  74                 	db	116	;'t'
   337   007E8D  61                 	db	97	;'a'
   338   007E8E  6E                 	db	110	;'n'
   339   007E8F  63                 	db	99	;'c'
   340   007E90  65                 	db	101	;'e'
   341   007E91  73                 	db	115	;'s'
   342   007E92  20                 	db	32
   343   007E93  74                 	db	116	;'t'
   344   007E94  6F                 	db	111	;'o'
   345   007E95  20                 	db	32
   346   007E96  63                 	db	99	;'c'
   347   007E97  6F                 	db	111	;'o'
   348   007E98  6C                 	db	108	;'l'
   349   007E99  6F                 	db	111	;'o'
   350   007E9A  72                 	db	114	;'r'
   351   007E9B  0A                 	db	10
   352   007E9C  0D                 	db	13
   353   007E9D  00                 	db	0
   354   007E9E                     STR_17:
   355   007E9E  63                 	db	99	;'c'
   356   007E9F  3A                 	db	58	;':'
   357   007EA0  20                 	db	32
   358   007EA1  63                 	db	99	;'c'
   359   007EA2  6F                 	db	111	;'o'
   360   007EA3  6C                 	db	108	;'l'
   361   007EA4  6C                 	db	108	;'l'
   362   007EA5  65                 	db	101	;'e'
   363   007EA6  63                 	db	99	;'c'
   364   007EA7  74                 	db	116	;'t'
   365   007EA8  20                 	db	32
   366   007EA9  61                 	db	97	;'a'
   367   007EAA  6E                 	db	110	;'n'
   368   007EAB  64                 	db	100	;'d'
   369   007EAC  20                 	db	32
   370   007EAD  73                 	db	115	;'s'
   371   007EAE  6F                 	db	111	;'o'
   372   007EAF  72                 	db	114	;'r'
   373   007EB0  74                 	db	116	;'t'
   374   007EB1  20                 	db	32
   375   007EB2  64                 	db	100	;'d'
   376   007EB3  69                 	db	105	;'i'
   377   007EB4  73                 	db	115	;'s'
   378   007EB5  74                 	db	116	;'t'
   379   007EB6  61                 	db	97	;'a'
   380   007EB7  6E                 	db	110	;'n'
   381   007EB8  63                 	db	99	;'c'
   382   007EB9  65                 	db	101	;'e'
   383   007EBA  73                 	db	115	;'s'
   384   007EBB  0A                 	db	10
   385   007EBC  0D                 	db	13
   386   007EBD  00                 	db	0
   387   007EBE                     STR_15:
   388   007EBE  73                 	db	115	;'s'
   389   007EBF  3A                 	db	58	;':'
   390   007EC0  20                 	db	32
   391   007EC1  53                 	db	83	;'S'
   392   007EC2  74                 	db	116	;'t'
   393   007EC3  72                 	db	114	;'r'
   394   007EC4  65                 	db	101	;'e'
   395   007EC5  61                 	db	97	;'a'
   396   007EC6  6D                 	db	109	;'m'
   397   007EC7  20                 	db	32
   398   007EC8  45                 	db	69	;'E'
   399   007EC9  63                 	db	99	;'c'
   400   007ECA  68                 	db	104	;'h'
   401   007ECB  6F                 	db	111	;'o'
   402   007ECC  20                 	db	32
   403   007ECD  70                 	db	112	;'p'
   404   007ECE  75                 	db	117	;'u'
   405   007ECF  6C                 	db	108	;'l'
   406   007ED0  73                 	db	115	;'s'
   407   007ED1  65                 	db	101	;'e'
   408   007ED2  20                 	db	32
   409   007ED3  6C                 	db	108	;'l'
   410   007ED4  65                 	db	101	;'e'
   411   007ED5  6E                 	db	110	;'n'
   412   007ED6  67                 	db	103	;'g'
   413   007ED7  74                 	db	116	;'t'
   414   007ED8  68                 	db	104	;'h'
   415   007ED9  0D                 	db	13
   416   007EDA  0A                 	db	10
   417   007EDB  00                 	db	0
   418   007EDC                     STR_3:
   419   007EDC  55                 	db	85	;'U'
   420   007EDD  6C                 	db	108	;'l'
   421   007EDE  74                 	db	116	;'t'
   422   007EDF  72                 	db	114	;'r'
   423   007EE0  61                 	db	97	;'a'
   424   007EE1  73                 	db	115	;'s'
   425   007EE2  6F                 	db	111	;'o'
   426   007EE3  6E                 	db	110	;'n'
   427   007EE4  69                 	db	105	;'i'
   428   007EE5  63                 	db	99	;'c'
   429   007EE6  20                 	db	32
   430   007EE7  43                 	db	67	;'C'
   431   007EE8  6F                 	db	111	;'o'
   432   007EE9  6E                 	db	110	;'n'
   433   007EEA  6E                 	db	110	;'n'
   434   007EEB  65                 	db	101	;'e'
   435   007EEC  63                 	db	99	;'c'
   436   007EED  74                 	db	116	;'t'
   437   007EEE  69                 	db	105	;'i'
   438   007EEF  6F                 	db	111	;'o'
   439   007EF0  6E                 	db	110	;'n'
   440   007EF1  73                 	db	115	;'s'
   441   007EF2  3A                 	db	58	;':'
   442   007EF3  0D                 	db	13
   443   007EF4  0A                 	db	10
   444   007EF5  00                 	db	0
   445   007EF6                     STR_14:
   446   007EF6  7A                 	db	122	;'z'
   447   007EF7  3A                 	db	58	;':'
   448   007EF8  20                 	db	32
   449   007EF9  43                 	db	67	;'C'
   450   007EFA  6C                 	db	108	;'l'
   451   007EFB  65                 	db	101	;'e'
   452   007EFC  61                 	db	97	;'a'
   453   007EFD  72                 	db	114	;'r'
   454   007EFE  20                 	db	32
   455   007EFF  74                 	db	116	;'t'
   456   007F00  68                 	db	104	;'h'
   457   007F01  65                 	db	101	;'e'
   458   007F02  20                 	db	32
   459   007F03  74                 	db	116	;'t'
   460   007F04  65                 	db	101	;'e'
   461   007F05  72                 	db	114	;'r'
   462   007F06  6D                 	db	109	;'m'
   463   007F07  69                 	db	105	;'i'
   464   007F08  6E                 	db	110	;'n'
   465   007F09  61                 	db	97	;'a'
   466   007F0A  6C                 	db	108	;'l'
   467   007F0B  0D                 	db	13
   468   007F0C  0A                 	db	10
   469   007F0D  00                 	db	0
   470   007F0E                     STR_23:
   471   007F0E  70                 	db	112	;'p'
   472   007F0F  72                 	db	114	;'r'
   473   007F10  65                 	db	101	;'e'
   474   007F11  73                 	db	115	;'s'
   475   007F12  73                 	db	115	;'s'
   476   007F13  20                 	db	32
   477   007F14  61                 	db	97	;'a'
   478   007F15  6E                 	db	110	;'n'
   479   007F16  79                 	db	121	;'y'
   480   007F17  20                 	db	32
   481   007F18  6B                 	db	107	;'k'
   482   007F19  65                 	db	101	;'e'
   483   007F1A  79                 	db	121	;'y'
   484   007F1B  20                 	db	32
   485   007F1C  74                 	db	116	;'t'
   486   007F1D  6F                 	db	111	;'o'
   487   007F1E  20                 	db	32
   488   007F1F  65                 	db	101	;'e'
   489   007F20  78                 	db	120	;'x'
   490   007F21  69                 	db	105	;'i'
   491   007F22  74                 	db	116	;'t'
   492   007F23  0D                 	db	13
   493   007F24  0A                 	db	10
   494   007F25  00                 	db	0
   495   007F26                     STR_36:
   496   007F26  0D                 	db	13
   497   007F27  72                 	db	114	;'r'
   498   007F28  65                 	db	101	;'e'
   499   007F29  64                 	db	100	;'d'
   500   007F2A  28                 	db	40
   501   007F2B  25                 	db	37
   502   007F2C  33                 	db	51	;'3'
   503   007F2D  75                 	db	117	;'u'
   504   007F2E  29                 	db	41
   505   007F2F  2C                 	db	44
   506   007F30  20                 	db	32
   507   007F31  67                 	db	103	;'g'
   508   007F32  72                 	db	114	;'r'
   509   007F33  65                 	db	101	;'e'
   510   007F34  65                 	db	101	;'e'
   511   007F35  6E                 	db	110	;'n'
   512   007F36  28                 	db	40
   513   007F37  25                 	db	37
   514   007F38  33                 	db	51	;'3'
   515   007F39  75                 	db	117	;'u'
   516   007F3A  29                 	db	41
   517   007F3B  00                 	db	0
   518   007F3C                     STR_16:
   519   007F3C  53                 	db	83	;'S'
   520   007F3D  3A                 	db	58	;':'
   521   007F3E  20                 	db	32
   522   007F3F  53                 	db	83	;'S'
   523   007F40  74                 	db	116	;'t'
   524   007F41  72                 	db	114	;'r'
   525   007F42  65                 	db	101	;'e'
   526   007F43  61                 	db	97	;'a'
   527   007F44  6D                 	db	109	;'m'
   528   007F45  20                 	db	32
   529   007F46  64                 	db	100	;'d'
   530   007F47  69                 	db	105	;'i'
   531   007F48  73                 	db	115	;'s'
   532   007F49  74                 	db	116	;'t'
   533   007F4A  61                 	db	97	;'a'
   534   007F4B  6E                 	db	110	;'n'
   535   007F4C  63                 	db	99	;'c'
   536   007F4D  65                 	db	101	;'e'
   537   007F4E  0D                 	db	13
   538   007F4F  0A                 	db	10
   539   007F50  00                 	db	0
   540   007F51                     STR_13:
   541   007F51  5A                 	db	90	;'Z'
   542   007F52  3A                 	db	58	;':'
   543   007F53  20                 	db	32
   544   007F54  52                 	db	82	;'R'
   545   007F55  65                 	db	101	;'e'
   546   007F56  73                 	db	115	;'s'
   547   007F57  65                 	db	101	;'e'
   548   007F58  74                 	db	116	;'t'
   549   007F59  20                 	db	32
   550   007F5A  70                 	db	112	;'p'
   551   007F5B  72                 	db	114	;'r'
   552   007F5C  6F                 	db	111	;'o'
   553   007F5D  63                 	db	99	;'c'
   554   007F5E  65                 	db	101	;'e'
   555   007F5F  73                 	db	115	;'s'
   556   007F60  73                 	db	115	;'s'
   557   007F61  6F                 	db	111	;'o'
   558   007F62  72                 	db	114	;'r'
   559   007F63  0D                 	db	13
   560   007F64  0A                 	db	10
   561   007F65  00                 	db	0
   562   007F66                     STR_2:
   563   007F66  69                 	db	105	;'i'
   564   007F67  6E                 	db	110	;'n'
   565   007F68  4C                 	db	76	;'L'
   566   007F69  61                 	db	97	;'a'
   567   007F6A  62                 	db	98	;'b'
   568   007F6B  20                 	db	32
   569   007F6C  31                 	db	49	;'1'
   570   007F6D  33                 	db	51	;'3'
   571   007F6E  20                 	db	32
   572   007F6F  74                 	db	116	;'t'
   573   007F70  65                 	db	101	;'e'
   574   007F71  72                 	db	114	;'r'
   575   007F72  6D                 	db	109	;'m'
   576   007F73  69                 	db	105	;'i'
   577   007F74  6E                 	db	110	;'n'
   578   007F75  61                 	db	97	;'a'
   579   007F76  6C                 	db	108	;'l'
   580   007F77  0D                 	db	13
   581   007F78  0A                 	db	10
   582   007F79  00                 	db	0
   583   007F7A                     STR_6:
   584   007F7A  20                 	db	32
   585   007F7B  20                 	db	32
   586   007F7C  20                 	db	32
   587   007F7D  20                 	db	32
   588   007F7E  45                 	db	69	;'E'
   589   007F7F  63                 	db	99	;'c'
   590   007F80  68                 	db	104	;'h'
   591   007F81  6F                 	db	111	;'o'
   592   007F82  3A                 	db	58	;':'
   593   007F83  20                 	db	32
   594   007F84  20                 	db	32
   595   007F85  20                 	db	32
   596   007F86  52                 	db	82	;'R'
   597   007F87  42                 	db	66	;'B'
   598   007F88  30                 	db	48	;'0'
   599   007F89  0D                 	db	13
   600   007F8A  0A                 	db	10
   601   007F8B  00                 	db	0
   602   007F8C                     STR_5:
   603   007F8C  20                 	db	32
   604   007F8D  20                 	db	32
   605   007F8E  20                 	db	32
   606   007F8F  20                 	db	32
   607   007F90  54                 	db	84	;'T'
   608   007F91  72                 	db	114	;'r'
   609   007F92  69                 	db	105	;'i'
   610   007F93  67                 	db	103	;'g'
   611   007F94  3A                 	db	58	;':'
   612   007F95  20                 	db	32
   613   007F96  20                 	db	32
   614   007F97  20                 	db	32
   615   007F98  52                 	db	82	;'R'
   616   007F99  43                 	db	67	;'C'
   617   007F9A  34                 	db	52	;'4'
   618   007F9B  0D                 	db	13
   619   007F9C  0A                 	db	10
   620   007F9D  00                 	db	0
   621   007F9E                     STR_38:
   622   007F9E  55                 	db	85	;'U'
   623   007F9F  6E                 	db	110	;'n'
   624   007FA0  6B                 	db	107	;'k'
   625   007FA1  6E                 	db	110	;'n'
   626   007FA2  6F                 	db	111	;'o'
   627   007FA3  77                 	db	119	;'w'
   628   007FA4  6E                 	db	110	;'n'
   629   007FA5  20                 	db	32
   630   007FA6  6B                 	db	107	;'k'
   631   007FA7  65                 	db	101	;'e'
   632   007FA8  79                 	db	121	;'y'
   633   007FA9  20                 	db	32
   634   007FAA  25                 	db	37
   635   007FAB  63                 	db	99	;'c'
   636   007FAC  0D                 	db	13
   637   007FAD  0A                 	db	10
   638   007FAE  00                 	db	0
   639   007FAF                     STR_1:
   640   007FAF  44                 	db	68	;'D'
   641   007FB0  65                 	db	101	;'e'
   642   007FB1  76                 	db	118	;'v'
   643   007FB2  27                 	db	39
   644   007FB3  32                 	db	50	;'2'
   645   007FB4  31                 	db	49	;'1'
   646   007FB5  20                 	db	32
   647   007FB6  42                 	db	66	;'B'
   648   007FB7  6F                 	db	111	;'o'
   649   007FB8  61                 	db	97	;'a'
   650   007FB9  72                 	db	114	;'r'
   651   007FBA  64                 	db	100	;'d'
   652   007FBB  0D                 	db	13
   653   007FBC  0A                 	db	10
   654   007FBD  00                 	db	0
   655   007FBE                     STR_11:
   656   007FBE  3F                 	db	63	;'?'
   657   007FBF  3A                 	db	58	;':'
   658   007FC0  20                 	db	32
   659   007FC1  48                 	db	72	;'H'
   660   007FC2  65                 	db	101	;'e'
   661   007FC3  6C                 	db	108	;'l'
   662   007FC4  70                 	db	112	;'p'
   663   007FC5  20                 	db	32
   664   007FC6  6D                 	db	109	;'m'
   665   007FC7  65                 	db	101	;'e'
   666   007FC8  6E                 	db	110	;'n'
   667   007FC9  75                 	db	117	;'u'
   668   007FCA  0D                 	db	13
   669   007FCB  0A                 	db	10
   670   007FCC  00                 	db	0
   671   007FCD                     STR_29:
   672   007FCD  55                 	db	85	;'U'
   673   007FCE  6E                 	db	110	;'n'
   674   007FCF  73                 	db	115	;'s'
   675   007FD0  6F                 	db	111	;'o'
   676   007FD1  72                 	db	114	;'r'
   677   007FD2  74                 	db	116	;'t'
   678   007FD3  65                 	db	101	;'e'
   679   007FD4  64                 	db	100	;'d'
   680   007FD5  0D                 	db	13
   681   007FD6  0A                 	db	10
   682   007FD7  00                 	db	0
   683   007FD8                     STR_32:
   684   007FD8  53                 	db	83	;'S'
   685   007FD9  6F                 	db	111	;'o'
   686   007FDA  72                 	db	114	;'r'
   687   007FDB  74                 	db	116	;'t'
   688   007FDC  65                 	db	101	;'e'
   689   007FDD  64                 	db	100	;'d'
   690   007FDE  0D                 	db	13
   691   007FDF  0A                 	db	10
   692   007FE0  00                 	db	0
   693   007FE1                     STR_12:
   694   007FE1  6F                 	db	111	;'o'
   695   007FE2  3A                 	db	58	;':'
   696   007FE3  20                 	db	32
   697   007FE4  6B                 	db	107	;'k'
   698   007FE5  0D                 	db	13
   699   007FE6  0A                 	db	10
   700   007FE7  00                 	db	0
   701   007FE8                     STR_9:
   702   007FE8  25                 	db	37
   703   007FE9  63                 	db	99	;'c'
   704   007FEA  0A                 	db	10
   705   007FEB  0D                 	db	13
   706   007FEC  00                 	db	0
   707   007FED                     STR_24:
   708   007FED  25                 	db	37
   709   007FEE  38                 	db	56	;'8'
   710   007FEF  75                 	db	117	;'u'
   711   007FF0  0D                 	db	13
   712   007FF1  00                 	db	0
   713   007FF2                     STR_30:
   714   007FF2  25                 	db	37
   715   007FF3  75                 	db	117	;'u'
   716   007FF4  20                 	db	32
   717   007FF5  20                 	db	32
   718   007FF6  00                 	db	0
   719   007FF7                     STR_8:
   720   007FF7  0D                 	db	13
   721   007FF8  0A                 	db	10
   722   007FF9  3E                 	db	62	;'>'
   723   007FFA  20                 	db	32
   724   007FFB  00                 	db	0
   725   007FFC                     STR_22:
   726   007FFC  0A                 	db	10
   727   007FFD  3E                 	db	62	;'>'
   728   007FFE  00                 	db	0
   729   007FFF  00                 	db	0	; dummy byte at the end
   730   000000                     
   731                           ; #config settings
   732                           
   733                           	psect	cinit
   734   001438                     __pcinit:
   735                           	callstack 0
   736   001438                     start_initialization:
   737                           	callstack 0
   738   001438                     __initialization:
   739                           	callstack 0
   740                           
   741                           ; Clear objects allocated to BANK0 (54 bytes)
   742   001438  EE00  F097         	lfsr	0,__pbssBANK0
   743   00143C  0E36               	movlw	54
   744   00143E                     clear_0:
   745   00143E  6AEE               	clrf	postinc0,c
   746   001440  06E8               	decf	wreg,f,c
   747   001442  E1FD               	bnz	clear_0
   748                           
   749                           ; Clear objects allocated to COMRAM (6 bytes)
   750   001444  6A57               	clrf	(__pbssCOMRAM+5)& (0+255),c
   751   001446  6A56               	clrf	(__pbssCOMRAM+4)& (0+255),c
   752   001448  6A55               	clrf	(__pbssCOMRAM+3)& (0+255),c
   753   00144A  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
   754   00144C  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   755   00144E  6A52               	clrf	__pbssCOMRAM& (0+255),c
   756   001450                     end_of_initialization:
   757                           	callstack 0
   758   001450                     __end_of__initialization:
   759                           	callstack 0
   760   001450  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   761   001452  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   762   001454  0E00               	movlw	low (__Lmediumconst shr (0+16))
   763   001456  6EF8               	movwf	tblptru,c
   764   001458  0100               	movlb	0
   765   00145A  EF3C  F000         	goto	_main	;jump to C main() function
   766                           
   767                           	psect	bssCOMRAM
   768   000052                     __pbssCOMRAM:
   769                           	callstack 0
   770   000052                     _width:
   771                           	callstack 0
   772   000052                     	ds	2
   773   000054                     _timer0ReloadVal:
   774                           	callstack 0
   775   000054                     	ds	2
   776   000056                     _flags:
   777                           	callstack 0
   778   000056                     	ds	1
   779   000057                     _eusart1RxLastError:
   780                           	callstack 0
   781   000057                     	ds	1
   782                           
   783                           	psect	bssBANK0
   784   000097                     __pbssBANK0:
   785                           	callstack 0
   786   000097                     _prec:
   787                           	callstack 0
   788   000097                     	ds	2
   789   000099                     _echo:
   790                           	callstack 0
   791   000099                     	ds	2
   792   00009B                     _fall:
   793                           	callstack 0
   794   00009B                     	ds	2
   795   00009D                     _rise:
   796                           	callstack 0
   797   00009D                     	ds	2
   798   00009F                     _EUSART1_ErrorHandler:
   799                           	callstack 0
   800   00009F                     	ds	2
   801   0000A1                     _EUSART1_OverrunErrorHandler:
   802                           	callstack 0
   803   0000A1                     	ds	2
   804   0000A3                     _EUSART1_FramingErrorHandler:
   805                           	callstack 0
   806   0000A3                     	ds	2
   807   0000A5                     _TMR0_InterruptHandler:
   808                           	callstack 0
   809   0000A5                     	ds	2
   810   0000A7                     _timer1ReloadVal:
   811                           	callstack 0
   812   0000A7                     	ds	2
   813   0000A9                     _CCP4_CallBack:
   814                           	callstack 0
   815   0000A9                     	ds	2
   816   0000AB                     	ds	1
   817   0000AC                     _newEcho:
   818                           	callstack 0
   819   0000AC                     	ds	1
   820   0000AD                     _dbuf:
   821                           	callstack 0
   822   0000AD                     	ds	32
   823                           
   824                           	psect	cstackBANK0
   825   000060                     __pcstackBANK0:
   826                           	callstack 0
   827   000060                     vfpfcnvrt@convarg:
   828                           	callstack 0
   829                           
   830                           ; 8 bytes @ 0x0
   831   000060                     	ds	8
   832   000068                     vfpfcnvrt@c:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x8
   836   000068                     	ds	1
   837   000069                     vfpfcnvrt@cp:
   838                           	callstack 0
   839                           
   840                           ; 2 bytes @ 0x9
   841   000069                     	ds	2
   842   00006B                     ?_vfprintf:
   843                           	callstack 0
   844   00006B                     vfprintf@fp:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xB
   848   00006B                     	ds	2
   849   00006D                     vfprintf@fmt:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0xD
   853   00006D                     	ds	2
   854   00006F                     vfprintf@ap:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0xF
   858   00006F                     	ds	2
   859   000071                     ?_printf:
   860                           	callstack 0
   861   000071                     printf@fmt:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x11
   865   000071                     	ds	8
   866   000079                     ??_main:
   867                           
   868                           ; 1 bytes @ 0x19
   869   000079                     	ds	4
   870   00007D                     main@temp:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x1D
   874   00007D                     	ds	2
   875   00007F                     main@sample:
   876                           	callstack 0
   877                           
   878                           ; 16 bytes @ 0x1F
   879   00007F                     	ds	16
   880   00008F                     main@green:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x2F
   884   00008F                     	ds	2
   885   000091                     main@cmd:
   886                           	callstack 0
   887                           
   888                           ; 1 bytes @ 0x31
   889   000091                     	ds	1
   890   000092                     main@min:
   891                           	callstack 0
   892                           
   893                           ; 1 bytes @ 0x32
   894   000092                     	ds	1
   895   000093                     main@red:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x33
   899   000093                     	ds	2
   900   000095                     main@j:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x35
   904   000095                     	ds	1
   905   000096                     main@i:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x36
   909   000096                     	ds	1
   910                           
   911                           	psect	cstackCOMRAM
   912   000001                     __pcstackCOMRAM:
   913                           	callstack 0
   914   000001                     CCP4ISR@capture:
   915                           	callstack 0
   916   000001                     microSecondDelay@us:
   917                           	callstack 0
   918   000001                     i2TMR0_WriteTimer@timerVal:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x0
   922   000001                     	ds	2
   923   000003                     CCP4_CaptureISR@module:
   924                           	callstack 0
   925   000003                     microSecondDelay@i:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x2
   929   000003                     	ds	2
   930   000005                     ??_INTERRUPT_InterruptManager:
   931                           
   932                           ; 1 bytes @ 0x4
   933   000005                     	ds	2
   934   000007                     ?_isdigit:
   935                           	callstack 0
   936   000007                     ?_isspace:
   937                           	callstack 0
   938   000007                     ?___wmul:
   939                           	callstack 0
   940   000007                     ?___lmul:
   941                           	callstack 0
   942   000007                     ?___lodiv:
   943                           	callstack 0
   944   000007                     ?___lomod:
   945                           	callstack 0
   946   000007                     EUSART1_Write@txData:
   947                           	callstack 0
   948   000007                     CCP4_SetCallBack@customCallBack:
   949                           	callstack 0
   950   000007                     TMR0_WriteTimer@timerVal:
   951                           	callstack 0
   952   000007                     TMR0_SetInterruptHandler@InterruptHandler:
   953                           	callstack 0
   954   000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   955                           	callstack 0
   956   000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   957                           	callstack 0
   958   000007                     EUSART1_SetErrorHandler@interruptHandler:
   959                           	callstack 0
   960   000007                     EPWM2_LoadDutyValue@dutyValue:
   961                           	callstack 0
   962   000007                     EPWM1_LoadDutyValue@dutyValue:
   963                           	callstack 0
   964   000007                     ___wmul@multiplier:
   965                           	callstack 0
   966   000007                     isdigit@c:
   967                           	callstack 0
   968   000007                     isspace@c:
   969                           	callstack 0
   970   000007                     ___lmul@multiplier:
   971                           	callstack 0
   972   000007                     ___lodiv@dividend:
   973                           	callstack 0
   974   000007                     ___lomod@dividend:
   975                           	callstack 0
   976                           
   977                           ; 8 bytes @ 0x6
   978   000007                     	ds	1
   979   000008                     putch@txData:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x7
   983   000008                     	ds	1
   984   000009                     ??_TMR0_Initialize:
   985   000009                     ??_isdigit:
   986   000009                     ??_isspace:
   987   000009                     ??_EPWM2_LoadDutyValue:
   988   000009                     ??_EPWM1_LoadDutyValue:
   989   000009                     ___wmul@multiplicand:
   990                           	callstack 0
   991   000009                     fputc@c:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x8
   995   000009                     	ds	2
   996   00000B                     _isspace$1836:
   997                           	callstack 0
   998   00000B                     ___wmul@product:
   999                           	callstack 0
  1000   00000B                     fputc@fp:
  1001                           	callstack 0
  1002   00000B                     ___lmul@multiplicand:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0xA
  1006   00000B                     	ds	2
  1007   00000D                     ??_fputc:
  1008   00000D                     ?_atoi:
  1009                           	callstack 0
  1010   00000D                     atoi@s:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0xC
  1014   00000D                     	ds	2
  1015   00000F                     ??_atoi:
  1016   00000F                     ___lmul@product:
  1017                           	callstack 0
  1018   00000F                     ___lodiv@divisor:
  1019                           	callstack 0
  1020   00000F                     ___lomod@divisor:
  1021                           	callstack 0
  1022                           
  1023                           ; 8 bytes @ 0xE
  1024   00000F                     	ds	3
  1025   000012                     ctoa@fp:
  1026                           	callstack 0
  1027   000012                     atoi@neg:
  1028                           	callstack 0
  1029   000012                     fputs@s:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x11
  1033   000012                     	ds	1
  1034   000013                     ?_convertEchToCm:
  1035                           	callstack 0
  1036   000013                     convertEchToCm@timerCounts:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x12
  1040   000013                     	ds	1
  1041   000014                     ctoa@c:
  1042                           	callstack 0
  1043   000014                     atoi@n:
  1044                           	callstack 0
  1045   000014                     fputs@fp:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x13
  1049   000014                     	ds	1
  1050   000015                     ??_ctoa:
  1051                           
  1052                           ; 1 bytes @ 0x14
  1053   000015                     	ds	1
  1054   000016                     fputs@c:
  1055                           	callstack 0
  1056   000016                     ctoa@l:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x15
  1060   000016                     	ds	1
  1061   000017                     ___lomod@counter:
  1062                           	callstack 0
  1063   000017                     fputs@i:
  1064                           	callstack 0
  1065   000017                     ___lodiv@quotient:
  1066                           	callstack 0
  1067                           
  1068                           ; 8 bytes @ 0x16
  1069   000017                     	ds	1
  1070   000018                     ctoa@w:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x17
  1074   000018                     	ds	1
  1075   000019                     pad@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x18
  1079   000019                     	ds	2
  1080   00001B                     pad@buf:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x1A
  1084   00001B                     	ds	2
  1085   00001D                     pad@p:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x1C
  1089   00001D                     	ds	2
  1090   00001F                     ??_pad:
  1091   00001F                     ___lodiv@counter:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x1E
  1095   00001F                     	ds	1
  1096   000020                     pad@i:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x1F
  1100   000020                     	ds	2
  1101   000022                     pad@w:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x21
  1105   000022                     	ds	2
  1106   000024                     utoa@fp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x23
  1110   000024                     	ds	2
  1111   000026                     utoa@d:
  1112                           	callstack 0
  1113                           
  1114                           ; 8 bytes @ 0x25
  1115   000026                     	ds	8
  1116   00002E                     ??_utoa:
  1117                           
  1118                           ; 1 bytes @ 0x2D
  1119   00002E                     	ds	8
  1120   000036                     utoa@w:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x35
  1124   000036                     	ds	2
  1125   000038                     utoa@p:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x37
  1129   000038                     	ds	2
  1130   00003A                     utoa@n:
  1131                           	callstack 0
  1132                           
  1133                           ; 8 bytes @ 0x39
  1134   00003A                     	ds	8
  1135   000042                     utoa@i:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x41
  1139   000042                     	ds	2
  1140   000044                     vfpfcnvrt@fp:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x43
  1144   000044                     	ds	2
  1145   000046                     vfpfcnvrt@fmt:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x45
  1149   000046                     	ds	2
  1150   000048                     vfpfcnvrt@ap:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x47
  1154   000048                     	ds	2
  1155   00004A                     ??_vfpfcnvrt:
  1156                           
  1157                           ; 1 bytes @ 0x49
  1158   00004A                     	ds	4
  1159   00004E                     vfprintf@cfmt:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x4D
  1163   00004E                     	ds	2
  1164   000050                     printf@ap:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x4F
  1168   000050                     	ds	2
  1169                           
  1170 ;;
  1171 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1172 ;;
  1173 ;; *************** function _main *****************
  1174 ;; Defined at:
  1175 ;;		line 48 in file "main.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  sample         16   31[BANK0 ] unsigned short [8]
  1180 ;;  red             2   51[BANK0 ] unsigned short 
  1181 ;;  green           2   47[BANK0 ] unsigned short 
  1182 ;;  temp            2   29[BANK0 ] unsigned short 
  1183 ;;  i               1   54[BANK0 ] unsigned char 
  1184 ;;  j               1   53[BANK0 ] unsigned char 
  1185 ;;  min             1   50[BANK0 ] unsigned char 
  1186 ;;  cmd             1   49[BANK0 ] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1196 ;;      Params:         0       0       0       0       0       0       0
  1197 ;;      Locals:         0      26       0       0       0       0       0
  1198 ;;      Temps:          0       4       0       0       0       0       0
  1199 ;;      Totals:         0      30       0       0       0       0       0
  1200 ;;Total ram usage:       30 bytes
  1201 ;; Hardware stack levels required when called: 13
  1202 ;; This function calls:
  1203 ;;		_CCP4_SetCallBack
  1204 ;;		_EPWM1_LoadDutyValue
  1205 ;;		_EPWM2_LoadDutyValue
  1206 ;;		_EUSART1_Read
  1207 ;;		_EUSART1_is_rx_ready
  1208 ;;		_SYSTEM_Initialize
  1209 ;;		_TMR0_SetInterruptHandler
  1210 ;;		_TMR0_WriteTimer
  1211 ;;		_convertEchToCm
  1212 ;;		_printf
  1213 ;; This function is called by:
  1214 ;;		Startup code after reset
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text0
  1219   000078                     __ptext0:
  1220                           	callstack 0
  1221   000078                     _main:
  1222                           	callstack 18
  1223   000078                     
  1224                           ;main.c: 51:     uint16_t sample[8];;main.c: 52:     uint16_t temp;;main.c: 53:     uint
      +                          8_t i;;main.c: 54:     uint8_t j;;main.c: 55:     uint8_t min;;main.c: 56:     uint16_t 
      +                          red;;main.c: 57:     uint16_t green;;main.c: 58:     char cmd;;main.c: 60:     SYSTEM_In
      +                          itialize();
  1225   000078  ECCA  F009         	call	_SYSTEM_Initialize	;wreg free
  1226   00007C                     
  1227                           ;main.c: 63:     TMR0_WriteTimer(0x0000);
  1228   00007C  0E00               	movlw	0
  1229   00007E  6E08               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1230   000080  0E00               	movlw	0
  1231   000082  6E07               	movwf	TMR0_WriteTimer@timerVal^0,c
  1232   000084  ECC2  F00A         	call	_TMR0_WriteTimer	;wreg free
  1233   000088                     
  1234                           ;main.c: 64:     INTCONbits.TMR0IF = 0;
  1235   000088  94F2               	bcf	242,2,c	;volatile
  1236   00008A                     l427:
  1237   00008A  A4F2               	btfss	242,2,c	;volatile
  1238   00008C  EF4A  F000         	goto	u2041
  1239   000090  EF4C  F000         	goto	u2040
  1240   000094                     u2041:
  1241   000094  EF45  F000         	goto	l427
  1242   000098                     u2040:
  1243   000098                     
  1244                           ;main.c: 67:     TMR0_SetInterruptHandler(TMR0ISR);
  1245   000098  0EEA               	movlw	low _TMR0ISR
  1246   00009A  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1247   00009C  0E14               	movlw	high _TMR0ISR
  1248   00009E  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1249   0000A0  ECC7  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  1250                           
  1251                           ;main.c: 68:     CCP4_SetCallBack(CCP4ISR);
  1252   0000A4  0E78               	movlw	low _CCP4ISR
  1253   0000A6  6E07               	movwf	CCP4_SetCallBack@customCallBack^0,c
  1254   0000A8  0E10               	movlw	high _CCP4ISR
  1255   0000AA  6E08               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  1256   0000AC  ECDB  F00A         	call	_CCP4_SetCallBack	;wreg free
  1257   0000B0                     
  1258                           ;main.c: 69:     (INTCONbits.GIE = 1);
  1259   0000B0  8EF2               	bsf	242,7,c	;volatile
  1260   0000B2                     
  1261                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  1262   0000B2  8CF2               	bsf	242,6,c	;volatile
  1263                           
  1264                           ;main.c: 72:     EPWM1_LoadDutyValue(256);
  1265   0000B4  0E01               	movlw	1
  1266   0000B6  6E08               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1267   0000B8  0E00               	movlw	0
  1268   0000BA  6E07               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1269   0000BC  EC84  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  1270                           
  1271                           ;main.c: 73:     EPWM2_LoadDutyValue(256);
  1272   0000C0  0E01               	movlw	1
  1273   0000C2  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1274   0000C4  0E00               	movlw	0
  1275   0000C6  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  1276   0000C8  EC6C  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  1277   0000CC                     
  1278                           ;main.c: 75:  printf("Dev'21 Board\r\n");
  1279   0000CC  0EAF               	movlw	low STR_1
  1280   0000CE  0100               	movlb	0	; () banked
  1281   0000D0  6F71               	movwf	printf@fmt& (0+255),b
  1282   0000D2  0E7F               	movlw	high STR_1
  1283   0000D4  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1284   0000D6  ECF4  F009         	call	_printf	;wreg free
  1285   0000DA                     
  1286                           ;main.c: 76:  printf("inLab 13 terminal\r\n");
  1287   0000DA  0E66               	movlw	low STR_2
  1288   0000DC  0100               	movlb	0	; () banked
  1289   0000DE  6F71               	movwf	printf@fmt& (0+255),b
  1290   0000E0  0E7F               	movlw	high STR_2
  1291   0000E2  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1292   0000E4  ECF4  F009         	call	_printf	;wreg free
  1293   0000E8                     
  1294                           ;main.c: 77:     printf("Ultrasonic Connections:\r\n");
  1295   0000E8  0EDC               	movlw	low STR_3
  1296   0000EA  0100               	movlb	0	; () banked
  1297   0000EC  6F71               	movwf	printf@fmt& (0+255),b
  1298   0000EE  0E7E               	movlw	high STR_3
  1299   0000F0  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1300   0000F2  ECF4  F009         	call	_printf	;wreg free
  1301   0000F6                     
  1302                           ;main.c: 78:     printf("    Vcc: left pin on JP1 header (closest to mini USB).\r\n");
  1303   0000F6  0EEF               	movlw	low STR_4
  1304   0000F8  0100               	movlb	0	; () banked
  1305   0000FA  6F71               	movwf	printf@fmt& (0+255),b
  1306   0000FC  0E7D               	movlw	high STR_4
  1307   0000FE  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1308   000100  ECF4  F009         	call	_printf	;wreg free
  1309   000104                     
  1310                           ;main.c: 79:     printf("    Trig:   RC4\r\n");
  1311   000104  0E8C               	movlw	low STR_5
  1312   000106  0100               	movlb	0	; () banked
  1313   000108  6F71               	movwf	printf@fmt& (0+255),b
  1314   00010A  0E7F               	movlw	high STR_5
  1315   00010C  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1316   00010E  ECF4  F009         	call	_printf	;wreg free
  1317   000112                     
  1318                           ;main.c: 80:     printf("    Echo:   RB0\r\n");
  1319   000112  0E7A               	movlw	low STR_6
  1320   000114  0100               	movlb	0	; () banked
  1321   000116  6F71               	movwf	printf@fmt& (0+255),b
  1322   000118  0E7F               	movlw	high STR_6
  1323   00011A  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1324   00011C  ECF4  F009         	call	_printf	;wreg free
  1325   000120                     
  1326                           ;main.c: 81:     printf("    GND:    GND header pin on PIC breakout header.\r\n");
  1327   000120  0E28               	movlw	low STR_7
  1328   000122  0100               	movlb	0	; () banked
  1329   000124  6F71               	movwf	printf@fmt& (0+255),b
  1330   000126  0E7E               	movlw	high STR_7
  1331   000128  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1332   00012A  ECF4  F009         	call	_printf	;wreg free
  1333   00012E                     
  1334                           ;main.c: 82:  printf("\r\n> ");
  1335   00012E  0EF7               	movlw	low STR_8
  1336   000130  0100               	movlb	0	; () banked
  1337   000132  6F71               	movwf	printf@fmt& (0+255),b
  1338   000134  0E7F               	movlw	high STR_8
  1339   000136  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1340   000138  ECF4  F009         	call	_printf	;wreg free
  1341   00013C                     l3194:
  1342                           
  1343                           ;main.c: 85:     {;main.c: 86:   if ((EUSART1_is_rx_ready()))
  1344   00013C  ECAB  F00A         	call	_EUSART1_is_rx_ready	;wreg free
  1345   000140  0900               	iorlw	0
  1346   000142  B4D8               	btfsc	status,2,c
  1347   000144  EFA6  F000         	goto	u2051
  1348   000148  EFA8  F000         	goto	u2050
  1349   00014C                     u2051:
  1350   00014C  EF9E  F000         	goto	l3194
  1351   000150                     u2050:
  1352   000150                     
  1353                           ;main.c: 87:         {;main.c: 88:             cmd = EUSART1_Read();
  1354   000150  EC08  F00A         	call	_EUSART1_Read	;wreg free
  1355   000154  0100               	movlb	0	; () banked
  1356   000156  6F91               	movwf	main@cmd& (0+255),b
  1357   000158                     
  1358                           ; BSR set to: 0
  1359                           ;main.c: 89:             printf("%c\n\r", cmd);
  1360   000158  0EE8               	movlw	low STR_9
  1361   00015A  6F71               	movwf	printf@fmt& (0+255),b
  1362   00015C  0E7F               	movlw	high STR_9
  1363   00015E  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1364   000160  C091  F073         	movff	main@cmd,?_printf+2
  1365   000164  6B74               	clrf	(?_printf+3)& (0+255),b
  1366   000166  ECF4  F009         	call	_printf	;wreg free
  1367                           
  1368                           ;main.c: 91:    switch (cmd)
  1369   00016A  EF0E  F003         	goto	l3368
  1370   00016E                     l3200:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;main.c: 95:                     printf("------------------------------\r\n");
  1374   00016E  0E5D               	movlw	low STR_10
  1375   000170  6F71               	movwf	printf@fmt& (0+255),b
  1376   000172  0E7E               	movlw	high STR_10
  1377   000174  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1378   000176  ECF4  F009         	call	_printf	;wreg free
  1379                           
  1380                           ;main.c: 96:                     printf("?: Help menu\r\n");
  1381   00017A  0EBE               	movlw	low STR_11
  1382   00017C  0100               	movlb	0	; () banked
  1383   00017E  6F71               	movwf	printf@fmt& (0+255),b
  1384   000180  0E7F               	movlw	high STR_11
  1385   000182  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1386   000184  ECF4  F009         	call	_printf	;wreg free
  1387                           
  1388                           ;main.c: 97:                     printf("o: k\r\n");
  1389   000188  0EE1               	movlw	low STR_12
  1390   00018A  0100               	movlb	0	; () banked
  1391   00018C  6F71               	movwf	printf@fmt& (0+255),b
  1392   00018E  0E7F               	movlw	high STR_12
  1393   000190  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1394   000192  ECF4  F009         	call	_printf	;wreg free
  1395                           
  1396                           ;main.c: 98:                     printf("Z: Reset processor\r\n");
  1397   000196  0E51               	movlw	low STR_13
  1398   000198  0100               	movlb	0	; () banked
  1399   00019A  6F71               	movwf	printf@fmt& (0+255),b
  1400   00019C  0E7F               	movlw	high STR_13
  1401   00019E  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1402   0001A0  ECF4  F009         	call	_printf	;wreg free
  1403                           
  1404                           ;main.c: 99:                     printf("z: Clear the terminal\r\n");
  1405   0001A4  0EF6               	movlw	low STR_14
  1406   0001A6  0100               	movlb	0	; () banked
  1407   0001A8  6F71               	movwf	printf@fmt& (0+255),b
  1408   0001AA  0E7E               	movlw	high STR_14
  1409   0001AC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1410   0001AE  ECF4  F009         	call	_printf	;wreg free
  1411                           
  1412                           ;main.c: 100:                     printf("s: Stream Echo pulse length\r\n");
  1413   0001B2  0EBE               	movlw	low STR_15
  1414   0001B4  0100               	movlb	0	; () banked
  1415   0001B6  6F71               	movwf	printf@fmt& (0+255),b
  1416   0001B8  0E7E               	movlw	high STR_15
  1417   0001BA  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1418   0001BC  ECF4  F009         	call	_printf	;wreg free
  1419                           
  1420                           ;main.c: 101:                     printf("S: Stream distance\r\n");
  1421   0001C0  0E3C               	movlw	low STR_16
  1422   0001C2  0100               	movlb	0	; () banked
  1423   0001C4  6F71               	movwf	printf@fmt& (0+255),b
  1424   0001C6  0E7F               	movlw	high STR_16
  1425   0001C8  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1426   0001CA  ECF4  F009         	call	_printf	;wreg free
  1427                           
  1428                           ;main.c: 102:                     printf("c: collect and sort distances\n\r");
  1429   0001CE  0E9E               	movlw	low STR_17
  1430   0001D0  0100               	movlb	0	; () banked
  1431   0001D2  6F71               	movwf	printf@fmt& (0+255),b
  1432   0001D4  0E7E               	movlw	high STR_17
  1433   0001D6  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1434   0001D8  ECF4  F009         	call	_printf	;wreg free
  1435                           
  1436                           ;main.c: 103:                     printf("C: convert distances to color\n\r");
  1437   0001DC  0E7E               	movlw	low STR_18
  1438   0001DE  0100               	movlb	0	; () banked
  1439   0001E0  6F71               	movwf	printf@fmt& (0+255),b
  1440   0001E2  0E7E               	movlw	high STR_18
  1441   0001E4  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1442   0001E6  ECF4  F009         	call	_printf	;wreg free
  1443                           
  1444                           ;main.c: 104:                     printf("------------------------------\r\n");
  1445   0001EA  0E5D               	movlw	low STR_10
  1446   0001EC  0100               	movlb	0	; () banked
  1447   0001EE  6F71               	movwf	printf@fmt& (0+255),b
  1448   0001F0  0E7E               	movlw	high STR_10
  1449   0001F2  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1450   0001F4  ECF4  F009         	call	_printf	;wreg free
  1451                           
  1452                           ;main.c: 105:                     break;
  1453   0001F8  EF3C  F003         	goto	l3370
  1454   0001FC                     l3202:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main.c: 108:                     printf(" k\r\n");
  1458   0001FC  0EE3               	movlw	low (STR_12+2)
  1459   0001FE  6F71               	movwf	printf@fmt& (0+255),b
  1460   000200  0E7F               	movlw	high (STR_12+2)
  1461   000202  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1462   000204  ECF4  F009         	call	_printf	;wreg free
  1463                           
  1464                           ;main.c: 109:                     break;
  1465   000208  EF3C  F003         	goto	l3370
  1466   00020C                     l3204:
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;main.c: 112:                     for (i = 0; i < 40; i++) printf("\n");
  1470   00020C  0E00               	movlw	0
  1471   00020E  6F96               	movwf	main@i& (0+255),b
  1472   000210                     l3210:
  1473                           
  1474                           ; BSR set to: 0
  1475   000210  0E7C               	movlw	low (STR_10+31)
  1476   000212  6F71               	movwf	printf@fmt& (0+255),b
  1477   000214  0E7E               	movlw	high (STR_10+31)
  1478   000216  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1479   000218  ECF4  F009         	call	_printf	;wreg free
  1480   00021C  0100               	movlb	0	; () banked
  1481   00021E  2B96               	incf	main@i& (0+255),f,b
  1482   000220                     
  1483                           ; BSR set to: 0
  1484   000220  0E27               	movlw	39
  1485   000222  6596               	cpfsgt	main@i& (0+255),b
  1486   000224  EF16  F001         	goto	u2061
  1487   000228  EF18  F001         	goto	u2060
  1488   00022C                     u2061:
  1489   00022C  EF08  F001         	goto	l3210
  1490   000230                     u2060:
  1491   000230                     
  1492                           ; BSR set to: 0
  1493   000230  00FF               	reset		;# 
  1494                           
  1495                           ;main.c: 114:                     break;
  1496   000232  EF3C  F003         	goto	l3370
  1497   000236                     l3216:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 117:                     for (i = 0; i < 40; i++) printf("\n>");
  1501   000236  0E00               	movlw	0
  1502   000238  6F96               	movwf	main@i& (0+255),b
  1503   00023A                     l3222:
  1504                           
  1505                           ; BSR set to: 0
  1506   00023A  0EFC               	movlw	low STR_22
  1507   00023C  6F71               	movwf	printf@fmt& (0+255),b
  1508   00023E  0E7F               	movlw	high STR_22
  1509   000240  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1510   000242  ECF4  F009         	call	_printf	;wreg free
  1511   000246  0100               	movlb	0	; () banked
  1512   000248  2B96               	incf	main@i& (0+255),f,b
  1513   00024A                     
  1514                           ; BSR set to: 0
  1515   00024A  0E27               	movlw	39
  1516   00024C  6596               	cpfsgt	main@i& (0+255),b
  1517   00024E  EF2B  F001         	goto	u2071
  1518   000252  EF2D  F001         	goto	u2070
  1519   000256                     u2071:
  1520   000256  EF1D  F001         	goto	l3222
  1521   00025A                     u2070:
  1522   00025A  EF3C  F003         	goto	l3370
  1523   00025E                     l3228:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;main.c: 121:                     printf("press any key to exit\r\n");
  1527   00025E  0E0E               	movlw	low STR_23
  1528   000260  6F71               	movwf	printf@fmt& (0+255),b
  1529   000262  0E7F               	movlw	high STR_23
  1530   000264  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1531   000266  ECF4  F009         	call	_printf	;wreg free
  1532   00026A                     l3230:
  1533                           
  1534                           ;main.c: 122:                     newEcho = 0;
  1535   00026A  0E00               	movlw	0
  1536   00026C  0100               	movlb	0	; () banked
  1537   00026E  6FAC               	movwf	_newEcho& (0+255),b
  1538                           
  1539                           ;main.c: 123:                     while(!(EUSART1_is_rx_ready()))
  1540   000270  EF57  F001         	goto	l3238
  1541   000274                     l3232:
  1542                           
  1543                           ;main.c: 124:                     {;main.c: 125:                         if(newEcho)
  1544   000274  0100               	movlb	0	; () banked
  1545   000276  51AC               	movf	_newEcho& (0+255),w,b
  1546   000278  B4D8               	btfsc	status,2,c
  1547   00027A  EF41  F001         	goto	u2081
  1548   00027E  EF43  F001         	goto	u2080
  1549   000282                     u2081:
  1550   000282  EF57  F001         	goto	l3238
  1551   000286                     u2080:
  1552   000286                     
  1553                           ; BSR set to: 0
  1554                           ;main.c: 126:                         {;main.c: 127:                             printf(
      +                          "%8u\r", rise, fall, echo);
  1555   000286  0EED               	movlw	low STR_24
  1556   000288  6F71               	movwf	printf@fmt& (0+255),b
  1557   00028A  0E7F               	movlw	high STR_24
  1558   00028C  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1559   00028E  C09D  F073         	movff	_rise,?_printf+2
  1560   000292  C09E  F074         	movff	_rise+1,?_printf+3
  1561   000296  C09B  F075         	movff	_fall,?_printf+4
  1562   00029A  C09C  F076         	movff	_fall+1,?_printf+5
  1563   00029E  C099  F077         	movff	_echo,?_printf+6
  1564   0002A2  C09A  F078         	movff	_echo+1,?_printf+7
  1565   0002A6  ECF4  F009         	call	_printf	;wreg free
  1566   0002AA  EF35  F001         	goto	l3230
  1567   0002AE                     l3238:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 123:                     while(!(EUSART1_is_rx_ready()))
  1571   0002AE  ECAB  F00A         	call	_EUSART1_is_rx_ready	;wreg free
  1572   0002B2  0900               	iorlw	0
  1573   0002B4  B4D8               	btfsc	status,2,c
  1574   0002B6  EF5F  F001         	goto	u2091
  1575   0002BA  EF61  F001         	goto	u2090
  1576   0002BE                     u2091:
  1577   0002BE  EF3A  F001         	goto	l3232
  1578   0002C2                     u2090:
  1579   0002C2                     
  1580                           ;main.c: 131:                     (void) EUSART1_Read();
  1581   0002C2  EC08  F00A         	call	_EUSART1_Read	;wreg free
  1582   0002C6                     
  1583                           ;main.c: 132:                     printf("\r\n");
  1584   0002C6  0E7B               	movlw	low (STR_10+30)
  1585   0002C8  0100               	movlb	0	; () banked
  1586   0002CA  6F71               	movwf	printf@fmt& (0+255),b
  1587   0002CC  0E7E               	movlw	high (STR_10+30)
  1588   0002CE  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1589   0002D0  ECF4  F009         	call	_printf	;wreg free
  1590                           
  1591                           ;main.c: 133:                     break;
  1592   0002D4  EF3C  F003         	goto	l3370
  1593   0002D8                     l3244:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 136:                     printf("press any key to exit\r\n");
  1597   0002D8  0E0E               	movlw	low STR_23
  1598   0002DA  6F71               	movwf	printf@fmt& (0+255),b
  1599   0002DC  0E7F               	movlw	high STR_23
  1600   0002DE  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1601   0002E0  ECF4  F009         	call	_printf	;wreg free
  1602   0002E4                     l3246:
  1603                           
  1604                           ;main.c: 137:                     newEcho = 0;
  1605   0002E4  0E00               	movlw	0
  1606   0002E6  0100               	movlb	0	; () banked
  1607   0002E8  6FAC               	movwf	_newEcho& (0+255),b
  1608                           
  1609                           ;main.c: 138:                     while(!(EUSART1_is_rx_ready()))
  1610   0002EA  EF92  F001         	goto	l3254
  1611   0002EE                     l3248:
  1612                           
  1613                           ;main.c: 139:                     {;main.c: 140:                         if(newEcho)
  1614   0002EE  0100               	movlb	0	; () banked
  1615   0002F0  51AC               	movf	_newEcho& (0+255),w,b
  1616   0002F2  B4D8               	btfsc	status,2,c
  1617   0002F4  EF7E  F001         	goto	u2101
  1618   0002F8  EF80  F001         	goto	u2100
  1619   0002FC                     u2101:
  1620   0002FC  EF92  F001         	goto	l3254
  1621   000300                     u2100:
  1622   000300                     
  1623                           ; BSR set to: 0
  1624                           ;main.c: 141:                         {;main.c: 142:                             printf(
      +                          "%8u\r", convertEchToCm(echo));
  1625   000300  0EED               	movlw	low STR_24
  1626   000302  6F71               	movwf	printf@fmt& (0+255),b
  1627   000304  0E7F               	movlw	high STR_24
  1628   000306  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1629   000308  C099  F013         	movff	_echo,convertEchToCm@timerCounts
  1630   00030C  C09A  F014         	movff	_echo+1,convertEchToCm@timerCounts+1
  1631   000310  ECDB  F008         	call	_convertEchToCm	;wreg free
  1632   000314  C013  F073         	movff	?_convertEchToCm,?_printf+2
  1633   000318  C014  F074         	movff	?_convertEchToCm+1,?_printf+3
  1634   00031C  ECF4  F009         	call	_printf	;wreg free
  1635   000320  EF72  F001         	goto	l3246
  1636   000324                     l3254:
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;main.c: 138:                     while(!(EUSART1_is_rx_ready()))
  1640   000324  ECAB  F00A         	call	_EUSART1_is_rx_ready	;wreg free
  1641   000328  0900               	iorlw	0
  1642   00032A  B4D8               	btfsc	status,2,c
  1643   00032C  EF9A  F001         	goto	u2111
  1644   000330  EF9C  F001         	goto	u2110
  1645   000334                     u2111:
  1646   000334  EF77  F001         	goto	l3248
  1647   000338                     u2110:
  1648   000338                     
  1649                           ;main.c: 146:                     (void) EUSART1_Read();
  1650   000338  EC08  F00A         	call	_EUSART1_Read	;wreg free
  1651   00033C                     
  1652                           ;main.c: 147:                     printf("\r\n");
  1653   00033C  0E7B               	movlw	low (STR_10+30)
  1654   00033E  0100               	movlb	0	; () banked
  1655   000340  6F71               	movwf	printf@fmt& (0+255),b
  1656   000342  0E7E               	movlw	high (STR_10+30)
  1657   000344  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1658   000346  ECF4  F009         	call	_printf	;wreg free
  1659                           
  1660                           ;main.c: 148:                     break;
  1661   00034A  EF3C  F003         	goto	l3370
  1662   00034E                     l3260:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;main.c: 152:                     newEcho = 0;
  1666   00034E  0E00               	movlw	0
  1667   000350  6FAC               	movwf	_newEcho& (0+255),b
  1668                           
  1669                           ;main.c: 153:                     for (i = 0; i < 8; i++)
  1670   000352  0E00               	movlw	0
  1671   000354  6F96               	movwf	main@i& (0+255),b
  1672   000356                     l3266:
  1673                           
  1674                           ; BSR set to: 0
  1675   000356  51AC               	movf	_newEcho& (0+255),w,b
  1676   000358  B4D8               	btfsc	status,2,c
  1677   00035A  EFB1  F001         	goto	u2121
  1678   00035E  EFB3  F001         	goto	u2120
  1679   000362                     u2121:
  1680   000362  EFAB  F001         	goto	l3266
  1681   000366                     u2120:
  1682   000366                     
  1683                           ; BSR set to: 0
  1684                           ;main.c: 156:                         sample[i] = echo;
  1685   000366  5196               	movf	main@i& (0+255),w,b
  1686   000368  0D02               	mullw	2
  1687   00036A  0E7F               	movlw	low main@sample
  1688   00036C  24F3               	addwf	243,w,c
  1689   00036E  6ED9               	movwf	fsr2l,c
  1690   000370  0E00               	movlw	high main@sample
  1691   000372  20F4               	addwfc	prodh,w,c
  1692   000374  6EDA               	movwf	fsr2h,c
  1693   000376  C099  FFDE         	movff	_echo,postinc2
  1694   00037A  C09A  FFDD         	movff	_echo+1,postdec2
  1695   00037E                     
  1696                           ; BSR set to: 0
  1697                           ;main.c: 157:                         newEcho = 0;
  1698   00037E  0E00               	movlw	0
  1699   000380  6FAC               	movwf	_newEcho& (0+255),b
  1700   000382                     
  1701                           ; BSR set to: 0
  1702                           ;main.c: 158:                     }
  1703   000382  2B96               	incf	main@i& (0+255),f,b
  1704   000384                     
  1705                           ; BSR set to: 0
  1706   000384  0E07               	movlw	7
  1707   000386  6596               	cpfsgt	main@i& (0+255),b
  1708   000388  EFC8  F001         	goto	u2131
  1709   00038C  EFCA  F001         	goto	u2130
  1710   000390                     u2131:
  1711   000390  EFAB  F001         	goto	l3266
  1712   000394                     u2130:
  1713   000394                     
  1714                           ; BSR set to: 0
  1715                           ;main.c: 160:                     printf("Unsorted\r\n");
  1716   000394  0ECD               	movlw	low STR_29
  1717   000396  6F71               	movwf	printf@fmt& (0+255),b
  1718   000398  0E7F               	movlw	high STR_29
  1719   00039A  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1720   00039C  ECF4  F009         	call	_printf	;wreg free
  1721   0003A0                     
  1722                           ;main.c: 161:                     for (i = 0; i < 8; i++) printf("%u  ", sample[i]);
  1723   0003A0  0E00               	movlw	0
  1724   0003A2  0100               	movlb	0	; () banked
  1725   0003A4  6F96               	movwf	main@i& (0+255),b
  1726   0003A6                     l3284:
  1727                           
  1728                           ; BSR set to: 0
  1729   0003A6  0EF2               	movlw	low STR_30
  1730   0003A8  6F71               	movwf	printf@fmt& (0+255),b
  1731   0003AA  0E7F               	movlw	high STR_30
  1732   0003AC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1733   0003AE  5196               	movf	main@i& (0+255),w,b
  1734   0003B0  0D02               	mullw	2
  1735   0003B2  0E7F               	movlw	low main@sample
  1736   0003B4  24F3               	addwf	243,w,c
  1737   0003B6  6ED9               	movwf	fsr2l,c
  1738   0003B8  0E00               	movlw	high main@sample
  1739   0003BA  20F4               	addwfc	prodh,w,c
  1740   0003BC  6EDA               	movwf	fsr2h,c
  1741   0003BE  CFDE F073          	movff	postinc2,?_printf+2
  1742   0003C2  CFDD F074          	movff	postdec2,?_printf+3
  1743   0003C6  ECF4  F009         	call	_printf	;wreg free
  1744   0003CA  0100               	movlb	0	; () banked
  1745   0003CC  2B96               	incf	main@i& (0+255),f,b
  1746   0003CE                     
  1747                           ; BSR set to: 0
  1748   0003CE  0E07               	movlw	7
  1749   0003D0  6596               	cpfsgt	main@i& (0+255),b
  1750   0003D2  EFED  F001         	goto	u2141
  1751   0003D6  EFEF  F001         	goto	u2140
  1752   0003DA                     u2141:
  1753   0003DA  EFD3  F001         	goto	l3284
  1754   0003DE                     u2140:
  1755   0003DE                     
  1756                           ; BSR set to: 0
  1757                           ;main.c: 162:                     printf("\r\n");
  1758   0003DE  0E7B               	movlw	low (STR_10+30)
  1759   0003E0  6F71               	movwf	printf@fmt& (0+255),b
  1760   0003E2  0E7E               	movlw	high (STR_10+30)
  1761   0003E4  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1762   0003E6  ECF4  F009         	call	_printf	;wreg free
  1763   0003EA                     
  1764                           ;main.c: 164:                     for (i = 0; i < 8; i++)
  1765   0003EA  0E00               	movlw	0
  1766   0003EC  0100               	movlb	0	; () banked
  1767   0003EE  6F96               	movwf	main@i& (0+255),b
  1768   0003F0                     l460:
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;main.c: 165:                     {;main.c: 167:                         min = i;
  1772   0003F0  C096  F092         	movff	main@i,main@min
  1773                           
  1774                           ;main.c: 168:                         for (j = i; j < 8; j++)
  1775   0003F4  C096  F095         	movff	main@i,main@j
  1776   0003F8                     l3298:
  1777                           
  1778                           ; BSR set to: 0
  1779   0003F8  0E07               	movlw	7
  1780   0003FA  6595               	cpfsgt	main@j& (0+255),b
  1781   0003FC  EF02  F002         	goto	u2151
  1782   000400  EF04  F002         	goto	u2150
  1783   000404                     u2151:
  1784   000404  EF06  F002         	goto	l3302
  1785   000408                     u2150:
  1786   000408  EF26  F002         	goto	l3310
  1787   00040C                     l3302:
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;main.c: 169:                         {;main.c: 170:                             if(samp
      +                          le[j] < sample[min]) min = j;
  1791   00040C  5192               	movf	main@min& (0+255),w,b
  1792   00040E  0D02               	mullw	2
  1793   000410  0E7F               	movlw	low main@sample
  1794   000412  24F3               	addwf	243,w,c
  1795   000414  6ED9               	movwf	fsr2l,c
  1796   000416  0E00               	movlw	high main@sample
  1797   000418  20F4               	addwfc	prodh,w,c
  1798   00041A  6EDA               	movwf	fsr2h,c
  1799   00041C  5195               	movf	main@j& (0+255),w,b
  1800   00041E  0D02               	mullw	2
  1801   000420  0E7F               	movlw	low main@sample
  1802   000422  24F3               	addwf	243,w,c
  1803   000424  6EE1               	movwf	fsr1l,c
  1804   000426  0E00               	movlw	high main@sample
  1805   000428  20F4               	addwfc	prodh,w,c
  1806   00042A  6EE2               	movwf	fsr1h,c
  1807   00042C  50DE               	movf	postinc2,w,c
  1808   00042E  5CE6               	subwf	postinc1,w,c
  1809   000430  50DE               	movf	postinc2,w,c
  1810   000432  58E6               	subwfb	postinc1,w,c
  1811   000434  B0D8               	btfsc	status,0,c
  1812   000436  EF1F  F002         	goto	u2161
  1813   00043A  EF21  F002         	goto	u2160
  1814   00043E                     u2161:
  1815   00043E  EF23  F002         	goto	l3306
  1816   000442                     u2160:
  1817   000442                     
  1818                           ; BSR set to: 0
  1819   000442  C095  F092         	movff	main@j,main@min
  1820   000446                     l3306:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;main.c: 171:                         }
  1824   000446  2B95               	incf	main@j& (0+255),f,b
  1825   000448  EFFC  F001         	goto	l3298
  1826   00044C                     l3310:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;main.c: 173:                         temp = sample[i];
  1830   00044C  5196               	movf	main@i& (0+255),w,b
  1831   00044E  0D02               	mullw	2
  1832   000450  0E7F               	movlw	low main@sample
  1833   000452  24F3               	addwf	243,w,c
  1834   000454  6ED9               	movwf	fsr2l,c
  1835   000456  0E00               	movlw	high main@sample
  1836   000458  20F4               	addwfc	prodh,w,c
  1837   00045A  6EDA               	movwf	fsr2h,c
  1838   00045C  CFDE F07D          	movff	postinc2,main@temp
  1839   000460  CFDD F07E          	movff	postdec2,main@temp+1
  1840   000464                     
  1841                           ; BSR set to: 0
  1842                           ;main.c: 174:                         sample[i] = sample[min];
  1843   000464  5192               	movf	main@min& (0+255),w,b
  1844   000466  0D02               	mullw	2
  1845   000468  0E7F               	movlw	low main@sample
  1846   00046A  24F3               	addwf	243,w,c
  1847   00046C  6ED9               	movwf	fsr2l,c
  1848   00046E  0E00               	movlw	high main@sample
  1849   000470  20F4               	addwfc	prodh,w,c
  1850   000472  6EDA               	movwf	fsr2h,c
  1851   000474  5196               	movf	main@i& (0+255),w,b
  1852   000476  0D02               	mullw	2
  1853   000478  0E7F               	movlw	low main@sample
  1854   00047A  24F3               	addwf	243,w,c
  1855   00047C  6EE1               	movwf	fsr1l,c
  1856   00047E  0E00               	movlw	high main@sample
  1857   000480  20F4               	addwfc	prodh,w,c
  1858   000482  6EE2               	movwf	fsr1h,c
  1859   000484  CFDE FFE6          	movff	postinc2,postinc1
  1860   000488  CFDD FFE5          	movff	postdec2,postdec1
  1861   00048C                     
  1862                           ; BSR set to: 0
  1863                           ;main.c: 175:                         sample[min] = temp;
  1864   00048C  5192               	movf	main@min& (0+255),w,b
  1865   00048E  0D02               	mullw	2
  1866   000490  0E7F               	movlw	low main@sample
  1867   000492  24F3               	addwf	243,w,c
  1868   000494  6ED9               	movwf	fsr2l,c
  1869   000496  0E00               	movlw	high main@sample
  1870   000498  20F4               	addwfc	prodh,w,c
  1871   00049A  6EDA               	movwf	fsr2h,c
  1872   00049C  C07D  FFDE         	movff	main@temp,postinc2
  1873   0004A0  C07E  FFDD         	movff	main@temp+1,postdec2
  1874   0004A4                     
  1875                           ; BSR set to: 0
  1876                           ;main.c: 176:                     }
  1877   0004A4  2B96               	incf	main@i& (0+255),f,b
  1878   0004A6                     
  1879                           ; BSR set to: 0
  1880   0004A6  0E07               	movlw	7
  1881   0004A8  6596               	cpfsgt	main@i& (0+255),b
  1882   0004AA  EF59  F002         	goto	u2171
  1883   0004AE  EF5B  F002         	goto	u2170
  1884   0004B2                     u2171:
  1885   0004B2  EFF8  F001         	goto	l460
  1886   0004B6                     u2170:
  1887   0004B6                     
  1888                           ; BSR set to: 0
  1889                           ;main.c: 178:                     printf("Sorted\r\n");
  1890   0004B6  0ED8               	movlw	low STR_32
  1891   0004B8  6F71               	movwf	printf@fmt& (0+255),b
  1892   0004BA  0E7F               	movlw	high STR_32
  1893   0004BC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1894   0004BE  ECF4  F009         	call	_printf	;wreg free
  1895   0004C2                     
  1896                           ;main.c: 179:                     for (i = 0; i < 8; i++) printf("%u  ", sample[i]);
  1897   0004C2  0E00               	movlw	0
  1898   0004C4  0100               	movlb	0	; () banked
  1899   0004C6  6F96               	movwf	main@i& (0+255),b
  1900   0004C8                     l3328:
  1901                           
  1902                           ; BSR set to: 0
  1903   0004C8  0EF2               	movlw	low STR_30
  1904   0004CA  6F71               	movwf	printf@fmt& (0+255),b
  1905   0004CC  0E7F               	movlw	high STR_30
  1906   0004CE  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1907   0004D0  5196               	movf	main@i& (0+255),w,b
  1908   0004D2  0D02               	mullw	2
  1909   0004D4  0E7F               	movlw	low main@sample
  1910   0004D6  24F3               	addwf	243,w,c
  1911   0004D8  6ED9               	movwf	fsr2l,c
  1912   0004DA  0E00               	movlw	high main@sample
  1913   0004DC  20F4               	addwfc	prodh,w,c
  1914   0004DE  6EDA               	movwf	fsr2h,c
  1915   0004E0  CFDE F073          	movff	postinc2,?_printf+2
  1916   0004E4  CFDD F074          	movff	postdec2,?_printf+3
  1917   0004E8  ECF4  F009         	call	_printf	;wreg free
  1918   0004EC  0100               	movlb	0	; () banked
  1919   0004EE  2B96               	incf	main@i& (0+255),f,b
  1920   0004F0                     
  1921                           ; BSR set to: 0
  1922   0004F0  0E07               	movlw	7
  1923   0004F2  6596               	cpfsgt	main@i& (0+255),b
  1924   0004F4  EF7E  F002         	goto	u2181
  1925   0004F8  EF80  F002         	goto	u2180
  1926   0004FC                     u2181:
  1927   0004FC  EF64  F002         	goto	l3328
  1928   000500                     u2180:
  1929   000500                     
  1930                           ; BSR set to: 0
  1931                           ;main.c: 180:                     printf("\r\n");
  1932   000500  0E7B               	movlw	low (STR_10+30)
  1933   000502  6F71               	movwf	printf@fmt& (0+255),b
  1934   000504  0E7E               	movlw	high (STR_10+30)
  1935   000506  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1936   000508  ECF4  F009         	call	_printf	;wreg free
  1937                           
  1938                           ;main.c: 181:                     break;
  1939   00050C  EF3C  F003         	goto	l3370
  1940   000510                     l3336:
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;main.c: 184:                     printf("press any key to exit\r\n");
  1944   000510  0E0E               	movlw	low STR_23
  1945   000512  6F71               	movwf	printf@fmt& (0+255),b
  1946   000514  0E7F               	movlw	high STR_23
  1947   000516  6F72               	movwf	(printf@fmt+1)& (0+255),b
  1948   000518  ECF4  F009         	call	_printf	;wreg free
  1949   00051C                     l3338:
  1950                           
  1951                           ;main.c: 185:                     newEcho = 0;
  1952   00051C  0E00               	movlw	0
  1953   00051E  0100               	movlb	0	; () banked
  1954   000520  6FAC               	movwf	_newEcho& (0+255),b
  1955                           
  1956                           ;main.c: 186:                     while(!(EUSART1_is_rx_ready()))
  1957   000522  EFE2  F002         	goto	l3354
  1958   000526                     l3340:
  1959                           
  1960                           ;main.c: 187:                     {;main.c: 188:                         if(newEcho)
  1961   000526  0100               	movlb	0	; () banked
  1962   000528  51AC               	movf	_newEcho& (0+255),w,b
  1963   00052A  B4D8               	btfsc	status,2,c
  1964   00052C  EF9A  F002         	goto	u2191
  1965   000530  EF9C  F002         	goto	u2190
  1966   000534                     u2191:
  1967   000534  EFE2  F002         	goto	l3354
  1968   000538                     u2190:
  1969   000538                     
  1970                           ; BSR set to: 0
  1971                           ;main.c: 189:                         {;main.c: 200:                             red = e
      +                          cho >> 6;
  1972   000538  C099  F079         	movff	_echo,??_main
  1973   00053C  C09A  F07A         	movff	_echo+1,??_main+1
  1974   000540  0E06               	movlw	6
  1975   000542  6F7B               	movwf	(??_main+2)& (0+255),b
  1976   000544                     u2205:
  1977   000544  90D8               	bcf	status,0,c
  1978   000546  337A               	rrcf	(??_main+1)& (0+255),f,b
  1979   000548  3379               	rrcf	??_main& (0+255),f,b
  1980   00054A  2F7B               	decfsz	(??_main+2)& (0+255),f,b
  1981   00054C  EFA2  F002         	goto	u2205
  1982   000550  C079  F093         	movff	??_main,main@red
  1983   000554  C07A  F094         	movff	??_main+1,main@red+1
  1984                           
  1985                           ;main.c: 201:                             green = 256 - red;
  1986   000558  5193               	movf	main@red& (0+255),w,b
  1987   00055A  0800               	sublw	0
  1988   00055C  6F8F               	movwf	main@green& (0+255),b
  1989   00055E  5194               	movf	(main@red+1)& (0+255),w,b
  1990   000560  A0D8               	btfss	status,0,c
  1991   000562  2AE8               	incf	wreg,f,c
  1992   000564  0801               	sublw	1
  1993   000566  6F90               	movwf	(main@green+1)& (0+255),b
  1994                           
  1995                           ;main.c: 202:                             if(red > 256) {red = 256; green = 0;}
  1996   000568  0593               	decf	main@red& (0+255),w,b
  1997   00056A  0E01               	movlw	1
  1998   00056C  5994               	subwfb	(main@red+1)& (0+255),w,b
  1999   00056E  A0D8               	btfss	status,0,c
  2000   000570  EFBC  F002         	goto	u2211
  2001   000574  EFBE  F002         	goto	u2210
  2002   000578                     u2211:
  2003   000578  EFC6  F002         	goto	l3346
  2004   00057C                     u2210:
  2005   00057C                     
  2006                           ; BSR set to: 0
  2007   00057C  0E01               	movlw	1
  2008   00057E  6F94               	movwf	(main@red+1)& (0+255),b
  2009   000580  0E00               	movlw	0
  2010   000582  6F93               	movwf	main@red& (0+255),b
  2011   000584  0E00               	movlw	0
  2012   000586  6F90               	movwf	(main@green+1)& (0+255),b
  2013   000588  0E00               	movlw	0
  2014   00058A  6F8F               	movwf	main@green& (0+255),b
  2015   00058C                     l3346:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;main.c: 203:                             printf("\rred(%3u), green(%3u)", red, green);
  2019   00058C  0E26               	movlw	low STR_36
  2020   00058E  6F71               	movwf	printf@fmt& (0+255),b
  2021   000590  0E7F               	movlw	high STR_36
  2022   000592  6F72               	movwf	(printf@fmt+1)& (0+255),b
  2023   000594  C093  F073         	movff	main@red,?_printf+2
  2024   000598  C094  F074         	movff	main@red+1,?_printf+3
  2025   00059C  C08F  F075         	movff	main@green,?_printf+4
  2026   0005A0  C090  F076         	movff	main@green+1,?_printf+5
  2027   0005A4  ECF4  F009         	call	_printf	;wreg free
  2028   0005A8                     
  2029                           ;main.c: 204:                             EPWM2_LoadDutyValue(red);
  2030   0005A8  C093  F007         	movff	main@red,EPWM2_LoadDutyValue@dutyValue
  2031   0005AC  C094  F008         	movff	main@red+1,EPWM2_LoadDutyValue@dutyValue+1
  2032   0005B0  EC6C  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  2033   0005B4                     
  2034                           ;main.c: 205:                             EPWM1_LoadDutyValue(green);
  2035   0005B4  C08F  F007         	movff	main@green,EPWM1_LoadDutyValue@dutyValue
  2036   0005B8  C090  F008         	movff	main@green+1,EPWM1_LoadDutyValue@dutyValue+1
  2037   0005BC  EC84  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  2038   0005C0  EF8E  F002         	goto	l3338
  2039   0005C4                     l3354:
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;main.c: 186:                     while(!(EUSART1_is_rx_ready()))
  2043   0005C4  ECAB  F00A         	call	_EUSART1_is_rx_ready	;wreg free
  2044   0005C8  0900               	iorlw	0
  2045   0005CA  B4D8               	btfsc	status,2,c
  2046   0005CC  EFEA  F002         	goto	u2221
  2047   0005D0  EFEC  F002         	goto	u2220
  2048   0005D4                     u2221:
  2049   0005D4  EF93  F002         	goto	l3340
  2050   0005D8                     u2220:
  2051   0005D8                     
  2052                           ;main.c: 209:                     (void) EUSART1_Read();
  2053   0005D8  EC08  F00A         	call	_EUSART1_Read	;wreg free
  2054   0005DC                     
  2055                           ;main.c: 210:                     EPWM2_LoadDutyValue(256);
  2056   0005DC  0E01               	movlw	1
  2057   0005DE  6E08               	movwf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  2058   0005E0  0E00               	movlw	0
  2059   0005E2  6E07               	movwf	EPWM2_LoadDutyValue@dutyValue^0,c
  2060   0005E4  EC6C  F009         	call	_EPWM2_LoadDutyValue	;wreg free
  2061   0005E8                     
  2062                           ;main.c: 211:                     EPWM1_LoadDutyValue(256);
  2063   0005E8  0E01               	movlw	1
  2064   0005EA  6E08               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2065   0005EC  0E00               	movlw	0
  2066   0005EE  6E07               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2067   0005F0  EC84  F009         	call	_EPWM1_LoadDutyValue	;wreg free
  2068   0005F4                     
  2069                           ;main.c: 212:                     printf("\r\n");
  2070   0005F4  0E7B               	movlw	low (STR_10+30)
  2071   0005F6  0100               	movlb	0	; () banked
  2072   0005F8  6F71               	movwf	printf@fmt& (0+255),b
  2073   0005FA  0E7E               	movlw	high (STR_10+30)
  2074   0005FC  6F72               	movwf	(printf@fmt+1)& (0+255),b
  2075   0005FE  ECF4  F009         	call	_printf	;wreg free
  2076                           
  2077                           ;main.c: 213:                     break;
  2078   000602  EF3C  F003         	goto	l3370
  2079   000606                     l3364:
  2080                           
  2081                           ; BSR set to: 0
  2082                           ;main.c: 216:                     printf("Unknown key %c\r\n",cmd);
  2083   000606  0E9E               	movlw	low STR_38
  2084   000608  6F71               	movwf	printf@fmt& (0+255),b
  2085   00060A  0E7F               	movlw	high STR_38
  2086   00060C  6F72               	movwf	(printf@fmt+1)& (0+255),b
  2087   00060E  C091  F073         	movff	main@cmd,?_printf+2
  2088   000612  6B74               	clrf	(?_printf+3)& (0+255),b
  2089   000614  ECF4  F009         	call	_printf	;wreg free
  2090                           
  2091                           ;main.c: 217:                     break;
  2092   000618  EF3C  F003         	goto	l3370
  2093   00061C                     l3368:
  2094   00061C  0100               	movlb	0	; () banked
  2095   00061E  5191               	movf	main@cmd& (0+255),w,b
  2096   000620  6F79               	movwf	??_main& (0+255),b
  2097   000622  6B7A               	clrf	(??_main+1)& (0+255),b
  2098                           
  2099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2100                           ; Switch size 1, requested type "simple"
  2101                           ; Number of cases is 1, Range of values is 0 to 0
  2102                           ; switch strategies available:
  2103                           ; Name         Instructions Cycles
  2104                           ; simple_byte            4     3 (average)
  2105                           ;	Chosen strategy is simple_byte
  2106   000624  517A               	movf	(??_main+1)& (0+255),w,b
  2107   000626  0A00               	xorlw	0	; case 0
  2108   000628  B4D8               	btfsc	status,2,c
  2109   00062A  EF19  F003         	goto	l3448
  2110   00062E  EF03  F003         	goto	l3364
  2111   000632                     l3448:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ; Switch size 1, requested type "simple"
  2115                           ; Number of cases is 8, Range of values is 63 to 122
  2116                           ; switch strategies available:
  2117                           ; Name         Instructions Cycles
  2118                           ; simple_byte           25    13 (average)
  2119                           ;	Chosen strategy is simple_byte
  2120   000632  5179               	movf	??_main& (0+255),w,b
  2121   000634  0A3F               	xorlw	63	; case 63
  2122   000636  B4D8               	btfsc	status,2,c
  2123   000638  EFB7  F000         	goto	l3200
  2124   00063C  0A7C               	xorlw	124	; case 67
  2125   00063E  B4D8               	btfsc	status,2,c
  2126   000640  EF88  F002         	goto	l3336
  2127   000644  0A10               	xorlw	16	; case 83
  2128   000646  B4D8               	btfsc	status,2,c
  2129   000648  EF6C  F001         	goto	l3244
  2130   00064C  0A09               	xorlw	9	; case 90
  2131   00064E  B4D8               	btfsc	status,2,c
  2132   000650  EF06  F001         	goto	l3204
  2133   000654  0A39               	xorlw	57	; case 99
  2134   000656  B4D8               	btfsc	status,2,c
  2135   000658  EFA7  F001         	goto	l3260
  2136   00065C  0A0C               	xorlw	12	; case 111
  2137   00065E  B4D8               	btfsc	status,2,c
  2138   000660  EFFE  F000         	goto	l3202
  2139   000664  0A1C               	xorlw	28	; case 115
  2140   000666  B4D8               	btfsc	status,2,c
  2141   000668  EF2F  F001         	goto	l3228
  2142   00066C  0A09               	xorlw	9	; case 122
  2143   00066E  B4D8               	btfsc	status,2,c
  2144   000670  EF1B  F001         	goto	l3216
  2145   000674  EF03  F003         	goto	l3364
  2146   000678                     l3370:
  2147                           
  2148                           ;main.c: 219:             printf("\r\n> ");
  2149   000678  0EF7               	movlw	low STR_8
  2150   00067A  0100               	movlb	0	; () banked
  2151   00067C  6F71               	movwf	printf@fmt& (0+255),b
  2152   00067E  0E7F               	movlw	high STR_8
  2153   000680  6F72               	movwf	(printf@fmt+1)& (0+255),b
  2154   000682  ECF4  F009         	call	_printf	;wreg free
  2155   000686  EF9E  F000         	goto	l3194
  2156   00068A  EF3A  F000         	goto	start
  2157   00068E                     __end_of_main:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function _printf *****************
  2161 ;; Defined at:
  2162 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  fmt             2   17[BANK0 ] PTR const unsigned char 
  2165 ;;		 -> STR_39(5), STR_38(17), STR_37(3), STR_36(22), 
  2166 ;;		 -> STR_35(24), STR_34(3), STR_33(5), STR_32(9), 
  2167 ;;		 -> STR_31(3), STR_30(5), STR_29(11), STR_28(3), 
  2168 ;;		 -> STR_27(5), STR_26(24), STR_25(3), STR_24(5), 
  2169 ;;		 -> STR_23(24), STR_22(3), STR_21(2), STR_20(5), 
  2170 ;;		 -> STR_19(33), STR_18(32), STR_17(32), STR_16(21), 
  2171 ;;		 -> STR_15(30), STR_14(24), STR_13(21), STR_12(7), 
  2172 ;;		 -> STR_11(15), STR_10(33), STR_9(5), STR_8(5), 
  2173 ;;		 -> STR_7(53), STR_6(18), STR_5(18), STR_4(57), 
  2174 ;;		 -> STR_3(26), STR_2(20), STR_1(15), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  ap              2   79[COMRAM] PTR void [1]
  2177 ;;		 -> ?_printf(2), 
  2178 ;;  ret             2    0        int 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   17[BANK0 ] int 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2188 ;;      Params:         0       8       0       0       0       0       0
  2189 ;;      Locals:         2       0       0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0
  2191 ;;      Totals:         2       8       0       0       0       0       0
  2192 ;;Total ram usage:       10 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 12
  2195 ;; This function calls:
  2196 ;;		_vfprintf
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text1
  2203   0013E8                     __ptext1:
  2204                           	callstack 0
  2205   0013E8                     _printf:
  2206                           	callstack 18
  2207   0013E8  0E73               	movlw	low (?_printf+2)
  2208   0013EA  6E50               	movwf	printf@ap^0,c
  2209   0013EC  0E00               	movlw	high (?_printf+2)
  2210   0013EE  6E51               	movwf	(printf@ap+1)^0,c
  2211   0013F0  0E00               	movlw	0
  2212   0013F2  0100               	movlb	0	; () banked
  2213   0013F4  6F6B               	movwf	vfprintf@fp& (0+255),b
  2214   0013F6  0E00               	movlw	0
  2215   0013F8  6F6C               	movwf	(vfprintf@fp+1)& (0+255),b
  2216   0013FA  C071  F06D         	movff	printf@fmt,vfprintf@fmt
  2217   0013FE  C072  F06E         	movff	printf@fmt+1,vfprintf@fmt+1
  2218   001402  0E50               	movlw	low printf@ap
  2219   001404  6F6F               	movwf	vfprintf@ap& (0+255),b
  2220   001406  0E00               	movlw	high printf@ap
  2221   001408  6F70               	movwf	(vfprintf@ap+1)& (0+255),b
  2222   00140A  EC6E  F008         	call	_vfprintf	;wreg free
  2223   00140E  0012               	return		;funcret
  2224   001410                     __end_of_printf:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function _vfprintf *****************
  2228 ;; Defined at:
  2229 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  2232 ;;		 -> NULL(0), 
  2233 ;;  fmt             2   13[BANK0 ] PTR const unsigned char 
  2234 ;;		 -> STR_39(5), STR_38(17), STR_37(3), STR_36(22), 
  2235 ;;		 -> STR_35(24), STR_34(3), STR_33(5), STR_32(9), 
  2236 ;;		 -> STR_31(3), STR_30(5), STR_29(11), STR_28(3), 
  2237 ;;		 -> STR_27(5), STR_26(24), STR_25(3), STR_24(5), 
  2238 ;;		 -> STR_23(24), STR_22(3), STR_21(2), STR_20(5), 
  2239 ;;		 -> STR_19(33), STR_18(32), STR_17(32), STR_16(21), 
  2240 ;;		 -> STR_15(30), STR_14(24), STR_13(21), STR_12(7), 
  2241 ;;		 -> STR_11(15), STR_10(33), STR_9(5), STR_8(5), 
  2242 ;;		 -> STR_7(53), STR_6(18), STR_5(18), STR_4(57), 
  2243 ;;		 -> STR_3(26), STR_2(20), STR_1(15), 
  2244 ;;  ap              2   15[BANK0 ] PTR PTR void 
  2245 ;;		 -> printf@ap(2), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  cfmt            2   77[COMRAM] PTR unsigned char 
  2248 ;;		 -> STR_39(5), STR_38(17), STR_37(3), STR_36(22), 
  2249 ;;		 -> STR_35(24), STR_34(3), STR_33(5), STR_32(9), 
  2250 ;;		 -> STR_31(3), STR_30(5), STR_29(11), STR_28(3), 
  2251 ;;		 -> STR_27(5), STR_26(24), STR_25(3), STR_24(5), 
  2252 ;;		 -> STR_23(24), STR_22(3), STR_21(2), STR_20(5), 
  2253 ;;		 -> STR_19(33), STR_18(32), STR_17(32), STR_16(21), 
  2254 ;;		 -> STR_15(30), STR_14(24), STR_13(21), STR_12(7), 
  2255 ;;		 -> STR_11(15), STR_10(33), STR_9(5), STR_8(5), 
  2256 ;;		 -> STR_7(53), STR_6(18), STR_5(18), STR_4(57), 
  2257 ;;		 -> STR_3(26), STR_2(20), STR_1(15), 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  2   11[BANK0 ] int 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2267 ;;      Params:         0       6       0       0       0       0       0
  2268 ;;      Locals:         2       0       0       0       0       0       0
  2269 ;;      Temps:          0       0       0       0       0       0       0
  2270 ;;      Totals:         2       6       0       0       0       0       0
  2271 ;;Total ram usage:        8 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 11
  2274 ;; This function calls:
  2275 ;;		_vfpfcnvrt
  2276 ;; This function is called by:
  2277 ;;		_printf
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           	psect	text2
  2282   0010DC                     __ptext2:
  2283                           	callstack 0
  2284   0010DC                     _vfprintf:
  2285                           	callstack 18
  2286   0010DC                     
  2287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2288   0010DC  C06D  F04E         	movff	vfprintf@fmt,vfprintf@cfmt
  2289   0010E0  C06E  F04F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2292   0010E4  EF82  F008         	goto	l3154
  2293   0010E8                     l3152:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2296   0010E8  C06B  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  2297   0010EC  C06C  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2298   0010F0  0E4E               	movlw	low vfprintf@cfmt
  2299   0010F2  6E46               	movwf	vfpfcnvrt@fmt^0,c
  2300   0010F4  0E00               	movlw	high vfprintf@cfmt
  2301   0010F6  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2302   0010F8  C06F  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  2303   0010FC  C070  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2304   001100  EC47  F003         	call	_vfpfcnvrt	;wreg free
  2305   001104                     l3154:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2308   001104  C04E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2309   001108  C04F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2310   00110C                     	if	0	;tblptru may be non-zero
  2311   00110C                     	endif
  2312   00110C                     	if	0	;tblptru may be non-zero
  2313   00110C                     	endif
  2314   00110C  0008               	tblrd		*
  2315   00110E  50F5               	movf	tablat,w,c
  2316   001110  0900               	iorlw	0
  2317   001112  A4D8               	btfss	status,2,c
  2318   001114  EF8E  F008         	goto	u2031
  2319   001118  EF90  F008         	goto	u2030
  2320   00111C                     u2031:
  2321   00111C  EF74  F008         	goto	l3152
  2322   001120                     u2030:
  2323   001120                     
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2325   001120  0E00               	movlw	0
  2326   001122  0100               	movlb	0	; () banked
  2327   001124  6F6C               	movwf	(?_vfprintf+1)& (0+255),b
  2328   001126  0E00               	movlw	0
  2329   001128  6F6B               	movwf	?_vfprintf& (0+255),b
  2330   00112A                     
  2331                           ; BSR set to: 0
  2332   00112A  0012               	return		;funcret
  2333   00112C                     __end_of_vfprintf:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _vfpfcnvrt *****************
  2337 ;; Defined at:
  2338 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2341 ;;		 -> NULL(0), 
  2342 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  2343 ;;		 -> vfprintf@cfmt(2), 
  2344 ;;  ap              2   71[COMRAM] PTR PTR void 
  2345 ;;		 -> printf@ap(2), 
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;  convarg         8    0[BANK0 ] struct .
  2348 ;;  cp              2    9[BANK0 ] PTR unsigned char 
  2349 ;;		 -> STR_39(5), STR_38(17), STR_37(3), STR_36(22), 
  2350 ;;		 -> STR_35(24), STR_34(3), STR_33(5), STR_32(9), 
  2351 ;;		 -> STR_31(3), STR_30(5), STR_29(11), STR_28(3), 
  2352 ;;		 -> STR_27(5), STR_26(24), STR_25(3), STR_24(5), 
  2353 ;;		 -> STR_23(24), STR_22(3), STR_21(2), STR_20(5), 
  2354 ;;		 -> STR_19(33), STR_18(32), STR_17(32), STR_16(21), 
  2355 ;;		 -> STR_15(30), STR_14(24), STR_13(21), STR_12(7), 
  2356 ;;		 -> STR_11(15), STR_10(33), STR_9(5), STR_8(5), 
  2357 ;;		 -> STR_7(53), STR_6(18), STR_5(18), STR_4(57), 
  2358 ;;		 -> STR_3(26), STR_2(20), STR_1(15), 
  2359 ;;  i               2    0        int 
  2360 ;;  done            2    0        int 
  2361 ;;  c               1    8[BANK0 ] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2371 ;;      Params:         6       0       0       0       0       0       0
  2372 ;;      Locals:         0      11       0       0       0       0       0
  2373 ;;      Temps:          4       0       0       0       0       0       0
  2374 ;;      Totals:        10      11       0       0       0       0       0
  2375 ;;Total ram usage:       21 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 10
  2378 ;; This function calls:
  2379 ;;		_atoi
  2380 ;;		_ctoa
  2381 ;;		_fputc
  2382 ;;		_isdigit
  2383 ;;		_utoa
  2384 ;; This function is called by:
  2385 ;;		_vfprintf
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text3
  2390   00068E                     __ptext3:
  2391                           	callstack 0
  2392   00068E                     _vfpfcnvrt:
  2393                           	callstack 18
  2394   00068E                     
  2395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2396   00068E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397   000692  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398   000696  CFDE FFF6          	movff	postinc2,tblptrl
  2399   00069A  CFDD FFF7          	movff	postdec2,tblptrh
  2400   00069E                     	if	0	;tblptru may be non-zero
  2401   00069E                     	endif
  2402   00069E                     	if	0	;tblptru may be non-zero
  2403   00069E                     	endif
  2404   00069E  0008               	tblrd		*
  2405   0006A0  50F5               	movf	tablat,w,c
  2406   0006A2  0A25               	xorlw	37
  2407   0006A4  A4D8               	btfss	status,2,c
  2408   0006A6  EF57  F003         	goto	u1971
  2409   0006AA  EF59  F003         	goto	u1970
  2410   0006AE                     u1971:
  2411   0006AE  EF89  F004         	goto	l3140
  2412   0006B2                     u1970:
  2413   0006B2                     
  2414                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2415   0006B2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2416   0006B6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2417   0006BA  2ADE               	incf	postinc2,f,c
  2418   0006BC  0E00               	movlw	0
  2419   0006BE  22DD               	addwfc	postdec2,f,c
  2420   0006C0                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2422   0006C0  0E00               	movlw	0
  2423   0006C2  6E53               	movwf	(_width+1)^0,c
  2424   0006C4  0E00               	movlw	0
  2425   0006C6  6E52               	movwf	_width^0,c
  2426   0006C8  C052  F056         	movff	_width,_flags
  2427   0006CC                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2429   0006CC  0100               	movlb	0	; () banked
  2430   0006CE  6997               	setf	_prec& (0+255),b
  2431   0006D0  6998               	setf	(_prec+1)& (0+255),b
  2432   0006D2                     
  2433                           ; BSR set to: 0
  2434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2435   0006D2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2436   0006D6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2437   0006DA  CFDE FFF6          	movff	postinc2,tblptrl
  2438   0006DE  CFDD FFF7          	movff	postdec2,tblptrh
  2439   0006E2                     	if	0	;tblptru may be non-zero
  2440   0006E2                     	endif
  2441   0006E2                     	if	0	;tblptru may be non-zero
  2442   0006E2                     	endif
  2443   0006E2  0008               	tblrd		*
  2444   0006E4  50F5               	movf	tablat,w,c
  2445   0006E6  0A2A               	xorlw	42
  2446   0006E8  A4D8               	btfss	status,2,c
  2447   0006EA  EF79  F003         	goto	u1981
  2448   0006EE  EF7B  F003         	goto	u1980
  2449   0006F2                     u1981:
  2450   0006F2  EFA4  F003         	goto	l3106
  2451   0006F6                     u1980:
  2452   0006F6                     
  2453                           ; BSR set to: 0
  2454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2455   0006F6  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2456   0006FA  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2457   0006FE  2ADE               	incf	postinc2,f,c
  2458   000700  0E00               	movlw	0
  2459   000702  22DD               	addwfc	postdec2,f,c
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2462   000704  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2463   000708  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2464   00070C  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2465   000710  0E02               	movlw	2
  2466   000712  26DE               	addwf	postinc2,f,c
  2467   000714  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2468   000718  0E00               	movlw	0
  2469   00071A  22DD               	addwfc	postdec2,f,c
  2470   00071C  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2471   000720  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2472   000724  CFDE F052          	movff	postinc2,_width
  2473   000728  CFDD F053          	movff	postdec2,_width+1
  2474   00072C                     
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2477   00072C  BE53               	btfsc	(_width+1)^0,7,c
  2478   00072E  EF9D  F003         	goto	u1990
  2479   000732  EF9B  F003         	goto	u1991
  2480   000736                     u1991:
  2481   000736  EFD7  F003         	goto	l3114
  2482   00073A                     u1990:
  2483   00073A                     
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2486   00073A  8056               	bsf	_flags^0,0,c
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2489   00073C  6C52               	negf	_width^0,c
  2490   00073E  1E53               	comf	(_width+1)^0,f,c
  2491   000740  B0D8               	btfsc	status,0,c
  2492   000742  2A53               	incf	(_width+1)^0,f,c
  2493   000744  EFD7  F003         	goto	l3114
  2494   000748                     l3106:
  2495                           
  2496                           ; BSR set to: 0
  2497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2498   000748  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2499   00074C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2500   000750  CFDE F00D          	movff	postinc2,atoi@s
  2501   000754  CFDD F00E          	movff	postdec2,atoi@s+1
  2502   000758  EC7E  F005         	call	_atoi	;wreg free
  2503   00075C  C00D  F052         	movff	?_atoi,_width
  2504   000760  C00E  F053         	movff	?_atoi+1,_width+1
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2507   000764  EFBB  F003         	goto	l3112
  2508   000768                     l3108:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2511   000768  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2512   00076C  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2513   000770  2ADE               	incf	postinc2,f,c
  2514   000772  0E00               	movlw	0
  2515   000774  22DD               	addwfc	postdec2,f,c
  2516   000776                     l3112:
  2517   000776  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2518   00077A  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2519   00077E  CFDE FFF6          	movff	postinc2,tblptrl
  2520   000782  CFDD FFF7          	movff	postdec2,tblptrh
  2521   000786                     	if	0	;tblptru may be non-zero
  2522   000786                     	endif
  2523   000786                     	if	0	;tblptru may be non-zero
  2524   000786                     	endif
  2525   000786  0008               	tblrd		*
  2526   000788  CFF5 F04A          	movff	tablat,??_vfpfcnvrt
  2527   00078C  0ED0               	movlw	208
  2528   00078E  244A               	addwf	??_vfpfcnvrt^0,w,c
  2529   000790  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2530   000792  6A4C               	clrf	(??_vfpfcnvrt+2)^0,c
  2531   000794  0EFF               	movlw	255
  2532   000796  224C               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2533   000798  504C               	movf	(??_vfpfcnvrt+2)^0,w,c
  2534   00079A  E109               	bnz	u2000
  2535   00079C  0E0A               	movlw	10
  2536   00079E  5C4B               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2537   0007A0  A0D8               	btfss	status,0,c
  2538   0007A2  EFD5  F003         	goto	u2001
  2539   0007A6  EFD7  F003         	goto	u2000
  2540   0007AA                     u2001:
  2541   0007AA  EFB4  F003         	goto	l3108
  2542   0007AE                     u2000:
  2543   0007AE                     l3114:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2546   0007AE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2547   0007B2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2548   0007B6  CFDE FFF6          	movff	postinc2,tblptrl
  2549   0007BA  CFDD FFF7          	movff	postdec2,tblptrh
  2550   0007BE                     	if	0	;tblptru may be non-zero
  2551   0007BE                     	endif
  2552   0007BE                     	if	0	;tblptru may be non-zero
  2553   0007BE                     	endif
  2554   0007BE  0008               	tblrd		*
  2555   0007C0  50F5               	movf	tablat,w,c
  2556   0007C2  0A63               	xorlw	99
  2557   0007C4  A4D8               	btfss	status,2,c
  2558   0007C6  EFE7  F003         	goto	u2011
  2559   0007CA  EFE9  F003         	goto	u2010
  2560   0007CE                     u2011:
  2561   0007CE  EF0D  F004         	goto	l3122
  2562   0007D2                     u2010:
  2563   0007D2                     
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2565   0007D2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2566   0007D6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2567   0007DA  2ADE               	incf	postinc2,f,c
  2568   0007DC  0E00               	movlw	0
  2569   0007DE  22DD               	addwfc	postdec2,f,c
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2572   0007E0  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2573   0007E4  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2574   0007E8  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2575   0007EC  0E02               	movlw	2
  2576   0007EE  26DE               	addwf	postinc2,f,c
  2577   0007F0  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2578   0007F4  0E00               	movlw	0
  2579   0007F6  22DD               	addwfc	postdec2,f,c
  2580   0007F8  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2581   0007FC  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2582   000800  50DF               	movf	indf2,w,c
  2583   000802  0100               	movlb	0	; () banked
  2584   000804  6F68               	movwf	vfpfcnvrt@c& (0+255),b
  2585   000806                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2588   000806  C044  F012         	movff	vfpfcnvrt@fp,ctoa@fp
  2589   00080A  C045  F013         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2590   00080E  C068  F014         	movff	vfpfcnvrt@c,ctoa@c
  2591   000812  EC03  F007         	call	_ctoa	;wreg free
  2592   000816  EF9D  F004         	goto	l1251
  2593   00081A                     l3122:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  2596   00081A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2597   00081E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2598   000822  CFDE F069          	movff	postinc2,vfpfcnvrt@cp
  2599   000826  CFDD F06A          	movff	postdec2,vfpfcnvrt@cp+1
  2600   00082A  C069  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2601   00082E  C06A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2602   000832                     	if	0	;tblptru may be non-zero
  2603   000832                     	endif
  2604   000832                     	if	0	;tblptru may be non-zero
  2605   000832                     	endif
  2606   000832  0008               	tblrd		*
  2607   000834  50F5               	movf	tablat,w,c
  2608   000836  0A75               	xorlw	117
  2609   000838  A4D8               	btfss	status,2,c
  2610   00083A  EF21  F004         	goto	u2021
  2611   00083E  EF23  F004         	goto	u2020
  2612   000842                     u2021:
  2613   000842  EF80  F004         	goto	l3136
  2614   000846                     u2020:
  2615   000846                     
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2617   000846  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2618   00084A  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2619   00084E  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  2620   000852  0E02               	movlw	2
  2621   000854  26DE               	addwf	postinc2,f,c
  2622   000856  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  2623   00085A  0E00               	movlw	0
  2624   00085C  22DD               	addwfc	postdec2,f,c
  2625   00085E  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2626   000862  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2627   000866  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+2
  2628   00086A  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+3
  2629   00086E  C04C  F060         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2630   000872  C04D  F061         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2631   000876  0100               	movlb	0	; () banked
  2632   000878  6B62               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2633   00087A  6B63               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2634   00087C  6B64               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2635   00087E  6B65               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2636   000880  6B66               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2637   000882  6B67               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2638                           
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2640   000884  0E01               	movlw	1
  2641   000886  2569               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2642   000888  6E4A               	movwf	??_vfpfcnvrt^0,c
  2643   00088A  0E00               	movlw	0
  2644   00088C  216A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2645   00088E  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
  2646   000890  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2647   000894  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2648   000898  C04A  FFDE         	movff	??_vfpfcnvrt,postinc2
  2649   00089C  C04B  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2652   0008A0  EF6A  F004         	goto	l3134
  2653   0008A4                     l3128:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2657   0008A4  C044  F024         	movff	vfpfcnvrt@fp,utoa@fp
  2658   0008A8  C045  F025         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2659   0008AC  C060  F026         	movff	vfpfcnvrt@convarg,utoa@d
  2660   0008B0  C061  F027         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2661   0008B4  C062  F028         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2662   0008B8  C063  F029         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2663   0008BC  C064  F02A         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2664   0008C0  C065  F02B         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2665   0008C4  C066  F02C         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2666   0008C8  C067  F02D         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2667   0008CC  EC9E  F004         	call	_utoa	;wreg free
  2668   0008D0  EF9D  F004         	goto	l1251
  2669   0008D4                     l3134:
  2670                           
  2671                           ; BSR set to: 0
  2672   0008D4  C069  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2673   0008D8  C06A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2674   0008DC                     	if	0	;tblptru may be non-zero
  2675   0008DC                     	endif
  2676   0008DC                     	if	0	;tblptru may be non-zero
  2677   0008DC                     	endif
  2678   0008DC  0008               	tblrd		*
  2679   0008DE  50F5               	movf	tablat,w,c
  2680   0008E0  6E4A               	movwf	??_vfpfcnvrt^0,c
  2681   0008E2  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
  2682                           
  2683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2684                           ; Switch size 1, requested type "simple"
  2685                           ; Number of cases is 1, Range of values is 0 to 0
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte            4     3 (average)
  2689                           ;	Chosen strategy is simple_byte
  2690   0008E4  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
  2691   0008E6  0A00               	xorlw	0	; case 0
  2692   0008E8  B4D8               	btfsc	status,2,c
  2693   0008EA  EF79  F004         	goto	l3450
  2694   0008EE  EF80  F004         	goto	l3136
  2695   0008F2                     l3450:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ; Switch size 1, requested type "simple"
  2699                           ; Number of cases is 1, Range of values is 117 to 117
  2700                           ; switch strategies available:
  2701                           ; Name         Instructions Cycles
  2702                           ; simple_byte            4     3 (average)
  2703                           ;	Chosen strategy is simple_byte
  2704   0008F2  504A               	movf	??_vfpfcnvrt^0,w,c
  2705   0008F4  0A75               	xorlw	117	; case 117
  2706   0008F6  B4D8               	btfsc	status,2,c
  2707   0008F8  EF52  F004         	goto	l3128
  2708   0008FC  EF80  F004         	goto	l3136
  2709   000900                     l3136:
  2710                           
  2711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2712   000900  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2713   000904  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2714   000908  2ADE               	incf	postinc2,f,c
  2715   00090A  0E00               	movlw	0
  2716   00090C  22DD               	addwfc	postdec2,f,c
  2717   00090E  EF9D  F004         	goto	l1251
  2718   000912                     l3140:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2721   000912  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2722   000916  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2723   00091A  CFDE FFF6          	movff	postinc2,tblptrl
  2724   00091E  CFDD FFF7          	movff	postdec2,tblptrh
  2725   000922                     	if	0	;tblptru may be non-zero
  2726   000922                     	endif
  2727   000922                     	if	0	;tblptru may be non-zero
  2728   000922                     	endif
  2729   000922  0008               	tblrd		*
  2730   000924  50F5               	movf	tablat,w,c
  2731   000926  6E09               	movwf	fputc@c^0,c
  2732   000928  6A0A               	clrf	(fputc@c+1)^0,c
  2733   00092A  C044  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2734   00092E  C045  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2735   000932  ECBC  F007         	call	_fputc	;wreg free
  2736   000936  EF80  F004         	goto	l3136
  2737   00093A                     l1251:
  2738   00093A  0012               	return		;funcret
  2739   00093C                     __end_of_vfpfcnvrt:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _utoa *****************
  2743 ;; Defined at:
  2744 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  2747 ;;		 -> NULL(0), 
  2748 ;;  d               8   37[COMRAM] unsigned long long 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  n               8   57[COMRAM] unsigned long long 
  2751 ;;  i               2   65[COMRAM] int 
  2752 ;;  p               2   55[COMRAM] int 
  2753 ;;  w               2   53[COMRAM] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2763 ;;      Params:        10       0       0       0       0       0       0
  2764 ;;      Locals:        14       0       0       0       0       0       0
  2765 ;;      Temps:          8       0       0       0       0       0       0
  2766 ;;      Totals:        32       0       0       0       0       0       0
  2767 ;;Total ram usage:       32 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 9
  2770 ;; This function calls:
  2771 ;;		___lodiv
  2772 ;;		___lomod
  2773 ;;		_pad
  2774 ;; This function is called by:
  2775 ;;		_vfpfcnvrt
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text4
  2780   00093C                     __ptext4:
  2781                           	callstack 0
  2782   00093C                     _utoa:
  2783                           	callstack 18
  2784   00093C                     
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2786   00093C  0100               	movlb	0	; () banked
  2787   00093E  BF98               	btfsc	(_prec+1)& (0+255),7,b
  2788   000940  EFAC  F004         	goto	u1890
  2789   000944  5198               	movf	(_prec+1)& (0+255),w,b
  2790   000946  E106               	bnz	u1891
  2791   000948  0597               	decf	_prec& (0+255),w,b
  2792   00094A  B0D8               	btfsc	status,0,c
  2793   00094C  EFAA  F004         	goto	u1891
  2794   000950  EFAC  F004         	goto	u1890
  2795   000954                     u1891:
  2796   000954  EFB2  F004         	goto	l1230
  2797   000958                     u1890:
  2798   000958                     
  2799                           ; BSR set to: 0
  2800   000958  0E00               	movlw	0
  2801   00095A  6E39               	movwf	(utoa@p+1)^0,c
  2802   00095C  0E01               	movlw	1
  2803   00095E  6E38               	movwf	utoa@p^0,c
  2804   000960  EFB6  F004         	goto	l1232
  2805   000964                     l1230:
  2806                           
  2807                           ; BSR set to: 0
  2808   000964  C097  F038         	movff	_prec,utoa@p
  2809   000968  C098  F039         	movff	_prec+1,utoa@p+1
  2810   00096C                     l1232:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2814   00096C  C052  F036         	movff	_width,utoa@w
  2815   000970  C053  F037         	movff	_width+1,utoa@w+1
  2816                           
  2817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2818   000974  C026  F03A         	movff	utoa@d,utoa@n
  2819   000978  C027  F03B         	movff	utoa@d+1,utoa@n+1
  2820   00097C  C028  F03C         	movff	utoa@d+2,utoa@n+2
  2821   000980  C029  F03D         	movff	utoa@d+3,utoa@n+3
  2822   000984  C02A  F03E         	movff	utoa@d+4,utoa@n+4
  2823   000988  C02B  F03F         	movff	utoa@d+5,utoa@n+5
  2824   00098C  C02C  F040         	movff	utoa@d+6,utoa@n+6
  2825   000990  C02D  F041         	movff	utoa@d+7,utoa@n+7
  2826   000994                     
  2827                           ; BSR set to: 0
  2828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2829   000994  0E00               	movlw	0
  2830   000996  6E43               	movwf	(utoa@i+1)^0,c
  2831   000998  0E1F               	movlw	31
  2832   00099A  6E42               	movwf	utoa@i^0,c
  2833   00099C                     
  2834                           ; BSR set to: 0
  2835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2836   00099C  0E00               	movlw	0
  2837   00099E  6FCC               	movwf	(_dbuf+31)& (0+255),b
  2838                           
  2839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2840   0009A0  EF48  F005         	goto	l3048
  2841   0009A4                     l3038:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2844   0009A4  0642               	decf	utoa@i^0,f,c
  2845   0009A6  A0D8               	btfss	status,0,c
  2846   0009A8  0643               	decf	(utoa@i+1)^0,f,c
  2847   0009AA                     
  2848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2849   0009AA  0EAD               	movlw	low _dbuf
  2850   0009AC  2442               	addwf	utoa@i^0,w,c
  2851   0009AE  6ED9               	movwf	fsr2l,c
  2852   0009B0  0E00               	movlw	high _dbuf
  2853   0009B2  2043               	addwfc	(utoa@i+1)^0,w,c
  2854   0009B4  6EDA               	movwf	fsr2h,c
  2855   0009B6  C03A  F007         	movff	utoa@n,___lomod@dividend
  2856   0009BA  C03B  F008         	movff	utoa@n+1,___lomod@dividend+1
  2857   0009BE  C03C  F009         	movff	utoa@n+2,___lomod@dividend+2
  2858   0009C2  C03D  F00A         	movff	utoa@n+3,___lomod@dividend+3
  2859   0009C6  C03E  F00B         	movff	utoa@n+4,___lomod@dividend+4
  2860   0009CA  C03F  F00C         	movff	utoa@n+5,___lomod@dividend+5
  2861   0009CE  C040  F00D         	movff	utoa@n+6,___lomod@dividend+6
  2862   0009D2  C041  F00E         	movff	utoa@n+7,___lomod@dividend+7
  2863   0009D6  0E0A               	movlw	10
  2864   0009D8  6E0F               	movwf	___lomod@divisor^0,c
  2865   0009DA  0E00               	movlw	0
  2866   0009DC  6E10               	movwf	(___lomod@divisor+1)^0,c
  2867   0009DE  0E00               	movlw	0
  2868   0009E0  6E11               	movwf	(___lomod@divisor+2)^0,c
  2869   0009E2  0E00               	movlw	0
  2870   0009E4  6E12               	movwf	(___lomod@divisor+3)^0,c
  2871   0009E6  0E00               	movlw	0
  2872   0009E8  6E13               	movwf	(___lomod@divisor+4)^0,c
  2873   0009EA  0E00               	movlw	0
  2874   0009EC  6E14               	movwf	(___lomod@divisor+5)^0,c
  2875   0009EE  0E00               	movlw	0
  2876   0009F0  6E15               	movwf	(___lomod@divisor+6)^0,c
  2877   0009F2  0E00               	movlw	0
  2878   0009F4  6E16               	movwf	(___lomod@divisor+7)^0,c
  2879   0009F6  EC9B  F006         	call	___lomod	;wreg free
  2880   0009FA  C007  F02E         	movff	?___lomod,??_utoa
  2881   0009FE  C008  F02F         	movff	?___lomod+1,??_utoa+1
  2882   000A02  C009  F030         	movff	?___lomod+2,??_utoa+2
  2883   000A06  C00A  F031         	movff	?___lomod+3,??_utoa+3
  2884   000A0A  C00B  F032         	movff	?___lomod+4,??_utoa+4
  2885   000A0E  C00C  F033         	movff	?___lomod+5,??_utoa+5
  2886   000A12  C00D  F034         	movff	?___lomod+6,??_utoa+6
  2887   000A16  C00E  F035         	movff	?___lomod+7,??_utoa+7
  2888   000A1A  502E               	movf	??_utoa^0,w,c
  2889   000A1C  0F30               	addlw	48
  2890   000A1E  6EDF               	movwf	indf2,c
  2891   000A20                     
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2893   000A20  0638               	decf	utoa@p^0,f,c
  2894   000A22  A0D8               	btfss	status,0,c
  2895   000A24  0639               	decf	(utoa@p+1)^0,f,c
  2896   000A26                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2898   000A26  0636               	decf	utoa@w^0,f,c
  2899   000A28  A0D8               	btfss	status,0,c
  2900   000A2A  0637               	decf	(utoa@w+1)^0,f,c
  2901   000A2C                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2903   000A2C  C03A  F007         	movff	utoa@n,___lodiv@dividend
  2904   000A30  C03B  F008         	movff	utoa@n+1,___lodiv@dividend+1
  2905   000A34  C03C  F009         	movff	utoa@n+2,___lodiv@dividend+2
  2906   000A38  C03D  F00A         	movff	utoa@n+3,___lodiv@dividend+3
  2907   000A3C  C03E  F00B         	movff	utoa@n+4,___lodiv@dividend+4
  2908   000A40  C03F  F00C         	movff	utoa@n+5,___lodiv@dividend+5
  2909   000A44  C040  F00D         	movff	utoa@n+6,___lodiv@dividend+6
  2910   000A48  C041  F00E         	movff	utoa@n+7,___lodiv@dividend+7
  2911   000A4C  0E0A               	movlw	10
  2912   000A4E  6E0F               	movwf	___lodiv@divisor^0,c
  2913   000A50  0E00               	movlw	0
  2914   000A52  6E10               	movwf	(___lodiv@divisor+1)^0,c
  2915   000A54  0E00               	movlw	0
  2916   000A56  6E11               	movwf	(___lodiv@divisor+2)^0,c
  2917   000A58  0E00               	movlw	0
  2918   000A5A  6E12               	movwf	(___lodiv@divisor+3)^0,c
  2919   000A5C  0E00               	movlw	0
  2920   000A5E  6E13               	movwf	(___lodiv@divisor+4)^0,c
  2921   000A60  0E00               	movlw	0
  2922   000A62  6E14               	movwf	(___lodiv@divisor+5)^0,c
  2923   000A64  0E00               	movlw	0
  2924   000A66  6E15               	movwf	(___lodiv@divisor+6)^0,c
  2925   000A68  0E00               	movlw	0
  2926   000A6A  6E16               	movwf	(___lodiv@divisor+7)^0,c
  2927   000A6C  EC23  F006         	call	___lodiv	;wreg free
  2928   000A70  C007  F03A         	movff	?___lodiv,utoa@n
  2929   000A74  C008  F03B         	movff	?___lodiv+1,utoa@n+1
  2930   000A78  C009  F03C         	movff	?___lodiv+2,utoa@n+2
  2931   000A7C  C00A  F03D         	movff	?___lodiv+3,utoa@n+3
  2932   000A80  C00B  F03E         	movff	?___lodiv+4,utoa@n+4
  2933   000A84  C00C  F03F         	movff	?___lodiv+5,utoa@n+5
  2934   000A88  C00D  F040         	movff	?___lodiv+6,utoa@n+6
  2935   000A8C  C00E  F041         	movff	?___lodiv+7,utoa@n+7
  2936   000A90                     l3048:
  2937                           
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2939   000A90  5042               	movf	utoa@i^0,w,c
  2940   000A92  1043               	iorwf	(utoa@i+1)^0,w,c
  2941   000A94  B4D8               	btfsc	status,2,c
  2942   000A96  EF4F  F005         	goto	u1901
  2943   000A9A  EF51  F005         	goto	u1900
  2944   000A9E                     u1901:
  2945   000A9E  EF6D  F005         	goto	l3054
  2946   000AA2                     u1900:
  2947   000AA2  503A               	movf	utoa@n^0,w,c
  2948   000AA4  103B               	iorwf	(utoa@n+1)^0,w,c
  2949   000AA6  103C               	iorwf	(utoa@n+2)^0,w,c
  2950   000AA8  103D               	iorwf	(utoa@n+3)^0,w,c
  2951   000AAA  103E               	iorwf	(utoa@n+4)^0,w,c
  2952   000AAC  103F               	iorwf	(utoa@n+5)^0,w,c
  2953   000AAE  1040               	iorwf	(utoa@n+6)^0,w,c
  2954   000AB0  1041               	iorwf	(utoa@n+7)^0,w,c
  2955   000AB2  A4D8               	btfss	status,2,c
  2956   000AB4  EF5E  F005         	goto	u1911
  2957   000AB8  EF60  F005         	goto	u1910
  2958   000ABC                     u1911:
  2959   000ABC  EFD2  F004         	goto	l3038
  2960   000AC0                     u1910:
  2961   000AC0  BE39               	btfsc	(utoa@p+1)^0,7,c
  2962   000AC2  EF6D  F005         	goto	u1920
  2963   000AC6  5039               	movf	(utoa@p+1)^0,w,c
  2964   000AC8  E106               	bnz	u1921
  2965   000ACA  0438               	decf	utoa@p^0,w,c
  2966   000ACC  B0D8               	btfsc	status,0,c
  2967   000ACE  EF6B  F005         	goto	u1921
  2968   000AD2  EF6D  F005         	goto	u1920
  2969   000AD6                     u1921:
  2970   000AD6  EFD2  F004         	goto	l3038
  2971   000ADA                     u1920:
  2972   000ADA                     l3054:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2975   000ADA  C024  F019         	movff	utoa@fp,pad@fp
  2976   000ADE  C025  F01A         	movff	utoa@fp+1,pad@fp+1
  2977   000AE2  0EAD               	movlw	low _dbuf
  2978   000AE4  2442               	addwf	utoa@i^0,w,c
  2979   000AE6  6E1B               	movwf	pad@buf^0,c
  2980   000AE8  0E00               	movlw	high _dbuf
  2981   000AEA  2043               	addwfc	(utoa@i+1)^0,w,c
  2982   000AEC  6E1C               	movwf	(pad@buf+1)^0,c
  2983   000AEE  C036  F01D         	movff	utoa@w,pad@p
  2984   000AF2  C037  F01E         	movff	utoa@w+1,pad@p+1
  2985   000AF6  EC67  F007         	call	_pad	;wreg free
  2986   000AFA  0012               	return		;funcret
  2987   000AFC                     __end_of_utoa:
  2988                           	callstack 0
  2989                           
  2990 ;; *************** function _pad *****************
  2991 ;; Defined at:
  2992 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2995 ;;		 -> NULL(0), 
  2996 ;;  buf             2   26[COMRAM] PTR unsigned char 
  2997 ;;		 -> dbuf(32), 
  2998 ;;  p               2   28[COMRAM] int 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;  w               2   33[COMRAM] int 
  3001 ;;  i               2   31[COMRAM] int 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3011 ;;      Params:         6       0       0       0       0       0       0
  3012 ;;      Locals:         4       0       0       0       0       0       0
  3013 ;;      Temps:          1       0       0       0       0       0       0
  3014 ;;      Totals:        11       0       0       0       0       0       0
  3015 ;;Total ram usage:       11 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 8
  3018 ;; This function calls:
  3019 ;;		_fputc
  3020 ;;		_fputs
  3021 ;; This function is called by:
  3022 ;;		_utoa
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text5
  3027   000ECE                     __ptext5:
  3028                           	callstack 0
  3029   000ECE                     _pad:
  3030                           	callstack 18
  3031   000ECE                     
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3033   000ECE  A056               	btfss	_flags^0,0,c
  3034   000ED0  EF6C  F007         	goto	u1761
  3035   000ED4  EF6E  F007         	goto	u1760
  3036   000ED8                     u1761:
  3037   000ED8  EF78  F007         	goto	l2976
  3038   000EDC                     u1760:
  3039   000EDC                     
  3040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  3041   000EDC  C01B  F012         	movff	pad@buf,fputs@s
  3042   000EE0  C01C  F013         	movff	pad@buf+1,fputs@s+1
  3043   000EE4  C019  F014         	movff	pad@fp,fputs@fp
  3044   000EE8  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  3045   000EEC  ECB9  F008         	call	_fputs	;wreg free
  3046   000EF0                     l2976:
  3047                           
  3048                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  3049   000EF0  BE1E               	btfsc	(pad@p+1)^0,7,c
  3050   000EF2  EF7D  F007         	goto	u1771
  3051   000EF6  EF7F  F007         	goto	u1770
  3052   000EFA                     u1771:
  3053   000EFA  EF85  F007         	goto	l2980
  3054   000EFE                     u1770:
  3055   000EFE  C01D  F022         	movff	pad@p,pad@w
  3056   000F02  C01E  F023         	movff	pad@p+1,pad@w+1
  3057   000F06  EF89  F007         	goto	l1205
  3058   000F0A                     l2980:
  3059   000F0A  0E00               	movlw	0
  3060   000F0C  6E23               	movwf	(pad@w+1)^0,c
  3061   000F0E  0E00               	movlw	0
  3062   000F10  6E22               	movwf	pad@w^0,c
  3063   000F12                     l1205:
  3064                           
  3065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3066   000F12  0E00               	movlw	0
  3067   000F14  6E21               	movwf	(pad@i+1)^0,c
  3068   000F16  0E00               	movlw	0
  3069   000F18  6E20               	movwf	pad@i^0,c
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3072   000F1A  EF9B  F007         	goto	l2986
  3073   000F1E                     l2982:
  3074                           
  3075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3076   000F1E  0E00               	movlw	0
  3077   000F20  6E0A               	movwf	(fputc@c+1)^0,c
  3078   000F22  0E20               	movlw	32
  3079   000F24  6E09               	movwf	fputc@c^0,c
  3080   000F26  C019  F00B         	movff	pad@fp,fputc@fp
  3081   000F2A  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  3082   000F2E  ECBC  F007         	call	_fputc	;wreg free
  3083   000F32                     
  3084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3085   000F32  4A20               	infsnz	pad@i^0,f,c
  3086   000F34  2A21               	incf	(pad@i+1)^0,f,c
  3087   000F36                     l2986:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3090   000F36  5022               	movf	pad@w^0,w,c
  3091   000F38  5C20               	subwf	pad@i^0,w,c
  3092   000F3A  5021               	movf	(pad@i+1)^0,w,c
  3093   000F3C  0A80               	xorlw	128
  3094   000F3E  6E1F               	movwf	??_pad^0,c
  3095   000F40  5023               	movf	(pad@w+1)^0,w,c
  3096   000F42  0A80               	xorlw	128
  3097   000F44  581F               	subwfb	??_pad^0,w,c
  3098   000F46  A0D8               	btfss	status,0,c
  3099   000F48  EFA8  F007         	goto	u1781
  3100   000F4C  EFAA  F007         	goto	u1780
  3101   000F50                     u1781:
  3102   000F50  EF8F  F007         	goto	l2982
  3103   000F54                     u1780:
  3104   000F54                     
  3105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  3106   000F54  B056               	btfsc	_flags^0,0,c
  3107   000F56  EFAF  F007         	goto	u1791
  3108   000F5A  EFB1  F007         	goto	u1790
  3109   000F5E                     u1791:
  3110   000F5E  EFBB  F007         	goto	l1210
  3111   000F62                     u1790:
  3112   000F62                     
  3113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3114   000F62  C01B  F012         	movff	pad@buf,fputs@s
  3115   000F66  C01C  F013         	movff	pad@buf+1,fputs@s+1
  3116   000F6A  C019  F014         	movff	pad@fp,fputs@fp
  3117   000F6E  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  3118   000F72  ECB9  F008         	call	_fputs	;wreg free
  3119   000F76                     l1210:
  3120   000F76  0012               	return		;funcret
  3121   000F78                     __end_of_pad:
  3122                           	callstack 0
  3123                           
  3124 ;; *************** function _fputs *****************
  3125 ;; Defined at:
  3126 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  s               2   17[COMRAM] PTR const unsigned char 
  3129 ;;		 -> dbuf(32), 
  3130 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  3131 ;;		 -> NULL(0), 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  i               2   22[COMRAM] int 
  3134 ;;  c               1   21[COMRAM] unsigned char 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2   17[COMRAM] int 
  3137 ;; Registers used:
  3138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3144 ;;      Params:         4       0       0       0       0       0       0
  3145 ;;      Locals:         3       0       0       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0       0       0
  3147 ;;      Totals:         7       0       0       0       0       0       0
  3148 ;;Total ram usage:        7 bytes
  3149 ;; Hardware stack levels used: 1
  3150 ;; Hardware stack levels required when called: 7
  3151 ;; This function calls:
  3152 ;;		_fputc
  3153 ;; This function is called by:
  3154 ;;		_pad
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text6
  3159   001172                     __ptext6:
  3160                           	callstack 0
  3161   001172                     _fputs:
  3162                           	callstack 18
  3163   001172  0E00               	movlw	0
  3164   001174  6E18               	movwf	(fputs@i+1)^0,c
  3165   001176  0E00               	movlw	0
  3166   001178  6E17               	movwf	fputs@i^0,c
  3167   00117A  EFCA  F008         	goto	l2926
  3168   00117E                     l2922:
  3169   00117E  C016  F009         	movff	fputs@c,fputc@c
  3170   001182  6A0A               	clrf	(fputc@c+1)^0,c
  3171   001184  C014  F00B         	movff	fputs@fp,fputc@fp
  3172   001188  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  3173   00118C  ECBC  F007         	call	_fputc	;wreg free
  3174   001190  4A17               	infsnz	fputs@i^0,f,c
  3175   001192  2A18               	incf	(fputs@i+1)^0,f,c
  3176   001194                     l2926:
  3177   001194  5017               	movf	fputs@i^0,w,c
  3178   001196  2412               	addwf	fputs@s^0,w,c
  3179   001198  6ED9               	movwf	fsr2l,c
  3180   00119A  5018               	movf	(fputs@i+1)^0,w,c
  3181   00119C  2013               	addwfc	(fputs@s+1)^0,w,c
  3182   00119E  6EDA               	movwf	fsr2h,c
  3183   0011A0  50DF               	movf	indf2,w,c
  3184   0011A2  6E16               	movwf	fputs@c^0,c
  3185   0011A4  5016               	movf	fputs@c^0,w,c
  3186   0011A6  A4D8               	btfss	status,2,c
  3187   0011A8  EFD8  F008         	goto	u1681
  3188   0011AC  EFDA  F008         	goto	u1680
  3189   0011B0                     u1681:
  3190   0011B0  EFBF  F008         	goto	l2922
  3191   0011B4                     u1680:
  3192   0011B4  0012               	return		;funcret
  3193   0011B6                     __end_of_fputs:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function ___lomod *****************
  3197 ;; Defined at:
  3198 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  dividend        8    6[COMRAM] unsigned long long 
  3201 ;;  divisor         8   14[COMRAM] unsigned long long 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  counter         1   22[COMRAM] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  8    6[COMRAM] unsigned long long 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3213 ;;      Params:        16       0       0       0       0       0       0
  3214 ;;      Locals:         1       0       0       0       0       0       0
  3215 ;;      Temps:          0       0       0       0       0       0       0
  3216 ;;      Totals:        17       0       0       0       0       0       0
  3217 ;;Total ram usage:       17 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 4
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_utoa
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           	psect	text7
  3228   000D36                     __ptext7:
  3229                           	callstack 0
  3230   000D36                     ___lomod:
  3231                           	callstack 22
  3232   000D36  500F               	movf	___lomod@divisor^0,w,c
  3233   000D38  1010               	iorwf	(___lomod@divisor+1)^0,w,c
  3234   000D3A  1011               	iorwf	(___lomod@divisor+2)^0,w,c
  3235   000D3C  1012               	iorwf	(___lomod@divisor+3)^0,w,c
  3236   000D3E  1013               	iorwf	(___lomod@divisor+4)^0,w,c
  3237   000D40  1014               	iorwf	(___lomod@divisor+5)^0,w,c
  3238   000D42  1015               	iorwf	(___lomod@divisor+6)^0,w,c
  3239   000D44  1016               	iorwf	(___lomod@divisor+7)^0,w,c
  3240   000D46  B4D8               	btfsc	status,2,c
  3241   000D48  EFA8  F006         	goto	u1731
  3242   000D4C  EFAA  F006         	goto	u1730
  3243   000D50                     u1731:
  3244   000D50  EFF2  F006         	goto	l950
  3245   000D54                     u1730:
  3246   000D54  0E01               	movlw	1
  3247   000D56  6E17               	movwf	___lomod@counter^0,c
  3248   000D58  EFB8  F006         	goto	l2962
  3249   000D5C                     l2960:
  3250   000D5C  90D8               	bcf	status,0,c
  3251   000D5E  360F               	rlcf	___lomod@divisor^0,f,c
  3252   000D60  3610               	rlcf	(___lomod@divisor+1)^0,f,c
  3253   000D62  3611               	rlcf	(___lomod@divisor+2)^0,f,c
  3254   000D64  3612               	rlcf	(___lomod@divisor+3)^0,f,c
  3255   000D66  3613               	rlcf	(___lomod@divisor+4)^0,f,c
  3256   000D68  3614               	rlcf	(___lomod@divisor+5)^0,f,c
  3257   000D6A  3615               	rlcf	(___lomod@divisor+6)^0,f,c
  3258   000D6C  3616               	rlcf	(___lomod@divisor+7)^0,f,c
  3259   000D6E  2A17               	incf	___lomod@counter^0,f,c
  3260   000D70                     l2962:
  3261   000D70  AE16               	btfss	(___lomod@divisor+7)^0,7,c
  3262   000D72  EFBD  F006         	goto	u1741
  3263   000D76  EFBF  F006         	goto	u1740
  3264   000D7A                     u1741:
  3265   000D7A  EFAE  F006         	goto	l2960
  3266   000D7E                     u1740:
  3267   000D7E                     l2964:
  3268   000D7E  500F               	movf	___lomod@divisor^0,w,c
  3269   000D80  5C07               	subwf	___lomod@dividend^0,w,c
  3270   000D82  5010               	movf	(___lomod@divisor+1)^0,w,c
  3271   000D84  5808               	subwfb	(___lomod@dividend+1)^0,w,c
  3272   000D86  5011               	movf	(___lomod@divisor+2)^0,w,c
  3273   000D88  5809               	subwfb	(___lomod@dividend+2)^0,w,c
  3274   000D8A  5012               	movf	(___lomod@divisor+3)^0,w,c
  3275   000D8C  580A               	subwfb	(___lomod@dividend+3)^0,w,c
  3276   000D8E  5013               	movf	(___lomod@divisor+4)^0,w,c
  3277   000D90  580B               	subwfb	(___lomod@dividend+4)^0,w,c
  3278   000D92  5014               	movf	(___lomod@divisor+5)^0,w,c
  3279   000D94  580C               	subwfb	(___lomod@dividend+5)^0,w,c
  3280   000D96  5015               	movf	(___lomod@divisor+6)^0,w,c
  3281   000D98  580D               	subwfb	(___lomod@dividend+6)^0,w,c
  3282   000D9A  5016               	movf	(___lomod@divisor+7)^0,w,c
  3283   000D9C  580E               	subwfb	(___lomod@dividend+7)^0,w,c
  3284   000D9E  A0D8               	btfss	status,0,c
  3285   000DA0  EFD4  F006         	goto	u1751
  3286   000DA4  EFD6  F006         	goto	u1750
  3287   000DA8                     u1751:
  3288   000DA8  EFE6  F006         	goto	l2968
  3289   000DAC                     u1750:
  3290   000DAC  500F               	movf	___lomod@divisor^0,w,c
  3291   000DAE  5E07               	subwf	___lomod@dividend^0,f,c
  3292   000DB0  5010               	movf	(___lomod@divisor+1)^0,w,c
  3293   000DB2  5A08               	subwfb	(___lomod@dividend+1)^0,f,c
  3294   000DB4  5011               	movf	(___lomod@divisor+2)^0,w,c
  3295   000DB6  5A09               	subwfb	(___lomod@dividend+2)^0,f,c
  3296   000DB8  5012               	movf	(___lomod@divisor+3)^0,w,c
  3297   000DBA  5A0A               	subwfb	(___lomod@dividend+3)^0,f,c
  3298   000DBC  5013               	movf	(___lomod@divisor+4)^0,w,c
  3299   000DBE  5A0B               	subwfb	(___lomod@dividend+4)^0,f,c
  3300   000DC0  5014               	movf	(___lomod@divisor+5)^0,w,c
  3301   000DC2  5A0C               	subwfb	(___lomod@dividend+5)^0,f,c
  3302   000DC4  5015               	movf	(___lomod@divisor+6)^0,w,c
  3303   000DC6  5A0D               	subwfb	(___lomod@dividend+6)^0,f,c
  3304   000DC8  5016               	movf	(___lomod@divisor+7)^0,w,c
  3305   000DCA  5A0E               	subwfb	(___lomod@dividend+7)^0,f,c
  3306   000DCC                     l2968:
  3307   000DCC  90D8               	bcf	status,0,c
  3308   000DCE  3216               	rrcf	(___lomod@divisor+7)^0,f,c
  3309   000DD0  3215               	rrcf	(___lomod@divisor+6)^0,f,c
  3310   000DD2  3214               	rrcf	(___lomod@divisor+5)^0,f,c
  3311   000DD4  3213               	rrcf	(___lomod@divisor+4)^0,f,c
  3312   000DD6  3212               	rrcf	(___lomod@divisor+3)^0,f,c
  3313   000DD8  3211               	rrcf	(___lomod@divisor+2)^0,f,c
  3314   000DDA  3210               	rrcf	(___lomod@divisor+1)^0,f,c
  3315   000DDC  320F               	rrcf	___lomod@divisor^0,f,c
  3316   000DDE  2E17               	decfsz	___lomod@counter^0,f,c
  3317   000DE0  EFBF  F006         	goto	l2964
  3318   000DE4                     l950:
  3319   000DE4  C007  F007         	movff	___lomod@dividend,?___lomod
  3320   000DE8  C008  F008         	movff	___lomod@dividend+1,?___lomod+1
  3321   000DEC  C009  F009         	movff	___lomod@dividend+2,?___lomod+2
  3322   000DF0  C00A  F00A         	movff	___lomod@dividend+3,?___lomod+3
  3323   000DF4  C00B  F00B         	movff	___lomod@dividend+4,?___lomod+4
  3324   000DF8  C00C  F00C         	movff	___lomod@dividend+5,?___lomod+5
  3325   000DFC  C00D  F00D         	movff	___lomod@dividend+6,?___lomod+6
  3326   000E00  C00E  F00E         	movff	___lomod@dividend+7,?___lomod+7
  3327   000E04  0012               	return		;funcret
  3328   000E06                     __end_of___lomod:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function ___lodiv *****************
  3332 ;; Defined at:
  3333 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  dividend        8    6[COMRAM] unsigned long long 
  3336 ;;  divisor         8   14[COMRAM] unsigned long long 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  quotient        8   22[COMRAM] unsigned long long 
  3339 ;;  counter         1   30[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  8    6[COMRAM] unsigned long long 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3349 ;;      Params:        16       0       0       0       0       0       0
  3350 ;;      Locals:         9       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0
  3352 ;;      Totals:        25       0       0       0       0       0       0
  3353 ;;Total ram usage:       25 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 4
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_utoa
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text8
  3364   000C46                     __ptext8:
  3365                           	callstack 0
  3366   000C46                     ___lodiv:
  3367                           	callstack 22
  3368   000C46  EE20  F017         	lfsr	2,___lodiv@quotient
  3369   000C4A  0E07               	movlw	7
  3370   000C4C                     u1691:
  3371   000C4C  6ADE               	clrf	postinc2,c
  3372   000C4E  06E8               	decf	wreg,f,c
  3373   000C50  E2FD               	bc	u1691
  3374   000C52  500F               	movf	___lodiv@divisor^0,w,c
  3375   000C54  1010               	iorwf	(___lodiv@divisor+1)^0,w,c
  3376   000C56  1011               	iorwf	(___lodiv@divisor+2)^0,w,c
  3377   000C58  1012               	iorwf	(___lodiv@divisor+3)^0,w,c
  3378   000C5A  1013               	iorwf	(___lodiv@divisor+4)^0,w,c
  3379   000C5C  1014               	iorwf	(___lodiv@divisor+5)^0,w,c
  3380   000C5E  1015               	iorwf	(___lodiv@divisor+6)^0,w,c
  3381   000C60  1016               	iorwf	(___lodiv@divisor+7)^0,w,c
  3382   000C62  B4D8               	btfsc	status,2,c
  3383   000C64  EF36  F006         	goto	u1701
  3384   000C68  EF38  F006         	goto	u1700
  3385   000C6C                     u1701:
  3386   000C6C  EF8A  F006         	goto	l940
  3387   000C70                     u1700:
  3388   000C70  0E01               	movlw	1
  3389   000C72  6E1F               	movwf	___lodiv@counter^0,c
  3390   000C74  EF46  F006         	goto	l2942
  3391   000C78                     l2940:
  3392   000C78  90D8               	bcf	status,0,c
  3393   000C7A  360F               	rlcf	___lodiv@divisor^0,f,c
  3394   000C7C  3610               	rlcf	(___lodiv@divisor+1)^0,f,c
  3395   000C7E  3611               	rlcf	(___lodiv@divisor+2)^0,f,c
  3396   000C80  3612               	rlcf	(___lodiv@divisor+3)^0,f,c
  3397   000C82  3613               	rlcf	(___lodiv@divisor+4)^0,f,c
  3398   000C84  3614               	rlcf	(___lodiv@divisor+5)^0,f,c
  3399   000C86  3615               	rlcf	(___lodiv@divisor+6)^0,f,c
  3400   000C88  3616               	rlcf	(___lodiv@divisor+7)^0,f,c
  3401   000C8A  2A1F               	incf	___lodiv@counter^0,f,c
  3402   000C8C                     l2942:
  3403   000C8C  AE16               	btfss	(___lodiv@divisor+7)^0,7,c
  3404   000C8E  EF4B  F006         	goto	u1711
  3405   000C92  EF4D  F006         	goto	u1710
  3406   000C96                     u1711:
  3407   000C96  EF3C  F006         	goto	l2940
  3408   000C9A                     u1710:
  3409   000C9A                     l2944:
  3410   000C9A  90D8               	bcf	status,0,c
  3411   000C9C  3617               	rlcf	___lodiv@quotient^0,f,c
  3412   000C9E  3618               	rlcf	(___lodiv@quotient+1)^0,f,c
  3413   000CA0  3619               	rlcf	(___lodiv@quotient+2)^0,f,c
  3414   000CA2  361A               	rlcf	(___lodiv@quotient+3)^0,f,c
  3415   000CA4  361B               	rlcf	(___lodiv@quotient+4)^0,f,c
  3416   000CA6  361C               	rlcf	(___lodiv@quotient+5)^0,f,c
  3417   000CA8  361D               	rlcf	(___lodiv@quotient+6)^0,f,c
  3418   000CAA  361E               	rlcf	(___lodiv@quotient+7)^0,f,c
  3419   000CAC  500F               	movf	___lodiv@divisor^0,w,c
  3420   000CAE  5C07               	subwf	___lodiv@dividend^0,w,c
  3421   000CB0  5010               	movf	(___lodiv@divisor+1)^0,w,c
  3422   000CB2  5808               	subwfb	(___lodiv@dividend+1)^0,w,c
  3423   000CB4  5011               	movf	(___lodiv@divisor+2)^0,w,c
  3424   000CB6  5809               	subwfb	(___lodiv@dividend+2)^0,w,c
  3425   000CB8  5012               	movf	(___lodiv@divisor+3)^0,w,c
  3426   000CBA  580A               	subwfb	(___lodiv@dividend+3)^0,w,c
  3427   000CBC  5013               	movf	(___lodiv@divisor+4)^0,w,c
  3428   000CBE  580B               	subwfb	(___lodiv@dividend+4)^0,w,c
  3429   000CC0  5014               	movf	(___lodiv@divisor+5)^0,w,c
  3430   000CC2  580C               	subwfb	(___lodiv@dividend+5)^0,w,c
  3431   000CC4  5015               	movf	(___lodiv@divisor+6)^0,w,c
  3432   000CC6  580D               	subwfb	(___lodiv@dividend+6)^0,w,c
  3433   000CC8  5016               	movf	(___lodiv@divisor+7)^0,w,c
  3434   000CCA  580E               	subwfb	(___lodiv@dividend+7)^0,w,c
  3435   000CCC  A0D8               	btfss	status,0,c
  3436   000CCE  EF6B  F006         	goto	u1721
  3437   000CD2  EF6D  F006         	goto	u1720
  3438   000CD6                     u1721:
  3439   000CD6  EF7E  F006         	goto	l2952
  3440   000CDA                     u1720:
  3441   000CDA  500F               	movf	___lodiv@divisor^0,w,c
  3442   000CDC  5E07               	subwf	___lodiv@dividend^0,f,c
  3443   000CDE  5010               	movf	(___lodiv@divisor+1)^0,w,c
  3444   000CE0  5A08               	subwfb	(___lodiv@dividend+1)^0,f,c
  3445   000CE2  5011               	movf	(___lodiv@divisor+2)^0,w,c
  3446   000CE4  5A09               	subwfb	(___lodiv@dividend+2)^0,f,c
  3447   000CE6  5012               	movf	(___lodiv@divisor+3)^0,w,c
  3448   000CE8  5A0A               	subwfb	(___lodiv@dividend+3)^0,f,c
  3449   000CEA  5013               	movf	(___lodiv@divisor+4)^0,w,c
  3450   000CEC  5A0B               	subwfb	(___lodiv@dividend+4)^0,f,c
  3451   000CEE  5014               	movf	(___lodiv@divisor+5)^0,w,c
  3452   000CF0  5A0C               	subwfb	(___lodiv@dividend+5)^0,f,c
  3453   000CF2  5015               	movf	(___lodiv@divisor+6)^0,w,c
  3454   000CF4  5A0D               	subwfb	(___lodiv@dividend+6)^0,f,c
  3455   000CF6  5016               	movf	(___lodiv@divisor+7)^0,w,c
  3456   000CF8  5A0E               	subwfb	(___lodiv@dividend+7)^0,f,c
  3457   000CFA  8017               	bsf	___lodiv@quotient^0,0,c
  3458   000CFC                     l2952:
  3459   000CFC  90D8               	bcf	status,0,c
  3460   000CFE  3216               	rrcf	(___lodiv@divisor+7)^0,f,c
  3461   000D00  3215               	rrcf	(___lodiv@divisor+6)^0,f,c
  3462   000D02  3214               	rrcf	(___lodiv@divisor+5)^0,f,c
  3463   000D04  3213               	rrcf	(___lodiv@divisor+4)^0,f,c
  3464   000D06  3212               	rrcf	(___lodiv@divisor+3)^0,f,c
  3465   000D08  3211               	rrcf	(___lodiv@divisor+2)^0,f,c
  3466   000D0A  3210               	rrcf	(___lodiv@divisor+1)^0,f,c
  3467   000D0C  320F               	rrcf	___lodiv@divisor^0,f,c
  3468   000D0E  2E1F               	decfsz	___lodiv@counter^0,f,c
  3469   000D10  EF4D  F006         	goto	l2944
  3470   000D14                     l940:
  3471   000D14  C017  F007         	movff	___lodiv@quotient,?___lodiv
  3472   000D18  C018  F008         	movff	___lodiv@quotient+1,?___lodiv+1
  3473   000D1C  C019  F009         	movff	___lodiv@quotient+2,?___lodiv+2
  3474   000D20  C01A  F00A         	movff	___lodiv@quotient+3,?___lodiv+3
  3475   000D24  C01B  F00B         	movff	___lodiv@quotient+4,?___lodiv+4
  3476   000D28  C01C  F00C         	movff	___lodiv@quotient+5,?___lodiv+5
  3477   000D2C  C01D  F00D         	movff	___lodiv@quotient+6,?___lodiv+6
  3478   000D30  C01E  F00E         	movff	___lodiv@quotient+7,?___lodiv+7
  3479   000D34  0012               	return		;funcret
  3480   000D36                     __end_of___lodiv:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _ctoa *****************
  3484 ;; Defined at:
  3485 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3488 ;;		 -> NULL(0), 
  3489 ;;  c               1   19[COMRAM] unsigned char 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  w               2   23[COMRAM] int 
  3492 ;;  l               2   21[COMRAM] int 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3502 ;;      Params:         3       0       0       0       0       0       0
  3503 ;;      Locals:         4       0       0       0       0       0       0
  3504 ;;      Temps:          1       0       0       0       0       0       0
  3505 ;;      Totals:         8       0       0       0       0       0       0
  3506 ;;Total ram usage:        8 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 7
  3509 ;; This function calls:
  3510 ;;		_fputc
  3511 ;; This function is called by:
  3512 ;;		_vfpfcnvrt
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text9
  3517   000E06                     __ptext9:
  3518                           	callstack 0
  3519   000E06                     _ctoa:
  3520                           	callstack 20
  3521   000E06                     
  3522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  3523   000E06  5052               	movf	_width^0,w,c
  3524   000E08  1053               	iorwf	(_width+1)^0,w,c
  3525   000E0A  A4D8               	btfss	status,2,c
  3526   000E0C  EF0A  F007         	goto	u1841
  3527   000E10  EF0C  F007         	goto	u1840
  3528   000E14                     u1841:
  3529   000E14  EF12  F007         	goto	l3010
  3530   000E18                     u1840:
  3531   000E18  C052  F018         	movff	_width,ctoa@w
  3532   000E1C  C053  F019         	movff	_width+1,ctoa@w+1
  3533   000E20  EF18  F007         	goto	l3012
  3534   000E24                     l3010:
  3535   000E24  0EFF               	movlw	255
  3536   000E26  2452               	addwf	_width^0,w,c
  3537   000E28  6E18               	movwf	ctoa@w^0,c
  3538   000E2A  0EFF               	movlw	255
  3539   000E2C  2053               	addwfc	(_width+1)^0,w,c
  3540   000E2E  6E19               	movwf	(ctoa@w+1)^0,c
  3541   000E30                     l3012:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  3544   000E30  A056               	btfss	_flags^0,0,c
  3545   000E32  EF1D  F007         	goto	u1851
  3546   000E36  EF1F  F007         	goto	u1850
  3547   000E3A                     u1851:
  3548   000E3A  EF28  F007         	goto	l3016
  3549   000E3E                     u1850:
  3550   000E3E                     
  3551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  3552   000E3E  C014  F009         	movff	ctoa@c,fputc@c
  3553   000E42  6A0A               	clrf	(fputc@c+1)^0,c
  3554   000E44  C012  F00B         	movff	ctoa@fp,fputc@fp
  3555   000E48  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  3556   000E4C  ECBC  F007         	call	_fputc	;wreg free
  3557   000E50                     l3016:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  3560   000E50  BE19               	btfsc	(ctoa@w+1)^0,7,c
  3561   000E52  EF2D  F007         	goto	u1861
  3562   000E56  EF2F  F007         	goto	u1860
  3563   000E5A                     u1861:
  3564   000E5A  EF31  F007         	goto	l3020
  3565   000E5E                     u1860:
  3566   000E5E  EF35  F007         	goto	l1221
  3567   000E62                     l3020:
  3568   000E62  0E00               	movlw	0
  3569   000E64  6E19               	movwf	(ctoa@w+1)^0,c
  3570   000E66  0E00               	movlw	0
  3571   000E68  6E18               	movwf	ctoa@w^0,c
  3572   000E6A                     l1221:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  3575   000E6A  0E00               	movlw	0
  3576   000E6C  6E17               	movwf	(ctoa@l+1)^0,c
  3577   000E6E  0E00               	movlw	0
  3578   000E70  6E16               	movwf	ctoa@l^0,c
  3579                           
  3580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3581   000E72  EF47  F007         	goto	l3026
  3582   000E76                     l3022:
  3583                           
  3584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  3585   000E76  0E00               	movlw	0
  3586   000E78  6E0A               	movwf	(fputc@c+1)^0,c
  3587   000E7A  0E20               	movlw	32
  3588   000E7C  6E09               	movwf	fputc@c^0,c
  3589   000E7E  C012  F00B         	movff	ctoa@fp,fputc@fp
  3590   000E82  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  3591   000E86  ECBC  F007         	call	_fputc	;wreg free
  3592   000E8A                     
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  3594   000E8A  4A16               	infsnz	ctoa@l^0,f,c
  3595   000E8C  2A17               	incf	(ctoa@l+1)^0,f,c
  3596   000E8E                     l3026:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  3599   000E8E  5018               	movf	ctoa@w^0,w,c
  3600   000E90  5C16               	subwf	ctoa@l^0,w,c
  3601   000E92  5017               	movf	(ctoa@l+1)^0,w,c
  3602   000E94  0A80               	xorlw	128
  3603   000E96  6E15               	movwf	??_ctoa^0,c
  3604   000E98  5019               	movf	(ctoa@w+1)^0,w,c
  3605   000E9A  0A80               	xorlw	128
  3606   000E9C  5815               	subwfb	??_ctoa^0,w,c
  3607   000E9E  A0D8               	btfss	status,0,c
  3608   000EA0  EF54  F007         	goto	u1871
  3609   000EA4  EF56  F007         	goto	u1870
  3610   000EA8                     u1871:
  3611   000EA8  EF3B  F007         	goto	l3022
  3612   000EAC                     u1870:
  3613   000EAC                     
  3614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  3615   000EAC  B056               	btfsc	_flags^0,0,c
  3616   000EAE  EF5B  F007         	goto	u1881
  3617   000EB2  EF5D  F007         	goto	u1880
  3618   000EB6                     u1881:
  3619   000EB6  EF66  F007         	goto	l1226
  3620   000EBA                     u1880:
  3621   000EBA                     
  3622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  3623   000EBA  C014  F009         	movff	ctoa@c,fputc@c
  3624   000EBE  6A0A               	clrf	(fputc@c+1)^0,c
  3625   000EC0  C012  F00B         	movff	ctoa@fp,fputc@fp
  3626   000EC4  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  3627   000EC8  ECBC  F007         	call	_fputc	;wreg free
  3628   000ECC                     l1226:
  3629   000ECC  0012               	return		;funcret
  3630   000ECE                     __end_of_ctoa:
  3631                           	callstack 0
  3632                           
  3633 ;; *************** function _fputc *****************
  3634 ;; Defined at:
  3635 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;  c               2    8[COMRAM] int 
  3638 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  3639 ;;		 -> NULL(0), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  2    8[COMRAM] int 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3651 ;;      Params:         4       0       0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0
  3653 ;;      Temps:          5       0       0       0       0       0       0
  3654 ;;      Totals:         9       0       0       0       0       0       0
  3655 ;;Total ram usage:        9 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 6
  3658 ;; This function calls:
  3659 ;;		_putch
  3660 ;; This function is called by:
  3661 ;;		_pad
  3662 ;;		_ctoa
  3663 ;;		_vfpfcnvrt
  3664 ;;		_fputs
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text10
  3669   000F78                     __ptext10:
  3670                           	callstack 0
  3671   000F78                     _fputc:
  3672                           	callstack 18
  3673   000F78  500B               	movf	fputc@fp^0,w,c
  3674   000F7A  100C               	iorwf	(fputc@fp+1)^0,w,c
  3675   000F7C  B4D8               	btfsc	status,2,c
  3676   000F7E  EFC3  F007         	goto	u1641
  3677   000F82  EFC5  F007         	goto	u1640
  3678   000F86                     u1641:
  3679   000F86  EFCE  F007         	goto	l2910
  3680   000F8A                     u1640:
  3681   000F8A  500B               	movf	fputc@fp^0,w,c
  3682   000F8C  100C               	iorwf	(fputc@fp+1)^0,w,c
  3683   000F8E  A4D8               	btfss	status,2,c
  3684   000F90  EFCC  F007         	goto	u1651
  3685   000F94  EFCE  F007         	goto	u1650
  3686   000F98                     u1651:
  3687   000F98  EFD3  F007         	goto	l2912
  3688   000F9C                     u1650:
  3689   000F9C                     l2910:
  3690   000F9C  5009               	movf	fputc@c^0,w,c
  3691   000F9E  ECBD  F00A         	call	_putch
  3692   000FA2  EF06  F008         	goto	l1314
  3693   000FA6                     l2912:
  3694   000FA6  EE20 F009          	lfsr	2,9
  3695   000FAA  500B               	movf	fputc@fp^0,w,c
  3696   000FAC  26D9               	addwf	fsr2l,f,c
  3697   000FAE  500C               	movf	(fputc@fp+1)^0,w,c
  3698   000FB0  22DA               	addwfc	fsr2h,f,c
  3699   000FB2  50DE               	movf	postinc2,w,c
  3700   000FB4  10DE               	iorwf	postinc2,w,c
  3701   000FB6  B4D8               	btfsc	status,2,c
  3702   000FB8  EFE0  F007         	goto	u1661
  3703   000FBC  EFE2  F007         	goto	u1660
  3704   000FC0                     u1661:
  3705   000FC0  EFFD  F007         	goto	l2916
  3706   000FC4                     u1660:
  3707   000FC4  EE20 F009          	lfsr	2,9
  3708   000FC8  500B               	movf	fputc@fp^0,w,c
  3709   000FCA  26D9               	addwf	fsr2l,f,c
  3710   000FCC  500C               	movf	(fputc@fp+1)^0,w,c
  3711   000FCE  22DA               	addwfc	fsr2h,f,c
  3712   000FD0  EE10 F003          	lfsr	1,3
  3713   000FD4  500B               	movf	fputc@fp^0,w,c
  3714   000FD6  26E1               	addwf	fsr1l,f,c
  3715   000FD8  500C               	movf	(fputc@fp+1)^0,w,c
  3716   000FDA  22E2               	addwfc	fsr1h,f,c
  3717   000FDC  50DE               	movf	postinc2,w,c
  3718   000FDE  5CE6               	subwf	postinc1,w,c
  3719   000FE0  50E6               	movf	postinc1,w,c
  3720   000FE2  0A80               	xorlw	128
  3721   000FE4  6E11               	movwf	(??_fputc+4)^0,c
  3722   000FE6  50DE               	movf	postinc2,w,c
  3723   000FE8  0A80               	xorlw	128
  3724   000FEA  5811               	subwfb	(??_fputc+4)^0,w,c
  3725   000FEC  B0D8               	btfsc	status,0,c
  3726   000FEE  EFFB  F007         	goto	u1671
  3727   000FF2  EFFD  F007         	goto	u1670
  3728   000FF6                     u1671:
  3729   000FF6  EF06  F008         	goto	l1314
  3730   000FFA                     u1670:
  3731   000FFA                     l2916:
  3732   000FFA  EE20 F003          	lfsr	2,3
  3733   000FFE  500B               	movf	fputc@fp^0,w,c
  3734   001000  26D9               	addwf	fsr2l,f,c
  3735   001002  500C               	movf	(fputc@fp+1)^0,w,c
  3736   001004  22DA               	addwfc	fsr2h,f,c
  3737   001006  2ADE               	incf	postinc2,f,c
  3738   001008  0E00               	movlw	0
  3739   00100A  22DD               	addwfc	postdec2,f,c
  3740   00100C                     l1314:
  3741   00100C  0012               	return		;funcret
  3742   00100E                     __end_of_fputc:
  3743                           	callstack 0
  3744                           
  3745 ;; *************** function _putch *****************
  3746 ;; Defined at:
  3747 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  txData          1    wreg     unsigned char 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  txData          1    7[COMRAM] unsigned char 
  3752 ;; Return value:  Size  Location     Type
  3753 ;;                  1    wreg      void 
  3754 ;; Registers used:
  3755 ;;		wreg, status,2, cstack
  3756 ;; Tracked objects:
  3757 ;;		On entry : 0/0
  3758 ;;		On exit  : 0/0
  3759 ;;		Unchanged: 0/0
  3760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3761 ;;      Params:         0       0       0       0       0       0       0
  3762 ;;      Locals:         1       0       0       0       0       0       0
  3763 ;;      Temps:          0       0       0       0       0       0       0
  3764 ;;      Totals:         1       0       0       0       0       0       0
  3765 ;;Total ram usage:        1 bytes
  3766 ;; Hardware stack levels used: 1
  3767 ;; Hardware stack levels required when called: 5
  3768 ;; This function calls:
  3769 ;;		_EUSART1_Write
  3770 ;; This function is called by:
  3771 ;;		_fputc
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text11
  3776   00157A                     __ptext11:
  3777                           	callstack 0
  3778   00157A                     _putch:
  3779                           	callstack 18
  3780                           
  3781                           ;incstack = 0
  3782                           ;putch@txData stored from wreg
  3783   00157A  6E08               	movwf	putch@txData^0,c
  3784   00157C                     
  3785                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3786   00157C  5008               	movf	putch@txData^0,w,c
  3787   00157E  ECA0  F00A         	call	_EUSART1_Write
  3788   001582  0012               	return		;funcret
  3789   001584                     __end_of_putch:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _EUSART1_Write *****************
  3793 ;; Defined at:
  3794 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  txData          1    wreg     unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  txData          1    6[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3808 ;;      Params:         0       0       0       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0
  3811 ;;      Totals:         1       0       0       0       0       0       0
  3812 ;;Total ram usage:        1 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 4
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_putch
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text12
  3823   001540                     __ptext12:
  3824                           	callstack 0
  3825   001540                     _EUSART1_Write:
  3826                           	callstack 18
  3827                           
  3828                           ;incstack = 0
  3829                           ;EUSART1_Write@txData stored from wreg
  3830   001540  6E07               	movwf	EUSART1_Write@txData^0,c
  3831   001542                     l281:
  3832                           
  3833                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3834   001542  A89E               	btfss	158,4,c	;volatile
  3835   001544  EFA6  F00A         	goto	u1631
  3836   001548  EFA8  F00A         	goto	u1630
  3837   00154C                     u1631:
  3838   00154C  EFA1  F00A         	goto	l281
  3839   001550                     u1630:
  3840   001550                     
  3841                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3842   001550  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3843   001554  0012               	return		;funcret
  3844   001556                     __end_of_EUSART1_Write:
  3845                           	callstack 0
  3846                           
  3847 ;; *************** function _atoi *****************
  3848 ;; Defined at:
  3849 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3852 ;;		 -> STR_39(5), STR_38(17), STR_37(3), STR_36(22), 
  3853 ;;		 -> STR_35(24), STR_34(3), STR_33(5), STR_32(9), 
  3854 ;;		 -> STR_31(3), STR_30(5), STR_29(11), STR_28(3), 
  3855 ;;		 -> STR_27(5), STR_26(24), STR_25(3), STR_24(5), 
  3856 ;;		 -> STR_23(24), STR_22(3), STR_21(2), STR_20(5), 
  3857 ;;		 -> STR_19(33), STR_18(32), STR_17(32), STR_16(21), 
  3858 ;;		 -> STR_15(30), STR_14(24), STR_13(21), STR_12(7), 
  3859 ;;		 -> STR_11(15), STR_10(33), STR_9(5), STR_8(5), 
  3860 ;;		 -> STR_7(53), STR_6(18), STR_5(18), STR_4(57), 
  3861 ;;		 -> STR_3(26), STR_2(20), STR_1(15), 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  n               2   19[COMRAM] int 
  3864 ;;  neg             2   17[COMRAM] int 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  2   12[COMRAM] int 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3874 ;;      Params:         2       0       0       0       0       0       0
  3875 ;;      Locals:         4       0       0       0       0       0       0
  3876 ;;      Temps:          3       0       0       0       0       0       0
  3877 ;;      Totals:         9       0       0       0       0       0       0
  3878 ;;Total ram usage:        9 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 5
  3881 ;; This function calls:
  3882 ;;		___wmul
  3883 ;;		_isdigit
  3884 ;;		_isspace
  3885 ;; This function is called by:
  3886 ;;		_vfpfcnvrt
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text13
  3891   000AFC                     __ptext13:
  3892                           	callstack 0
  3893   000AFC                     _atoi:
  3894                           	callstack 22
  3895   000AFC  0E00               	movlw	0
  3896   000AFE  6E15               	movwf	(atoi@n+1)^0,c
  3897   000B00  0E00               	movlw	0
  3898   000B02  6E14               	movwf	atoi@n^0,c
  3899   000B04  0E00               	movlw	0
  3900   000B06  6E13               	movwf	(atoi@neg+1)^0,c
  3901   000B08  0E00               	movlw	0
  3902   000B0A  6E12               	movwf	atoi@neg^0,c
  3903   000B0C  EF8A  F005         	goto	l3064
  3904   000B10                     l3060:
  3905   000B10  4A0D               	infsnz	atoi@s^0,f,c
  3906   000B12  2A0E               	incf	(atoi@s+1)^0,f,c
  3907   000B14                     l3064:
  3908   000B14  C00D  FFF6         	movff	atoi@s,tblptrl
  3909   000B18  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3910   000B1C                     	if	0	;tblptru may be non-zero
  3911   000B1C                     	endif
  3912   000B1C                     	if	0	;tblptru may be non-zero
  3913   000B1C                     	endif
  3914   000B1C  0008               	tblrd		*
  3915   000B1E  50F5               	movf	tablat,w,c
  3916   000B20  0A20               	xorlw	32
  3917   000B22  B4D8               	btfsc	status,2,c
  3918   000B24  EF96  F005         	goto	u1931
  3919   000B28  EF98  F005         	goto	u1930
  3920   000B2C                     u1931:
  3921   000B2C  EF88  F005         	goto	l3060
  3922   000B30                     u1930:
  3923   000B30  C00D  FFF6         	movff	atoi@s,tblptrl
  3924   000B34  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3925   000B38                     	if	0	;tblptru may be non-zero
  3926   000B38                     	endif
  3927   000B38                     	if	0	;tblptru may be non-zero
  3928   000B38                     	endif
  3929   000B38  0008               	tblrd		*
  3930   000B3A  CFF5 F00F          	movff	tablat,??_atoi
  3931   000B3E  0EF7               	movlw	247
  3932   000B40  240F               	addwf	??_atoi^0,w,c
  3933   000B42  6E10               	movwf	(??_atoi+1)^0,c
  3934   000B44  6A11               	clrf	(??_atoi+2)^0,c
  3935   000B46  0EFF               	movlw	255
  3936   000B48  2211               	addwfc	(??_atoi+2)^0,f,c
  3937   000B4A  5011               	movf	(??_atoi+2)^0,w,c
  3938   000B4C  E109               	bnz	u1940
  3939   000B4E  0E05               	movlw	5
  3940   000B50  5C10               	subwf	(??_atoi+1)^0,w,c
  3941   000B52  A0D8               	btfss	status,0,c
  3942   000B54  EFAE  F005         	goto	u1941
  3943   000B58  EFB0  F005         	goto	u1940
  3944   000B5C                     u1941:
  3945   000B5C  EF88  F005         	goto	l3060
  3946   000B60                     u1940:
  3947   000B60  EFBA  F005         	goto	l3072
  3948   000B64                     l3068:
  3949   000B64  0E00               	movlw	0
  3950   000B66  6E13               	movwf	(atoi@neg+1)^0,c
  3951   000B68  0E01               	movlw	1
  3952   000B6A  6E12               	movwf	atoi@neg^0,c
  3953   000B6C                     l3070:
  3954   000B6C  4A0D               	infsnz	atoi@s^0,f,c
  3955   000B6E  2A0E               	incf	(atoi@s+1)^0,f,c
  3956   000B70  EFEF  F005         	goto	l3080
  3957   000B74                     l3072:
  3958   000B74  C00D  FFF6         	movff	atoi@s,tblptrl
  3959   000B78  C00E  FFF7         	movff	atoi@s+1,tblptrh
  3960   000B7C                     	if	0	;tblptru may be non-zero
  3961   000B7C                     	endif
  3962   000B7C                     	if	0	;tblptru may be non-zero
  3963   000B7C                     	endif
  3964   000B7C  0008               	tblrd		*
  3965   000B7E  50F5               	movf	tablat,w,c
  3966   000B80  6E0F               	movwf	??_atoi^0,c
  3967   000B82  6A10               	clrf	(??_atoi+1)^0,c
  3968                           
  3969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3970                           ; Switch size 1, requested type "simple"
  3971                           ; Number of cases is 1, Range of values is 0 to 0
  3972                           ; switch strategies available:
  3973                           ; Name         Instructions Cycles
  3974                           ; simple_byte            4     3 (average)
  3975                           ;	Chosen strategy is simple_byte
  3976   000B84  5010               	movf	(??_atoi+1)^0,w,c
  3977   000B86  0A00               	xorlw	0	; case 0
  3978   000B88  B4D8               	btfsc	status,2,c
  3979   000B8A  EFC9  F005         	goto	l3452
  3980   000B8E  EFEF  F005         	goto	l3080
  3981   000B92                     l3452:
  3982                           
  3983                           ; Switch size 1, requested type "simple"
  3984                           ; Number of cases is 2, Range of values is 43 to 45
  3985                           ; switch strategies available:
  3986                           ; Name         Instructions Cycles
  3987                           ; simple_byte            7     4 (average)
  3988                           ;	Chosen strategy is simple_byte
  3989   000B92  500F               	movf	??_atoi^0,w,c
  3990   000B94  0A2B               	xorlw	43	; case 43
  3991   000B96  B4D8               	btfsc	status,2,c
  3992   000B98  EFB6  F005         	goto	l3070
  3993   000B9C  0A06               	xorlw	6	; case 45
  3994   000B9E  B4D8               	btfsc	status,2,c
  3995   000BA0  EFB2  F005         	goto	l3068
  3996   000BA4  EFEF  F005         	goto	l3080
  3997   000BA8                     l3074:
  3998   000BA8  C014  F007         	movff	atoi@n,___wmul@multiplier
  3999   000BAC  C015  F008         	movff	atoi@n+1,___wmul@multiplier+1
  4000   000BB0  0E00               	movlw	0
  4001   000BB2  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  4002   000BB4  0E0A               	movlw	10
  4003   000BB6  6E09               	movwf	___wmul@multiplicand^0,c
  4004   000BB8  EC2F  F00A         	call	___wmul	;wreg free
  4005   000BBC  C00D  FFF6         	movff	atoi@s,tblptrl
  4006   000BC0  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4007   000BC4                     	if	0	;tblptru may be non-zero
  4008   000BC4                     	endif
  4009   000BC4                     	if	0	;tblptru may be non-zero
  4010   000BC4                     	endif
  4011   000BC4  0008               	tblrd		*
  4012   000BC6  50F5               	movf	tablat,w,c
  4013   000BC8  5E07               	subwf	?___wmul^0,f,c
  4014   000BCA  0E00               	movlw	0
  4015   000BCC  5A08               	subwfb	(?___wmul+1)^0,f,c
  4016   000BCE  0E30               	movlw	48
  4017   000BD0  2407               	addwf	?___wmul^0,w,c
  4018   000BD2  6E14               	movwf	atoi@n^0,c
  4019   000BD4  0E00               	movlw	0
  4020   000BD6  2008               	addwfc	(?___wmul+1)^0,w,c
  4021   000BD8  6E15               	movwf	(atoi@n+1)^0,c
  4022   000BDA  EFB6  F005         	goto	l3070
  4023   000BDE                     l3080:
  4024   000BDE  C00D  FFF6         	movff	atoi@s,tblptrl
  4025   000BE2  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4026   000BE6                     	if	0	;tblptru may be non-zero
  4027   000BE6                     	endif
  4028   000BE6                     	if	0	;tblptru may be non-zero
  4029   000BE6                     	endif
  4030   000BE6  0008               	tblrd		*
  4031   000BE8  CFF5 F00F          	movff	tablat,??_atoi
  4032   000BEC  0ED0               	movlw	208
  4033   000BEE  240F               	addwf	??_atoi^0,w,c
  4034   000BF0  6E10               	movwf	(??_atoi+1)^0,c
  4035   000BF2  6A11               	clrf	(??_atoi+2)^0,c
  4036   000BF4  0EFF               	movlw	255
  4037   000BF6  2211               	addwfc	(??_atoi+2)^0,f,c
  4038   000BF8  5011               	movf	(??_atoi+2)^0,w,c
  4039   000BFA  E109               	bnz	u1950
  4040   000BFC  0E0A               	movlw	10
  4041   000BFE  5C10               	subwf	(??_atoi+1)^0,w,c
  4042   000C00  A0D8               	btfss	status,0,c
  4043   000C02  EF05  F006         	goto	u1951
  4044   000C06  EF07  F006         	goto	u1950
  4045   000C0A                     u1951:
  4046   000C0A  EFD4  F005         	goto	l3074
  4047   000C0E                     u1950:
  4048   000C0E  5012               	movf	atoi@neg^0,w,c
  4049   000C10  1013               	iorwf	(atoi@neg+1)^0,w,c
  4050   000C12  A4D8               	btfss	status,2,c
  4051   000C14  EF0E  F006         	goto	u1961
  4052   000C18  EF10  F006         	goto	u1960
  4053   000C1C                     u1961:
  4054   000C1C  EF1E  F006         	goto	l1285
  4055   000C20                     u1960:
  4056   000C20  C014  F00F         	movff	atoi@n,??_atoi
  4057   000C24  C015  F010         	movff	atoi@n+1,??_atoi+1
  4058   000C28  1E0F               	comf	??_atoi^0,f,c
  4059   000C2A  1E10               	comf	(??_atoi+1)^0,f,c
  4060   000C2C  4A0F               	infsnz	??_atoi^0,f,c
  4061   000C2E  2A10               	incf	(??_atoi+1)^0,f,c
  4062   000C30  C00F  F00D         	movff	??_atoi,?_atoi
  4063   000C34  C010  F00E         	movff	??_atoi+1,?_atoi+1
  4064   000C38  EF22  F006         	goto	l1288
  4065   000C3C                     l1285:
  4066   000C3C  C014  F00D         	movff	atoi@n,?_atoi
  4067   000C40  C015  F00E         	movff	atoi@n+1,?_atoi+1
  4068   000C44                     l1288:
  4069   000C44  0012               	return		;funcret
  4070   000C46                     __end_of_atoi:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _isspace *****************
  4074 ;; Defined at:
  4075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  c               2    6[COMRAM] int 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  2    6[COMRAM] int 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4089 ;;      Params:         2       0       0       0       0       0       0
  4090 ;;      Locals:         1       0       0       0       0       0       0
  4091 ;;      Temps:          2       0       0       0       0       0       0
  4092 ;;      Totals:         5       0       0       0       0       0       0
  4093 ;;Total ram usage:        5 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 4
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_atoi
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text14
  4104   00112C                     __ptext14:
  4105                           	callstack 0
  4106   00112C                     _isspace:
  4107                           	callstack 22
  4108   00112C  0E01               	movlw	1
  4109   00112E  6E0B               	movwf	_isspace$1836^0,c
  4110   001130  0E20               	movlw	32
  4111   001132  1807               	xorwf	isspace@c^0,w,c
  4112   001134  1008               	iorwf	(isspace@c+1)^0,w,c
  4113   001136  B4D8               	btfsc	status,2,c
  4114   001138  EFA0  F008         	goto	u1821
  4115   00113C  EFA2  F008         	goto	u1820
  4116   001140                     u1821:
  4117   001140  EFB5  F008         	goto	l3002
  4118   001144                     u1820:
  4119   001144  0EF7               	movlw	247
  4120   001146  2407               	addwf	isspace@c^0,w,c
  4121   001148  6E09               	movwf	??_isspace^0,c
  4122   00114A  0EFF               	movlw	255
  4123   00114C  2008               	addwfc	(isspace@c+1)^0,w,c
  4124   00114E  6E0A               	movwf	(??_isspace+1)^0,c
  4125   001150  500A               	movf	(??_isspace+1)^0,w,c
  4126   001152  E109               	bnz	u1830
  4127   001154  0E05               	movlw	5
  4128   001156  5C09               	subwf	??_isspace^0,w,c
  4129   001158  A0D8               	btfss	status,0,c
  4130   00115A  EFB1  F008         	goto	u1831
  4131   00115E  EFB3  F008         	goto	u1830
  4132   001162                     u1831:
  4133   001162  EFB5  F008         	goto	l3002
  4134   001166                     u1830:
  4135   001166  0E00               	movlw	0
  4136   001168  6E0B               	movwf	_isspace$1836^0,c
  4137   00116A                     l3002:
  4138   00116A  C00B  F007         	movff	_isspace$1836,?_isspace
  4139   00116E  6A08               	clrf	(?_isspace+1)^0,c
  4140   001170  0012               	return		;funcret
  4141   001172                     __end_of_isspace:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _isdigit *****************
  4145 ;; Defined at:
  4146 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  c               2    6[COMRAM] int 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2    6[COMRAM] int 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4160 ;;      Params:         2       0       0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0
  4162 ;;      Temps:          2       0       0       0       0       0       0
  4163 ;;      Totals:         4       0       0       0       0       0       0
  4164 ;;Total ram usage:        4 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 4
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_vfpfcnvrt
  4171 ;;		_atoi
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	text15
  4176   001368                     __ptext15:
  4177                           	callstack 0
  4178   001368                     _isdigit:
  4179                           	callstack 23
  4180   001368  0ED0               	movlw	208
  4181   00136A  2407               	addwf	isdigit@c^0,w,c
  4182   00136C  6E09               	movwf	??_isdigit^0,c
  4183   00136E  0EFF               	movlw	255
  4184   001370  2008               	addwfc	(isdigit@c+1)^0,w,c
  4185   001372  6E0A               	movwf	(??_isdigit+1)^0,c
  4186   001374  500A               	movf	(??_isdigit+1)^0,w,c
  4187   001376  E10A               	bnz	u1800
  4188   001378  0E0A               	movlw	10
  4189   00137A  5C09               	subwf	??_isdigit^0,w,c
  4190   00137C  A0D8               	btfss	status,0,c
  4191   00137E  EFC3  F009         	goto	u1801
  4192   001382  EFC6  F009         	goto	u1800
  4193   001386                     u1801:
  4194   001386  0E01               	movlw	1
  4195   001388  EFC7  F009         	goto	u1810
  4196   00138C                     u1800:
  4197   00138C  0E00               	movlw	0
  4198   00138E                     u1810:
  4199   00138E  6E07               	movwf	?_isdigit^0,c
  4200   001390  6A08               	clrf	(?_isdigit+1)^0,c
  4201   001392  0012               	return		;funcret
  4202   001394                     __end_of_isdigit:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function ___wmul *****************
  4206 ;; Defined at:
  4207 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  multiplier      2    6[COMRAM] unsigned int 
  4210 ;;  multiplicand    2    8[COMRAM] unsigned int 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  product         2   10[COMRAM] unsigned int 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  2    6[COMRAM] unsigned int 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0, prodl, prodh
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4222 ;;      Params:         4       0       0       0       0       0       0
  4223 ;;      Locals:         2       0       0       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0
  4225 ;;      Totals:         6       0       0       0       0       0       0
  4226 ;;Total ram usage:        6 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 4
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_atoi
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text16
  4237   00145E                     __ptext16:
  4238                           	callstack 0
  4239   00145E                     ___wmul:
  4240                           	callstack 22
  4241   00145E  5007               	movf	___wmul@multiplier^0,w,c
  4242   001460  0209               	mulwf	___wmul@multiplicand^0,c
  4243   001462  CFF3 F00B          	movff	prodl,___wmul@product
  4244   001466  CFF4 F00C          	movff	prodh,___wmul@product+1
  4245   00146A  5007               	movf	___wmul@multiplier^0,w,c
  4246   00146C  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  4247   00146E  50F3               	movf	243,w,c
  4248   001470  260C               	addwf	(___wmul@product+1)^0,f,c
  4249   001472  5008               	movf	(___wmul@multiplier+1)^0,w,c
  4250   001474  0209               	mulwf	___wmul@multiplicand^0,c
  4251   001476  50F3               	movf	243,w,c
  4252   001478  260C               	addwf	(___wmul@product+1)^0,f,c
  4253   00147A  C00B  F007         	movff	___wmul@product,?___wmul
  4254   00147E  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  4255   001482  0012               	return		;funcret
  4256   001484                     __end_of___wmul:
  4257                           	callstack 0
  4258                           
  4259 ;; *************** function _convertEchToCm *****************
  4260 ;; Defined at:
  4261 ;;		line 275 in file "main.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  timerCounts     2   18[COMRAM] unsigned short 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;		None
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  2   18[COMRAM] unsigned short 
  4268 ;; Registers used:
  4269 ;;		wreg, status,2, status,0, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4275 ;;      Params:         2       0       0       0       0       0       0
  4276 ;;      Locals:         0       0       0       0       0       0       0
  4277 ;;      Temps:          0       0       0       0       0       0       0
  4278 ;;      Totals:         2       0       0       0       0       0       0
  4279 ;;Total ram usage:        2 bytes
  4280 ;; Hardware stack levels used: 1
  4281 ;; Hardware stack levels required when called: 5
  4282 ;; This function calls:
  4283 ;;		___lmul
  4284 ;; This function is called by:
  4285 ;;		_main
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           	psect	text17
  4290   0011B6                     __ptext17:
  4291                           	callstack 0
  4292   0011B6                     _convertEchToCm:
  4293                           	callstack 25
  4294   0011B6                     
  4295                           ;main.c: 275: uint16_t convertEchToCm(uint16_t timerCounts);main.c: 276: {;main.c: 277: 
      +                              return((547 * ((uint32_t) timerCounts)) >> 16);
  4296   0011B6  C013  F007         	movff	convertEchToCm@timerCounts,___lmul@multiplier
  4297   0011BA  C014  F008         	movff	convertEchToCm@timerCounts+1,___lmul@multiplier+1
  4298   0011BE  6A09               	clrf	(___lmul@multiplier+2)^0,c
  4299   0011C0  6A0A               	clrf	(___lmul@multiplier+3)^0,c
  4300   0011C2  0E23               	movlw	35
  4301   0011C4  6E0B               	movwf	___lmul@multiplicand^0,c
  4302   0011C6  0E02               	movlw	2
  4303   0011C8  6E0C               	movwf	(___lmul@multiplicand+1)^0,c
  4304   0011CA  0E00               	movlw	0
  4305   0011CC  6E0D               	movwf	(___lmul@multiplicand+2)^0,c
  4306   0011CE  0E00               	movlw	0
  4307   0011D0  6E0E               	movwf	(___lmul@multiplicand+3)^0,c
  4308   0011D2  EC07  F008         	call	___lmul	;wreg free
  4309   0011D6  0E11               	movlw	17
  4310   0011D8  EFF3  F008         	goto	u1380
  4311   0011DC                     u1385:
  4312   0011DC  90D8               	bcf	status,0,c
  4313   0011DE  320A               	rrcf	(?___lmul+3)^0,f,c
  4314   0011E0  3209               	rrcf	(?___lmul+2)^0,f,c
  4315   0011E2  3208               	rrcf	(?___lmul+1)^0,f,c
  4316   0011E4  3207               	rrcf	?___lmul^0,f,c
  4317   0011E6                     u1380:
  4318   0011E6  2EE8               	decfsz	wreg,f,c
  4319   0011E8  EFEE  F008         	goto	u1385
  4320   0011EC  C007  F013         	movff	?___lmul,?_convertEchToCm
  4321   0011F0  C008  F014         	movff	?___lmul+1,?_convertEchToCm+1
  4322   0011F4  0012               	return		;funcret
  4323   0011F6                     __end_of_convertEchToCm:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function ___lmul *****************
  4327 ;; Defined at:
  4328 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;  multiplier      4    6[COMRAM] unsigned long 
  4331 ;;  multiplicand    4   10[COMRAM] unsigned long 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  product         4   14[COMRAM] unsigned long 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  4    6[COMRAM] unsigned long 
  4336 ;; Registers used:
  4337 ;;		wreg, status,2, status,0
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4343 ;;      Params:         8       0       0       0       0       0       0
  4344 ;;      Locals:         4       0       0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0
  4346 ;;      Totals:        12       0       0       0       0       0       0
  4347 ;;Total ram usage:       12 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 4
  4350 ;; This function calls:
  4351 ;;		Nothing
  4352 ;; This function is called by:
  4353 ;;		_convertEchToCm
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text18
  4358   00100E                     __ptext18:
  4359                           	callstack 0
  4360   00100E                     ___lmul:
  4361                           	callstack 25
  4362   00100E  0E00               	movlw	0
  4363   001010  6E0F               	movwf	___lmul@product^0,c
  4364   001012  0E00               	movlw	0
  4365   001014  6E10               	movwf	(___lmul@product+1)^0,c
  4366   001016  0E00               	movlw	0
  4367   001018  6E11               	movwf	(___lmul@product+2)^0,c
  4368   00101A  0E00               	movlw	0
  4369   00101C  6E12               	movwf	(___lmul@product+3)^0,c
  4370   00101E                     l2500:
  4371   00101E  A007               	btfss	___lmul@multiplier^0,0,c
  4372   001020  EF14  F008         	goto	u1281
  4373   001024  EF16  F008         	goto	u1280
  4374   001028                     u1281:
  4375   001028  EF1E  F008         	goto	l2504
  4376   00102C                     u1280:
  4377   00102C  500B               	movf	___lmul@multiplicand^0,w,c
  4378   00102E  260F               	addwf	___lmul@product^0,f,c
  4379   001030  500C               	movf	(___lmul@multiplicand+1)^0,w,c
  4380   001032  2210               	addwfc	(___lmul@product+1)^0,f,c
  4381   001034  500D               	movf	(___lmul@multiplicand+2)^0,w,c
  4382   001036  2211               	addwfc	(___lmul@product+2)^0,f,c
  4383   001038  500E               	movf	(___lmul@multiplicand+3)^0,w,c
  4384   00103A  2212               	addwfc	(___lmul@product+3)^0,f,c
  4385   00103C                     l2504:
  4386   00103C  90D8               	bcf	status,0,c
  4387   00103E  360B               	rlcf	___lmul@multiplicand^0,f,c
  4388   001040  360C               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4389   001042  360D               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4390   001044  360E               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4391   001046  90D8               	bcf	status,0,c
  4392   001048  320A               	rrcf	(___lmul@multiplier+3)^0,f,c
  4393   00104A  3209               	rrcf	(___lmul@multiplier+2)^0,f,c
  4394   00104C  3208               	rrcf	(___lmul@multiplier+1)^0,f,c
  4395   00104E  3207               	rrcf	___lmul@multiplier^0,f,c
  4396   001050  5007               	movf	___lmul@multiplier^0,w,c
  4397   001052  1008               	iorwf	(___lmul@multiplier+1)^0,w,c
  4398   001054  1009               	iorwf	(___lmul@multiplier+2)^0,w,c
  4399   001056  100A               	iorwf	(___lmul@multiplier+3)^0,w,c
  4400   001058  A4D8               	btfss	status,2,c
  4401   00105A  EF31  F008         	goto	u1291
  4402   00105E  EF33  F008         	goto	u1290
  4403   001062                     u1291:
  4404   001062  EF0F  F008         	goto	l2500
  4405   001066                     u1290:
  4406   001066  C00F  F007         	movff	___lmul@product,?___lmul
  4407   00106A  C010  F008         	movff	___lmul@product+1,?___lmul+1
  4408   00106E  C011  F009         	movff	___lmul@product+2,?___lmul+2
  4409   001072  C012  F00A         	movff	___lmul@product+3,?___lmul+3
  4410   001076  0012               	return		;funcret
  4411   001078                     __end_of___lmul:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _TMR0_WriteTimer *****************
  4415 ;; Defined at:
  4416 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  timerVal        2    6[COMRAM] unsigned short 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;		None
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4430 ;;      Params:         2       0       0       0       0       0       0
  4431 ;;      Locals:         0       0       0       0       0       0       0
  4432 ;;      Temps:          0       0       0       0       0       0       0
  4433 ;;      Totals:         2       0       0       0       0       0       0
  4434 ;;Total ram usage:        2 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 4
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_main
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text19
  4445   001584                     __ptext19:
  4446                           	callstack 0
  4447   001584                     _TMR0_WriteTimer:
  4448                           	callstack 26
  4449   001584                     
  4450                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4451   001584  5008               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4452   001586  6ED7               	movwf	215,c	;volatile
  4453   001588                     
  4454                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4455   001588  C007  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4456   00158C  0012               	return		;funcret
  4457   00158E                     __end_of_TMR0_WriteTimer:
  4458                           	callstack 0
  4459                           
  4460 ;; *************** function _SYSTEM_Initialize *****************
  4461 ;; Defined at:
  4462 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4476 ;;      Params:         0       0       0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 6
  4483 ;; This function calls:
  4484 ;;		_CCP4_Initialize
  4485 ;;		_EPWM1_Initialize
  4486 ;;		_EPWM2_Initialize
  4487 ;;		_EUSART1_Initialize
  4488 ;;		_INTERRUPT_Initialize
  4489 ;;		_OSCILLATOR_Initialize
  4490 ;;		_PIN_MANAGER_Initialize
  4491 ;;		_TMR0_Initialize
  4492 ;;		_TMR1_Initialize
  4493 ;;		_TMR2_Initialize
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text20
  4500   001394                     __ptext20:
  4501                           	callstack 0
  4502   001394                     _SYSTEM_Initialize:
  4503                           	callstack 24
  4504   001394                     
  4505                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4506   001394  ECE5  F00A         	call	_INTERRUPT_Initialize	;wreg free
  4507   001398                     
  4508                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4509   001398  ECDF  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  4510   00139C                     
  4511                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4512   00139C  EC92  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  4513   0013A0                     
  4514                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  4515   0013A0  EC55  F00A         	call	_EPWM2_Initialize	;wreg free
  4516   0013A4                     
  4517                           ;mcc_generated_files/mcc.c: 57:     CCP4_Initialize();
  4518   0013A4  EC42  F00A         	call	_CCP4_Initialize	;wreg free
  4519   0013A8                     
  4520                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  4521   0013A8  EC65  F00A         	call	_EPWM1_Initialize	;wreg free
  4522   0013AC                     
  4523                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  4524   0013AC  ECB5  F00A         	call	_TMR2_Initialize	;wreg free
  4525   0013B0                     
  4526                           ;mcc_generated_files/mcc.c: 60:     TMR1_Initialize();
  4527   0013B0  EC84  F00A         	call	_TMR1_Initialize	;wreg free
  4528   0013B4                     
  4529                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  4530   0013B4  EC37  F009         	call	_TMR0_Initialize	;wreg free
  4531   0013B8                     
  4532                           ;mcc_generated_files/mcc.c: 62:     EUSART1_Initialize();
  4533   0013B8  ECFB  F008         	call	_EUSART1_Initialize	;wreg free
  4534   0013BC  0012               	return		;funcret
  4535   0013BE                     __end_of_SYSTEM_Initialize:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _TMR2_Initialize *****************
  4539 ;; Defined at:
  4540 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4554 ;;      Params:         0       0       0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; Hardware stack levels required when called: 4
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_SYSTEM_Initialize
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text21
  4569   00156A                     __ptext21:
  4570                           	callstack 0
  4571   00156A                     _TMR2_Initialize:
  4572                           	callstack 25
  4573   00156A                     
  4574                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  4575   00156A  0E3F               	movlw	63
  4576   00156C  6EBB               	movwf	187,c	;volatile
  4577                           
  4578                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4579   00156E  0E00               	movlw	0
  4580   001570  6EBC               	movwf	188,c	;volatile
  4581   001572                     
  4582                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4583   001572  929E               	bcf	158,1,c	;volatile
  4584                           
  4585                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  4586   001574  0E06               	movlw	6
  4587   001576  6EBA               	movwf	186,c	;volatile
  4588   001578  0012               	return		;funcret
  4589   00157A                     __end_of_TMR2_Initialize:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _TMR1_Initialize *****************
  4593 ;; Defined at:
  4594 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;		None
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4608 ;;      Params:         0       0       0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0
  4611 ;;      Totals:         0       0       0       0       0       0       0
  4612 ;;Total ram usage:        0 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 4
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_SYSTEM_Initialize
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text22
  4623   001508                     __ptext22:
  4624                           	callstack 0
  4625   001508                     _TMR1_Initialize:
  4626                           	callstack 25
  4627   001508                     
  4628                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  4629   001508  0E00               	movlw	0
  4630   00150A  6ECC               	movwf	204,c	;volatile
  4631                           
  4632                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x06;
  4633   00150C  0E06               	movlw	6
  4634   00150E  6ECF               	movwf	207,c	;volatile
  4635                           
  4636                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  4637   001510  0E00               	movlw	0
  4638   001512  6ECE               	movwf	206,c	;volatile
  4639   001514                     
  4640                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  4641   001514  CFCE F0A7          	movff	4046,_timer1ReloadVal	;volatile
  4642   001518  CFCF F0A8          	movff	4047,_timer1ReloadVal+1	;volatile
  4643   00151C                     
  4644                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  4645   00151C  909E               	bcf	158,0,c	;volatile
  4646                           
  4647                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  4648   00151E  0E31               	movlw	49
  4649   001520  6ECD               	movwf	205,c	;volatile
  4650   001522  0012               	return		;funcret
  4651   001524                     __end_of_TMR1_Initialize:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _TMR0_Initialize *****************
  4655 ;; Defined at:
  4656 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;		None
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4670 ;;      Params:         0       0       0       0       0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0
  4672 ;;      Temps:          2       0       0       0       0       0       0
  4673 ;;      Totals:         2       0       0       0       0       0       0
  4674 ;;Total ram usage:        2 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 5
  4677 ;; This function calls:
  4678 ;;		_TMR0_SetInterruptHandler
  4679 ;; This function is called by:
  4680 ;;		_SYSTEM_Initialize
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text23
  4685   00126E                     __ptext23:
  4686                           	callstack 0
  4687   00126E                     _TMR0_Initialize:
  4688                           	callstack 24
  4689   00126E                     
  4690                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  4691   00126E  9CD5               	bcf	213,6,c	;volatile
  4692   001270                     
  4693                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  4694   001270  0E00               	movlw	0
  4695   001272  6ED7               	movwf	215,c	;volatile
  4696                           
  4697                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x23;
  4698   001274  0E23               	movlw	35
  4699   001276  6ED6               	movwf	214,c	;volatile
  4700   001278                     
  4701                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4702   001278  50D6               	movf	214,w,c	;volatile
  4703   00127A  CFD7 F009          	movff	4055,??_TMR0_Initialize	;volatile
  4704   00127E  6A0A               	clrf	(??_TMR0_Initialize+1)^0,c
  4705   001280  C009  F00A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4706   001284  6A09               	clrf	??_TMR0_Initialize^0,c
  4707   001286  1009               	iorwf	??_TMR0_Initialize^0,w,c
  4708   001288  6E54               	movwf	_timer0ReloadVal^0,c	;volatile
  4709   00128A  500A               	movf	(??_TMR0_Initialize+1)^0,w,c
  4710   00128C  6E55               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  4711   00128E                     
  4712                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  4713   00128E  94F2               	bcf	242,2,c	;volatile
  4714   001290                     
  4715                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  4716   001290  8AF2               	bsf	242,5,c	;volatile
  4717   001292                     
  4718                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  4719   001292  0ECE               	movlw	low _TMR0_DefaultInterruptHandler
  4720   001294  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4721   001296  0E15               	movlw	high _TMR0_DefaultInterruptHandler
  4722   001298  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4723   00129A  ECC7  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  4724   00129E                     
  4725                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x94;
  4726   00129E  0E94               	movlw	148
  4727   0012A0  6ED5               	movwf	213,c	;volatile
  4728   0012A2  0012               	return		;funcret
  4729   0012A4                     __end_of_TMR0_Initialize:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _TMR0_SetInterruptHandler *****************
  4733 ;; Defined at:
  4734 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  4737 ;;		 -> TMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4749 ;;      Params:         2       0       0       0       0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0
  4752 ;;      Totals:         2       0       0       0       0       0       0
  4753 ;;Total ram usage:        2 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 4
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_TMR0_Initialize
  4760 ;;		_main
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text24
  4765   00158E                     __ptext24:
  4766                           	callstack 0
  4767   00158E                     _TMR0_SetInterruptHandler:
  4768                           	callstack 26
  4769   00158E                     
  4770                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  4771   00158E  C007  F0A5         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  4772   001592  C008  F0A6         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  4773   001596  0012               	return		;funcret
  4774   001598                     __end_of_TMR0_SetInterruptHandler:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function _PIN_MANAGER_Initialize *****************
  4778 ;; Defined at:
  4779 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4793 ;;      Params:         0       0       0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0
  4796 ;;      Totals:         0       0       0       0       0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; Hardware stack levels required when called: 4
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_SYSTEM_Initialize
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text25
  4808   0013BE                     __ptext25:
  4809                           	callstack 0
  4810   0013BE                     _PIN_MANAGER_Initialize:
  4811                           	callstack 25
  4812   0013BE                     
  4813                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4814   0013BE  0E00               	movlw	0
  4815   0013C0  6E89               	movwf	137,c	;volatile
  4816                           
  4817                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4818   0013C2  0E00               	movlw	0
  4819   0013C4  6E8A               	movwf	138,c	;volatile
  4820                           
  4821                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4822   0013C6  0E00               	movlw	0
  4823   0013C8  6E8B               	movwf	139,c	;volatile
  4824   0013CA                     
  4825                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4826   0013CA  6892               	setf	146,c	;volatile
  4827   0013CC                     
  4828                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4829   0013CC  6893               	setf	147,c	;volatile
  4830                           
  4831                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xA9;
  4832   0013CE  0EA9               	movlw	169
  4833   0013D0  6E94               	movwf	148,c	;volatile
  4834                           
  4835                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x2C;
  4836   0013D2  0E2C               	movlw	44
  4837   0013D4  010F               	movlb	15	; () banked
  4838   0013D6  6F3A               	movwf	58,b	;volatile
  4839                           
  4840                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  4841   0013D8  0E3E               	movlw	62
  4842   0013DA  6F39               	movwf	57,b	;volatile
  4843                           
  4844                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4845   0013DC  0E2F               	movlw	47
  4846   0013DE  6F38               	movwf	56,b	;volatile
  4847                           
  4848                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4849   0013E0  0E00               	movlw	0
  4850   0013E2  6E61               	movwf	97,c	;volatile
  4851   0013E4                     
  4852                           ; BSR set to: 15
  4853                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4854   0013E4  8EF1               	bsf	241,7,c	;volatile
  4855   0013E6                     
  4856                           ; BSR set to: 15
  4857   0013E6  0012               	return		;funcret
  4858   0013E8                     __end_of_PIN_MANAGER_Initialize:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _OSCILLATOR_Initialize *****************
  4862 ;; Defined at:
  4863 ;;		line 65 in file "mcc_generated_files/mcc.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4877 ;;      Params:         0       0       0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0       0       0
  4880 ;;      Totals:         0       0       0       0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used: 1
  4883 ;; Hardware stack levels required when called: 4
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_SYSTEM_Initialize
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text26
  4892   001524                     __ptext26:
  4893                           	callstack 0
  4894   001524                     _OSCILLATOR_Initialize:
  4895                           	callstack 25
  4896   001524                     
  4897                           ;mcc_generated_files/mcc.c: 68:     OSCCON = 0x70;
  4898   001524  0E70               	movlw	112
  4899   001526  6ED3               	movwf	211,c	;volatile
  4900                           
  4901                           ;mcc_generated_files/mcc.c: 70:     OSCCON2 = 0x04;
  4902   001528  0E04               	movlw	4
  4903   00152A  6ED2               	movwf	210,c	;volatile
  4904                           
  4905                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x40;
  4906   00152C  0E40               	movlw	64
  4907   00152E  6E9B               	movwf	155,c	;volatile
  4908   001530                     l62:
  4909                           
  4910                           ;mcc_generated_files/mcc.c: 74:     while(PLLRDY == 0)
  4911   001530  AED2               	btfss	4050,7,c	;volatile
  4912   001532  EF9D  F00A         	goto	u1251
  4913   001536  EF9F  F00A         	goto	u1250
  4914   00153A                     u1251:
  4915   00153A  EF98  F00A         	goto	l62
  4916   00153E                     u1250:
  4917   00153E  0012               	return		;funcret
  4918   001540                     __end_of_OSCILLATOR_Initialize:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function _INTERRUPT_Initialize *****************
  4922 ;; Defined at:
  4923 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		None
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4937 ;;      Params:         0       0       0       0       0       0       0
  4938 ;;      Locals:         0       0       0       0       0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0
  4940 ;;      Totals:         0       0       0       0       0       0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 4
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_SYSTEM_Initialize
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text27
  4952   0015CA                     __ptext27:
  4953                           	callstack 0
  4954   0015CA                     _INTERRUPT_Initialize:
  4955                           	callstack 25
  4956   0015CA                     
  4957                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  4958   0015CA  9ED0               	bcf	208,7,c	;volatile
  4959   0015CC  0012               	return		;funcret
  4960   0015CE                     __end_of_INTERRUPT_Initialize:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function _EUSART1_Initialize *****************
  4964 ;; Defined at:
  4965 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4979 ;;      Params:         0       0       0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0
  4982 ;;      Totals:         0       0       0       0       0       0       0
  4983 ;;Total ram usage:        0 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 5
  4986 ;; This function calls:
  4987 ;;		_EUSART1_SetErrorHandler
  4988 ;;		_EUSART1_SetFramingErrorHandler
  4989 ;;		_EUSART1_SetOverrunErrorHandler
  4990 ;; This function is called by:
  4991 ;;		_SYSTEM_Initialize
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text28
  4996   0011F6                     __ptext28:
  4997                           	callstack 0
  4998   0011F6                     _EUSART1_Initialize:
  4999                           	callstack 24
  5000   0011F6                     
  5001                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5002   0011F6  0E08               	movlw	8
  5003   0011F8  6EB8               	movwf	184,c	;volatile
  5004                           
  5005                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5006   0011FA  0E90               	movlw	144
  5007   0011FC  6EAB               	movwf	171,c	;volatile
  5008                           
  5009                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5010   0011FE  0E24               	movlw	36
  5011   001200  6EAC               	movwf	172,c	;volatile
  5012                           
  5013                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5014   001202  0E82               	movlw	130
  5015   001204  6EAF               	movwf	175,c	;volatile
  5016                           
  5017                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5018   001206  0E06               	movlw	6
  5019   001208  6EB0               	movwf	176,c	;volatile
  5020   00120A                     
  5021                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5022   00120A  0E00               	movlw	0
  5023   00120C  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5024   00120E  0E00               	movlw	0
  5025   001210  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5026   001212  ECD1  F00A         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5027   001216                     
  5028                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5029   001216  0E00               	movlw	0
  5030   001218  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5031   00121A  0E00               	movlw	0
  5032   00121C  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5033   00121E  ECCC  F00A         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5034   001222                     
  5035                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5036   001222  0E00               	movlw	0
  5037   001224  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5038   001226  0E00               	movlw	0
  5039   001228  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5040   00122A  ECD6  F00A         	call	_EUSART1_SetErrorHandler	;wreg free
  5041   00122E                     
  5042                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5043   00122E  0E00               	movlw	0
  5044   001230  6E57               	movwf	_eusart1RxLastError^0,c	;volatile
  5045   001232  0012               	return		;funcret
  5046   001234                     __end_of_EUSART1_Initialize:
  5047                           	callstack 0
  5048                           
  5049 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5050 ;; Defined at:
  5051 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  5054 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5066 ;;      Params:         2       0       0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0       0       0
  5069 ;;      Totals:         2       0       0       0       0       0       0
  5070 ;;Total ram usage:        2 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 4
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_EUSART1_Initialize
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text29
  5081   001598                     __ptext29:
  5082                           	callstack 0
  5083   001598                     _EUSART1_SetOverrunErrorHandler:
  5084                           	callstack 24
  5085   001598                     
  5086                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5087   001598  C007  F0A1         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5088   00159C  C008  F0A2         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5089   0015A0  0012               	return		;funcret
  5090   0015A2                     __end_of_EUSART1_SetOverrunErrorHandler:
  5091                           	callstack 0
  5092                           
  5093 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5094 ;; Defined at:
  5095 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  5098 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5110 ;;      Params:         2       0       0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0
  5113 ;;      Totals:         2       0       0       0       0       0       0
  5114 ;;Total ram usage:        2 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 4
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_EUSART1_Initialize
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text30
  5125   0015A2                     __ptext30:
  5126                           	callstack 0
  5127   0015A2                     _EUSART1_SetFramingErrorHandler:
  5128                           	callstack 24
  5129   0015A2                     
  5130                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5131   0015A2  C007  F0A3         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5132   0015A6  C008  F0A4         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5133   0015AA  0012               	return		;funcret
  5134   0015AC                     __end_of_EUSART1_SetFramingErrorHandler:
  5135                           	callstack 0
  5136                           
  5137 ;; *************** function _EUSART1_SetErrorHandler *****************
  5138 ;; Defined at:
  5139 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5140 ;; Parameters:    Size  Location     Type
  5141 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  5142 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5154 ;;      Params:         2       0       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0
  5157 ;;      Totals:         2       0       0       0       0       0       0
  5158 ;;Total ram usage:        2 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 4
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_EUSART1_Initialize
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text31
  5169   0015AC                     __ptext31:
  5170                           	callstack 0
  5171   0015AC                     _EUSART1_SetErrorHandler:
  5172                           	callstack 24
  5173   0015AC                     
  5174                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5175   0015AC  C007  F09F         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5176   0015B0  C008  F0A0         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5177   0015B4  0012               	return		;funcret
  5178   0015B6                     __end_of_EUSART1_SetErrorHandler:
  5179                           	callstack 0
  5180                           
  5181 ;; *************** function _EPWM2_Initialize *****************
  5182 ;; Defined at:
  5183 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5197 ;;      Params:         0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 4
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_SYSTEM_Initialize
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text32
  5212   0014AA                     __ptext32:
  5213                           	callstack 0
  5214   0014AA                     _EPWM2_Initialize:
  5215                           	callstack 25
  5216   0014AA                     
  5217                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  5218   0014AA  0E3C               	movlw	60
  5219   0014AC  6E66               	movwf	102,c	;volatile
  5220                           
  5221                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  5222   0014AE  0E00               	movlw	0
  5223   0014B0  6E64               	movwf	100,c	;volatile
  5224                           
  5225                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  5226   0014B2  0E80               	movlw	128
  5227   0014B4  6E65               	movwf	101,c	;volatile
  5228                           
  5229                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  5230   0014B6  0E01               	movlw	1
  5231   0014B8  6E63               	movwf	99,c	;volatile
  5232                           
  5233                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  5234   0014BA  0E00               	movlw	0
  5235   0014BC  6E68               	movwf	104,c	;volatile
  5236                           
  5237                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x3F;
  5238   0014BE  0E3F               	movlw	63
  5239   0014C0  6E67               	movwf	103,c	;volatile
  5240                           
  5241                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  5242   0014C2  0EE7               	movlw	-25
  5243   0014C4  010F               	movlb	15	; () banked
  5244   0014C6  1749               	andwf	73,f,b	;volatile
  5245   0014C8                     
  5246                           ; BSR set to: 15
  5247   0014C8  0012               	return		;funcret
  5248   0014CA                     __end_of_EPWM2_Initialize:
  5249                           	callstack 0
  5250                           
  5251 ;; *************** function _EPWM1_Initialize *****************
  5252 ;; Defined at:
  5253 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;		None
  5256 ;; Auto vars:     Size  Location     Type
  5257 ;;		None
  5258 ;; Return value:  Size  Location     Type
  5259 ;;                  1    wreg      void 
  5260 ;; Registers used:
  5261 ;;		wreg, status,2
  5262 ;; Tracked objects:
  5263 ;;		On entry : 0/0
  5264 ;;		On exit  : 0/0
  5265 ;;		Unchanged: 0/0
  5266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5267 ;;      Params:         0       0       0       0       0       0       0
  5268 ;;      Locals:         0       0       0       0       0       0       0
  5269 ;;      Temps:          0       0       0       0       0       0       0
  5270 ;;      Totals:         0       0       0       0       0       0       0
  5271 ;;Total ram usage:        0 bytes
  5272 ;; Hardware stack levels used: 1
  5273 ;; Hardware stack levels required when called: 4
  5274 ;; This function calls:
  5275 ;;		Nothing
  5276 ;; This function is called by:
  5277 ;;		_SYSTEM_Initialize
  5278 ;; This function uses a non-reentrant model
  5279 ;;
  5280                           
  5281                           	psect	text33
  5282   0014CA                     __ptext33:
  5283                           	callstack 0
  5284   0014CA                     _EPWM1_Initialize:
  5285                           	callstack 25
  5286   0014CA                     
  5287                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  5288   0014CA  0E3C               	movlw	60
  5289   0014CC  6EBD               	movwf	189,c	;volatile
  5290                           
  5291                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5292   0014CE  0E00               	movlw	0
  5293   0014D0  6EB6               	movwf	182,c	;volatile
  5294                           
  5295                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5296   0014D2  0E80               	movlw	128
  5297   0014D4  6EB7               	movwf	183,c	;volatile
  5298                           
  5299                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5300   0014D6  0E01               	movlw	1
  5301   0014D8  6EB9               	movwf	185,c	;volatile
  5302                           
  5303                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5304   0014DA  0E00               	movlw	0
  5305   0014DC  6EBF               	movwf	191,c	;volatile
  5306                           
  5307                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x3F;
  5308   0014DE  0E3F               	movlw	63
  5309   0014E0  6EBE               	movwf	190,c	;volatile
  5310                           
  5311                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5312   0014E2  0EFC               	movlw	-4
  5313   0014E4  010F               	movlb	15	; () banked
  5314   0014E6  1749               	andwf	73,f,b	;volatile
  5315   0014E8                     
  5316                           ; BSR set to: 15
  5317   0014E8  0012               	return		;funcret
  5318   0014EA                     __end_of_EPWM1_Initialize:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _CCP4_Initialize *****************
  5322 ;; Defined at:
  5323 ;;		line 65 in file "mcc_generated_files/ccp4.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5337 ;;      Params:         0       0       0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 5
  5344 ;; This function calls:
  5345 ;;		_CCP4_SetCallBack
  5346 ;; This function is called by:
  5347 ;;		_SYSTEM_Initialize
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text34
  5352   001484                     __ptext34:
  5353                           	callstack 0
  5354   001484                     _CCP4_Initialize:
  5355                           	callstack 24
  5356   001484                     
  5357                           ;mcc_generated_files/ccp4.c: 70:  CCP4CON = 0x05;
  5358   001484  0E05               	movlw	5
  5359   001486  010F               	movlb	15	; () banked
  5360   001488  6F57               	movwf	87,b	;volatile
  5361                           
  5362                           ;mcc_generated_files/ccp4.c: 73:  CCPR4L = 0x00;
  5363   00148A  0E00               	movlw	0
  5364   00148C  6F58               	movwf	88,b	;volatile
  5365                           
  5366                           ;mcc_generated_files/ccp4.c: 76:  CCPR4H = 0x00;
  5367   00148E  0E00               	movlw	0
  5368   001490  6F59               	movwf	89,b	;volatile
  5369   001492                     
  5370                           ; BSR set to: 15
  5371                           ;mcc_generated_files/ccp4.c: 79:     CCP4_SetCallBack(CCP4_DefaultCallBack);
  5372   001492  0ED0               	movlw	low _CCP4_DefaultCallBack
  5373   001494  6E07               	movwf	CCP4_SetCallBack@customCallBack^0,c
  5374   001496  0E15               	movlw	high _CCP4_DefaultCallBack
  5375   001498  6E08               	movwf	(CCP4_SetCallBack@customCallBack+1)^0,c
  5376   00149A  ECDB  F00A         	call	_CCP4_SetCallBack	;wreg free
  5377   00149E                     
  5378                           ;mcc_generated_files/ccp4.c: 82:  CCPTMRS1bits.C4TSEL = 0x0;
  5379   00149E  0EFC               	movlw	-4
  5380   0014A0  010F               	movlb	15	; () banked
  5381   0014A2  1748               	andwf	72,f,b	;volatile
  5382   0014A4                     
  5383                           ; BSR set to: 15
  5384                           ;mcc_generated_files/ccp4.c: 85:     PIR4bits.CCP4IF = 0;
  5385   0014A4  927B               	bcf	123,1,c	;volatile
  5386   0014A6                     
  5387                           ; BSR set to: 15
  5388                           ;mcc_generated_files/ccp4.c: 88:     PIE4bits.CCP4IE = 1;
  5389   0014A6  827A               	bsf	122,1,c	;volatile
  5390   0014A8                     
  5391                           ; BSR set to: 15
  5392   0014A8  0012               	return		;funcret
  5393   0014AA                     __end_of_CCP4_Initialize:
  5394                           	callstack 0
  5395                           
  5396 ;; *************** function _CCP4_SetCallBack *****************
  5397 ;; Defined at:
  5398 ;;		line 106 in file "mcc_generated_files/ccp4.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  customCallBa    2    6[COMRAM] PTR FTN(unsigned short ,
  5401 ;;		 -> CCP4ISR(1), CCP4_DefaultCallBack(1), 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5413 ;;      Params:         2       0       0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0
  5416 ;;      Totals:         2       0       0       0       0       0       0
  5417 ;;Total ram usage:        2 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 4
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_CCP4_Initialize
  5424 ;;		_main
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text35
  5429   0015B6                     __ptext35:
  5430                           	callstack 0
  5431   0015B6                     _CCP4_SetCallBack:
  5432                           	callstack 24
  5433   0015B6                     
  5434                           ;mcc_generated_files/ccp4.c: 107:     CCP4_CallBack = customCallBack;
  5435   0015B6  C007  F0A9         	movff	CCP4_SetCallBack@customCallBack,_CCP4_CallBack
  5436   0015BA  C008  F0AA         	movff	CCP4_SetCallBack@customCallBack+1,_CCP4_CallBack+1
  5437   0015BE  0012               	return		;funcret
  5438   0015C0                     __end_of_CCP4_SetCallBack:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _EUSART1_is_rx_ready *****************
  5442 ;; Defined at:
  5443 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      _Bool 
  5450 ;; Registers used:
  5451 ;;		wreg
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5457 ;;      Params:         0       0       0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0
  5460 ;;      Totals:         0       0       0       0       0       0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used: 1
  5463 ;; Hardware stack levels required when called: 4
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_main
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text36
  5472   001556                     __ptext36:
  5473                           	callstack 0
  5474   001556                     _EUSART1_is_rx_ready:
  5475                           	callstack 26
  5476   001556                     
  5477                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5478   001556  BA9E               	btfsc	158,5,c	;volatile
  5479   001558  EFB0  F00A         	goto	u1351
  5480   00155C  EFB3  F00A         	goto	u1350
  5481   001560                     u1351:
  5482   001560  0E01               	movlw	1
  5483   001562  EFB4  F00A         	goto	u1356
  5484   001566                     u1350:
  5485   001566  0E00               	movlw	0
  5486   001568                     u1356:
  5487   001568  0012               	return		;funcret
  5488   00156A                     __end_of_EUSART1_is_rx_ready:
  5489                           	callstack 0
  5490                           
  5491 ;; *************** function _EUSART1_Read *****************
  5492 ;; Defined at:
  5493 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5494 ;; Parameters:    Size  Location     Type
  5495 ;;		None
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      unsigned char 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5507 ;;      Params:         0       0       0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0
  5510 ;;      Totals:         0       0       0       0       0       0       0
  5511 ;;Total ram usage:        0 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 4
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_main
  5518 ;;		_getch
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text37
  5523   001410                     __ptext37:
  5524                           	callstack 0
  5525   001410                     _EUSART1_Read:
  5526                           	callstack 26
  5527   001410                     l274:
  5528                           
  5529                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5530   001410  AA9E               	btfss	158,5,c	;volatile
  5531   001412  EF0D  F00A         	goto	u1361
  5532   001416  EF0F  F00A         	goto	u1360
  5533   00141A                     u1361:
  5534   00141A  EF08  F00A         	goto	l274
  5535   00141E                     u1360:
  5536   00141E                     
  5537                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5538   00141E  0E00               	movlw	0
  5539   001420  6E57               	movwf	_eusart1RxLastError^0,c	;volatile
  5540   001422                     
  5541                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5542   001422  A2AB               	btfss	171,1,c	;volatile
  5543   001424  EF16  F00A         	goto	u1371
  5544   001428  EF18  F00A         	goto	u1370
  5545   00142C                     u1371:
  5546   00142C  EF1A  F00A         	goto	l2582
  5547   001430                     u1370:
  5548   001430                     
  5549                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5550   001430  98AB               	bcf	171,4,c	;volatile
  5551                           
  5552                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5553   001432  88AB               	bsf	171,4,c	;volatile
  5554   001434                     l2582:
  5555                           
  5556                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5557   001434  50AE               	movf	174,w,c	;volatile
  5558   001436  0012               	return		;funcret
  5559   001438                     __end_of_EUSART1_Read:
  5560                           	callstack 0
  5561                           
  5562 ;; *************** function _EPWM2_LoadDutyValue *****************
  5563 ;; Defined at:
  5564 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  dutyValue       2    6[COMRAM] unsigned short 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5578 ;;      Params:         2       0       0       0       0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0
  5580 ;;      Temps:          2       0       0       0       0       0       0
  5581 ;;      Totals:         4       0       0       0       0       0       0
  5582 ;;Total ram usage:        4 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; Hardware stack levels required when called: 4
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_main
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text38
  5593   0012D8                     __ptext38:
  5594                           	callstack 0
  5595   0012D8                     _EPWM2_LoadDutyValue:
  5596                           	callstack 26
  5597   0012D8                     
  5598                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  5599   0012D8  C007  F009         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  5600   0012DC  C008  F00A         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  5601   0012E0  90D8               	bcf	status,0,c
  5602   0012E2  320A               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  5603   0012E4  3209               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  5604   0012E6  90D8               	bcf	status,0,c
  5605   0012E8  320A               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  5606   0012EA  3209               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  5607   0012EC  5009               	movf	??_EPWM2_LoadDutyValue^0,w,c
  5608   0012EE  6E67               	movwf	103,c	;volatile
  5609                           
  5610                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5611   0012F0  C007  F009         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  5612   0012F4  0E03               	movlw	3
  5613   0012F6  1609               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  5614   0012F8  3A09               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  5615   0012FA  0EF0               	movlw	240
  5616   0012FC  1609               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  5617   0012FE  5066               	movf	102,w,c	;volatile
  5618   001300  0BCF               	andlw	207
  5619   001302  1009               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  5620   001304  6E66               	movwf	102,c	;volatile
  5621   001306  0012               	return		;funcret
  5622   001308                     __end_of_EPWM2_LoadDutyValue:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _EPWM1_LoadDutyValue *****************
  5626 ;; Defined at:
  5627 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  dutyValue       2    6[COMRAM] unsigned short 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5641 ;;      Params:         2       0       0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0
  5643 ;;      Temps:          2       0       0       0       0       0       0
  5644 ;;      Totals:         4       0       0       0       0       0       0
  5645 ;;Total ram usage:        4 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 4
  5648 ;; This function calls:
  5649 ;;		Nothing
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text39
  5656   001308                     __ptext39:
  5657                           	callstack 0
  5658   001308                     _EPWM1_LoadDutyValue:
  5659                           	callstack 26
  5660   001308                     
  5661                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5662   001308  C007  F009         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5663   00130C  C008  F00A         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5664   001310  90D8               	bcf	status,0,c
  5665   001312  320A               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5666   001314  3209               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5667   001316  90D8               	bcf	status,0,c
  5668   001318  320A               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5669   00131A  3209               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5670   00131C  5009               	movf	??_EPWM1_LoadDutyValue^0,w,c
  5671   00131E  6EBE               	movwf	190,c	;volatile
  5672                           
  5673                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5674   001320  C007  F009         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5675   001324  0E03               	movlw	3
  5676   001326  1609               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5677   001328  3A09               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  5678   00132A  0EF0               	movlw	240
  5679   00132C  1609               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5680   00132E  50BD               	movf	189,w,c	;volatile
  5681   001330  0BCF               	andlw	207
  5682   001332  1009               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  5683   001334  6EBD               	movwf	189,c	;volatile
  5684   001336  0012               	return		;funcret
  5685   001338                     __end_of_EPWM1_LoadDutyValue:
  5686                           	callstack 0
  5687                           
  5688 ;; *************** function _INTERRUPT_InterruptManager *****************
  5689 ;; Defined at:
  5690 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5704 ;;      Params:         0       0       0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0
  5706 ;;      Temps:          2       0       0       0       0       0       0
  5707 ;;      Totals:         2       0       0       0       0       0       0
  5708 ;;Total ram usage:        2 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 3
  5711 ;; This function calls:
  5712 ;;		_CCP4_CaptureISR
  5713 ;;		_TMR0_ISR
  5714 ;; This function is called by:
  5715 ;;		Interrupt level 2
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	intcode
  5720   000008                     __pintcode:
  5721                           	callstack 0
  5722   000008                     _INTERRUPT_InterruptManager:
  5723                           	callstack 18
  5724                           
  5725                           ;incstack = 0
  5726   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5727   00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  5728   00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5729   000012                     
  5730                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5731   000012  AAF2               	btfss	242,5,c	;volatile
  5732   000014  EF0E  F000         	goto	i2u139_41
  5733   000018  EF10  F000         	goto	i2u139_40
  5734   00001C                     i2u139_41:
  5735   00001C  EF1B  F000         	goto	i2l85
  5736   000020                     i2u139_40:
  5737   000020  A4F2               	btfss	242,2,c	;volatile
  5738   000022  EF15  F000         	goto	i2u140_41
  5739   000026  EF17  F000         	goto	i2u140_40
  5740   00002A                     i2u140_41:
  5741   00002A  EF1B  F000         	goto	i2l85
  5742   00002E                     i2u140_40:
  5743   00002E                     
  5744                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5745   00002E  EC1A  F009         	call	_TMR0_ISR	;wreg free
  5746                           
  5747                           ;mcc_generated_files/interrupt_manager.c: 64:     }
  5748   000032  EF34  F000         	goto	i2l91
  5749   000036                     i2l85:
  5750   000036  ACF2               	btfss	242,6,c	;volatile
  5751   000038  EF20  F000         	goto	i2u141_41
  5752   00003C  EF22  F000         	goto	i2u141_40
  5753   000040                     i2u141_41:
  5754   000040  EF34  F000         	goto	i2l91
  5755   000044                     i2u141_40:
  5756   000044                     
  5757                           ;mcc_generated_files/interrupt_manager.c: 66:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 67:         if(PIE4bits.CCP4IE == 1 && PIR4bits.CCP4IF == 1)
  5758   000044  A27A               	btfss	122,1,c	;volatile
  5759   000046  EF27  F000         	goto	i2u142_41
  5760   00004A  EF29  F000         	goto	i2u142_40
  5761   00004E                     i2u142_41:
  5762   00004E  EF34  F000         	goto	i2l90
  5763   000052                     i2u142_40:
  5764   000052  A27B               	btfss	123,1,c	;volatile
  5765   000054  EF2E  F000         	goto	i2u143_41
  5766   000058  EF30  F000         	goto	i2u143_40
  5767   00005C                     i2u143_41:
  5768   00005C  EF34  F000         	goto	i2l90
  5769   000060                     i2u143_40:
  5770   000060                     
  5771                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             CCP4_CaptureISR();
  5772   000060  EC9C  F009         	call	_CCP4_CaptureISR	;wreg free
  5773                           
  5774                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  5775   000064  EF34  F000         	goto	i2l91
  5776   000068                     i2l90:
  5777   000068                     i2l91:
  5778   000068  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5779   00006C  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5780   000070  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5781   000072  0011               	retfie		f
  5782   000074                     __end_of_INTERRUPT_InterruptManager:
  5783                           	callstack 0
  5784                           
  5785 ;; *************** function _TMR0_ISR *****************
  5786 ;; Defined at:
  5787 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;		None
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;		None
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  1    wreg      void 
  5794 ;; Registers used:
  5795 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5801 ;;      Params:         0       0       0       0       0       0       0
  5802 ;;      Locals:         0       0       0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0
  5804 ;;      Totals:         0       0       0       0       0       0       0
  5805 ;;Total ram usage:        0 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 2
  5808 ;; This function calls:
  5809 ;;		Absolute function
  5810 ;;		_TMR0ISR
  5811 ;;		_TMR0_DefaultInterruptHandler
  5812 ;; This function is called by:
  5813 ;;		_INTERRUPT_InterruptManager
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text41
  5818   001234                     __ptext41:
  5819                           	callstack 0
  5820   001234                     _TMR0_ISR:
  5821                           	callstack 18
  5822   001234                     
  5823                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5824   001234  94F2               	bcf	242,2,c	;volatile
  5825   001236                     
  5826                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5827   001236  5055               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5828   001238  6ED7               	movwf	215,c	;volatile
  5829   00123A                     
  5830                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5831   00123A  C054  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5832   00123E                     
  5833                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5834   00123E  0100               	movlb	0	; () banked
  5835   001240  51A5               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5836   001242  11A6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5837   001244  B4D8               	btfsc	status,2,c
  5838   001246  EF27  F009         	goto	i2u132_41
  5839   00124A  EF29  F009         	goto	i2u132_40
  5840   00124E                     i2u132_41:
  5841   00124E  EF36  F009         	goto	i2l178
  5842   001252                     i2u132_40:
  5843   001252                     
  5844                           ; BSR set to: 0
  5845                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5846   001252  D802               	call	i2u133_48
  5847   001254  EF36  F009         	goto	i2u133_49
  5848   001258                     i2u133_48:
  5849   001258  0005               	push	
  5850   00125A  6EFA               	movwf	pclath,c
  5851   00125C  51A5               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5852   00125E  6EFD               	movwf	tosl,c
  5853   001260  51A6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5854   001262  6EFE               	movwf	tosh,c
  5855   001264  50F8               	movf	tblptru,w,c
  5856   001266  6EFF               	movwf	tosu,c
  5857   001268  50FA               	movf	pclath,w,c
  5858   00126A  0012               	return		;indir
  5859   00126C                     i2u133_49:
  5860   00126C                     i2l178:
  5861   00126C  0012               	return		;funcret
  5862   00126E                     __end_of_TMR0_ISR:
  5863                           	callstack 0
  5864                           
  5865 ;; *************** function _TMR0ISR *****************
  5866 ;; Defined at:
  5867 ;;		line 225 in file "main.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;  i               2    0        unsigned short 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5881 ;;      Params:         0       0       0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 1
  5888 ;; This function calls:
  5889 ;;		_microSecondDelay
  5890 ;;		i2_TMR0_WriteTimer
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;;		_TMR0_ISR
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text42
  5898   0014EA                     __ptext42:
  5899                           	callstack 0
  5900   0014EA                     _TMR0ISR:
  5901                           	callstack 18
  5902   0014EA  888B               	bsf	139,4,c	;volatile
  5903   0014EC                     
  5904                           ;main.c: 230:     microSecondDelay(25);
  5905   0014EC  0E00               	movlw	0
  5906   0014EE  6E02               	movwf	(microSecondDelay@us+1)^0,c
  5907   0014F0  0E19               	movlw	25
  5908   0014F2  6E01               	movwf	microSecondDelay@us^0,c
  5909   0014F4  EC52  F009         	call	_microSecondDelay	;wreg free
  5910   0014F8  988B               	bcf	139,4,c	;volatile
  5911   0014FA                     
  5912                           ;main.c: 233:     TMR0_WriteTimer(0x10000 - 50000);
  5913   0014FA  0E3C               	movlw	60
  5914   0014FC  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  5915   0014FE  0EB0               	movlw	176
  5916   001500  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  5917   001502  ECE0  F00A         	call	i2_TMR0_WriteTimer	;wreg free
  5918   001506  0012               	return		;funcret
  5919   001508                     __end_of_TMR0ISR:
  5920                           	callstack 0
  5921                           
  5922 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5923 ;; Defined at:
  5924 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;		None
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;		None
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		None
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5938 ;;      Params:         0       0       0       0       0       0       0
  5939 ;;      Locals:         0       0       0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0
  5941 ;;      Totals:         0       0       0       0       0       0       0
  5942 ;;Total ram usage:        0 bytes
  5943 ;; Hardware stack levels used: 1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_TMR0_Initialize
  5948 ;;		_TMR0_ISR
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text43
  5953   0015CE                     __ptext43:
  5954                           	callstack 0
  5955   0015CE                     _TMR0_DefaultInterruptHandler:
  5956                           	callstack 19
  5957   0015CE  0012               	return		;funcret
  5958   0015D0                     __end_of_TMR0_DefaultInterruptHandler:
  5959                           	callstack 0
  5960                           
  5961 ;; *************** function i2_TMR0_WriteTimer *****************
  5962 ;; Defined at:
  5963 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  timerVal        2    0[COMRAM] unsigned short 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5977 ;;      Params:         2       0       0       0       0       0       0
  5978 ;;      Locals:         0       0       0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0
  5980 ;;      Totals:         2       0       0       0       0       0       0
  5981 ;;Total ram usage:        2 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_TMR0ISR
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           	psect	text44
  5991   0015C0                     __ptext44:
  5992                           	callstack 0
  5993   0015C0                     i2_TMR0_WriteTimer:
  5994                           	callstack 18
  5995   0015C0                     
  5996                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5997   0015C0  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  5998   0015C2  6ED7               	movwf	215,c	;volatile
  5999   0015C4                     
  6000                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6001   0015C4  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  6002   0015C8  0012               	return		;funcret
  6003   0015CA                     __end_ofi2_TMR0_WriteTimer:
  6004                           	callstack 0
  6005                           
  6006 ;; *************** function _microSecondDelay *****************
  6007 ;; Defined at:
  6008 ;;		line 282 in file "main.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  us              2    0[COMRAM] unsigned short 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  i               2    2[COMRAM] unsigned short 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2, status,0
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6022 ;;      Params:         2       0       0       0       0       0       0
  6023 ;;      Locals:         2       0       0       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0       0       0
  6025 ;;      Totals:         4       0       0       0       0       0       0
  6026 ;;Total ram usage:        4 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; This function calls:
  6029 ;;		Nothing
  6030 ;; This function is called by:
  6031 ;;		_TMR0ISR
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text45
  6036   0012A4                     __ptext45:
  6037                           	callstack 0
  6038   0012A4                     _microSecondDelay:
  6039                           	callstack 18
  6040   0012A4                     
  6041                           ;main.c: 282: void microSecondDelay(uint16_t us);main.c: 283: {;main.c: 285:     uint16_
      +                          t i;;main.c: 287:     for (i = 0; i < us; i++)
  6042   0012A4  0E00               	movlw	0
  6043   0012A6  6E04               	movwf	(microSecondDelay@i+1)^0,c
  6044   0012A8  0E00               	movlw	0
  6045   0012AA  6E03               	movwf	microSecondDelay@i^0,c
  6046   0012AC  EF60  F009         	goto	i2l2348
  6047   0012B0                     i2l497:
  6048   0012B0  F000               	nop		;# 
  6049   0012B2  F000               	nop		;# 
  6050   0012B4  F000               	nop		;# 
  6051   0012B6  F000               	nop		;# 
  6052   0012B8  F000               	nop		;# 
  6053   0012BA  F000               	nop		;# 
  6054   0012BC                     
  6055                           ;main.c: 296:     }
  6056   0012BC  4A03               	infsnz	microSecondDelay@i^0,f,c
  6057   0012BE  2A04               	incf	(microSecondDelay@i+1)^0,f,c
  6058   0012C0                     i2l2348:
  6059   0012C0  5001               	movf	microSecondDelay@us^0,w,c
  6060   0012C2  5C03               	subwf	microSecondDelay@i^0,w,c
  6061   0012C4  5002               	movf	(microSecondDelay@us+1)^0,w,c
  6062   0012C6  5804               	subwfb	(microSecondDelay@i+1)^0,w,c
  6063   0012C8  A0D8               	btfss	status,0,c
  6064   0012CA  EF69  F009         	goto	i2u118_41
  6065   0012CE  EF6B  F009         	goto	i2u118_40
  6066   0012D2                     i2u118_41:
  6067   0012D2  EF58  F009         	goto	i2l497
  6068   0012D6                     i2u118_40:
  6069   0012D6  0012               	return		;funcret
  6070   0012D8                     __end_of_microSecondDelay:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _CCP4_CaptureISR *****************
  6074 ;; Defined at:
  6075 ;;		line 91 in file "mcc_generated_files/ccp4.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  module          2    2[COMRAM] struct CCPR4Reg_tag
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6089 ;;      Params:         0       0       0       0       0       0       0
  6090 ;;      Locals:         2       0       0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0
  6092 ;;      Totals:         2       0       0       0       0       0       0
  6093 ;;Total ram usage:        2 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 1
  6096 ;; This function calls:
  6097 ;;		Absolute function
  6098 ;;		_CCP4ISR
  6099 ;;		_CCP4_DefaultCallBack
  6100 ;; This function is called by:
  6101 ;;		_INTERRUPT_InterruptManager
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text46
  6106   001338                     __ptext46:
  6107                           	callstack 0
  6108   001338                     _CCP4_CaptureISR:
  6109                           	callstack 19
  6110   001338                     
  6111                           ;mcc_generated_files/ccp4.c: 93:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 96:     PIR4bits.CCP4IF = 0;
  6112   001338  927B               	bcf	123,1,c	;volatile
  6113                           
  6114                           ;mcc_generated_files/ccp4.c: 99:     module.ccpr4l = CCPR4L;
  6115   00133A  CF58 F003          	movff	3928,CCP4_CaptureISR@module	;volatile
  6116                           
  6117                           ;mcc_generated_files/ccp4.c: 100:     module.ccpr4h = CCPR4H;
  6118   00133E  CF59 F004          	movff	3929,CCP4_CaptureISR@module+1	;volatile
  6119   001342                     
  6120                           ;mcc_generated_files/ccp4.c: 103:     CCP4_CallBack(module.ccpr4_16Bit);
  6121   001342  C003  F001         	movff	CCP4_CaptureISR@module,CCP4ISR@capture
  6122   001346  C004  F002         	movff	CCP4_CaptureISR@module+1,CCP4ISR@capture+1
  6123   00134A  D802               	call	i2u131_48
  6124   00134C  EFB3  F009         	goto	i2u131_49
  6125   001350                     i2u131_48:
  6126   001350  0005               	push	
  6127   001352  0100               	movlb	0	; () banked
  6128   001354  6EFA               	movwf	pclath,c
  6129   001356  51A9               	movf	_CCP4_CallBack& (0+255),w,b
  6130   001358  6EFD               	movwf	tosl,c
  6131   00135A  51AA               	movf	(_CCP4_CallBack+1)& (0+255),w,b
  6132   00135C  6EFE               	movwf	tosh,c
  6133   00135E  50F8               	movf	tblptru,w,c
  6134   001360  6EFF               	movwf	tosu,c
  6135   001362  50FA               	movf	pclath,w,c
  6136   001364  0012               	return		;indir
  6137   001366                     i2u131_49:
  6138   001366  0012               	return		;funcret
  6139   001368                     __end_of_CCP4_CaptureISR:
  6140                           	callstack 0
  6141                           
  6142 ;; *************** function _CCP4ISR *****************
  6143 ;; Defined at:
  6144 ;;		line 235 in file "main.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  capture         2    0[COMRAM] unsigned short 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1    wreg      void 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/0
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6158 ;;      Params:         2       0       0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0
  6161 ;;      Totals:         2       0       0       0       0       0       0
  6162 ;;Total ram usage:        2 bytes
  6163 ;; Hardware stack levels used: 1
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_main
  6168 ;;		_CCP4_CaptureISR
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text47
  6173   001078                     __ptext47:
  6174                           	callstack 0
  6175   001078                     _CCP4ISR:
  6176                           	callstack 19
  6177   001078                     
  6178                           ;main.c: 235: void CCP4ISR(uint16_t capture);main.c: 236: {;main.c: 237:     static uint
      +                          8_t direction = 0;;main.c: 239:     if(CCP4CONbits.CCP4M == 0b0101)
  6179   001078  010F               	movlb	15	; () banked
  6180   00107A  5157               	movf	87,w,b	;volatile
  6181   00107C  0B0F               	andlw	15
  6182   00107E  0A05               	xorlw	5
  6183   001080  A4D8               	btfss	status,2,c
  6184   001082  EF45  F008         	goto	i2u126_41
  6185   001086  EF47  F008         	goto	i2u126_40
  6186   00108A                     i2u126_41:
  6187   00108A  EF51  F008         	goto	i2l2486
  6188   00108E                     i2u126_40:
  6189   00108E                     
  6190                           ; BSR set to: 15
  6191                           ;main.c: 240:     {;main.c: 242:         rise = capture;
  6192   00108E  C001  F09D         	movff	CCP4ISR@capture,_rise
  6193   001092  C002  F09E         	movff	CCP4ISR@capture+1,_rise+1
  6194   001096                     
  6195                           ; BSR set to: 15
  6196                           ;main.c: 243:         CCP4CONbits.CCP4M = 0b0100;
  6197   001096  5157               	movf	87,w,b	;volatile
  6198   001098  0BF0               	andlw	-16
  6199   00109A  0904               	iorlw	4
  6200   00109C  6F57               	movwf	87,b	;volatile
  6201                           
  6202                           ;main.c: 244:     }
  6203   00109E  EF6C  F008         	goto	i2l2496
  6204   0010A2                     i2l2486:
  6205                           
  6206                           ; BSR set to: 15
  6207   0010A2  5157               	movf	87,w,b	;volatile
  6208   0010A4  0B0F               	andlw	15
  6209   0010A6  0A04               	xorlw	4
  6210   0010A8  A4D8               	btfss	status,2,c
  6211   0010AA  EF59  F008         	goto	i2u127_41
  6212   0010AE  EF5B  F008         	goto	i2u127_40
  6213   0010B2                     i2u127_41:
  6214   0010B2  EF6C  F008         	goto	i2l2496
  6215   0010B6                     i2u127_40:
  6216   0010B6                     
  6217                           ; BSR set to: 15
  6218                           ;main.c: 246:     {;main.c: 248:         fall = capture;
  6219   0010B6  C001  F09B         	movff	CCP4ISR@capture,_fall
  6220   0010BA  C002  F09C         	movff	CCP4ISR@capture+1,_fall+1
  6221   0010BE                     
  6222                           ; BSR set to: 15
  6223                           ;main.c: 249:         CCP4CONbits.CCP4M = 0b0101;
  6224   0010BE  5157               	movf	87,w,b	;volatile
  6225   0010C0  0BF0               	andlw	-16
  6226   0010C2  0905               	iorlw	5
  6227   0010C4  6F57               	movwf	87,b	;volatile
  6228   0010C6                     
  6229                           ; BSR set to: 15
  6230                           ;main.c: 251:         echo = fall - rise;
  6231   0010C6  0100               	movlb	0	; () banked
  6232   0010C8  519D               	movf	_rise& (0+255),w,b
  6233   0010CA  5D9B               	subwf	_fall& (0+255),w,b
  6234   0010CC  6F99               	movwf	_echo& (0+255),b
  6235   0010CE  519E               	movf	(_rise+1)& (0+255),w,b
  6236   0010D0  599C               	subwfb	(_fall+1)& (0+255),w,b
  6237   0010D2  6F9A               	movwf	(_echo+1)& (0+255),b
  6238   0010D4                     
  6239                           ; BSR set to: 0
  6240                           ;main.c: 252:         newEcho = 1;
  6241   0010D4  0E01               	movlw	1
  6242   0010D6  6FAC               	movwf	_newEcho& (0+255),b
  6243   0010D8                     i2l2496:
  6244                           
  6245                           ;main.c: 254:     PIR4bits.CCP4IF = 0;
  6246   0010D8  927B               	bcf	123,1,c	;volatile
  6247   0010DA  0012               	return		;funcret
  6248   0010DC                     __end_of_CCP4ISR:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _CCP4_DefaultCallBack *****************
  6252 ;; Defined at:
  6253 ;;		line 60 in file "mcc_generated_files/ccp4.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  capturedValu    2    0[COMRAM] unsigned short 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		None
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6267 ;;      Params:         2       0       0       0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0
  6270 ;;      Totals:         2       0       0       0       0       0       0
  6271 ;;Total ram usage:        2 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_CCP4_Initialize
  6277 ;;		_CCP4_CaptureISR
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text48
  6282   0015D0                     __ptext48:
  6283                           	callstack 0
  6284   0015D0                     _CCP4_DefaultCallBack:
  6285                           	callstack 19
  6286   0015D0  0012               	return		;funcret
  6287   0015D2                     __end_of_CCP4_DefaultCallBack:
  6288                           	callstack 0
  6289                           
  6290                           	psect	text49
  6291   000000                     __ptext49:
  6292                           	callstack 0
  6293   000000                     
  6294                           	psect	rparam
  6295   000000                     
  6296                           	psect	temp
  6297   000058                     btemp:
  6298                           	callstack 0
  6299   000058                     	ds	1
  6300   000000                     int$flags	set	btemp
  6301   000000                     wtemp8	set	btemp+1
  6302   000000                     ttemp5	set	btemp+1
  6303   000000                     ttemp6	set	btemp+4
  6304   000000                     ttemp7	set	btemp+8
  6305                           
  6306                           	psect	idloc
  6307                           
  6308                           ;Config register IDLOC0 @ 0x200000
  6309                           ;	unspecified, using default values
  6310   200000                     	org	2097152
  6311   200000  FF                 	db	255
  6312                           
  6313                           ;Config register IDLOC1 @ 0x200001
  6314                           ;	unspecified, using default values
  6315   200001                     	org	2097153
  6316   200001  FF                 	db	255
  6317                           
  6318                           ;Config register IDLOC2 @ 0x200002
  6319                           ;	unspecified, using default values
  6320   200002                     	org	2097154
  6321   200002  FF                 	db	255
  6322                           
  6323                           ;Config register IDLOC3 @ 0x200003
  6324                           ;	unspecified, using default values
  6325   200003                     	org	2097155
  6326   200003  FF                 	db	255
  6327                           
  6328                           ;Config register IDLOC4 @ 0x200004
  6329                           ;	unspecified, using default values
  6330   200004                     	org	2097156
  6331   200004  FF                 	db	255
  6332                           
  6333                           ;Config register IDLOC5 @ 0x200005
  6334                           ;	unspecified, using default values
  6335   200005                     	org	2097157
  6336   200005  FF                 	db	255
  6337                           
  6338                           ;Config register IDLOC6 @ 0x200006
  6339                           ;	unspecified, using default values
  6340   200006                     	org	2097158
  6341   200006  FF                 	db	255
  6342                           
  6343                           ;Config register IDLOC7 @ 0x200007
  6344                           ;	unspecified, using default values
  6345   200007                     	org	2097159
  6346   200007  FF                 	db	255
  6347                           
  6348                           	psect	config
  6349                           
  6350                           ; Padding undefined space
  6351   300000                     	org	3145728
  6352   300000  FF                 	db	255
  6353                           
  6354                           ;Config register CONFIG1H @ 0x300001
  6355                           ;	Oscillator Selection bits
  6356                           ;	FOSC = INTIO67, Internal oscillator block
  6357                           ;	4X PLL Enable
  6358                           ;	PLLCFG = OFF, Oscillator used directly
  6359                           ;	Primary clock enable bit
  6360                           ;	PRICLKEN = ON, Primary clock enabled
  6361                           ;	Fail-Safe Clock Monitor Enable bit
  6362                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6363                           ;	Internal/External Oscillator Switchover bit
  6364                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6365   300001                     	org	3145729
  6366   300001  28                 	db	40
  6367                           
  6368                           ;Config register CONFIG2L @ 0x300002
  6369                           ;	Power-up Timer Enable bit
  6370                           ;	PWRTEN = OFF, Power up timer disabled
  6371                           ;	Brown-out Reset Enable bits
  6372                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6373                           ;	Brown Out Reset Voltage bits
  6374                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6375   300002                     	org	3145730
  6376   300002  1F                 	db	31
  6377                           
  6378                           ;Config register CONFIG2H @ 0x300003
  6379                           ;	Watchdog Timer Enable bits
  6380                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6381                           ;	Watchdog Timer Postscale Select bits
  6382                           ;	WDTPS = 32768, 1:32768
  6383   300003                     	org	3145731
  6384   300003  3C                 	db	60
  6385                           
  6386                           ; Padding undefined space
  6387   300004                     	org	3145732
  6388   300004  FF                 	db	255
  6389                           
  6390                           ;Config register CONFIG3H @ 0x300005
  6391                           ;	CCP2 MUX bit
  6392                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6393                           ;	PORTB A/D Enable bit
  6394                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6395                           ;	P3A/CCP3 Mux bit
  6396                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6397                           ;	HFINTOSC Fast Start-up
  6398                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6399                           ;	Timer3 Clock input mux bit
  6400                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6401                           ;	ECCP2 B output mux bit
  6402                           ;	P2BMX = PORTB5, P2B is on RB5
  6403                           ;	MCLR Pin Enable bit
  6404                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6405   300005                     	org	3145733
  6406   300005  BF                 	db	191
  6407                           
  6408                           ;Config register CONFIG4L @ 0x300006
  6409                           ;	Stack Full/Underflow Reset Enable bit
  6410                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6411                           ;	Single-Supply ICSP Enable bit
  6412                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6413                           ;	Extended Instruction Set Enable bit
  6414                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6415                           ;	Background Debug
  6416                           ;	DEBUG = OFF, Disabled
  6417   300006                     	org	3145734
  6418   300006  85                 	db	133
  6419                           
  6420                           ; Padding undefined space
  6421   300007                     	org	3145735
  6422   300007  FF                 	db	255
  6423                           
  6424                           ;Config register CONFIG5L @ 0x300008
  6425                           ;	Code Protection Block 0
  6426                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6427                           ;	Code Protection Block 1
  6428                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6429                           ;	Code Protection Block 2
  6430                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6431                           ;	Code Protection Block 3
  6432                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6433   300008                     	org	3145736
  6434   300008  0F                 	db	15
  6435                           
  6436                           ;Config register CONFIG5H @ 0x300009
  6437                           ;	Boot Block Code Protection bit
  6438                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6439                           ;	Data EEPROM Code Protection bit
  6440                           ;	CPD = OFF, Data EEPROM not code-protected
  6441   300009                     	org	3145737
  6442   300009  C0                 	db	192
  6443                           
  6444                           ;Config register CONFIG6L @ 0x30000A
  6445                           ;	Write Protection Block 0
  6446                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6447                           ;	Write Protection Block 1
  6448                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6449                           ;	Write Protection Block 2
  6450                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6451                           ;	Write Protection Block 3
  6452                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6453   30000A                     	org	3145738
  6454   30000A  0F                 	db	15
  6455                           
  6456                           ;Config register CONFIG6H @ 0x30000B
  6457                           ;	Configuration Register Write Protection bit
  6458                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6459                           ;	Boot Block Write Protection bit
  6460                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6461                           ;	Data EEPROM Write Protection bit
  6462                           ;	WRTD = OFF, Data EEPROM not write-protected
  6463   30000B                     	org	3145739
  6464   30000B  E0                 	db	224
  6465                           
  6466                           ;Config register CONFIG7L @ 0x30000C
  6467                           ;	Table Read Protection Block 0
  6468                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6469                           ;	Table Read Protection Block 1
  6470                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6471                           ;	Table Read Protection Block 2
  6472                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6473                           ;	Table Read Protection Block 3
  6474                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6475   30000C                     	org	3145740
  6476   30000C  0F                 	db	15
  6477                           
  6478                           ;Config register CONFIG7H @ 0x30000D
  6479                           ;	Boot Block Table Read Protection bit
  6480                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6481   30000D                     	org	3145741
  6482   30000D  40                 	db	64
  6483                           tosu	equ	0xFFF
  6484                           tosh	equ	0xFFE
  6485                           tosl	equ	0xFFD
  6486                           stkptr	equ	0xFFC
  6487                           pclatu	equ	0xFFB
  6488                           pclath	equ	0xFFA
  6489                           pcl	equ	0xFF9
  6490                           tblptru	equ	0xFF8
  6491                           tblptrh	equ	0xFF7
  6492                           tblptrl	equ	0xFF6
  6493                           tablat	equ	0xFF5
  6494                           prodh	equ	0xFF4
  6495                           prodl	equ	0xFF3
  6496                           indf0	equ	0xFEF
  6497                           postinc0	equ	0xFEE
  6498                           postdec0	equ	0xFED
  6499                           preinc0	equ	0xFEC
  6500                           plusw0	equ	0xFEB
  6501                           fsr0h	equ	0xFEA
  6502                           fsr0l	equ	0xFE9
  6503                           wreg	equ	0xFE8
  6504                           indf1	equ	0xFE7
  6505                           postinc1	equ	0xFE6
  6506                           postdec1	equ	0xFE5
  6507                           preinc1	equ	0xFE4
  6508                           plusw1	equ	0xFE3
  6509                           fsr1h	equ	0xFE2
  6510                           fsr1l	equ	0xFE1
  6511                           bsr	equ	0xFE0
  6512                           indf2	equ	0xFDF
  6513                           postinc2	equ	0xFDE
  6514                           postdec2	equ	0xFDD
  6515                           preinc2	equ	0xFDC
  6516                           plusw2	equ	0xFDB
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8

Data Sizes:
    Strings     528
    Constant    0
    Data        0
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      87
    BANK0           160     55     109
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1712$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1712$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_39(CODE[5]), STR_38(CODE[17]), STR_37(CODE[3]), STR_36(CODE[22]), 
		 -> STR_35(CODE[24]), STR_34(CODE[3]), STR_33(CODE[5]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[11]), STR_28(CODE[3]), 
		 -> STR_27(CODE[5]), STR_26(CODE[24]), STR_25(CODE[3]), STR_24(CODE[5]), 
		 -> STR_23(CODE[24]), STR_22(CODE[3]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[33]), STR_18(CODE[32]), STR_17(CODE[32]), STR_16(CODE[21]), 
		 -> STR_15(CODE[30]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[33]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[53]), STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), 
		 -> STR_3(CODE[26]), STR_2(CODE[20]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_39(CODE[5]), STR_38(CODE[17]), STR_37(CODE[3]), STR_36(CODE[22]), 
		 -> STR_35(CODE[24]), STR_34(CODE[3]), STR_33(CODE[5]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[11]), STR_28(CODE[3]), 
		 -> STR_27(CODE[5]), STR_26(CODE[24]), STR_25(CODE[3]), STR_24(CODE[5]), 
		 -> STR_23(CODE[24]), STR_22(CODE[3]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[33]), STR_18(CODE[32]), STR_17(CODE[32]), STR_16(CODE[21]), 
		 -> STR_15(CODE[30]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[33]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[53]), STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), 
		 -> STR_3(CODE[26]), STR_2(CODE[20]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_39(CODE[5]), STR_38(CODE[17]), STR_37(CODE[3]), STR_36(CODE[22]), 
		 -> STR_35(CODE[24]), STR_34(CODE[3]), STR_33(CODE[5]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[11]), STR_28(CODE[3]), 
		 -> STR_27(CODE[5]), STR_26(CODE[24]), STR_25(CODE[3]), STR_24(CODE[5]), 
		 -> STR_23(CODE[24]), STR_22(CODE[3]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[33]), STR_18(CODE[32]), STR_17(CODE[32]), STR_16(CODE[21]), 
		 -> STR_15(CODE[30]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[33]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[53]), STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), 
		 -> STR_3(CODE[26]), STR_2(CODE[20]), STR_1(CODE[15]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 57
		 -> STR_39(CODE[5]), STR_38(CODE[17]), STR_37(CODE[3]), STR_36(CODE[22]), 
		 -> STR_35(CODE[24]), STR_34(CODE[3]), STR_33(CODE[5]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[11]), STR_28(CODE[3]), 
		 -> STR_27(CODE[5]), STR_26(CODE[24]), STR_25(CODE[3]), STR_24(CODE[5]), 
		 -> STR_23(CODE[24]), STR_22(CODE[3]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[33]), STR_18(CODE[32]), STR_17(CODE[32]), STR_16(CODE[21]), 
		 -> STR_15(CODE[30]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[33]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[53]), STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), 
		 -> STR_3(CODE[26]), STR_2(CODE[20]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1747$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_39(CODE[5]), STR_38(CODE[17]), STR_37(CODE[3]), STR_36(CODE[22]), 
		 -> STR_35(CODE[24]), STR_34(CODE[3]), STR_33(CODE[5]), STR_32(CODE[9]), 
		 -> STR_31(CODE[3]), STR_30(CODE[5]), STR_29(CODE[11]), STR_28(CODE[3]), 
		 -> STR_27(CODE[5]), STR_26(CODE[24]), STR_25(CODE[3]), STR_24(CODE[5]), 
		 -> STR_23(CODE[24]), STR_22(CODE[3]), STR_21(CODE[2]), STR_20(CODE[5]), 
		 -> STR_19(CODE[33]), STR_18(CODE[32]), STR_17(CODE[32]), STR_16(CODE[21]), 
		 -> STR_15(CODE[30]), STR_14(CODE[24]), STR_13(CODE[21]), STR_12(CODE[7]), 
		 -> STR_11(CODE[15]), STR_10(CODE[33]), STR_9(CODE[5]), STR_8(CODE[5]), 
		 -> STR_7(CODE[53]), STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), 
		 -> STR_3(CODE[26]), STR_2(CODE[20]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    CCP4_SetCallBack@customCallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4ISR(), CCP4_DefaultCallBack(), 

    CCP4_CallBack	PTR FTN(unsigned short ,)void  size(2) Largest target is 1
		 -> CCP4ISR(), Absolute function(), CCP4_DefaultCallBack(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _convertEchToCm->___lmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _CCP4_Initialize->_CCP4_SetCallBack

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_CCP4_CaptureISR
    _TMR0ISR->_microSecondDelay
    _CCP4_CaptureISR->_CCP4ISR
    _CCP4_CaptureISR->_CCP4_DefaultCallBack

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   18935
                                             25 BANK0     30    30      0
                   _CCP4_SetCallBack
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                     _convertEchToCm
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              12     4      8   15266
                                             79 COMRAM     2     2      0
                                             17 BANK0      8     0      8
                     _convertEchToCm (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11663
                                             77 COMRAM     2     2      0
                                             11 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   11169
                                             67 COMRAM    10     4      6
                                              0 BANK0     11    11      0
                               _atoi
                               _ctoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5174
                                             35 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3793
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1866
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              6 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              6 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1809
                                             17 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1366
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1454
                                             12 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     462
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _convertEchToCm                                       2     0      2     468
                                             18 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                    _CCP4_Initialize
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0     174
                   _CCP4_SetCallBack
 ---------------------------------------------------------------------------------
 (3) _CCP4_SetCallBack                                     2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     272
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     272
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     336
                                              4 COMRAM     2     2      0
                    _CCP4_CaptureISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     192
                   Absolute function *
                            _TMR0ISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0ISR                                             2     2      0     192
                   _microSecondDelay
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _microSecondDelay                                    4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (11) _CCP4_CaptureISR                                     2     2      0     144
                                              2 COMRAM     2     2      0
                   Absolute function *
                            _CCP4ISR *
               _CCP4_DefaultCallBack *
 ---------------------------------------------------------------------------------
 (12) _CCP4_DefaultCallBack                                2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) _CCP4ISR                                             2     0      2      97
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP4_SetCallBack
   _EPWM1_LoadDutyValue
   _EPWM2_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _CCP4_Initialize
       _CCP4_SetCallBack
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _convertEchToCm
     ___lmul
   _printf
     _convertEchToCm (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _fputc
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _CCP4_CaptureISR
     Absolute function(Fake) *
     _CCP4ISR *
     _CCP4_DefaultCallBack *
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0ISR *
       _microSecondDelay
       i2_TMR0_WriteTimer
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      32        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     37      6D       4       68.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      57       1       92.6%
BITBIGSFRhhhlhh     19      0       0      16        0.0%
BITBIGSFRhlhhh      11      0       0      26        0.0%
BITBIGSFRllh         D      0       0      30        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRhhlll       D      0       0      25        0.0%
BITBIGSFRlh          D      0       0      29        0.0%
BITBIGSFRhhlhll      C      0       0      19        0.0%
BITBIGSFRhhlhll      C      0       0      21        0.0%
BITBIGSFRhll         7      0       0      28        0.0%
BITBIGSFRhhllhh      6      0       0      23        0.0%
BITBIGSFRhhllhl      6      0       0      24        0.0%
BITBIGSFRhhlhll      5      0       0      20        0.0%
BITBIGSFRhhlhll      2      0       0      22        0.0%
BITBIGSFRhlhll       1      0       0      27        0.0%
BITBIGSFRhhlhh       1      0       0      18        0.0%
BITBIGSFRhhhll       1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C4      31        0.0%
DATA                 0      0      C4      33        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Apr 01 18:42:47 2023

                               _CCP4_Initialize 1484                                              l22 14A8  
                                            l28 15BE                                              l62 1530  
                                            l80 15CC                                              l65 153E  
                                            l59 13BC                             ___wmul@multiplicand 0009  
                               _timer0ReloadVal 0054                                             l112 1522  
                                           l211 13E6                                             l302 15AA  
                                           l305 15A0                                             l171 158C  
                                           l308 15B4                                             l325 14C8  
                                           l181 1596                                             l502 1482  
                                           l159 12A2                                             l328 1306  
                                           l265 1568                                             l345 14E8  
                                           l257 1232                                             l361 1578  
                                           l513 1066                                             l281 1542  
                                           l274 1410                                             l514 1076  
                                           l290 1582                                             l427 008A  
                                           l348 1336                                             l284 1554  
                                           l460 03F0                                             l278 1436  
                                           l438 0230                                             l493 11F4  
                                           l940 0D14                                             l950 0DE4  
                                           l947 0D34                                             l957 0E04  
                                           _PR2 000FBB                                 _timer1ReloadVal 00A7  
                               __end_of_CCP4ISR 10DC                                             _pad 0ECE  
                               _TMR2_Initialize 156A                  CCP4_SetCallBack@customCallBack 0007  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                      __end_of_EPWM2_Initialize 14CA                                _CCP4_SetCallBack 15B6  
                                CCP4ISR@capture 0001                         __end_of_CCP4_CaptureISR 1368  
                                          l1210 0F76                                            l1221 0E6A  
                                          l1205 0F12                                            l1230 0964  
                                          l3000 1166                                            l1224 0EAC  
                                          l1208 0F54                                            l1232 096C  
                                          l3002 116A                                            l1314 100C  
                                          l1226 0ECC                                            l3010 0E24  
                                          l1322 11B4                                            l1251 093A  
                                          l3020 0E62                                            l3012 0E30  
                                          l3100 06F6                                            l1180 140E  
                                          l3022 0E76                                            l3014 0E3E  
                                          l3006 0E06                                            l1238 0AFA  
                                          l3030 093C                                            l3102 072C  
                                          l1263 112A                                            l3024 0E8A  
                                          l3016 0E50                                            l3008 0E18  
                                          l3040 09AA                                            l3032 0958  
                                          l3112 0776                                            l3104 073A  
                                          l3200 016E                                            l3026 0E8E  
                                          l3050 0AA2                                            l3042 0A20  
                                          l3034 0994                                            l3122 081A  
                                          l3114 07AE                                            l3106 0748  
                                          l3210 0210                                            l3202 01FC  
                                          l1291 1392                                            l2420 14A4  
                                          l2340 1598                                            l2500 101E  
                                          l3060 0B10                                            l3028 0EBA  
                                          l3052 0AC0                                            l3044 0A26  
                                          l3036 099C                                            l3124 082A  
                                          l3116 07D2                                            l3108 0768  
                                          l3140 0912                                            l3212 021C  
                                          l3204 020C                                            l1285 0C3C  
                                          l2334 15B6                                            l2422 14A6  
                                          l2414 1484                                            l2342 15AC  
                                          l2430 13CC                                            l2502 102C  
                                          l3070 0B6C                                            l3054 0ADA  
                                          l3046 0A2C                                            l3038 09A4  
                                          l3134 08D4                                            l3126 0846  
                                          l3118 0806                                            l3150 10DC  
                                          l3310 044C                                            l3302 040C  
                                          l3230 026A                                            l3222 023A  
                                          l3214 0220                                            l2416 1492  
                                          l2424 15CA                                            l2432 13E4  
                                          l2336 158E                                            l2440 156A  
                                          l2504 103C                                            l1288 0C44  
                                          l3080 0BDE                                            l3072 0B74  
                                          l3064 0B14                                            l3048 0A90  
                                          l3128 08A4                                            l3136 0900  
                                          l3152 10E8                                            l3160 13E8  
                                          l3320 04B6                                            l3312 0464  
                                          l3304 0442                                            l3240 02C2  
                                          l3232 0274                                            l3224 0246  
                                          l3216 0236                                            l2418 149E  
                                          l2338 15A2                                            l2434 1524  
                                          l2426 13BE                                            l2450 126E  
                                          l2442 1572                                            l2530 13A4  
                                          l2522 1394                                            l2506 1046  
                                          l3082 0C0E                                            l3074 0BA8  
                                          l3066 0B30                                            l3058 0AFC  
                                          l3090 068E                                            l3154 1104  
                                          l3162 13F0                                            l3330 04EC  
                                          l3322 04C2                                            l3314 048C  
                                          l3306 0446                                            l3250 0300  
                                          l3242 02C6                                            l3234 0286  
                                          l3226 024A                                            l3170 0088  
                                          l1299 1170                                            l2436 14AA  
                                          l2428 13CA                                            l2460 1292  
                                          l2452 1270                                            l2444 1508  
                                          l2540 13B8                                            l2532 13A8  
                                          l2524 1398                                            l3084 0C20  
                                          l3068 0B64                                            l3092 06B2  
                                          l3156 1120                                            l3340 0526  
                                          l3332 04F0                                            l3316 04A4  
                                          l3260 034E                                            l3244 02D8  
                                          l3228 025E                                            l3180 00DA  
                                          l3172 0098                                            l2438 14CA  
                                          l2470 1222                                            l2462 129E  
                                          l2454 1278                                            l2446 1514  
                                          l2534 13AC                                            l2526 139C  
                                          l3094 06C0                                            l3350 05B4  
                                          l3342 0538                                            l3334 0500  
                                          l3318 04A6                                            l3270 037E  
                                          l3254 0324                                            l3246 02E4  
                                          l3238 02AE                                            l3190 0120  
                                          l3182 00E8                                            l3174 00B0  
                                          l3166 0078                                            l2472 122E  
                                          l2464 11F6                                            l2456 128E  
                                          l2448 151C                                            l2536 13B0  
                                          l2528 13A0                                            l3096 06CC  
                                          l3360 05E8                                            l3344 057C  
                                          l3336 0510                                            l3328 04C8  
                                          l3272 0382                                            l3256 0338  
                                          l3248 02EE                                            l3192 012E  
                                          l3184 00F6                                            l3176 00B2  
                                          l3168 007C                                            l2570 1556  
                                          l2466 120A                                            l2458 1290  
                                          l2538 13B4                                            l3450 08F2  
                                          l3098 06D2                                            l3362 05F4  
                                          l3346 058C                                            l3354 05C4  
                                          l3338 051C                                            l3290 03DE  
                                          l3274 0384                                            l3266 0356  
                                          l3258 033C                                            l3370 0678  
                                          l3194 013C                                            l3186 0104  
                                          l3178 00CC                                            l2580 1430  
                                          l2468 1216                                            l3452 0B92  
                                          l2900 1542                                            l3364 0606  
                                          l3356 05D8                                            l3348 05A8  
                                          l3292 03EA                                            l3284 03A6  
                                          l3276 0394                                            l3268 0366  
                                          l3196 0150                                            l3188 0112  
                                          l2582 1434                                            l2574 1410  
                                          l2566 1584                                            l2902 1550  
                                          l2910 0F9C                                            l3358 05DC  
                                          l3286 03CA                                            l3278 03A0  
                                          l3198 0158                                            l2576 141E  
                                          l2568 1588                                            l2904 157C  
                                          l2912 0FA6                                            l2920 1172  
                                          l3448 0632                                            l3288 03CE  
                                          l3368 061C                                            l2586 12D8  
                                          l2578 1422                                            l2498 100E  
                                          l2930 147A                                            l2914 0FC4  
                                          l2906 0F78                                            l2922 117E  
                                          l3298 03F8                                            l2588 1308  
                                          l2596 11B6                                            l2916 0FFA  
                                          l2908 0F8A                                            l2940 0C78  
                                          l2924 1190                                            l2950 0CFA  
                                          l2942 0C8C                                            l2934 0C46  
                                          l2926 1194                                            ?_pad 0019  
                                          l2928 145E                                            l2952 0CFC  
                                          l2944 0C9A                                            l2936 0C52  
                                          l2960 0D5C                                            l2954 0D0E  
                                          l2946 0CAC                                            l2938 0C70  
                                          l2970 0DDE                                            l2962 0D70  
                                          l2948 0CDA                                            l2964 0D7E  
                                          l2956 0D36                                            l2980 0F0A  
                                          l2972 0ECE                                            l2990 1368  
                                          l2966 0DAC                                            l2958 0D54  
                                          l2982 0F1E                                            l2974 0EDC  
                                          l2968 0DCC                                            l2984 0F32  
                                          l2976 0EF0                                            l2994 112C  
                                          l2986 0F36                                            l2978 0EFE  
                                          l2996 1130                                            l2988 0F62  
                                          l2998 1144                                            STR_1 7FAF  
                                          STR_2 7F66                                            STR_3 7EDC  
                                          STR_4 7DEF                                            STR_5 7F8C  
                                          STR_6 7F7A                                            STR_7 7E28  
                                          STR_8 7FF7                                            STR_9 7FE8  
                                          u2000 07AE                                            u2001 07AA  
                                          u2010 07D2                                            u2011 07CE  
                                          u2020 0846                                            u2100 0300  
                                          u2021 0842                                            u2101 02FC  
                                          u2030 1120                                            u2110 0338  
                                          u2031 111C                                            u2111 0334  
                                          u2120 0366                                            u2040 0098  
                                          u2121 0362                                            u2041 0094  
                                          u1250 153E                                            u2210 057C  
                                          u2130 0394                                            u2050 0150  
                                          u1251 153A                                            u2211 0578  
                                          u2131 0390                                            u2051 014C  
                                          u2220 05D8                                            u2140 03DE  
                                          u2060 0230                                            u2221 05D4  
                                          u2205 0544                                            u2141 03DA  
                                          u2061 022C                                            _LATA 000F89  
                                          u1350 1566                                            u2150 0408  
                                          u2070 025A                                            _LATB 000F8A  
                                          u1351 1560                                            u2151 0404  
                                          u2071 0256                                            _LATC 000F8B  
                                          u1360 141E                                            u1280 102C  
                                          u2160 0442                                            u2080 0286  
                                          u1361 141A                                            u1281 1028  
                                          u2161 043E                                            u2081 0282  
                                          u1370 1430                                            u1290 1066  
                                          u2170 04B6                                            u2090 02C2  
                                          u1371 142C                                            u1291 1062  
                                          u2171 04B2                                            u2091 02BE  
                                          u1356 1568                                            u1380 11E6  
                                          u1700 0C70                                            u2180 0500  
                                          u1701 0C6C                                            u2181 04FC  
                                          u1630 1550                                            u1710 0C9A  
                                          u2190 0538                                            u1631 154C  
                                          u1711 0C96                                            u2191 0534  
                                          u1800 138C                                            u1640 0F8A  
                                          u1720 0CDA                                            u1385 11DC  
                                          u1801 1386                                            u1641 0F86  
                                          u1721 0CD6                                            u1810 138E  
                                          u1650 0F9C                                            u1730 0D54  
                                          u1651 0F98                                            u1731 0D50  
                                          u1820 1144                                            u1660 0FC4  
                                          u1740 0D7E                                            u1900 0AA2  
                                          u1821 1140                                            u1661 0FC0  
                                          u1741 0D7A                                            u1901 0A9E  
                                          u1830 1166                                            u1670 0FFA  
                                          u1750 0DAC                                            u1910 0AC0  
                                          u1831 1162                                            u1671 0FF6  
                                          u1751 0DA8                                            u1911 0ABC  
                                          u1840 0E18                                            u1680 11B4  
                                          u1760 0EDC                                            u1920 0ADA  
                                          u1841 0E14                                            u1681 11B0  
                                          u1761 0ED8                                            u1921 0AD6  
                                          u1930 0B30                                            u1850 0E3E  
                                          u1770 0EFE                                            u1931 0B2C  
                                          u1851 0E3A                                            u1691 0C4C  
                                          u1771 0EFA                                            u1940 0B60  
                                          u1860 0E5E                                            u1780 0F54  
                                          u1941 0B5C                                            u1861 0E5A  
                                          u1781 0F50                                            u1950 0C0E  
                                          u1870 0EAC                                            u1790 0F62  
                                          u1951 0C0A                                            u1871 0EA8  
                                          u1791 0F5E                                            u1960 0C20  
                                          u1880 0EBA                                            u1961 0C1C  
                                          u1881 0EB6                                            u1890 0958  
                                          u1970 06B2                                            u1891 0954  
                                          u1971 06AE                                            u1980 06F6  
                                          u1981 06F2                                            u1990 073A  
                                          u1991 0736                                            i2l25 1366  
                                          i2l19 15D0                                            i2l90 0068  
                                          i2l91 0068                                            i2l85 0036  
                                          _TMR1 000FCE                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _EUSART1_Write 1540  
                               __end_of_TMR0ISR 1508                                            _echo 0099  
                                          _dbuf 00AD                                            _fall 009B  
                                          _atoi 0AFC                                            _ctoa 0E06  
                                          _main 0078                                   ?_EUSART1_Read 0001  
                                          _prec 0097                                            _rise 009D  
                                          pad@i 0020                                            pad@p 001D  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0022                                            fsr2l 000FD9  
                                          btemp 0058                                            _utoa 093C  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 0074                           ??_EPWM1_LoadDutyValue 0009  
                                  ___param_bank 000000                                           ??_pad 001F  
                       __end_of_TMR0_Initialize 12A4                  ??_TMR0_DefaultInterruptHandler 0001  
                 __end_of_OSCILLATOR_Initialize 1540                                           ?_atoi 000D  
                                         ?_ctoa 0012                                           ?_main 0001  
                                         STR_10 7E5D                                           STR_11 7FBE  
                                         STR_20 7FE3                                           STR_12 7FE1  
                                         STR_21 7E7C                                           STR_13 7F51  
                                         STR_22 7FFC                                           STR_30 7FF2  
                                         STR_14 7EF6                                           STR_31 7E7B  
                                         STR_23 7F0E                                           STR_15 7EBE  
                                         STR_24 7FED                                           STR_32 7FD8  
                                         STR_16 7F3C                                           STR_25 7E7B  
                                         STR_33 7FF2                                           STR_17 7E9E  
                                         STR_34 7E7B                                           STR_26 7F0E  
                                         STR_18 7E7E                                           STR_19 7E5D  
                                         STR_35 7F0E                                           STR_27 7FED  
                                         STR_28 7E7B                                           STR_36 7F26  
                                         STR_37 7E7B                                           STR_29 7FCD  
                                         STR_38 7F9E                                           STR_39 7FF7  
                        ??_CCP4_DefaultCallBack 0003                                           ?_utoa 0024  
                                         _T0CON 000FD5                                 __end_of___lodiv 0D36  
                                         _T1CON 000FCD                                           _T2CON 000FBA  
                               __end_of___lomod 0E06                                           i2l171 15C8  
                               _TMR0_WriteTimer 1584                                           i2l184 15CE  
                                         i2l178 126C                                           i2l490 10DA  
                                         i2l482 1506                                           i2l478 14EA  
                                         i2l497 12B0                                           i2l499 12D6  
                                  vfpfcnvrt@fmt 0046                                           _TMR0H 000FD7  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                           ___lmul@multiplicand 000B                       ?_TMR0_SetInterruptHandler 0007  
                              __end_of_TMR0_ISR 126E                                           _flags 0056  
                                         _fputc 0F78                                           _fputs 1172  
                               __end_of_isdigit 1394                                           atoi@n 0014  
                                         pad@fp 0019                                           atoi@s 000D  
                                         _width 0052                                           ctoa@c 0014  
                                         _putch 157A                                           ctoa@l 0016  
                                         ctoa@w 0018                                           main@i 0096  
                                         main@j 0095                                 __end_of_isspace 1172  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 1524  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0007  
                                         ttemp5 0059                                           ttemp6 005C  
                                         ttemp7 0060                                           utoa@d 0026  
                                         utoa@i 0042                                           utoa@n 003A  
                                         utoa@p 0038                                           utoa@w 0036  
                                         status 000FD8                         __end_of_CCP4_Initialize 14AA  
                                         wtemp8 0059                                ___lodiv@dividend 0007  
            _EUSART1_DefaultFramingErrorHandler 000000                                  _convertEchToCm 11B6  
                               __initialization 1438                                    __end_of_atoi 0C46  
                                  __end_of_ctoa 0ECE                      __end_of_EUSART1_Initialize 1234  
                                  __end_of_main 068E                                    __end_of_utoa 0AFC  
                              CCP4ISR@direction 00AB                                       ??_CCP4ISR 0003  
                       __end_of_TMR2_Initialize 157A                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000F                                          ??_ctoa 0015  
                                        ??_main 0079                                          ??_utoa 002E  
                                 __activetblptr 000002                                ___lodiv@quotient 0017  
                                     ??_TMR0ISR 0005                                ?_CCP4_CaptureISR 0001  
                                        ?_fputc 0009                                          ?_fputs 0012  
                                        _CCPR1H 000FBF                                          _CCPR2H 000F68  
                                        _CCPR1L 000FBE                                          _CCPR4H 000F59  
                                        _CCPR2L 000F67                                          _CCPR4L 000F58  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                                          i2l2410 15C0  
                                        i2l2412 15C4                                          i2l2520 1342  
                                        i2l2344 12A4                                          i2l2600 0012  
                                        i2l2346 12BC                                          i2l2610 0060  
                                        i2l2602 0020                                          i2l2348 12C0  
                                        i2l2604 002E                                          i2l2518 1338  
                                        i2l2550 1252                                          i2l2542 1234  
                                        i2l2606 0044                                          i2l2480 1078  
                                        i2l2544 1236                                          i2l2608 0052  
                                        i2l2490 10BE                                          i2l2482 108E  
                                        i2l2474 14EC                                          i2l2546 123A  
                                        i2l2492 10C6                                          i2l2484 1096  
                                        i2l2476 14F8                                          i2l2548 123E  
                                        i2l2494 10D4                                          i2l2486 10A2  
                                        i2l2478 14FA                                          i2l2488 10B6  
                                        i2l2496 10D8                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                        __end_of_convertEchToCm 11F6                                    _CCPTMRS0bits 000F49  
                                  _CCPTMRS1bits 000F48                                    vfprintf@cfmt 004E  
                                        ___lmul 100E                                          ___wmul 145E  
                       __end_of_TMR0_WriteTimer 158E                                       ??___lodiv 0017  
                                     ??___lomod 0017                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 0007                                ?_TMR0_Initialize 0001  
                                        clear_0 143E                                          isa$std 000001  
                                 _CCP4_CallBack 00A9                                          _printf 13E8  
                                        pad@buf 001B                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          ctoa@fp 0012  
                                        fputc@c 0009                                          fputs@c 0016  
                                        fputs@i 0017                                          fputs@s 0012  
                                     ??_isdigit 0009                                    __mediumconst 7DEE  
                                     ??_isspace 0009                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 112C                                 ??_EUSART1_Write 0007  
                           _EPWM2_LoadDutyValue 12D8                                          utoa@fp 0024  
      TMR0_SetInterruptHandler@InterruptHandler 0007                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 1394                                      __accesstop 0060  
                       __end_of__initialization 1450                                ?_CCP4_Initialize 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               ?_convertEchToCm 0013                        __end_of_CCP4_SetCallBack 15C0  
                             ?_EPWM1_Initialize 0001                                  __pcstackCOMRAM 0001  
                          ?_EPWM2_LoadDutyValue 0007                             ??_SYSTEM_Initialize 000B  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0007  
                                 __end_of_fputc 100E                                   __end_of_fputs 11B6  
                                 __end_of_putch 1584                                ?_TMR2_Initialize 0001  
                          __end_of_EUSART1_Read 1438                         fp__CCP4_DefaultCallBack 0000  
                             ?_EPWM2_Initialize 0001                                         ??_fputc 000D  
                     __end_of_SYSTEM_Initialize 13BE                                         ??_fputs 0016  
                            ??_EPWM2_Initialize 0007                                         ??_putch 0008  
                                    __pbssBANK0 0097                 __end_of_EUSART1_SetErrorHandler 15B6  
                         ??_EPWM2_LoadDutyValue 0009                __end_of_TMR0_SetInterruptHandler 1598  
                                       ?___lmul 0007                                         ?___wmul 0007  
                                    ??_TMR0_ISR 0005                                ?_TMR0_WriteTimer 0007  
                                       _CCP1CON 000FBD                                         _CCP2CON 000F66  
                                       _CCP4CON 000F57                                         _CCP4ISR 1078  
                                       _ECCP1AS 000FB6                                         _ECCP2AS 000F64  
                                ___lmul@product 000F                                         ?_printf 0071  
        __end_of_EUSART1_SetFramingErrorHandler 15AC                  _EUSART1_SetFramingErrorHandler 15A2  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _PWM1CON 000FB7                                         _PWM2CON 000F65  
                                       _SPBRGH1 000FB0                                         _TMR0ISR 14EA  
                              ___lomod@dividend 0007                     __end_of_EPWM1_LoadDutyValue 1338  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___lodiv 0C46                                         ___lomod 0D36  
                                     ?_vfprintf 006B                                _microSecondDelay 12A4  
                           _EUSART1_is_rx_ready 1556                                         __pcinit 1438  
                                       __ramtop 0600                       convertEchToCm@timerCounts 0013  
                                       __ptext0 0078                                         __ptext1 13E8  
                                       __ptext2 10DC                                         __ptext3 068E  
                                       __ptext4 093C                                         __ptext5 0ECE  
                                       __ptext6 1172                                         __ptext7 0D36  
                                       __ptext8 0C46                                         __ptext9 0E06  
                                     _T0CONbits 000FD5                                      fp__CCP4ISR 0000  
                                     _T1CONbits 000FCD                                         _newEcho 00AC  
                         _OSCILLATOR_Initialize 1524                                       _T2CONbits 000FBA  
                                       _isdigit 1368                              _EUSART1_Initialize 11F6  
                      ??_PIN_MANAGER_Initialize 0007                                         _isspace 112C  
                                       atoi@neg 0012                                         main@cmd 0091  
                                       main@min 0092                                         main@red 0093  
                          end_of_initialization 1450                            ?_EUSART1_is_rx_ready 0001  
                                    fp__TMR0ISR 0000                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000B                                   __Lmediumconst 7DEE  
                   _EUSART1_OverrunErrorHandler 00A1                                         fputs@fp 0014  
                             __end_of_vfpfcnvrt 093C                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 0060                                      ??_vfprintf 004E  
                          ??_EUSART1_Initialize 0009                        _TMR0_SetInterruptHandler 158E  
                           EUSART1_Write@txData 0007                           ??_EUSART1_is_rx_ready 0007  
                              ??_convertEchToCm 0015                                    _EUSART1_Read 1410  
                                    main@sample 007F               CCP4_DefaultCallBack@capturedValue 0001  
                                   _CCP4CONbits 000F57                               ?_CCP4_SetCallBack 0007  
                  __end_of_INTERRUPT_Initialize 15CE                              ??_CCP4_SetCallBack 0009  
                                __end_of___lmul 1078                                     vfpfcnvrt@ap 0048  
                                   vfpfcnvrt@cp 0069                                     vfpfcnvrt@fp 0044  
                                __end_of___wmul 1484                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 1410                             start_initialization 1438  
                               ___lodiv@divisor 000F                                 ___lodiv@counter 001F  
                                   __end_of_pad 0F78                                     putch@txData 0008  
                  EPWM1_LoadDutyValue@dutyValue 0007                           __end_of_EUSART1_Write 1556  
                                   vfprintf@fmt 006D                                        ??___lmul 000F  
                                      ??___wmul 000B                                        ?_CCP4ISR 0001  
                                      ??_printf 0050                           CCP4_CaptureISR@module 0003  
                                   __pbssCOMRAM 0052                                   __pcstackBANK0 0060  
                                      ?_TMR0ISR 0001                        __end_of_microSecondDelay 12D8  
              ??_EUSART1_SetFramingErrorHandler 0009                 ?_EUSART1_SetFramingErrorHandler 0007  
                   __end_of_EPWM2_LoadDutyValue 1308                           _TMR0_InterruptHandler 00A5  
                        _PIN_MANAGER_Initialize 13BE                                       __pintcode 0008  
                                 __pmediumconst 7DEE                               ??_CCP4_CaptureISR 0003  
                                      ?___lodiv 0007                                        ?___lomod 0007  
                  ??_INTERRUPT_InterruptManager 0005                                 ___lomod@divisor 000F  
                               ___lomod@counter 0017                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0007  
                          _EUSART1_ErrorHandler 009F                                        ?_isspace 0007  
                       _EUSART1_SetErrorHandler 15AC                            _INTERRUPT_Initialize 15CA  
                             ??_TMR0_Initialize 0009                                  ___wmul@product 000B  
       EUSART1_SetErrorHandler@interruptHandler 0007                                        _LATCbits 000F8B  
                  __end_of_CCP4_DefaultCallBack 15D2                                        _PIE4bits 000F7A  
                                      i2u131_48 1350                                        i2u132_40 1252  
                                      i2u140_40 002E                                        i2u131_49 1366  
                                      i2u132_41 124E                                        i2u140_41 002A  
                                      i2u141_40 0044                                        i2u141_41 0040  
                                      i2u126_40 108E                                        i2u118_40 12D6  
                                      i2u133_48 1258                                        i2u142_40 0052  
                                      i2u126_41 108A                                        i2u118_41 12D2  
                                      i2u133_49 126C                                        i2u142_41 004E  
                                      i2u127_40 10B6                                        i2u143_40 0060  
                                      i2u127_41 10B2                                        i2u143_41 005C  
                                      i2u139_40 0020                                        i2u139_41 001C  
                    ??_TMR0_SetInterruptHandler 0009                                        _PIR1bits 000F9E  
                                      _PIR4bits 000F7B                                        _RCONbits 000FD0  
                                      _TMR0_ISR 1234                                        _PSTR1CON 000FB9  
                                      _PSTR2CON 000F63                                       _vfpfcnvrt 068E  
                             ??_TMR1_Initialize 0007                               ___wmul@multiplier 0007  
                             ??_CCP4_Initialize 0009                                       main@green 008F  
                              _EPWM1_Initialize 14CA                               i2_TMR0_WriteTimer 15C0  
                                  _isspace$1836 000B                                      vfpfcnvrt@c 0068  
                            ?i2_TMR0_WriteTimer 0001                               ___lmul@multiplier 0007  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 0007                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                _EPWM2_Initialize 14AA  
                                    vfprintf@ap 006F                                        __Lrparam 0000  
                                    vfprintf@fp 006B                         ??_OSCILLATOR_Initialize 0007  
                                    ?_vfpfcnvrt 0044                       __end_ofi2_TMR0_WriteTimer 15CA  
                     ??_EUSART1_SetErrorHandler 0009                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 156A                                        __ptext10 0F78  
                                      __ptext11 157A                                        __ptext20 1394  
                                      __ptext12 1540                                        __ptext21 156A  
                                      __ptext13 0AFC                                      _T1GCONbits 000FCC  
                                      __ptext30 15A2                                        __ptext22 1508  
                                      __ptext14 112C                                        __ptext31 15AC  
                                      __ptext23 126E                                        __ptext15 1368  
                                      __ptext32 14AA                                        __ptext24 158E  
                                      __ptext16 145E                                        __ptext41 1234  
                                      __ptext33 14CA                                        __ptext25 13BE  
                                      __ptext17 11B6                                        __ptext42 14EA  
                                      __ptext34 1484                                        __ptext26 1524  
                                      __ptext18 100E                                        __ptext43 15CE  
                                      __ptext35 15B6                                        __ptext27 15CA  
                                      __ptext19 1584                                        __ptext44 15C0  
                                      __ptext36 1556                                        __ptext28 11F6  
                                      __ptext45 12A4                                        __ptext37 1410  
                                      __ptext29 1598                                        __ptext46 1338  
                                      __ptext38 12D8                                        __ptext47 1078  
                                      __ptext39 1308                                        __ptext48 15D0  
                                      __ptext49 0000                         TMR0_WriteTimer@timerVal 0007  
                             ??_TMR0_WriteTimer 0009            __end_of_TMR0_DefaultInterruptHandler 15D0  
                  _TMR0_DefaultInterruptHandler 15CE  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
                                      isa$xinst 000000                                        int$flags 0058  
                                      _vfprintf 10DC              __end_of_INTERRUPT_InterruptManager 0074  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 0071  
                                      main@temp 007D                     _EUSART1_FramingErrorHandler 00A3  
                                    _INTCONbits 000FF2                            _CCP4_DefaultCallBack 15D0  
                                      isdigit@c 0007                          ??_INTERRUPT_Initialize 0007  
                                      intlevel2 0000                               ?_microSecondDelay 0001  
                               _CCP4_CaptureISR 1338                    EPWM2_LoadDutyValue@dutyValue 0007  
                                      isspace@c 0007                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 15A2                  _EUSART1_SetOverrunErrorHandler 1598  
                                    _RCSTA1bits 000FAB                              ??_microSecondDelay 0003  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 0050  EUSART1_SetFramingErrorHandler@interruptHandler 0007  
                            microSecondDelay@us 0001                                     ??_vfpfcnvrt 004A  
                            _eusart1RxLastError 0057                           ?_CCP4_DefaultCallBack 0001  
                               _TMR0_Initialize 126E                             _EPWM1_LoadDutyValue 1308  
                             microSecondDelay@i 0003                  __end_of_PIN_MANAGER_Initialize 13E8  
                               _TMR1_Initialize 1508                        __end_of_EPWM1_Initialize 14EA  
                          ?_EPWM1_LoadDutyValue 0007  
