

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 30 12:11:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 09/02/2023 GMT
    65                           ; 
    66                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F25K22 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   100   000000                     
   101 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   102   000000                     
   103 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   104   000000                     _TXREG1	set	4013
   105   000000                     _RCREG1	set	4014
   106   000000                     _SPBRG1	set	4015
   107   000000                     _TXSTA1	set	4012
   108   000000                     _ANSELA	set	3896
   109   000000                     _ANSELB	set	3897
   110   000000                     _ANSELC	set	3898
   111   000000                     _TMR0L	set	4054
   112   000000                     _TMR0H	set	4055
   113   000000                     _T1CON	set	4045
   114   000000                     _TMR1L	set	4046
   115   000000                     _TMR1H	set	4047
   116   000000                     _CCPTMRS1bits	set	3912
   117   000000                     _CCP4CON	set	3927
   118   000000                     _CCP4CONbits	set	3927
   119   000000                     _TMR1	set	4046
   120   000000                     _LATCbits	set	3979
   121   000000                     _RCSTA1bits	set	4011
   122   000000                     _TXSTA1bits	set	4012
   123   000000                     _T0CON	set	4053
   124   000000                     _T1GCONbits	set	4044
   125   000000                     _T1CONbits	set	4045
   126   000000                     _PLLRDY	set	32407
   127   000000                     _WPUB	set	3937
   128   000000                     _PIR4bits	set	3963
   129   000000                     _CCPR4H	set	3929
   130   000000                     _CCPR4L	set	3928
   131   000000                     _LATA	set	3977
   132   000000                     _OSCTUNE	set	3995
   133   000000                     _OSCCON2	set	4050
   134   000000                     _OSCCON	set	4051
   135   000000                     _T0CONbits	set	4053
   136   000000                     _INTCONbits	set	4082
   137   000000                     _PIR1bits	set	3998
   138   000000                     _T1GCON	set	4044
   139   000000                     _RCONbits	set	4048
   140   000000                     _RCSTA1	set	4011
   141   000000                     _BAUDCON1	set	4024
   142   000000                     _INTCON2bits	set	4081
   143   000000                     _TRISA	set	3986
   144   000000                     _LATC	set	3979
   145   000000                     _LATB	set	3978
   146   000000                     _TRISC	set	3988
   147   000000                     _TRISB	set	3987
   148   000000                     _SPBRGH1	set	4016
   149                           
   150                           	psect	mediumconst
   151   007E22                     __pmediumconst:
   152                           	callstack 0
   153   007E22  00                 	db	0
   154   007E23                     STR_4:
   155   007E23  20                 	db	32
   156   007E24  20                 	db	32
   157   007E25  20                 	db	32
   158   007E26  20                 	db	32
   159   007E27  56                 	db	86	;'V'
   160   007E28  63                 	db	99	;'c'
   161   007E29  63                 	db	99	;'c'
   162   007E2A  3A                 	db	58	;':'
   163   007E2B  20                 	db	32
   164   007E2C  6C                 	db	108	;'l'
   165   007E2D  65                 	db	101	;'e'
   166   007E2E  66                 	db	102	;'f'
   167   007E2F  74                 	db	116	;'t'
   168   007E30  20                 	db	32
   169   007E31  70                 	db	112	;'p'
   170   007E32  69                 	db	105	;'i'
   171   007E33  6E                 	db	110	;'n'
   172   007E34  20                 	db	32
   173   007E35  6F                 	db	111	;'o'
   174   007E36  6E                 	db	110	;'n'
   175   007E37  20                 	db	32
   176   007E38  4A                 	db	74	;'J'
   177   007E39  50                 	db	80	;'P'
   178   007E3A  31                 	db	49	;'1'
   179   007E3B  20                 	db	32
   180   007E3C  68                 	db	104	;'h'
   181   007E3D  65                 	db	101	;'e'
   182   007E3E  61                 	db	97	;'a'
   183   007E3F  64                 	db	100	;'d'
   184   007E40  65                 	db	101	;'e'
   185   007E41  72                 	db	114	;'r'
   186   007E42  20                 	db	32
   187   007E43  28                 	db	40
   188   007E44  63                 	db	99	;'c'
   189   007E45  6C                 	db	108	;'l'
   190   007E46  6F                 	db	111	;'o'
   191   007E47  73                 	db	115	;'s'
   192   007E48  65                 	db	101	;'e'
   193   007E49  73                 	db	115	;'s'
   194   007E4A  74                 	db	116	;'t'
   195   007E4B  20                 	db	32
   196   007E4C  74                 	db	116	;'t'
   197   007E4D  6F                 	db	111	;'o'
   198   007E4E  20                 	db	32
   199   007E4F  6D                 	db	109	;'m'
   200   007E50  69                 	db	105	;'i'
   201   007E51  6E                 	db	110	;'n'
   202   007E52  69                 	db	105	;'i'
   203   007E53  20                 	db	32
   204   007E54  55                 	db	85	;'U'
   205   007E55  53                 	db	83	;'S'
   206   007E56  42                 	db	66	;'B'
   207   007E57  29                 	db	41
   208   007E58  2E                 	db	46
   209   007E59  0D                 	db	13
   210   007E5A  0A                 	db	10
   211   007E5B  00                 	db	0
   212   007E5C                     STR_7:
   213   007E5C  20                 	db	32
   214   007E5D  20                 	db	32
   215   007E5E  20                 	db	32
   216   007E5F  20                 	db	32
   217   007E60  47                 	db	71	;'G'
   218   007E61  4E                 	db	78	;'N'
   219   007E62  44                 	db	68	;'D'
   220   007E63  3A                 	db	58	;':'
   221   007E64  20                 	db	32
   222   007E65  20                 	db	32
   223   007E66  20                 	db	32
   224   007E67  20                 	db	32
   225   007E68  47                 	db	71	;'G'
   226   007E69  4E                 	db	78	;'N'
   227   007E6A  44                 	db	68	;'D'
   228   007E6B  20                 	db	32
   229   007E6C  68                 	db	104	;'h'
   230   007E6D  65                 	db	101	;'e'
   231   007E6E  61                 	db	97	;'a'
   232   007E6F  64                 	db	100	;'d'
   233   007E70  65                 	db	101	;'e'
   234   007E71  72                 	db	114	;'r'
   235   007E72  20                 	db	32
   236   007E73  70                 	db	112	;'p'
   237   007E74  69                 	db	105	;'i'
   238   007E75  6E                 	db	110	;'n'
   239   007E76  20                 	db	32
   240   007E77  6F                 	db	111	;'o'
   241   007E78  6E                 	db	110	;'n'
   242   007E79  20                 	db	32
   243   007E7A  50                 	db	80	;'P'
   244   007E7B  49                 	db	73	;'I'
   245   007E7C  43                 	db	67	;'C'
   246   007E7D  20                 	db	32
   247   007E7E  62                 	db	98	;'b'
   248   007E7F  72                 	db	114	;'r'
   249   007E80  65                 	db	101	;'e'
   250   007E81  61                 	db	97	;'a'
   251   007E82  6B                 	db	107	;'k'
   252   007E83  6F                 	db	111	;'o'
   253   007E84  75                 	db	117	;'u'
   254   007E85  74                 	db	116	;'t'
   255   007E86  20                 	db	32
   256   007E87  68                 	db	104	;'h'
   257   007E88  65                 	db	101	;'e'
   258   007E89  61                 	db	97	;'a'
   259   007E8A  64                 	db	100	;'d'
   260   007E8B  65                 	db	101	;'e'
   261   007E8C  72                 	db	114	;'r'
   262   007E8D  2E                 	db	46
   263   007E8E  0D                 	db	13
   264   007E8F  0A                 	db	10
   265   007E90  00                 	db	0
   266   007E91                     STR_16:
   267   007E91  61                 	db	97	;'a'
   268   007E92  3A                 	db	58	;':'
   269   007E93  20                 	db	32
   270   007E94  67                 	db	103	;'g'
   271   007E95  61                 	db	97	;'a'
   272   007E96  74                 	db	116	;'t'
   273   007E97  68                 	db	104	;'h'
   274   007E98  65                 	db	101	;'e'
   275   007E99  72                 	db	114	;'r'
   276   007E9A  20                 	db	32
   277   007E9B  25                 	db	37
   278   007E9C  64                 	db	100	;'d'
   279   007E9D  20                 	db	32
   280   007E9E  73                 	db	115	;'s'
   281   007E9F  61                 	db	97	;'a'
   282   007EA0  6D                 	db	109	;'m'
   283   007EA1  70                 	db	112	;'p'
   284   007EA2  6C                 	db	108	;'l'
   285   007EA3  65                 	db	101	;'e'
   286   007EA4  73                 	db	115	;'s'
   287   007EA5  20                 	db	32
   288   007EA6  69                 	db	105	;'i'
   289   007EA7  6E                 	db	110	;'n'
   290   007EA8  20                 	db	32
   291   007EA9  61                 	db	97	;'a'
   292   007EAA  6E                 	db	110	;'n'
   293   007EAB  20                 	db	32
   294   007EAC  61                 	db	97	;'a'
   295   007EAD  72                 	db	114	;'r'
   296   007EAE  72                 	db	114	;'r'
   297   007EAF  61                 	db	97	;'a'
   298   007EB0  79                 	db	121	;'y'
   299   007EB1  20                 	db	32
   300   007EB2  61                 	db	97	;'a'
   301   007EB3  6E                 	db	110	;'n'
   302   007EB4  64                 	db	100	;'d'
   303   007EB5  20                 	db	32
   304   007EB6  70                 	db	112	;'p'
   305   007EB7  72                 	db	114	;'r'
   306   007EB8  69                 	db	105	;'i'
   307   007EB9  6E                 	db	110	;'n'
   308   007EBA  74                 	db	116	;'t'
   309   007EBB  0D                 	db	13
   310   007EBC  0A                 	db	10
   311   007EBD  00                 	db	0
   312   007EBE                     STR_9:
   313   007EBE  2D                 	db	45
   314   007EBF  2D                 	db	45
   315   007EC0  2D                 	db	45
   316   007EC1  2D                 	db	45
   317   007EC2  2D                 	db	45
   318   007EC3  2D                 	db	45
   319   007EC4  2D                 	db	45
   320   007EC5  2D                 	db	45
   321   007EC6  2D                 	db	45
   322   007EC7  2D                 	db	45
   323   007EC8  2D                 	db	45
   324   007EC9  2D                 	db	45
   325   007ECA  2D                 	db	45
   326   007ECB  2D                 	db	45
   327   007ECC  2D                 	db	45
   328   007ECD  2D                 	db	45
   329   007ECE  2D                 	db	45
   330   007ECF  2D                 	db	45
   331   007ED0  2D                 	db	45
   332   007ED1  2D                 	db	45
   333   007ED2  2D                 	db	45
   334   007ED3  2D                 	db	45
   335   007ED4  2D                 	db	45
   336   007ED5  2D                 	db	45
   337   007ED6  2D                 	db	45
   338   007ED7  2D                 	db	45
   339   007ED8  2D                 	db	45
   340   007ED9  2D                 	db	45
   341   007EDA  2D                 	db	45
   342   007EDB  2D                 	db	45
   343   007EDC  0D                 	db	13
   344   007EDD  0A                 	db	10
   345   007EDE  00                 	db	0
   346   007EDF                     STR_14:
   347   007EDF  73                 	db	115	;'s'
   348   007EE0  3A                 	db	58	;':'
   349   007EE1  20                 	db	32
   350   007EE2  53                 	db	83	;'S'
   351   007EE3  74                 	db	116	;'t'
   352   007EE4  72                 	db	114	;'r'
   353   007EE5  65                 	db	101	;'e'
   354   007EE6  61                 	db	97	;'a'
   355   007EE7  6D                 	db	109	;'m'
   356   007EE8  20                 	db	32
   357   007EE9  45                 	db	69	;'E'
   358   007EEA  63                 	db	99	;'c'
   359   007EEB  68                 	db	104	;'h'
   360   007EEC  6F                 	db	111	;'o'
   361   007EED  20                 	db	32
   362   007EEE  70                 	db	112	;'p'
   363   007EEF  75                 	db	117	;'u'
   364   007EF0  6C                 	db	108	;'l'
   365   007EF1  73                 	db	115	;'s'
   366   007EF2  65                 	db	101	;'e'
   367   007EF3  20                 	db	32
   368   007EF4  6C                 	db	108	;'l'
   369   007EF5  65                 	db	101	;'e'
   370   007EF6  6E                 	db	110	;'n'
   371   007EF7  67                 	db	103	;'g'
   372   007EF8  74                 	db	116	;'t'
   373   007EF9  68                 	db	104	;'h'
   374   007EFA  0D                 	db	13
   375   007EFB  0A                 	db	10
   376   007EFC  00                 	db	0
   377   007EFD                     STR_3:
   378   007EFD  55                 	db	85	;'U'
   379   007EFE  6C                 	db	108	;'l'
   380   007EFF  74                 	db	116	;'t'
   381   007F00  72                 	db	114	;'r'
   382   007F01  61                 	db	97	;'a'
   383   007F02  73                 	db	115	;'s'
   384   007F03  6F                 	db	111	;'o'
   385   007F04  6E                 	db	110	;'n'
   386   007F05  69                 	db	105	;'i'
   387   007F06  63                 	db	99	;'c'
   388   007F07  20                 	db	32
   389   007F08  43                 	db	67	;'C'
   390   007F09  6F                 	db	111	;'o'
   391   007F0A  6E                 	db	110	;'n'
   392   007F0B  6E                 	db	110	;'n'
   393   007F0C  65                 	db	101	;'e'
   394   007F0D  63                 	db	99	;'c'
   395   007F0E  74                 	db	116	;'t'
   396   007F0F  69                 	db	105	;'i'
   397   007F10  6F                 	db	111	;'o'
   398   007F11  6E                 	db	110	;'n'
   399   007F12  73                 	db	115	;'s'
   400   007F13  3A                 	db	58	;':'
   401   007F14  0D                 	db	13
   402   007F15  0A                 	db	10
   403   007F16  00                 	db	0
   404   007F17                     STR_13:
   405   007F17  7A                 	db	122	;'z'
   406   007F18  3A                 	db	58	;':'
   407   007F19  20                 	db	32
   408   007F1A  43                 	db	67	;'C'
   409   007F1B  6C                 	db	108	;'l'
   410   007F1C  65                 	db	101	;'e'
   411   007F1D  61                 	db	97	;'a'
   412   007F1E  72                 	db	114	;'r'
   413   007F1F  20                 	db	32
   414   007F20  74                 	db	116	;'t'
   415   007F21  68                 	db	104	;'h'
   416   007F22  65                 	db	101	;'e'
   417   007F23  20                 	db	32
   418   007F24  74                 	db	116	;'t'
   419   007F25  65                 	db	101	;'e'
   420   007F26  72                 	db	114	;'r'
   421   007F27  6D                 	db	109	;'m'
   422   007F28  69                 	db	105	;'i'
   423   007F29  6E                 	db	110	;'n'
   424   007F2A  61                 	db	97	;'a'
   425   007F2B  6C                 	db	108	;'l'
   426   007F2C  0D                 	db	13
   427   007F2D  0A                 	db	10
   428   007F2E  00                 	db	0
   429   007F2F                     STR_21:
   430   007F2F  70                 	db	112	;'p'
   431   007F30  72                 	db	114	;'r'
   432   007F31  65                 	db	101	;'e'
   433   007F32  73                 	db	115	;'s'
   434   007F33  73                 	db	115	;'s'
   435   007F34  20                 	db	32
   436   007F35  61                 	db	97	;'a'
   437   007F36  6E                 	db	110	;'n'
   438   007F37  79                 	db	121	;'y'
   439   007F38  20                 	db	32
   440   007F39  6B                 	db	107	;'k'
   441   007F3A  65                 	db	101	;'e'
   442   007F3B  79                 	db	121	;'y'
   443   007F3C  20                 	db	32
   444   007F3D  74                 	db	116	;'t'
   445   007F3E  6F                 	db	111	;'o'
   446   007F3F  20                 	db	32
   447   007F40  65                 	db	101	;'e'
   448   007F41  78                 	db	120	;'x'
   449   007F42  69                 	db	105	;'i'
   450   007F43  74                 	db	116	;'t'
   451   007F44  0D                 	db	13
   452   007F45  0A                 	db	10
   453   007F46  00                 	db	0
   454   007F47                     STR_15:
   455   007F47  53                 	db	83	;'S'
   456   007F48  3A                 	db	58	;':'
   457   007F49  20                 	db	32
   458   007F4A  53                 	db	83	;'S'
   459   007F4B  74                 	db	116	;'t'
   460   007F4C  72                 	db	114	;'r'
   461   007F4D  65                 	db	101	;'e'
   462   007F4E  61                 	db	97	;'a'
   463   007F4F  6D                 	db	109	;'m'
   464   007F50  20                 	db	32
   465   007F51  64                 	db	100	;'d'
   466   007F52  69                 	db	105	;'i'
   467   007F53  73                 	db	115	;'s'
   468   007F54  74                 	db	116	;'t'
   469   007F55  61                 	db	97	;'a'
   470   007F56  6E                 	db	110	;'n'
   471   007F57  63                 	db	99	;'c'
   472   007F58  65                 	db	101	;'e'
   473   007F59  0D                 	db	13
   474   007F5A  0A                 	db	10
   475   007F5B  00                 	db	0
   476   007F5C                     STR_12:
   477   007F5C  5A                 	db	90	;'Z'
   478   007F5D  3A                 	db	58	;':'
   479   007F5E  20                 	db	32
   480   007F5F  52                 	db	82	;'R'
   481   007F60  65                 	db	101	;'e'
   482   007F61  73                 	db	115	;'s'
   483   007F62  65                 	db	101	;'e'
   484   007F63  74                 	db	116	;'t'
   485   007F64  20                 	db	32
   486   007F65  70                 	db	112	;'p'
   487   007F66  72                 	db	114	;'r'
   488   007F67  6F                 	db	111	;'o'
   489   007F68  63                 	db	99	;'c'
   490   007F69  65                 	db	101	;'e'
   491   007F6A  73                 	db	115	;'s'
   492   007F6B  73                 	db	115	;'s'
   493   007F6C  6F                 	db	111	;'o'
   494   007F6D  72                 	db	114	;'r'
   495   007F6E  0D                 	db	13
   496   007F6F  0A                 	db	10
   497   007F70  00                 	db	0
   498   007F71                     STR_2:
   499   007F71  69                 	db	105	;'i'
   500   007F72  6E                 	db	110	;'n'
   501   007F73  4C                 	db	76	;'L'
   502   007F74  61                 	db	97	;'a'
   503   007F75  62                 	db	98	;'b'
   504   007F76  20                 	db	32
   505   007F77  31                 	db	49	;'1'
   506   007F78  33                 	db	51	;'3'
   507   007F79  20                 	db	32
   508   007F7A  74                 	db	116	;'t'
   509   007F7B  65                 	db	101	;'e'
   510   007F7C  72                 	db	114	;'r'
   511   007F7D  6D                 	db	109	;'m'
   512   007F7E  69                 	db	105	;'i'
   513   007F7F  6E                 	db	110	;'n'
   514   007F80  61                 	db	97	;'a'
   515   007F81  6C                 	db	108	;'l'
   516   007F82  0D                 	db	13
   517   007F83  0A                 	db	10
   518   007F84  00                 	db	0
   519   007F85                     STR_6:
   520   007F85  20                 	db	32
   521   007F86  20                 	db	32
   522   007F87  20                 	db	32
   523   007F88  20                 	db	32
   524   007F89  45                 	db	69	;'E'
   525   007F8A  63                 	db	99	;'c'
   526   007F8B  68                 	db	104	;'h'
   527   007F8C  6F                 	db	111	;'o'
   528   007F8D  3A                 	db	58	;':'
   529   007F8E  20                 	db	32
   530   007F8F  20                 	db	32
   531   007F90  20                 	db	32
   532   007F91  52                 	db	82	;'R'
   533   007F92  42                 	db	66	;'B'
   534   007F93  30                 	db	48	;'0'
   535   007F94  0D                 	db	13
   536   007F95  0A                 	db	10
   537   007F96  00                 	db	0
   538   007F97                     STR_5:
   539   007F97  20                 	db	32
   540   007F98  20                 	db	32
   541   007F99  20                 	db	32
   542   007F9A  20                 	db	32
   543   007F9B  54                 	db	84	;'T'
   544   007F9C  72                 	db	114	;'r'
   545   007F9D  69                 	db	105	;'i'
   546   007F9E  67                 	db	103	;'g'
   547   007F9F  3A                 	db	58	;':'
   548   007FA0  20                 	db	32
   549   007FA1  20                 	db	32
   550   007FA2  20                 	db	32
   551   007FA3  52                 	db	82	;'R'
   552   007FA4  43                 	db	67	;'C'
   553   007FA5  34                 	db	52	;'4'
   554   007FA6  0D                 	db	13
   555   007FA7  0A                 	db	10
   556   007FA8  00                 	db	0
   557   007FA9                     STR_30:
   558   007FA9  55                 	db	85	;'U'
   559   007FAA  6E                 	db	110	;'n'
   560   007FAB  6B                 	db	107	;'k'
   561   007FAC  6E                 	db	110	;'n'
   562   007FAD  6F                 	db	111	;'o'
   563   007FAE  77                 	db	119	;'w'
   564   007FAF  6E                 	db	110	;'n'
   565   007FB0  20                 	db	32
   566   007FB1  6B                 	db	107	;'k'
   567   007FB2  65                 	db	101	;'e'
   568   007FB3  79                 	db	121	;'y'
   569   007FB4  20                 	db	32
   570   007FB5  25                 	db	37
   571   007FB6  63                 	db	99	;'c'
   572   007FB7  0D                 	db	13
   573   007FB8  0A                 	db	10
   574   007FB9  00                 	db	0
   575   007FBA                     STR_1:
   576   007FBA  44                 	db	68	;'D'
   577   007FBB  65                 	db	101	;'e'
   578   007FBC  76                 	db	118	;'v'
   579   007FBD  27                 	db	39
   580   007FBE  32                 	db	50	;'2'
   581   007FBF  31                 	db	49	;'1'
   582   007FC0  20                 	db	32
   583   007FC1  42                 	db	66	;'B'
   584   007FC2  6F                 	db	111	;'o'
   585   007FC3  61                 	db	97	;'a'
   586   007FC4  72                 	db	114	;'r'
   587   007FC5  64                 	db	100	;'d'
   588   007FC6  0D                 	db	13
   589   007FC7  0A                 	db	10
   590   007FC8  00                 	db	0
   591   007FC9                     STR_10:
   592   007FC9  3F                 	db	63	;'?'
   593   007FCA  3A                 	db	58	;':'
   594   007FCB  20                 	db	32
   595   007FCC  48                 	db	72	;'H'
   596   007FCD  65                 	db	101	;'e'
   597   007FCE  6C                 	db	108	;'l'
   598   007FCF  70                 	db	112	;'p'
   599   007FD0  20                 	db	32
   600   007FD1  6D                 	db	109	;'m'
   601   007FD2  65                 	db	101	;'e'
   602   007FD3  6E                 	db	110	;'n'
   603   007FD4  75                 	db	117	;'u'
   604   007FD5  0D                 	db	13
   605   007FD6  0A                 	db	10
   606   007FD7  00                 	db	0
   607   007FD8                     STR_27:
   608   007FD8  25                 	db	37
   609   007FD9  64                 	db	100	;'d'
   610   007FDA  20                 	db	32
   611   007FDB  73                 	db	115	;'s'
   612   007FDC  61                 	db	97	;'a'
   613   007FDD  6D                 	db	109	;'m'
   614   007FDE  70                 	db	112	;'p'
   615   007FDF  6C                 	db	108	;'l'
   616   007FE0  65                 	db	101	;'e'
   617   007FE1  73                 	db	115	;'s'
   618   007FE2  0D                 	db	13
   619   007FE3  0A                 	db	10
   620   007FE4  00                 	db	0
   621   007FE5                     STR_11:
   622   007FE5  6F                 	db	111	;'o'
   623   007FE6  3A                 	db	58	;':'
   624   007FE7  20                 	db	32
   625   007FE8  6B                 	db	107	;'k'
   626   007FE9  0D                 	db	13
   627   007FEA  0A                 	db	10
   628   007FEB  00                 	db	0
   629   007FEC                     STR_22:
   630   007FEC  25                 	db	37
   631   007FED  38                 	db	56	;'8'
   632   007FEE  75                 	db	117	;'u'
   633   007FEF  0D                 	db	13
   634   007FF0  00                 	db	0
   635   007FF1                     STR_28:
   636   007FF1  25                 	db	37
   637   007FF2  75                 	db	117	;'u'
   638   007FF3  20                 	db	32
   639   007FF4  20                 	db	32
   640   007FF5  00                 	db	0
   641   007FF6                     STR_8:
   642   007FF6  0D                 	db	13
   643   007FF7  0A                 	db	10
   644   007FF8  3E                 	db	62	;'>'
   645   007FF9  20                 	db	32
   646   007FFA  00                 	db	0
   647   007FFB                     STR_20:
   648   007FFB  0A                 	db	10
   649   007FFC  3E                 	db	62	;'>'
   650   007FFD  00                 	db	0
   651   007FFE  00                 	db	0	; dummy byte at the end
   652   000000                     
   653                           ; #config settings
   654                           
   655                           	psect	cinit
   656   00167C                     __pcinit:
   657                           	callstack 0
   658   00167C                     start_initialization:
   659                           	callstack 0
   660   00167C                     __initialization:
   661                           	callstack 0
   662                           
   663                           ; Clear objects allocated to BANK0 (44 bytes)
   664   00167C  EE00  F060         	lfsr	0,__pbssBANK0
   665   001680  0E2C               	movlw	44
   666   001682                     clear_0:
   667   001682  6AEE               	clrf	postinc0,c
   668   001684  06E8               	decf	wreg,f,c
   669   001686  E1FD               	bnz	clear_0
   670                           
   671                           ; Clear objects allocated to COMRAM (6 bytes)
   672   001688  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
   673   00168A  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
   674   00168C  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
   675   00168E  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
   676   001690  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
   677   001692  6A53               	clrf	__pbssCOMRAM& (0+255),c
   678   001694                     end_of_initialization:
   679                           	callstack 0
   680   001694                     __end_of__initialization:
   681                           	callstack 0
   682   001694  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   683   001696  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   684   001698  0E00               	movlw	low (__Lmediumconst shr (0+16))
   685   00169A  6EF8               	movwf	tblptru,c
   686   00169C  0100               	movlb	0
   687   00169E  EFD8  F001         	goto	_main	;jump to C main() function
   688                           
   689                           	psect	bssCOMRAM
   690   000053                     __pbssCOMRAM:
   691                           	callstack 0
   692   000053                     _width:
   693                           	callstack 0
   694   000053                     	ds	2
   695   000055                     _timer0ReloadVal:
   696                           	callstack 0
   697   000055                     	ds	2
   698   000057                     _flags:
   699                           	callstack 0
   700   000057                     	ds	1
   701   000058                     _eusart1RxLastError:
   702                           	callstack 0
   703   000058                     	ds	1
   704                           
   705                           	psect	bssBANK0
   706   000060                     __pbssBANK0:
   707                           	callstack 0
   708   000060                     _prec:
   709                           	callstack 0
   710   000060                     	ds	2
   711   000062                     _EUSART1_ErrorHandler:
   712                           	callstack 0
   713   000062                     	ds	2
   714   000064                     _EUSART1_OverrunErrorHandler:
   715                           	callstack 0
   716   000064                     	ds	2
   717   000066                     _EUSART1_FramingErrorHandler:
   718                           	callstack 0
   719   000066                     	ds	2
   720   000068                     _TMR0_InterruptHandler:
   721                           	callstack 0
   722   000068                     	ds	2
   723   00006A                     _timer1ReloadVal:
   724                           	callstack 0
   725   00006A                     	ds	2
   726   00006C                     _dbuf:
   727                           	callstack 0
   728   00006C                     	ds	32
   729                           
   730                           	psect	cstackBANK0
   731   00008C                     __pcstackBANK0:
   732                           	callstack 0
   733   00008C                     vfpfcnvrt@c:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x0
   737   00008C                     	ds	1
   738   00008D                     vfpfcnvrt@convarg:
   739                           	callstack 0
   740                           
   741                           ; 8 bytes @ 0x1
   742   00008D                     	ds	8
   743   000095                     vfpfcnvrt@cp:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x9
   747   000095                     	ds	2
   748   000097                     ?_vfprintf:
   749                           	callstack 0
   750   000097                     vfprintf@fp:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0xB
   754   000097                     	ds	2
   755   000099                     vfprintf@fmt:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0xD
   759   000099                     	ds	2
   760   00009B                     vfprintf@ap:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xF
   764   00009B                     	ds	2
   765   00009D                     ?_printf:
   766                           	callstack 0
   767   00009D                     printf@fmt:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x11
   771   00009D                     	ds	4
   772   0000A1                     printf@ap:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x15
   776   0000A1                     	ds	2
   777   0000A3                     ??_main:
   778                           
   779                           ; 1 bytes @ 0x17
   780   0000A3                     	ds	2
   781   0000A5                     main@sample:
   782                           	callstack 0
   783                           
   784                           ; 16 bytes @ 0x19
   785   0000A5                     	ds	16
   786   0000B5                     main@cmd:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x29
   790   0000B5                     	ds	1
   791   0000B6                     main@i:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x2A
   795   0000B6                     	ds	1
   796                           
   797                           	psect	cstackCOMRAM
   798   000001                     __pcstackCOMRAM:
   799                           	callstack 0
   800   000001                     microSecondDelay@us:
   801                           	callstack 0
   802   000001                     i2TMR0_WriteTimer@timerVal:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x0
   806   000001                     	ds	2
   807   000003                     microSecondDelay@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x2
   811   000003                     	ds	2
   812   000005                     ??_INTERRUPT_InterruptManager:
   813                           
   814                           ; 1 bytes @ 0x4
   815   000005                     	ds	2
   816   000007                     ?_isdigit:
   817                           	callstack 0
   818   000007                     ?_isspace:
   819                           	callstack 0
   820   000007                     ?_CCP4_CaptureRead:
   821                           	callstack 0
   822   000007                     ?___wmul:
   823                           	callstack 0
   824   000007                     ?___aodiv:
   825                           	callstack 0
   826   000007                     ?___aomod:
   827                           	callstack 0
   828   000007                     ?___lodiv:
   829                           	callstack 0
   830   000007                     ?___lomod:
   831                           	callstack 0
   832   000007                     CCP4_IsCapturedDataReady@status:
   833                           	callstack 0
   834   000007                     EUSART1_Write@txData:
   835                           	callstack 0
   836   000007                     TMR0_WriteTimer@timerVal:
   837                           	callstack 0
   838   000007                     TMR0_SetInterruptHandler@InterruptHandler:
   839                           	callstack 0
   840   000007                     EUSART1_SetFramingErrorHandler@interruptHandler:
   841                           	callstack 0
   842   000007                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   843                           	callstack 0
   844   000007                     EUSART1_SetErrorHandler@interruptHandler:
   845                           	callstack 0
   846   000007                     ___wmul@multiplier:
   847                           	callstack 0
   848   000007                     isdigit@c:
   849                           	callstack 0
   850   000007                     isspace@c:
   851                           	callstack 0
   852   000007                     ___aodiv@dividend:
   853                           	callstack 0
   854   000007                     ___aomod@dividend:
   855                           	callstack 0
   856   000007                     ___lodiv@dividend:
   857                           	callstack 0
   858   000007                     ___lomod@dividend:
   859                           	callstack 0
   860                           
   861                           ; 8 bytes @ 0x6
   862   000007                     	ds	1
   863   000008                     putch@txData:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x7
   867   000008                     	ds	1
   868   000009                     ??_TMR0_Initialize:
   869   000009                     ??_isdigit:
   870   000009                     ??_isspace:
   871   000009                     CCP4_CaptureRead@module:
   872                           	callstack 0
   873   000009                     ___wmul@multiplicand:
   874                           	callstack 0
   875   000009                     fputc@c:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x8
   879   000009                     	ds	2
   880   00000B                     ?_getEchoPulseDurationForeground:
   881                           	callstack 0
   882   00000B                     _isspace$1632:
   883                           	callstack 0
   884   00000B                     ___wmul@product:
   885                           	callstack 0
   886   00000B                     fputc@fp:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0xA
   890   00000B                     	ds	2
   891   00000D                     ??_fputc:
   892   00000D                     ?_atoi:
   893                           	callstack 0
   894   00000D                     getEchoPulseDurationForeground@start:
   895                           	callstack 0
   896   00000D                     atoi@s:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0xC
   900   00000D                     	ds	2
   901   00000F                     ??_atoi:
   902   00000F                     getEchoPulseDurationForeground@end:
   903                           	callstack 0
   904   00000F                     ___aodiv@divisor:
   905                           	callstack 0
   906   00000F                     ___aomod@divisor:
   907                           	callstack 0
   908   00000F                     ___lodiv@divisor:
   909                           	callstack 0
   910   00000F                     ___lomod@divisor:
   911                           	callstack 0
   912                           
   913                           ; 8 bytes @ 0xE
   914   00000F                     	ds	2
   915   000011                     ?_convertEchToCm:
   916                           	callstack 0
   917   000011                     convertEchToCm@timerCounts:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x10
   921   000011                     	ds	1
   922   000012                     ctoa@fp:
   923                           	callstack 0
   924   000012                     atoi@neg:
   925                           	callstack 0
   926   000012                     fputs@s:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x11
   930   000012                     	ds	1
   931   000013                     ??_convertEchToCm:
   932                           
   933                           ; 1 bytes @ 0x12
   934   000013                     	ds	1
   935   000014                     ctoa@c:
   936                           	callstack 0
   937   000014                     atoi@n:
   938                           	callstack 0
   939   000014                     fputs@fp:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x13
   943   000014                     	ds	1
   944   000015                     ??_ctoa:
   945                           
   946                           ; 1 bytes @ 0x14
   947   000015                     	ds	1
   948   000016                     fputs@c:
   949                           	callstack 0
   950   000016                     ctoa@l:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x15
   954   000016                     	ds	1
   955   000017                     ___aodiv@counter:
   956                           	callstack 0
   957   000017                     ___aomod@counter:
   958                           	callstack 0
   959   000017                     ___lomod@counter:
   960                           	callstack 0
   961   000017                     fputs@i:
   962                           	callstack 0
   963   000017                     ___lodiv@quotient:
   964                           	callstack 0
   965                           
   966                           ; 8 bytes @ 0x16
   967   000017                     	ds	1
   968   000018                     ___aodiv@sign:
   969                           	callstack 0
   970   000018                     ___aomod@sign:
   971                           	callstack 0
   972   000018                     ctoa@w:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x17
   976   000018                     	ds	1
   977   000019                     ?_abs:
   978                           	callstack 0
   979   000019                     pad@fp:
   980                           	callstack 0
   981   000019                     abs@a:
   982                           	callstack 0
   983   000019                     ___aodiv@quotient:
   984                           	callstack 0
   985                           
   986                           ; 8 bytes @ 0x18
   987   000019                     	ds	2
   988   00001B                     ??_abs:
   989   00001B                     pad@buf:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1A
   993   00001B                     	ds	2
   994   00001D                     pad@p:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x1C
   998   00001D                     	ds	2
   999   00001F                     ??_pad:
  1000   00001F                     ___lodiv@counter:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x1E
  1004   00001F                     	ds	1
  1005   000020                     pad@i:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x1F
  1009   000020                     	ds	2
  1010   000022                     pad@w:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x21
  1014   000022                     	ds	2
  1015   000024                     dtoa@fp:
  1016                           	callstack 0
  1017   000024                     utoa@fp:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x23
  1021   000024                     	ds	2
  1022   000026                     dtoa@d:
  1023                           	callstack 0
  1024   000026                     utoa@d:
  1025                           	callstack 0
  1026                           
  1027                           ; 8 bytes @ 0x25
  1028   000026                     	ds	8
  1029   00002E                     ??_dtoa:
  1030   00002E                     ??_utoa:
  1031                           
  1032                           ; 1 bytes @ 0x2D
  1033   00002E                     	ds	8
  1034   000036                     _dtoa$1574:
  1035                           	callstack 0
  1036   000036                     utoa@w:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x35
  1040   000036                     	ds	2
  1041   000038                     dtoa@p:
  1042                           	callstack 0
  1043   000038                     utoa@p:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x37
  1047   000038                     	ds	2
  1048   00003A                     dtoa@w:
  1049                           	callstack 0
  1050   00003A                     utoa@n:
  1051                           	callstack 0
  1052                           
  1053                           ; 8 bytes @ 0x39
  1054   00003A                     	ds	2
  1055   00003C                     dtoa@n:
  1056                           	callstack 0
  1057                           
  1058                           ; 8 bytes @ 0x3B
  1059   00003C                     	ds	6
  1060   000042                     utoa@i:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x41
  1064   000042                     	ds	2
  1065   000044                     dtoa@i:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x43
  1069   000044                     	ds	2
  1070   000046                     dtoa@s:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x45
  1074   000046                     	ds	1
  1075   000047                     vfpfcnvrt@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x46
  1079   000047                     	ds	2
  1080   000049                     vfpfcnvrt@fmt:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x48
  1084   000049                     	ds	2
  1085   00004B                     vfpfcnvrt@ap:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x4A
  1089   00004B                     	ds	2
  1090   00004D                     ??_vfpfcnvrt:
  1091                           
  1092                           ; 1 bytes @ 0x4C
  1093   00004D                     	ds	4
  1094   000051                     vfprintf@cfmt:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x50
  1098   000051                     	ds	2
  1099   000053                     
  1100                           ; 1 bytes @ 0x52
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 35 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;  sample         16   25[BANK0 ] unsigned short [8]
  1111 ;;  i               1   42[BANK0 ] unsigned char 
  1112 ;;  cmd             1   41[BANK0 ] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  1    wreg      void 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1122 ;;      Params:         0       0       0       0       0       0       0
  1123 ;;      Locals:         0      18       0       0       0       0       0
  1124 ;;      Temps:          0       2       0       0       0       0       0
  1125 ;;      Totals:         0      20       0       0       0       0       0
  1126 ;;Total ram usage:       20 bytes
  1127 ;; Hardware stack levels required when called: 13
  1128 ;; This function calls:
  1129 ;;		_EUSART1_Read
  1130 ;;		_EUSART1_is_rx_ready
  1131 ;;		_SYSTEM_Initialize
  1132 ;;		_TMR0_SetInterruptHandler
  1133 ;;		_TMR0_WriteTimer
  1134 ;;		_convertEchToCm
  1135 ;;		_getEchoPulseDurationForeground
  1136 ;;		_printf
  1137 ;; This function is called by:
  1138 ;;		Startup code after reset
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text0
  1143   0003B0                     __ptext0:
  1144                           	callstack 0
  1145   0003B0                     _main:
  1146                           	callstack 18
  1147   0003B0                     
  1148                           ;main.c: 37:     uint16_t sample[8];;main.c: 38:     uint8_t i;;main.c: 39:     char cmd
      +                          ;;main.c: 41:     SYSTEM_Initialize();
  1149   0003B0  EC75  F00B         	call	_SYSTEM_Initialize	;wreg free
  1150   0003B4                     
  1151                           ;main.c: 46:     TMR0_WriteTimer(0x0000);
  1152   0003B4  0E00               	movlw	0
  1153   0003B6  6E08               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1154   0003B8  0E00               	movlw	0
  1155   0003BA  6E07               	movwf	TMR0_WriteTimer@timerVal^0,c
  1156   0003BC  ECDC  F00B         	call	_TMR0_WriteTimer	;wreg free
  1157   0003C0                     
  1158                           ;main.c: 47:     INTCONbits.TMR0IF = 0;
  1159   0003C0  94F2               	bcf	242,2,c	;volatile
  1160   0003C2                     l321:
  1161   0003C2  A4F2               	btfss	242,2,c	;volatile
  1162   0003C4  EFE6  F001         	goto	u1841
  1163   0003C8  EFE8  F001         	goto	u1840
  1164   0003CC                     u1841:
  1165   0003CC  EFE1  F001         	goto	l321
  1166   0003D0                     u1840:
  1167   0003D0                     
  1168                           ;main.c: 50:     TMR0_SetInterruptHandler(myTMR0ISR);
  1169   0003D0  0E08               	movlw	low _myTMR0ISR
  1170   0003D2  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1171   0003D4  0E17               	movlw	high _myTMR0ISR
  1172   0003D6  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1173   0003D8  ECE1  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  1174   0003DC                     
  1175                           ;main.c: 51:     (INTCONbits.GIE = 1);
  1176   0003DC  8EF2               	bsf	242,7,c	;volatile
  1177   0003DE                     
  1178                           ;main.c: 52:     (INTCONbits.PEIE = 1);
  1179   0003DE  8CF2               	bsf	242,6,c	;volatile
  1180   0003E0                     
  1181                           ;main.c: 54:  printf("Dev'21 Board\r\n");
  1182   0003E0  0EBA               	movlw	low STR_1
  1183   0003E2  0100               	movlb	0	; () banked
  1184   0003E4  6F9D               	movwf	printf@fmt& (0+255),b
  1185   0003E6  0E7F               	movlw	high STR_1
  1186   0003E8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1187   0003EA  EC16  F00B         	call	_printf	;wreg free
  1188   0003EE                     
  1189                           ;main.c: 55:  printf("inLab 13 terminal\r\n");
  1190   0003EE  0E71               	movlw	low STR_2
  1191   0003F0  0100               	movlb	0	; () banked
  1192   0003F2  6F9D               	movwf	printf@fmt& (0+255),b
  1193   0003F4  0E7F               	movlw	high STR_2
  1194   0003F6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1195   0003F8  EC16  F00B         	call	_printf	;wreg free
  1196   0003FC                     
  1197                           ;main.c: 56:     printf("Ultrasonic Connections:\r\n");
  1198   0003FC  0EFD               	movlw	low STR_3
  1199   0003FE  0100               	movlb	0	; () banked
  1200   000400  6F9D               	movwf	printf@fmt& (0+255),b
  1201   000402  0E7E               	movlw	high STR_3
  1202   000404  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1203   000406  EC16  F00B         	call	_printf	;wreg free
  1204   00040A                     
  1205                           ;main.c: 57:     printf("    Vcc: left pin on JP1 header (closest to mini USB).\r\n");
  1206   00040A  0E23               	movlw	low STR_4
  1207   00040C  0100               	movlb	0	; () banked
  1208   00040E  6F9D               	movwf	printf@fmt& (0+255),b
  1209   000410  0E7E               	movlw	high STR_4
  1210   000412  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1211   000414  EC16  F00B         	call	_printf	;wreg free
  1212   000418                     
  1213                           ;main.c: 58:     printf("    Trig:   RC4\r\n");
  1214   000418  0E97               	movlw	low STR_5
  1215   00041A  0100               	movlb	0	; () banked
  1216   00041C  6F9D               	movwf	printf@fmt& (0+255),b
  1217   00041E  0E7F               	movlw	high STR_5
  1218   000420  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1219   000422  EC16  F00B         	call	_printf	;wreg free
  1220   000426                     
  1221                           ;main.c: 59:     printf("    Echo:   RB0\r\n");
  1222   000426  0E85               	movlw	low STR_6
  1223   000428  0100               	movlb	0	; () banked
  1224   00042A  6F9D               	movwf	printf@fmt& (0+255),b
  1225   00042C  0E7F               	movlw	high STR_6
  1226   00042E  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1227   000430  EC16  F00B         	call	_printf	;wreg free
  1228   000434                     
  1229                           ;main.c: 60:     printf("    GND:    GND header pin on PIC breakout header.\r\n");
  1230   000434  0E5C               	movlw	low STR_7
  1231   000436  0100               	movlb	0	; () banked
  1232   000438  6F9D               	movwf	printf@fmt& (0+255),b
  1233   00043A  0E7E               	movlw	high STR_7
  1234   00043C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1235   00043E  EC16  F00B         	call	_printf	;wreg free
  1236   000442                     
  1237                           ;main.c: 61:  printf("\r\n> ");
  1238   000442  0EF6               	movlw	low STR_8
  1239   000444  0100               	movlb	0	; () banked
  1240   000446  6F9D               	movwf	printf@fmt& (0+255),b
  1241   000448  0E7F               	movlw	high STR_8
  1242   00044A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1243   00044C  EC16  F00B         	call	_printf	;wreg free
  1244   000450                     l2850:
  1245                           
  1246                           ;main.c: 65:   if ((EUSART1_is_rx_ready())) {
  1247   000450  ECC4  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1248   000454  0900               	iorlw	0
  1249   000456  B4D8               	btfsc	status,2,c
  1250   000458  EF30  F002         	goto	u1851
  1251   00045C  EF32  F002         	goto	u1850
  1252   000460                     u1851:
  1253   000460  EF28  F002         	goto	l2850
  1254   000464                     u1850:
  1255   000464                     
  1256                           ;main.c: 66:             cmd = EUSART1_Read();
  1257   000464  EC2A  F00B         	call	_EUSART1_Read	;wreg free
  1258   000468  0100               	movlb	0	; () banked
  1259   00046A  6FB5               	movwf	main@cmd& (0+255),b
  1260                           
  1261                           ;main.c: 67:    switch (cmd) {
  1262   00046C  EF5D  F003         	goto	l2934
  1263   000470                     l2854:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;main.c: 70:                     printf("------------------------------\r\n");
  1267   000470  0EBE               	movlw	low STR_9
  1268   000472  6F9D               	movwf	printf@fmt& (0+255),b
  1269   000474  0E7E               	movlw	high STR_9
  1270   000476  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1271   000478  EC16  F00B         	call	_printf	;wreg free
  1272                           
  1273                           ;main.c: 71:                     printf("?: Help menu\r\n");
  1274   00047C  0EC9               	movlw	low STR_10
  1275   00047E  0100               	movlb	0	; () banked
  1276   000480  6F9D               	movwf	printf@fmt& (0+255),b
  1277   000482  0E7F               	movlw	high STR_10
  1278   000484  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1279   000486  EC16  F00B         	call	_printf	;wreg free
  1280                           
  1281                           ;main.c: 72:                     printf("o: k\r\n");
  1282   00048A  0EE5               	movlw	low STR_11
  1283   00048C  0100               	movlb	0	; () banked
  1284   00048E  6F9D               	movwf	printf@fmt& (0+255),b
  1285   000490  0E7F               	movlw	high STR_11
  1286   000492  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1287   000494  EC16  F00B         	call	_printf	;wreg free
  1288                           
  1289                           ;main.c: 73:                     printf("Z: Reset processor\r\n");
  1290   000498  0E5C               	movlw	low STR_12
  1291   00049A  0100               	movlb	0	; () banked
  1292   00049C  6F9D               	movwf	printf@fmt& (0+255),b
  1293   00049E  0E7F               	movlw	high STR_12
  1294   0004A0  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1295   0004A2  EC16  F00B         	call	_printf	;wreg free
  1296                           
  1297                           ;main.c: 74:                     printf("z: Clear the terminal\r\n");
  1298   0004A6  0E17               	movlw	low STR_13
  1299   0004A8  0100               	movlb	0	; () banked
  1300   0004AA  6F9D               	movwf	printf@fmt& (0+255),b
  1301   0004AC  0E7F               	movlw	high STR_13
  1302   0004AE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1303   0004B0  EC16  F00B         	call	_printf	;wreg free
  1304                           
  1305                           ;main.c: 75:                     printf("s: Stream Echo pulse length\r\n");
  1306   0004B4  0EDF               	movlw	low STR_14
  1307   0004B6  0100               	movlb	0	; () banked
  1308   0004B8  6F9D               	movwf	printf@fmt& (0+255),b
  1309   0004BA  0E7E               	movlw	high STR_14
  1310   0004BC  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1311   0004BE  EC16  F00B         	call	_printf	;wreg free
  1312                           
  1313                           ;main.c: 76:                     printf("S: Stream distance\r\n");
  1314   0004C2  0E47               	movlw	low STR_15
  1315   0004C4  0100               	movlb	0	; () banked
  1316   0004C6  6F9D               	movwf	printf@fmt& (0+255),b
  1317   0004C8  0E7F               	movlw	high STR_15
  1318   0004CA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1319   0004CC  EC16  F00B         	call	_printf	;wreg free
  1320                           
  1321                           ;main.c: 77:                     printf("a: gather %d samples in an array and print\r\n"
      +                          ,8);
  1322   0004D0  0E91               	movlw	low STR_16
  1323   0004D2  0100               	movlb	0	; () banked
  1324   0004D4  6F9D               	movwf	printf@fmt& (0+255),b
  1325   0004D6  0E7E               	movlw	high STR_16
  1326   0004D8  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1327   0004DA  0E00               	movlw	0
  1328   0004DC  6FA0               	movwf	(?_printf+3)& (0+255),b
  1329   0004DE  0E08               	movlw	8
  1330   0004E0  6F9F               	movwf	(?_printf+2)& (0+255),b
  1331   0004E2  EC16  F00B         	call	_printf	;wreg free
  1332                           
  1333                           ;main.c: 78:                     printf("------------------------------\r\n");
  1334   0004E6  0EBE               	movlw	low STR_9
  1335   0004E8  0100               	movlb	0	; () banked
  1336   0004EA  6F9D               	movwf	printf@fmt& (0+255),b
  1337   0004EC  0E7E               	movlw	high STR_9
  1338   0004EE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1339   0004F0  EC16  F00B         	call	_printf	;wreg free
  1340                           
  1341                           ;main.c: 79:                     break;
  1342   0004F4  EF28  F002         	goto	l2850
  1343   0004F8                     l2856:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;main.c: 85:                     printf(" k\r\n");
  1347   0004F8  0EE7               	movlw	low (STR_11+2)
  1348   0004FA  6F9D               	movwf	printf@fmt& (0+255),b
  1349   0004FC  0E7F               	movlw	high (STR_11+2)
  1350   0004FE  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1351   000500  EC16  F00B         	call	_printf	;wreg free
  1352                           
  1353                           ;main.c: 86:                     break;
  1354   000504  EF28  F002         	goto	l2850
  1355   000508                     l2858:
  1356                           
  1357                           ; BSR set to: 0
  1358                           ;main.c: 92:                     for (i = 0; i < 40; i++) printf("\n");
  1359   000508  0E00               	movlw	0
  1360   00050A  6FB6               	movwf	main@i& (0+255),b
  1361   00050C                     l2864:
  1362                           
  1363                           ; BSR set to: 0
  1364   00050C  0EDD               	movlw	low (STR_9+31)
  1365   00050E  6F9D               	movwf	printf@fmt& (0+255),b
  1366   000510  0E7E               	movlw	high (STR_9+31)
  1367   000512  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1368   000514  EC16  F00B         	call	_printf	;wreg free
  1369   000518  0100               	movlb	0	; () banked
  1370   00051A  2BB6               	incf	main@i& (0+255),f,b
  1371   00051C                     
  1372                           ; BSR set to: 0
  1373   00051C  0E27               	movlw	39
  1374   00051E  65B6               	cpfsgt	main@i& (0+255),b
  1375   000520  EF94  F002         	goto	u1861
  1376   000524  EF96  F002         	goto	u1860
  1377   000528                     u1861:
  1378   000528  EF86  F002         	goto	l2864
  1379   00052C                     u1860:
  1380   00052C                     
  1381                           ; BSR set to: 0
  1382   00052C  00FF               	reset		;# 
  1383                           
  1384                           ;main.c: 94:                     break;
  1385   00052E  EF28  F002         	goto	l2850
  1386   000532                     l2870:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;main.c: 100:                     for (i = 0; i < 40; i++) printf("\n>");
  1390   000532  0E00               	movlw	0
  1391   000534  6FB6               	movwf	main@i& (0+255),b
  1392   000536                     l2876:
  1393                           
  1394                           ; BSR set to: 0
  1395   000536  0EFB               	movlw	low STR_20
  1396   000538  6F9D               	movwf	printf@fmt& (0+255),b
  1397   00053A  0E7F               	movlw	high STR_20
  1398   00053C  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1399   00053E  EC16  F00B         	call	_printf	;wreg free
  1400   000542  0100               	movlb	0	; () banked
  1401   000544  2BB6               	incf	main@i& (0+255),f,b
  1402   000546                     
  1403                           ; BSR set to: 0
  1404   000546  0E27               	movlw	39
  1405   000548  65B6               	cpfsgt	main@i& (0+255),b
  1406   00054A  EFA9  F002         	goto	u1871
  1407   00054E  EFAB  F002         	goto	u1870
  1408   000552                     u1871:
  1409   000552  EF9B  F002         	goto	l2876
  1410   000556                     u1870:
  1411   000556  EF28  F002         	goto	l2850
  1412   00055A                     l2882:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;main.c: 107:                     printf("press any key to exit\r\n");
  1416   00055A  0E2F               	movlw	low STR_21
  1417   00055C  6F9D               	movwf	printf@fmt& (0+255),b
  1418   00055E  0E7F               	movlw	high STR_21
  1419   000560  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1420   000562  EC16  F00B         	call	_printf	;wreg free
  1421                           
  1422                           ;main.c: 108:                     while(!(EUSART1_is_rx_ready())) {
  1423   000566  EFC2  F002         	goto	l2886
  1424   00056A                     l2884:
  1425                           
  1426                           ;main.c: 109:                         printf("%8u\r",getEchoPulseDurationForeground());
  1427   00056A  0EEC               	movlw	low STR_22
  1428   00056C  0100               	movlb	0	; () banked
  1429   00056E  6F9D               	movwf	printf@fmt& (0+255),b
  1430   000570  0E7F               	movlw	high STR_22
  1431   000572  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1432   000574  ECA5  F009         	call	_getEchoPulseDurationForeground	;wreg free
  1433   000578  C00B  F09F         	movff	?_getEchoPulseDurationForeground,?_printf+2
  1434   00057C  C00C  F0A0         	movff	?_getEchoPulseDurationForeground+1,?_printf+3
  1435   000580  EC16  F00B         	call	_printf	;wreg free
  1436   000584                     l2886:
  1437                           
  1438                           ;main.c: 108:                     while(!(EUSART1_is_rx_ready())) {
  1439   000584  ECC4  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1440   000588  0900               	iorlw	0
  1441   00058A  B4D8               	btfsc	status,2,c
  1442   00058C  EFCA  F002         	goto	u1881
  1443   000590  EFCC  F002         	goto	u1880
  1444   000594                     u1881:
  1445   000594  EFB5  F002         	goto	l2884
  1446   000598                     u1880:
  1447   000598                     
  1448                           ;main.c: 111:                     (void) EUSART1_Read();
  1449   000598  EC2A  F00B         	call	_EUSART1_Read	;wreg free
  1450   00059C                     
  1451                           ;main.c: 112:                     printf("\r\n");
  1452   00059C  0EDC               	movlw	low (STR_9+30)
  1453   00059E  0100               	movlb	0	; () banked
  1454   0005A0  6F9D               	movwf	printf@fmt& (0+255),b
  1455   0005A2  0E7E               	movlw	high (STR_9+30)
  1456   0005A4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1457   0005A6  EC16  F00B         	call	_printf	;wreg free
  1458                           
  1459                           ;main.c: 113:                     break;
  1460   0005AA  EF28  F002         	goto	l2850
  1461   0005AE                     l2892:
  1462                           
  1463                           ; BSR set to: 0
  1464                           ;main.c: 119:                     printf("press any key to exit\r\n");
  1465   0005AE  0E2F               	movlw	low STR_21
  1466   0005B0  6F9D               	movwf	printf@fmt& (0+255),b
  1467   0005B2  0E7F               	movlw	high STR_21
  1468   0005B4  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1469   0005B6  EC16  F00B         	call	_printf	;wreg free
  1470                           
  1471                           ;main.c: 120:                     while(!(EUSART1_is_rx_ready())) {
  1472   0005BA  EFF2  F002         	goto	l2896
  1473   0005BE                     l2894:
  1474                           
  1475                           ;main.c: 121:                         printf("%8u\r",convertEchToCm(getEchoPulseDuration
      +                          Foreground()));
  1476   0005BE  0EEC               	movlw	low STR_22
  1477   0005C0  0100               	movlb	0	; () banked
  1478   0005C2  6F9D               	movwf	printf@fmt& (0+255),b
  1479   0005C4  0E7F               	movlw	high STR_22
  1480   0005C6  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1481   0005C8  ECA5  F009         	call	_getEchoPulseDurationForeground	;wreg free
  1482   0005CC  C00B  F011         	movff	?_getEchoPulseDurationForeground,convertEchToCm@timerCounts
  1483   0005D0  C00C  F012         	movff	?_getEchoPulseDurationForeground+1,convertEchToCm@timerCounts+1
  1484   0005D4  EC64  F00B         	call	_convertEchToCm	;wreg free
  1485   0005D8  C011  F09F         	movff	?_convertEchToCm,?_printf+2
  1486   0005DC  C012  F0A0         	movff	?_convertEchToCm+1,?_printf+3
  1487   0005E0  EC16  F00B         	call	_printf	;wreg free
  1488   0005E4                     l2896:
  1489                           
  1490                           ;main.c: 120:                     while(!(EUSART1_is_rx_ready())) {
  1491   0005E4  ECC4  F00B         	call	_EUSART1_is_rx_ready	;wreg free
  1492   0005E8  0900               	iorlw	0
  1493   0005EA  B4D8               	btfsc	status,2,c
  1494   0005EC  EFFA  F002         	goto	u1891
  1495   0005F0  EFFC  F002         	goto	u1890
  1496   0005F4                     u1891:
  1497   0005F4  EFDF  F002         	goto	l2894
  1498   0005F8                     u1890:
  1499   0005F8                     
  1500                           ;main.c: 123:                     (void) EUSART1_Read();
  1501   0005F8  EC2A  F00B         	call	_EUSART1_Read	;wreg free
  1502   0005FC                     
  1503                           ;main.c: 124:                     printf("\r\n");
  1504   0005FC  0EDC               	movlw	low (STR_9+30)
  1505   0005FE  0100               	movlb	0	; () banked
  1506   000600  6F9D               	movwf	printf@fmt& (0+255),b
  1507   000602  0E7E               	movlw	high (STR_9+30)
  1508   000604  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1509   000606  EC16  F00B         	call	_printf	;wreg free
  1510                           
  1511                           ;main.c: 125:                     break;
  1512   00060A  EF28  F002         	goto	l2850
  1513   00060E                     l2902:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;main.c: 131:                     for (i=0; i<8; i++) {
  1517   00060E  0E00               	movlw	0
  1518   000610  6FB6               	movwf	main@i& (0+255),b
  1519   000612                     l2908:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 132:                         sample[i] = getEchoPulseDurationForeground();
  1523   000612  ECA5  F009         	call	_getEchoPulseDurationForeground	;wreg free
  1524   000616  0100               	movlb	0	; () banked
  1525   000618  51B6               	movf	main@i& (0+255),w,b
  1526   00061A  0D02               	mullw	2
  1527   00061C  0EA5               	movlw	low main@sample
  1528   00061E  24F3               	addwf	243,w,c
  1529   000620  6ED9               	movwf	fsr2l,c
  1530   000622  0E00               	movlw	high main@sample
  1531   000624  20F4               	addwfc	prodh,w,c
  1532   000626  6EDA               	movwf	fsr2h,c
  1533   000628  C00B  FFDE         	movff	?_getEchoPulseDurationForeground,postinc2
  1534   00062C  C00C  FFDD         	movff	?_getEchoPulseDurationForeground+1,postdec2
  1535   000630                     
  1536                           ; BSR set to: 0
  1537                           ;main.c: 133:                     }
  1538   000630  2BB6               	incf	main@i& (0+255),f,b
  1539   000632                     
  1540                           ; BSR set to: 0
  1541   000632  0E07               	movlw	7
  1542   000634  65B6               	cpfsgt	main@i& (0+255),b
  1543   000636  EF1F  F003         	goto	u1901
  1544   00063A  EF21  F003         	goto	u1900
  1545   00063E                     u1901:
  1546   00063E  EF09  F003         	goto	l2908
  1547   000642                     u1900:
  1548   000642                     
  1549                           ; BSR set to: 0
  1550                           ;main.c: 134:                     printf("%d samples\r\n",8);
  1551   000642  0ED8               	movlw	low STR_27
  1552   000644  6F9D               	movwf	printf@fmt& (0+255),b
  1553   000646  0E7F               	movlw	high STR_27
  1554   000648  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1555   00064A  0E00               	movlw	0
  1556   00064C  6FA0               	movwf	(?_printf+3)& (0+255),b
  1557   00064E  0E08               	movlw	8
  1558   000650  6F9F               	movwf	(?_printf+2)& (0+255),b
  1559   000652  EC16  F00B         	call	_printf	;wreg free
  1560   000656                     
  1561                           ;main.c: 135:                     for (i=0; i<8; i++) printf("%u  ",sample[i]);
  1562   000656  0E00               	movlw	0
  1563   000658  0100               	movlb	0	; () banked
  1564   00065A  6FB6               	movwf	main@i& (0+255),b
  1565   00065C                     l2922:
  1566                           
  1567                           ; BSR set to: 0
  1568   00065C  0EF1               	movlw	low STR_28
  1569   00065E  6F9D               	movwf	printf@fmt& (0+255),b
  1570   000660  0E7F               	movlw	high STR_28
  1571   000662  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1572   000664  51B6               	movf	main@i& (0+255),w,b
  1573   000666  0D02               	mullw	2
  1574   000668  0EA5               	movlw	low main@sample
  1575   00066A  24F3               	addwf	243,w,c
  1576   00066C  6ED9               	movwf	fsr2l,c
  1577   00066E  0E00               	movlw	high main@sample
  1578   000670  20F4               	addwfc	prodh,w,c
  1579   000672  6EDA               	movwf	fsr2h,c
  1580   000674  CFDE F09F          	movff	postinc2,?_printf+2
  1581   000678  CFDD F0A0          	movff	postdec2,?_printf+3
  1582   00067C  EC16  F00B         	call	_printf	;wreg free
  1583   000680  0100               	movlb	0	; () banked
  1584   000682  2BB6               	incf	main@i& (0+255),f,b
  1585   000684                     
  1586                           ; BSR set to: 0
  1587   000684  0E07               	movlw	7
  1588   000686  65B6               	cpfsgt	main@i& (0+255),b
  1589   000688  EF48  F003         	goto	u1911
  1590   00068C  EF4A  F003         	goto	u1910
  1591   000690                     u1911:
  1592   000690  EF2E  F003         	goto	l2922
  1593   000694                     u1910:
  1594   000694                     
  1595                           ; BSR set to: 0
  1596                           ;main.c: 136:                     printf("\r\n");
  1597   000694  0EDC               	movlw	low (STR_9+30)
  1598   000696  6F9D               	movwf	printf@fmt& (0+255),b
  1599   000698  0E7E               	movlw	high (STR_9+30)
  1600   00069A  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1601   00069C  EC16  F00B         	call	_printf	;wreg free
  1602                           
  1603                           ;main.c: 137:                     break;
  1604   0006A0  EF28  F002         	goto	l2850
  1605   0006A4                     l2930:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;main.c: 143:                     printf("Unknown key %c\r\n",cmd);
  1609   0006A4  0EA9               	movlw	low STR_30
  1610   0006A6  6F9D               	movwf	printf@fmt& (0+255),b
  1611   0006A8  0E7F               	movlw	high STR_30
  1612   0006AA  6F9E               	movwf	(printf@fmt+1)& (0+255),b
  1613   0006AC  C0B5  F09F         	movff	main@cmd,?_printf+2
  1614   0006B0  6BA0               	clrf	(?_printf+3)& (0+255),b
  1615   0006B2  EC16  F00B         	call	_printf	;wreg free
  1616                           
  1617                           ;main.c: 144:                     break;
  1618   0006B6  EF28  F002         	goto	l2850
  1619   0006BA                     l2934:
  1620                           
  1621                           ; BSR set to: 0
  1622   0006BA  51B5               	movf	main@cmd& (0+255),w,b
  1623   0006BC  6FA3               	movwf	??_main& (0+255),b
  1624   0006BE  6BA4               	clrf	(??_main+1)& (0+255),b
  1625                           
  1626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1627                           ; Switch size 1, requested type "simple"
  1628                           ; Number of cases is 1, Range of values is 0 to 0
  1629                           ; switch strategies available:
  1630                           ; Name         Instructions Cycles
  1631                           ; simple_byte            4     3 (average)
  1632                           ;	Chosen strategy is simple_byte
  1633   0006C0  51A4               	movf	(??_main+1)& (0+255),w,b
  1634   0006C2  0A00               	xorlw	0	; case 0
  1635   0006C4  B4D8               	btfsc	status,2,c
  1636   0006C6  EF67  F003         	goto	l3000
  1637   0006CA  EF52  F003         	goto	l2930
  1638   0006CE                     l3000:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ; Switch size 1, requested type "simple"
  1642                           ; Number of cases is 7, Range of values is 63 to 122
  1643                           ; switch strategies available:
  1644                           ; Name         Instructions Cycles
  1645                           ; simple_byte           22    12 (average)
  1646                           ;	Chosen strategy is simple_byte
  1647   0006CE  51A3               	movf	??_main& (0+255),w,b
  1648   0006D0  0A3F               	xorlw	63	; case 63
  1649   0006D2  B4D8               	btfsc	status,2,c
  1650   0006D4  EF38  F002         	goto	l2854
  1651   0006D8  0A6C               	xorlw	108	; case 83
  1652   0006DA  B4D8               	btfsc	status,2,c
  1653   0006DC  EFD7  F002         	goto	l2892
  1654   0006E0  0A09               	xorlw	9	; case 90
  1655   0006E2  B4D8               	btfsc	status,2,c
  1656   0006E4  EF84  F002         	goto	l2858
  1657   0006E8  0A3B               	xorlw	59	; case 97
  1658   0006EA  B4D8               	btfsc	status,2,c
  1659   0006EC  EF07  F003         	goto	l2902
  1660   0006F0  0A0E               	xorlw	14	; case 111
  1661   0006F2  B4D8               	btfsc	status,2,c
  1662   0006F4  EF7C  F002         	goto	l2856
  1663   0006F8  0A1C               	xorlw	28	; case 115
  1664   0006FA  B4D8               	btfsc	status,2,c
  1665   0006FC  EFAD  F002         	goto	l2882
  1666   000700  0A09               	xorlw	9	; case 122
  1667   000702  B4D8               	btfsc	status,2,c
  1668   000704  EF99  F002         	goto	l2870
  1669   000708  EF52  F003         	goto	l2930
  1670   00070C  EF1F  F000         	goto	start
  1671   000710                     __end_of_main:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _printf *****************
  1675 ;; Defined at:
  1676 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  fmt             2   17[BANK0 ] PTR const unsigned char 
  1679 ;;		 -> STR_30(17), STR_29(3), STR_28(5), STR_27(13), 
  1680 ;;		 -> STR_26(3), STR_25(5), STR_24(24), STR_23(3), 
  1681 ;;		 -> STR_22(5), STR_21(24), STR_20(3), STR_19(2), 
  1682 ;;		 -> STR_18(5), STR_17(33), STR_16(45), STR_15(21), 
  1683 ;;		 -> STR_14(30), STR_13(24), STR_12(21), STR_11(7), 
  1684 ;;		 -> STR_10(15), STR_9(33), STR_8(5), STR_7(53), 
  1685 ;;		 -> STR_6(18), STR_5(18), STR_4(57), STR_3(26), 
  1686 ;;		 -> STR_2(20), STR_1(15), 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  ap              2   21[BANK0 ] PTR void [1]
  1689 ;;		 -> ?_printf(2), 
  1690 ;;  ret             2    0        int 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  2   17[BANK0 ] int 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1700 ;;      Params:         0       4       0       0       0       0       0
  1701 ;;      Locals:         0       2       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0
  1703 ;;      Totals:         0       6       0       0       0       0       0
  1704 ;;Total ram usage:        6 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 12
  1707 ;; This function calls:
  1708 ;;		_vfprintf
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text1
  1715   00162C                     __ptext1:
  1716                           	callstack 0
  1717   00162C                     _printf:
  1718                           	callstack 18
  1719   00162C  0E9F               	movlw	low (?_printf+2)
  1720   00162E  0100               	movlb	0	; () banked
  1721   001630  6FA1               	movwf	printf@ap& (0+255),b
  1722   001632  0E00               	movlw	high (?_printf+2)
  1723   001634  6FA2               	movwf	(printf@ap+1)& (0+255),b
  1724   001636                     
  1725                           ; BSR set to: 0
  1726   001636  0E00               	movlw	0
  1727   001638  6F97               	movwf	vfprintf@fp& (0+255),b
  1728   00163A  0E00               	movlw	0
  1729   00163C  6F98               	movwf	(vfprintf@fp+1)& (0+255),b
  1730   00163E  C09D  F099         	movff	printf@fmt,vfprintf@fmt
  1731   001642  C09E  F09A         	movff	printf@fmt+1,vfprintf@fmt+1
  1732   001646  0EA1               	movlw	low printf@ap
  1733   001648  6F9B               	movwf	vfprintf@ap& (0+255),b
  1734   00164A  0E00               	movlw	high printf@ap
  1735   00164C  6F9C               	movwf	(vfprintf@ap+1)& (0+255),b
  1736   00164E  ECD8  F009         	call	_vfprintf	;wreg free
  1737   001652  0012               	return		;funcret
  1738   001654                     __end_of_printf:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _vfprintf *****************
  1742 ;; Defined at:
  1743 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  1746 ;;		 -> NULL(0), 
  1747 ;;  fmt             2   13[BANK0 ] PTR const unsigned char 
  1748 ;;		 -> STR_30(17), STR_29(3), STR_28(5), STR_27(13), 
  1749 ;;		 -> STR_26(3), STR_25(5), STR_24(24), STR_23(3), 
  1750 ;;		 -> STR_22(5), STR_21(24), STR_20(3), STR_19(2), 
  1751 ;;		 -> STR_18(5), STR_17(33), STR_16(45), STR_15(21), 
  1752 ;;		 -> STR_14(30), STR_13(24), STR_12(21), STR_11(7), 
  1753 ;;		 -> STR_10(15), STR_9(33), STR_8(5), STR_7(53), 
  1754 ;;		 -> STR_6(18), STR_5(18), STR_4(57), STR_3(26), 
  1755 ;;		 -> STR_2(20), STR_1(15), 
  1756 ;;  ap              2   15[BANK0 ] PTR PTR void 
  1757 ;;		 -> printf@ap(2), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  cfmt            2   80[COMRAM] PTR unsigned char 
  1760 ;;		 -> STR_30(17), STR_29(3), STR_28(5), STR_27(13), 
  1761 ;;		 -> STR_26(3), STR_25(5), STR_24(24), STR_23(3), 
  1762 ;;		 -> STR_22(5), STR_21(24), STR_20(3), STR_19(2), 
  1763 ;;		 -> STR_18(5), STR_17(33), STR_16(45), STR_15(21), 
  1764 ;;		 -> STR_14(30), STR_13(24), STR_12(21), STR_11(7), 
  1765 ;;		 -> STR_10(15), STR_9(33), STR_8(5), STR_7(53), 
  1766 ;;		 -> STR_6(18), STR_5(18), STR_4(57), STR_3(26), 
  1767 ;;		 -> STR_2(20), STR_1(15), 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2   11[BANK0 ] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         0       6       0       0       0       0       0
  1778 ;;      Locals:         2       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0
  1780 ;;      Totals:         2       6       0       0       0       0       0
  1781 ;;Total ram usage:        8 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 11
  1784 ;; This function calls:
  1785 ;;		_vfpfcnvrt
  1786 ;; This function is called by:
  1787 ;;		_printf
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text2
  1792   0013B0                     __ptext2:
  1793                           	callstack 0
  1794   0013B0                     _vfprintf:
  1795                           	callstack 18
  1796   0013B0                     
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1798   0013B0  C099  F051         	movff	vfprintf@fmt,vfprintf@cfmt
  1799   0013B4  C09A  F052         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1802   0013B8  EFEC  F009         	goto	l2810
  1803   0013BC                     l2808:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1806   0013BC  C097  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  1807   0013C0  C098  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1808   0013C4  0E51               	movlw	low vfprintf@cfmt
  1809   0013C6  6E49               	movwf	vfpfcnvrt@fmt^0,c
  1810   0013C8  0E00               	movlw	high vfprintf@cfmt
  1811   0013CA  6E4A               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1812   0013CC  C09B  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1813   0013D0  C09C  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1814   0013D4  EC21  F000         	call	_vfpfcnvrt	;wreg free
  1815   0013D8                     l2810:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1818   0013D8  C051  FFF6         	movff	vfprintf@cfmt,tblptrl
  1819   0013DC  C052  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1820   0013E0                     	if	0	;tblptru may be non-zero
  1821   0013E0                     	endif
  1822   0013E0                     	if	0	;tblptru may be non-zero
  1823   0013E0                     	endif
  1824   0013E0  0008               	tblrd		*
  1825   0013E2  50F5               	movf	tablat,w,c
  1826   0013E4  0900               	iorlw	0
  1827   0013E6  A4D8               	btfss	status,2,c
  1828   0013E8  EFF8  F009         	goto	u1831
  1829   0013EC  EFFA  F009         	goto	u1830
  1830   0013F0                     u1831:
  1831   0013F0  EFDE  F009         	goto	l2808
  1832   0013F4                     u1830:
  1833   0013F4                     
  1834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1835   0013F4  0E00               	movlw	0
  1836   0013F6  0100               	movlb	0	; () banked
  1837   0013F8  6F98               	movwf	(?_vfprintf+1)& (0+255),b
  1838   0013FA  0E00               	movlw	0
  1839   0013FC  6F97               	movwf	?_vfprintf& (0+255),b
  1840   0013FE                     
  1841                           ; BSR set to: 0
  1842   0013FE  0012               	return		;funcret
  1843   001400                     __end_of_vfprintf:
  1844                           	callstack 0
  1845                           
  1846 ;; *************** function _vfpfcnvrt *****************
  1847 ;; Defined at:
  1848 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  1851 ;;		 -> NULL(0), 
  1852 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  1853 ;;		 -> vfprintf@cfmt(2), 
  1854 ;;  ap              2   74[COMRAM] PTR PTR void 
  1855 ;;		 -> printf@ap(2), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  convarg         8    1[BANK0 ] struct .
  1858 ;;  cp              2    9[BANK0 ] PTR unsigned char 
  1859 ;;		 -> STR_30(17), STR_29(3), STR_28(5), STR_27(13), 
  1860 ;;		 -> STR_26(3), STR_25(5), STR_24(24), STR_23(3), 
  1861 ;;		 -> STR_22(5), STR_21(24), STR_20(3), STR_19(2), 
  1862 ;;		 -> STR_18(5), STR_17(33), STR_16(45), STR_15(21), 
  1863 ;;		 -> STR_14(30), STR_13(24), STR_12(21), STR_11(7), 
  1864 ;;		 -> STR_10(15), STR_9(33), STR_8(5), STR_7(53), 
  1865 ;;		 -> STR_6(18), STR_5(18), STR_4(57), STR_3(26), 
  1866 ;;		 -> STR_2(20), STR_1(15), 
  1867 ;;  i               2    0        int 
  1868 ;;  done            2    0        int 
  1869 ;;  c               1    0[BANK0 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1879 ;;      Params:         6       0       0       0       0       0       0
  1880 ;;      Locals:         0      11       0       0       0       0       0
  1881 ;;      Temps:          4       0       0       0       0       0       0
  1882 ;;      Totals:        10      11       0       0       0       0       0
  1883 ;;Total ram usage:       21 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 10
  1886 ;; This function calls:
  1887 ;;		_atoi
  1888 ;;		_ctoa
  1889 ;;		_dtoa
  1890 ;;		_fputc
  1891 ;;		_isdigit
  1892 ;;		_utoa
  1893 ;; This function is called by:
  1894 ;;		_vfprintf
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           	psect	text3
  1899   000042                     __ptext3:
  1900                           	callstack 0
  1901   000042                     _vfpfcnvrt:
  1902                           	callstack 18
  1903   000042                     
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1905   000042  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1906   000046  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1907   00004A  CFDE FFF6          	movff	postinc2,tblptrl
  1908   00004E  CFDD FFF7          	movff	postdec2,tblptrh
  1909   000052                     	if	0	;tblptru may be non-zero
  1910   000052                     	endif
  1911   000052                     	if	0	;tblptru may be non-zero
  1912   000052                     	endif
  1913   000052  0008               	tblrd		*
  1914   000054  50F5               	movf	tablat,w,c
  1915   000056  0A25               	xorlw	37
  1916   000058  A4D8               	btfss	status,2,c
  1917   00005A  EF31  F000         	goto	u1521
  1918   00005E  EF33  F000         	goto	u1520
  1919   000062                     u1521:
  1920   000062  EFC3  F001         	goto	l2444
  1921   000066                     u1520:
  1922   000066                     
  1923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1924   000066  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1925   00006A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1926   00006E  2ADE               	incf	postinc2,f,c
  1927   000070  0E00               	movlw	0
  1928   000072  22DD               	addwfc	postdec2,f,c
  1929   000074                     
  1930                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1931   000074  0E00               	movlw	0
  1932   000076  6E54               	movwf	(_width+1)^0,c
  1933   000078  0E00               	movlw	0
  1934   00007A  6E53               	movwf	_width^0,c
  1935   00007C  C053  F057         	movff	_width,_flags
  1936   000080                     
  1937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1938   000080  0100               	movlb	0	; () banked
  1939   000082  6960               	setf	_prec& (0+255),b
  1940   000084  6961               	setf	(_prec+1)& (0+255),b
  1941   000086                     
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  1944   000086  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945   00008A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946   00008E  CFDE FFF6          	movff	postinc2,tblptrl
  1947   000092  CFDD FFF7          	movff	postdec2,tblptrh
  1948   000096                     	if	0	;tblptru may be non-zero
  1949   000096                     	endif
  1950   000096                     	if	0	;tblptru may be non-zero
  1951   000096                     	endif
  1952   000096  0008               	tblrd		*
  1953   000098  50F5               	movf	tablat,w,c
  1954   00009A  0A2A               	xorlw	42
  1955   00009C  A4D8               	btfss	status,2,c
  1956   00009E  EF53  F000         	goto	u1531
  1957   0000A2  EF55  F000         	goto	u1530
  1958   0000A6                     u1531:
  1959   0000A6  EF7E  F000         	goto	l2400
  1960   0000AA                     u1530:
  1961   0000AA                     
  1962                           ; BSR set to: 0
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  1964   0000AA  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1965   0000AE  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1966   0000B2  2ADE               	incf	postinc2,f,c
  1967   0000B4  0E00               	movlw	0
  1968   0000B6  22DD               	addwfc	postdec2,f,c
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  1971   0000B8  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1972   0000BC  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1973   0000C0  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  1974   0000C4  0E02               	movlw	2
  1975   0000C6  26DE               	addwf	postinc2,f,c
  1976   0000C8  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  1977   0000CC  0E00               	movlw	0
  1978   0000CE  22DD               	addwfc	postdec2,f,c
  1979   0000D0  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1980   0000D4  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1981   0000D8  CFDE F053          	movff	postinc2,_width
  1982   0000DC  CFDD F054          	movff	postdec2,_width+1
  1983   0000E0                     
  1984                           ; BSR set to: 0
  1985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  1986   0000E0  BE54               	btfsc	(_width+1)^0,7,c
  1987   0000E2  EF77  F000         	goto	u1540
  1988   0000E6  EF75  F000         	goto	u1541
  1989   0000EA                     u1541:
  1990   0000EA  EFB1  F000         	goto	l2408
  1991   0000EE                     u1540:
  1992   0000EE                     
  1993                           ; BSR set to: 0
  1994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  1995   0000EE  8057               	bsf	_flags^0,0,c
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  1998   0000F0  6C53               	negf	_width^0,c
  1999   0000F2  1E54               	comf	(_width+1)^0,f,c
  2000   0000F4  B0D8               	btfsc	status,0,c
  2001   0000F6  2A54               	incf	(_width+1)^0,f,c
  2002   0000F8  EFB1  F000         	goto	l2408
  2003   0000FC                     l2400:
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2007   0000FC  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008   000100  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009   000104  CFDE F00D          	movff	postinc2,atoi@s
  2010   000108  CFDD F00E          	movff	postdec2,atoi@s+1
  2011   00010C  EC1C  F007         	call	_atoi	;wreg free
  2012   000110  C00D  F053         	movff	?_atoi,_width
  2013   000114  C00E  F054         	movff	?_atoi+1,_width+1
  2014                           
  2015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2016   000118  EF95  F000         	goto	l2406
  2017   00011C                     l2402:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2020   00011C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2021   000120  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2022   000124  2ADE               	incf	postinc2,f,c
  2023   000126  0E00               	movlw	0
  2024   000128  22DD               	addwfc	postdec2,f,c
  2025   00012A                     l2406:
  2026   00012A  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2027   00012E  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2028   000132  CFDE FFF6          	movff	postinc2,tblptrl
  2029   000136  CFDD FFF7          	movff	postdec2,tblptrh
  2030   00013A                     	if	0	;tblptru may be non-zero
  2031   00013A                     	endif
  2032   00013A                     	if	0	;tblptru may be non-zero
  2033   00013A                     	endif
  2034   00013A  0008               	tblrd		*
  2035   00013C  CFF5 F04D          	movff	tablat,??_vfpfcnvrt
  2036   000140  0ED0               	movlw	208
  2037   000142  244D               	addwf	??_vfpfcnvrt^0,w,c
  2038   000144  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  2039   000146  6A4F               	clrf	(??_vfpfcnvrt+2)^0,c
  2040   000148  0EFF               	movlw	255
  2041   00014A  224F               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2042   00014C  504F               	movf	(??_vfpfcnvrt+2)^0,w,c
  2043   00014E  E109               	bnz	u1550
  2044   000150  0E0A               	movlw	10
  2045   000152  5C4E               	subwf	(??_vfpfcnvrt+1)^0,w,c
  2046   000154  A0D8               	btfss	status,0,c
  2047   000156  EFAF  F000         	goto	u1551
  2048   00015A  EFB1  F000         	goto	u1550
  2049   00015E                     u1551:
  2050   00015E  EF8E  F000         	goto	l2402
  2051   000162                     u1550:
  2052   000162                     l2408:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2055   000162  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2056   000166  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2057   00016A  CFDE FFF6          	movff	postinc2,tblptrl
  2058   00016E  CFDD FFF7          	movff	postdec2,tblptrh
  2059   000172                     	if	0	;tblptru may be non-zero
  2060   000172                     	endif
  2061   000172                     	if	0	;tblptru may be non-zero
  2062   000172                     	endif
  2063   000172  0008               	tblrd		*
  2064   000174  50F5               	movf	tablat,w,c
  2065   000176  0A63               	xorlw	99
  2066   000178  A4D8               	btfss	status,2,c
  2067   00017A  EFC1  F000         	goto	u1561
  2068   00017E  EFC3  F000         	goto	u1560
  2069   000182                     u1561:
  2070   000182  EFE7  F000         	goto	l2416
  2071   000186                     u1560:
  2072   000186                     
  2073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2074   000186  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2075   00018A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2076   00018E  2ADE               	incf	postinc2,f,c
  2077   000190  0E00               	movlw	0
  2078   000192  22DD               	addwfc	postdec2,f,c
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2081   000194  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2082   000198  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2083   00019C  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2084   0001A0  0E02               	movlw	2
  2085   0001A2  26DE               	addwf	postinc2,f,c
  2086   0001A4  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2087   0001A8  0E00               	movlw	0
  2088   0001AA  22DD               	addwfc	postdec2,f,c
  2089   0001AC  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2090   0001B0  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2091   0001B4  50DF               	movf	indf2,w,c
  2092   0001B6  0100               	movlb	0	; () banked
  2093   0001B8  6F8C               	movwf	vfpfcnvrt@c& (0+255),b
  2094   0001BA                     
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2097   0001BA  C047  F012         	movff	vfpfcnvrt@fp,ctoa@fp
  2098   0001BE  C048  F013         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2099   0001C2  C08C  F014         	movff	vfpfcnvrt@c,ctoa@c
  2100   0001C6  ECA1  F008         	call	_ctoa	;wreg free
  2101   0001CA  EFD7  F001         	goto	l1149
  2102   0001CE                     l2416:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2105   0001CE  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2106   0001D2  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2107   0001D6  CFDE F095          	movff	postinc2,vfpfcnvrt@cp
  2108   0001DA  CFDD F096          	movff	postdec2,vfpfcnvrt@cp+1
  2109   0001DE                     
  2110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2111   0001DE  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2112   0001E2  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2113   0001E6                     	if	0	;tblptru may be non-zero
  2114   0001E6                     	endif
  2115   0001E6                     	if	0	;tblptru may be non-zero
  2116   0001E6                     	endif
  2117   0001E6  0008               	tblrd		*
  2118   0001E8  50F5               	movf	tablat,w,c
  2119   0001EA  0A64               	xorlw	100
  2120   0001EC  B4D8               	btfsc	status,2,c
  2121   0001EE  EFFB  F000         	goto	u1571
  2122   0001F2  EFFD  F000         	goto	u1570
  2123   0001F6                     u1571:
  2124   0001F6  EF0B  F001         	goto	l2422
  2125   0001FA                     u1570:
  2126   0001FA  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2127   0001FE  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2128   000202                     	if	0	;tblptru may be non-zero
  2129   000202                     	endif
  2130   000202                     	if	0	;tblptru may be non-zero
  2131   000202                     	endif
  2132   000202  0008               	tblrd		*
  2133   000204  50F5               	movf	tablat,w,c
  2134   000206  0A69               	xorlw	105
  2135   000208  A4D8               	btfss	status,2,c
  2136   00020A  EF09  F001         	goto	u1581
  2137   00020E  EF0B  F001         	goto	u1580
  2138   000212                     u1581:
  2139   000212  EF4F  F001         	goto	l2428
  2140   000216                     u1580:
  2141   000216                     l2422:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2144   000216  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2145   00021A  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2146   00021E  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2147   000222  0E02               	movlw	2
  2148   000224  26DE               	addwf	postinc2,f,c
  2149   000226  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2150   00022A  0E00               	movlw	0
  2151   00022C  22DD               	addwfc	postdec2,f,c
  2152   00022E  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2153   000232  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2154   000236  CFDE F08D          	movff	postinc2,vfpfcnvrt@convarg
  2155   00023A  CFDD F08E          	movff	postdec2,vfpfcnvrt@convarg+1
  2156   00023E  0100               	movlb	0	; () banked
  2157   000240  0E00               	movlw	0
  2158   000242  BF8E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2159   000244  0EFF               	movlw	-1
  2160   000246  6F8F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2161   000248  6F90               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2162   00024A  6F91               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2163   00024C  6F92               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2164   00024E  6F93               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2165   000250  6F94               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2168   000252  0E01               	movlw	1
  2169   000254  2595               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2170   000256  6E4D               	movwf	??_vfpfcnvrt^0,c
  2171   000258  0E00               	movlw	0
  2172   00025A  2196               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2173   00025C  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  2174   00025E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2175   000262  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2176   000266  C04D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2177   00026A  C04E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2178   00026E                     
  2179                           ; BSR set to: 0
  2180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2181   00026E  C047  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  2182   000272  C048  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2183   000276  C08D  F026         	movff	vfpfcnvrt@convarg,dtoa@d
  2184   00027A  C08E  F027         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2185   00027E  C08F  F028         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2186   000282  C090  F029         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2187   000286  C091  F02A         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2188   00028A  C092  F02B         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2189   00028E  C093  F02C         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2190   000292  C094  F02D         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2191   000296  EC88  F003         	call	_dtoa	;wreg free
  2192   00029A  EFD7  F001         	goto	l1149
  2193   00029E                     l2428:
  2194   00029E  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2195   0002A2  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2196   0002A6                     	if	0	;tblptru may be non-zero
  2197   0002A6                     	endif
  2198   0002A6                     	if	0	;tblptru may be non-zero
  2199   0002A6                     	endif
  2200   0002A6  0008               	tblrd		*
  2201   0002A8  50F5               	movf	tablat,w,c
  2202   0002AA  0A75               	xorlw	117
  2203   0002AC  A4D8               	btfss	status,2,c
  2204   0002AE  EF5B  F001         	goto	u1591
  2205   0002B2  EF5D  F001         	goto	u1590
  2206   0002B6                     u1591:
  2207   0002B6  EFBA  F001         	goto	l2440
  2208   0002BA                     u1590:
  2209   0002BA                     
  2210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  2211   0002BA  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2212   0002BE  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2213   0002C2  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2214   0002C6  0E02               	movlw	2
  2215   0002C8  26DE               	addwf	postinc2,f,c
  2216   0002CA  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2217   0002CE  0E00               	movlw	0
  2218   0002D0  22DD               	addwfc	postdec2,f,c
  2219   0002D2  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2220   0002D6  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2221   0002DA  CFDE F04F          	movff	postinc2,??_vfpfcnvrt+2
  2222   0002DE  CFDD F050          	movff	postdec2,??_vfpfcnvrt+3
  2223   0002E2  C04F  F08D         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  2224   0002E6  C050  F08E         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  2225   0002EA  0100               	movlb	0	; () banked
  2226   0002EC  6B8F               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  2227   0002EE  6B90               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  2228   0002F0  6B91               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  2229   0002F2  6B92               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  2230   0002F4  6B93               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  2231   0002F6  6B94               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  2234   0002F8  0E01               	movlw	1
  2235   0002FA  2595               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2236   0002FC  6E4D               	movwf	??_vfpfcnvrt^0,c
  2237   0002FE  0E00               	movlw	0
  2238   000300  2196               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2239   000302  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  2240   000304  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241   000308  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242   00030C  C04D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2243   000310  C04E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  2246   000314  EFA4  F001         	goto	l2438
  2247   000318                     l2432:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  2251   000318  C047  F024         	movff	vfpfcnvrt@fp,utoa@fp
  2252   00031C  C048  F025         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  2253   000320  C08D  F026         	movff	vfpfcnvrt@convarg,utoa@d
  2254   000324  C08E  F027         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2255   000328  C08F  F028         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  2256   00032C  C090  F029         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  2257   000330  C091  F02A         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  2258   000334  C092  F02B         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  2259   000338  C093  F02C         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  2260   00033C  C094  F02D         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  2261   000340  ECC6  F004         	call	_utoa	;wreg free
  2262   000344  EFD7  F001         	goto	l1149
  2263   000348                     l2438:
  2264                           
  2265                           ; BSR set to: 0
  2266   000348  C095  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2267   00034C  C096  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2268   000350                     	if	0	;tblptru may be non-zero
  2269   000350                     	endif
  2270   000350                     	if	0	;tblptru may be non-zero
  2271   000350                     	endif
  2272   000350  0008               	tblrd		*
  2273   000352  50F5               	movf	tablat,w,c
  2274   000354  6E4D               	movwf	??_vfpfcnvrt^0,c
  2275   000356  6A4E               	clrf	(??_vfpfcnvrt+1)^0,c
  2276                           
  2277                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2278                           ; Switch size 1, requested type "simple"
  2279                           ; Number of cases is 1, Range of values is 0 to 0
  2280                           ; switch strategies available:
  2281                           ; Name         Instructions Cycles
  2282                           ; simple_byte            4     3 (average)
  2283                           ;	Chosen strategy is simple_byte
  2284   000358  504E               	movf	(??_vfpfcnvrt+1)^0,w,c
  2285   00035A  0A00               	xorlw	0	; case 0
  2286   00035C  B4D8               	btfsc	status,2,c
  2287   00035E  EFB3  F001         	goto	l3002
  2288   000362  EFBA  F001         	goto	l2440
  2289   000366                     l3002:
  2290                           
  2291                           ; BSR set to: 0
  2292                           ; Switch size 1, requested type "simple"
  2293                           ; Number of cases is 1, Range of values is 117 to 117
  2294                           ; switch strategies available:
  2295                           ; Name         Instructions Cycles
  2296                           ; simple_byte            4     3 (average)
  2297                           ;	Chosen strategy is simple_byte
  2298   000366  504D               	movf	??_vfpfcnvrt^0,w,c
  2299   000368  0A75               	xorlw	117	; case 117
  2300   00036A  B4D8               	btfsc	status,2,c
  2301   00036C  EF8C  F001         	goto	l2432
  2302   000370  EFBA  F001         	goto	l2440
  2303   000374                     l2440:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2306   000374  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307   000378  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308   00037C  2ADE               	incf	postinc2,f,c
  2309   00037E  0E00               	movlw	0
  2310   000380  22DD               	addwfc	postdec2,f,c
  2311   000382  EFD7  F001         	goto	l1149
  2312   000386                     l2444:
  2313                           
  2314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2315   000386  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2316   00038A  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2317   00038E  CFDE FFF6          	movff	postinc2,tblptrl
  2318   000392  CFDD FFF7          	movff	postdec2,tblptrh
  2319   000396                     	if	0	;tblptru may be non-zero
  2320   000396                     	endif
  2321   000396                     	if	0	;tblptru may be non-zero
  2322   000396                     	endif
  2323   000396  0008               	tblrd		*
  2324   000398  50F5               	movf	tablat,w,c
  2325   00039A  6E09               	movwf	fputc@c^0,c
  2326   00039C  6A0A               	clrf	(fputc@c+1)^0,c
  2327   00039E  C047  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2328   0003A2  C048  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2329   0003A6  EC5A  F009         	call	_fputc	;wreg free
  2330   0003AA  EFBA  F001         	goto	l2440
  2331   0003AE                     l1149:
  2332   0003AE  0012               	return		;funcret
  2333   0003B0                     __end_of_vfpfcnvrt:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _utoa *****************
  2337 ;; Defined at:
  2338 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  2341 ;;		 -> NULL(0), 
  2342 ;;  d               8   37[COMRAM] unsigned long long 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  n               8   57[COMRAM] unsigned long long 
  2345 ;;  i               2   65[COMRAM] int 
  2346 ;;  p               2   55[COMRAM] int 
  2347 ;;  w               2   53[COMRAM] int 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2357 ;;      Params:        10       0       0       0       0       0       0
  2358 ;;      Locals:        14       0       0       0       0       0       0
  2359 ;;      Temps:          8       0       0       0       0       0       0
  2360 ;;      Totals:        32       0       0       0       0       0       0
  2361 ;;Total ram usage:       32 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 9
  2364 ;; This function calls:
  2365 ;;		___lodiv
  2366 ;;		___lomod
  2367 ;;		_pad
  2368 ;; This function is called by:
  2369 ;;		_vfpfcnvrt
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text4
  2374   00098C                     __ptext4:
  2375                           	callstack 0
  2376   00098C                     _utoa:
  2377                           	callstack 18
  2378   00098C                     
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2380   00098C  0100               	movlb	0	; () banked
  2381   00098E  BF61               	btfsc	(_prec+1)& (0+255),7,b
  2382   000990  EFD4  F004         	goto	u1430
  2383   000994  5161               	movf	(_prec+1)& (0+255),w,b
  2384   000996  E106               	bnz	u1431
  2385   000998  0560               	decf	_prec& (0+255),w,b
  2386   00099A  B0D8               	btfsc	status,0,c
  2387   00099C  EFD2  F004         	goto	u1431
  2388   0009A0  EFD4  F004         	goto	u1430
  2389   0009A4                     u1431:
  2390   0009A4  EFDA  F004         	goto	l1128
  2391   0009A8                     u1430:
  2392   0009A8                     
  2393                           ; BSR set to: 0
  2394   0009A8  0E00               	movlw	0
  2395   0009AA  6E39               	movwf	(utoa@p+1)^0,c
  2396   0009AC  0E01               	movlw	1
  2397   0009AE  6E38               	movwf	utoa@p^0,c
  2398   0009B0  EFDE  F004         	goto	l1130
  2399   0009B4                     l1128:
  2400                           
  2401                           ; BSR set to: 0
  2402   0009B4  C060  F038         	movff	_prec,utoa@p
  2403   0009B8  C061  F039         	movff	_prec+1,utoa@p+1
  2404   0009BC                     l1130:
  2405                           
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2408   0009BC  C053  F036         	movff	_width,utoa@w
  2409   0009C0  C054  F037         	movff	_width+1,utoa@w+1
  2410                           
  2411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2412   0009C4  C026  F03A         	movff	utoa@d,utoa@n
  2413   0009C8  C027  F03B         	movff	utoa@d+1,utoa@n+1
  2414   0009CC  C028  F03C         	movff	utoa@d+2,utoa@n+2
  2415   0009D0  C029  F03D         	movff	utoa@d+3,utoa@n+3
  2416   0009D4  C02A  F03E         	movff	utoa@d+4,utoa@n+4
  2417   0009D8  C02B  F03F         	movff	utoa@d+5,utoa@n+5
  2418   0009DC  C02C  F040         	movff	utoa@d+6,utoa@n+6
  2419   0009E0  C02D  F041         	movff	utoa@d+7,utoa@n+7
  2420   0009E4                     
  2421                           ; BSR set to: 0
  2422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2423   0009E4  0E00               	movlw	0
  2424   0009E6  6E43               	movwf	(utoa@i+1)^0,c
  2425   0009E8  0E1F               	movlw	31
  2426   0009EA  6E42               	movwf	utoa@i^0,c
  2427   0009EC                     
  2428                           ; BSR set to: 0
  2429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2430   0009EC  0E00               	movlw	0
  2431   0009EE  6F8B               	movwf	(_dbuf+31)& (0+255),b
  2432                           
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2434   0009F0  EF70  F005         	goto	l2328
  2435   0009F4                     l2318:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2438   0009F4  0642               	decf	utoa@i^0,f,c
  2439   0009F6  A0D8               	btfss	status,0,c
  2440   0009F8  0643               	decf	(utoa@i+1)^0,f,c
  2441   0009FA                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2443   0009FA  0E6C               	movlw	low _dbuf
  2444   0009FC  2442               	addwf	utoa@i^0,w,c
  2445   0009FE  6ED9               	movwf	fsr2l,c
  2446   000A00  0E00               	movlw	high _dbuf
  2447   000A02  2043               	addwfc	(utoa@i+1)^0,w,c
  2448   000A04  6EDA               	movwf	fsr2h,c
  2449   000A06  C03A  F007         	movff	utoa@n,___lomod@dividend
  2450   000A0A  C03B  F008         	movff	utoa@n+1,___lomod@dividend+1
  2451   000A0E  C03C  F009         	movff	utoa@n+2,___lomod@dividend+2
  2452   000A12  C03D  F00A         	movff	utoa@n+3,___lomod@dividend+3
  2453   000A16  C03E  F00B         	movff	utoa@n+4,___lomod@dividend+4
  2454   000A1A  C03F  F00C         	movff	utoa@n+5,___lomod@dividend+5
  2455   000A1E  C040  F00D         	movff	utoa@n+6,___lomod@dividend+6
  2456   000A22  C041  F00E         	movff	utoa@n+7,___lomod@dividend+7
  2457   000A26  0E0A               	movlw	10
  2458   000A28  6E0F               	movwf	___lomod@divisor^0,c
  2459   000A2A  0E00               	movlw	0
  2460   000A2C  6E10               	movwf	(___lomod@divisor+1)^0,c
  2461   000A2E  0E00               	movlw	0
  2462   000A30  6E11               	movwf	(___lomod@divisor+2)^0,c
  2463   000A32  0E00               	movlw	0
  2464   000A34  6E12               	movwf	(___lomod@divisor+3)^0,c
  2465   000A36  0E00               	movlw	0
  2466   000A38  6E13               	movwf	(___lomod@divisor+4)^0,c
  2467   000A3A  0E00               	movlw	0
  2468   000A3C  6E14               	movwf	(___lomod@divisor+5)^0,c
  2469   000A3E  0E00               	movlw	0
  2470   000A40  6E15               	movwf	(___lomod@divisor+6)^0,c
  2471   000A42  0E00               	movlw	0
  2472   000A44  6E16               	movwf	(___lomod@divisor+7)^0,c
  2473   000A46  EC39  F008         	call	___lomod	;wreg free
  2474   000A4A  C007  F02E         	movff	?___lomod,??_utoa
  2475   000A4E  C008  F02F         	movff	?___lomod+1,??_utoa+1
  2476   000A52  C009  F030         	movff	?___lomod+2,??_utoa+2
  2477   000A56  C00A  F031         	movff	?___lomod+3,??_utoa+3
  2478   000A5A  C00B  F032         	movff	?___lomod+4,??_utoa+4
  2479   000A5E  C00C  F033         	movff	?___lomod+5,??_utoa+5
  2480   000A62  C00D  F034         	movff	?___lomod+6,??_utoa+6
  2481   000A66  C00E  F035         	movff	?___lomod+7,??_utoa+7
  2482   000A6A  502E               	movf	??_utoa^0,w,c
  2483   000A6C  0F30               	addlw	48
  2484   000A6E  6EDF               	movwf	indf2,c
  2485   000A70                     
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2487   000A70  0638               	decf	utoa@p^0,f,c
  2488   000A72  A0D8               	btfss	status,0,c
  2489   000A74  0639               	decf	(utoa@p+1)^0,f,c
  2490   000A76                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2492   000A76  0636               	decf	utoa@w^0,f,c
  2493   000A78  A0D8               	btfss	status,0,c
  2494   000A7A  0637               	decf	(utoa@w+1)^0,f,c
  2495   000A7C                     
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2497   000A7C  C03A  F007         	movff	utoa@n,___lodiv@dividend
  2498   000A80  C03B  F008         	movff	utoa@n+1,___lodiv@dividend+1
  2499   000A84  C03C  F009         	movff	utoa@n+2,___lodiv@dividend+2
  2500   000A88  C03D  F00A         	movff	utoa@n+3,___lodiv@dividend+3
  2501   000A8C  C03E  F00B         	movff	utoa@n+4,___lodiv@dividend+4
  2502   000A90  C03F  F00C         	movff	utoa@n+5,___lodiv@dividend+5
  2503   000A94  C040  F00D         	movff	utoa@n+6,___lodiv@dividend+6
  2504   000A98  C041  F00E         	movff	utoa@n+7,___lodiv@dividend+7
  2505   000A9C  0E0A               	movlw	10
  2506   000A9E  6E0F               	movwf	___lodiv@divisor^0,c
  2507   000AA0  0E00               	movlw	0
  2508   000AA2  6E10               	movwf	(___lodiv@divisor+1)^0,c
  2509   000AA4  0E00               	movlw	0
  2510   000AA6  6E11               	movwf	(___lodiv@divisor+2)^0,c
  2511   000AA8  0E00               	movlw	0
  2512   000AAA  6E12               	movwf	(___lodiv@divisor+3)^0,c
  2513   000AAC  0E00               	movlw	0
  2514   000AAE  6E13               	movwf	(___lodiv@divisor+4)^0,c
  2515   000AB0  0E00               	movlw	0
  2516   000AB2  6E14               	movwf	(___lodiv@divisor+5)^0,c
  2517   000AB4  0E00               	movlw	0
  2518   000AB6  6E15               	movwf	(___lodiv@divisor+6)^0,c
  2519   000AB8  0E00               	movlw	0
  2520   000ABA  6E16               	movwf	(___lodiv@divisor+7)^0,c
  2521   000ABC  ECC1  F007         	call	___lodiv	;wreg free
  2522   000AC0  C007  F03A         	movff	?___lodiv,utoa@n
  2523   000AC4  C008  F03B         	movff	?___lodiv+1,utoa@n+1
  2524   000AC8  C009  F03C         	movff	?___lodiv+2,utoa@n+2
  2525   000ACC  C00A  F03D         	movff	?___lodiv+3,utoa@n+3
  2526   000AD0  C00B  F03E         	movff	?___lodiv+4,utoa@n+4
  2527   000AD4  C00C  F03F         	movff	?___lodiv+5,utoa@n+5
  2528   000AD8  C00D  F040         	movff	?___lodiv+6,utoa@n+6
  2529   000ADC  C00E  F041         	movff	?___lodiv+7,utoa@n+7
  2530   000AE0                     l2328:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2533   000AE0  5042               	movf	utoa@i^0,w,c
  2534   000AE2  1043               	iorwf	(utoa@i+1)^0,w,c
  2535   000AE4  B4D8               	btfsc	status,2,c
  2536   000AE6  EF77  F005         	goto	u1441
  2537   000AEA  EF79  F005         	goto	u1440
  2538   000AEE                     u1441:
  2539   000AEE  EF95  F005         	goto	l2334
  2540   000AF2                     u1440:
  2541   000AF2  503A               	movf	utoa@n^0,w,c
  2542   000AF4  103B               	iorwf	(utoa@n+1)^0,w,c
  2543   000AF6  103C               	iorwf	(utoa@n+2)^0,w,c
  2544   000AF8  103D               	iorwf	(utoa@n+3)^0,w,c
  2545   000AFA  103E               	iorwf	(utoa@n+4)^0,w,c
  2546   000AFC  103F               	iorwf	(utoa@n+5)^0,w,c
  2547   000AFE  1040               	iorwf	(utoa@n+6)^0,w,c
  2548   000B00  1041               	iorwf	(utoa@n+7)^0,w,c
  2549   000B02  A4D8               	btfss	status,2,c
  2550   000B04  EF86  F005         	goto	u1451
  2551   000B08  EF88  F005         	goto	u1450
  2552   000B0C                     u1451:
  2553   000B0C  EFFA  F004         	goto	l2318
  2554   000B10                     u1450:
  2555   000B10  BE39               	btfsc	(utoa@p+1)^0,7,c
  2556   000B12  EF95  F005         	goto	u1460
  2557   000B16  5039               	movf	(utoa@p+1)^0,w,c
  2558   000B18  E106               	bnz	u1461
  2559   000B1A  0438               	decf	utoa@p^0,w,c
  2560   000B1C  B0D8               	btfsc	status,0,c
  2561   000B1E  EF93  F005         	goto	u1461
  2562   000B22  EF95  F005         	goto	u1460
  2563   000B26                     u1461:
  2564   000B26  EFFA  F004         	goto	l2318
  2565   000B2A                     u1460:
  2566   000B2A                     l2334:
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2569   000B2A  C024  F019         	movff	utoa@fp,pad@fp
  2570   000B2E  C025  F01A         	movff	utoa@fp+1,pad@fp+1
  2571   000B32  0E6C               	movlw	low _dbuf
  2572   000B34  2442               	addwf	utoa@i^0,w,c
  2573   000B36  6E1B               	movwf	pad@buf^0,c
  2574   000B38  0E00               	movlw	high _dbuf
  2575   000B3A  2043               	addwfc	(utoa@i+1)^0,w,c
  2576   000B3C  6E1C               	movwf	(pad@buf+1)^0,c
  2577   000B3E  C036  F01D         	movff	utoa@w,pad@p
  2578   000B42  C037  F01E         	movff	utoa@w+1,pad@p+1
  2579   000B46  EC05  F009         	call	_pad	;wreg free
  2580   000B4A  0012               	return		;funcret
  2581   000B4C                     __end_of_utoa:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function ___lomod *****************
  2585 ;; Defined at:
  2586 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dividend        8    6[COMRAM] unsigned long long 
  2589 ;;  divisor         8   14[COMRAM] unsigned long long 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  counter         1   22[COMRAM] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  8    6[COMRAM] unsigned long long 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2601 ;;      Params:        16       0       0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0
  2604 ;;      Totals:        17       0       0       0       0       0       0
  2605 ;;Total ram usage:       17 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 4
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_utoa
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text5
  2616   001072                     __ptext5:
  2617                           	callstack 0
  2618   001072                     ___lomod:
  2619                           	callstack 22
  2620   001072  500F               	movf	___lomod@divisor^0,w,c
  2621   001074  1010               	iorwf	(___lomod@divisor+1)^0,w,c
  2622   001076  1011               	iorwf	(___lomod@divisor+2)^0,w,c
  2623   001078  1012               	iorwf	(___lomod@divisor+3)^0,w,c
  2624   00107A  1013               	iorwf	(___lomod@divisor+4)^0,w,c
  2625   00107C  1014               	iorwf	(___lomod@divisor+5)^0,w,c
  2626   00107E  1015               	iorwf	(___lomod@divisor+6)^0,w,c
  2627   001080  1016               	iorwf	(___lomod@divisor+7)^0,w,c
  2628   001082  B4D8               	btfsc	status,2,c
  2629   001084  EF46  F008         	goto	u1161
  2630   001088  EF48  F008         	goto	u1160
  2631   00108C                     u1161:
  2632   00108C  EF90  F008         	goto	l827
  2633   001090                     u1160:
  2634   001090  0E01               	movlw	1
  2635   001092  6E17               	movwf	___lomod@counter^0,c
  2636   001094  EF56  F008         	goto	l2186
  2637   001098                     l2184:
  2638   001098  90D8               	bcf	status,0,c
  2639   00109A  360F               	rlcf	___lomod@divisor^0,f,c
  2640   00109C  3610               	rlcf	(___lomod@divisor+1)^0,f,c
  2641   00109E  3611               	rlcf	(___lomod@divisor+2)^0,f,c
  2642   0010A0  3612               	rlcf	(___lomod@divisor+3)^0,f,c
  2643   0010A2  3613               	rlcf	(___lomod@divisor+4)^0,f,c
  2644   0010A4  3614               	rlcf	(___lomod@divisor+5)^0,f,c
  2645   0010A6  3615               	rlcf	(___lomod@divisor+6)^0,f,c
  2646   0010A8  3616               	rlcf	(___lomod@divisor+7)^0,f,c
  2647   0010AA  2A17               	incf	___lomod@counter^0,f,c
  2648   0010AC                     l2186:
  2649   0010AC  AE16               	btfss	(___lomod@divisor+7)^0,7,c
  2650   0010AE  EF5B  F008         	goto	u1171
  2651   0010B2  EF5D  F008         	goto	u1170
  2652   0010B6                     u1171:
  2653   0010B6  EF4C  F008         	goto	l2184
  2654   0010BA                     u1170:
  2655   0010BA                     l2188:
  2656   0010BA  500F               	movf	___lomod@divisor^0,w,c
  2657   0010BC  5C07               	subwf	___lomod@dividend^0,w,c
  2658   0010BE  5010               	movf	(___lomod@divisor+1)^0,w,c
  2659   0010C0  5808               	subwfb	(___lomod@dividend+1)^0,w,c
  2660   0010C2  5011               	movf	(___lomod@divisor+2)^0,w,c
  2661   0010C4  5809               	subwfb	(___lomod@dividend+2)^0,w,c
  2662   0010C6  5012               	movf	(___lomod@divisor+3)^0,w,c
  2663   0010C8  580A               	subwfb	(___lomod@dividend+3)^0,w,c
  2664   0010CA  5013               	movf	(___lomod@divisor+4)^0,w,c
  2665   0010CC  580B               	subwfb	(___lomod@dividend+4)^0,w,c
  2666   0010CE  5014               	movf	(___lomod@divisor+5)^0,w,c
  2667   0010D0  580C               	subwfb	(___lomod@dividend+5)^0,w,c
  2668   0010D2  5015               	movf	(___lomod@divisor+6)^0,w,c
  2669   0010D4  580D               	subwfb	(___lomod@dividend+6)^0,w,c
  2670   0010D6  5016               	movf	(___lomod@divisor+7)^0,w,c
  2671   0010D8  580E               	subwfb	(___lomod@dividend+7)^0,w,c
  2672   0010DA  A0D8               	btfss	status,0,c
  2673   0010DC  EF72  F008         	goto	u1181
  2674   0010E0  EF74  F008         	goto	u1180
  2675   0010E4                     u1181:
  2676   0010E4  EF84  F008         	goto	l2192
  2677   0010E8                     u1180:
  2678   0010E8  500F               	movf	___lomod@divisor^0,w,c
  2679   0010EA  5E07               	subwf	___lomod@dividend^0,f,c
  2680   0010EC  5010               	movf	(___lomod@divisor+1)^0,w,c
  2681   0010EE  5A08               	subwfb	(___lomod@dividend+1)^0,f,c
  2682   0010F0  5011               	movf	(___lomod@divisor+2)^0,w,c
  2683   0010F2  5A09               	subwfb	(___lomod@dividend+2)^0,f,c
  2684   0010F4  5012               	movf	(___lomod@divisor+3)^0,w,c
  2685   0010F6  5A0A               	subwfb	(___lomod@dividend+3)^0,f,c
  2686   0010F8  5013               	movf	(___lomod@divisor+4)^0,w,c
  2687   0010FA  5A0B               	subwfb	(___lomod@dividend+4)^0,f,c
  2688   0010FC  5014               	movf	(___lomod@divisor+5)^0,w,c
  2689   0010FE  5A0C               	subwfb	(___lomod@dividend+5)^0,f,c
  2690   001100  5015               	movf	(___lomod@divisor+6)^0,w,c
  2691   001102  5A0D               	subwfb	(___lomod@dividend+6)^0,f,c
  2692   001104  5016               	movf	(___lomod@divisor+7)^0,w,c
  2693   001106  5A0E               	subwfb	(___lomod@dividend+7)^0,f,c
  2694   001108                     l2192:
  2695   001108  90D8               	bcf	status,0,c
  2696   00110A  3216               	rrcf	(___lomod@divisor+7)^0,f,c
  2697   00110C  3215               	rrcf	(___lomod@divisor+6)^0,f,c
  2698   00110E  3214               	rrcf	(___lomod@divisor+5)^0,f,c
  2699   001110  3213               	rrcf	(___lomod@divisor+4)^0,f,c
  2700   001112  3212               	rrcf	(___lomod@divisor+3)^0,f,c
  2701   001114  3211               	rrcf	(___lomod@divisor+2)^0,f,c
  2702   001116  3210               	rrcf	(___lomod@divisor+1)^0,f,c
  2703   001118  320F               	rrcf	___lomod@divisor^0,f,c
  2704   00111A  2E17               	decfsz	___lomod@counter^0,f,c
  2705   00111C  EF5D  F008         	goto	l2188
  2706   001120                     l827:
  2707   001120  C007  F007         	movff	___lomod@dividend,?___lomod
  2708   001124  C008  F008         	movff	___lomod@dividend+1,?___lomod+1
  2709   001128  C009  F009         	movff	___lomod@dividend+2,?___lomod+2
  2710   00112C  C00A  F00A         	movff	___lomod@dividend+3,?___lomod+3
  2711   001130  C00B  F00B         	movff	___lomod@dividend+4,?___lomod+4
  2712   001134  C00C  F00C         	movff	___lomod@dividend+5,?___lomod+5
  2713   001138  C00D  F00D         	movff	___lomod@dividend+6,?___lomod+6
  2714   00113C  C00E  F00E         	movff	___lomod@dividend+7,?___lomod+7
  2715   001140  0012               	return		;funcret
  2716   001142                     __end_of___lomod:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function ___lodiv *****************
  2720 ;; Defined at:
  2721 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  dividend        8    6[COMRAM] unsigned long long 
  2724 ;;  divisor         8   14[COMRAM] unsigned long long 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  quotient        8   22[COMRAM] unsigned long long 
  2727 ;;  counter         1   30[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  8    6[COMRAM] unsigned long long 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2737 ;;      Params:        16       0       0       0       0       0       0
  2738 ;;      Locals:         9       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0
  2740 ;;      Totals:        25       0       0       0       0       0       0
  2741 ;;Total ram usage:       25 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 4
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_utoa
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text6
  2752   000F82                     __ptext6:
  2753                           	callstack 0
  2754   000F82                     ___lodiv:
  2755                           	callstack 22
  2756   000F82  EE20  F017         	lfsr	2,___lodiv@quotient
  2757   000F86  0E07               	movlw	7
  2758   000F88                     u1121:
  2759   000F88  6ADE               	clrf	postinc2,c
  2760   000F8A  06E8               	decf	wreg,f,c
  2761   000F8C  E2FD               	bc	u1121
  2762   000F8E  500F               	movf	___lodiv@divisor^0,w,c
  2763   000F90  1010               	iorwf	(___lodiv@divisor+1)^0,w,c
  2764   000F92  1011               	iorwf	(___lodiv@divisor+2)^0,w,c
  2765   000F94  1012               	iorwf	(___lodiv@divisor+3)^0,w,c
  2766   000F96  1013               	iorwf	(___lodiv@divisor+4)^0,w,c
  2767   000F98  1014               	iorwf	(___lodiv@divisor+5)^0,w,c
  2768   000F9A  1015               	iorwf	(___lodiv@divisor+6)^0,w,c
  2769   000F9C  1016               	iorwf	(___lodiv@divisor+7)^0,w,c
  2770   000F9E  B4D8               	btfsc	status,2,c
  2771   000FA0  EFD4  F007         	goto	u1131
  2772   000FA4  EFD6  F007         	goto	u1130
  2773   000FA8                     u1131:
  2774   000FA8  EF28  F008         	goto	l817
  2775   000FAC                     u1130:
  2776   000FAC  0E01               	movlw	1
  2777   000FAE  6E1F               	movwf	___lodiv@counter^0,c
  2778   000FB0  EFE4  F007         	goto	l2166
  2779   000FB4                     l2164:
  2780   000FB4  90D8               	bcf	status,0,c
  2781   000FB6  360F               	rlcf	___lodiv@divisor^0,f,c
  2782   000FB8  3610               	rlcf	(___lodiv@divisor+1)^0,f,c
  2783   000FBA  3611               	rlcf	(___lodiv@divisor+2)^0,f,c
  2784   000FBC  3612               	rlcf	(___lodiv@divisor+3)^0,f,c
  2785   000FBE  3613               	rlcf	(___lodiv@divisor+4)^0,f,c
  2786   000FC0  3614               	rlcf	(___lodiv@divisor+5)^0,f,c
  2787   000FC2  3615               	rlcf	(___lodiv@divisor+6)^0,f,c
  2788   000FC4  3616               	rlcf	(___lodiv@divisor+7)^0,f,c
  2789   000FC6  2A1F               	incf	___lodiv@counter^0,f,c
  2790   000FC8                     l2166:
  2791   000FC8  AE16               	btfss	(___lodiv@divisor+7)^0,7,c
  2792   000FCA  EFE9  F007         	goto	u1141
  2793   000FCE  EFEB  F007         	goto	u1140
  2794   000FD2                     u1141:
  2795   000FD2  EFDA  F007         	goto	l2164
  2796   000FD6                     u1140:
  2797   000FD6                     l2168:
  2798   000FD6  90D8               	bcf	status,0,c
  2799   000FD8  3617               	rlcf	___lodiv@quotient^0,f,c
  2800   000FDA  3618               	rlcf	(___lodiv@quotient+1)^0,f,c
  2801   000FDC  3619               	rlcf	(___lodiv@quotient+2)^0,f,c
  2802   000FDE  361A               	rlcf	(___lodiv@quotient+3)^0,f,c
  2803   000FE0  361B               	rlcf	(___lodiv@quotient+4)^0,f,c
  2804   000FE2  361C               	rlcf	(___lodiv@quotient+5)^0,f,c
  2805   000FE4  361D               	rlcf	(___lodiv@quotient+6)^0,f,c
  2806   000FE6  361E               	rlcf	(___lodiv@quotient+7)^0,f,c
  2807   000FE8  500F               	movf	___lodiv@divisor^0,w,c
  2808   000FEA  5C07               	subwf	___lodiv@dividend^0,w,c
  2809   000FEC  5010               	movf	(___lodiv@divisor+1)^0,w,c
  2810   000FEE  5808               	subwfb	(___lodiv@dividend+1)^0,w,c
  2811   000FF0  5011               	movf	(___lodiv@divisor+2)^0,w,c
  2812   000FF2  5809               	subwfb	(___lodiv@dividend+2)^0,w,c
  2813   000FF4  5012               	movf	(___lodiv@divisor+3)^0,w,c
  2814   000FF6  580A               	subwfb	(___lodiv@dividend+3)^0,w,c
  2815   000FF8  5013               	movf	(___lodiv@divisor+4)^0,w,c
  2816   000FFA  580B               	subwfb	(___lodiv@dividend+4)^0,w,c
  2817   000FFC  5014               	movf	(___lodiv@divisor+5)^0,w,c
  2818   000FFE  580C               	subwfb	(___lodiv@dividend+5)^0,w,c
  2819   001000  5015               	movf	(___lodiv@divisor+6)^0,w,c
  2820   001002  580D               	subwfb	(___lodiv@dividend+6)^0,w,c
  2821   001004  5016               	movf	(___lodiv@divisor+7)^0,w,c
  2822   001006  580E               	subwfb	(___lodiv@dividend+7)^0,w,c
  2823   001008  A0D8               	btfss	status,0,c
  2824   00100A  EF09  F008         	goto	u1151
  2825   00100E  EF0B  F008         	goto	u1150
  2826   001012                     u1151:
  2827   001012  EF1C  F008         	goto	l2176
  2828   001016                     u1150:
  2829   001016  500F               	movf	___lodiv@divisor^0,w,c
  2830   001018  5E07               	subwf	___lodiv@dividend^0,f,c
  2831   00101A  5010               	movf	(___lodiv@divisor+1)^0,w,c
  2832   00101C  5A08               	subwfb	(___lodiv@dividend+1)^0,f,c
  2833   00101E  5011               	movf	(___lodiv@divisor+2)^0,w,c
  2834   001020  5A09               	subwfb	(___lodiv@dividend+2)^0,f,c
  2835   001022  5012               	movf	(___lodiv@divisor+3)^0,w,c
  2836   001024  5A0A               	subwfb	(___lodiv@dividend+3)^0,f,c
  2837   001026  5013               	movf	(___lodiv@divisor+4)^0,w,c
  2838   001028  5A0B               	subwfb	(___lodiv@dividend+4)^0,f,c
  2839   00102A  5014               	movf	(___lodiv@divisor+5)^0,w,c
  2840   00102C  5A0C               	subwfb	(___lodiv@dividend+5)^0,f,c
  2841   00102E  5015               	movf	(___lodiv@divisor+6)^0,w,c
  2842   001030  5A0D               	subwfb	(___lodiv@dividend+6)^0,f,c
  2843   001032  5016               	movf	(___lodiv@divisor+7)^0,w,c
  2844   001034  5A0E               	subwfb	(___lodiv@dividend+7)^0,f,c
  2845   001036  8017               	bsf	___lodiv@quotient^0,0,c
  2846   001038                     l2176:
  2847   001038  90D8               	bcf	status,0,c
  2848   00103A  3216               	rrcf	(___lodiv@divisor+7)^0,f,c
  2849   00103C  3215               	rrcf	(___lodiv@divisor+6)^0,f,c
  2850   00103E  3214               	rrcf	(___lodiv@divisor+5)^0,f,c
  2851   001040  3213               	rrcf	(___lodiv@divisor+4)^0,f,c
  2852   001042  3212               	rrcf	(___lodiv@divisor+3)^0,f,c
  2853   001044  3211               	rrcf	(___lodiv@divisor+2)^0,f,c
  2854   001046  3210               	rrcf	(___lodiv@divisor+1)^0,f,c
  2855   001048  320F               	rrcf	___lodiv@divisor^0,f,c
  2856   00104A  2E1F               	decfsz	___lodiv@counter^0,f,c
  2857   00104C  EFEB  F007         	goto	l2168
  2858   001050                     l817:
  2859   001050  C017  F007         	movff	___lodiv@quotient,?___lodiv
  2860   001054  C018  F008         	movff	___lodiv@quotient+1,?___lodiv+1
  2861   001058  C019  F009         	movff	___lodiv@quotient+2,?___lodiv+2
  2862   00105C  C01A  F00A         	movff	___lodiv@quotient+3,?___lodiv+3
  2863   001060  C01B  F00B         	movff	___lodiv@quotient+4,?___lodiv+4
  2864   001064  C01C  F00C         	movff	___lodiv@quotient+5,?___lodiv+5
  2865   001068  C01D  F00D         	movff	___lodiv@quotient+6,?___lodiv+6
  2866   00106C  C01E  F00E         	movff	___lodiv@quotient+7,?___lodiv+7
  2867   001070  0012               	return		;funcret
  2868   001072                     __end_of___lodiv:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _dtoa *****************
  2872 ;; Defined at:
  2873 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  2876 ;;		 -> NULL(0), 
  2877 ;;  d               8   37[COMRAM] long long 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  n               8   59[COMRAM] long long 
  2880 ;;  i               2   67[COMRAM] int 
  2881 ;;  w               2   57[COMRAM] int 
  2882 ;;  p               2   55[COMRAM] int 
  2883 ;;  s               1   69[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2893 ;;      Params:        10       0       0       0       0       0       0
  2894 ;;      Locals:        17       0       0       0       0       0       0
  2895 ;;      Temps:          8       0       0       0       0       0       0
  2896 ;;      Totals:        35       0       0       0       0       0       0
  2897 ;;Total ram usage:       35 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 9
  2900 ;; This function calls:
  2901 ;;		___aodiv
  2902 ;;		___aomod
  2903 ;;		_abs
  2904 ;;		_pad
  2905 ;; This function is called by:
  2906 ;;		_vfpfcnvrt
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text7
  2911   000710                     __ptext7:
  2912                           	callstack 0
  2913   000710                     _dtoa:
  2914                           	callstack 18
  2915   000710                     
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2917   000710  C026  F03C         	movff	dtoa@d,dtoa@n
  2918   000714  C027  F03D         	movff	dtoa@d+1,dtoa@n+1
  2919   000718  C028  F03E         	movff	dtoa@d+2,dtoa@n+2
  2920   00071C  C029  F03F         	movff	dtoa@d+3,dtoa@n+3
  2921   000720  C02A  F040         	movff	dtoa@d+4,dtoa@n+4
  2922   000724  C02B  F041         	movff	dtoa@d+5,dtoa@n+5
  2923   000728  C02C  F042         	movff	dtoa@d+6,dtoa@n+6
  2924   00072C  C02D  F043         	movff	dtoa@d+7,dtoa@n+7
  2925   000730                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2927   000730  BE43               	btfsc	(dtoa@n+7)^0,7,c
  2928   000732  EF9D  F003         	goto	u1331
  2929   000736  EFA0  F003         	goto	u1330
  2930   00073A                     u1331:
  2931   00073A  0E01               	movlw	1
  2932   00073C  EFA1  F003         	goto	u1340
  2933   000740                     u1330:
  2934   000740  0E00               	movlw	0
  2935   000742                     u1340:
  2936   000742  6E46               	movwf	dtoa@s^0,c
  2937   000744                     
  2938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2939   000744  5046               	movf	dtoa@s^0,w,c
  2940   000746  B4D8               	btfsc	status,2,c
  2941   000748  EFA8  F003         	goto	u1351
  2942   00074C  EFAA  F003         	goto	u1350
  2943   000750                     u1351:
  2944   000750  EFBA  F003         	goto	l2266
  2945   000754                     u1350:
  2946   000754                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2948   000754  1E43               	comf	(dtoa@n+7)^0,f,c
  2949   000756  1E42               	comf	(dtoa@n+6)^0,f,c
  2950   000758  1E41               	comf	(dtoa@n+5)^0,f,c
  2951   00075A  1E40               	comf	(dtoa@n+4)^0,f,c
  2952   00075C  1E3F               	comf	(dtoa@n+3)^0,f,c
  2953   00075E  1E3E               	comf	(dtoa@n+2)^0,f,c
  2954   000760  1E3D               	comf	(dtoa@n+1)^0,f,c
  2955   000762  6C3C               	negf	dtoa@n^0,c
  2956   000764  0E00               	movlw	0
  2957   000766  223D               	addwfc	(dtoa@n+1)^0,f,c
  2958   000768  223E               	addwfc	(dtoa@n+2)^0,f,c
  2959   00076A  223F               	addwfc	(dtoa@n+3)^0,f,c
  2960   00076C  2240               	addwfc	(dtoa@n+4)^0,f,c
  2961   00076E  2241               	addwfc	(dtoa@n+5)^0,f,c
  2962   000770  2242               	addwfc	(dtoa@n+6)^0,f,c
  2963   000772  2243               	addwfc	(dtoa@n+7)^0,f,c
  2964   000774                     l2266:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2967   000774  0100               	movlb	0	; () banked
  2968   000776  BF61               	btfsc	(_prec+1)& (0+255),7,b
  2969   000778  EFC8  F003         	goto	u1360
  2970   00077C  5161               	movf	(_prec+1)& (0+255),w,b
  2971   00077E  E106               	bnz	u1361
  2972   000780  0560               	decf	_prec& (0+255),w,b
  2973   000782  B0D8               	btfsc	status,0,c
  2974   000784  EFC6  F003         	goto	u1361
  2975   000788  EFC8  F003         	goto	u1360
  2976   00078C                     u1361:
  2977   00078C  EFCE  F003         	goto	l1110
  2978   000790                     u1360:
  2979   000790                     
  2980                           ; BSR set to: 0
  2981   000790  0E00               	movlw	0
  2982   000792  6E39               	movwf	(dtoa@p+1)^0,c
  2983   000794  0E01               	movlw	1
  2984   000796  6E38               	movwf	dtoa@p^0,c
  2985   000798  EFD2  F003         	goto	l1112
  2986   00079C                     l1110:
  2987                           
  2988                           ; BSR set to: 0
  2989   00079C  C060  F038         	movff	_prec,dtoa@p
  2990   0007A0  C061  F039         	movff	_prec+1,dtoa@p+1
  2991   0007A4                     l1112:
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2995   0007A4  C053  F03A         	movff	_width,dtoa@w
  2996   0007A8  C054  F03B         	movff	_width+1,dtoa@w+1
  2997   0007AC                     
  2998                           ; BSR set to: 0
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3000   0007AC  5046               	movf	dtoa@s^0,w,c
  3001   0007AE  B4D8               	btfsc	status,2,c
  3002   0007B0  EFDC  F003         	goto	u1371
  3003   0007B4  EFDE  F003         	goto	u1370
  3004   0007B8                     u1371:
  3005   0007B8  EFF5  F003         	goto	l1113
  3006   0007BC                     u1370:
  3007   0007BC                     
  3008                           ; BSR set to: 0
  3009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3010   0007BC  063A               	decf	dtoa@w^0,f,c
  3011   0007BE  A0D8               	btfss	status,0,c
  3012   0007C0  063B               	decf	(dtoa@w+1)^0,f,c
  3013   0007C2                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3016   0007C2  5046               	movf	dtoa@s^0,w,c
  3017   0007C4  A4D8               	btfss	status,2,c
  3018   0007C6  EFE7  F003         	goto	u1381
  3019   0007CA  EFE9  F003         	goto	u1380
  3020   0007CE                     u1381:
  3021   0007CE  EFEF  F003         	goto	l2278
  3022   0007D2                     u1380:
  3023   0007D2                     
  3024                           ; BSR set to: 0
  3025   0007D2  0E00               	movlw	0
  3026   0007D4  6E37               	movwf	(_dtoa$1574+1)^0,c
  3027   0007D6  0E2B               	movlw	43
  3028   0007D8  6E36               	movwf	_dtoa$1574^0,c
  3029   0007DA  EFF3  F003         	goto	l2280
  3030   0007DE                     l2278:
  3031                           
  3032                           ; BSR set to: 0
  3033   0007DE  0E00               	movlw	0
  3034   0007E0  6E37               	movwf	(_dtoa$1574+1)^0,c
  3035   0007E2  0E2D               	movlw	45
  3036   0007E4  6E36               	movwf	_dtoa$1574^0,c
  3037   0007E6                     l2280:
  3038                           
  3039                           ; BSR set to: 0
  3040   0007E6  C036  F046         	movff	_dtoa$1574,dtoa@s
  3041   0007EA                     l1113:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3045   0007EA  0E00               	movlw	0
  3046   0007EC  6E45               	movwf	(dtoa@i+1)^0,c
  3047   0007EE  0E1F               	movlw	31
  3048   0007F0  6E44               	movwf	dtoa@i^0,c
  3049   0007F2                     
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3052   0007F2  0E00               	movlw	0
  3053   0007F4  6F8B               	movwf	(_dbuf+31)& (0+255),b
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3056   0007F6  EF79  F004         	goto	l2294
  3057   0007FA                     l2284:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3060   0007FA  0644               	decf	dtoa@i^0,f,c
  3061   0007FC  A0D8               	btfss	status,0,c
  3062   0007FE  0645               	decf	(dtoa@i+1)^0,f,c
  3063   000800                     
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3065   000800  0E6C               	movlw	low _dbuf
  3066   000802  2444               	addwf	dtoa@i^0,w,c
  3067   000804  6ED9               	movwf	fsr2l,c
  3068   000806  0E00               	movlw	high _dbuf
  3069   000808  2045               	addwfc	(dtoa@i+1)^0,w,c
  3070   00080A  6EDA               	movwf	fsr2h,c
  3071   00080C  C03C  F007         	movff	dtoa@n,___aomod@dividend
  3072   000810  C03D  F008         	movff	dtoa@n+1,___aomod@dividend+1
  3073   000814  C03E  F009         	movff	dtoa@n+2,___aomod@dividend+2
  3074   000818  C03F  F00A         	movff	dtoa@n+3,___aomod@dividend+3
  3075   00081C  C040  F00B         	movff	dtoa@n+4,___aomod@dividend+4
  3076   000820  C041  F00C         	movff	dtoa@n+5,___aomod@dividend+5
  3077   000824  C042  F00D         	movff	dtoa@n+6,___aomod@dividend+6
  3078   000828  C043  F00E         	movff	dtoa@n+7,___aomod@dividend+7
  3079   00082C  0E0A               	movlw	10
  3080   00082E  6E0F               	movwf	___aomod@divisor^0,c
  3081   000830  0E00               	movlw	0
  3082   000832  6E10               	movwf	(___aomod@divisor+1)^0,c
  3083   000834  0E00               	movlw	0
  3084   000836  6E11               	movwf	(___aomod@divisor+2)^0,c
  3085   000838  0E00               	movlw	0
  3086   00083A  6E12               	movwf	(___aomod@divisor+3)^0,c
  3087   00083C  0E00               	movlw	0
  3088   00083E  6E13               	movwf	(___aomod@divisor+4)^0,c
  3089   000840  0E00               	movlw	0
  3090   000842  6E14               	movwf	(___aomod@divisor+5)^0,c
  3091   000844  0E00               	movlw	0
  3092   000846  6E15               	movwf	(___aomod@divisor+6)^0,c
  3093   000848  0E00               	movlw	0
  3094   00084A  6E16               	movwf	(___aomod@divisor+7)^0,c
  3095   00084C  EC6A  F006         	call	___aomod	;wreg free
  3096   000850  C007  F02E         	movff	?___aomod,??_dtoa
  3097   000854  C008  F02F         	movff	?___aomod+1,??_dtoa+1
  3098   000858  C009  F030         	movff	?___aomod+2,??_dtoa+2
  3099   00085C  C00A  F031         	movff	?___aomod+3,??_dtoa+3
  3100   000860  C00B  F032         	movff	?___aomod+4,??_dtoa+4
  3101   000864  C00C  F033         	movff	?___aomod+5,??_dtoa+5
  3102   000868  C00D  F034         	movff	?___aomod+6,??_dtoa+6
  3103   00086C  C00E  F035         	movff	?___aomod+7,??_dtoa+7
  3104   000870  C02E  F019         	movff	??_dtoa,abs@a
  3105   000874  C02F  F01A         	movff	??_dtoa+1,abs@a+1
  3106   000878  EC45  F00A         	call	_abs	;wreg free
  3107   00087C  5019               	movf	?_abs^0,w,c
  3108   00087E  0F30               	addlw	48
  3109   000880  6EDF               	movwf	indf2,c
  3110   000882                     
  3111                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3112   000882  0638               	decf	dtoa@p^0,f,c
  3113   000884  A0D8               	btfss	status,0,c
  3114   000886  0639               	decf	(dtoa@p+1)^0,f,c
  3115   000888                     
  3116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3117   000888  063A               	decf	dtoa@w^0,f,c
  3118   00088A  A0D8               	btfss	status,0,c
  3119   00088C  063B               	decf	(dtoa@w+1)^0,f,c
  3120   00088E                     
  3121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3122   00088E  C03C  F007         	movff	dtoa@n,___aodiv@dividend
  3123   000892  C03D  F008         	movff	dtoa@n+1,___aodiv@dividend+1
  3124   000896  C03E  F009         	movff	dtoa@n+2,___aodiv@dividend+2
  3125   00089A  C03F  F00A         	movff	dtoa@n+3,___aodiv@dividend+3
  3126   00089E  C040  F00B         	movff	dtoa@n+4,___aodiv@dividend+4
  3127   0008A2  C041  F00C         	movff	dtoa@n+5,___aodiv@dividend+5
  3128   0008A6  C042  F00D         	movff	dtoa@n+6,___aodiv@dividend+6
  3129   0008AA  C043  F00E         	movff	dtoa@n+7,___aodiv@dividend+7
  3130   0008AE  0E0A               	movlw	10
  3131   0008B0  6E0F               	movwf	___aodiv@divisor^0,c
  3132   0008B2  0E00               	movlw	0
  3133   0008B4  6E10               	movwf	(___aodiv@divisor+1)^0,c
  3134   0008B6  0E00               	movlw	0
  3135   0008B8  6E11               	movwf	(___aodiv@divisor+2)^0,c
  3136   0008BA  0E00               	movlw	0
  3137   0008BC  6E12               	movwf	(___aodiv@divisor+3)^0,c
  3138   0008BE  0E00               	movlw	0
  3139   0008C0  6E13               	movwf	(___aodiv@divisor+4)^0,c
  3140   0008C2  0E00               	movlw	0
  3141   0008C4  6E14               	movwf	(___aodiv@divisor+5)^0,c
  3142   0008C6  0E00               	movlw	0
  3143   0008C8  6E15               	movwf	(___aodiv@divisor+6)^0,c
  3144   0008CA  0E00               	movlw	0
  3145   0008CC  6E16               	movwf	(___aodiv@divisor+7)^0,c
  3146   0008CE  ECA6  F005         	call	___aodiv	;wreg free
  3147   0008D2  C007  F03C         	movff	?___aodiv,dtoa@n
  3148   0008D6  C008  F03D         	movff	?___aodiv+1,dtoa@n+1
  3149   0008DA  C009  F03E         	movff	?___aodiv+2,dtoa@n+2
  3150   0008DE  C00A  F03F         	movff	?___aodiv+3,dtoa@n+3
  3151   0008E2  C00B  F040         	movff	?___aodiv+4,dtoa@n+4
  3152   0008E6  C00C  F041         	movff	?___aodiv+5,dtoa@n+5
  3153   0008EA  C00D  F042         	movff	?___aodiv+6,dtoa@n+6
  3154   0008EE  C00E  F043         	movff	?___aodiv+7,dtoa@n+7
  3155   0008F2                     l2294:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3158   0008F2  BE45               	btfsc	(dtoa@i+1)^0,7,c
  3159   0008F4  EF84  F004         	goto	u1391
  3160   0008F8  5045               	movf	(dtoa@i+1)^0,w,c
  3161   0008FA  E108               	bnz	u1390
  3162   0008FC  0444               	decf	dtoa@i^0,w,c
  3163   0008FE  A0D8               	btfss	status,0,c
  3164   000900  EF84  F004         	goto	u1391
  3165   000904  EF86  F004         	goto	u1390
  3166   000908                     u1391:
  3167   000908  EFA2  F004         	goto	l2300
  3168   00090C                     u1390:
  3169   00090C  503C               	movf	dtoa@n^0,w,c
  3170   00090E  103D               	iorwf	(dtoa@n+1)^0,w,c
  3171   000910  103E               	iorwf	(dtoa@n+2)^0,w,c
  3172   000912  103F               	iorwf	(dtoa@n+3)^0,w,c
  3173   000914  1040               	iorwf	(dtoa@n+4)^0,w,c
  3174   000916  1041               	iorwf	(dtoa@n+5)^0,w,c
  3175   000918  1042               	iorwf	(dtoa@n+6)^0,w,c
  3176   00091A  1043               	iorwf	(dtoa@n+7)^0,w,c
  3177   00091C  A4D8               	btfss	status,2,c
  3178   00091E  EF93  F004         	goto	u1401
  3179   000922  EF95  F004         	goto	u1400
  3180   000926                     u1401:
  3181   000926  EFFD  F003         	goto	l2284
  3182   00092A                     u1400:
  3183   00092A  BE39               	btfsc	(dtoa@p+1)^0,7,c
  3184   00092C  EFA2  F004         	goto	u1410
  3185   000930  5039               	movf	(dtoa@p+1)^0,w,c
  3186   000932  E106               	bnz	u1411
  3187   000934  0438               	decf	dtoa@p^0,w,c
  3188   000936  B0D8               	btfsc	status,0,c
  3189   000938  EFA0  F004         	goto	u1411
  3190   00093C  EFA2  F004         	goto	u1410
  3191   000940                     u1411:
  3192   000940  EFFD  F003         	goto	l2284
  3193   000944                     u1410:
  3194   000944                     l2300:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3197   000944  5046               	movf	dtoa@s^0,w,c
  3198   000946  B4D8               	btfsc	status,2,c
  3199   000948  EFA8  F004         	goto	u1421
  3200   00094C  EFAA  F004         	goto	u1420
  3201   000950                     u1421:
  3202   000950  EFB5  F004         	goto	l2306
  3203   000954                     u1420:
  3204   000954                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3206   000954  0644               	decf	dtoa@i^0,f,c
  3207   000956  A0D8               	btfss	status,0,c
  3208   000958  0645               	decf	(dtoa@i+1)^0,f,c
  3209   00095A                     
  3210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3211   00095A  0E6C               	movlw	low _dbuf
  3212   00095C  2444               	addwf	dtoa@i^0,w,c
  3213   00095E  6ED9               	movwf	fsr2l,c
  3214   000960  0E00               	movlw	high _dbuf
  3215   000962  2045               	addwfc	(dtoa@i+1)^0,w,c
  3216   000964  6EDA               	movwf	fsr2h,c
  3217   000966  C046  FFDF         	movff	dtoa@s,indf2
  3218   00096A                     l2306:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3221   00096A  C024  F019         	movff	dtoa@fp,pad@fp
  3222   00096E  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  3223   000972  0E6C               	movlw	low _dbuf
  3224   000974  2444               	addwf	dtoa@i^0,w,c
  3225   000976  6E1B               	movwf	pad@buf^0,c
  3226   000978  0E00               	movlw	high _dbuf
  3227   00097A  2045               	addwfc	(dtoa@i+1)^0,w,c
  3228   00097C  6E1C               	movwf	(pad@buf+1)^0,c
  3229   00097E  C03A  F01D         	movff	dtoa@w,pad@p
  3230   000982  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  3231   000986  EC05  F009         	call	_pad	;wreg free
  3232   00098A  0012               	return		;funcret
  3233   00098C                     __end_of_dtoa:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _pad *****************
  3237 ;; Defined at:
  3238 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  3241 ;;		 -> NULL(0), 
  3242 ;;  buf             2   26[COMRAM] PTR unsigned char 
  3243 ;;		 -> dbuf(32), 
  3244 ;;  p               2   28[COMRAM] int 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  w               2   33[COMRAM] int 
  3247 ;;  i               2   31[COMRAM] int 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3257 ;;      Params:         6       0       0       0       0       0       0
  3258 ;;      Locals:         4       0       0       0       0       0       0
  3259 ;;      Temps:          1       0       0       0       0       0       0
  3260 ;;      Totals:        11       0       0       0       0       0       0
  3261 ;;Total ram usage:       11 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 8
  3264 ;; This function calls:
  3265 ;;		_fputc
  3266 ;;		_fputs
  3267 ;; This function is called by:
  3268 ;;		_dtoa
  3269 ;;		_utoa
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text8
  3274   00120A                     __ptext8:
  3275                           	callstack 0
  3276   00120A                     _pad:
  3277                           	callstack 18
  3278   00120A                     
  3279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  3280   00120A  A057               	btfss	_flags^0,0,c
  3281   00120C  EF0A  F009         	goto	u1191
  3282   001210  EF0C  F009         	goto	u1190
  3283   001214                     u1191:
  3284   001214  EF16  F009         	goto	l2200
  3285   001218                     u1190:
  3286   001218                     
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  3288   001218  C01B  F012         	movff	pad@buf,fputs@s
  3289   00121C  C01C  F013         	movff	pad@buf+1,fputs@s+1
  3290   001220  C019  F014         	movff	pad@fp,fputs@fp
  3291   001224  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  3292   001228  EC23  F00A         	call	_fputs	;wreg free
  3293   00122C                     l2200:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  3296   00122C  BE1E               	btfsc	(pad@p+1)^0,7,c
  3297   00122E  EF1B  F009         	goto	u1201
  3298   001232  EF1D  F009         	goto	u1200
  3299   001236                     u1201:
  3300   001236  EF23  F009         	goto	l2204
  3301   00123A                     u1200:
  3302   00123A  C01D  F022         	movff	pad@p,pad@w
  3303   00123E  C01E  F023         	movff	pad@p+1,pad@w+1
  3304   001242  EF27  F009         	goto	l1084
  3305   001246                     l2204:
  3306   001246  0E00               	movlw	0
  3307   001248  6E23               	movwf	(pad@w+1)^0,c
  3308   00124A  0E00               	movlw	0
  3309   00124C  6E22               	movwf	pad@w^0,c
  3310   00124E                     l1084:
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3313   00124E  0E00               	movlw	0
  3314   001250  6E21               	movwf	(pad@i+1)^0,c
  3315   001252  0E00               	movlw	0
  3316   001254  6E20               	movwf	pad@i^0,c
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3319   001256  EF39  F009         	goto	l2210
  3320   00125A                     l2206:
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3323   00125A  0E00               	movlw	0
  3324   00125C  6E0A               	movwf	(fputc@c+1)^0,c
  3325   00125E  0E20               	movlw	32
  3326   001260  6E09               	movwf	fputc@c^0,c
  3327   001262  C019  F00B         	movff	pad@fp,fputc@fp
  3328   001266  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  3329   00126A  EC5A  F009         	call	_fputc	;wreg free
  3330   00126E                     
  3331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3332   00126E  4A20               	infsnz	pad@i^0,f,c
  3333   001270  2A21               	incf	(pad@i+1)^0,f,c
  3334   001272                     l2210:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3337   001272  5022               	movf	pad@w^0,w,c
  3338   001274  5C20               	subwf	pad@i^0,w,c
  3339   001276  5021               	movf	(pad@i+1)^0,w,c
  3340   001278  0A80               	xorlw	128
  3341   00127A  6E1F               	movwf	??_pad^0,c
  3342   00127C  5023               	movf	(pad@w+1)^0,w,c
  3343   00127E  0A80               	xorlw	128
  3344   001280  581F               	subwfb	??_pad^0,w,c
  3345   001282  A0D8               	btfss	status,0,c
  3346   001284  EF46  F009         	goto	u1211
  3347   001288  EF48  F009         	goto	u1210
  3348   00128C                     u1211:
  3349   00128C  EF2D  F009         	goto	l2206
  3350   001290                     u1210:
  3351   001290                     
  3352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  3353   001290  B057               	btfsc	_flags^0,0,c
  3354   001292  EF4D  F009         	goto	u1221
  3355   001296  EF4F  F009         	goto	u1220
  3356   00129A                     u1221:
  3357   00129A  EF59  F009         	goto	l1089
  3358   00129E                     u1220:
  3359   00129E                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3361   00129E  C01B  F012         	movff	pad@buf,fputs@s
  3362   0012A2  C01C  F013         	movff	pad@buf+1,fputs@s+1
  3363   0012A6  C019  F014         	movff	pad@fp,fputs@fp
  3364   0012AA  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  3365   0012AE  EC23  F00A         	call	_fputs	;wreg free
  3366   0012B2                     l1089:
  3367   0012B2  0012               	return		;funcret
  3368   0012B4                     __end_of_pad:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _fputs *****************
  3372 ;; Defined at:
  3373 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  s               2   17[COMRAM] PTR const unsigned char 
  3376 ;;		 -> dbuf(32), 
  3377 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  3378 ;;		 -> NULL(0), 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  i               2   22[COMRAM] int 
  3381 ;;  c               1   21[COMRAM] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   17[COMRAM] int 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3391 ;;      Params:         4       0       0       0       0       0       0
  3392 ;;      Locals:         3       0       0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0
  3394 ;;      Totals:         7       0       0       0       0       0       0
  3395 ;;Total ram usage:        7 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 7
  3398 ;; This function calls:
  3399 ;;		_fputc
  3400 ;; This function is called by:
  3401 ;;		_pad
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text9
  3406   001446                     __ptext9:
  3407                           	callstack 0
  3408   001446                     _fputs:
  3409                           	callstack 18
  3410   001446  0E00               	movlw	0
  3411   001448  6E18               	movwf	(fputs@i+1)^0,c
  3412   00144A  0E00               	movlw	0
  3413   00144C  6E17               	movwf	fputs@i^0,c
  3414   00144E  EF34  F00A         	goto	l2070
  3415   001452                     l2066:
  3416   001452  C016  F009         	movff	fputs@c,fputc@c
  3417   001456  6A0A               	clrf	(fputc@c+1)^0,c
  3418   001458  C014  F00B         	movff	fputs@fp,fputc@fp
  3419   00145C  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  3420   001460  EC5A  F009         	call	_fputc	;wreg free
  3421   001464  4A17               	infsnz	fputs@i^0,f,c
  3422   001466  2A18               	incf	(fputs@i+1)^0,f,c
  3423   001468                     l2070:
  3424   001468  5017               	movf	fputs@i^0,w,c
  3425   00146A  2412               	addwf	fputs@s^0,w,c
  3426   00146C  6ED9               	movwf	fsr2l,c
  3427   00146E  5018               	movf	(fputs@i+1)^0,w,c
  3428   001470  2013               	addwfc	(fputs@s+1)^0,w,c
  3429   001472  6EDA               	movwf	fsr2h,c
  3430   001474  50DF               	movf	indf2,w,c
  3431   001476  6E16               	movwf	fputs@c^0,c
  3432   001478  5016               	movf	fputs@c^0,w,c
  3433   00147A  A4D8               	btfss	status,2,c
  3434   00147C  EF42  F00A         	goto	u981
  3435   001480  EF44  F00A         	goto	u980
  3436   001484                     u981:
  3437   001484  EF29  F00A         	goto	l2066
  3438   001488                     u980:
  3439   001488  0012               	return		;funcret
  3440   00148A                     __end_of_fputs:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function _abs *****************
  3444 ;; Defined at:
  3445 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  a               2   24[COMRAM] int 
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;		None
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  2   24[COMRAM] int 
  3452 ;; Registers used:
  3453 ;;		wreg, status,2, status,0
  3454 ;; Tracked objects:
  3455 ;;		On entry : 0/0
  3456 ;;		On exit  : 0/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3459 ;;      Params:         2       0       0       0       0       0       0
  3460 ;;      Locals:         0       0       0       0       0       0       0
  3461 ;;      Temps:          2       0       0       0       0       0       0
  3462 ;;      Totals:         4       0       0       0       0       0       0
  3463 ;;Total ram usage:        4 bytes
  3464 ;; Hardware stack levels used: 1
  3465 ;; Hardware stack levels required when called: 4
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_dtoa
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text10
  3474   00148A                     __ptext10:
  3475                           	callstack 0
  3476   00148A                     _abs:
  3477                           	callstack 22
  3478   00148A  BE1A               	btfsc	(abs@a+1)^0,7,c
  3479   00148C  EF52  F00A         	goto	u1230
  3480   001490  501A               	movf	(abs@a+1)^0,w,c
  3481   001492  E106               	bnz	u1231
  3482   001494  0419               	decf	abs@a^0,w,c
  3483   001496  B0D8               	btfsc	status,0,c
  3484   001498  EF50  F00A         	goto	u1231
  3485   00149C  EF52  F00A         	goto	u1230
  3486   0014A0                     u1231:
  3487   0014A0  EF60  F00A         	goto	l1168
  3488   0014A4                     u1230:
  3489   0014A4  C019  F01B         	movff	abs@a,??_abs
  3490   0014A8  C01A  F01C         	movff	abs@a+1,??_abs+1
  3491   0014AC  1E1B               	comf	??_abs^0,f,c
  3492   0014AE  1E1C               	comf	(??_abs+1)^0,f,c
  3493   0014B0  4A1B               	infsnz	??_abs^0,f,c
  3494   0014B2  2A1C               	incf	(??_abs+1)^0,f,c
  3495   0014B4  C01B  F019         	movff	??_abs,?_abs
  3496   0014B8  C01C  F01A         	movff	??_abs+1,?_abs+1
  3497   0014BC  EF64  F00A         	goto	l1171
  3498   0014C0                     l1168:
  3499   0014C0  C019  F019         	movff	abs@a,?_abs
  3500   0014C4  C01A  F01A         	movff	abs@a+1,?_abs+1
  3501   0014C8                     l1171:
  3502   0014C8  0012               	return		;funcret
  3503   0014CA                     __end_of_abs:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function ___aomod *****************
  3507 ;; Defined at:
  3508 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  dividend        8    6[COMRAM] long long 
  3511 ;;  divisor         8   14[COMRAM] long long 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  sign            1   23[COMRAM] unsigned char 
  3514 ;;  counter         1   22[COMRAM] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  8    6[COMRAM] long long 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:        16       0       0       0       0       0       0
  3525 ;;      Locals:         2       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0
  3527 ;;      Totals:        18       0       0       0       0       0       0
  3528 ;;Total ram usage:       18 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 4
  3531 ;; This function calls:
  3532 ;;		Nothing
  3533 ;; This function is called by:
  3534 ;;		_dtoa
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text11
  3539   000CD4                     __ptext11:
  3540                           	callstack 0
  3541   000CD4                     ___aomod:
  3542                           	callstack 22
  3543   000CD4  0E00               	movlw	0
  3544   000CD6  6E18               	movwf	___aomod@sign^0,c
  3545   000CD8  BE0E               	btfsc	(___aomod@dividend+7)^0,7,c
  3546   000CDA  EF73  F006         	goto	u1060
  3547   000CDE  EF71  F006         	goto	u1061
  3548   000CE2                     u1061:
  3549   000CE2  EF85  F006         	goto	l2130
  3550   000CE6                     u1060:
  3551   000CE6  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  3552   000CE8  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  3553   000CEA  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  3554   000CEC  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  3555   000CEE  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  3556   000CF0  1E09               	comf	(___aomod@dividend+2)^0,f,c
  3557   000CF2  1E08               	comf	(___aomod@dividend+1)^0,f,c
  3558   000CF4  6C07               	negf	___aomod@dividend^0,c
  3559   000CF6  0E00               	movlw	0
  3560   000CF8  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  3561   000CFA  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  3562   000CFC  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  3563   000CFE  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  3564   000D00  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  3565   000D02  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  3566   000D04  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  3567   000D06  0E01               	movlw	1
  3568   000D08  6E18               	movwf	___aomod@sign^0,c
  3569   000D0A                     l2130:
  3570   000D0A  BE16               	btfsc	(___aomod@divisor+7)^0,7,c
  3571   000D0C  EF8C  F006         	goto	u1070
  3572   000D10  EF8A  F006         	goto	u1071
  3573   000D14                     u1071:
  3574   000D14  EF9C  F006         	goto	l2134
  3575   000D18                     u1070:
  3576   000D18  1E16               	comf	(___aomod@divisor+7)^0,f,c
  3577   000D1A  1E15               	comf	(___aomod@divisor+6)^0,f,c
  3578   000D1C  1E14               	comf	(___aomod@divisor+5)^0,f,c
  3579   000D1E  1E13               	comf	(___aomod@divisor+4)^0,f,c
  3580   000D20  1E12               	comf	(___aomod@divisor+3)^0,f,c
  3581   000D22  1E11               	comf	(___aomod@divisor+2)^0,f,c
  3582   000D24  1E10               	comf	(___aomod@divisor+1)^0,f,c
  3583   000D26  6C0F               	negf	___aomod@divisor^0,c
  3584   000D28  0E00               	movlw	0
  3585   000D2A  2210               	addwfc	(___aomod@divisor+1)^0,f,c
  3586   000D2C  2211               	addwfc	(___aomod@divisor+2)^0,f,c
  3587   000D2E  2212               	addwfc	(___aomod@divisor+3)^0,f,c
  3588   000D30  2213               	addwfc	(___aomod@divisor+4)^0,f,c
  3589   000D32  2214               	addwfc	(___aomod@divisor+5)^0,f,c
  3590   000D34  2215               	addwfc	(___aomod@divisor+6)^0,f,c
  3591   000D36  2216               	addwfc	(___aomod@divisor+7)^0,f,c
  3592   000D38                     l2134:
  3593   000D38  500F               	movf	___aomod@divisor^0,w,c
  3594   000D3A  1010               	iorwf	(___aomod@divisor+1)^0,w,c
  3595   000D3C  1011               	iorwf	(___aomod@divisor+2)^0,w,c
  3596   000D3E  1012               	iorwf	(___aomod@divisor+3)^0,w,c
  3597   000D40  1013               	iorwf	(___aomod@divisor+4)^0,w,c
  3598   000D42  1014               	iorwf	(___aomod@divisor+5)^0,w,c
  3599   000D44  1015               	iorwf	(___aomod@divisor+6)^0,w,c
  3600   000D46  1016               	iorwf	(___aomod@divisor+7)^0,w,c
  3601   000D48  B4D8               	btfsc	status,2,c
  3602   000D4A  EFA9  F006         	goto	u1081
  3603   000D4E  EFAB  F006         	goto	u1080
  3604   000D52                     u1081:
  3605   000D52  EFF3  F006         	goto	l2150
  3606   000D56                     u1080:
  3607   000D56  0E01               	movlw	1
  3608   000D58  6E17               	movwf	___aomod@counter^0,c
  3609   000D5A  EFB9  F006         	goto	l2140
  3610   000D5E                     l2138:
  3611   000D5E  90D8               	bcf	status,0,c
  3612   000D60  360F               	rlcf	___aomod@divisor^0,f,c
  3613   000D62  3610               	rlcf	(___aomod@divisor+1)^0,f,c
  3614   000D64  3611               	rlcf	(___aomod@divisor+2)^0,f,c
  3615   000D66  3612               	rlcf	(___aomod@divisor+3)^0,f,c
  3616   000D68  3613               	rlcf	(___aomod@divisor+4)^0,f,c
  3617   000D6A  3614               	rlcf	(___aomod@divisor+5)^0,f,c
  3618   000D6C  3615               	rlcf	(___aomod@divisor+6)^0,f,c
  3619   000D6E  3616               	rlcf	(___aomod@divisor+7)^0,f,c
  3620   000D70  2A17               	incf	___aomod@counter^0,f,c
  3621   000D72                     l2140:
  3622   000D72  AE16               	btfss	(___aomod@divisor+7)^0,7,c
  3623   000D74  EFBE  F006         	goto	u1091
  3624   000D78  EFC0  F006         	goto	u1090
  3625   000D7C                     u1091:
  3626   000D7C  EFAF  F006         	goto	l2138
  3627   000D80                     u1090:
  3628   000D80                     l2142:
  3629   000D80  500F               	movf	___aomod@divisor^0,w,c
  3630   000D82  5C07               	subwf	___aomod@dividend^0,w,c
  3631   000D84  5010               	movf	(___aomod@divisor+1)^0,w,c
  3632   000D86  5808               	subwfb	(___aomod@dividend+1)^0,w,c
  3633   000D88  5011               	movf	(___aomod@divisor+2)^0,w,c
  3634   000D8A  5809               	subwfb	(___aomod@dividend+2)^0,w,c
  3635   000D8C  5012               	movf	(___aomod@divisor+3)^0,w,c
  3636   000D8E  580A               	subwfb	(___aomod@dividend+3)^0,w,c
  3637   000D90  5013               	movf	(___aomod@divisor+4)^0,w,c
  3638   000D92  580B               	subwfb	(___aomod@dividend+4)^0,w,c
  3639   000D94  5014               	movf	(___aomod@divisor+5)^0,w,c
  3640   000D96  580C               	subwfb	(___aomod@dividend+5)^0,w,c
  3641   000D98  5015               	movf	(___aomod@divisor+6)^0,w,c
  3642   000D9A  580D               	subwfb	(___aomod@dividend+6)^0,w,c
  3643   000D9C  5016               	movf	(___aomod@divisor+7)^0,w,c
  3644   000D9E  580E               	subwfb	(___aomod@dividend+7)^0,w,c
  3645   000DA0  A0D8               	btfss	status,0,c
  3646   000DA2  EFD5  F006         	goto	u1101
  3647   000DA6  EFD7  F006         	goto	u1100
  3648   000DAA                     u1101:
  3649   000DAA  EFE7  F006         	goto	l2146
  3650   000DAE                     u1100:
  3651   000DAE  500F               	movf	___aomod@divisor^0,w,c
  3652   000DB0  5E07               	subwf	___aomod@dividend^0,f,c
  3653   000DB2  5010               	movf	(___aomod@divisor+1)^0,w,c
  3654   000DB4  5A08               	subwfb	(___aomod@dividend+1)^0,f,c
  3655   000DB6  5011               	movf	(___aomod@divisor+2)^0,w,c
  3656   000DB8  5A09               	subwfb	(___aomod@dividend+2)^0,f,c
  3657   000DBA  5012               	movf	(___aomod@divisor+3)^0,w,c
  3658   000DBC  5A0A               	subwfb	(___aomod@dividend+3)^0,f,c
  3659   000DBE  5013               	movf	(___aomod@divisor+4)^0,w,c
  3660   000DC0  5A0B               	subwfb	(___aomod@dividend+4)^0,f,c
  3661   000DC2  5014               	movf	(___aomod@divisor+5)^0,w,c
  3662   000DC4  5A0C               	subwfb	(___aomod@dividend+5)^0,f,c
  3663   000DC6  5015               	movf	(___aomod@divisor+6)^0,w,c
  3664   000DC8  5A0D               	subwfb	(___aomod@dividend+6)^0,f,c
  3665   000DCA  5016               	movf	(___aomod@divisor+7)^0,w,c
  3666   000DCC  5A0E               	subwfb	(___aomod@dividend+7)^0,f,c
  3667   000DCE                     l2146:
  3668   000DCE  90D8               	bcf	status,0,c
  3669   000DD0  3216               	rrcf	(___aomod@divisor+7)^0,f,c
  3670   000DD2  3215               	rrcf	(___aomod@divisor+6)^0,f,c
  3671   000DD4  3214               	rrcf	(___aomod@divisor+5)^0,f,c
  3672   000DD6  3213               	rrcf	(___aomod@divisor+4)^0,f,c
  3673   000DD8  3212               	rrcf	(___aomod@divisor+3)^0,f,c
  3674   000DDA  3211               	rrcf	(___aomod@divisor+2)^0,f,c
  3675   000DDC  3210               	rrcf	(___aomod@divisor+1)^0,f,c
  3676   000DDE  320F               	rrcf	___aomod@divisor^0,f,c
  3677   000DE0  2E17               	decfsz	___aomod@counter^0,f,c
  3678   000DE2  EFC0  F006         	goto	l2142
  3679   000DE6                     l2150:
  3680   000DE6  5018               	movf	___aomod@sign^0,w,c
  3681   000DE8  B4D8               	btfsc	status,2,c
  3682   000DEA  EFF9  F006         	goto	u1111
  3683   000DEE  EFFB  F006         	goto	u1110
  3684   000DF2                     u1111:
  3685   000DF2  EF0B  F007         	goto	l2154
  3686   000DF6                     u1110:
  3687   000DF6  1E0E               	comf	(___aomod@dividend+7)^0,f,c
  3688   000DF8  1E0D               	comf	(___aomod@dividend+6)^0,f,c
  3689   000DFA  1E0C               	comf	(___aomod@dividend+5)^0,f,c
  3690   000DFC  1E0B               	comf	(___aomod@dividend+4)^0,f,c
  3691   000DFE  1E0A               	comf	(___aomod@dividend+3)^0,f,c
  3692   000E00  1E09               	comf	(___aomod@dividend+2)^0,f,c
  3693   000E02  1E08               	comf	(___aomod@dividend+1)^0,f,c
  3694   000E04  6C07               	negf	___aomod@dividend^0,c
  3695   000E06  0E00               	movlw	0
  3696   000E08  2208               	addwfc	(___aomod@dividend+1)^0,f,c
  3697   000E0A  2209               	addwfc	(___aomod@dividend+2)^0,f,c
  3698   000E0C  220A               	addwfc	(___aomod@dividend+3)^0,f,c
  3699   000E0E  220B               	addwfc	(___aomod@dividend+4)^0,f,c
  3700   000E10  220C               	addwfc	(___aomod@dividend+5)^0,f,c
  3701   000E12  220D               	addwfc	(___aomod@dividend+6)^0,f,c
  3702   000E14  220E               	addwfc	(___aomod@dividend+7)^0,f,c
  3703   000E16                     l2154:
  3704   000E16  C007  F007         	movff	___aomod@dividend,?___aomod
  3705   000E1A  C008  F008         	movff	___aomod@dividend+1,?___aomod+1
  3706   000E1E  C009  F009         	movff	___aomod@dividend+2,?___aomod+2
  3707   000E22  C00A  F00A         	movff	___aomod@dividend+3,?___aomod+3
  3708   000E26  C00B  F00B         	movff	___aomod@dividend+4,?___aomod+4
  3709   000E2A  C00C  F00C         	movff	___aomod@dividend+5,?___aomod+5
  3710   000E2E  C00D  F00D         	movff	___aomod@dividend+6,?___aomod+6
  3711   000E32  C00E  F00E         	movff	___aomod@dividend+7,?___aomod+7
  3712   000E36  0012               	return		;funcret
  3713   000E38                     __end_of___aomod:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function ___aodiv *****************
  3717 ;; Defined at:
  3718 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  dividend        8    6[COMRAM] long long 
  3721 ;;  divisor         8   14[COMRAM] long long 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  quotient        8   24[COMRAM] long long 
  3724 ;;  sign            1   23[COMRAM] unsigned char 
  3725 ;;  counter         1   22[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  8    6[COMRAM] long long 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3735 ;;      Params:        16       0       0       0       0       0       0
  3736 ;;      Locals:        10       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0
  3738 ;;      Totals:        26       0       0       0       0       0       0
  3739 ;;Total ram usage:       26 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 4
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_dtoa
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text12
  3750   000B4C                     __ptext12:
  3751                           	callstack 0
  3752   000B4C                     ___aodiv:
  3753                           	callstack 22
  3754   000B4C  0E00               	movlw	0
  3755   000B4E  6E18               	movwf	___aodiv@sign^0,c
  3756   000B50  BE16               	btfsc	(___aodiv@divisor+7)^0,7,c
  3757   000B52  EFAF  F005         	goto	u990
  3758   000B56  EFAD  F005         	goto	u991
  3759   000B5A                     u991:
  3760   000B5A  EFC1  F005         	goto	l2086
  3761   000B5E                     u990:
  3762   000B5E  1E16               	comf	(___aodiv@divisor+7)^0,f,c
  3763   000B60  1E15               	comf	(___aodiv@divisor+6)^0,f,c
  3764   000B62  1E14               	comf	(___aodiv@divisor+5)^0,f,c
  3765   000B64  1E13               	comf	(___aodiv@divisor+4)^0,f,c
  3766   000B66  1E12               	comf	(___aodiv@divisor+3)^0,f,c
  3767   000B68  1E11               	comf	(___aodiv@divisor+2)^0,f,c
  3768   000B6A  1E10               	comf	(___aodiv@divisor+1)^0,f,c
  3769   000B6C  6C0F               	negf	___aodiv@divisor^0,c
  3770   000B6E  0E00               	movlw	0
  3771   000B70  2210               	addwfc	(___aodiv@divisor+1)^0,f,c
  3772   000B72  2211               	addwfc	(___aodiv@divisor+2)^0,f,c
  3773   000B74  2212               	addwfc	(___aodiv@divisor+3)^0,f,c
  3774   000B76  2213               	addwfc	(___aodiv@divisor+4)^0,f,c
  3775   000B78  2214               	addwfc	(___aodiv@divisor+5)^0,f,c
  3776   000B7A  2215               	addwfc	(___aodiv@divisor+6)^0,f,c
  3777   000B7C  2216               	addwfc	(___aodiv@divisor+7)^0,f,c
  3778   000B7E  0E01               	movlw	1
  3779   000B80  6E18               	movwf	___aodiv@sign^0,c
  3780   000B82                     l2086:
  3781   000B82  BE0E               	btfsc	(___aodiv@dividend+7)^0,7,c
  3782   000B84  EFC8  F005         	goto	u1000
  3783   000B88  EFC6  F005         	goto	u1001
  3784   000B8C                     u1001:
  3785   000B8C  EFDA  F005         	goto	l2092
  3786   000B90                     u1000:
  3787   000B90  1E0E               	comf	(___aodiv@dividend+7)^0,f,c
  3788   000B92  1E0D               	comf	(___aodiv@dividend+6)^0,f,c
  3789   000B94  1E0C               	comf	(___aodiv@dividend+5)^0,f,c
  3790   000B96  1E0B               	comf	(___aodiv@dividend+4)^0,f,c
  3791   000B98  1E0A               	comf	(___aodiv@dividend+3)^0,f,c
  3792   000B9A  1E09               	comf	(___aodiv@dividend+2)^0,f,c
  3793   000B9C  1E08               	comf	(___aodiv@dividend+1)^0,f,c
  3794   000B9E  6C07               	negf	___aodiv@dividend^0,c
  3795   000BA0  0E00               	movlw	0
  3796   000BA2  2208               	addwfc	(___aodiv@dividend+1)^0,f,c
  3797   000BA4  2209               	addwfc	(___aodiv@dividend+2)^0,f,c
  3798   000BA6  220A               	addwfc	(___aodiv@dividend+3)^0,f,c
  3799   000BA8  220B               	addwfc	(___aodiv@dividend+4)^0,f,c
  3800   000BAA  220C               	addwfc	(___aodiv@dividend+5)^0,f,c
  3801   000BAC  220D               	addwfc	(___aodiv@dividend+6)^0,f,c
  3802   000BAE  220E               	addwfc	(___aodiv@dividend+7)^0,f,c
  3803   000BB0  0E01               	movlw	1
  3804   000BB2  1A18               	xorwf	___aodiv@sign^0,f,c
  3805   000BB4                     l2092:
  3806   000BB4  EE20  F019         	lfsr	2,___aodiv@quotient
  3807   000BB8  0E07               	movlw	7
  3808   000BBA                     u1011:
  3809   000BBA  6ADE               	clrf	postinc2,c
  3810   000BBC  06E8               	decf	wreg,f,c
  3811   000BBE  E2FD               	bc	u1011
  3812   000BC0  500F               	movf	___aodiv@divisor^0,w,c
  3813   000BC2  1010               	iorwf	(___aodiv@divisor+1)^0,w,c
  3814   000BC4  1011               	iorwf	(___aodiv@divisor+2)^0,w,c
  3815   000BC6  1012               	iorwf	(___aodiv@divisor+3)^0,w,c
  3816   000BC8  1013               	iorwf	(___aodiv@divisor+4)^0,w,c
  3817   000BCA  1014               	iorwf	(___aodiv@divisor+5)^0,w,c
  3818   000BCC  1015               	iorwf	(___aodiv@divisor+6)^0,w,c
  3819   000BCE  1016               	iorwf	(___aodiv@divisor+7)^0,w,c
  3820   000BD0  B4D8               	btfsc	status,2,c
  3821   000BD2  EFED  F005         	goto	u1021
  3822   000BD6  EFEF  F005         	goto	u1020
  3823   000BDA                     u1021:
  3824   000BDA  EF41  F006         	goto	l2114
  3825   000BDE                     u1020:
  3826   000BDE  0E01               	movlw	1
  3827   000BE0  6E17               	movwf	___aodiv@counter^0,c
  3828   000BE2  EFFD  F005         	goto	l2100
  3829   000BE6                     l2098:
  3830   000BE6  90D8               	bcf	status,0,c
  3831   000BE8  360F               	rlcf	___aodiv@divisor^0,f,c
  3832   000BEA  3610               	rlcf	(___aodiv@divisor+1)^0,f,c
  3833   000BEC  3611               	rlcf	(___aodiv@divisor+2)^0,f,c
  3834   000BEE  3612               	rlcf	(___aodiv@divisor+3)^0,f,c
  3835   000BF0  3613               	rlcf	(___aodiv@divisor+4)^0,f,c
  3836   000BF2  3614               	rlcf	(___aodiv@divisor+5)^0,f,c
  3837   000BF4  3615               	rlcf	(___aodiv@divisor+6)^0,f,c
  3838   000BF6  3616               	rlcf	(___aodiv@divisor+7)^0,f,c
  3839   000BF8  2A17               	incf	___aodiv@counter^0,f,c
  3840   000BFA                     l2100:
  3841   000BFA  AE16               	btfss	(___aodiv@divisor+7)^0,7,c
  3842   000BFC  EF02  F006         	goto	u1031
  3843   000C00  EF04  F006         	goto	u1030
  3844   000C04                     u1031:
  3845   000C04  EFF3  F005         	goto	l2098
  3846   000C08                     u1030:
  3847   000C08                     l2102:
  3848   000C08  90D8               	bcf	status,0,c
  3849   000C0A  3619               	rlcf	___aodiv@quotient^0,f,c
  3850   000C0C  361A               	rlcf	(___aodiv@quotient+1)^0,f,c
  3851   000C0E  361B               	rlcf	(___aodiv@quotient+2)^0,f,c
  3852   000C10  361C               	rlcf	(___aodiv@quotient+3)^0,f,c
  3853   000C12  361D               	rlcf	(___aodiv@quotient+4)^0,f,c
  3854   000C14  361E               	rlcf	(___aodiv@quotient+5)^0,f,c
  3855   000C16  361F               	rlcf	(___aodiv@quotient+6)^0,f,c
  3856   000C18  3620               	rlcf	(___aodiv@quotient+7)^0,f,c
  3857   000C1A  500F               	movf	___aodiv@divisor^0,w,c
  3858   000C1C  5C07               	subwf	___aodiv@dividend^0,w,c
  3859   000C1E  5010               	movf	(___aodiv@divisor+1)^0,w,c
  3860   000C20  5808               	subwfb	(___aodiv@dividend+1)^0,w,c
  3861   000C22  5011               	movf	(___aodiv@divisor+2)^0,w,c
  3862   000C24  5809               	subwfb	(___aodiv@dividend+2)^0,w,c
  3863   000C26  5012               	movf	(___aodiv@divisor+3)^0,w,c
  3864   000C28  580A               	subwfb	(___aodiv@dividend+3)^0,w,c
  3865   000C2A  5013               	movf	(___aodiv@divisor+4)^0,w,c
  3866   000C2C  580B               	subwfb	(___aodiv@dividend+4)^0,w,c
  3867   000C2E  5014               	movf	(___aodiv@divisor+5)^0,w,c
  3868   000C30  580C               	subwfb	(___aodiv@dividend+5)^0,w,c
  3869   000C32  5015               	movf	(___aodiv@divisor+6)^0,w,c
  3870   000C34  580D               	subwfb	(___aodiv@dividend+6)^0,w,c
  3871   000C36  5016               	movf	(___aodiv@divisor+7)^0,w,c
  3872   000C38  580E               	subwfb	(___aodiv@dividend+7)^0,w,c
  3873   000C3A  A0D8               	btfss	status,0,c
  3874   000C3C  EF22  F006         	goto	u1041
  3875   000C40  EF24  F006         	goto	u1040
  3876   000C44                     u1041:
  3877   000C44  EF35  F006         	goto	l2110
  3878   000C48                     u1040:
  3879   000C48  500F               	movf	___aodiv@divisor^0,w,c
  3880   000C4A  5E07               	subwf	___aodiv@dividend^0,f,c
  3881   000C4C  5010               	movf	(___aodiv@divisor+1)^0,w,c
  3882   000C4E  5A08               	subwfb	(___aodiv@dividend+1)^0,f,c
  3883   000C50  5011               	movf	(___aodiv@divisor+2)^0,w,c
  3884   000C52  5A09               	subwfb	(___aodiv@dividend+2)^0,f,c
  3885   000C54  5012               	movf	(___aodiv@divisor+3)^0,w,c
  3886   000C56  5A0A               	subwfb	(___aodiv@dividend+3)^0,f,c
  3887   000C58  5013               	movf	(___aodiv@divisor+4)^0,w,c
  3888   000C5A  5A0B               	subwfb	(___aodiv@dividend+4)^0,f,c
  3889   000C5C  5014               	movf	(___aodiv@divisor+5)^0,w,c
  3890   000C5E  5A0C               	subwfb	(___aodiv@dividend+5)^0,f,c
  3891   000C60  5015               	movf	(___aodiv@divisor+6)^0,w,c
  3892   000C62  5A0D               	subwfb	(___aodiv@dividend+6)^0,f,c
  3893   000C64  5016               	movf	(___aodiv@divisor+7)^0,w,c
  3894   000C66  5A0E               	subwfb	(___aodiv@dividend+7)^0,f,c
  3895   000C68  8019               	bsf	___aodiv@quotient^0,0,c
  3896   000C6A                     l2110:
  3897   000C6A  90D8               	bcf	status,0,c
  3898   000C6C  3216               	rrcf	(___aodiv@divisor+7)^0,f,c
  3899   000C6E  3215               	rrcf	(___aodiv@divisor+6)^0,f,c
  3900   000C70  3214               	rrcf	(___aodiv@divisor+5)^0,f,c
  3901   000C72  3213               	rrcf	(___aodiv@divisor+4)^0,f,c
  3902   000C74  3212               	rrcf	(___aodiv@divisor+3)^0,f,c
  3903   000C76  3211               	rrcf	(___aodiv@divisor+2)^0,f,c
  3904   000C78  3210               	rrcf	(___aodiv@divisor+1)^0,f,c
  3905   000C7A  320F               	rrcf	___aodiv@divisor^0,f,c
  3906   000C7C  2E17               	decfsz	___aodiv@counter^0,f,c
  3907   000C7E  EF04  F006         	goto	l2102
  3908   000C82                     l2114:
  3909   000C82  5018               	movf	___aodiv@sign^0,w,c
  3910   000C84  B4D8               	btfsc	status,2,c
  3911   000C86  EF47  F006         	goto	u1051
  3912   000C8A  EF49  F006         	goto	u1050
  3913   000C8E                     u1051:
  3914   000C8E  EF59  F006         	goto	l2118
  3915   000C92                     u1050:
  3916   000C92  1E20               	comf	(___aodiv@quotient+7)^0,f,c
  3917   000C94  1E1F               	comf	(___aodiv@quotient+6)^0,f,c
  3918   000C96  1E1E               	comf	(___aodiv@quotient+5)^0,f,c
  3919   000C98  1E1D               	comf	(___aodiv@quotient+4)^0,f,c
  3920   000C9A  1E1C               	comf	(___aodiv@quotient+3)^0,f,c
  3921   000C9C  1E1B               	comf	(___aodiv@quotient+2)^0,f,c
  3922   000C9E  1E1A               	comf	(___aodiv@quotient+1)^0,f,c
  3923   000CA0  6C19               	negf	___aodiv@quotient^0,c
  3924   000CA2  0E00               	movlw	0
  3925   000CA4  221A               	addwfc	(___aodiv@quotient+1)^0,f,c
  3926   000CA6  221B               	addwfc	(___aodiv@quotient+2)^0,f,c
  3927   000CA8  221C               	addwfc	(___aodiv@quotient+3)^0,f,c
  3928   000CAA  221D               	addwfc	(___aodiv@quotient+4)^0,f,c
  3929   000CAC  221E               	addwfc	(___aodiv@quotient+5)^0,f,c
  3930   000CAE  221F               	addwfc	(___aodiv@quotient+6)^0,f,c
  3931   000CB0  2220               	addwfc	(___aodiv@quotient+7)^0,f,c
  3932   000CB2                     l2118:
  3933   000CB2  C019  F007         	movff	___aodiv@quotient,?___aodiv
  3934   000CB6  C01A  F008         	movff	___aodiv@quotient+1,?___aodiv+1
  3935   000CBA  C01B  F009         	movff	___aodiv@quotient+2,?___aodiv+2
  3936   000CBE  C01C  F00A         	movff	___aodiv@quotient+3,?___aodiv+3
  3937   000CC2  C01D  F00B         	movff	___aodiv@quotient+4,?___aodiv+4
  3938   000CC6  C01E  F00C         	movff	___aodiv@quotient+5,?___aodiv+5
  3939   000CCA  C01F  F00D         	movff	___aodiv@quotient+6,?___aodiv+6
  3940   000CCE  C020  F00E         	movff	___aodiv@quotient+7,?___aodiv+7
  3941   000CD2  0012               	return		;funcret
  3942   000CD4                     __end_of___aodiv:
  3943                           	callstack 0
  3944                           
  3945 ;; *************** function _ctoa *****************
  3946 ;; Defined at:
  3947 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3950 ;;		 -> NULL(0), 
  3951 ;;  c               1   19[COMRAM] unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  w               2   23[COMRAM] int 
  3954 ;;  l               2   21[COMRAM] int 
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3964 ;;      Params:         3       0       0       0       0       0       0
  3965 ;;      Locals:         4       0       0       0       0       0       0
  3966 ;;      Temps:          1       0       0       0       0       0       0
  3967 ;;      Totals:         8       0       0       0       0       0       0
  3968 ;;Total ram usage:        8 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 7
  3971 ;; This function calls:
  3972 ;;		_fputc
  3973 ;; This function is called by:
  3974 ;;		_vfpfcnvrt
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text13
  3979   001142                     __ptext13:
  3980                           	callstack 0
  3981   001142                     _ctoa:
  3982                           	callstack 20
  3983   001142                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  3985   001142  5053               	movf	_width^0,w,c
  3986   001144  1054               	iorwf	(_width+1)^0,w,c
  3987   001146  A4D8               	btfss	status,2,c
  3988   001148  EFA8  F008         	goto	u1281
  3989   00114C  EFAA  F008         	goto	u1280
  3990   001150                     u1281:
  3991   001150  EFB0  F008         	goto	l2238
  3992   001154                     u1280:
  3993   001154  C053  F018         	movff	_width,ctoa@w
  3994   001158  C054  F019         	movff	_width+1,ctoa@w+1
  3995   00115C  EFB6  F008         	goto	l2240
  3996   001160                     l2238:
  3997   001160  0EFF               	movlw	255
  3998   001162  2453               	addwf	_width^0,w,c
  3999   001164  6E18               	movwf	ctoa@w^0,c
  4000   001166  0EFF               	movlw	255
  4001   001168  2054               	addwfc	(_width+1)^0,w,c
  4002   00116A  6E19               	movwf	(ctoa@w+1)^0,c
  4003   00116C                     l2240:
  4004                           
  4005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  4006   00116C  A057               	btfss	_flags^0,0,c
  4007   00116E  EFBB  F008         	goto	u1291
  4008   001172  EFBD  F008         	goto	u1290
  4009   001176                     u1291:
  4010   001176  EFC6  F008         	goto	l2244
  4011   00117A                     u1290:
  4012   00117A                     
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  4014   00117A  C014  F009         	movff	ctoa@c,fputc@c
  4015   00117E  6A0A               	clrf	(fputc@c+1)^0,c
  4016   001180  C012  F00B         	movff	ctoa@fp,fputc@fp
  4017   001184  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  4018   001188  EC5A  F009         	call	_fputc	;wreg free
  4019   00118C                     l2244:
  4020                           
  4021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  4022   00118C  BE19               	btfsc	(ctoa@w+1)^0,7,c
  4023   00118E  EFCB  F008         	goto	u1301
  4024   001192  EFCD  F008         	goto	u1300
  4025   001196                     u1301:
  4026   001196  EFCF  F008         	goto	l2248
  4027   00119A                     u1300:
  4028   00119A  EFD3  F008         	goto	l1100
  4029   00119E                     l2248:
  4030   00119E  0E00               	movlw	0
  4031   0011A0  6E19               	movwf	(ctoa@w+1)^0,c
  4032   0011A2  0E00               	movlw	0
  4033   0011A4  6E18               	movwf	ctoa@w^0,c
  4034   0011A6                     l1100:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  4037   0011A6  0E00               	movlw	0
  4038   0011A8  6E17               	movwf	(ctoa@l+1)^0,c
  4039   0011AA  0E00               	movlw	0
  4040   0011AC  6E16               	movwf	ctoa@l^0,c
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4043   0011AE  EFE5  F008         	goto	l2254
  4044   0011B2                     l2250:
  4045                           
  4046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  4047   0011B2  0E00               	movlw	0
  4048   0011B4  6E0A               	movwf	(fputc@c+1)^0,c
  4049   0011B6  0E20               	movlw	32
  4050   0011B8  6E09               	movwf	fputc@c^0,c
  4051   0011BA  C012  F00B         	movff	ctoa@fp,fputc@fp
  4052   0011BE  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  4053   0011C2  EC5A  F009         	call	_fputc	;wreg free
  4054   0011C6                     
  4055                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  4056   0011C6  4A16               	infsnz	ctoa@l^0,f,c
  4057   0011C8  2A17               	incf	(ctoa@l+1)^0,f,c
  4058   0011CA                     l2254:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4061   0011CA  5018               	movf	ctoa@w^0,w,c
  4062   0011CC  5C16               	subwf	ctoa@l^0,w,c
  4063   0011CE  5017               	movf	(ctoa@l+1)^0,w,c
  4064   0011D0  0A80               	xorlw	128
  4065   0011D2  6E15               	movwf	??_ctoa^0,c
  4066   0011D4  5019               	movf	(ctoa@w+1)^0,w,c
  4067   0011D6  0A80               	xorlw	128
  4068   0011D8  5815               	subwfb	??_ctoa^0,w,c
  4069   0011DA  A0D8               	btfss	status,0,c
  4070   0011DC  EFF2  F008         	goto	u1311
  4071   0011E0  EFF4  F008         	goto	u1310
  4072   0011E4                     u1311:
  4073   0011E4  EFD9  F008         	goto	l2250
  4074   0011E8                     u1310:
  4075   0011E8                     
  4076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  4077   0011E8  B057               	btfsc	_flags^0,0,c
  4078   0011EA  EFF9  F008         	goto	u1321
  4079   0011EE  EFFB  F008         	goto	u1320
  4080   0011F2                     u1321:
  4081   0011F2  EF04  F009         	goto	l1105
  4082   0011F6                     u1320:
  4083   0011F6                     
  4084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  4085   0011F6  C014  F009         	movff	ctoa@c,fputc@c
  4086   0011FA  6A0A               	clrf	(fputc@c+1)^0,c
  4087   0011FC  C012  F00B         	movff	ctoa@fp,fputc@fp
  4088   001200  C013  F00C         	movff	ctoa@fp+1,fputc@fp+1
  4089   001204  EC5A  F009         	call	_fputc	;wreg free
  4090   001208                     l1105:
  4091   001208  0012               	return		;funcret
  4092   00120A                     __end_of_ctoa:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _fputc *****************
  4096 ;; Defined at:
  4097 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  c               2    8[COMRAM] int 
  4100 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  4101 ;;		 -> NULL(0), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2    8[COMRAM] int 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4113 ;;      Params:         4       0       0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0
  4115 ;;      Temps:          5       0       0       0       0       0       0
  4116 ;;      Totals:         9       0       0       0       0       0       0
  4117 ;;Total ram usage:        9 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; Hardware stack levels required when called: 6
  4120 ;; This function calls:
  4121 ;;		_putch
  4122 ;; This function is called by:
  4123 ;;		_pad
  4124 ;;		_ctoa
  4125 ;;		_vfpfcnvrt
  4126 ;;		_fputs
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text14
  4131   0012B4                     __ptext14:
  4132                           	callstack 0
  4133   0012B4                     _fputc:
  4134                           	callstack 18
  4135   0012B4  500B               	movf	fputc@fp^0,w,c
  4136   0012B6  100C               	iorwf	(fputc@fp+1)^0,w,c
  4137   0012B8  B4D8               	btfsc	status,2,c
  4138   0012BA  EF61  F009         	goto	u941
  4139   0012BE  EF63  F009         	goto	u940
  4140   0012C2                     u941:
  4141   0012C2  EF6C  F009         	goto	l2054
  4142   0012C6                     u940:
  4143   0012C6  500B               	movf	fputc@fp^0,w,c
  4144   0012C8  100C               	iorwf	(fputc@fp+1)^0,w,c
  4145   0012CA  A4D8               	btfss	status,2,c
  4146   0012CC  EF6A  F009         	goto	u951
  4147   0012D0  EF6C  F009         	goto	u950
  4148   0012D4                     u951:
  4149   0012D4  EF71  F009         	goto	l2056
  4150   0012D8                     u950:
  4151   0012D8                     l2054:
  4152   0012D8  5009               	movf	fputc@c^0,w,c
  4153   0012DA  ECD7  F00B         	call	_putch
  4154   0012DE  EFA4  F009         	goto	l1222
  4155   0012E2                     l2056:
  4156   0012E2  EE20 F009          	lfsr	2,9
  4157   0012E6  500B               	movf	fputc@fp^0,w,c
  4158   0012E8  26D9               	addwf	fsr2l,f,c
  4159   0012EA  500C               	movf	(fputc@fp+1)^0,w,c
  4160   0012EC  22DA               	addwfc	fsr2h,f,c
  4161   0012EE  50DE               	movf	postinc2,w,c
  4162   0012F0  10DE               	iorwf	postinc2,w,c
  4163   0012F2  B4D8               	btfsc	status,2,c
  4164   0012F4  EF7E  F009         	goto	u961
  4165   0012F8  EF80  F009         	goto	u960
  4166   0012FC                     u961:
  4167   0012FC  EF9B  F009         	goto	l2060
  4168   001300                     u960:
  4169   001300  EE20 F009          	lfsr	2,9
  4170   001304  500B               	movf	fputc@fp^0,w,c
  4171   001306  26D9               	addwf	fsr2l,f,c
  4172   001308  500C               	movf	(fputc@fp+1)^0,w,c
  4173   00130A  22DA               	addwfc	fsr2h,f,c
  4174   00130C  EE10 F003          	lfsr	1,3
  4175   001310  500B               	movf	fputc@fp^0,w,c
  4176   001312  26E1               	addwf	fsr1l,f,c
  4177   001314  500C               	movf	(fputc@fp+1)^0,w,c
  4178   001316  22E2               	addwfc	fsr1h,f,c
  4179   001318  50DE               	movf	postinc2,w,c
  4180   00131A  5CE6               	subwf	postinc1,w,c
  4181   00131C  50E6               	movf	postinc1,w,c
  4182   00131E  0A80               	xorlw	128
  4183   001320  6E11               	movwf	(??_fputc+4)^0,c
  4184   001322  50DE               	movf	postinc2,w,c
  4185   001324  0A80               	xorlw	128
  4186   001326  5811               	subwfb	(??_fputc+4)^0,w,c
  4187   001328  B0D8               	btfsc	status,0,c
  4188   00132A  EF99  F009         	goto	u971
  4189   00132E  EF9B  F009         	goto	u970
  4190   001332                     u971:
  4191   001332  EFA4  F009         	goto	l1222
  4192   001336                     u970:
  4193   001336                     l2060:
  4194   001336  EE20 F003          	lfsr	2,3
  4195   00133A  500B               	movf	fputc@fp^0,w,c
  4196   00133C  26D9               	addwf	fsr2l,f,c
  4197   00133E  500C               	movf	(fputc@fp+1)^0,w,c
  4198   001340  22DA               	addwfc	fsr2h,f,c
  4199   001342  2ADE               	incf	postinc2,f,c
  4200   001344  0E00               	movlw	0
  4201   001346  22DD               	addwfc	postdec2,f,c
  4202   001348                     l1222:
  4203   001348  0012               	return		;funcret
  4204   00134A                     __end_of_fputc:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _putch *****************
  4208 ;; Defined at:
  4209 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  txData          1    wreg     unsigned char 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  txData          1    7[COMRAM] unsigned char 
  4214 ;; Return value:  Size  Location     Type
  4215 ;;                  1    wreg      void 
  4216 ;; Registers used:
  4217 ;;		wreg, status,2, cstack
  4218 ;; Tracked objects:
  4219 ;;		On entry : 0/0
  4220 ;;		On exit  : 0/0
  4221 ;;		Unchanged: 0/0
  4222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4223 ;;      Params:         0       0       0       0       0       0       0
  4224 ;;      Locals:         1       0       0       0       0       0       0
  4225 ;;      Temps:          0       0       0       0       0       0       0
  4226 ;;      Totals:         1       0       0       0       0       0       0
  4227 ;;Total ram usage:        1 bytes
  4228 ;; Hardware stack levels used: 1
  4229 ;; Hardware stack levels required when called: 5
  4230 ;; This function calls:
  4231 ;;		_EUSART1_Write
  4232 ;; This function is called by:
  4233 ;;		_fputc
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text15
  4238   0017AE                     __ptext15:
  4239                           	callstack 0
  4240   0017AE                     _putch:
  4241                           	callstack 18
  4242                           
  4243                           ;incstack = 0
  4244                           ;putch@txData stored from wreg
  4245   0017AE  6E08               	movwf	putch@txData^0,c
  4246   0017B0                     
  4247                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4248   0017B0  5008               	movf	putch@txData^0,w,c
  4249   0017B2  ECAF  F00B         	call	_EUSART1_Write
  4250   0017B6  0012               	return		;funcret
  4251   0017B8                     __end_of_putch:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function _EUSART1_Write *****************
  4255 ;; Defined at:
  4256 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  txData          1    wreg     unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  txData          1    6[COMRAM] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4270 ;;      Params:         0       0       0       0       0       0       0
  4271 ;;      Locals:         1       0       0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0
  4273 ;;      Totals:         1       0       0       0       0       0       0
  4274 ;;Total ram usage:        1 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 4
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_putch
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text16
  4285   00175E                     __ptext16:
  4286                           	callstack 0
  4287   00175E                     _EUSART1_Write:
  4288                           	callstack 18
  4289                           
  4290                           ;incstack = 0
  4291                           ;EUSART1_Write@txData stored from wreg
  4292   00175E  6E07               	movwf	EUSART1_Write@txData^0,c
  4293   001760                     l257:
  4294                           
  4295                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4296   001760  A89E               	btfss	158,4,c	;volatile
  4297   001762  EFB5  F00B         	goto	u931
  4298   001766  EFB7  F00B         	goto	u930
  4299   00176A                     u931:
  4300   00176A  EFB0  F00B         	goto	l257
  4301   00176E                     u930:
  4302   00176E                     
  4303                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4304   00176E  C007  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4305   001772  0012               	return		;funcret
  4306   001774                     __end_of_EUSART1_Write:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function _atoi *****************
  4310 ;; Defined at:
  4311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  s               2   12[COMRAM] PTR const unsigned char 
  4314 ;;		 -> STR_30(17), STR_29(3), STR_28(5), STR_27(13), 
  4315 ;;		 -> STR_26(3), STR_25(5), STR_24(24), STR_23(3), 
  4316 ;;		 -> STR_22(5), STR_21(24), STR_20(3), STR_19(2), 
  4317 ;;		 -> STR_18(5), STR_17(33), STR_16(45), STR_15(21), 
  4318 ;;		 -> STR_14(30), STR_13(24), STR_12(21), STR_11(7), 
  4319 ;;		 -> STR_10(15), STR_9(33), STR_8(5), STR_7(53), 
  4320 ;;		 -> STR_6(18), STR_5(18), STR_4(57), STR_3(26), 
  4321 ;;		 -> STR_2(20), STR_1(15), 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  n               2   19[COMRAM] int 
  4324 ;;  neg             2   17[COMRAM] int 
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  2   12[COMRAM] int 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4334 ;;      Params:         2       0       0       0       0       0       0
  4335 ;;      Locals:         4       0       0       0       0       0       0
  4336 ;;      Temps:          3       0       0       0       0       0       0
  4337 ;;      Totals:         9       0       0       0       0       0       0
  4338 ;;Total ram usage:        9 bytes
  4339 ;; Hardware stack levels used: 1
  4340 ;; Hardware stack levels required when called: 5
  4341 ;; This function calls:
  4342 ;;		___wmul
  4343 ;;		_isdigit
  4344 ;;		_isspace
  4345 ;; This function is called by:
  4346 ;;		_vfpfcnvrt
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text17
  4351   000E38                     __ptext17:
  4352                           	callstack 0
  4353   000E38                     _atoi:
  4354                           	callstack 22
  4355   000E38  0E00               	movlw	0
  4356   000E3A  6E15               	movwf	(atoi@n+1)^0,c
  4357   000E3C  0E00               	movlw	0
  4358   000E3E  6E14               	movwf	atoi@n^0,c
  4359   000E40  0E00               	movlw	0
  4360   000E42  6E13               	movwf	(atoi@neg+1)^0,c
  4361   000E44  0E00               	movlw	0
  4362   000E46  6E12               	movwf	atoi@neg^0,c
  4363   000E48  EF28  F007         	goto	l2344
  4364   000E4C                     l2340:
  4365   000E4C  4A0D               	infsnz	atoi@s^0,f,c
  4366   000E4E  2A0E               	incf	(atoi@s+1)^0,f,c
  4367   000E50                     l2344:
  4368   000E50  C00D  FFF6         	movff	atoi@s,tblptrl
  4369   000E54  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4370   000E58                     	if	0	;tblptru may be non-zero
  4371   000E58                     	endif
  4372   000E58                     	if	0	;tblptru may be non-zero
  4373   000E58                     	endif
  4374   000E58  0008               	tblrd		*
  4375   000E5A  50F5               	movf	tablat,w,c
  4376   000E5C  0A20               	xorlw	32
  4377   000E5E  B4D8               	btfsc	status,2,c
  4378   000E60  EF34  F007         	goto	u1471
  4379   000E64  EF36  F007         	goto	u1470
  4380   000E68                     u1471:
  4381   000E68  EF26  F007         	goto	l2340
  4382   000E6C                     u1470:
  4383   000E6C  C00D  FFF6         	movff	atoi@s,tblptrl
  4384   000E70  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4385   000E74                     	if	0	;tblptru may be non-zero
  4386   000E74                     	endif
  4387   000E74                     	if	0	;tblptru may be non-zero
  4388   000E74                     	endif
  4389   000E74  0008               	tblrd		*
  4390   000E76  CFF5 F00F          	movff	tablat,??_atoi
  4391   000E7A  0EF7               	movlw	247
  4392   000E7C  240F               	addwf	??_atoi^0,w,c
  4393   000E7E  6E10               	movwf	(??_atoi+1)^0,c
  4394   000E80  6A11               	clrf	(??_atoi+2)^0,c
  4395   000E82  0EFF               	movlw	255
  4396   000E84  2211               	addwfc	(??_atoi+2)^0,f,c
  4397   000E86  5011               	movf	(??_atoi+2)^0,w,c
  4398   000E88  E109               	bnz	u1480
  4399   000E8A  0E05               	movlw	5
  4400   000E8C  5C10               	subwf	(??_atoi+1)^0,w,c
  4401   000E8E  A0D8               	btfss	status,0,c
  4402   000E90  EF4C  F007         	goto	u1481
  4403   000E94  EF4E  F007         	goto	u1480
  4404   000E98                     u1481:
  4405   000E98  EF26  F007         	goto	l2340
  4406   000E9C                     u1480:
  4407   000E9C  EF58  F007         	goto	l2352
  4408   000EA0                     l2348:
  4409   000EA0  0E00               	movlw	0
  4410   000EA2  6E13               	movwf	(atoi@neg+1)^0,c
  4411   000EA4  0E01               	movlw	1
  4412   000EA6  6E12               	movwf	atoi@neg^0,c
  4413   000EA8                     l2350:
  4414   000EA8  4A0D               	infsnz	atoi@s^0,f,c
  4415   000EAA  2A0E               	incf	(atoi@s+1)^0,f,c
  4416   000EAC  EF8D  F007         	goto	l2360
  4417   000EB0                     l2352:
  4418   000EB0  C00D  FFF6         	movff	atoi@s,tblptrl
  4419   000EB4  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4420   000EB8                     	if	0	;tblptru may be non-zero
  4421   000EB8                     	endif
  4422   000EB8                     	if	0	;tblptru may be non-zero
  4423   000EB8                     	endif
  4424   000EB8  0008               	tblrd		*
  4425   000EBA  50F5               	movf	tablat,w,c
  4426   000EBC  6E0F               	movwf	??_atoi^0,c
  4427   000EBE  6A10               	clrf	(??_atoi+1)^0,c
  4428                           
  4429                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4430                           ; Switch size 1, requested type "simple"
  4431                           ; Number of cases is 1, Range of values is 0 to 0
  4432                           ; switch strategies available:
  4433                           ; Name         Instructions Cycles
  4434                           ; simple_byte            4     3 (average)
  4435                           ;	Chosen strategy is simple_byte
  4436   000EC0  5010               	movf	(??_atoi+1)^0,w,c
  4437   000EC2  0A00               	xorlw	0	; case 0
  4438   000EC4  B4D8               	btfsc	status,2,c
  4439   000EC6  EF67  F007         	goto	l3004
  4440   000ECA  EF8D  F007         	goto	l2360
  4441   000ECE                     l3004:
  4442                           
  4443                           ; Switch size 1, requested type "simple"
  4444                           ; Number of cases is 2, Range of values is 43 to 45
  4445                           ; switch strategies available:
  4446                           ; Name         Instructions Cycles
  4447                           ; simple_byte            7     4 (average)
  4448                           ;	Chosen strategy is simple_byte
  4449   000ECE  500F               	movf	??_atoi^0,w,c
  4450   000ED0  0A2B               	xorlw	43	; case 43
  4451   000ED2  B4D8               	btfsc	status,2,c
  4452   000ED4  EF54  F007         	goto	l2350
  4453   000ED8  0A06               	xorlw	6	; case 45
  4454   000EDA  B4D8               	btfsc	status,2,c
  4455   000EDC  EF50  F007         	goto	l2348
  4456   000EE0  EF8D  F007         	goto	l2360
  4457   000EE4                     l2354:
  4458   000EE4  C014  F007         	movff	atoi@n,___wmul@multiplier
  4459   000EE8  C015  F008         	movff	atoi@n+1,___wmul@multiplier+1
  4460   000EEC  0E00               	movlw	0
  4461   000EEE  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  4462   000EF0  0E0A               	movlw	10
  4463   000EF2  6E09               	movwf	___wmul@multiplicand^0,c
  4464   000EF4  EC51  F00B         	call	___wmul	;wreg free
  4465   000EF8  C00D  FFF6         	movff	atoi@s,tblptrl
  4466   000EFC  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4467   000F00                     	if	0	;tblptru may be non-zero
  4468   000F00                     	endif
  4469   000F00                     	if	0	;tblptru may be non-zero
  4470   000F00                     	endif
  4471   000F00  0008               	tblrd		*
  4472   000F02  50F5               	movf	tablat,w,c
  4473   000F04  5E07               	subwf	?___wmul^0,f,c
  4474   000F06  0E00               	movlw	0
  4475   000F08  5A08               	subwfb	(?___wmul+1)^0,f,c
  4476   000F0A  0E30               	movlw	48
  4477   000F0C  2407               	addwf	?___wmul^0,w,c
  4478   000F0E  6E14               	movwf	atoi@n^0,c
  4479   000F10  0E00               	movlw	0
  4480   000F12  2008               	addwfc	(?___wmul+1)^0,w,c
  4481   000F14  6E15               	movwf	(atoi@n+1)^0,c
  4482   000F16  EF54  F007         	goto	l2350
  4483   000F1A                     l2360:
  4484   000F1A  C00D  FFF6         	movff	atoi@s,tblptrl
  4485   000F1E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  4486   000F22                     	if	0	;tblptru may be non-zero
  4487   000F22                     	endif
  4488   000F22                     	if	0	;tblptru may be non-zero
  4489   000F22                     	endif
  4490   000F22  0008               	tblrd		*
  4491   000F24  CFF5 F00F          	movff	tablat,??_atoi
  4492   000F28  0ED0               	movlw	208
  4493   000F2A  240F               	addwf	??_atoi^0,w,c
  4494   000F2C  6E10               	movwf	(??_atoi+1)^0,c
  4495   000F2E  6A11               	clrf	(??_atoi+2)^0,c
  4496   000F30  0EFF               	movlw	255
  4497   000F32  2211               	addwfc	(??_atoi+2)^0,f,c
  4498   000F34  5011               	movf	(??_atoi+2)^0,w,c
  4499   000F36  E109               	bnz	u1490
  4500   000F38  0E0A               	movlw	10
  4501   000F3A  5C10               	subwf	(??_atoi+1)^0,w,c
  4502   000F3C  A0D8               	btfss	status,0,c
  4503   000F3E  EFA3  F007         	goto	u1491
  4504   000F42  EFA5  F007         	goto	u1490
  4505   000F46                     u1491:
  4506   000F46  EF72  F007         	goto	l2354
  4507   000F4A                     u1490:
  4508   000F4A  5012               	movf	atoi@neg^0,w,c
  4509   000F4C  1013               	iorwf	(atoi@neg+1)^0,w,c
  4510   000F4E  A4D8               	btfss	status,2,c
  4511   000F50  EFAC  F007         	goto	u1501
  4512   000F54  EFAE  F007         	goto	u1500
  4513   000F58                     u1501:
  4514   000F58  EFBC  F007         	goto	l1193
  4515   000F5C                     u1500:
  4516   000F5C  C014  F00F         	movff	atoi@n,??_atoi
  4517   000F60  C015  F010         	movff	atoi@n+1,??_atoi+1
  4518   000F64  1E0F               	comf	??_atoi^0,f,c
  4519   000F66  1E10               	comf	(??_atoi+1)^0,f,c
  4520   000F68  4A0F               	infsnz	??_atoi^0,f,c
  4521   000F6A  2A10               	incf	(??_atoi+1)^0,f,c
  4522   000F6C  C00F  F00D         	movff	??_atoi,?_atoi
  4523   000F70  C010  F00E         	movff	??_atoi+1,?_atoi+1
  4524   000F74  EFC0  F007         	goto	l1196
  4525   000F78                     l1193:
  4526   000F78  C014  F00D         	movff	atoi@n,?_atoi
  4527   000F7C  C015  F00E         	movff	atoi@n+1,?_atoi+1
  4528   000F80                     l1196:
  4529   000F80  0012               	return		;funcret
  4530   000F82                     __end_of_atoi:
  4531                           	callstack 0
  4532                           
  4533 ;; *************** function _isspace *****************
  4534 ;; Defined at:
  4535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  c               2    6[COMRAM] int 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  2    6[COMRAM] int 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4549 ;;      Params:         2       0       0       0       0       0       0
  4550 ;;      Locals:         1       0       0       0       0       0       0
  4551 ;;      Temps:          2       0       0       0       0       0       0
  4552 ;;      Totals:         5       0       0       0       0       0       0
  4553 ;;Total ram usage:        5 bytes
  4554 ;; Hardware stack levels used: 1
  4555 ;; Hardware stack levels required when called: 4
  4556 ;; This function calls:
  4557 ;;		Nothing
  4558 ;; This function is called by:
  4559 ;;		_atoi
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text18
  4564   001400                     __ptext18:
  4565                           	callstack 0
  4566   001400                     _isspace:
  4567                           	callstack 22
  4568   001400  0E01               	movlw	1
  4569   001402  6E0B               	movwf	_isspace$1632^0,c
  4570   001404  0E20               	movlw	32
  4571   001406  1807               	xorwf	isspace@c^0,w,c
  4572   001408  1008               	iorwf	(isspace@c+1)^0,w,c
  4573   00140A  B4D8               	btfsc	status,2,c
  4574   00140C  EF0A  F00A         	goto	u1261
  4575   001410  EF0C  F00A         	goto	u1260
  4576   001414                     u1261:
  4577   001414  EF1F  F00A         	goto	l2230
  4578   001418                     u1260:
  4579   001418  0EF7               	movlw	247
  4580   00141A  2407               	addwf	isspace@c^0,w,c
  4581   00141C  6E09               	movwf	??_isspace^0,c
  4582   00141E  0EFF               	movlw	255
  4583   001420  2008               	addwfc	(isspace@c+1)^0,w,c
  4584   001422  6E0A               	movwf	(??_isspace+1)^0,c
  4585   001424  500A               	movf	(??_isspace+1)^0,w,c
  4586   001426  E109               	bnz	u1270
  4587   001428  0E05               	movlw	5
  4588   00142A  5C09               	subwf	??_isspace^0,w,c
  4589   00142C  A0D8               	btfss	status,0,c
  4590   00142E  EF1B  F00A         	goto	u1271
  4591   001432  EF1D  F00A         	goto	u1270
  4592   001436                     u1271:
  4593   001436  EF1F  F00A         	goto	l2230
  4594   00143A                     u1270:
  4595   00143A  0E00               	movlw	0
  4596   00143C  6E0B               	movwf	_isspace$1632^0,c
  4597   00143E                     l2230:
  4598   00143E  C00B  F007         	movff	_isspace$1632,?_isspace
  4599   001442  6A08               	clrf	(?_isspace+1)^0,c
  4600   001444  0012               	return		;funcret
  4601   001446                     __end_of_isspace:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _isdigit *****************
  4605 ;; Defined at:
  4606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  c               2    6[COMRAM] int 
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  2    6[COMRAM] int 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4620 ;;      Params:         2       0       0       0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0
  4622 ;;      Temps:          2       0       0       0       0       0       0
  4623 ;;      Totals:         4       0       0       0       0       0       0
  4624 ;;Total ram usage:        4 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 4
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_vfpfcnvrt
  4631 ;;		_atoi
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text19
  4636   0015AC                     __ptext19:
  4637                           	callstack 0
  4638   0015AC                     _isdigit:
  4639                           	callstack 23
  4640   0015AC  0ED0               	movlw	208
  4641   0015AE  2407               	addwf	isdigit@c^0,w,c
  4642   0015B0  6E09               	movwf	??_isdigit^0,c
  4643   0015B2  0EFF               	movlw	255
  4644   0015B4  2008               	addwfc	(isdigit@c+1)^0,w,c
  4645   0015B6  6E0A               	movwf	(??_isdigit+1)^0,c
  4646   0015B8  500A               	movf	(??_isdigit+1)^0,w,c
  4647   0015BA  E10A               	bnz	u1240
  4648   0015BC  0E0A               	movlw	10
  4649   0015BE  5C09               	subwf	??_isdigit^0,w,c
  4650   0015C0  A0D8               	btfss	status,0,c
  4651   0015C2  EFE5  F00A         	goto	u1241
  4652   0015C6  EFE8  F00A         	goto	u1240
  4653   0015CA                     u1241:
  4654   0015CA  0E01               	movlw	1
  4655   0015CC  EFE9  F00A         	goto	u1250
  4656   0015D0                     u1240:
  4657   0015D0  0E00               	movlw	0
  4658   0015D2                     u1250:
  4659   0015D2  6E07               	movwf	?_isdigit^0,c
  4660   0015D4  6A08               	clrf	(?_isdigit+1)^0,c
  4661   0015D6  0012               	return		;funcret
  4662   0015D8                     __end_of_isdigit:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function ___wmul *****************
  4666 ;; Defined at:
  4667 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  multiplier      2    6[COMRAM] unsigned int 
  4670 ;;  multiplicand    2    8[COMRAM] unsigned int 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  product         2   10[COMRAM] unsigned int 
  4673 ;; Return value:  Size  Location     Type
  4674 ;;                  2    6[COMRAM] unsigned int 
  4675 ;; Registers used:
  4676 ;;		wreg, status,2, status,0, prodl, prodh
  4677 ;; Tracked objects:
  4678 ;;		On entry : 0/0
  4679 ;;		On exit  : 0/0
  4680 ;;		Unchanged: 0/0
  4681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4682 ;;      Params:         4       0       0       0       0       0       0
  4683 ;;      Locals:         2       0       0       0       0       0       0
  4684 ;;      Temps:          0       0       0       0       0       0       0
  4685 ;;      Totals:         6       0       0       0       0       0       0
  4686 ;;Total ram usage:        6 bytes
  4687 ;; Hardware stack levels used: 1
  4688 ;; Hardware stack levels required when called: 4
  4689 ;; This function calls:
  4690 ;;		Nothing
  4691 ;; This function is called by:
  4692 ;;		_atoi
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695                           
  4696                           	psect	text20
  4697   0016A2                     __ptext20:
  4698                           	callstack 0
  4699   0016A2                     ___wmul:
  4700                           	callstack 22
  4701   0016A2  5007               	movf	___wmul@multiplier^0,w,c
  4702   0016A4  0209               	mulwf	___wmul@multiplicand^0,c
  4703   0016A6  CFF3 F00B          	movff	prodl,___wmul@product
  4704   0016AA  CFF4 F00C          	movff	prodh,___wmul@product+1
  4705   0016AE  5007               	movf	___wmul@multiplier^0,w,c
  4706   0016B0  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  4707   0016B2  50F3               	movf	243,w,c
  4708   0016B4  260C               	addwf	(___wmul@product+1)^0,f,c
  4709   0016B6  5008               	movf	(___wmul@multiplier+1)^0,w,c
  4710   0016B8  0209               	mulwf	___wmul@multiplicand^0,c
  4711   0016BA  50F3               	movf	243,w,c
  4712   0016BC  260C               	addwf	(___wmul@product+1)^0,f,c
  4713   0016BE  C00B  F007         	movff	___wmul@product,?___wmul
  4714   0016C2  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  4715   0016C6  0012               	return		;funcret
  4716   0016C8                     __end_of___wmul:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _getEchoPulseDurationForeground *****************
  4720 ;; Defined at:
  4721 ;;		line 168 in file "main.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;		None
  4724 ;; Auto vars:     Size  Location     Type
  4725 ;;  end             2   14[COMRAM] unsigned short 
  4726 ;;  start           2   12[COMRAM] unsigned short 
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  2   10[COMRAM] unsigned short 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2, status,0, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4736 ;;      Params:         2       0       0       0       0       0       0
  4737 ;;      Locals:         4       0       0       0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0       0
  4739 ;;      Totals:         6       0       0       0       0       0       0
  4740 ;;Total ram usage:        6 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 5
  4743 ;; This function calls:
  4744 ;;		_CCP4_CaptureRead
  4745 ;;		_CCP4_IsCapturedDataReady
  4746 ;; This function is called by:
  4747 ;;		_main
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text21
  4752   00134A                     __ptext21:
  4753                           	callstack 0
  4754   00134A                     _getEchoPulseDurationForeground:
  4755                           	callstack 25
  4756   00134A                     
  4757                           ;main.c: 170:     uint16_t start, end;;main.c: 172:     CCP4CONbits.CCP4M = 0b0101;
  4758   00134A  010F               	movlb	15	; () banked
  4759   00134C  5157               	movf	87,w,b	;volatile
  4760   00134E  0BF0               	andlw	-16
  4761   001350  0905               	iorlw	5
  4762   001352  6F57               	movwf	87,b	;volatile
  4763   001354                     
  4764                           ; BSR set to: 15
  4765                           ;main.c: 173:     PIR4bits.CCP4IF = 0;
  4766   001354  927B               	bcf	123,1,c	;volatile
  4767   001356                     l2596:
  4768   001356  ECEC  F00A         	call	_CCP4_IsCapturedDataReady	;wreg free
  4769   00135A  0900               	iorlw	0
  4770   00135C  B4D8               	btfsc	status,2,c
  4771   00135E  EFB3  F009         	goto	u1701
  4772   001362  EFB5  F009         	goto	u1700
  4773   001366                     u1701:
  4774   001366  EFAB  F009         	goto	l2596
  4775   00136A                     u1700:
  4776   00136A                     
  4777                           ;main.c: 175:     start = CCP4_CaptureRead();
  4778   00136A  ECCE  F00B         	call	_CCP4_CaptureRead	;wreg free
  4779   00136E  C007  F00D         	movff	?_CCP4_CaptureRead,getEchoPulseDurationForeground@start
  4780   001372  C008  F00E         	movff	?_CCP4_CaptureRead+1,getEchoPulseDurationForeground@start+1
  4781   001376                     
  4782                           ;main.c: 177:     CCP4CONbits.CCP4M = 0b0100;
  4783   001376  010F               	movlb	15	; () banked
  4784   001378  5157               	movf	87,w,b	;volatile
  4785   00137A  0BF0               	andlw	-16
  4786   00137C  0904               	iorlw	4
  4787   00137E  6F57               	movwf	87,b	;volatile
  4788   001380                     
  4789                           ; BSR set to: 15
  4790                           ;main.c: 178:     PIR4bits.CCP4IF = 0;
  4791   001380  927B               	bcf	123,1,c	;volatile
  4792   001382                     l2604:
  4793   001382  ECEC  F00A         	call	_CCP4_IsCapturedDataReady	;wreg free
  4794   001386  0900               	iorlw	0
  4795   001388  B4D8               	btfsc	status,2,c
  4796   00138A  EFC9  F009         	goto	u1711
  4797   00138E  EFCB  F009         	goto	u1710
  4798   001392                     u1711:
  4799   001392  EFC1  F009         	goto	l2604
  4800   001396                     u1710:
  4801   001396                     
  4802                           ;main.c: 180:     end = CCP4_CaptureRead();
  4803   001396  ECCE  F00B         	call	_CCP4_CaptureRead	;wreg free
  4804   00139A  C007  F00F         	movff	?_CCP4_CaptureRead,getEchoPulseDurationForeground@end
  4805   00139E  C008  F010         	movff	?_CCP4_CaptureRead+1,getEchoPulseDurationForeground@end+1
  4806   0013A2                     
  4807                           ;main.c: 182:     return(end - start);
  4808   0013A2  500D               	movf	getEchoPulseDurationForeground@start^0,w,c
  4809   0013A4  5C0F               	subwf	getEchoPulseDurationForeground@end^0,w,c
  4810   0013A6  6E0B               	movwf	?_getEchoPulseDurationForeground^0,c
  4811   0013A8  500E               	movf	(getEchoPulseDurationForeground@start+1)^0,w,c
  4812   0013AA  5810               	subwfb	(getEchoPulseDurationForeground@end+1)^0,w,c
  4813   0013AC  6E0C               	movwf	(?_getEchoPulseDurationForeground+1)^0,c
  4814   0013AE  0012               	return		;funcret
  4815   0013B0                     __end_of_getEchoPulseDurationForeground:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _CCP4_IsCapturedDataReady *****************
  4819 ;; Defined at:
  4820 ;;		line 79 in file "mcc_generated_files/ccp4.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  status          1    6[COMRAM] _Bool 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      _Bool 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4834 ;;      Params:         0       0       0       0       0       0       0
  4835 ;;      Locals:         1       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0
  4837 ;;      Totals:         1       0       0       0       0       0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 4
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_getEchoPulseDurationForeground
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text22
  4849   0015D8                     __ptext22:
  4850                           	callstack 0
  4851   0015D8                     _CCP4_IsCapturedDataReady:
  4852                           	callstack 25
  4853   0015D8                     
  4854                           ;mcc_generated_files/ccp4.c: 82:     _Bool status = PIR4bits.CCP4IF;
  4855   0015D8  B27B               	btfsc	123,1,c	;volatile
  4856   0015DA  EFF1  F00A         	goto	u1601
  4857   0015DE  EFF4  F00A         	goto	u1600
  4858   0015E2                     u1601:
  4859   0015E2  0E01               	movlw	1
  4860   0015E4  EFF5  F00A         	goto	u1606
  4861   0015E8                     u1600:
  4862   0015E8  0E00               	movlw	0
  4863   0015EA                     u1606:
  4864   0015EA  6E07               	movwf	CCP4_IsCapturedDataReady@status^0,c
  4865                           
  4866                           ;mcc_generated_files/ccp4.c: 83:     if(status)
  4867   0015EC  5007               	movf	CCP4_IsCapturedDataReady@status^0,w,c
  4868   0015EE  B4D8               	btfsc	status,2,c
  4869   0015F0  EFFC  F00A         	goto	u1611
  4870   0015F4  EFFE  F00A         	goto	u1610
  4871   0015F8                     u1611:
  4872   0015F8  EFFF  F00A         	goto	l2464
  4873   0015FC                     u1610:
  4874   0015FC                     
  4875                           ;mcc_generated_files/ccp4.c: 84:         PIR4bits.CCP4IF = 0;
  4876   0015FC  927B               	bcf	123,1,c	;volatile
  4877   0015FE                     l2464:
  4878                           
  4879                           ;mcc_generated_files/ccp4.c: 85:     return (status);
  4880   0015FE  5007               	movf	CCP4_IsCapturedDataReady@status^0,w,c
  4881   001600  0012               	return		;funcret
  4882   001602                     __end_of_CCP4_IsCapturedDataReady:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _CCP4_CaptureRead *****************
  4886 ;; Defined at:
  4887 ;;		line 88 in file "mcc_generated_files/ccp4.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  module          2    8[COMRAM] struct CCPR4Reg_tag
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  2    6[COMRAM] unsigned short 
  4894 ;; Registers used:
  4895 ;;		None
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4901 ;;      Params:         2       0       0       0       0       0       0
  4902 ;;      Locals:         2       0       0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0
  4904 ;;      Totals:         4       0       0       0       0       0       0
  4905 ;;Total ram usage:        4 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; Hardware stack levels required when called: 4
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_getEchoPulseDurationForeground
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text23
  4916   00179C                     __ptext23:
  4917                           	callstack 0
  4918   00179C                     _CCP4_CaptureRead:
  4919                           	callstack 25
  4920   00179C                     
  4921                           ;mcc_generated_files/ccp4.c: 90:     CCP4_PERIOD_REG_T module;;mcc_generated_files/ccp4.
      +                          c: 93:     module.ccpr4l = CCPR4L;
  4922   00179C  CF58 F009          	movff	3928,CCP4_CaptureRead@module	;volatile
  4923                           
  4924                           ;mcc_generated_files/ccp4.c: 94:     module.ccpr4h = CCPR4H;
  4925   0017A0  CF59 F00A          	movff	3929,CCP4_CaptureRead@module+1	;volatile
  4926                           
  4927                           ;mcc_generated_files/ccp4.c: 97:     return module.ccpr4_16Bit;
  4928   0017A4  C009  F007         	movff	CCP4_CaptureRead@module,?_CCP4_CaptureRead
  4929   0017A8  C00A  F008         	movff	CCP4_CaptureRead@module+1,?_CCP4_CaptureRead+1
  4930   0017AC  0012               	return		;funcret
  4931   0017AE                     __end_of_CCP4_CaptureRead:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _convertEchToCm *****************
  4935 ;; Defined at:
  4936 ;;		line 202 in file "main.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  timerCounts     2   16[COMRAM] unsigned short 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  2   16[COMRAM] unsigned short 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4950 ;;      Params:         2       0       0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0
  4952 ;;      Temps:          3       0       0       0       0       0       0
  4953 ;;      Totals:         5       0       0       0       0       0       0
  4954 ;;Total ram usage:        5 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 4
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_main
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text24
  4965   0016C8                     __ptext24:
  4966                           	callstack 0
  4967   0016C8                     _convertEchToCm:
  4968                           	callstack 26
  4969   0016C8                     
  4970                           ;main.c: 203:     return(timerCounts >> 7);
  4971   0016C8  C011  F013         	movff	convertEchToCm@timerCounts,??_convertEchToCm
  4972   0016CC  C012  F014         	movff	convertEchToCm@timerCounts+1,??_convertEchToCm+1
  4973   0016D0  0E07               	movlw	7
  4974   0016D2  6E15               	movwf	(??_convertEchToCm+2)^0,c
  4975   0016D4                     u1725:
  4976   0016D4  90D8               	bcf	status,0,c
  4977   0016D6  3214               	rrcf	(??_convertEchToCm+1)^0,f,c
  4978   0016D8  3213               	rrcf	??_convertEchToCm^0,f,c
  4979   0016DA  2E15               	decfsz	(??_convertEchToCm+2)^0,f,c
  4980   0016DC  EF6A  F00B         	goto	u1725
  4981   0016E0  C013  F011         	movff	??_convertEchToCm,?_convertEchToCm
  4982   0016E4  C014  F012         	movff	??_convertEchToCm+1,?_convertEchToCm+1
  4983   0016E8  0012               	return		;funcret
  4984   0016EA                     __end_of_convertEchToCm:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function _TMR0_WriteTimer *****************
  4988 ;; Defined at:
  4989 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  timerVal        2    6[COMRAM] unsigned short 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5003 ;;      Params:         2       0       0       0       0       0       0
  5004 ;;      Locals:         0       0       0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0
  5006 ;;      Totals:         2       0       0       0       0       0       0
  5007 ;;Total ram usage:        2 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; Hardware stack levels required when called: 4
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text25
  5018   0017B8                     __ptext25:
  5019                           	callstack 0
  5020   0017B8                     _TMR0_WriteTimer:
  5021                           	callstack 26
  5022   0017B8                     
  5023                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  5024   0017B8  5008               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  5025   0017BA  6ED7               	movwf	215,c	;volatile
  5026   0017BC                     
  5027                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  5028   0017BC  C007  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  5029   0017C0  0012               	return		;funcret
  5030   0017C2                     __end_of_TMR0_WriteTimer:
  5031                           	callstack 0
  5032                           
  5033 ;; *************** function _SYSTEM_Initialize *****************
  5034 ;; Defined at:
  5035 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5049 ;;      Params:         0       0       0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0
  5052 ;;      Totals:         0       0       0       0       0       0       0
  5053 ;;Total ram usage:        0 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 6
  5056 ;; This function calls:
  5057 ;;		_CCP4_Initialize
  5058 ;;		_EUSART1_Initialize
  5059 ;;		_INTERRUPT_Initialize
  5060 ;;		_OSCILLATOR_Initialize
  5061 ;;		_PIN_MANAGER_Initialize
  5062 ;;		_TMR0_Initialize
  5063 ;;		_TMR1_Initialize
  5064 ;; This function is called by:
  5065 ;;		_main
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text26
  5070   0016EA                     __ptext26:
  5071                           	callstack 0
  5072   0016EA                     _SYSTEM_Initialize:
  5073                           	callstack 24
  5074   0016EA                     
  5075                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  5076   0016EA  ECFA  F00B         	call	_INTERRUPT_Initialize	;wreg free
  5077   0016EE                     
  5078                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  5079   0016EE  EC01  F00B         	call	_PIN_MANAGER_Initialize	;wreg free
  5080   0016F2                     
  5081                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  5082   0016F2  ECA1  F00B         	call	_OSCILLATOR_Initialize	;wreg free
  5083   0016F6                     
  5084                           ;mcc_generated_files/mcc.c: 56:     TMR1_Initialize();
  5085   0016F6  EC93  F00B         	call	_TMR1_Initialize	;wreg free
  5086   0016FA                     
  5087                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  5088   0016FA  ECA1  F00A         	call	_TMR0_Initialize	;wreg free
  5089   0016FE                     
  5090                           ;mcc_generated_files/mcc.c: 58:     CCP4_Initialize();
  5091   0016FE  ECBA  F00B         	call	_CCP4_Initialize	;wreg free
  5092   001702                     
  5093                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
  5094   001702  EC65  F00A         	call	_EUSART1_Initialize	;wreg free
  5095   001706  0012               	return		;funcret
  5096   001708                     __end_of_SYSTEM_Initialize:
  5097                           	callstack 0
  5098                           
  5099 ;; *************** function _TMR1_Initialize *****************
  5100 ;; Defined at:
  5101 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;		None
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5115 ;;      Params:         0       0       0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0
  5118 ;;      Totals:         0       0       0       0       0       0       0
  5119 ;;Total ram usage:        0 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 4
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_SYSTEM_Initialize
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text27
  5130   001726                     __ptext27:
  5131                           	callstack 0
  5132   001726                     _TMR1_Initialize:
  5133                           	callstack 25
  5134   001726                     
  5135                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5136   001726  0E00               	movlw	0
  5137   001728  6ECC               	movwf	204,c	;volatile
  5138                           
  5139                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0x06;
  5140   00172A  0E06               	movlw	6
  5141   00172C  6ECF               	movwf	207,c	;volatile
  5142                           
  5143                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  5144   00172E  0E00               	movlw	0
  5145   001730  6ECE               	movwf	206,c	;volatile
  5146   001732                     
  5147                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  5148   001732  CFCE F06A          	movff	4046,_timer1ReloadVal	;volatile
  5149   001736  CFCF F06B          	movff	4047,_timer1ReloadVal+1	;volatile
  5150   00173A                     
  5151                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  5152   00173A  909E               	bcf	158,0,c	;volatile
  5153                           
  5154                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  5155   00173C  0E31               	movlw	49
  5156   00173E  6ECD               	movwf	205,c	;volatile
  5157   001740  0012               	return		;funcret
  5158   001742                     __end_of_TMR1_Initialize:
  5159                           	callstack 0
  5160                           
  5161 ;; *************** function _TMR0_Initialize *****************
  5162 ;; Defined at:
  5163 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;		None
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      void 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5177 ;;      Params:         0       0       0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0       0
  5179 ;;      Temps:          2       0       0       0       0       0       0
  5180 ;;      Totals:         2       0       0       0       0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; Hardware stack levels required when called: 5
  5184 ;; This function calls:
  5185 ;;		_TMR0_SetInterruptHandler
  5186 ;; This function is called by:
  5187 ;;		_SYSTEM_Initialize
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           	psect	text28
  5192   001542                     __ptext28:
  5193                           	callstack 0
  5194   001542                     _TMR0_Initialize:
  5195                           	callstack 24
  5196   001542                     
  5197                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5198   001542  9CD5               	bcf	213,6,c	;volatile
  5199   001544                     
  5200                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  5201   001544  0E00               	movlw	0
  5202   001546  6ED7               	movwf	215,c	;volatile
  5203                           
  5204                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x23;
  5205   001548  0E23               	movlw	35
  5206   00154A  6ED6               	movwf	214,c	;volatile
  5207   00154C                     
  5208                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5209   00154C  50D6               	movf	214,w,c	;volatile
  5210   00154E  CFD7 F009          	movff	4055,??_TMR0_Initialize	;volatile
  5211   001552  6A0A               	clrf	(??_TMR0_Initialize+1)^0,c
  5212   001554  C009  F00A         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5213   001558  6A09               	clrf	??_TMR0_Initialize^0,c
  5214   00155A  1009               	iorwf	??_TMR0_Initialize^0,w,c
  5215   00155C  6E55               	movwf	_timer0ReloadVal^0,c	;volatile
  5216   00155E  500A               	movf	(??_TMR0_Initialize+1)^0,w,c
  5217   001560  6E56               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5218   001562                     
  5219                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5220   001562  94F2               	bcf	242,2,c	;volatile
  5221   001564                     
  5222                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5223   001564  8AF2               	bsf	242,5,c	;volatile
  5224   001566                     
  5225                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5226   001566  0EF8               	movlw	low _TMR0_DefaultInterruptHandler
  5227   001568  6E07               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5228   00156A  0E17               	movlw	high _TMR0_DefaultInterruptHandler
  5229   00156C  6E08               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5230   00156E  ECE1  F00B         	call	_TMR0_SetInterruptHandler	;wreg free
  5231   001572                     
  5232                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x94;
  5233   001572  0E94               	movlw	148
  5234   001574  6ED5               	movwf	213,c	;volatile
  5235   001576  0012               	return		;funcret
  5236   001578                     __end_of_TMR0_Initialize:
  5237                           	callstack 0
  5238                           
  5239 ;; *************** function _TMR0_SetInterruptHandler *****************
  5240 ;; Defined at:
  5241 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  5244 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5256 ;;      Params:         2       0       0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0
  5259 ;;      Totals:         2       0       0       0       0       0       0
  5260 ;;Total ram usage:        2 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 4
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_TMR0_Initialize
  5267 ;;		_main
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text29
  5272   0017C2                     __ptext29:
  5273                           	callstack 0
  5274   0017C2                     _TMR0_SetInterruptHandler:
  5275                           	callstack 26
  5276   0017C2                     
  5277                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5278   0017C2  C007  F068         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5279   0017C6  C008  F069         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5280   0017CA  0012               	return		;funcret
  5281   0017CC                     __end_of_TMR0_SetInterruptHandler:
  5282                           	callstack 0
  5283                           
  5284 ;; *************** function _PIN_MANAGER_Initialize *****************
  5285 ;; Defined at:
  5286 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;		None
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  1    wreg      void 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5300 ;;      Params:         0       0       0       0       0       0       0
  5301 ;;      Locals:         0       0       0       0       0       0       0
  5302 ;;      Temps:          0       0       0       0       0       0       0
  5303 ;;      Totals:         0       0       0       0       0       0       0
  5304 ;;Total ram usage:        0 bytes
  5305 ;; Hardware stack levels used: 1
  5306 ;; Hardware stack levels required when called: 4
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		_SYSTEM_Initialize
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text30
  5315   001602                     __ptext30:
  5316                           	callstack 0
  5317   001602                     _PIN_MANAGER_Initialize:
  5318                           	callstack 25
  5319   001602                     
  5320                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5321   001602  0E00               	movlw	0
  5322   001604  6E89               	movwf	137,c	;volatile
  5323                           
  5324                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5325   001606  0E00               	movlw	0
  5326   001608  6E8A               	movwf	138,c	;volatile
  5327                           
  5328                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5329   00160A  0E00               	movlw	0
  5330   00160C  6E8B               	movwf	139,c	;volatile
  5331   00160E                     
  5332                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5333   00160E  6892               	setf	146,c	;volatile
  5334   001610                     
  5335                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5336   001610  6893               	setf	147,c	;volatile
  5337                           
  5338                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xAF;
  5339   001612  0EAF               	movlw	175
  5340   001614  6E94               	movwf	148,c	;volatile
  5341                           
  5342                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x2C;
  5343   001616  0E2C               	movlw	44
  5344   001618  010F               	movlb	15	; () banked
  5345   00161A  6F3A               	movwf	58,b	;volatile
  5346                           
  5347                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3E;
  5348   00161C  0E3E               	movlw	62
  5349   00161E  6F39               	movwf	57,b	;volatile
  5350                           
  5351                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5352   001620  0E2F               	movlw	47
  5353   001622  6F38               	movwf	56,b	;volatile
  5354                           
  5355                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5356   001624  0E00               	movlw	0
  5357   001626  6E61               	movwf	97,c	;volatile
  5358   001628                     
  5359                           ; BSR set to: 15
  5360                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5361   001628  8EF1               	bsf	241,7,c	;volatile
  5362   00162A                     
  5363                           ; BSR set to: 15
  5364   00162A  0012               	return		;funcret
  5365   00162C                     __end_of_PIN_MANAGER_Initialize:
  5366                           	callstack 0
  5367                           
  5368 ;; *************** function _OSCILLATOR_Initialize *****************
  5369 ;; Defined at:
  5370 ;;		line 62 in file "mcc_generated_files/mcc.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  1    wreg      void 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5384 ;;      Params:         0       0       0       0       0       0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0
  5387 ;;      Totals:         0       0       0       0       0       0       0
  5388 ;;Total ram usage:        0 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; Hardware stack levels required when called: 4
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_SYSTEM_Initialize
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text31
  5399   001742                     __ptext31:
  5400                           	callstack 0
  5401   001742                     _OSCILLATOR_Initialize:
  5402                           	callstack 25
  5403   001742                     
  5404                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  5405   001742  0E70               	movlw	112
  5406   001744  6ED3               	movwf	211,c	;volatile
  5407                           
  5408                           ;mcc_generated_files/mcc.c: 67:     OSCCON2 = 0x04;
  5409   001746  0E04               	movlw	4
  5410   001748  6ED2               	movwf	210,c	;volatile
  5411                           
  5412                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x40;
  5413   00174A  0E40               	movlw	64
  5414   00174C  6E9B               	movwf	155,c	;volatile
  5415   00174E                     l48:
  5416                           
  5417                           ;mcc_generated_files/mcc.c: 71:     while(PLLRDY == 0)
  5418   00174E  AED2               	btfss	4050,7,c	;volatile
  5419   001750  EFAC  F00B         	goto	u1621
  5420   001754  EFAE  F00B         	goto	u1620
  5421   001758                     u1621:
  5422   001758  EFA7  F00B         	goto	l48
  5423   00175C                     u1620:
  5424   00175C  0012               	return		;funcret
  5425   00175E                     __end_of_OSCILLATOR_Initialize:
  5426                           	callstack 0
  5427                           
  5428 ;; *************** function _INTERRUPT_Initialize *****************
  5429 ;; Defined at:
  5430 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		None
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5444 ;;      Params:         0       0       0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0
  5447 ;;      Totals:         0       0       0       0       0       0       0
  5448 ;;Total ram usage:        0 bytes
  5449 ;; Hardware stack levels used: 1
  5450 ;; Hardware stack levels required when called: 4
  5451 ;; This function calls:
  5452 ;;		Nothing
  5453 ;; This function is called by:
  5454 ;;		_SYSTEM_Initialize
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text32
  5459   0017F4                     __ptext32:
  5460                           	callstack 0
  5461   0017F4                     _INTERRUPT_Initialize:
  5462                           	callstack 25
  5463   0017F4                     
  5464                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5465   0017F4  9ED0               	bcf	208,7,c	;volatile
  5466   0017F6  0012               	return		;funcret
  5467   0017F8                     __end_of_INTERRUPT_Initialize:
  5468                           	callstack 0
  5469                           
  5470 ;; *************** function _EUSART1_Initialize *****************
  5471 ;; Defined at:
  5472 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0, cstack
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5486 ;;      Params:         0       0       0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0       0       0
  5488 ;;      Temps:          0       0       0       0       0       0       0
  5489 ;;      Totals:         0       0       0       0       0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 5
  5493 ;; This function calls:
  5494 ;;		_EUSART1_SetErrorHandler
  5495 ;;		_EUSART1_SetFramingErrorHandler
  5496 ;;		_EUSART1_SetOverrunErrorHandler
  5497 ;; This function is called by:
  5498 ;;		_SYSTEM_Initialize
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text33
  5503   0014CA                     __ptext33:
  5504                           	callstack 0
  5505   0014CA                     _EUSART1_Initialize:
  5506                           	callstack 24
  5507   0014CA                     
  5508                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5509   0014CA  0E08               	movlw	8
  5510   0014CC  6EB8               	movwf	184,c	;volatile
  5511                           
  5512                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5513   0014CE  0E90               	movlw	144
  5514   0014D0  6EAB               	movwf	171,c	;volatile
  5515                           
  5516                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5517   0014D2  0E24               	movlw	36
  5518   0014D4  6EAC               	movwf	172,c	;volatile
  5519                           
  5520                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5521   0014D6  0E82               	movlw	130
  5522   0014D8  6EAF               	movwf	175,c	;volatile
  5523                           
  5524                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5525   0014DA  0E06               	movlw	6
  5526   0014DC  6EB0               	movwf	176,c	;volatile
  5527   0014DE                     
  5528                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5529   0014DE  0E00               	movlw	0
  5530   0014E0  6E07               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5531   0014E2  0E00               	movlw	0
  5532   0014E4  6E08               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5533   0014E6  ECEB  F00B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5534   0014EA                     
  5535                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5536   0014EA  0E00               	movlw	0
  5537   0014EC  6E07               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5538   0014EE  0E00               	movlw	0
  5539   0014F0  6E08               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5540   0014F2  ECE6  F00B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5541   0014F6                     
  5542                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5543   0014F6  0E00               	movlw	0
  5544   0014F8  6E07               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5545   0014FA  0E00               	movlw	0
  5546   0014FC  6E08               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5547   0014FE  ECF0  F00B         	call	_EUSART1_SetErrorHandler	;wreg free
  5548   001502                     
  5549                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5550   001502  0E00               	movlw	0
  5551   001504  6E58               	movwf	_eusart1RxLastError^0,c	;volatile
  5552   001506  0012               	return		;funcret
  5553   001508                     __end_of_EUSART1_Initialize:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5557 ;; Defined at:
  5558 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  5561 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;		None
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5573 ;;      Params:         2       0       0       0       0       0       0
  5574 ;;      Locals:         0       0       0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0
  5576 ;;      Totals:         2       0       0       0       0       0       0
  5577 ;;Total ram usage:        2 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 4
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_EUSART1_Initialize
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           	psect	text34
  5588   0017CC                     __ptext34:
  5589                           	callstack 0
  5590   0017CC                     _EUSART1_SetOverrunErrorHandler:
  5591                           	callstack 24
  5592   0017CC                     
  5593                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5594   0017CC  C007  F064         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5595   0017D0  C008  F065         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5596   0017D4  0012               	return		;funcret
  5597   0017D6                     __end_of_EUSART1_SetOverrunErrorHandler:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5601 ;; Defined at:
  5602 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  5605 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2, status,0
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5617 ;;      Params:         2       0       0       0       0       0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0
  5620 ;;      Totals:         2       0       0       0       0       0       0
  5621 ;;Total ram usage:        2 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 4
  5624 ;; This function calls:
  5625 ;;		Nothing
  5626 ;; This function is called by:
  5627 ;;		_EUSART1_Initialize
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text35
  5632   0017D6                     __ptext35:
  5633                           	callstack 0
  5634   0017D6                     _EUSART1_SetFramingErrorHandler:
  5635                           	callstack 24
  5636   0017D6                     
  5637                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5638   0017D6  C007  F066         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5639   0017DA  C008  F067         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5640   0017DE  0012               	return		;funcret
  5641   0017E0                     __end_of_EUSART1_SetFramingErrorHandler:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _EUSART1_SetErrorHandler *****************
  5645 ;; Defined at:
  5646 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  5649 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, status,2, status,0
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5661 ;;      Params:         2       0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0
  5664 ;;      Totals:         2       0       0       0       0       0       0
  5665 ;;Total ram usage:        2 bytes
  5666 ;; Hardware stack levels used: 1
  5667 ;; Hardware stack levels required when called: 4
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_EUSART1_Initialize
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text36
  5676   0017E0                     __ptext36:
  5677                           	callstack 0
  5678   0017E0                     _EUSART1_SetErrorHandler:
  5679                           	callstack 24
  5680   0017E0                     
  5681                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5682   0017E0  C007  F062         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5683   0017E4  C008  F063         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5684   0017E8  0012               	return		;funcret
  5685   0017EA                     __end_of_EUSART1_SetErrorHandler:
  5686                           	callstack 0
  5687                           
  5688 ;; *************** function _CCP4_Initialize *****************
  5689 ;; Defined at:
  5690 ;;		line 60 in file "mcc_generated_files/ccp4.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;		None
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5704 ;;      Params:         0       0       0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0
  5707 ;;      Totals:         0       0       0       0       0       0       0
  5708 ;;Total ram usage:        0 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 4
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_SYSTEM_Initialize
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text37
  5719   001774                     __ptext37:
  5720                           	callstack 0
  5721   001774                     _CCP4_Initialize:
  5722                           	callstack 25
  5723   001774                     
  5724                           ;mcc_generated_files/ccp4.c: 65:  CCP4CON = 0x05;
  5725   001774  0E05               	movlw	5
  5726   001776  010F               	movlb	15	; () banked
  5727   001778  6F57               	movwf	87,b	;volatile
  5728                           
  5729                           ;mcc_generated_files/ccp4.c: 68:  CCPR4L = 0x00;
  5730   00177A  0E00               	movlw	0
  5731   00177C  6F58               	movwf	88,b	;volatile
  5732                           
  5733                           ;mcc_generated_files/ccp4.c: 71:  CCPR4H = 0x00;
  5734   00177E  0E00               	movlw	0
  5735   001780  6F59               	movwf	89,b	;volatile
  5736                           
  5737                           ;mcc_generated_files/ccp4.c: 75:  CCPTMRS1bits.C4TSEL = 0x0;
  5738   001782  0EFC               	movlw	-4
  5739   001784  1748               	andwf	72,f,b	;volatile
  5740   001786                     
  5741                           ; BSR set to: 15
  5742   001786  0012               	return		;funcret
  5743   001788                     __end_of_CCP4_Initialize:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _EUSART1_is_rx_ready *****************
  5747 ;; Defined at:
  5748 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;		None
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;		None
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      _Bool 
  5755 ;; Registers used:
  5756 ;;		wreg
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5762 ;;      Params:         0       0       0       0       0       0       0
  5763 ;;      Locals:         0       0       0       0       0       0       0
  5764 ;;      Temps:          0       0       0       0       0       0       0
  5765 ;;      Totals:         0       0       0       0       0       0       0
  5766 ;;Total ram usage:        0 bytes
  5767 ;; Hardware stack levels used: 1
  5768 ;; Hardware stack levels required when called: 4
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_main
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text38
  5777   001788                     __ptext38:
  5778                           	callstack 0
  5779   001788                     _EUSART1_is_rx_ready:
  5780                           	callstack 26
  5781   001788                     
  5782                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5783   001788  BA9E               	btfsc	158,5,c	;volatile
  5784   00178A  EFC9  F00B         	goto	u1671
  5785   00178E  EFCC  F00B         	goto	u1670
  5786   001792                     u1671:
  5787   001792  0E01               	movlw	1
  5788   001794  EFCD  F00B         	goto	u1676
  5789   001798                     u1670:
  5790   001798  0E00               	movlw	0
  5791   00179A                     u1676:
  5792   00179A  0012               	return		;funcret
  5793   00179C                     __end_of_EUSART1_is_rx_ready:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _EUSART1_Read *****************
  5797 ;; Defined at:
  5798 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;		None
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;		None
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      unsigned char 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5812 ;;      Params:         0       0       0       0       0       0       0
  5813 ;;      Locals:         0       0       0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0
  5815 ;;      Totals:         0       0       0       0       0       0       0
  5816 ;;Total ram usage:        0 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 4
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_main
  5823 ;;		_getch
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text39
  5828   001654                     __ptext39:
  5829                           	callstack 0
  5830   001654                     _EUSART1_Read:
  5831                           	callstack 26
  5832   001654                     l250:
  5833                           
  5834                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5835   001654  AA9E               	btfss	158,5,c	;volatile
  5836   001656  EF2F  F00B         	goto	u1681
  5837   00165A  EF31  F00B         	goto	u1680
  5838   00165E                     u1681:
  5839   00165E  EF2A  F00B         	goto	l250
  5840   001662                     u1680:
  5841   001662                     
  5842                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5843   001662  0E00               	movlw	0
  5844   001664  6E58               	movwf	_eusart1RxLastError^0,c	;volatile
  5845   001666                     
  5846                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5847   001666  A2AB               	btfss	171,1,c	;volatile
  5848   001668  EF38  F00B         	goto	u1691
  5849   00166C  EF3A  F00B         	goto	u1690
  5850   001670                     u1691:
  5851   001670  EF3C  F00B         	goto	l2582
  5852   001674                     u1690:
  5853   001674                     
  5854                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5855   001674  98AB               	bcf	171,4,c	;volatile
  5856                           
  5857                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5858   001676  88AB               	bsf	171,4,c	;volatile
  5859   001678                     l2582:
  5860                           
  5861                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5862   001678  50AE               	movf	174,w,c	;volatile
  5863   00167A  0012               	return		;funcret
  5864   00167C                     __end_of_EUSART1_Read:
  5865                           	callstack 0
  5866                           
  5867 ;; *************** function _INTERRUPT_InterruptManager *****************
  5868 ;; Defined at:
  5869 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5883 ;;      Params:         0       0       0       0       0       0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0
  5885 ;;      Temps:          2       0       0       0       0       0       0
  5886 ;;      Totals:         2       0       0       0       0       0       0
  5887 ;;Total ram usage:        2 bytes
  5888 ;; Hardware stack levels used: 1
  5889 ;; Hardware stack levels required when called: 3
  5890 ;; This function calls:
  5891 ;;		_TMR0_ISR
  5892 ;; This function is called by:
  5893 ;;		Interrupt level 2
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	intcode
  5898   000008                     __pintcode:
  5899                           	callstack 0
  5900   000008                     _INTERRUPT_InterruptManager:
  5901                           	callstack 18
  5902                           
  5903                           ;incstack = 0
  5904   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5905   00000A  CFFA F005          	movff	pclath,??_INTERRUPT_InterruptManager
  5906   00000E  CFFB F006          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5907   000012                     
  5908                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5909   000012  AAF2               	btfss	242,5,c	;volatile
  5910   000014  EF0E  F000         	goto	i2u173_41
  5911   000018  EF10  F000         	goto	i2u173_40
  5912   00001C                     i2u173_41:
  5913   00001C  EF19  F000         	goto	i2l67
  5914   000020                     i2u173_40:
  5915   000020  A4F2               	btfss	242,2,c	;volatile
  5916   000022  EF15  F000         	goto	i2u174_41
  5917   000026  EF17  F000         	goto	i2u174_40
  5918   00002A                     i2u174_41:
  5919   00002A  EF19  F000         	goto	i2l67
  5920   00002E                     i2u174_40:
  5921   00002E                     
  5922                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5923   00002E  EC84  F00A         	call	_TMR0_ISR	;wreg free
  5924   000032                     i2l67:
  5925   000032  C006  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5926   000036  C005  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5927   00003A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5928   00003C  0011               	retfie		f
  5929   00003E                     __end_of_INTERRUPT_InterruptManager:
  5930                           	callstack 0
  5931                           
  5932 ;; *************** function _TMR0_ISR *****************
  5933 ;; Defined at:
  5934 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5948 ;;      Params:         0       0       0       0       0       0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0
  5951 ;;      Totals:         0       0       0       0       0       0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used: 1
  5954 ;; Hardware stack levels required when called: 2
  5955 ;; This function calls:
  5956 ;;		Absolute function
  5957 ;;		_TMR0_DefaultInterruptHandler
  5958 ;;		_myTMR0ISR
  5959 ;; This function is called by:
  5960 ;;		_INTERRUPT_InterruptManager
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text41
  5965   001508                     __ptext41:
  5966                           	callstack 0
  5967   001508                     _TMR0_ISR:
  5968                           	callstack 18
  5969   001508                     
  5970                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5971   001508  94F2               	bcf	242,2,c	;volatile
  5972   00150A                     
  5973                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5974   00150A  5056               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5975   00150C  6ED7               	movwf	215,c	;volatile
  5976   00150E                     
  5977                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5978   00150E  C055  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5979   001512                     
  5980                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5981   001512  0100               	movlb	0	; () banked
  5982   001514  5168               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5983   001516  1169               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  5984   001518  B4D8               	btfsc	status,2,c
  5985   00151A  EF91  F00A         	goto	i2u164_41
  5986   00151E  EF93  F00A         	goto	i2u164_40
  5987   001522                     i2u164_41:
  5988   001522  EFA0  F00A         	goto	i2l154
  5989   001526                     i2u164_40:
  5990   001526                     
  5991                           ; BSR set to: 0
  5992                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5993   001526  D802               	call	i2u165_48
  5994   001528  EFA0  F00A         	goto	i2u165_49
  5995   00152C                     i2u165_48:
  5996   00152C  0005               	push	
  5997   00152E  6EFA               	movwf	pclath,c
  5998   001530  5168               	movf	_TMR0_InterruptHandler& (0+255),w,b
  5999   001532  6EFD               	movwf	tosl,c
  6000   001534  5169               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6001   001536  6EFE               	movwf	tosh,c
  6002   001538  50F8               	movf	tblptru,w,c
  6003   00153A  6EFF               	movwf	tosu,c
  6004   00153C  50FA               	movf	pclath,w,c
  6005   00153E  0012               	return		;indir
  6006   001540                     i2u165_49:
  6007   001540                     i2l154:
  6008   001540  0012               	return		;funcret
  6009   001542                     __end_of_TMR0_ISR:
  6010                           	callstack 0
  6011                           
  6012 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6013 ;; Defined at:
  6014 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		None
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6028 ;;      Params:         0       0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0
  6031 ;;      Totals:         0       0       0       0       0       0       0
  6032 ;;Total ram usage:        0 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_TMR0_Initialize
  6038 ;;		_TMR0_ISR
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text42
  6043   0017F8                     __ptext42:
  6044                           	callstack 0
  6045   0017F8                     _TMR0_DefaultInterruptHandler:
  6046                           	callstack 19
  6047   0017F8  0012               	return		;funcret
  6048   0017FA                     __end_of_TMR0_DefaultInterruptHandler:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function _myTMR0ISR *****************
  6052 ;; Defined at:
  6053 ;;		line 188 in file "main.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;		None
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  i               2    0        unsigned short 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6067 ;;      Params:         0       0       0       0       0       0       0
  6068 ;;      Locals:         0       0       0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0
  6070 ;;      Totals:         0       0       0       0       0       0       0
  6071 ;;Total ram usage:        0 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 1
  6074 ;; This function calls:
  6075 ;;		_microSecondDelay
  6076 ;;		i2_TMR0_WriteTimer
  6077 ;; This function is called by:
  6078 ;;		_main
  6079 ;;		_TMR0_ISR
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text43
  6084   001708                     __ptext43:
  6085                           	callstack 0
  6086   001708                     _myTMR0ISR:
  6087                           	callstack 18
  6088   001708  888B               	bsf	139,4,c	;volatile
  6089   00170A                     
  6090                           ;main.c: 193:     microSecondDelay(10);
  6091   00170A  0E00               	movlw	0
  6092   00170C  6E02               	movwf	(microSecondDelay@us+1)^0,c
  6093   00170E  0E0A               	movlw	10
  6094   001710  6E01               	movwf	microSecondDelay@us^0,c
  6095   001712  ECBC  F00A         	call	_microSecondDelay	;wreg free
  6096   001716  988B               	bcf	139,4,c	;volatile
  6097   001718                     
  6098                           ;main.c: 196:     TMR0_WriteTimer(0x10000 - 50000);
  6099   001718  0E3C               	movlw	60
  6100   00171A  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6101   00171C  0EB0               	movlw	176
  6102   00171E  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6103   001720  ECF5  F00B         	call	i2_TMR0_WriteTimer	;wreg free
  6104   001724  0012               	return		;funcret
  6105   001726                     __end_of_myTMR0ISR:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function i2_TMR0_WriteTimer *****************
  6109 ;; Defined at:
  6110 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  timerVal        2    0[COMRAM] unsigned short 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6124 ;;      Params:         2       0       0       0       0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0
  6126 ;;      Temps:          0       0       0       0       0       0       0
  6127 ;;      Totals:         2       0       0       0       0       0       0
  6128 ;;Total ram usage:        2 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_myTMR0ISR
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           	psect	text44
  6138   0017EA                     __ptext44:
  6139                           	callstack 0
  6140   0017EA                     i2_TMR0_WriteTimer:
  6141                           	callstack 18
  6142   0017EA                     
  6143                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  6144   0017EA  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  6145   0017EC  6ED7               	movwf	215,c	;volatile
  6146   0017EE                     
  6147                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6148   0017EE  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  6149   0017F2  0012               	return		;funcret
  6150   0017F4                     __end_ofi2_TMR0_WriteTimer:
  6151                           	callstack 0
  6152                           
  6153 ;; *************** function _microSecondDelay *****************
  6154 ;; Defined at:
  6155 ;;		line 211 in file "main.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  us              2    0[COMRAM] unsigned short 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  i               2    2[COMRAM] unsigned short 
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6169 ;;      Params:         2       0       0       0       0       0       0
  6170 ;;      Locals:         2       0       0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0
  6172 ;;      Totals:         4       0       0       0       0       0       0
  6173 ;;Total ram usage:        4 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_myTMR0ISR
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text45
  6183   001578                     __ptext45:
  6184                           	callstack 0
  6185   001578                     _microSecondDelay:
  6186                           	callstack 18
  6187   001578                     
  6188                           ;main.c: 213:     uint16_t i;;main.c: 215:     for (i = 0; i < us; i++) {
  6189   001578  0E00               	movlw	0
  6190   00157A  6E04               	movwf	(microSecondDelay@i+1)^0,c
  6191   00157C  0E00               	movlw	0
  6192   00157E  6E03               	movwf	microSecondDelay@i^0,c
  6193   001580  EFCA  F00A         	goto	i2l2382
  6194   001584                     i2l374:
  6195   001584  F000               	nop		;# 
  6196   001586  F000               	nop		;# 
  6197   001588  F000               	nop		;# 
  6198   00158A  F000               	nop		;# 
  6199   00158C  F000               	nop		;# 
  6200   00158E  F000               	nop		;# 
  6201   001590                     
  6202                           ;main.c: 223:     }
  6203   001590  4A03               	infsnz	microSecondDelay@i^0,f,c
  6204   001592  2A04               	incf	(microSecondDelay@i+1)^0,f,c
  6205   001594                     i2l2382:
  6206   001594  5001               	movf	microSecondDelay@us^0,w,c
  6207   001596  5C03               	subwf	microSecondDelay@i^0,w,c
  6208   001598  5002               	movf	(microSecondDelay@us+1)^0,w,c
  6209   00159A  5804               	subwfb	(microSecondDelay@i+1)^0,w,c
  6210   00159C  A0D8               	btfss	status,0,c
  6211   00159E  EFD3  F00A         	goto	i2u151_41
  6212   0015A2  EFD5  F00A         	goto	i2u151_40
  6213   0015A6                     i2u151_41:
  6214   0015A6  EFC2  F00A         	goto	i2l374
  6215   0015AA                     i2u151_40:
  6216   0015AA  0012               	return		;funcret
  6217   0015AC                     __end_of_microSecondDelay:
  6218                           	callstack 0
  6219                           
  6220                           	psect	text46
  6221   000000                     __ptext46:
  6222                           	callstack 0
  6223   000000                     
  6224                           	psect	rparam
  6225   000000                     
  6226                           	psect	temp
  6227   000059                     btemp:
  6228                           	callstack 0
  6229   000059                     	ds	1
  6230   000000                     int$flags	set	btemp
  6231   000000                     wtemp8	set	btemp+1
  6232   000000                     ttemp5	set	btemp+1
  6233   000000                     ttemp6	set	btemp+4
  6234   000000                     ttemp7	set	btemp+8
  6235                           
  6236                           	psect	idloc
  6237                           
  6238                           ;Config register IDLOC0 @ 0x200000
  6239                           ;	unspecified, using default values
  6240   200000                     	org	2097152
  6241   200000  FF                 	db	255
  6242                           
  6243                           ;Config register IDLOC1 @ 0x200001
  6244                           ;	unspecified, using default values
  6245   200001                     	org	2097153
  6246   200001  FF                 	db	255
  6247                           
  6248                           ;Config register IDLOC2 @ 0x200002
  6249                           ;	unspecified, using default values
  6250   200002                     	org	2097154
  6251   200002  FF                 	db	255
  6252                           
  6253                           ;Config register IDLOC3 @ 0x200003
  6254                           ;	unspecified, using default values
  6255   200003                     	org	2097155
  6256   200003  FF                 	db	255
  6257                           
  6258                           ;Config register IDLOC4 @ 0x200004
  6259                           ;	unspecified, using default values
  6260   200004                     	org	2097156
  6261   200004  FF                 	db	255
  6262                           
  6263                           ;Config register IDLOC5 @ 0x200005
  6264                           ;	unspecified, using default values
  6265   200005                     	org	2097157
  6266   200005  FF                 	db	255
  6267                           
  6268                           ;Config register IDLOC6 @ 0x200006
  6269                           ;	unspecified, using default values
  6270   200006                     	org	2097158
  6271   200006  FF                 	db	255
  6272                           
  6273                           ;Config register IDLOC7 @ 0x200007
  6274                           ;	unspecified, using default values
  6275   200007                     	org	2097159
  6276   200007  FF                 	db	255
  6277                           
  6278                           	psect	config
  6279                           
  6280                           ; Padding undefined space
  6281   300000                     	org	3145728
  6282   300000  FF                 	db	255
  6283                           
  6284                           ;Config register CONFIG1H @ 0x300001
  6285                           ;	Oscillator Selection bits
  6286                           ;	FOSC = INTIO67, Internal oscillator block
  6287                           ;	4X PLL Enable
  6288                           ;	PLLCFG = OFF, Oscillator used directly
  6289                           ;	Primary clock enable bit
  6290                           ;	PRICLKEN = ON, Primary clock enabled
  6291                           ;	Fail-Safe Clock Monitor Enable bit
  6292                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6293                           ;	Internal/External Oscillator Switchover bit
  6294                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6295   300001                     	org	3145729
  6296   300001  28                 	db	40
  6297                           
  6298                           ;Config register CONFIG2L @ 0x300002
  6299                           ;	Power-up Timer Enable bit
  6300                           ;	PWRTEN = OFF, Power up timer disabled
  6301                           ;	Brown-out Reset Enable bits
  6302                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6303                           ;	Brown Out Reset Voltage bits
  6304                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6305   300002                     	org	3145730
  6306   300002  1F                 	db	31
  6307                           
  6308                           ;Config register CONFIG2H @ 0x300003
  6309                           ;	Watchdog Timer Enable bits
  6310                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6311                           ;	Watchdog Timer Postscale Select bits
  6312                           ;	WDTPS = 32768, 1:32768
  6313   300003                     	org	3145731
  6314   300003  3C                 	db	60
  6315                           
  6316                           ; Padding undefined space
  6317   300004                     	org	3145732
  6318   300004  FF                 	db	255
  6319                           
  6320                           ;Config register CONFIG3H @ 0x300005
  6321                           ;	CCP2 MUX bit
  6322                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6323                           ;	PORTB A/D Enable bit
  6324                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6325                           ;	P3A/CCP3 Mux bit
  6326                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6327                           ;	HFINTOSC Fast Start-up
  6328                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6329                           ;	Timer3 Clock input mux bit
  6330                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6331                           ;	ECCP2 B output mux bit
  6332                           ;	P2BMX = PORTB5, P2B is on RB5
  6333                           ;	MCLR Pin Enable bit
  6334                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6335   300005                     	org	3145733
  6336   300005  BF                 	db	191
  6337                           
  6338                           ;Config register CONFIG4L @ 0x300006
  6339                           ;	Stack Full/Underflow Reset Enable bit
  6340                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6341                           ;	Single-Supply ICSP Enable bit
  6342                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6343                           ;	Extended Instruction Set Enable bit
  6344                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6345                           ;	Background Debug
  6346                           ;	DEBUG = OFF, Disabled
  6347   300006                     	org	3145734
  6348   300006  85                 	db	133
  6349                           
  6350                           ; Padding undefined space
  6351   300007                     	org	3145735
  6352   300007  FF                 	db	255
  6353                           
  6354                           ;Config register CONFIG5L @ 0x300008
  6355                           ;	Code Protection Block 0
  6356                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6357                           ;	Code Protection Block 1
  6358                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6359                           ;	Code Protection Block 2
  6360                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6361                           ;	Code Protection Block 3
  6362                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6363   300008                     	org	3145736
  6364   300008  0F                 	db	15
  6365                           
  6366                           ;Config register CONFIG5H @ 0x300009
  6367                           ;	Boot Block Code Protection bit
  6368                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6369                           ;	Data EEPROM Code Protection bit
  6370                           ;	CPD = OFF, Data EEPROM not code-protected
  6371   300009                     	org	3145737
  6372   300009  C0                 	db	192
  6373                           
  6374                           ;Config register CONFIG6L @ 0x30000A
  6375                           ;	Write Protection Block 0
  6376                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6377                           ;	Write Protection Block 1
  6378                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6379                           ;	Write Protection Block 2
  6380                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6381                           ;	Write Protection Block 3
  6382                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6383   30000A                     	org	3145738
  6384   30000A  0F                 	db	15
  6385                           
  6386                           ;Config register CONFIG6H @ 0x30000B
  6387                           ;	Configuration Register Write Protection bit
  6388                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6389                           ;	Boot Block Write Protection bit
  6390                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6391                           ;	Data EEPROM Write Protection bit
  6392                           ;	WRTD = OFF, Data EEPROM not write-protected
  6393   30000B                     	org	3145739
  6394   30000B  E0                 	db	224
  6395                           
  6396                           ;Config register CONFIG7L @ 0x30000C
  6397                           ;	Table Read Protection Block 0
  6398                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6399                           ;	Table Read Protection Block 1
  6400                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6401                           ;	Table Read Protection Block 2
  6402                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6403                           ;	Table Read Protection Block 3
  6404                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6405   30000C                     	org	3145740
  6406   30000C  0F                 	db	15
  6407                           
  6408                           ;Config register CONFIG7H @ 0x30000D
  6409                           ;	Boot Block Table Read Protection bit
  6410                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6411   30000D                     	org	3145741
  6412   30000D  40                 	db	64
  6413                           tosu	equ	0xFFF
  6414                           tosh	equ	0xFFE
  6415                           tosl	equ	0xFFD
  6416                           stkptr	equ	0xFFC
  6417                           pclatu	equ	0xFFB
  6418                           pclath	equ	0xFFA
  6419                           pcl	equ	0xFF9
  6420                           tblptru	equ	0xFF8
  6421                           tblptrh	equ	0xFF7
  6422                           tblptrl	equ	0xFF6
  6423                           tablat	equ	0xFF5
  6424                           prodh	equ	0xFF4
  6425                           prodl	equ	0xFF3
  6426                           indf0	equ	0xFEF
  6427                           postinc0	equ	0xFEE
  6428                           postdec0	equ	0xFED
  6429                           preinc0	equ	0xFEC
  6430                           plusw0	equ	0xFEB
  6431                           fsr0h	equ	0xFEA
  6432                           fsr0l	equ	0xFE9
  6433                           wreg	equ	0xFE8
  6434                           indf1	equ	0xFE7
  6435                           postinc1	equ	0xFE6
  6436                           postdec1	equ	0xFE5
  6437                           preinc1	equ	0xFE4
  6438                           plusw1	equ	0xFE3
  6439                           fsr1h	equ	0xFE2
  6440                           fsr1l	equ	0xFE1
  6441                           bsr	equ	0xFE0
  6442                           indf2	equ	0xFDF
  6443                           postinc2	equ	0xFDE
  6444                           postdec2	equ	0xFDD
  6445                           preinc2	equ	0xFDC
  6446                           plusw2	equ	0xFDB
  6447                           fsr2h	equ	0xFDA
  6448                           fsr2l	equ	0xFD9
  6449                           status	equ	0xFD8

Data Sizes:
    Strings     475
    Constant    0
    Data        0
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     43      87
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1491$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1491$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_30(CODE[17]), STR_29(CODE[3]), STR_28(CODE[5]), STR_27(CODE[13]), 
		 -> STR_26(CODE[3]), STR_25(CODE[5]), STR_24(CODE[24]), STR_23(CODE[3]), 
		 -> STR_22(CODE[5]), STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[33]), STR_16(CODE[45]), STR_15(CODE[21]), 
		 -> STR_14(CODE[30]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[5]), STR_7(CODE[53]), 
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), STR_3(CODE[26]), 
		 -> STR_2(CODE[20]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_30(CODE[17]), STR_29(CODE[3]), STR_28(CODE[5]), STR_27(CODE[13]), 
		 -> STR_26(CODE[3]), STR_25(CODE[5]), STR_24(CODE[24]), STR_23(CODE[3]), 
		 -> STR_22(CODE[5]), STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[33]), STR_16(CODE[45]), STR_15(CODE[21]), 
		 -> STR_14(CODE[30]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[5]), STR_7(CODE[53]), 
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), STR_3(CODE[26]), 
		 -> STR_2(CODE[20]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_30(CODE[17]), STR_29(CODE[3]), STR_28(CODE[5]), STR_27(CODE[13]), 
		 -> STR_26(CODE[3]), STR_25(CODE[5]), STR_24(CODE[24]), STR_23(CODE[3]), 
		 -> STR_22(CODE[5]), STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[33]), STR_16(CODE[45]), STR_15(CODE[21]), 
		 -> STR_14(CODE[30]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[5]), STR_7(CODE[53]), 
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), STR_3(CODE[26]), 
		 -> STR_2(CODE[20]), STR_1(CODE[15]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 57
		 -> STR_30(CODE[17]), STR_29(CODE[3]), STR_28(CODE[5]), STR_27(CODE[13]), 
		 -> STR_26(CODE[3]), STR_25(CODE[5]), STR_24(CODE[24]), STR_23(CODE[3]), 
		 -> STR_22(CODE[5]), STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[33]), STR_16(CODE[45]), STR_15(CODE[21]), 
		 -> STR_14(CODE[30]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[5]), STR_7(CODE[53]), 
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), STR_3(CODE[26]), 
		 -> STR_2(CODE[20]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1531$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_30(CODE[17]), STR_29(CODE[3]), STR_28(CODE[5]), STR_27(CODE[13]), 
		 -> STR_26(CODE[3]), STR_25(CODE[5]), STR_24(CODE[24]), STR_23(CODE[3]), 
		 -> STR_22(CODE[5]), STR_21(CODE[24]), STR_20(CODE[3]), STR_19(CODE[2]), 
		 -> STR_18(CODE[5]), STR_17(CODE[33]), STR_16(CODE[45]), STR_15(CODE[21]), 
		 -> STR_14(CODE[30]), STR_13(CODE[24]), STR_12(CODE[21]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[33]), STR_8(CODE[5]), STR_7(CODE[53]), 
		 -> STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[57]), STR_3(CODE[26]), 
		 -> STR_2(CODE[20]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    _getEchoPulseDurationForeground->_CCP4_CaptureRead
    _convertEchToCm->_getEchoPulseDurationForeground
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _myTMR0ISR->_microSecondDelay

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   18963
                                             23 BANK0     20    20      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                     _convertEchToCm
     _getEchoPulseDurationForeground
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   17445
                                             17 BANK0      6     2      4
                     _convertEchToCm (ARG)
     _getEchoPulseDurationForeground (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   14646
                                             80 COMRAM     2     2      0
                                             11 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   14146
                                             70 COMRAM    10     4      6
                                              0 BANK0     11    11      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4319
                                             35 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              6 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              6 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4941
                                             35 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3291
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1517
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             24 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              6 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              6 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1449
                                             17 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1116
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              7 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1126
                                             12 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              6 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     357
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getEchoPulseDurationForeground                       6     4      2     138
                                             10 COMRAM     6     4      2
                   _CCP4_CaptureRead
           _CCP4_IsCapturedDataReady
 ---------------------------------------------------------------------------------
 (2) _CCP4_IsCapturedDataReady                             1     1      0      45
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CCP4_CaptureRead                                     4     2      2      47
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _convertEchToCm                                       5     3      2      98
                                             16 COMRAM     5     3      2
     _getEchoPulseDurationForeground (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                    _CCP4_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              8 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CCP4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0     192
                                              4 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     192
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (12) _myTMR0ISR                                           2     2      0     192
                   _microSecondDelay
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) _microSecondDelay                                    4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _CCP4_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _convertEchToCm
     _getEchoPulseDurationForeground (ARG)
       _CCP4_CaptureRead
       _CCP4_IsCapturedDataReady
   _getEchoPulseDurationForeground
   _printf
     _convertEchToCm (ARG)
     _getEchoPulseDurationForeground (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _microSecondDelay
       i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2B      57       4       54.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBIGSFRhlh        19      0       0      26        0.0%
BITBIGSFRhhhlhh     19      0       0      16        0.0%
BITBIGSFRhhlhll     13      0       0      19        0.0%
BITBIGSFRlh          E      0       0      28        0.0%
BITBIGSFRllh         D      0       0      29        0.0%
BITBIGSFRhhhh        D      0       0      15        0.0%
BITBIGSFRhhlll       D      0       0      25        0.0%
BITBIGSFRhhlhll      C      0       0      21        0.0%
BITBIGSFRhhlhll      7      0       0      20        0.0%
BITBIGSFRhll         7      0       0      27        0.0%
BITBIGSFRhhllhh      6      0       0      23        0.0%
BITBIGSFRhhllhl      6      0       0      24        0.0%
BITBIGSFRhhlhll      2      0       0      22        0.0%
BITBIGSFRhhlhh       1      0       0      18        0.0%
BITBIGSFRhhhll       1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF      30        0.0%
DATA                 0      0      AF      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 30 12:11:50 2023

                               _CCP4_Initialize 1774                                              l20 17AC  
                                            l13 1786                                              l17 1600  
                                            l51 175C                                              l60 17F6  
                                            l45 1706                                              l48 174E  
                                            l88 1740                             ___wmul@multiplicand 0009  
                               _timer0ReloadVal 0055                                             l135 1576  
                                           l241 179A                                             l233 1506  
                                           l321 03C2                                             l250 1654  
                                           l147 17C0                                             l260 1772  
                                           l332 052C                                             l157 17CA  
                                           l254 167A                                             l360 13AE  
                                           l281 17D4                                             l257 1760  
                                           l370 16E8                                             l266 17B6  
                                           l506 0E36                                             l187 162A  
                                           l284 17E8                                             l278 17DE  
                                           l379 16C6                                             l493 0CD2  
                                           l824 1070                                             l817 1050  
                                           l834 1140                                             l827 1120  
                                           u930 176E                                             u931 176A  
                                           u940 12C6                                             u941 12C2  
                                           u950 12D8                                             u951 12D4  
                                           u960 1300                                             u961 12FC  
                                           u970 1336                                             u971 1332  
                                           u980 1488                                             u981 1484  
                                           u990 0B5E                                             u991 0B5A  
                               _timer1ReloadVal 006A                                             _abs 148A  
                                           _pad 120A                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1100 11A6  
                                          l1110 079C                                            l1103 11E8  
                                          l1112 07A4                                            l1105 1208  
                                          l1113 07EA                                            l1130 09BC  
                                          ?_abs 0019                                            l2100 0BFA  
                                          l1124 098A                                            l1222 1348  
                                          l2110 0C6A                                            l2102 0C08  
                                          l1230 1488                                            l1207 1444  
                                          l2112 0C7C                                            l2104 0C1A  
                                          l2200 122C                                            l1136 0B4A  
                                          l1128 09B4                                            l3000 06CE  
                                          l1057 1652                                            l2050 12B4  
                                          l2106 0C48                                            l2114 0C82  
                                          l2130 0D0A                                            l2122 0CD4  
                                          l2210 1272                                            l2202 123A  
                                          l3002 0366                                            l1171 14C8  
                                          l3004 0ECE                                            l2044 1760  
                                          l2060 1336                                            l2052 12C6  
                                          l2116 0C92                                            l2108 0C68  
                                          l2140 0D72                                            l2132 0D18  
                                          l2124 0CD8                                            l2212 129E  
                                          l1084 124E                                            l2204 1246  
                                          l2300 0944                                            l1164 13FE  
                                          l1149 03AE                                            l2230 143E  
                                          l2222 1400                                            l2046 176E  
                                          l2054 12D8                                            l2118 0CB2  
                                          l2142 0D80                                            l2150 0DE6  
                                          l2134 0D38                                            l2126 0CE6  
                                          l2214 148A                                            l2070 1468  
                                          l2206 125A                                            l2302 0954  
                                          l2310 098C                                            l1087 1290  
                                          l2072 16A2                                            l2224 1404  
                                          l2048 17B0                                            l2056 12E2  
                                          l2240 116C                                            l2080 0B50  
                                          l2152 0DF6                                            l2144 0DAE  
                                          l2136 0D56                                            l2128 0D06  
                                          l2216 14A4                                            l1168 14C0  
                                          l2064 1446                                            l2208 126E  
                                          l2304 095A                                            l2160 0F8E  
                                          l2320 09FA                                            l2312 09A8  
                                          l2400 00FC                                            l1193 0F78  
                                          l1089 12B2                                            l2074 16BE  
                                          l2218 15AC                                            l2226 1418  
                                          l2058 1300                                            l2250 11B2  
                                          l2242 117A                                            l2234 1142  
                                          l2090 0BB0                                            l2082 0B5E  
                                          l2154 0E16                                            l2146 0DCE  
                                          l2138 0D5E                                            l2066 1452  
                                          l2306 096A                                            l2170 0FE8  
                                          l2162 0FAC                                            l2330 0AF2  
                                          l2322 0A70                                            l2314 09E4  
                                          l2410 0186                                            l2402 011C  
                                          l2500 1572                                            l2228 143A  
                                          l1196 0F80                                            l2340 0E4C  
                                          l2252 11C6                                            l2244 118C  
                                          l2236 1154                                            l2092 0BB4  
                                          l2084 0B7E                                            l2148 0DE0  
                                          l2068 1464                                            l2260 0730  
                                          l2172 1016                                            l2164 0FB4  
                                          l2180 1072                                            l2332 0B10  
                                          l2324 0A76                                            l2316 09EC  
                                          l2420 01FA                                            l2412 01BA  
                                          l2510 1502                                            l2502 14CA  
                                          l2350 0EA8                                            l2254 11CA  
                                          l2238 1160                                            l2094 0BC0  
                                          l2086 0B82                                            l2078 0B4C  
                                          l2270 07AC                                            l2262 0744  
                                          l2174 1036                                            l2166 0FC8  
                                          l2158 0F82                                            l2190 10E8  
                                          l2182 1090                                            l2334 0B2A  
                                          l2326 0A7C                                            l2318 09F4  
                                          l2430 02BA                                            l2422 0216  
                                          l2406 012A                                            l1199 15D6  
                                          l2504 14DE                                            l2600 1376  
                                          l2360 0F1A                                            l2352 0EB0  
                                          l2344 0E50                                            l2256 11F6  
                                          l2248 119E                                            l2096 0BDE  
                                          l2088 0B90                                            l2280 07E6  
                                          l2272 07BC                                            l2264 0754  
                                          l2176 1038                                            l2168 0FD6  
                                          l2192 1108                                            l2184 1098  
                                          l2328 0AE0                                            l2432 0318  
                                          l2440 0374                                            l2424 026E  
                                          l2416 01CE                                            l2408 0162  
                                          l2506 14EA                                            l2370 17C2  
                                          l2530 16EE                                            l2602 1380  
                                          l2362 0F4A                                            l2354 0EE4  
                                          l2346 0E6C                                            l2338 0E38  
                                          l2098 0BE6                                            l2290 0888  
                                          l2282 07F2                                            l2274 07C2  
                                          l2266 0774                                            l2258 0710  
                                          l2178 104A                                            l2194 111A  
                                          l2186 10AC                                            l2418 01DE  
                                          l2372 17D6                                            l2508 14F6  
                                          l2540 1702                                            l2532 16F2  
                                          l2612 16C8                                            l2460 15D8  
                                          l2604 1382                                            l2364 0F5C  
                                          l2348 0EA0                                            l2196 120A  
                                          l2292 088E                                            l2284 07FA  
                                          l2276 07D2                                            l2268 0790  
                                          l2188 10BA                                            l2428 029E  
                                          l2444 0386                                            l2374 17CC  
                                          l2470 17F4                                            l2534 16F6  
                                          l2462 15FC                                            l2606 1396  
                                          l2198 1218                                            l2286 0800  
                                          l2294 08F2                                            l2278 07DE  
                                          l2438 0348                                            l2390 0080  
                                          l2376 17E0                                            l2480 1742  
                                          l2472 1602                                            l2536 16FA  
                                          l2528 16EA                                            l2464 15FE  
                                          l2608 13A2                                            l2296 090C  
                                          l2288 0882                                            l2392 0086  
                                          l2384 0042                                            l2570 1788  
                                          l2458 1774                                            l2474 160E  
                                          l2490 1544                                            l2482 1726  
                                          l2538 16FE                                            l2298 092A  
                                          l2394 00AA                                            l2386 0066  
                                          l2810 13D8                                            l2580 1674  
                                          l2476 1610                                            l2492 154C  
                                          l2484 1732                                            l2468 179C  
                                          l2396 00E0                                            l2388 0074  
                                          l2812 13F4                                            l2900 05FC  
                                          l2582 1678                                            l2574 1654  
                                          l2478 1628                                            l2494 1562  
                                          l2486 173A                                            l2566 17B8  
                                          l2398 00EE                                            l2806 13B0  
                                          l2910 0630                                            l2902 060E  
                                          l2830 03DC                                            l2822 03B0  
                                          l2576 1662                                            l2496 1564  
                                          l2488 1542                                            l2568 17BC  
                                          l2592 134A                                            l2808 13BC  
                                          l2816 162C                                            l2912 0632  
                                          l2840 040A                                            l2832 03DE  
                                          l2824 03B4                                            l2578 1666  
                                          l2498 1566                                            l2594 1354  
                                          l2818 1636                                            l2930 06A4  
                                          l2922 065C                                            l2914 0642  
                                          l2850 0450                                            l2842 0418  
                                          l2834 03E0                                            l2826 03C0  
                                          l2596 1356                                            l2924 0680  
                                          l2916 0656                                            l2908 0612  
                                          l2852 0464                                            l2844 0426  
                                          l2836 03EE                                            l2828 03D0  
                                          l2598 136A                                            l2926 0684  
                                          l2870 0532                                            l2854 0470  
                                          l2934 06BA                                            l2846 0434  
                                          l2838 03FC                                            ?_pad 0019  
                                          l2928 0694                                            l2880 0546  
                                          l2864 050C                                            l2856 04F8  
                                          l2848 0442                                            l2890 059C  
                                          l2882 055A                                            l2866 0518  
                                          l2858 0508                                            l2892 05AE  
                                          l2884 056A                                            l2876 0536  
                                          l2868 051C                                            l2894 05BE  
                                          l2886 0584                                            l2878 0542  
                                          l2896 05E4                                            l2888 0598  
                                          l2898 05F8                                            STR_1 7FBA  
                                          STR_2 7F71                                            STR_3 7EFD  
                                          STR_4 7E23                                            STR_5 7F97  
                                          STR_6 7F85                                            STR_7 7E5C  
                                          STR_8 7FF6                                            STR_9 7EBE  
                                          u1000 0B90                                            u1001 0B8C  
                                          u1011 0BBA                                            u1020 0BDE  
                                          u1100 0DAE                                            u1021 0BDA  
                                          u1101 0DAA                                            u1030 0C08  
                                          u1110 0DF6                                            u1031 0C04  
                                          u1111 0DF2                                            u1040 0C48  
                                          u1200 123A                                            u1041 0C44  
                                          u1201 1236                                            u1121 0F88  
                                          u1050 0C92                                            u1210 1290  
                                          u1130 0FAC                                            u1051 0C8E  
                                          u1211 128C                                            u1131 0FA8  
                                          u1300 119A                                            u1060 0CE6  
                                          u1220 129E                                            u1140 0FD6  
                                          u1301 1196                                            u1061 0CE2  
                                          u1221 129A                                            u1141 0FD2  
                                          u1310 11E8                                            u1070 0D18  
                                          u1230 14A4                                            u1150 1016  
                                          u1311 11E4                                            u1071 0D14  
                                          u1231 14A0                                            u1151 1012  
                                          u1240 15D0                                            u1320 11F6  
                                          u1080 0D56                                            u1400 092A  
                                          u1160 1090                                            u1241 15CA  
                                          u1321 11F2                                            u1081 0D52  
                                          u1401 0926                                            u1161 108C  
                                          u1250 15D2                                            u1090 0D80  
                                          u1410 0944                                            u1330 0740  
                                          u1170 10BA                                            u1091 0D7C  
                                          u1411 0940                                            u1331 073A  
                                          u1171 10B6                                            u1260 1418  
                                          u1500 0F5C                                            u1420 0954  
                                          u1340 0742                                            u1180 10E8  
                                          u1261 1414                                            u1501 0F58  
                                          u1421 0950                                            u1181 10E4  
                                          _LATA 000F89                                            u1270 143A  
                                          u1190 1218                                            u1350 0754  
                                          u1430 09A8                                            _LATB 000F8A  
                                          u1271 1436                                            u1191 1214  
                                          u1351 0750                                            u1431 09A4  
                                          _LATC 000F8B                                            u1600 15E8  
                                          u1280 1154                                            u1360 0790  
                                          u1440 0AF2                                            u1520 0066  
                                          u1601 15E2                                            u1281 1150  
                                          u1361 078C                                            u1441 0AEE  
                                          u1521 0062                                            u1610 15FC  
                                          u1290 117A                                            u1370 07BC  
                                          u1450 0B10                                            u1530 00AA  
                                          u1611 15F8                                            u1291 1176  
                                          u1371 07B8                                            u1451 0B0C  
                                          u1531 00A6                                            u1620 175C  
                                          u1700 136A                                            u1380 07D2  
                                          u1460 0B2A                                            u1540 00EE  
                                          u1621 1758                                            u1701 1366  
                                          u1381 07CE                                            u1461 0B26  
                                          u1541 00EA                                            u1606 15EA  
                                          u1710 1396                                            u1470 0E6C  
                                          u1390 090C                                            u1550 0162  
                                          u1711 1392                                            u1471 0E68  
                                          u1391 0908                                            u1551 015E  
                                          u1480 0E9C                                            u1560 0186  
                                          u1481 0E98                                            u1561 0182  
                                          u1490 0F4A                                            u1570 01FA  
                                          u1491 0F46                                            u1571 01F6  
                                          u1580 0216                                            u1900 0642  
                                          u1725 16D4                                            u1581 0212  
                                          u1901 063E                                            u1670 1798  
                                          u1590 02BA                                            u1830 13F4  
                                          u1910 0694                                            u1671 1792  
                                          u1591 02B6                                            u1831 13F0  
                                          u1911 0690                                            u1680 1662  
                                          u1840 03D0                                            u1681 165E  
                                          u1841 03CC                                            u1690 1674  
                                          u1850 0464                                            u1691 1670  
                                          u1851 0460                                            u1676 179A  
                                          u1860 052C                                            u1861 0528  
                                          u1870 0556                                            u1871 0552  
                                          u1880 0598                                            u1881 0594  
                                          u1890 05F8                                            u1891 05F4  
                                          i2l67 0032                                            _TMR1 000FCE  
                                          _WPUB 000F61                                   _EUSART1_Write 175E  
                                          abs@a 0019                                            _dbuf 006C  
                                          _atoi 0E38                                            _ctoa 1142  
                                          _main 03B0                                            _dtoa 0710  
                                 ?_EUSART1_Read 0001                                            _prec 0060  
                                          pad@i 0020                                            pad@p 001D  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 0022                                            fsr2l 000FD9  
                                          btemp 0059                                            _utoa 098C  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 003E                                    ___param_bank 000000  
                      __end_of_CCP4_CaptureRead 17AE                                           ??_abs 001B  
                                         ??_pad 001F                         __end_of_TMR0_Initialize 1578  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 175E  
                               __end_of___aodiv 0CD4                                           ?_atoi 000D  
                                         ?_ctoa 0012                                           ?_main 0001  
                                         ?_dtoa 0024                                 __end_of___aomod 0E38  
                                         STR_10 7FC9                                           STR_11 7FE5  
                                         STR_20 7FFB                                           STR_12 7F5C  
                                         STR_21 7F2F                                           STR_13 7F17  
                                         STR_22 7FEC                                           STR_30 7FA9  
                                         STR_14 7EDF                                           STR_23 7EDC  
                                         STR_15 7F47                                           STR_24 7F2F  
                                         STR_16 7E91                                           STR_17 7EBE  
                                         STR_25 7FEC                                           STR_26 7EDC  
                                         STR_18 7FE7                                           STR_19 7EDD  
                                         STR_27 7FD8                                           STR_28 7FF1  
                                         STR_29 7EDC                                           ?_utoa 0024  
                                         _T0CON 000FD5                                 __end_of___lodiv 1072  
                                         _T1CON 000FCD                                 __end_of___lomod 1142  
                                         i2l160 17F8                                           i2l154 1540  
                                         i2l147 17F2                                 _TMR0_WriteTimer 17B8  
                                         i2l363 1708                                           i2l374 1584  
                                         i2l367 1724                                           i2l376 15AA  
                                  vfpfcnvrt@fmt 0049                                           _TMR0H 000FD7  
                                         _TMR1H 000FCF                                           _TMR0L 000FD6  
                                         _TMR1L 000FCE                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                     ?_TMR0_SetInterruptHandler 0007                                __end_of_TMR0_ISR 1542  
                                         _flags 0057                                           _fputc 12B4  
                                         _fputs 1446                                 __end_of_isdigit 15D8  
                                         atoi@n 0014                                           pad@fp 0019  
                                         atoi@s 000D                                           _width 0053  
                                         ctoa@c 0014                                           _putch 17AE  
                                         ctoa@l 0016                                           ctoa@w 0018  
                                         main@i 00B6                                           dtoa@d 0026  
                                         dtoa@i 0044                                           dtoa@n 003C  
                                         dtoa@p 0038                                           dtoa@s 0046  
                                         dtoa@w 003A                                 __end_of_isspace 1446  
                                ?_EUSART1_Write 0001                         __end_of_TMR1_Initialize 1742  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 0007  
                                         ttemp5 005A                                           ttemp6 005D  
                                         ttemp7 0061                                           utoa@d 0026  
                                         utoa@i 0042                                           utoa@n 003A  
                                         utoa@p 0038                                           utoa@w 0036  
                                         status 000FD8                         __end_of_CCP4_Initialize 1788  
                                         wtemp8 005A                                ___lodiv@dividend 0007  
            _EUSART1_DefaultFramingErrorHandler 000000                                  _convertEchToCm 16C8  
                               __initialization 167C                                    __end_of_atoi 0F82  
                                  __end_of_ctoa 120A                      __end_of_EUSART1_Initialize 1508  
                                  __end_of_main 0710                                    __end_of_dtoa 098C  
                                  __end_of_utoa 0B4C                     ?_INTERRUPT_InterruptManager 0001  
                                        ??_atoi 000F                                          ??_ctoa 0015  
                                        ??_main 00A3                                          ??_dtoa 002E  
                                        ??_utoa 002E                                   __activetblptr 000002  
                              ___lodiv@quotient 0017                                          ?_fputc 0009  
                                        ?_fputs 0012                                          _CCPR4H 000F59  
                                        _CCPR4L 000F58                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          _T1GCON 000FCC  
                                        i2l2512 170A                                          i2l2514 1716  
                                        i2l2380 1590                                          i2l2516 1718  
                                        i2l2620 002E                                          i2l2382 1594  
                                        i2l2454 17EA                                          i2l2550 1526  
                                        i2l2542 1508                                          i2l2456 17EE  
                                        i2l2544 150A                                          i2l2616 0012  
                                        i2l2378 1578                                          i2l2546 150E  
                                        i2l2618 0020                                          i2l2548 1512  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                          __end_of_convertEchToCm 16EA  
        __end_of_getEchoPulseDurationForeground 13B0                  _getEchoPulseDurationForeground 134A  
                                  _CCPTMRS1bits 000F48                                    vfprintf@cfmt 0051  
                                     ??___aodiv 0017                                       ??___aomod 0017  
                                        ___wmul 16A2                         __end_of_TMR0_WriteTimer 17C2  
                                     ??___lodiv 0017                                       ??___lomod 0017  
                     i2TMR0_WriteTimer@timerVal 0001                        ?_EUSART1_SetErrorHandler 0007  
                              ?_TMR0_Initialize 0001                                          clear_0 1682  
                                        isa$std 000001                                          _printf 162C  
                                        pad@buf 001B                ??_EUSART1_SetOverrunErrorHandler 0009  
               ?_EUSART1_SetOverrunErrorHandler 0007                                          ctoa@fp 0012  
                                        dtoa@fp 0024                                          fputc@c 0009  
                                        fputs@c 0016                                          fputs@i 0017  
                                        fputs@s 0012                                       ??_isdigit 0009  
                                  __mediumconst 7E22                                       ??_isspace 0009  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 1400  
                               ??_EUSART1_Write 0007                                          utoa@fp 0024  
      TMR0_SetInterruptHandler@InterruptHandler 0007                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 16EA                                      __accesstop 0060  
                       __end_of__initialization 1694                                ?_CCP4_Initialize 0001  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                               ?_convertEchToCm 0011                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 000B                                       ?_TMR0_ISR 0001  
                                 __end_of_fputc 134A                                   __end_of_fputs 148A  
                                 __end_of_putch 17B8                            __end_of_EUSART1_Read 167C  
                                       ??_fputc 000D                       __end_of_SYSTEM_Initialize 1708  
                                       ??_fputs 0016                                         ??_putch 0008  
                                    __pbssBANK0 0060                       ?_CCP4_IsCapturedDataReady 0001  
               __end_of_EUSART1_SetErrorHandler 17EA                __end_of_TMR0_SetInterruptHandler 17CC  
                                       ?___wmul 0007                                      ??_TMR0_ISR 0005  
                              ?_TMR0_WriteTimer 0007                               ?_CCP4_CaptureRead 0007  
                                       _CCP4CON 000F57                              ??_CCP4_CaptureRead 0009  
                                       ?_printf 009D          __end_of_EUSART1_SetFramingErrorHandler 17E0  
                _EUSART1_SetFramingErrorHandler 17D6                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _SPBRGH1 000FB0  
                              ___lomod@dividend 0007                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv 0B4C  
                                       ___aomod 0CD4                                         ___lodiv 0F82  
                                       ___lomod 1072                               __end_of_myTMR0ISR 1726  
                                     ?_vfprintf 0097                                _microSecondDelay 1578  
                           _EUSART1_is_rx_ready 1788                                         __pcinit 167C  
                                       __ramtop 0600                       convertEchToCm@timerCounts 0011  
                                       __ptext0 03B0                                         __ptext1 162C  
                                       __ptext2 13B0                                         __ptext3 0042  
                                       __ptext4 098C                                         __ptext5 1072  
                                       __ptext6 0F82                                         __ptext7 0710  
                                       __ptext8 120A                                         __ptext9 1446  
                                     _T0CONbits 000FD5                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 1742                                         _isdigit 15AC  
                            _EUSART1_Initialize 14CA                        ??_PIN_MANAGER_Initialize 0007  
                                       _isspace 1400                                         atoi@neg 0012  
                                       main@cmd 00B5                            end_of_initialization 1694  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 000B                                   __Lmediumconst 7E22  
                   _EUSART1_OverrunErrorHandler 0064                                         fputs@fp 0014  
                             __end_of_vfpfcnvrt 03B0                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                                vfpfcnvrt@convarg 008D  
                                    ??_vfprintf 0051                            ??_EUSART1_Initialize 0009  
                      _TMR0_SetInterruptHandler 17C2                             EUSART1_Write@txData 0007  
                         ??_EUSART1_is_rx_ready 0007                                ??_convertEchToCm 0013  
                                  _EUSART1_Read 1654                                      main@sample 00A5  
                                   _CCP4CONbits 000F57                    __end_of_INTERRUPT_Initialize 17F8  
                                   vfpfcnvrt@ap 004B                                     vfpfcnvrt@cp 0095  
                                   vfpfcnvrt@fp 0047                                  __end_of___wmul 16C8  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_printf 1654  
                           start_initialization 167C                                 ___lodiv@divisor 000F  
                               ___lodiv@counter 001F                                     __end_of_abs 14CA  
                                   __end_of_pad 12B4                __end_of_CCP4_IsCapturedDataReady 1602  
                                   putch@txData 0008                           __end_of_EUSART1_Write 1774  
                                   vfprintf@fmt 0099                                        ??___wmul 000B  
                                      ??_printf 0053                                     __pbssCOMRAM 0053  
                                 __pcstackBANK0 008C                                ___aodiv@dividend 0007  
                        CCP4_CaptureRead@module 0009                        __end_of_microSecondDelay 15AC  
              ??_EUSART1_SetFramingErrorHandler 0009                 ?_EUSART1_SetFramingErrorHandler 0007  
                         _TMR0_InterruptHandler 0068                          _PIN_MANAGER_Initialize 1602  
                                     _dtoa$1574 0036                                       __pintcode 0008  
                                 __pmediumconst 7E22                                        ?___aodiv 0007  
                                      ?___aomod 0007                                ___aodiv@quotient 0019  
                                      ?___lodiv 0007                                        ?___lomod 0007  
                  ??_INTERRUPT_InterruptManager 0005                                       _myTMR0ISR 1708  
                               ___lomod@divisor 000F                                 ___lomod@counter 0017  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 0007                            _EUSART1_ErrorHandler 0062  
                                      ?_isspace 0007                         _EUSART1_SetErrorHandler 17E0  
                          _INTERRUPT_Initialize 17F4                               ??_TMR0_Initialize 0009  
                      _CCP4_IsCapturedDataReady 15D8                                  ___wmul@product 000B  
       EUSART1_SetErrorHandler@interruptHandler 0007                                        _LATCbits 000F8B  
                                      i2u151_40 15AA                                        i2u151_41 15A6  
                                      i2u164_40 1526                                        i2u164_41 1522  
                                      i2u173_40 0020                      ??_TMR0_SetInterruptHandler 0009  
                                      i2u173_41 001C                                        i2u165_48 152C  
                                      i2u174_40 002E                                        i2u165_49 1540  
                                      i2u174_41 002A                                        _PIR1bits 000F9E  
                                      _PIR4bits 000F7B                                        _RCONbits 000FD0  
                                      _TMR0_ISR 1508                                       _vfpfcnvrt 0042  
                             ??_TMR1_Initialize 0007                               ___wmul@multiplier 0007  
                                    ?_myTMR0ISR 0001                               ??_CCP4_Initialize 0007  
                             i2_TMR0_WriteTimer 17EA                                    _isspace$1632 000B  
                                    vfpfcnvrt@c 008C                              ?i2_TMR0_WriteTimer 0001  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                           ??i2_TMR0_WriteTimer 0003                                        __Hrparam 0000  
                                    vfprintf@ap 009B                                        __Lrparam 0000  
                                    vfprintf@fp 0097                         ??_OSCILLATOR_Initialize 0007  
                                    ?_vfpfcnvrt 0047                                 ___aodiv@divisor 000F  
                               ___aodiv@counter 0017                       __end_ofi2_TMR0_WriteTimer 17F4  
                     ??_EUSART1_SetErrorHandler 0009                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 179C                                        __ptext10 148A  
                                      __ptext11 0CD4                                        __ptext20 16A2  
                                      __ptext12 0B4C                                        __ptext21 134A  
                                      __ptext13 1142                                      _T1GCONbits 000FCC  
                                      __ptext30 1602                                        __ptext22 15D8  
                                      __ptext14 12B4                                        __ptext31 1742  
                                      __ptext23 179C                                        __ptext15 17AE  
                                      __ptext32 17F4                                        __ptext24 16C8  
                                      __ptext16 175E                                        __ptext41 1508  
                                      __ptext33 14CA                                        __ptext25 17B8  
                                      __ptext17 0E38                                        __ptext42 17F8  
                                      __ptext34 17CC                                        __ptext26 16EA  
                                      __ptext18 1400                                        __ptext43 1708  
                                      __ptext35 17D6                                        __ptext27 1726  
                                      __ptext19 15AC                                        __ptext44 17EA  
                                      __ptext36 17E0                                        __ptext28 1542  
                                      __ptext45 1578                                        __ptext37 1774  
                                      __ptext29 17C2                                        __ptext46 0000  
                                      __ptext38 1788                                        __ptext39 1654  
                              _CCP4_CaptureRead 179C                         TMR0_WriteTimer@timerVal 0007  
                             ??_TMR0_WriteTimer 0009            __end_of_TMR0_DefaultInterruptHandler 17FA  
                  _TMR0_DefaultInterruptHandler 17F8  EUSART1_SetOverrunErrorHandler@interruptHandler 0007  
                                      isa$xinst 000000                                        int$flags 0059  
                                      _vfprintf 13B0              __end_of_INTERRUPT_InterruptManager 003E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 009D  
                   _EUSART1_FramingErrorHandler 0066                                ___aomod@dividend 0007  
                                   ??_myTMR0ISR 0005                                      _INTCONbits 000FF2  
                                      isdigit@c 0007                ??_getEchoPulseDurationForeground 000D  
               ?_getEchoPulseDurationForeground 000B                          ??_INTERRUPT_Initialize 0007  
                                      intlevel2 0000                               ?_microSecondDelay 0001  
                                      isspace@c 0007                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 17D6                  _EUSART1_SetOverrunErrorHandler 17CC  
                                    _RCSTA1bits 000FAB                              ??_microSecondDelay 0003  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 00A1  EUSART1_SetFramingErrorHandler@interruptHandler 0007  
                CCP4_IsCapturedDataReady@status 0007               getEchoPulseDurationForeground@end 000F  
                               ___aomod@divisor 000F                              microSecondDelay@us 0001  
                                   ??_vfpfcnvrt 004D                                 ___aomod@counter 0017  
                            _eusart1RxLastError 0058                                 _TMR0_Initialize 1542  
           getEchoPulseDurationForeground@start 000D                      ??_CCP4_IsCapturedDataReady 0007  
                             microSecondDelay@i 0003                                    ___aodiv@sign 0018  
                __end_of_PIN_MANAGER_Initialize 162C                                    ___aomod@sign 0018  
                               _TMR1_Initialize 1726                                    fp__myTMR0ISR 0000  
