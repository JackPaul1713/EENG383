

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 13:16:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 06/04/2022 GMT
    63                           ; 
    64                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F25K22 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    98   000000                     
    99 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   100   000000                     
   101 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   102   000000                     
   103                           	psect	idataBANK0
   104   001042                     __pidataBANK0:
   105                           	callstack 0
   106                           
   107                           ;initializer for _tourDirections
   108   001042  01                 	db	1
   109   001043  FF                 	db	255
   110   001044  00                 	db	0
   111   001045  FF                 	db	255
   112   001046  00                 	db	0
   113   001047  01                 	db	1
   114   001048  00                 	db	0
   115   001049  01                 	db	1
   116   00104A  FF                 	db	255
   117                           
   118                           ;initializer for _rgbTourStart
   119   00104B  00                 	db	0
   120   00104C  FF                 	db	255
   121   00104D  00                 	db	0
   122                           
   123                           ;initializer for _rgbDuty
   124   00104E  FF                 	db	255
   125   00104F  FF                 	db	255
   126   001050  FF                 	db	255
   127                           
   128                           ;initializer for _period
   129   001051  2710               	dw	10000
   130   000000                     _CCPR2L	set	3943
   131   000000                     _CCPR2H	set	3944
   132   000000                     _PWM2CON	set	3941
   133   000000                     _CCPR3L	set	3934
   134   000000                     _CCPR3H	set	3935
   135   000000                     _PWM3CON	set	3932
   136   000000                     _TXREG1	set	4013
   137   000000                     _RCREG1	set	4014
   138   000000                     _SPBRG1	set	4015
   139   000000                     _TXSTA1	set	4012
   140   000000                     _BAUDCON1	set	4024
   141   000000                     _TMR0L	set	4054
   142   000000                     _TMR0H	set	4055
   143   000000                     _T2CON	set	4026
   144   000000                     _TMR2	set	4028
   145   000000                     _PR2	set	4027
   146   000000                     _ANSELA	set	3896
   147   000000                     _ANSELB	set	3897
   148   000000                     _ANSELC	set	3898
   149   000000                     _CCPTMRS0bits	set	3913
   150   000000                     _CCPR1L	set	4030
   151   000000                     _CCPR1H	set	4031
   152   000000                     _PSTR1CON	set	4025
   153   000000                     _PWM1CON	set	4023
   154   000000                     _ECCP1AS	set	4022
   155   000000                     _CCP1CON	set	4029
   156   000000                     _RCSTA1bits	set	4011
   157   000000                     _TXSTA1bits	set	4012
   158   000000                     _T0CON	set	4053
   159   000000                     _T2CONbits	set	4026
   160   000000                     _PLLRDY	set	32407
   161   000000                     _RCONbits	set	4048
   162   000000                     _OSCCON2	set	4050
   163   000000                     _OSCCON	set	4051
   164   000000                     _T0CONbits	set	4053
   165   000000                     _INTCON2bits	set	4081
   166   000000                     _PSTR3CON	set	3930
   167   000000                     _ECCP3AS	set	3931
   168   000000                     _CCP3CON	set	3933
   169   000000                     _WPUB	set	3937
   170   000000                     _LATA	set	3977
   171   000000                     _TRISA	set	3986
   172   000000                     _LATC	set	3979
   173   000000                     _LATB	set	3978
   174   000000                     _OSCTUNE	set	3995
   175   000000                     _PIR1bits	set	3998
   176   000000                     _TRISC	set	3988
   177   000000                     _TRISB	set	3987
   178   000000                     _PSTR2CON	set	3939
   179   000000                     _ECCP2AS	set	3940
   180   000000                     _CCP2CON	set	3942
   181   000000                     _INTCONbits	set	4082
   182   000000                     _RCSTA1	set	4011
   183   000000                     _SPBRGH1	set	4016
   184                           
   185                           	psect	mediumconst
   186   007E92                     __pmediumconst:
   187                           	callstack 0
   188   007E92  00                 	db	0
   189   007E93                     STR_11:
   190   007E93  66                 	db	102	;'f'
   191   007E94  3A                 	db	58	;':'
   192   007E95  20                 	db	32
   193   007E96  70                 	db	112	;'p'
   194   007E97  72                 	db	114	;'r'
   195   007E98  69                 	db	105	;'i'
   196   007E99  6E                 	db	110	;'n'
   197   007E9A  74                 	db	116	;'t'
   198   007E9B  20                 	db	32
   199   007E9C  75                 	db	117	;'u'
   200   007E9D  73                 	db	115	;'s'
   201   007E9E  69                 	db	105	;'i'
   202   007E9F  6E                 	db	110	;'n'
   203   007EA0  67                 	db	103	;'g'
   204   007EA1  20                 	db	32
   205   007EA2  73                 	db	115	;'s'
   206   007EA3  65                 	db	101	;'e'
   207   007EA4  76                 	db	118	;'v'
   208   007EA5  65                 	db	101	;'e'
   209   007EA6  72                 	db	114	;'r'
   210   007EA7  61                 	db	97	;'a'
   211   007EA8  6C                 	db	108	;'l'
   212   007EA9  20                 	db	32
   213   007EAA  66                 	db	102	;'f'
   214   007EAB  6F                 	db	111	;'o'
   215   007EAC  72                 	db	114	;'r'
   216   007EAD  6D                 	db	109	;'m'
   217   007EAE  61                 	db	97	;'a'
   218   007EAF  74                 	db	116	;'t'
   219   007EB0  20                 	db	32
   220   007EB1  73                 	db	115	;'s'
   221   007EB2  70                 	db	112	;'p'
   222   007EB3  65                 	db	101	;'e'
   223   007EB4  63                 	db	99	;'c'
   224   007EB5  69                 	db	105	;'i'
   225   007EB6  66                 	db	102	;'f'
   226   007EB7  69                 	db	105	;'i'
   227   007EB8  65                 	db	101	;'e'
   228   007EB9  72                 	db	114	;'r'
   229   007EBA  73                 	db	115	;'s'
   230   007EBB  2E                 	db	46
   231   007EBC  0D                 	db	13
   232   007EBD  0A                 	db	10
   233   007EBE  00                 	db	0
   234   007EBF                     STR_15:
   235   007EBF  70                 	db	112	;'p'
   236   007EC0  2F                 	db	47
   237   007EC1  50                 	db	80	;'P'
   238   007EC2  3A                 	db	58	;':'
   239   007EC3  20                 	db	32
   240   007EC4  64                 	db	100	;'d'
   241   007EC5  65                 	db	101	;'e'
   242   007EC6  63                 	db	99	;'c'
   243   007EC7  72                 	db	114	;'r'
   244   007EC8  65                 	db	101	;'e'
   245   007EC9  61                 	db	97	;'a'
   246   007ECA  73                 	db	115	;'s'
   247   007ECB  65                 	db	101	;'e'
   248   007ECC  2F                 	db	47
   249   007ECD  69                 	db	105	;'i'
   250   007ECE  6E                 	db	110	;'n'
   251   007ECF  63                 	db	99	;'c'
   252   007ED0  72                 	db	114	;'r'
   253   007ED1  65                 	db	101	;'e'
   254   007ED2  61                 	db	97	;'a'
   255   007ED3  73                 	db	115	;'s'
   256   007ED4  65                 	db	101	;'e'
   257   007ED5  20                 	db	32
   258   007ED6  50                 	db	80	;'P'
   259   007ED7  57                 	db	87	;'W'
   260   007ED8  4D                 	db	77	;'M'
   261   007ED9  20                 	db	32
   262   007EDA  64                 	db	100	;'d'
   263   007EDB  75                 	db	117	;'u'
   264   007EDC  74                 	db	116	;'t'
   265   007EDD  79                 	db	121	;'y'
   266   007EDE  20                 	db	32
   267   007EDF  63                 	db	99	;'c'
   268   007EE0  79                 	db	121	;'y'
   269   007EE1  63                 	db	99	;'c'
   270   007EE2  6C                 	db	108	;'l'
   271   007EE3  65                 	db	101	;'e'
   272   007EE4  0D                 	db	13
   273   007EE5  0A                 	db	10
   274   007EE6  00                 	db	0
   275   007EE7                     STR_12:
   276   007EE7  65                 	db	101	;'e'
   277   007EE8  3A                 	db	58	;':'
   278   007EE9  20                 	db	32
   279   007EEA  70                 	db	112	;'p'
   280   007EEB  72                 	db	114	;'r'
   281   007EEC  69                 	db	105	;'i'
   282   007EED  6E                 	db	110	;'n'
   283   007EEE  74                 	db	116	;'t'
   284   007EEF  20                 	db	32
   285   007EF0  73                 	db	115	;'s'
   286   007EF1  65                 	db	101	;'e'
   287   007EF2  76                 	db	118	;'v'
   288   007EF3  65                 	db	101	;'e'
   289   007EF4  72                 	db	114	;'r'
   290   007EF5  61                 	db	97	;'a'
   291   007EF6  6C                 	db	108	;'l'
   292   007EF7  20                 	db	32
   293   007EF8  65                 	db	101	;'e'
   294   007EF9  73                 	db	115	;'s'
   295   007EFA  63                 	db	99	;'c'
   296   007EFB  61                 	db	97	;'a'
   297   007EFC  70                 	db	112	;'p'
   298   007EFD  65                 	db	101	;'e'
   299   007EFE  64                 	db	100	;'d'
   300   007EFF  20                 	db	32
   301   007F00  63                 	db	99	;'c'
   302   007F01  68                 	db	104	;'h'
   303   007F02  61                 	db	97	;'a'
   304   007F03  72                 	db	114	;'r'
   305   007F04  61                 	db	97	;'a'
   306   007F05  63                 	db	99	;'c'
   307   007F06  74                 	db	116	;'t'
   308   007F07  65                 	db	101	;'e'
   309   007F08  72                 	db	114	;'r'
   310   007F09  73                 	db	115	;'s'
   311   007F0A  2E                 	db	46
   312   007F0B  0D                 	db	13
   313   007F0C  0A                 	db	10
   314   007F0D  00                 	db	0
   315   007F0E                     STR_6:
   316   007F0E  2D                 	db	45
   317   007F0F  2D                 	db	45
   318   007F10  2D                 	db	45
   319   007F11  2D                 	db	45
   320   007F12  2D                 	db	45
   321   007F13  2D                 	db	45
   322   007F14  2D                 	db	45
   323   007F15  2D                 	db	45
   324   007F16  2D                 	db	45
   325   007F17  2D                 	db	45
   326   007F18  2D                 	db	45
   327   007F19  2D                 	db	45
   328   007F1A  2D                 	db	45
   329   007F1B  2D                 	db	45
   330   007F1C  2D                 	db	45
   331   007F1D  2D                 	db	45
   332   007F1E  2D                 	db	45
   333   007F1F  2D                 	db	45
   334   007F20  2D                 	db	45
   335   007F21  2D                 	db	45
   336   007F22  2D                 	db	45
   337   007F23  2D                 	db	45
   338   007F24  2D                 	db	45
   339   007F25  2D                 	db	45
   340   007F26  2D                 	db	45
   341   007F27  2D                 	db	45
   342   007F28  2D                 	db	45
   343   007F29  2D                 	db	45
   344   007F2A  2D                 	db	45
   345   007F2B  2D                 	db	45
   346   007F2C  0D                 	db	13
   347   007F2D  0A                 	db	10
   348   007F2E  00                 	db	0
   349   007F2F                     STR_14:
   350   007F2F  54                 	db	84	;'T'
   351   007F30  3A                 	db	58	;':'
   352   007F31  20                 	db	32
   353   007F32  44                 	db	68	;'D'
   354   007F33  69                 	db	105	;'i'
   355   007F34  73                 	db	115	;'s'
   356   007F35  70                 	db	112	;'p'
   357   007F36  6C                 	db	108	;'l'
   358   007F37  61                 	db	97	;'a'
   359   007F38  79                 	db	121	;'y'
   360   007F39  20                 	db	32
   361   007F3A  63                 	db	99	;'c'
   362   007F3B  75                 	db	117	;'u'
   363   007F3C  72                 	db	114	;'r'
   364   007F3D  72                 	db	114	;'r'
   365   007F3E  65                 	db	101	;'e'
   366   007F3F  6E                 	db	110	;'n'
   367   007F40  74                 	db	116	;'t'
   368   007F41  20                 	db	32
   369   007F42  54                 	db	84	;'T'
   370   007F43  4D                 	db	77	;'M'
   371   007F44  52                 	db	82	;'R'
   372   007F45  30                 	db	48	;'0'
   373   007F46  0D                 	db	13
   374   007F47  0A                 	db	10
   375   007F48  00                 	db	0
   376   007F49                     STR_13:
   377   007F49  74                 	db	116	;'t'
   378   007F4A  3A                 	db	58	;':'
   379   007F4B  20                 	db	32
   380   007F4C  44                 	db	68	;'D'
   381   007F4D  69                 	db	105	;'i'
   382   007F4E  73                 	db	115	;'s'
   383   007F4F  70                 	db	112	;'p'
   384   007F50  6C                 	db	108	;'l'
   385   007F51  61                 	db	97	;'a'
   386   007F52  79                 	db	121	;'y'
   387   007F53  20                 	db	32
   388   007F54  63                 	db	99	;'c'
   389   007F55  75                 	db	117	;'u'
   390   007F56  72                 	db	114	;'r'
   391   007F57  72                 	db	114	;'r'
   392   007F58  65                 	db	101	;'e'
   393   007F59  6E                 	db	110	;'n'
   394   007F5A  74                 	db	116	;'t'
   395   007F5B  20                 	db	32
   396   007F5C  54                 	db	84	;'T'
   397   007F5D  4D                 	db	77	;'M'
   398   007F5E  52                 	db	82	;'R'
   399   007F5F  32                 	db	50	;'2'
   400   007F60  0D                 	db	13
   401   007F61  0A                 	db	10
   402   007F62  00                 	db	0
   403   007F63                     STR_10:
   404   007F63  7A                 	db	122	;'z'
   405   007F64  3A                 	db	58	;':'
   406   007F65  20                 	db	32
   407   007F66  43                 	db	67	;'C'
   408   007F67  6C                 	db	108	;'l'
   409   007F68  65                 	db	101	;'e'
   410   007F69  61                 	db	97	;'a'
   411   007F6A  72                 	db	114	;'r'
   412   007F6B  20                 	db	32
   413   007F6C  74                 	db	116	;'t'
   414   007F6D  68                 	db	104	;'h'
   415   007F6E  65                 	db	101	;'e'
   416   007F6F  20                 	db	32
   417   007F70  74                 	db	116	;'t'
   418   007F71  65                 	db	101	;'e'
   419   007F72  72                 	db	114	;'r'
   420   007F73  6D                 	db	109	;'m'
   421   007F74  69                 	db	105	;'i'
   422   007F75  6E                 	db	110	;'n'
   423   007F76  61                 	db	97	;'a'
   424   007F77  6C                 	db	108	;'l'
   425   007F78  0D                 	db	13
   426   007F79  0A                 	db	10
   427   007F7A  00                 	db	0
   428   007F7B                     STR_3:
   429   007F7B  44                 	db	68	;'D'
   430   007F7C  65                 	db	101	;'e'
   431   007F7D  76                 	db	118	;'v'
   432   007F7E  27                 	db	39
   433   007F7F  32                 	db	50	;'2'
   434   007F80  31                 	db	49	;'1'
   435   007F81  20                 	db	32
   436   007F82  62                 	db	98	;'b'
   437   007F83  6F                 	db	111	;'o'
   438   007F84  61                 	db	97	;'a'
   439   007F85  72                 	db	114	;'r'
   440   007F86  64                 	db	100	;'d'
   441   007F87  20                 	db	32
   442   007F88  77                 	db	119	;'w'
   443   007F89  69                 	db	105	;'i'
   444   007F8A  72                 	db	114	;'r'
   445   007F8B  69                 	db	105	;'i'
   446   007F8C  6E                 	db	110	;'n'
   447   007F8D  67                 	db	103	;'g'
   448   007F8E  0D                 	db	13
   449   007F8F  0A                 	db	10
   450   007F90  00                 	db	0
   451   007F91                     STR_9:
   452   007F91  5A                 	db	90	;'Z'
   453   007F92  3A                 	db	58	;':'
   454   007F93  20                 	db	32
   455   007F94  52                 	db	82	;'R'
   456   007F95  65                 	db	101	;'e'
   457   007F96  73                 	db	115	;'s'
   458   007F97  65                 	db	101	;'e'
   459   007F98  74                 	db	116	;'t'
   460   007F99  20                 	db	32
   461   007F9A  70                 	db	112	;'p'
   462   007F9B  72                 	db	114	;'r'
   463   007F9C  6F                 	db	111	;'o'
   464   007F9D  63                 	db	99	;'c'
   465   007F9E  65                 	db	101	;'e'
   466   007F9F  73                 	db	115	;'s'
   467   007FA0  73                 	db	115	;'s'
   468   007FA1  6F                 	db	111	;'o'
   469   007FA2  72                 	db	114	;'r'
   470   007FA3  0D                 	db	13
   471   007FA4  0A                 	db	10
   472   007FA5  00                 	db	0
   473   007FA6                     STR_21:
   474   007FA6  55                 	db	85	;'U'
   475   007FA7  6E                 	db	110	;'n'
   476   007FA8  6B                 	db	107	;'k'
   477   007FA9  6E                 	db	110	;'n'
   478   007FAA  6F                 	db	111	;'o'
   479   007FAB  77                 	db	119	;'w'
   480   007FAC  6E                 	db	110	;'n'
   481   007FAD  20                 	db	32
   482   007FAE  6B                 	db	107	;'k'
   483   007FAF  65                 	db	101	;'e'
   484   007FB0  79                 	db	121	;'y'
   485   007FB1  20                 	db	32
   486   007FB2  25                 	db	37
   487   007FB3  63                 	db	99	;'c'
   488   007FB4  0D                 	db	13
   489   007FB5  0A                 	db	10
   490   007FB6  00                 	db	0
   491   007FB7                     STR_4:
   492   007FB7  52                 	db	82	;'R'
   493   007FB8  43                 	db	67	;'C'
   494   007FB9  32                 	db	50	;'2'
   495   007FBA  20                 	db	32
   496   007FBB  3C                 	db	60	;'<'
   497   007FBC  2D                 	db	45
   498   007FBD  3E                 	db	62	;'>'
   499   007FBE  20                 	db	32
   500   007FBF  52                 	db	82	;'R'
   501   007FC0  65                 	db	101	;'e'
   502   007FC1  64                 	db	100	;'d'
   503   007FC2  20                 	db	32
   504   007FC3  4C                 	db	76	;'L'
   505   007FC4  45                 	db	69	;'E'
   506   007FC5  44                 	db	68	;'D'
   507   007FC6  00                 	db	0
   508   007FC7                     STR_7:
   509   007FC7  3F                 	db	63	;'?'
   510   007FC8  3A                 	db	58	;':'
   511   007FC9  20                 	db	32
   512   007FCA  48                 	db	72	;'H'
   513   007FCB  65                 	db	101	;'e'
   514   007FCC  6C                 	db	108	;'l'
   515   007FCD  70                 	db	112	;'p'
   516   007FCE  20                 	db	32
   517   007FCF  6D                 	db	109	;'m'
   518   007FD0  65                 	db	101	;'e'
   519   007FD1  6E                 	db	110	;'n'
   520   007FD2  75                 	db	117	;'u'
   521   007FD3  0D                 	db	13
   522   007FD4  0A                 	db	10
   523   007FD5  00                 	db	0
   524   007FD6                     STR_2:
   525   007FD6  43                 	db	67	;'C'
   526   007FD7  6F                 	db	111	;'o'
   527   007FD8  6C                 	db	108	;'l'
   528   007FD9  6F                 	db	111	;'o'
   529   007FDA  72                 	db	114	;'r'
   530   007FDB  20                 	db	32
   531   007FDC  43                 	db	67	;'C'
   532   007FDD  75                 	db	117	;'u'
   533   007FDE  62                 	db	98	;'b'
   534   007FDF  65                 	db	101	;'e'
   535   007FE0  0D                 	db	13
   536   007FE1  0A                 	db	10
   537   007FE2  00                 	db	0
   538   007FE3                     STR_1:
   539   007FE3  69                 	db	105	;'i'
   540   007FE4  6E                 	db	110	;'n'
   541   007FE5  4C                 	db	76	;'L'
   542   007FE6  61                 	db	97	;'a'
   543   007FE7  62                 	db	98	;'b'
   544   007FE8  20                 	db	32
   545   007FE9  30                 	db	48	;'0'
   546   007FEA  35                 	db	53	;'5'
   547   007FEB  0D                 	db	13
   548   007FEC  0A                 	db	10
   549   007FED  00                 	db	0
   550   007FEE                     STR_8:
   551   007FEE  6F                 	db	111	;'o'
   552   007FEF  3A                 	db	58	;':'
   553   007FF0  20                 	db	32
   554   007FF1  6B                 	db	107	;'k'
   555   007FF2  0D                 	db	13
   556   007FF3  0A                 	db	10
   557   007FF4  00                 	db	0
   558   007FF5                     STR_19:
   559   007FF5  25                 	db	37
   560   007FF6  75                 	db	117	;'u'
   561   007FF7  0A                 	db	10
   562   007FF8  0D                 	db	13
   563   007FF9  00                 	db	0
   564   007FFA                     STR_5:
   565   007FFA  0D                 	db	13
   566   007FFB  0A                 	db	10
   567   007FFC  3E                 	db	62	;'>'
   568   007FFD  20                 	db	32
   569   007FFE  00                 	db	0
   570   007FFF  00                 	db	0	; dummy byte at the end
   571   000000                     
   572                           ; #config settings
   573                           
   574                           	psect	cinit
   575   000CA2                     __pcinit:
   576                           	callstack 0
   577   000CA2                     start_initialization:
   578                           	callstack 0
   579   000CA2                     __initialization:
   580                           	callstack 0
   581                           
   582                           ; Initialize objects allocated to BANK0 (17 bytes)
   583                           ; load TBLPTR registers with __pidataBANK0
   584   000CA2  0E42               	movlw	low __pidataBANK0
   585   000CA4  6EF6               	movwf	tblptrl,c
   586   000CA6  0E10               	movlw	high __pidataBANK0
   587   000CA8  6EF7               	movwf	tblptrh,c
   588   000CAA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   589   000CAC  6EF8               	movwf	tblptru,c
   590   000CAE  EE00  F0B5         	lfsr	0,__pdataBANK0
   591   000CB2  EE10 F011          	lfsr	1,17
   592   000CB6                     copy_data0:
   593   000CB6  0009               	tblrd		*+
   594   000CB8  CFF5 FFEE          	movff	tablat,postinc0
   595   000CBC  50E5               	movf	postdec1,w,c
   596   000CBE  50E1               	movf	fsr1l,w,c
   597   000CC0  E1FA               	bnz	copy_data0
   598                           
   599                           ; Clear objects allocated to BANK0 (42 bytes)
   600   000CC2  EE00  F08B         	lfsr	0,__pbssBANK0
   601   000CC6  0E2A               	movlw	42
   602   000CC8                     clear_0:
   603   000CC8  6AEE               	clrf	postinc0,c
   604   000CCA  06E8               	decf	wreg,f,c
   605   000CCC  E1FD               	bnz	clear_0
   606                           
   607                           ; Clear objects allocated to COMRAM (12 bytes)
   608   000CCE  EE00  F046         	lfsr	0,__pbssCOMRAM
   609   000CD2  0E0C               	movlw	12
   610   000CD4                     clear_1:
   611   000CD4  6AEE               	clrf	postinc0,c
   612   000CD6  06E8               	decf	wreg,f,c
   613   000CD8  E1FD               	bnz	clear_1
   614   000CDA                     end_of_initialization:
   615                           	callstack 0
   616   000CDA                     __end_of__initialization:
   617                           	callstack 0
   618   000CDA  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   619   000CDC  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   620   000CDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   621   000CE0  6EF8               	movwf	tblptru,c
   622   000CE2  0100               	movlb	0
   623   000CE4  EF31  F000         	goto	_main	;jump to C main() function
   624                           
   625                           	psect	bssCOMRAM
   626   000046                     __pbssCOMRAM:
   627                           	callstack 0
   628   000046                     _width:
   629                           	callstack 0
   630   000046                     	ds	2
   631   000048                     _prec:
   632                           	callstack 0
   633   000048                     	ds	2
   634   00004A                     _timer0ReloadVal:
   635                           	callstack 0
   636   00004A                     	ds	2
   637   00004C                     _TMR0_InterruptHandler:
   638                           	callstack 0
   639   00004C                     	ds	2
   640   00004E                     _flags:
   641                           	callstack 0
   642   00004E                     	ds	1
   643   00004F                     _edgeLocation:
   644                           	callstack 0
   645   00004F                     	ds	1
   646   000050                     _tour:
   647                           	callstack 0
   648   000050                     	ds	1
   649   000051                     _eusart1RxLastError:
   650                           	callstack 0
   651   000051                     	ds	1
   652                           
   653                           	psect	bssBANK0
   654   00008B                     __pbssBANK0:
   655                           	callstack 0
   656   00008B                     _rgbDirection:
   657                           	callstack 0
   658   00008B                     	ds	3
   659   00008E                     _EUSART1_ErrorHandler:
   660                           	callstack 0
   661   00008E                     	ds	2
   662   000090                     _EUSART1_OverrunErrorHandler:
   663                           	callstack 0
   664   000090                     	ds	2
   665   000092                     _EUSART1_FramingErrorHandler:
   666                           	callstack 0
   667   000092                     	ds	2
   668   000094                     _tourDirectionIndex:
   669                           	callstack 0
   670   000094                     	ds	1
   671   000095                     _dbuf:
   672                           	callstack 0
   673   000095                     	ds	32
   674                           
   675                           	psect	dataBANK0
   676   0000B5                     __pdataBANK0:
   677                           	callstack 0
   678   0000B5                     _tourDirections:
   679                           	callstack 0
   680   0000B5                     	ds	9
   681   0000BE                     _rgbTourStart:
   682                           	callstack 0
   683   0000BE                     	ds	3
   684   0000C1                     _rgbDuty:
   685                           	callstack 0
   686   0000C1                     	ds	3
   687   0000C4                     _period:
   688                           	callstack 0
   689   0000C4                     	ds	2
   690                           
   691                           	psect	cstackBANK0
   692   000060                     __pcstackBANK0:
   693                           	callstack 0
   694   000060                     utoa@w:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x0
   698   000060                     	ds	2
   699   000062                     utoa@p:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x2
   703   000062                     	ds	2
   704   000064                     utoa@n:
   705                           	callstack 0
   706                           
   707                           ; 8 bytes @ 0x4
   708   000064                     	ds	8
   709   00006C                     utoa@i:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0xC
   713   00006C                     	ds	2
   714   00006E                     vfpfcnvrt@convarg:
   715                           	callstack 0
   716                           
   717                           ; 8 bytes @ 0xE
   718   00006E                     	ds	8
   719   000076                     vfpfcnvrt@c:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x16
   723   000076                     	ds	1
   724   000077                     vfpfcnvrt@cp:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x17
   728   000077                     	ds	2
   729   000079                     ?_vfprintf:
   730                           	callstack 0
   731   000079                     vfprintf@fp:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x19
   735   000079                     	ds	2
   736   00007B                     vfprintf@fmt:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x1B
   740   00007B                     	ds	2
   741   00007D                     vfprintf@ap:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x1D
   745   00007D                     	ds	2
   746   00007F                     vfprintf@cfmt:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x1F
   750   00007F                     	ds	2
   751   000081                     ?_printf:
   752                           	callstack 0
   753   000081                     printf@fmt:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x21
   757   000081                     	ds	4
   758   000085                     printf@ap:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x25
   762   000085                     	ds	2
   763   000087                     ??_main:
   764                           
   765                           ; 1 bytes @ 0x27
   766   000087                     	ds	2
   767   000089                     main@cmd:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x29
   771   000089                     	ds	1
   772   00008A                     main@i:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x2A
   776   00008A                     	ds	1
   777                           
   778                           	psect	cstackCOMRAM
   779   000001                     __pcstackCOMRAM:
   780                           	callstack 0
   781   000001                     ?___awmod:
   782                           	callstack 0
   783   000001                     ___awmod@dividend:
   784                           	callstack 0
   785   000001                     i2EPWM1_LoadDutyValue@dutyValue:
   786                           	callstack 0
   787   000001                     i2TMR0_WriteTimer@timerVal:
   788                           	callstack 0
   789   000001                     i2EPWM3_LoadDutyValue@dutyValue:
   790                           	callstack 0
   791   000001                     i2EPWM2_LoadDutyValue@dutyValue:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x0
   795   000001                     	ds	2
   796   000003                     ??i2_EPWM1_LoadDutyValue:
   797   000003                     ??i2_EPWM3_LoadDutyValue:
   798   000003                     ??i2_EPWM2_LoadDutyValue:
   799   000003                     ___awmod@divisor:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2
   803   000003                     	ds	2
   804   000005                     ___awmod@counter:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x4
   808   000005                     	ds	1
   809   000006                     ___awmod@sign:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x5
   813   000006                     	ds	1
   814   000007                     ??_INTERRUPT_InterruptManager:
   815                           
   816                           ; 1 bytes @ 0x6
   817   000007                     	ds	6
   818   00000D                     ?___lodiv:
   819                           	callstack 0
   820   00000D                     ?___lomod:
   821                           	callstack 0
   822   00000D                     EUSART1_Write@txData:
   823                           	callstack 0
   824   00000D                     EPWM1_LoadDutyValue@dutyValue:
   825                           	callstack 0
   826   00000D                     TMR0_WriteTimer@timerVal:
   827                           	callstack 0
   828   00000D                     TMR0_SetInterruptHandler@InterruptHandler:
   829                           	callstack 0
   830   00000D                     EUSART1_SetFramingErrorHandler@interruptHandler:
   831                           	callstack 0
   832   00000D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   833                           	callstack 0
   834   00000D                     EUSART1_SetErrorHandler@interruptHandler:
   835                           	callstack 0
   836   00000D                     EPWM3_LoadDutyValue@dutyValue:
   837                           	callstack 0
   838   00000D                     EPWM2_LoadDutyValue@dutyValue:
   839                           	callstack 0
   840   00000D                     ___lodiv@dividend:
   841                           	callstack 0
   842   00000D                     ___lomod@dividend:
   843                           	callstack 0
   844                           
   845                           ; 8 bytes @ 0xC
   846   00000D                     	ds	1
   847   00000E                     putch@txData:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0xD
   851   00000E                     	ds	1
   852   00000F                     ??_EPWM1_LoadDutyValue:
   853   00000F                     ??_TMR0_Initialize:
   854   00000F                     ??_EPWM3_LoadDutyValue:
   855   00000F                     ??_EPWM2_LoadDutyValue:
   856   00000F                     fputc@c:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0xE
   860   00000F                     	ds	2
   861   000011                     fputc@fp:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x10
   865   000011                     	ds	2
   866   000013                     ??_fputc:
   867                           
   868                           ; 1 bytes @ 0x12
   869   000013                     	ds	2
   870   000015                     ___lodiv@divisor:
   871                           	callstack 0
   872   000015                     ___lomod@divisor:
   873                           	callstack 0
   874                           
   875                           ; 8 bytes @ 0x14
   876   000015                     	ds	3
   877   000018                     ctoa@fp:
   878                           	callstack 0
   879   000018                     fputs@s:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x17
   883   000018                     	ds	2
   884   00001A                     ctoa@c:
   885                           	callstack 0
   886   00001A                     fputs@fp:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x19
   890   00001A                     	ds	1
   891   00001B                     ??_ctoa:
   892                           
   893                           ; 1 bytes @ 0x1A
   894   00001B                     	ds	1
   895   00001C                     fputs@c:
   896                           	callstack 0
   897   00001C                     ctoa@l:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x1B
   901   00001C                     	ds	1
   902   00001D                     ___lomod@counter:
   903                           	callstack 0
   904   00001D                     fputs@i:
   905                           	callstack 0
   906   00001D                     ___lodiv@quotient:
   907                           	callstack 0
   908                           
   909                           ; 8 bytes @ 0x1C
   910   00001D                     	ds	1
   911   00001E                     ctoa@w:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x1D
   915   00001E                     	ds	1
   916   00001F                     pad@fp:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x1E
   920   00001F                     	ds	2
   921   000021                     pad@buf:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x20
   925   000021                     	ds	2
   926   000023                     pad@p:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x22
   930   000023                     	ds	2
   931   000025                     ??_pad:
   932   000025                     ___lodiv@counter:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x24
   936   000025                     	ds	1
   937   000026                     pad@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x25
   941   000026                     	ds	2
   942   000028                     pad@w:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x27
   946   000028                     	ds	2
   947   00002A                     utoa@fp:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x29
   951   00002A                     	ds	2
   952   00002C                     utoa@d:
   953                           	callstack 0
   954                           
   955                           ; 8 bytes @ 0x2B
   956   00002C                     	ds	8
   957   000034                     ??_utoa:
   958                           
   959                           ; 1 bytes @ 0x33
   960   000034                     	ds	8
   961   00003C                     vfpfcnvrt@fp:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x3B
   965   00003C                     	ds	2
   966   00003E                     vfpfcnvrt@fmt:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x3D
   970   00003E                     	ds	2
   971   000040                     vfpfcnvrt@ap:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x3F
   975   000040                     	ds	2
   976   000042                     ??_vfpfcnvrt:
   977                           
   978                           ; 1 bytes @ 0x41
   979   000042                     	ds	4
   980   000046                     
   981                           ; 1 bytes @ 0x45
   982 ;;
   983 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   984 ;;
   985 ;; *************** function _main *****************
   986 ;; Defined at:
   987 ;;		line 67 in file "main.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  duty            2    0        unsigned short 
   992 ;;  i               1   42[BANK0 ] unsigned char 
   993 ;;  cmd             1   41[BANK0 ] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1003 ;;      Params:         0       0       0       0       0       0       0
  1004 ;;      Locals:         0       2       0       0       0       0       0
  1005 ;;      Temps:          0       2       0       0       0       0       0
  1006 ;;      Totals:         0       4       0       0       0       0       0
  1007 ;;Total ram usage:        4 bytes
  1008 ;; Hardware stack levels required when called: 13
  1009 ;; This function calls:
  1010 ;;		_EPWM1_LoadDutyValue
  1011 ;;		_EPWM2_LoadDutyValue
  1012 ;;		_EPWM3_LoadDutyValue
  1013 ;;		_EUSART1_Read
  1014 ;;		_EUSART1_is_rx_ready
  1015 ;;		_SYSTEM_Initialize
  1016 ;;		_TMR0_SetInterruptHandler
  1017 ;;		_TMR0_WriteTimer
  1018 ;;		_printf
  1019 ;; This function is called by:
  1020 ;;		Startup code after reset
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text0
  1025   000062                     __ptext0:
  1026                           	callstack 0
  1027   000062                     _main:
  1028                           	callstack 18
  1029   000062                     
  1030                           ;main.c: 71:     uint8_t i;;main.c: 72:     char cmd;;main.c: 74:     SYSTEM_Initialize(
      +                          );
  1031   000062  ECBB  F007         	call	_SYSTEM_Initialize	;wreg free
  1032   000066                     
  1033                           ;main.c: 76:     TMR0_WriteTimer(0x0000);
  1034   000066  0E00               	movlw	0
  1035   000068  6E0E               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1036   00006A  0E00               	movlw	0
  1037   00006C  6E0D               	movwf	TMR0_WriteTimer@timerVal^0,c
  1038   00006E  EC37  F008         	call	_TMR0_WriteTimer	;wreg free
  1039   000072                     
  1040                           ;main.c: 77:     INTCONbits.TMR0IF = 0;
  1041   000072  94F2               	bcf	242,2,c	;volatile
  1042   000074                     l356:
  1043   000074  A4F2               	btfss	242,2,c	;volatile
  1044   000076  EF3F  F000         	goto	u1351
  1045   00007A  EF41  F000         	goto	u1350
  1046   00007E                     u1351:
  1047   00007E  EF3A  F000         	goto	l356
  1048   000082                     u1350:
  1049   000082                     
  1050                           ;main.c: 80:     EPWM1_LoadDutyValue(rgbDuty[0]);
  1051   000082  C0C1  F00D         	movff	_rgbDuty,EPWM1_LoadDutyValue@dutyValue
  1052   000086  6A0E               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1053   000088  EC35  F007         	call	_EPWM1_LoadDutyValue	;wreg free
  1054                           
  1055                           ;main.c: 81:     EPWM2_LoadDutyValue(rgbDuty[1]);
  1056   00008C  C0C2  F00D         	movff	_rgbDuty+1,EPWM2_LoadDutyValue@dutyValue
  1057   000090  6A0E               	clrf	(EPWM2_LoadDutyValue@dutyValue+1)^0,c
  1058   000092  EC1D  F007         	call	_EPWM2_LoadDutyValue	;wreg free
  1059                           
  1060                           ;main.c: 82:     EPWM3_LoadDutyValue(rgbDuty[2]);
  1061   000096  C0C3  F00D         	movff	_rgbDuty+2,EPWM3_LoadDutyValue@dutyValue
  1062   00009A  6A0E               	clrf	(EPWM3_LoadDutyValue@dutyValue+1)^0,c
  1063   00009C  ECEB  F006         	call	_EPWM3_LoadDutyValue	;wreg free
  1064                           
  1065                           ;main.c: 84:     TMR0_SetInterruptHandler(TMR0ISR);
  1066   0000A0  0E2C               	movlw	low _TMR0ISR
  1067   0000A2  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1068   0000A4  0E09               	movlw	high _TMR0ISR
  1069   0000A6  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1070   0000A8  EC3C  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  1071   0000AC                     
  1072                           ;main.c: 85:     (INTCONbits.GIE = 1);
  1073   0000AC  8EF2               	bsf	242,7,c	;volatile
  1074   0000AE                     
  1075                           ;main.c: 86:     (INTCONbits.PEIE = 1);
  1076   0000AE  8CF2               	bsf	242,6,c	;volatile
  1077   0000B0                     
  1078                           ;main.c: 88:     printf("inLab 05\r\n");
  1079   0000B0  0EE3               	movlw	low STR_1
  1080   0000B2  0100               	movlb	0	; () banked
  1081   0000B4  6F81               	movwf	printf@fmt& (0+255),b
  1082   0000B6  0E7F               	movlw	high STR_1
  1083   0000B8  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1084   0000BA  EC93  F007         	call	_printf	;wreg free
  1085   0000BE                     
  1086                           ;main.c: 89:     printf("Color Cube\r\n");
  1087   0000BE  0ED6               	movlw	low STR_2
  1088   0000C0  0100               	movlb	0	; () banked
  1089   0000C2  6F81               	movwf	printf@fmt& (0+255),b
  1090   0000C4  0E7F               	movlw	high STR_2
  1091   0000C6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1092   0000C8  EC93  F007         	call	_printf	;wreg free
  1093   0000CC                     
  1094                           ;main.c: 90:     printf("Dev'21 board wiring\r\n");
  1095   0000CC  0E7B               	movlw	low STR_3
  1096   0000CE  0100               	movlb	0	; () banked
  1097   0000D0  6F81               	movwf	printf@fmt& (0+255),b
  1098   0000D2  0E7F               	movlw	high STR_3
  1099   0000D4  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1100   0000D6  EC93  F007         	call	_printf	;wreg free
  1101   0000DA                     
  1102                           ;main.c: 91:     printf("RC2 <-> Red LED");
  1103   0000DA  0EB7               	movlw	low STR_4
  1104   0000DC  0100               	movlb	0	; () banked
  1105   0000DE  6F81               	movwf	printf@fmt& (0+255),b
  1106   0000E0  0E7F               	movlw	high STR_4
  1107   0000E2  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1108   0000E4  EC93  F007         	call	_printf	;wreg free
  1109   0000E8                     
  1110                           ;main.c: 92:     printf("\r\n> ");
  1111   0000E8  0EFA               	movlw	low STR_5
  1112   0000EA  0100               	movlb	0	; () banked
  1113   0000EC  6F81               	movwf	printf@fmt& (0+255),b
  1114   0000EE  0E7F               	movlw	high STR_5
  1115   0000F0  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1116   0000F2  EC93  F007         	call	_printf	;wreg free
  1117   0000F6                     l2507:
  1118                           
  1119                           ;main.c: 95:     {;main.c: 96:         if ((EUSART1_is_rx_ready()))
  1120   0000F6  EC17  F008         	call	_EUSART1_is_rx_ready	;wreg free
  1121   0000FA  0900               	iorlw	0
  1122   0000FC  B4D8               	btfsc	status,2,c
  1123   0000FE  EF83  F000         	goto	u1361
  1124   000102  EF85  F000         	goto	u1360
  1125   000106                     u1361:
  1126   000106  EF7B  F000         	goto	l2507
  1127   00010A                     u1360:
  1128   00010A                     
  1129                           ;main.c: 97:         {;main.c: 99:             cmd = EUSART1_Read();
  1130   00010A  ECA7  F007         	call	_EUSART1_Read	;wreg free
  1131   00010E  0100               	movlb	0	; () banked
  1132   000110  6F89               	movwf	main@cmd& (0+255),b
  1133                           
  1134                           ;main.c: 101:             switch (cmd)
  1135   000112  EFA4  F001         	goto	l2585
  1136   000116                     l2511:
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;main.c: 104:                     printf("------------------------------\r\n");
  1140   000116  0E0E               	movlw	low STR_6
  1141   000118  6F81               	movwf	printf@fmt& (0+255),b
  1142   00011A  0E7F               	movlw	high STR_6
  1143   00011C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1144   00011E  EC93  F007         	call	_printf	;wreg free
  1145                           
  1146                           ;main.c: 105:                     printf("?: Help menu\r\n");
  1147   000122  0EC7               	movlw	low STR_7
  1148   000124  0100               	movlb	0	; () banked
  1149   000126  6F81               	movwf	printf@fmt& (0+255),b
  1150   000128  0E7F               	movlw	high STR_7
  1151   00012A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1152   00012C  EC93  F007         	call	_printf	;wreg free
  1153                           
  1154                           ;main.c: 106:                     printf("o: k\r\n");
  1155   000130  0EEE               	movlw	low STR_8
  1156   000132  0100               	movlb	0	; () banked
  1157   000134  6F81               	movwf	printf@fmt& (0+255),b
  1158   000136  0E7F               	movlw	high STR_8
  1159   000138  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1160   00013A  EC93  F007         	call	_printf	;wreg free
  1161                           
  1162                           ;main.c: 107:                     printf("Z: Reset processor\r\n");
  1163   00013E  0E91               	movlw	low STR_9
  1164   000140  0100               	movlb	0	; () banked
  1165   000142  6F81               	movwf	printf@fmt& (0+255),b
  1166   000144  0E7F               	movlw	high STR_9
  1167   000146  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1168   000148  EC93  F007         	call	_printf	;wreg free
  1169                           
  1170                           ;main.c: 108:                     printf("z: Clear the terminal\r\n");
  1171   00014C  0E63               	movlw	low STR_10
  1172   00014E  0100               	movlb	0	; () banked
  1173   000150  6F81               	movwf	printf@fmt& (0+255),b
  1174   000152  0E7F               	movlw	high STR_10
  1175   000154  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1176   000156  EC93  F007         	call	_printf	;wreg free
  1177                           
  1178                           ;main.c: 109:                     printf("f: print using several format specifiers.\r\n"
      +                          );
  1179   00015A  0E93               	movlw	low STR_11
  1180   00015C  0100               	movlb	0	; () banked
  1181   00015E  6F81               	movwf	printf@fmt& (0+255),b
  1182   000160  0E7E               	movlw	high STR_11
  1183   000162  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1184   000164  EC93  F007         	call	_printf	;wreg free
  1185                           
  1186                           ;main.c: 110:                     printf("e: print several escaped characters.\r\n");
  1187   000168  0EE7               	movlw	low STR_12
  1188   00016A  0100               	movlb	0	; () banked
  1189   00016C  6F81               	movwf	printf@fmt& (0+255),b
  1190   00016E  0E7E               	movlw	high STR_12
  1191   000170  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1192   000172  EC93  F007         	call	_printf	;wreg free
  1193                           
  1194                           ;main.c: 111:                     printf("t: Display current TMR2\r\n");
  1195   000176  0E49               	movlw	low STR_13
  1196   000178  0100               	movlb	0	; () banked
  1197   00017A  6F81               	movwf	printf@fmt& (0+255),b
  1198   00017C  0E7F               	movlw	high STR_13
  1199   00017E  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1200   000180  EC93  F007         	call	_printf	;wreg free
  1201                           
  1202                           ;main.c: 112:                     printf("T: Display current TMR0\r\n");
  1203   000184  0E2F               	movlw	low STR_14
  1204   000186  0100               	movlb	0	; () banked
  1205   000188  6F81               	movwf	printf@fmt& (0+255),b
  1206   00018A  0E7F               	movlw	high STR_14
  1207   00018C  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1208   00018E  EC93  F007         	call	_printf	;wreg free
  1209                           
  1210                           ;main.c: 113:                     printf("p/P: decrease/increase PWM duty cycle\r\n");
  1211   000192  0EBF               	movlw	low STR_15
  1212   000194  0100               	movlb	0	; () banked
  1213   000196  6F81               	movwf	printf@fmt& (0+255),b
  1214   000198  0E7E               	movlw	high STR_15
  1215   00019A  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1216   00019C  EC93  F007         	call	_printf	;wreg free
  1217                           
  1218                           ;main.c: 114:                     printf("------------------------------\r\n");
  1219   0001A0  0E0E               	movlw	low STR_6
  1220   0001A2  0100               	movlb	0	; () banked
  1221   0001A4  6F81               	movwf	printf@fmt& (0+255),b
  1222   0001A6  0E7F               	movlw	high STR_6
  1223   0001A8  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1224   0001AA  EC93  F007         	call	_printf	;wreg free
  1225                           
  1226                           ;main.c: 115:                     break;
  1227   0001AE  EF7B  F000         	goto	l2507
  1228   0001B2                     l2513:
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;main.c: 117:                     for (i = 0; i < 40; i++) printf("\n");
  1232   0001B2  0E00               	movlw	0
  1233   0001B4  6F8A               	movwf	main@i& (0+255),b
  1234   0001B6                     l2519:
  1235                           
  1236                           ; BSR set to: 0
  1237   0001B6  0E2D               	movlw	low (STR_6+31)
  1238   0001B8  6F81               	movwf	printf@fmt& (0+255),b
  1239   0001BA  0E7F               	movlw	high (STR_6+31)
  1240   0001BC  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1241   0001BE  EC93  F007         	call	_printf	;wreg free
  1242   0001C2  0100               	movlb	0	; () banked
  1243   0001C4  2B8A               	incf	main@i& (0+255),f,b
  1244   0001C6                     
  1245                           ; BSR set to: 0
  1246   0001C6  0E27               	movlw	39
  1247   0001C8  658A               	cpfsgt	main@i& (0+255),b
  1248   0001CA  EFE9  F000         	goto	u1371
  1249   0001CE  EFEB  F000         	goto	u1370
  1250   0001D2                     u1371:
  1251   0001D2  EFDB  F000         	goto	l2519
  1252   0001D6                     u1370:
  1253   0001D6                     
  1254                           ; BSR set to: 0
  1255   0001D6  00FF               	reset		;# 
  1256                           
  1257                           ;main.c: 119:                     break;
  1258   0001D8  EF7B  F000         	goto	l2507
  1259   0001DC                     l2525:
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;main.c: 121:                     for (i = 0; i < 40; i++) printf("\n");
  1263   0001DC  0E00               	movlw	0
  1264   0001DE  6F8A               	movwf	main@i& (0+255),b
  1265   0001E0                     l2531:
  1266                           
  1267                           ; BSR set to: 0
  1268   0001E0  0E2D               	movlw	low (STR_6+31)
  1269   0001E2  6F81               	movwf	printf@fmt& (0+255),b
  1270   0001E4  0E7F               	movlw	high (STR_6+31)
  1271   0001E6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1272   0001E8  EC93  F007         	call	_printf	;wreg free
  1273   0001EC  0100               	movlb	0	; () banked
  1274   0001EE  2B8A               	incf	main@i& (0+255),f,b
  1275   0001F0                     
  1276                           ; BSR set to: 0
  1277   0001F0  0E27               	movlw	39
  1278   0001F2  658A               	cpfsgt	main@i& (0+255),b
  1279   0001F4  EFFE  F000         	goto	u1381
  1280   0001F8  EF00  F001         	goto	u1380
  1281   0001FC                     u1381:
  1282   0001FC  EFF0  F000         	goto	l2531
  1283   000200                     u1380:
  1284   000200  EF7B  F000         	goto	l2507
  1285   000204                     l2537:
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 124:                     if(rgbDuty[0] > 0x00) rgbDuty[0]--;
  1289   000204  51C1               	movf	_rgbDuty& (0+255),w,b
  1290   000206  B4D8               	btfsc	status,2,c
  1291   000208  EF08  F001         	goto	u1391
  1292   00020C  EF0A  F001         	goto	u1390
  1293   000210                     u1391:
  1294   000210  EF7B  F000         	goto	l2507
  1295   000214                     u1390:
  1296   000214                     
  1297                           ; BSR set to: 0
  1298   000214  07C1               	decf	_rgbDuty& (0+255),f,b
  1299   000216  EF7B  F000         	goto	l2507
  1300   00021A                     l2541:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;main.c: 127:                     if(rgbDuty[1] > 0x00) rgbDuty[1]--;
  1304   00021A  51C2               	movf	(_rgbDuty+1)& (0+255),w,b
  1305   00021C  B4D8               	btfsc	status,2,c
  1306   00021E  EF13  F001         	goto	u1401
  1307   000222  EF15  F001         	goto	u1400
  1308   000226                     u1401:
  1309   000226  EF7B  F000         	goto	l2507
  1310   00022A                     u1400:
  1311   00022A                     
  1312                           ; BSR set to: 0
  1313   00022A  07C2               	decf	(_rgbDuty+1)& (0+255),f,b
  1314   00022C  EF7B  F000         	goto	l2507
  1315   000230                     l2545:
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 130:                     if(rgbDuty[2] > 0x00) rgbDuty[2]--;
  1319   000230  51C3               	movf	(_rgbDuty+2)& (0+255),w,b
  1320   000232  B4D8               	btfsc	status,2,c
  1321   000234  EF1E  F001         	goto	u1411
  1322   000238  EF20  F001         	goto	u1410
  1323   00023C                     u1411:
  1324   00023C  EF7B  F000         	goto	l2507
  1325   000240                     u1410:
  1326   000240                     
  1327                           ; BSR set to: 0
  1328   000240  07C3               	decf	(_rgbDuty+2)& (0+255),f,b
  1329   000242  EF7B  F000         	goto	l2507
  1330   000246                     l2549:
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;main.c: 133:                     if(rgbDuty[0] < 0xFF) rgbDuty[0]++;
  1334   000246  29C1               	incf	_rgbDuty& (0+255),w,b
  1335   000248  B4D8               	btfsc	status,2,c
  1336   00024A  EF29  F001         	goto	u1421
  1337   00024E  EF2B  F001         	goto	u1420
  1338   000252                     u1421:
  1339   000252  EF7B  F000         	goto	l2507
  1340   000256                     u1420:
  1341   000256                     
  1342                           ; BSR set to: 0
  1343   000256  2BC1               	incf	_rgbDuty& (0+255),f,b
  1344   000258  EF7B  F000         	goto	l2507
  1345   00025C                     l2553:
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;main.c: 136:                     if(rgbDuty[1] < 0xFF) rgbDuty[1]++;
  1349   00025C  29C2               	incf	(_rgbDuty+1)& (0+255),w,b
  1350   00025E  B4D8               	btfsc	status,2,c
  1351   000260  EF34  F001         	goto	u1431
  1352   000264  EF36  F001         	goto	u1430
  1353   000268                     u1431:
  1354   000268  EF7B  F000         	goto	l2507
  1355   00026C                     u1430:
  1356   00026C                     
  1357                           ; BSR set to: 0
  1358   00026C  2BC2               	incf	(_rgbDuty+1)& (0+255),f,b
  1359   00026E  EF7B  F000         	goto	l2507
  1360   000272                     l2557:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;main.c: 139:                     if(rgbDuty[2] < 0xFF) rgbDuty[2]++;
  1364   000272  29C3               	incf	(_rgbDuty+2)& (0+255),w,b
  1365   000274  B4D8               	btfsc	status,2,c
  1366   000276  EF3F  F001         	goto	u1441
  1367   00027A  EF41  F001         	goto	u1440
  1368   00027E                     u1441:
  1369   00027E  EF7B  F000         	goto	l2507
  1370   000282                     u1440:
  1371   000282                     
  1372                           ; BSR set to: 0
  1373   000282  2BC3               	incf	(_rgbDuty+2)& (0+255),f,b
  1374   000284  EF7B  F000         	goto	l2507
  1375   000288                     l382:
  1376                           
  1377                           ; BSR set to: 0
  1378                           ;main.c: 143:                     rgbDuty[0] = rgbTourStart[0];
  1379   000288  C0BE  F0C1         	movff	_rgbTourStart,_rgbDuty
  1380                           
  1381                           ;main.c: 144:                     rgbDuty[1] = rgbTourStart[1];
  1382   00028C  C0BF  F0C2         	movff	_rgbTourStart+1,_rgbDuty+1
  1383                           
  1384                           ;main.c: 145:                     rgbDuty[2] = rgbTourStart[2];
  1385   000290  C0C0  F0C3         	movff	_rgbTourStart+2,_rgbDuty+2
  1386   000294                     
  1387                           ; BSR set to: 0
  1388                           ;main.c: 147:                     rgbDirection[0] = tourDirections[tourDirectionIndex][0
      +                          ];
  1389   000294  5194               	movf	_tourDirectionIndex& (0+255),w,b
  1390   000296  0D03               	mullw	3
  1391   000298  0EB5               	movlw	low _tourDirections
  1392   00029A  24F3               	addwf	243,w,c
  1393   00029C  6ED9               	movwf	fsr2l,c
  1394   00029E  0E00               	movlw	high _tourDirections
  1395   0002A0  20F4               	addwfc	prodh,w,c
  1396   0002A2  6EDA               	movwf	fsr2h,c
  1397   0002A4  50DF               	movf	indf2,w,c
  1398   0002A6  6F8B               	movwf	_rgbDirection& (0+255),b
  1399                           
  1400                           ;main.c: 148:                     rgbDirection[1] = tourDirections[tourDirectionIndex][1
      +                          ];
  1401   0002A8  5194               	movf	_tourDirectionIndex& (0+255),w,b
  1402   0002AA  0D03               	mullw	3
  1403   0002AC  0EB6               	movlw	low (_tourDirections+1)
  1404   0002AE  24F3               	addwf	243,w,c
  1405   0002B0  6ED9               	movwf	fsr2l,c
  1406   0002B2  0E00               	movlw	high (_tourDirections+1)
  1407   0002B4  20F4               	addwfc	prodh,w,c
  1408   0002B6  6EDA               	movwf	fsr2h,c
  1409   0002B8  50DF               	movf	indf2,w,c
  1410   0002BA  6F8C               	movwf	(_rgbDirection+1)& (0+255),b
  1411                           
  1412                           ;main.c: 149:                     rgbDirection[2] = tourDirections[tourDirectionIndex][2
      +                          ];
  1413   0002BC  5194               	movf	_tourDirectionIndex& (0+255),w,b
  1414   0002BE  0D03               	mullw	3
  1415   0002C0  0EB7               	movlw	low (_tourDirections+2)
  1416   0002C2  24F3               	addwf	243,w,c
  1417   0002C4  6ED9               	movwf	fsr2l,c
  1418   0002C6  0E00               	movlw	high (_tourDirections+2)
  1419   0002C8  20F4               	addwfc	prodh,w,c
  1420   0002CA  6EDA               	movwf	fsr2h,c
  1421   0002CC  50DF               	movf	indf2,w,c
  1422   0002CE  6F8D               	movwf	(_rgbDirection+2)& (0+255),b
  1423   0002D0                     
  1424                           ; BSR set to: 0
  1425                           ;main.c: 150:                     tourDirectionIndex = 0;
  1426   0002D0  0E00               	movlw	0
  1427   0002D2  6F94               	movwf	_tourDirectionIndex& (0+255),b
  1428   0002D4                     
  1429                           ; BSR set to: 0
  1430                           ;main.c: 152:                     edgeLocation = 0x00;
  1431   0002D4  0E00               	movlw	0
  1432   0002D6  6E4F               	movwf	_edgeLocation^0,c
  1433   0002D8                     
  1434                           ; BSR set to: 0
  1435                           ;main.c: 154:                     tour = 1;
  1436   0002D8  0E01               	movlw	1
  1437   0002DA  6E50               	movwf	_tour^0,c
  1438                           
  1439                           ;main.c: 155:                     break;
  1440   0002DC  EF7B  F000         	goto	l2507
  1441   0002E0                     l2569:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 157:                     tour = 0;
  1445   0002E0  0E00               	movlw	0
  1446   0002E2  6E50               	movwf	_tour^0,c
  1447                           
  1448                           ;main.c: 158:                     break;
  1449   0002E4  EF7B  F000         	goto	l2507
  1450   0002E8                     l2571:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;main.c: 160:                     period += 200;
  1454   0002E8  0EC8               	movlw	200
  1455   0002EA  27C4               	addwf	_period& (0+255),f,b
  1456   0002EC  0E00               	movlw	0
  1457   0002EE  23C5               	addwfc	(_period+1)& (0+255),f,b
  1458   0002F0                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 161:                     printf("%u\n\r", period);
  1461   0002F0  0EF5               	movlw	low STR_19
  1462   0002F2  6F81               	movwf	printf@fmt& (0+255),b
  1463   0002F4  0E7F               	movlw	high STR_19
  1464   0002F6  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1465   0002F8  C0C4  F083         	movff	_period,?_printf+2
  1466   0002FC  C0C5  F084         	movff	_period+1,?_printf+3
  1467   000300  EC93  F007         	call	_printf	;wreg free
  1468                           
  1469                           ;main.c: 162:                     break;
  1470   000304  EF7B  F000         	goto	l2507
  1471   000308                     l2575:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;main.c: 164:                     period -= 200;
  1475   000308  0EC8               	movlw	200
  1476   00030A  5FC4               	subwf	_period& (0+255),f,b
  1477   00030C  0E00               	movlw	0
  1478   00030E  5BC5               	subwfb	(_period+1)& (0+255),f,b
  1479   000310                     
  1480                           ; BSR set to: 0
  1481                           ;main.c: 165:                     printf("%u\n\r", period);
  1482   000310  0EF5               	movlw	low STR_19
  1483   000312  6F81               	movwf	printf@fmt& (0+255),b
  1484   000314  0E7F               	movlw	high STR_19
  1485   000316  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1486   000318  C0C4  F083         	movff	_period,?_printf+2
  1487   00031C  C0C5  F084         	movff	_period+1,?_printf+3
  1488   000320  EC93  F007         	call	_printf	;wreg free
  1489                           
  1490                           ;main.c: 166:                     break;
  1491   000324  EF7B  F000         	goto	l2507
  1492   000328                     l386:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;main.c: 168:                     rgbDuty[0] = 0xFF;
  1496   000328  69C1               	setf	_rgbDuty& (0+255),b
  1497                           
  1498                           ;main.c: 169:                     rgbDuty[1] = 0xFF;
  1499   00032A  69C2               	setf	(_rgbDuty+1)& (0+255),b
  1500                           
  1501                           ;main.c: 170:                     rgbDuty[2] = 0xFF;
  1502   00032C  69C3               	setf	(_rgbDuty+2)& (0+255),b
  1503   00032E  EF70  F001         	goto	l2569
  1504   000332                     l2581:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;main.c: 174:                     printf("Unknown key %c\r\n", cmd);
  1508   000332  0EA6               	movlw	low STR_21
  1509   000334  6F81               	movwf	printf@fmt& (0+255),b
  1510   000336  0E7F               	movlw	high STR_21
  1511   000338  6F82               	movwf	(printf@fmt+1)& (0+255),b
  1512   00033A  C089  F083         	movff	main@cmd,?_printf+2
  1513   00033E  6B84               	clrf	(?_printf+3)& (0+255),b
  1514   000340  EC93  F007         	call	_printf	;wreg free
  1515                           
  1516                           ;main.c: 175:                     break;
  1517   000344  EF7B  F000         	goto	l2507
  1518   000348                     l2585:
  1519                           
  1520                           ; BSR set to: 0
  1521   000348  5189               	movf	main@cmd& (0+255),w,b
  1522   00034A  6F87               	movwf	??_main& (0+255),b
  1523   00034C  6B88               	clrf	(??_main+1)& (0+255),b
  1524                           
  1525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1526                           ; Switch size 1, requested type "simple"
  1527                           ; Number of cases is 1, Range of values is 0 to 0
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte            4     3 (average)
  1531                           ;	Chosen strategy is simple_byte
  1532   00034E  5188               	movf	(??_main+1)& (0+255),w,b
  1533   000350  0A00               	xorlw	0	; case 0
  1534   000352  B4D8               	btfsc	status,2,c
  1535   000354  EFAE  F001         	goto	l2643
  1536   000358  EF99  F001         	goto	l2581
  1537   00035C                     l2643:
  1538                           
  1539                           ; BSR set to: 0
  1540                           ; Switch size 1, requested type "simple"
  1541                           ; Number of cases is 14, Range of values is 43 to 122
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           43    22 (average)
  1545                           ;	Chosen strategy is simple_byte
  1546   00035C  5187               	movf	??_main& (0+255),w,b
  1547   00035E  0A2B               	xorlw	43	; case 43
  1548   000360  B4D8               	btfsc	status,2,c
  1549   000362  EF74  F001         	goto	l2571
  1550   000366  0A06               	xorlw	6	; case 45
  1551   000368  B4D8               	btfsc	status,2,c
  1552   00036A  EF84  F001         	goto	l2575
  1553   00036E  0A12               	xorlw	18	; case 63
  1554   000370  B4D8               	btfsc	status,2,c
  1555   000372  EF8B  F000         	goto	l2511
  1556   000376  0A7D               	xorlw	125	; case 66
  1557   000378  B4D8               	btfsc	status,2,c
  1558   00037A  EF18  F001         	goto	l2545
  1559   00037E  0A01               	xorlw	1	; case 67
  1560   000380  B4D8               	btfsc	status,2,c
  1561   000382  EF44  F001         	goto	l382
  1562   000386  0A04               	xorlw	4	; case 71
  1563   000388  B4D8               	btfsc	status,2,c
  1564   00038A  EF0D  F001         	goto	l2541
  1565   00038E  0A15               	xorlw	21	; case 82
  1566   000390  B4D8               	btfsc	status,2,c
  1567   000392  EF02  F001         	goto	l2537
  1568   000396  0A08               	xorlw	8	; case 90
  1569   000398  B4D8               	btfsc	status,2,c
  1570   00039A  EFD9  F000         	goto	l2513
  1571   00039E  0A3B               	xorlw	59	; case 97
  1572   0003A0  B4D8               	btfsc	status,2,c
  1573   0003A2  EF94  F001         	goto	l386
  1574   0003A6  0A03               	xorlw	3	; case 98
  1575   0003A8  B4D8               	btfsc	status,2,c
  1576   0003AA  EF39  F001         	goto	l2557
  1577   0003AE  0A01               	xorlw	1	; case 99
  1578   0003B0  B4D8               	btfsc	status,2,c
  1579   0003B2  EF70  F001         	goto	l2569
  1580   0003B6  0A04               	xorlw	4	; case 103
  1581   0003B8  B4D8               	btfsc	status,2,c
  1582   0003BA  EF2E  F001         	goto	l2553
  1583   0003BE  0A15               	xorlw	21	; case 114
  1584   0003C0  B4D8               	btfsc	status,2,c
  1585   0003C2  EF23  F001         	goto	l2549
  1586   0003C6  0A08               	xorlw	8	; case 122
  1587   0003C8  B4D8               	btfsc	status,2,c
  1588   0003CA  EFEE  F000         	goto	l2525
  1589   0003CE  EF99  F001         	goto	l2581
  1590   0003D2  EF2F  F000         	goto	start
  1591   0003D6                     __end_of_main:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _printf *****************
  1595 ;; Defined at:
  1596 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  1599 ;;		 -> STR_21(17), STR_20(5), STR_19(5), STR_18(2), 
  1600 ;;		 -> STR_17(2), STR_16(33), STR_15(40), STR_14(26), 
  1601 ;;		 -> STR_13(26), STR_12(39), STR_11(44), STR_10(24), 
  1602 ;;		 -> STR_9(21), STR_8(7), STR_7(15), STR_6(33), 
  1603 ;;		 -> STR_5(5), STR_4(16), STR_3(22), STR_2(13), 
  1604 ;;		 -> STR_1(11), 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  ap              2   37[BANK0 ] PTR void [1]
  1607 ;;		 -> ?_printf(2), 
  1608 ;;  ret             2    0        int 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  2   33[BANK0 ] int 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1618 ;;      Params:         0       4       0       0       0       0       0
  1619 ;;      Locals:         0       2       0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0
  1621 ;;      Totals:         0       6       0       0       0       0       0
  1622 ;;Total ram usage:        6 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 12
  1625 ;; This function calls:
  1626 ;;		_vfprintf
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text1
  1633   000F26                     __ptext1:
  1634                           	callstack 0
  1635   000F26                     _printf:
  1636                           	callstack 18
  1637   000F26  0E83               	movlw	low (?_printf+2)
  1638   000F28  0100               	movlb	0	; () banked
  1639   000F2A  6F85               	movwf	printf@ap& (0+255),b
  1640   000F2C  0E00               	movlw	high (?_printf+2)
  1641   000F2E  6F86               	movwf	(printf@ap+1)& (0+255),b
  1642   000F30                     
  1643                           ; BSR set to: 0
  1644   000F30  0E00               	movlw	0
  1645   000F32  6F79               	movwf	vfprintf@fp& (0+255),b
  1646   000F34  0E00               	movlw	0
  1647   000F36  6F7A               	movwf	(vfprintf@fp+1)& (0+255),b
  1648   000F38  C081  F07B         	movff	printf@fmt,vfprintf@fmt
  1649   000F3C  C082  F07C         	movff	printf@fmt+1,vfprintf@fmt+1
  1650   000F40  0E85               	movlw	low printf@ap
  1651   000F42  6F7D               	movwf	vfprintf@ap& (0+255),b
  1652   000F44  0E00               	movlw	high printf@ap
  1653   000F46  6F7E               	movwf	(vfprintf@ap+1)& (0+255),b
  1654   000F48  EC29  F006         	call	_vfprintf	;wreg free
  1655   000F4C  0012               	return		;funcret
  1656   000F4E                     __end_of_printf:
  1657                           	callstack 0
  1658                           
  1659 ;; *************** function _vfprintf *****************
  1660 ;; Defined at:
  1661 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;  fp              2   25[BANK0 ] PTR struct _IO_FILE
  1664 ;;		 -> NULL(0), 
  1665 ;;  fmt             2   27[BANK0 ] PTR const unsigned char 
  1666 ;;		 -> STR_21(17), STR_20(5), STR_19(5), STR_18(2), 
  1667 ;;		 -> STR_17(2), STR_16(33), STR_15(40), STR_14(26), 
  1668 ;;		 -> STR_13(26), STR_12(39), STR_11(44), STR_10(24), 
  1669 ;;		 -> STR_9(21), STR_8(7), STR_7(15), STR_6(33), 
  1670 ;;		 -> STR_5(5), STR_4(16), STR_3(22), STR_2(13), 
  1671 ;;		 -> STR_1(11), 
  1672 ;;  ap              2   29[BANK0 ] PTR PTR void 
  1673 ;;		 -> printf@ap(2), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  cfmt            2   31[BANK0 ] PTR unsigned char 
  1676 ;;		 -> STR_21(17), STR_20(5), STR_19(5), STR_18(2), 
  1677 ;;		 -> STR_17(2), STR_16(33), STR_15(40), STR_14(26), 
  1678 ;;		 -> STR_13(26), STR_12(39), STR_11(44), STR_10(24), 
  1679 ;;		 -> STR_9(21), STR_8(7), STR_7(15), STR_6(33), 
  1680 ;;		 -> STR_5(5), STR_4(16), STR_3(22), STR_2(13), 
  1681 ;;		 -> STR_1(11), 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  2   25[BANK0 ] int 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1691 ;;      Params:         0       6       0       0       0       0       0
  1692 ;;      Locals:         0       2       0       0       0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0
  1694 ;;      Totals:         0       8       0       0       0       0       0
  1695 ;;Total ram usage:        8 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 11
  1698 ;; This function calls:
  1699 ;;		_vfpfcnvrt
  1700 ;; This function is called by:
  1701 ;;		_printf
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text2
  1706   000C52                     __ptext2:
  1707                           	callstack 0
  1708   000C52                     _vfprintf:
  1709                           	callstack 18
  1710   000C52                     
  1711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1712   000C52  C07B  F07F         	movff	vfprintf@fmt,vfprintf@cfmt
  1713   000C56  C07C  F080         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1716   000C5A  EF3D  F006         	goto	l2471
  1717   000C5E                     l2469:
  1718                           
  1719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1720   000C5E  C079  F03C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1721   000C62  C07A  F03D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1722   000C66  0E7F               	movlw	low vfprintf@cfmt
  1723   000C68  6E3E               	movwf	vfpfcnvrt@fmt^0,c
  1724   000C6A  0E00               	movlw	high vfprintf@cfmt
  1725   000C6C  6E3F               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1726   000C6E  C07D  F040         	movff	vfprintf@ap,vfpfcnvrt@ap
  1727   000C72  C07E  F041         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1728   000C76  ECEB  F001         	call	_vfpfcnvrt	;wreg free
  1729   000C7A                     l2471:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1732   000C7A  C07F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1733   000C7E  C080  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1734   000C82                     	if	0	;tblptru may be non-zero
  1735   000C82                     	endif
  1736   000C82                     	if	0	;tblptru may be non-zero
  1737   000C82                     	endif
  1738   000C82  0008               	tblrd		*
  1739   000C84  50F5               	movf	tablat,w,c
  1740   000C86  0900               	iorlw	0
  1741   000C88  A4D8               	btfss	status,2,c
  1742   000C8A  EF49  F006         	goto	u1341
  1743   000C8E  EF4B  F006         	goto	u1340
  1744   000C92                     u1341:
  1745   000C92  EF2F  F006         	goto	l2469
  1746   000C96                     u1340:
  1747   000C96                     
  1748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1749   000C96  0E00               	movlw	0
  1750   000C98  0100               	movlb	0	; () banked
  1751   000C9A  6F7A               	movwf	(?_vfprintf+1)& (0+255),b
  1752   000C9C  0E00               	movlw	0
  1753   000C9E  6F79               	movwf	?_vfprintf& (0+255),b
  1754   000CA0                     
  1755                           ; BSR set to: 0
  1756   000CA0  0012               	return		;funcret
  1757   000CA2                     __end_of_vfprintf:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _vfpfcnvrt *****************
  1761 ;; Defined at:
  1762 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  fp              2   59[COMRAM] PTR struct _IO_FILE
  1765 ;;		 -> NULL(0), 
  1766 ;;  fmt             2   61[COMRAM] PTR PTR unsigned char 
  1767 ;;		 -> vfprintf@cfmt(2), 
  1768 ;;  ap              2   63[COMRAM] PTR PTR void 
  1769 ;;		 -> printf@ap(2), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  convarg         8   14[BANK0 ] struct .
  1772 ;;  cp              2   23[BANK0 ] PTR unsigned char 
  1773 ;;		 -> STR_21(17), STR_20(5), STR_19(5), STR_18(2), 
  1774 ;;		 -> STR_17(2), STR_16(33), STR_15(40), STR_14(26), 
  1775 ;;		 -> STR_13(26), STR_12(39), STR_11(44), STR_10(24), 
  1776 ;;		 -> STR_9(21), STR_8(7), STR_7(15), STR_6(33), 
  1777 ;;		 -> STR_5(5), STR_4(16), STR_3(22), STR_2(13), 
  1778 ;;		 -> STR_1(11), 
  1779 ;;  i               2    0        int 
  1780 ;;  done            2    0        int 
  1781 ;;  c               1   22[BANK0 ] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1791 ;;      Params:         6       0       0       0       0       0       0
  1792 ;;      Locals:         0      11       0       0       0       0       0
  1793 ;;      Temps:          4       0       0       0       0       0       0
  1794 ;;      Totals:        10      11       0       0       0       0       0
  1795 ;;Total ram usage:       21 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 10
  1798 ;; This function calls:
  1799 ;;		_ctoa
  1800 ;;		_fputc
  1801 ;;		_utoa
  1802 ;; This function is called by:
  1803 ;;		_vfprintf
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text3
  1808   0003D6                     __ptext3:
  1809                           	callstack 0
  1810   0003D6                     _vfpfcnvrt:
  1811                           	callstack 18
  1812   0003D6                     
  1813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1814   0003D6  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1815   0003DA  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1816   0003DE  CFDE FFF6          	movff	postinc2,tblptrl
  1817   0003E2  CFDD FFF7          	movff	postdec2,tblptrh
  1818   0003E6                     	if	0	;tblptru may be non-zero
  1819   0003E6                     	endif
  1820   0003E6                     	if	0	;tblptru may be non-zero
  1821   0003E6                     	endif
  1822   0003E6  0008               	tblrd		*
  1823   0003E8  50F5               	movf	tablat,w,c
  1824   0003EA  0A25               	xorlw	37
  1825   0003EC  A4D8               	btfss	status,2,c
  1826   0003EE  EFFB  F001         	goto	u1311
  1827   0003F2  EFFD  F001         	goto	u1310
  1828   0003F6                     u1311:
  1829   0003F6  EFBE  F002         	goto	l2457
  1830   0003FA                     u1310:
  1831   0003FA                     
  1832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1833   0003FA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1834   0003FE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1835   000402  2ADE               	incf	postinc2,f,c
  1836   000404  0E00               	movlw	0
  1837   000406  22DD               	addwfc	postdec2,f,c
  1838   000408                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1840   000408  0E00               	movlw	0
  1841   00040A  6E47               	movwf	(_width+1)^0,c
  1842   00040C  0E00               	movlw	0
  1843   00040E  6E46               	movwf	_width^0,c
  1844   000410  C046  F04E         	movff	_width,_flags
  1845   000414                     
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1847   000414  6848               	setf	_prec^0,c
  1848   000416  6849               	setf	(_prec+1)^0,c
  1849   000418                     
  1850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  1851   000418  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1852   00041C  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1853   000420  CFDE FFF6          	movff	postinc2,tblptrl
  1854   000424  CFDD FFF7          	movff	postdec2,tblptrh
  1855   000428                     	if	0	;tblptru may be non-zero
  1856   000428                     	endif
  1857   000428                     	if	0	;tblptru may be non-zero
  1858   000428                     	endif
  1859   000428  0008               	tblrd		*
  1860   00042A  50F5               	movf	tablat,w,c
  1861   00042C  0A63               	xorlw	99
  1862   00042E  A4D8               	btfss	status,2,c
  1863   000430  EF1C  F002         	goto	u1321
  1864   000434  EF1E  F002         	goto	u1320
  1865   000438                     u1321:
  1866   000438  EF42  F002         	goto	l2439
  1867   00043C                     u1320:
  1868   00043C                     
  1869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  1870   00043C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871   000440  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872   000444  2ADE               	incf	postinc2,f,c
  1873   000446  0E00               	movlw	0
  1874   000448  22DD               	addwfc	postdec2,f,c
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1877   00044A  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1878   00044E  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1879   000452  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1880   000456  0E02               	movlw	2
  1881   000458  26DE               	addwf	postinc2,f,c
  1882   00045A  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1883   00045E  0E00               	movlw	0
  1884   000460  22DD               	addwfc	postdec2,f,c
  1885   000462  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1886   000466  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1887   00046A  50DF               	movf	indf2,w,c
  1888   00046C  0100               	movlb	0	; () banked
  1889   00046E  6F76               	movwf	vfpfcnvrt@c& (0+255),b
  1890   000470                     
  1891                           ; BSR set to: 0
  1892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  1893   000470  C03C  F018         	movff	vfpfcnvrt@fp,ctoa@fp
  1894   000474  C03D  F019         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  1895   000478  C076  F01A         	movff	vfpfcnvrt@c,ctoa@c
  1896   00047C  EC54  F005         	call	_ctoa	;wreg free
  1897   000480  EFD2  F002         	goto	l1131
  1898   000484                     l2439:
  1899                           
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  1901   000484  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1902   000488  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1903   00048C  CFDE F077          	movff	postinc2,vfpfcnvrt@cp
  1904   000490  CFDD F078          	movff	postdec2,vfpfcnvrt@cp+1
  1905   000494  C077  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1906   000498  C078  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1907   00049C                     	if	0	;tblptru may be non-zero
  1908   00049C                     	endif
  1909   00049C                     	if	0	;tblptru may be non-zero
  1910   00049C                     	endif
  1911   00049C  0008               	tblrd		*
  1912   00049E  50F5               	movf	tablat,w,c
  1913   0004A0  0A75               	xorlw	117
  1914   0004A2  A4D8               	btfss	status,2,c
  1915   0004A4  EF56  F002         	goto	u1331
  1916   0004A8  EF58  F002         	goto	u1330
  1917   0004AC                     u1331:
  1918   0004AC  EFB5  F002         	goto	l2453
  1919   0004B0                     u1330:
  1920   0004B0                     
  1921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1922   0004B0  C040  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1923   0004B4  C041  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1924   0004B8  CFDF F042          	movff	indf2,??_vfpfcnvrt
  1925   0004BC  0E02               	movlw	2
  1926   0004BE  26DE               	addwf	postinc2,f,c
  1927   0004C0  CFDF F043          	movff	indf2,??_vfpfcnvrt+1
  1928   0004C4  0E00               	movlw	0
  1929   0004C6  22DD               	addwfc	postdec2,f,c
  1930   0004C8  C042  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1931   0004CC  C043  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1932   0004D0  CFDE F044          	movff	postinc2,??_vfpfcnvrt+2
  1933   0004D4  CFDD F045          	movff	postdec2,??_vfpfcnvrt+3
  1934   0004D8  C044  F06E         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1935   0004DC  C045  F06F         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1936   0004E0  0100               	movlb	0	; () banked
  1937   0004E2  6B70               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  1938   0004E4  6B71               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  1939   0004E6  6B72               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  1940   0004E8  6B73               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  1941   0004EA  6B74               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  1942   0004EC  6B75               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1945   0004EE  0E01               	movlw	1
  1946   0004F0  2577               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1947   0004F2  6E42               	movwf	??_vfpfcnvrt^0,c
  1948   0004F4  0E00               	movlw	0
  1949   0004F6  2178               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1950   0004F8  6E43               	movwf	(??_vfpfcnvrt+1)^0,c
  1951   0004FA  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952   0004FE  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953   000502  C042  FFDE         	movff	??_vfpfcnvrt,postinc2
  1954   000506  C043  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1957   00050A  EF9F  F002         	goto	l2451
  1958   00050E                     l2445:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  1962   00050E  C03C  F02A         	movff	vfpfcnvrt@fp,utoa@fp
  1963   000512  C03D  F02B         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1964   000516  C06E  F02C         	movff	vfpfcnvrt@convarg,utoa@d
  1965   00051A  C06F  F02D         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1966   00051E  C070  F02E         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  1967   000522  C071  F02F         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  1968   000526  C072  F030         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  1969   00052A  C073  F031         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  1970   00052E  C074  F032         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  1971   000532  C075  F033         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  1972   000536  ECD3  F002         	call	_utoa	;wreg free
  1973   00053A  EFD2  F002         	goto	l1131
  1974   00053E                     l2451:
  1975                           
  1976                           ; BSR set to: 0
  1977   00053E  C077  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1978   000542  C078  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1979   000546                     	if	0	;tblptru may be non-zero
  1980   000546                     	endif
  1981   000546                     	if	0	;tblptru may be non-zero
  1982   000546                     	endif
  1983   000546  0008               	tblrd		*
  1984   000548  50F5               	movf	tablat,w,c
  1985   00054A  6E42               	movwf	??_vfpfcnvrt^0,c
  1986   00054C  6A43               	clrf	(??_vfpfcnvrt+1)^0,c
  1987                           
  1988                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1989                           ; Switch size 1, requested type "simple"
  1990                           ; Number of cases is 1, Range of values is 0 to 0
  1991                           ; switch strategies available:
  1992                           ; Name         Instructions Cycles
  1993                           ; simple_byte            4     3 (average)
  1994                           ;	Chosen strategy is simple_byte
  1995   00054E  5043               	movf	(??_vfpfcnvrt+1)^0,w,c
  1996   000550  0A00               	xorlw	0	; case 0
  1997   000552  B4D8               	btfsc	status,2,c
  1998   000554  EFAE  F002         	goto	l2645
  1999   000558  EFB5  F002         	goto	l2453
  2000   00055C                     l2645:
  2001                           
  2002                           ; BSR set to: 0
  2003                           ; Switch size 1, requested type "simple"
  2004                           ; Number of cases is 1, Range of values is 117 to 117
  2005                           ; switch strategies available:
  2006                           ; Name         Instructions Cycles
  2007                           ; simple_byte            4     3 (average)
  2008                           ;	Chosen strategy is simple_byte
  2009   00055C  5042               	movf	??_vfpfcnvrt^0,w,c
  2010   00055E  0A75               	xorlw	117	; case 117
  2011   000560  B4D8               	btfsc	status,2,c
  2012   000562  EF87  F002         	goto	l2445
  2013   000566  EFB5  F002         	goto	l2453
  2014   00056A                     l2453:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2017   00056A  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2018   00056E  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2019   000572  2ADE               	incf	postinc2,f,c
  2020   000574  0E00               	movlw	0
  2021   000576  22DD               	addwfc	postdec2,f,c
  2022   000578  EFD2  F002         	goto	l1131
  2023   00057C                     l2457:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2026   00057C  C03E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2027   000580  C03F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2028   000584  CFDE FFF6          	movff	postinc2,tblptrl
  2029   000588  CFDD FFF7          	movff	postdec2,tblptrh
  2030   00058C                     	if	0	;tblptru may be non-zero
  2031   00058C                     	endif
  2032   00058C                     	if	0	;tblptru may be non-zero
  2033   00058C                     	endif
  2034   00058C  0008               	tblrd		*
  2035   00058E  50F5               	movf	tablat,w,c
  2036   000590  6E0F               	movwf	fputc@c^0,c
  2037   000592  6A10               	clrf	(fputc@c+1)^0,c
  2038   000594  C03C  F011         	movff	vfpfcnvrt@fp,fputc@fp
  2039   000598  C03D  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2040   00059C  ECA1  F005         	call	_fputc	;wreg free
  2041   0005A0  EFB5  F002         	goto	l2453
  2042   0005A4                     l1131:
  2043   0005A4  0012               	return		;funcret
  2044   0005A6                     __end_of_vfpfcnvrt:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _utoa *****************
  2048 ;; Defined at:
  2049 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  2052 ;;		 -> NULL(0), 
  2053 ;;  d               8   43[COMRAM] unsigned long long 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  n               8    4[BANK0 ] unsigned long long 
  2056 ;;  i               2   12[BANK0 ] int 
  2057 ;;  p               2    2[BANK0 ] int 
  2058 ;;  w               2    0[BANK0 ] int 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:        10       0       0       0       0       0       0
  2069 ;;      Locals:         0      14       0       0       0       0       0
  2070 ;;      Temps:          8       0       0       0       0       0       0
  2071 ;;      Totals:        18      14       0       0       0       0       0
  2072 ;;Total ram usage:       32 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 9
  2075 ;; This function calls:
  2076 ;;		___lodiv
  2077 ;;		___lomod
  2078 ;;		_pad
  2079 ;; This function is called by:
  2080 ;;		_vfpfcnvrt
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text4
  2085   0005A6                     __ptext4:
  2086                           	callstack 0
  2087   0005A6                     _utoa:
  2088                           	callstack 18
  2089   0005A6                     
  2090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  2091   0005A6  BE49               	btfsc	(_prec+1)^0,7,c
  2092   0005A8  EFE0  F002         	goto	u1270
  2093   0005AC  5049               	movf	(_prec+1)^0,w,c
  2094   0005AE  E106               	bnz	u1271
  2095   0005B0  0448               	decf	_prec^0,w,c
  2096   0005B2  B0D8               	btfsc	status,0,c
  2097   0005B4  EFDE  F002         	goto	u1271
  2098   0005B8  EFE0  F002         	goto	u1270
  2099   0005BC                     u1271:
  2100   0005BC  EFE7  F002         	goto	l1118
  2101   0005C0                     u1270:
  2102   0005C0  0E00               	movlw	0
  2103   0005C2  0100               	movlb	0	; () banked
  2104   0005C4  6F63               	movwf	(utoa@p+1)& (0+255),b
  2105   0005C6  0E01               	movlw	1
  2106   0005C8  6F62               	movwf	utoa@p& (0+255),b
  2107   0005CA  EFEB  F002         	goto	l1120
  2108   0005CE                     l1118:
  2109   0005CE  C048  F062         	movff	_prec,utoa@p
  2110   0005D2  C049  F063         	movff	_prec+1,utoa@p+1
  2111   0005D6                     l1120:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  2114   0005D6  C046  F060         	movff	_width,utoa@w
  2115   0005DA  C047  F061         	movff	_width+1,utoa@w+1
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  2118   0005DE  C02C  F064         	movff	utoa@d,utoa@n
  2119   0005E2  C02D  F065         	movff	utoa@d+1,utoa@n+1
  2120   0005E6  C02E  F066         	movff	utoa@d+2,utoa@n+2
  2121   0005EA  C02F  F067         	movff	utoa@d+3,utoa@n+3
  2122   0005EE  C030  F068         	movff	utoa@d+4,utoa@n+4
  2123   0005F2  C031  F069         	movff	utoa@d+5,utoa@n+5
  2124   0005F6  C032  F06A         	movff	utoa@d+6,utoa@n+6
  2125   0005FA  C033  F06B         	movff	utoa@d+7,utoa@n+7
  2126   0005FE                     
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  2128   0005FE  0E00               	movlw	0
  2129   000600  0100               	movlb	0	; () banked
  2130   000602  6F6D               	movwf	(utoa@i+1)& (0+255),b
  2131   000604  0E1F               	movlw	31
  2132   000606  6F6C               	movwf	utoa@i& (0+255),b
  2133   000608                     
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  2136   000608  0E00               	movlw	0
  2137   00060A  6FB4               	movwf	(_dbuf+31)& (0+255),b
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2140   00060C  EF7F  F003         	goto	l2413
  2141   000610                     l2403:
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  2145   000610  076C               	decf	utoa@i& (0+255),f,b
  2146   000612  A0D8               	btfss	status,0,c
  2147   000614  076D               	decf	(utoa@i+1)& (0+255),f,b
  2148   000616                     
  2149                           ; BSR set to: 0
  2150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  2151   000616  0E95               	movlw	low _dbuf
  2152   000618  256C               	addwf	utoa@i& (0+255),w,b
  2153   00061A  6ED9               	movwf	fsr2l,c
  2154   00061C  0E00               	movlw	high _dbuf
  2155   00061E  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  2156   000620  6EDA               	movwf	fsr2h,c
  2157   000622  C064  F00D         	movff	utoa@n,___lomod@dividend
  2158   000626  C065  F00E         	movff	utoa@n+1,___lomod@dividend+1
  2159   00062A  C066  F00F         	movff	utoa@n+2,___lomod@dividend+2
  2160   00062E  C067  F010         	movff	utoa@n+3,___lomod@dividend+3
  2161   000632  C068  F011         	movff	utoa@n+4,___lomod@dividend+4
  2162   000636  C069  F012         	movff	utoa@n+5,___lomod@dividend+5
  2163   00063A  C06A  F013         	movff	utoa@n+6,___lomod@dividend+6
  2164   00063E  C06B  F014         	movff	utoa@n+7,___lomod@dividend+7
  2165   000642  0E0A               	movlw	10
  2166   000644  6E15               	movwf	___lomod@divisor^0,c
  2167   000646  0E00               	movlw	0
  2168   000648  6E16               	movwf	(___lomod@divisor+1)^0,c
  2169   00064A  0E00               	movlw	0
  2170   00064C  6E17               	movwf	(___lomod@divisor+2)^0,c
  2171   00064E  0E00               	movlw	0
  2172   000650  6E18               	movwf	(___lomod@divisor+3)^0,c
  2173   000652  0E00               	movlw	0
  2174   000654  6E19               	movwf	(___lomod@divisor+4)^0,c
  2175   000656  0E00               	movlw	0
  2176   000658  6E1A               	movwf	(___lomod@divisor+5)^0,c
  2177   00065A  0E00               	movlw	0
  2178   00065C  6E1B               	movwf	(___lomod@divisor+6)^0,c
  2179   00065E  0E00               	movlw	0
  2180   000660  6E1C               	movwf	(___lomod@divisor+7)^0,c
  2181   000662  EC2E  F004         	call	___lomod	;wreg free
  2182   000666  C00D  F034         	movff	?___lomod,??_utoa
  2183   00066A  C00E  F035         	movff	?___lomod+1,??_utoa+1
  2184   00066E  C00F  F036         	movff	?___lomod+2,??_utoa+2
  2185   000672  C010  F037         	movff	?___lomod+3,??_utoa+3
  2186   000676  C011  F038         	movff	?___lomod+4,??_utoa+4
  2187   00067A  C012  F039         	movff	?___lomod+5,??_utoa+5
  2188   00067E  C013  F03A         	movff	?___lomod+6,??_utoa+6
  2189   000682  C014  F03B         	movff	?___lomod+7,??_utoa+7
  2190   000686  5034               	movf	??_utoa^0,w,c
  2191   000688  0F30               	addlw	48
  2192   00068A  6EDF               	movwf	indf2,c
  2193   00068C                     
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  2195   00068C  0100               	movlb	0	; () banked
  2196   00068E  0762               	decf	utoa@p& (0+255),f,b
  2197   000690  A0D8               	btfss	status,0,c
  2198   000692  0763               	decf	(utoa@p+1)& (0+255),f,b
  2199   000694                     
  2200                           ; BSR set to: 0
  2201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  2202   000694  0760               	decf	utoa@w& (0+255),f,b
  2203   000696  A0D8               	btfss	status,0,c
  2204   000698  0761               	decf	(utoa@w+1)& (0+255),f,b
  2205   00069A                     
  2206                           ; BSR set to: 0
  2207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  2208   00069A  C064  F00D         	movff	utoa@n,___lodiv@dividend
  2209   00069E  C065  F00E         	movff	utoa@n+1,___lodiv@dividend+1
  2210   0006A2  C066  F00F         	movff	utoa@n+2,___lodiv@dividend+2
  2211   0006A6  C067  F010         	movff	utoa@n+3,___lodiv@dividend+3
  2212   0006AA  C068  F011         	movff	utoa@n+4,___lodiv@dividend+4
  2213   0006AE  C069  F012         	movff	utoa@n+5,___lodiv@dividend+5
  2214   0006B2  C06A  F013         	movff	utoa@n+6,___lodiv@dividend+6
  2215   0006B6  C06B  F014         	movff	utoa@n+7,___lodiv@dividend+7
  2216   0006BA  0E0A               	movlw	10
  2217   0006BC  6E15               	movwf	___lodiv@divisor^0,c
  2218   0006BE  0E00               	movlw	0
  2219   0006C0  6E16               	movwf	(___lodiv@divisor+1)^0,c
  2220   0006C2  0E00               	movlw	0
  2221   0006C4  6E17               	movwf	(___lodiv@divisor+2)^0,c
  2222   0006C6  0E00               	movlw	0
  2223   0006C8  6E18               	movwf	(___lodiv@divisor+3)^0,c
  2224   0006CA  0E00               	movlw	0
  2225   0006CC  6E19               	movwf	(___lodiv@divisor+4)^0,c
  2226   0006CE  0E00               	movlw	0
  2227   0006D0  6E1A               	movwf	(___lodiv@divisor+5)^0,c
  2228   0006D2  0E00               	movlw	0
  2229   0006D4  6E1B               	movwf	(___lodiv@divisor+6)^0,c
  2230   0006D6  0E00               	movlw	0
  2231   0006D8  6E1C               	movwf	(___lodiv@divisor+7)^0,c
  2232   0006DA  ECB6  F003         	call	___lodiv	;wreg free
  2233   0006DE  C00D  F064         	movff	?___lodiv,utoa@n
  2234   0006E2  C00E  F065         	movff	?___lodiv+1,utoa@n+1
  2235   0006E6  C00F  F066         	movff	?___lodiv+2,utoa@n+2
  2236   0006EA  C010  F067         	movff	?___lodiv+3,utoa@n+3
  2237   0006EE  C011  F068         	movff	?___lodiv+4,utoa@n+4
  2238   0006F2  C012  F069         	movff	?___lodiv+5,utoa@n+5
  2239   0006F6  C013  F06A         	movff	?___lodiv+6,utoa@n+6
  2240   0006FA  C014  F06B         	movff	?___lodiv+7,utoa@n+7
  2241   0006FE                     l2413:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  2244   0006FE  0100               	movlb	0	; () banked
  2245   000700  516C               	movf	utoa@i& (0+255),w,b
  2246   000702  116D               	iorwf	(utoa@i+1)& (0+255),w,b
  2247   000704  B4D8               	btfsc	status,2,c
  2248   000706  EF87  F003         	goto	u1281
  2249   00070A  EF89  F003         	goto	u1280
  2250   00070E                     u1281:
  2251   00070E  EFA5  F003         	goto	l2419
  2252   000712                     u1280:
  2253   000712                     
  2254                           ; BSR set to: 0
  2255   000712  5164               	movf	utoa@n& (0+255),w,b
  2256   000714  1165               	iorwf	(utoa@n+1)& (0+255),w,b
  2257   000716  1166               	iorwf	(utoa@n+2)& (0+255),w,b
  2258   000718  1167               	iorwf	(utoa@n+3)& (0+255),w,b
  2259   00071A  1168               	iorwf	(utoa@n+4)& (0+255),w,b
  2260   00071C  1169               	iorwf	(utoa@n+5)& (0+255),w,b
  2261   00071E  116A               	iorwf	(utoa@n+6)& (0+255),w,b
  2262   000720  116B               	iorwf	(utoa@n+7)& (0+255),w,b
  2263   000722  A4D8               	btfss	status,2,c
  2264   000724  EF96  F003         	goto	u1291
  2265   000728  EF98  F003         	goto	u1290
  2266   00072C                     u1291:
  2267   00072C  EF08  F003         	goto	l2403
  2268   000730                     u1290:
  2269   000730                     
  2270                           ; BSR set to: 0
  2271   000730  BF63               	btfsc	(utoa@p+1)& (0+255),7,b
  2272   000732  EFA5  F003         	goto	u1300
  2273   000736  5163               	movf	(utoa@p+1)& (0+255),w,b
  2274   000738  E106               	bnz	u1301
  2275   00073A  0562               	decf	utoa@p& (0+255),w,b
  2276   00073C  B0D8               	btfsc	status,0,c
  2277   00073E  EFA3  F003         	goto	u1301
  2278   000742  EFA5  F003         	goto	u1300
  2279   000746                     u1301:
  2280   000746  EF08  F003         	goto	l2403
  2281   00074A                     u1300:
  2282   00074A                     l2419:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2286   00074A  C02A  F01F         	movff	utoa@fp,pad@fp
  2287   00074E  C02B  F020         	movff	utoa@fp+1,pad@fp+1
  2288   000752  0E95               	movlw	low _dbuf
  2289   000754  256C               	addwf	utoa@i& (0+255),w,b
  2290   000756  6E21               	movwf	pad@buf^0,c
  2291   000758  0E00               	movlw	high _dbuf
  2292   00075A  216D               	addwfc	(utoa@i+1)& (0+255),w,b
  2293   00075C  6E22               	movwf	(pad@buf+1)^0,c
  2294   00075E  C060  F023         	movff	utoa@w,pad@p
  2295   000762  C061  F024         	movff	utoa@w+1,pad@p+1
  2296   000766  ECEC  F005         	call	_pad	;wreg free
  2297   00076A  0012               	return		;funcret
  2298   00076C                     __end_of_utoa:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _pad *****************
  2302 ;; Defined at:
  2303 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  2306 ;;		 -> NULL(0), 
  2307 ;;  buf             2   32[COMRAM] PTR unsigned char 
  2308 ;;		 -> dbuf(32), 
  2309 ;;  p               2   34[COMRAM] int 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  w               2   39[COMRAM] int 
  2312 ;;  i               2   37[COMRAM] int 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2322 ;;      Params:         6       0       0       0       0       0       0
  2323 ;;      Locals:         4       0       0       0       0       0       0
  2324 ;;      Temps:          1       0       0       0       0       0       0
  2325 ;;      Totals:        11       0       0       0       0       0       0
  2326 ;;Total ram usage:       11 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 8
  2329 ;; This function calls:
  2330 ;;		_fputc
  2331 ;;		_fputs
  2332 ;; This function is called by:
  2333 ;;		_utoa
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text5
  2338   000BD8                     __ptext5:
  2339                           	callstack 0
  2340   000BD8                     _pad:
  2341                           	callstack 18
  2342   000BD8                     
  2343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2344   000BD8  BE24               	btfsc	(pad@p+1)^0,7,c
  2345   000BDA  EFF1  F005         	goto	u1221
  2346   000BDE  EFF3  F005         	goto	u1220
  2347   000BE2                     u1221:
  2348   000BE2  EFF9  F005         	goto	l2367
  2349   000BE6                     u1220:
  2350   000BE6  C023  F028         	movff	pad@p,pad@w
  2351   000BEA  C024  F029         	movff	pad@p+1,pad@w+1
  2352   000BEE  EFFD  F005         	goto	l1096
  2353   000BF2                     l2367:
  2354   000BF2  0E00               	movlw	0
  2355   000BF4  6E29               	movwf	(pad@w+1)^0,c
  2356   000BF6  0E00               	movlw	0
  2357   000BF8  6E28               	movwf	pad@w^0,c
  2358   000BFA                     l1096:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2361   000BFA  0E00               	movlw	0
  2362   000BFC  6E27               	movwf	(pad@i+1)^0,c
  2363   000BFE  0E00               	movlw	0
  2364   000C00  6E26               	movwf	pad@i^0,c
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2367   000C02  EF0F  F006         	goto	l2373
  2368   000C06                     l2369:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2371   000C06  0E00               	movlw	0
  2372   000C08  6E10               	movwf	(fputc@c+1)^0,c
  2373   000C0A  0E20               	movlw	32
  2374   000C0C  6E0F               	movwf	fputc@c^0,c
  2375   000C0E  C01F  F011         	movff	pad@fp,fputc@fp
  2376   000C12  C020  F012         	movff	pad@fp+1,fputc@fp+1
  2377   000C16  ECA1  F005         	call	_fputc	;wreg free
  2378   000C1A                     
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2380   000C1A  4A26               	infsnz	pad@i^0,f,c
  2381   000C1C  2A27               	incf	(pad@i+1)^0,f,c
  2382   000C1E                     l2373:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2385   000C1E  5028               	movf	pad@w^0,w,c
  2386   000C20  5C26               	subwf	pad@i^0,w,c
  2387   000C22  5027               	movf	(pad@i+1)^0,w,c
  2388   000C24  0A80               	xorlw	128
  2389   000C26  6E25               	movwf	??_pad^0,c
  2390   000C28  5029               	movf	(pad@w+1)^0,w,c
  2391   000C2A  0A80               	xorlw	128
  2392   000C2C  5825               	subwfb	??_pad^0,w,c
  2393   000C2E  A0D8               	btfss	status,0,c
  2394   000C30  EF1C  F006         	goto	u1231
  2395   000C34  EF1E  F006         	goto	u1230
  2396   000C38                     u1231:
  2397   000C38  EF03  F006         	goto	l2369
  2398   000C3C                     u1230:
  2399   000C3C                     
  2400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2401   000C3C  C021  F018         	movff	pad@buf,fputs@s
  2402   000C40  C022  F019         	movff	pad@buf+1,fputs@s+1
  2403   000C44  C01F  F01A         	movff	pad@fp,fputs@fp
  2404   000C48  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  2405   000C4C  EC74  F006         	call	_fputs	;wreg free
  2406   000C50  0012               	return		;funcret
  2407   000C52                     __end_of_pad:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _fputs *****************
  2411 ;; Defined at:
  2412 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  s               2   23[COMRAM] PTR const unsigned char 
  2415 ;;		 -> dbuf(32), 
  2416 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  2417 ;;		 -> NULL(0), 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  i               2   28[COMRAM] int 
  2420 ;;  c               1   27[COMRAM] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  2   23[COMRAM] int 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2430 ;;      Params:         4       0       0       0       0       0       0
  2431 ;;      Locals:         3       0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0
  2433 ;;      Totals:         7       0       0       0       0       0       0
  2434 ;;Total ram usage:        7 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 7
  2437 ;; This function calls:
  2438 ;;		_fputc
  2439 ;; This function is called by:
  2440 ;;		_pad
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text6
  2445   000CE8                     __ptext6:
  2446                           	callstack 0
  2447   000CE8                     _fputs:
  2448                           	callstack 18
  2449   000CE8  0E00               	movlw	0
  2450   000CEA  6E1E               	movwf	(fputs@i+1)^0,c
  2451   000CEC  0E00               	movlw	0
  2452   000CEE  6E1D               	movwf	fputs@i^0,c
  2453   000CF0  EF85  F006         	goto	l2323
  2454   000CF4                     l2319:
  2455   000CF4  C01C  F00F         	movff	fputs@c,fputc@c
  2456   000CF8  6A10               	clrf	(fputc@c+1)^0,c
  2457   000CFA  C01A  F011         	movff	fputs@fp,fputc@fp
  2458   000CFE  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
  2459   000D02  ECA1  F005         	call	_fputc	;wreg free
  2460   000D06  4A1D               	infsnz	fputs@i^0,f,c
  2461   000D08  2A1E               	incf	(fputs@i+1)^0,f,c
  2462   000D0A                     l2323:
  2463   000D0A  501D               	movf	fputs@i^0,w,c
  2464   000D0C  2418               	addwf	fputs@s^0,w,c
  2465   000D0E  6ED9               	movwf	fsr2l,c
  2466   000D10  501E               	movf	(fputs@i+1)^0,w,c
  2467   000D12  2019               	addwfc	(fputs@s+1)^0,w,c
  2468   000D14  6EDA               	movwf	fsr2h,c
  2469   000D16  50DF               	movf	indf2,w,c
  2470   000D18  6E1C               	movwf	fputs@c^0,c
  2471   000D1A  501C               	movf	fputs@c^0,w,c
  2472   000D1C  A4D8               	btfss	status,2,c
  2473   000D1E  EF93  F006         	goto	u1141
  2474   000D22  EF95  F006         	goto	u1140
  2475   000D26                     u1141:
  2476   000D26  EF7A  F006         	goto	l2319
  2477   000D2A                     u1140:
  2478   000D2A  0012               	return		;funcret
  2479   000D2C                     __end_of_fputs:
  2480                           	callstack 0
  2481                           
  2482 ;; *************** function ___lomod *****************
  2483 ;; Defined at:
  2484 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  dividend        8   12[COMRAM] unsigned long long 
  2487 ;;  divisor         8   20[COMRAM] unsigned long long 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  counter         1   28[COMRAM] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  8   12[COMRAM] unsigned long long 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2499 ;;      Params:        16       0       0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0
  2502 ;;      Totals:        17       0       0       0       0       0       0
  2503 ;;Total ram usage:       17 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 4
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_utoa
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text7
  2514   00085C                     __ptext7:
  2515                           	callstack 0
  2516   00085C                     ___lomod:
  2517                           	callstack 22
  2518   00085C  5015               	movf	___lomod@divisor^0,w,c
  2519   00085E  1016               	iorwf	(___lomod@divisor+1)^0,w,c
  2520   000860  1017               	iorwf	(___lomod@divisor+2)^0,w,c
  2521   000862  1018               	iorwf	(___lomod@divisor+3)^0,w,c
  2522   000864  1019               	iorwf	(___lomod@divisor+4)^0,w,c
  2523   000866  101A               	iorwf	(___lomod@divisor+5)^0,w,c
  2524   000868  101B               	iorwf	(___lomod@divisor+6)^0,w,c
  2525   00086A  101C               	iorwf	(___lomod@divisor+7)^0,w,c
  2526   00086C  B4D8               	btfsc	status,2,c
  2527   00086E  EF3B  F004         	goto	u1191
  2528   000872  EF3D  F004         	goto	u1190
  2529   000876                     u1191:
  2530   000876  EF85  F004         	goto	l846
  2531   00087A                     u1190:
  2532   00087A  0E01               	movlw	1
  2533   00087C  6E1D               	movwf	___lomod@counter^0,c
  2534   00087E  EF4B  F004         	goto	l2353
  2535   000882                     l2351:
  2536   000882  90D8               	bcf	status,0,c
  2537   000884  3615               	rlcf	___lomod@divisor^0,f,c
  2538   000886  3616               	rlcf	(___lomod@divisor+1)^0,f,c
  2539   000888  3617               	rlcf	(___lomod@divisor+2)^0,f,c
  2540   00088A  3618               	rlcf	(___lomod@divisor+3)^0,f,c
  2541   00088C  3619               	rlcf	(___lomod@divisor+4)^0,f,c
  2542   00088E  361A               	rlcf	(___lomod@divisor+5)^0,f,c
  2543   000890  361B               	rlcf	(___lomod@divisor+6)^0,f,c
  2544   000892  361C               	rlcf	(___lomod@divisor+7)^0,f,c
  2545   000894  2A1D               	incf	___lomod@counter^0,f,c
  2546   000896                     l2353:
  2547   000896  AE1C               	btfss	(___lomod@divisor+7)^0,7,c
  2548   000898  EF50  F004         	goto	u1201
  2549   00089C  EF52  F004         	goto	u1200
  2550   0008A0                     u1201:
  2551   0008A0  EF41  F004         	goto	l2351
  2552   0008A4                     u1200:
  2553   0008A4                     l2355:
  2554   0008A4  5015               	movf	___lomod@divisor^0,w,c
  2555   0008A6  5C0D               	subwf	___lomod@dividend^0,w,c
  2556   0008A8  5016               	movf	(___lomod@divisor+1)^0,w,c
  2557   0008AA  580E               	subwfb	(___lomod@dividend+1)^0,w,c
  2558   0008AC  5017               	movf	(___lomod@divisor+2)^0,w,c
  2559   0008AE  580F               	subwfb	(___lomod@dividend+2)^0,w,c
  2560   0008B0  5018               	movf	(___lomod@divisor+3)^0,w,c
  2561   0008B2  5810               	subwfb	(___lomod@dividend+3)^0,w,c
  2562   0008B4  5019               	movf	(___lomod@divisor+4)^0,w,c
  2563   0008B6  5811               	subwfb	(___lomod@dividend+4)^0,w,c
  2564   0008B8  501A               	movf	(___lomod@divisor+5)^0,w,c
  2565   0008BA  5812               	subwfb	(___lomod@dividend+5)^0,w,c
  2566   0008BC  501B               	movf	(___lomod@divisor+6)^0,w,c
  2567   0008BE  5813               	subwfb	(___lomod@dividend+6)^0,w,c
  2568   0008C0  501C               	movf	(___lomod@divisor+7)^0,w,c
  2569   0008C2  5814               	subwfb	(___lomod@dividend+7)^0,w,c
  2570   0008C4  A0D8               	btfss	status,0,c
  2571   0008C6  EF67  F004         	goto	u1211
  2572   0008CA  EF69  F004         	goto	u1210
  2573   0008CE                     u1211:
  2574   0008CE  EF79  F004         	goto	l2359
  2575   0008D2                     u1210:
  2576   0008D2  5015               	movf	___lomod@divisor^0,w,c
  2577   0008D4  5E0D               	subwf	___lomod@dividend^0,f,c
  2578   0008D6  5016               	movf	(___lomod@divisor+1)^0,w,c
  2579   0008D8  5A0E               	subwfb	(___lomod@dividend+1)^0,f,c
  2580   0008DA  5017               	movf	(___lomod@divisor+2)^0,w,c
  2581   0008DC  5A0F               	subwfb	(___lomod@dividend+2)^0,f,c
  2582   0008DE  5018               	movf	(___lomod@divisor+3)^0,w,c
  2583   0008E0  5A10               	subwfb	(___lomod@dividend+3)^0,f,c
  2584   0008E2  5019               	movf	(___lomod@divisor+4)^0,w,c
  2585   0008E4  5A11               	subwfb	(___lomod@dividend+4)^0,f,c
  2586   0008E6  501A               	movf	(___lomod@divisor+5)^0,w,c
  2587   0008E8  5A12               	subwfb	(___lomod@dividend+5)^0,f,c
  2588   0008EA  501B               	movf	(___lomod@divisor+6)^0,w,c
  2589   0008EC  5A13               	subwfb	(___lomod@dividend+6)^0,f,c
  2590   0008EE  501C               	movf	(___lomod@divisor+7)^0,w,c
  2591   0008F0  5A14               	subwfb	(___lomod@dividend+7)^0,f,c
  2592   0008F2                     l2359:
  2593   0008F2  90D8               	bcf	status,0,c
  2594   0008F4  321C               	rrcf	(___lomod@divisor+7)^0,f,c
  2595   0008F6  321B               	rrcf	(___lomod@divisor+6)^0,f,c
  2596   0008F8  321A               	rrcf	(___lomod@divisor+5)^0,f,c
  2597   0008FA  3219               	rrcf	(___lomod@divisor+4)^0,f,c
  2598   0008FC  3218               	rrcf	(___lomod@divisor+3)^0,f,c
  2599   0008FE  3217               	rrcf	(___lomod@divisor+2)^0,f,c
  2600   000900  3216               	rrcf	(___lomod@divisor+1)^0,f,c
  2601   000902  3215               	rrcf	___lomod@divisor^0,f,c
  2602   000904  2E1D               	decfsz	___lomod@counter^0,f,c
  2603   000906  EF52  F004         	goto	l2355
  2604   00090A                     l846:
  2605   00090A  C00D  F00D         	movff	___lomod@dividend,?___lomod
  2606   00090E  C00E  F00E         	movff	___lomod@dividend+1,?___lomod+1
  2607   000912  C00F  F00F         	movff	___lomod@dividend+2,?___lomod+2
  2608   000916  C010  F010         	movff	___lomod@dividend+3,?___lomod+3
  2609   00091A  C011  F011         	movff	___lomod@dividend+4,?___lomod+4
  2610   00091E  C012  F012         	movff	___lomod@dividend+5,?___lomod+5
  2611   000922  C013  F013         	movff	___lomod@dividend+6,?___lomod+6
  2612   000926  C014  F014         	movff	___lomod@dividend+7,?___lomod+7
  2613   00092A  0012               	return		;funcret
  2614   00092C                     __end_of___lomod:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function ___lodiv *****************
  2618 ;; Defined at:
  2619 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  dividend        8   12[COMRAM] unsigned long long 
  2622 ;;  divisor         8   20[COMRAM] unsigned long long 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  quotient        8   28[COMRAM] unsigned long long 
  2625 ;;  counter         1   36[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  8   12[COMRAM] unsigned long long 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2635 ;;      Params:        16       0       0       0       0       0       0
  2636 ;;      Locals:         9       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0
  2638 ;;      Totals:        25       0       0       0       0       0       0
  2639 ;;Total ram usage:       25 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 4
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_utoa
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text8
  2650   00076C                     __ptext8:
  2651                           	callstack 0
  2652   00076C                     ___lodiv:
  2653                           	callstack 22
  2654   00076C  EE20  F01D         	lfsr	2,___lodiv@quotient
  2655   000770  0E07               	movlw	7
  2656   000772                     u1151:
  2657   000772  6ADE               	clrf	postinc2,c
  2658   000774  06E8               	decf	wreg,f,c
  2659   000776  E2FD               	bc	u1151
  2660   000778  5015               	movf	___lodiv@divisor^0,w,c
  2661   00077A  1016               	iorwf	(___lodiv@divisor+1)^0,w,c
  2662   00077C  1017               	iorwf	(___lodiv@divisor+2)^0,w,c
  2663   00077E  1018               	iorwf	(___lodiv@divisor+3)^0,w,c
  2664   000780  1019               	iorwf	(___lodiv@divisor+4)^0,w,c
  2665   000782  101A               	iorwf	(___lodiv@divisor+5)^0,w,c
  2666   000784  101B               	iorwf	(___lodiv@divisor+6)^0,w,c
  2667   000786  101C               	iorwf	(___lodiv@divisor+7)^0,w,c
  2668   000788  B4D8               	btfsc	status,2,c
  2669   00078A  EFC9  F003         	goto	u1161
  2670   00078E  EFCB  F003         	goto	u1160
  2671   000792                     u1161:
  2672   000792  EF1D  F004         	goto	l836
  2673   000796                     u1160:
  2674   000796  0E01               	movlw	1
  2675   000798  6E25               	movwf	___lodiv@counter^0,c
  2676   00079A  EFD9  F003         	goto	l2333
  2677   00079E                     l2331:
  2678   00079E  90D8               	bcf	status,0,c
  2679   0007A0  3615               	rlcf	___lodiv@divisor^0,f,c
  2680   0007A2  3616               	rlcf	(___lodiv@divisor+1)^0,f,c
  2681   0007A4  3617               	rlcf	(___lodiv@divisor+2)^0,f,c
  2682   0007A6  3618               	rlcf	(___lodiv@divisor+3)^0,f,c
  2683   0007A8  3619               	rlcf	(___lodiv@divisor+4)^0,f,c
  2684   0007AA  361A               	rlcf	(___lodiv@divisor+5)^0,f,c
  2685   0007AC  361B               	rlcf	(___lodiv@divisor+6)^0,f,c
  2686   0007AE  361C               	rlcf	(___lodiv@divisor+7)^0,f,c
  2687   0007B0  2A25               	incf	___lodiv@counter^0,f,c
  2688   0007B2                     l2333:
  2689   0007B2  AE1C               	btfss	(___lodiv@divisor+7)^0,7,c
  2690   0007B4  EFDE  F003         	goto	u1171
  2691   0007B8  EFE0  F003         	goto	u1170
  2692   0007BC                     u1171:
  2693   0007BC  EFCF  F003         	goto	l2331
  2694   0007C0                     u1170:
  2695   0007C0                     l2335:
  2696   0007C0  90D8               	bcf	status,0,c
  2697   0007C2  361D               	rlcf	___lodiv@quotient^0,f,c
  2698   0007C4  361E               	rlcf	(___lodiv@quotient+1)^0,f,c
  2699   0007C6  361F               	rlcf	(___lodiv@quotient+2)^0,f,c
  2700   0007C8  3620               	rlcf	(___lodiv@quotient+3)^0,f,c
  2701   0007CA  3621               	rlcf	(___lodiv@quotient+4)^0,f,c
  2702   0007CC  3622               	rlcf	(___lodiv@quotient+5)^0,f,c
  2703   0007CE  3623               	rlcf	(___lodiv@quotient+6)^0,f,c
  2704   0007D0  3624               	rlcf	(___lodiv@quotient+7)^0,f,c
  2705   0007D2  5015               	movf	___lodiv@divisor^0,w,c
  2706   0007D4  5C0D               	subwf	___lodiv@dividend^0,w,c
  2707   0007D6  5016               	movf	(___lodiv@divisor+1)^0,w,c
  2708   0007D8  580E               	subwfb	(___lodiv@dividend+1)^0,w,c
  2709   0007DA  5017               	movf	(___lodiv@divisor+2)^0,w,c
  2710   0007DC  580F               	subwfb	(___lodiv@dividend+2)^0,w,c
  2711   0007DE  5018               	movf	(___lodiv@divisor+3)^0,w,c
  2712   0007E0  5810               	subwfb	(___lodiv@dividend+3)^0,w,c
  2713   0007E2  5019               	movf	(___lodiv@divisor+4)^0,w,c
  2714   0007E4  5811               	subwfb	(___lodiv@dividend+4)^0,w,c
  2715   0007E6  501A               	movf	(___lodiv@divisor+5)^0,w,c
  2716   0007E8  5812               	subwfb	(___lodiv@dividend+5)^0,w,c
  2717   0007EA  501B               	movf	(___lodiv@divisor+6)^0,w,c
  2718   0007EC  5813               	subwfb	(___lodiv@dividend+6)^0,w,c
  2719   0007EE  501C               	movf	(___lodiv@divisor+7)^0,w,c
  2720   0007F0  5814               	subwfb	(___lodiv@dividend+7)^0,w,c
  2721   0007F2  A0D8               	btfss	status,0,c
  2722   0007F4  EFFE  F003         	goto	u1181
  2723   0007F8  EF00  F004         	goto	u1180
  2724   0007FC                     u1181:
  2725   0007FC  EF11  F004         	goto	l2343
  2726   000800                     u1180:
  2727   000800  5015               	movf	___lodiv@divisor^0,w,c
  2728   000802  5E0D               	subwf	___lodiv@dividend^0,f,c
  2729   000804  5016               	movf	(___lodiv@divisor+1)^0,w,c
  2730   000806  5A0E               	subwfb	(___lodiv@dividend+1)^0,f,c
  2731   000808  5017               	movf	(___lodiv@divisor+2)^0,w,c
  2732   00080A  5A0F               	subwfb	(___lodiv@dividend+2)^0,f,c
  2733   00080C  5018               	movf	(___lodiv@divisor+3)^0,w,c
  2734   00080E  5A10               	subwfb	(___lodiv@dividend+3)^0,f,c
  2735   000810  5019               	movf	(___lodiv@divisor+4)^0,w,c
  2736   000812  5A11               	subwfb	(___lodiv@dividend+4)^0,f,c
  2737   000814  501A               	movf	(___lodiv@divisor+5)^0,w,c
  2738   000816  5A12               	subwfb	(___lodiv@dividend+5)^0,f,c
  2739   000818  501B               	movf	(___lodiv@divisor+6)^0,w,c
  2740   00081A  5A13               	subwfb	(___lodiv@dividend+6)^0,f,c
  2741   00081C  501C               	movf	(___lodiv@divisor+7)^0,w,c
  2742   00081E  5A14               	subwfb	(___lodiv@dividend+7)^0,f,c
  2743   000820  801D               	bsf	___lodiv@quotient^0,0,c
  2744   000822                     l2343:
  2745   000822  90D8               	bcf	status,0,c
  2746   000824  321C               	rrcf	(___lodiv@divisor+7)^0,f,c
  2747   000826  321B               	rrcf	(___lodiv@divisor+6)^0,f,c
  2748   000828  321A               	rrcf	(___lodiv@divisor+5)^0,f,c
  2749   00082A  3219               	rrcf	(___lodiv@divisor+4)^0,f,c
  2750   00082C  3218               	rrcf	(___lodiv@divisor+3)^0,f,c
  2751   00082E  3217               	rrcf	(___lodiv@divisor+2)^0,f,c
  2752   000830  3216               	rrcf	(___lodiv@divisor+1)^0,f,c
  2753   000832  3215               	rrcf	___lodiv@divisor^0,f,c
  2754   000834  2E25               	decfsz	___lodiv@counter^0,f,c
  2755   000836  EFE0  F003         	goto	l2335
  2756   00083A                     l836:
  2757   00083A  C01D  F00D         	movff	___lodiv@quotient,?___lodiv
  2758   00083E  C01E  F00E         	movff	___lodiv@quotient+1,?___lodiv+1
  2759   000842  C01F  F00F         	movff	___lodiv@quotient+2,?___lodiv+2
  2760   000846  C020  F010         	movff	___lodiv@quotient+3,?___lodiv+3
  2761   00084A  C021  F011         	movff	___lodiv@quotient+4,?___lodiv+4
  2762   00084E  C022  F012         	movff	___lodiv@quotient+5,?___lodiv+5
  2763   000852  C023  F013         	movff	___lodiv@quotient+6,?___lodiv+6
  2764   000856  C024  F014         	movff	___lodiv@quotient+7,?___lodiv+7
  2765   00085A  0012               	return		;funcret
  2766   00085C                     __end_of___lodiv:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _ctoa *****************
  2770 ;; Defined at:
  2771 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2774 ;;		 -> NULL(0), 
  2775 ;;  c               1   25[COMRAM] unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  w               2   29[COMRAM] int 
  2778 ;;  l               2   27[COMRAM] int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         3       0       0       0       0       0       0
  2789 ;;      Locals:         4       0       0       0       0       0       0
  2790 ;;      Temps:          1       0       0       0       0       0       0
  2791 ;;      Totals:         8       0       0       0       0       0       0
  2792 ;;Total ram usage:        8 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 7
  2795 ;; This function calls:
  2796 ;;		_fputc
  2797 ;; This function is called by:
  2798 ;;		_vfpfcnvrt
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text9
  2803   000AA8                     __ptext9:
  2804                           	callstack 0
  2805   000AA8                     _ctoa:
  2806                           	callstack 20
  2807   000AA8                     
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  2809   000AA8  5046               	movf	_width^0,w,c
  2810   000AAA  1047               	iorwf	(_width+1)^0,w,c
  2811   000AAC  A4D8               	btfss	status,2,c
  2812   000AAE  EF5B  F005         	goto	u1241
  2813   000AB2  EF5D  F005         	goto	u1240
  2814   000AB6                     u1241:
  2815   000AB6  EF63  F005         	goto	l2381
  2816   000ABA                     u1240:
  2817   000ABA  C046  F01E         	movff	_width,ctoa@w
  2818   000ABE  C047  F01F         	movff	_width+1,ctoa@w+1
  2819   000AC2  EF69  F005         	goto	l1106
  2820   000AC6                     l2381:
  2821   000AC6  0EFF               	movlw	255
  2822   000AC8  2446               	addwf	_width^0,w,c
  2823   000ACA  6E1E               	movwf	ctoa@w^0,c
  2824   000ACC  0EFF               	movlw	255
  2825   000ACE  2047               	addwfc	(_width+1)^0,w,c
  2826   000AD0  6E1F               	movwf	(ctoa@w+1)^0,c
  2827   000AD2                     l1106:
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  2830   000AD2  BE1F               	btfsc	(ctoa@w+1)^0,7,c
  2831   000AD4  EF6E  F005         	goto	u1251
  2832   000AD8  EF70  F005         	goto	u1250
  2833   000ADC                     u1251:
  2834   000ADC  EF72  F005         	goto	l2385
  2835   000AE0                     u1250:
  2836   000AE0  EF76  F005         	goto	l1110
  2837   000AE4                     l2385:
  2838   000AE4  0E00               	movlw	0
  2839   000AE6  6E1F               	movwf	(ctoa@w+1)^0,c
  2840   000AE8  0E00               	movlw	0
  2841   000AEA  6E1E               	movwf	ctoa@w^0,c
  2842   000AEC                     l1110:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  2845   000AEC  0E00               	movlw	0
  2846   000AEE  6E1D               	movwf	(ctoa@l+1)^0,c
  2847   000AF0  0E00               	movlw	0
  2848   000AF2  6E1C               	movwf	ctoa@l^0,c
  2849                           
  2850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  2851   000AF4  EF88  F005         	goto	l2391
  2852   000AF8                     l2387:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  2855   000AF8  0E00               	movlw	0
  2856   000AFA  6E10               	movwf	(fputc@c+1)^0,c
  2857   000AFC  0E20               	movlw	32
  2858   000AFE  6E0F               	movwf	fputc@c^0,c
  2859   000B00  C018  F011         	movff	ctoa@fp,fputc@fp
  2860   000B04  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  2861   000B08  ECA1  F005         	call	_fputc	;wreg free
  2862   000B0C                     
  2863                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  2864   000B0C  4A1C               	infsnz	ctoa@l^0,f,c
  2865   000B0E  2A1D               	incf	(ctoa@l+1)^0,f,c
  2866   000B10                     l2391:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  2869   000B10  501E               	movf	ctoa@w^0,w,c
  2870   000B12  5C1C               	subwf	ctoa@l^0,w,c
  2871   000B14  501D               	movf	(ctoa@l+1)^0,w,c
  2872   000B16  0A80               	xorlw	128
  2873   000B18  6E1B               	movwf	??_ctoa^0,c
  2874   000B1A  501F               	movf	(ctoa@w+1)^0,w,c
  2875   000B1C  0A80               	xorlw	128
  2876   000B1E  581B               	subwfb	??_ctoa^0,w,c
  2877   000B20  A0D8               	btfss	status,0,c
  2878   000B22  EF95  F005         	goto	u1261
  2879   000B26  EF97  F005         	goto	u1260
  2880   000B2A                     u1261:
  2881   000B2A  EF7C  F005         	goto	l2387
  2882   000B2E                     u1260:
  2883   000B2E                     
  2884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  2885   000B2E  C01A  F00F         	movff	ctoa@c,fputc@c
  2886   000B32  6A10               	clrf	(fputc@c+1)^0,c
  2887   000B34  C018  F011         	movff	ctoa@fp,fputc@fp
  2888   000B38  C019  F012         	movff	ctoa@fp+1,fputc@fp+1
  2889   000B3C  ECA1  F005         	call	_fputc	;wreg free
  2890   000B40  0012               	return		;funcret
  2891   000B42                     __end_of_ctoa:
  2892                           	callstack 0
  2893                           
  2894 ;; *************** function _fputc *****************
  2895 ;; Defined at:
  2896 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  c               2   14[COMRAM] int 
  2899 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2900 ;;		 -> NULL(0), 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  2   14[COMRAM] int 
  2905 ;; Registers used:
  2906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2912 ;;      Params:         4       0       0       0       0       0       0
  2913 ;;      Locals:         0       0       0       0       0       0       0
  2914 ;;      Temps:          5       0       0       0       0       0       0
  2915 ;;      Totals:         9       0       0       0       0       0       0
  2916 ;;Total ram usage:        9 bytes
  2917 ;; Hardware stack levels used: 1
  2918 ;; Hardware stack levels required when called: 6
  2919 ;; This function calls:
  2920 ;;		_putch
  2921 ;; This function is called by:
  2922 ;;		_pad
  2923 ;;		_ctoa
  2924 ;;		_vfpfcnvrt
  2925 ;;		_fputs
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text10
  2930   000B42                     __ptext10:
  2931                           	callstack 0
  2932   000B42                     _fputc:
  2933                           	callstack 18
  2934   000B42  5011               	movf	fputc@fp^0,w,c
  2935   000B44  1012               	iorwf	(fputc@fp+1)^0,w,c
  2936   000B46  B4D8               	btfsc	status,2,c
  2937   000B48  EFA8  F005         	goto	u1101
  2938   000B4C  EFAA  F005         	goto	u1100
  2939   000B50                     u1101:
  2940   000B50  EFB3  F005         	goto	l2307
  2941   000B54                     u1100:
  2942   000B54  5011               	movf	fputc@fp^0,w,c
  2943   000B56  1012               	iorwf	(fputc@fp+1)^0,w,c
  2944   000B58  A4D8               	btfss	status,2,c
  2945   000B5A  EFB1  F005         	goto	u1111
  2946   000B5E  EFB3  F005         	goto	u1110
  2947   000B62                     u1111:
  2948   000B62  EFB8  F005         	goto	l2309
  2949   000B66                     u1110:
  2950   000B66                     l2307:
  2951   000B66  500F               	movf	fputc@c^0,w,c
  2952   000B68  EC32  F008         	call	_putch
  2953   000B6C  EFEB  F005         	goto	l1155
  2954   000B70                     l2309:
  2955   000B70  EE20 F009          	lfsr	2,9
  2956   000B74  5011               	movf	fputc@fp^0,w,c
  2957   000B76  26D9               	addwf	fsr2l,f,c
  2958   000B78  5012               	movf	(fputc@fp+1)^0,w,c
  2959   000B7A  22DA               	addwfc	fsr2h,f,c
  2960   000B7C  50DE               	movf	postinc2,w,c
  2961   000B7E  10DE               	iorwf	postinc2,w,c
  2962   000B80  B4D8               	btfsc	status,2,c
  2963   000B82  EFC5  F005         	goto	u1121
  2964   000B86  EFC7  F005         	goto	u1120
  2965   000B8A                     u1121:
  2966   000B8A  EFE2  F005         	goto	l2313
  2967   000B8E                     u1120:
  2968   000B8E  EE20 F009          	lfsr	2,9
  2969   000B92  5011               	movf	fputc@fp^0,w,c
  2970   000B94  26D9               	addwf	fsr2l,f,c
  2971   000B96  5012               	movf	(fputc@fp+1)^0,w,c
  2972   000B98  22DA               	addwfc	fsr2h,f,c
  2973   000B9A  EE10 F003          	lfsr	1,3
  2974   000B9E  5011               	movf	fputc@fp^0,w,c
  2975   000BA0  26E1               	addwf	fsr1l,f,c
  2976   000BA2  5012               	movf	(fputc@fp+1)^0,w,c
  2977   000BA4  22E2               	addwfc	fsr1h,f,c
  2978   000BA6  50DE               	movf	postinc2,w,c
  2979   000BA8  5CE6               	subwf	postinc1,w,c
  2980   000BAA  50E6               	movf	postinc1,w,c
  2981   000BAC  0A80               	xorlw	128
  2982   000BAE  6E17               	movwf	(??_fputc+4)^0,c
  2983   000BB0  50DE               	movf	postinc2,w,c
  2984   000BB2  0A80               	xorlw	128
  2985   000BB4  5817               	subwfb	(??_fputc+4)^0,w,c
  2986   000BB6  B0D8               	btfsc	status,0,c
  2987   000BB8  EFE0  F005         	goto	u1131
  2988   000BBC  EFE2  F005         	goto	u1130
  2989   000BC0                     u1131:
  2990   000BC0  EFEB  F005         	goto	l1155
  2991   000BC4                     u1130:
  2992   000BC4                     l2313:
  2993   000BC4  EE20 F003          	lfsr	2,3
  2994   000BC8  5011               	movf	fputc@fp^0,w,c
  2995   000BCA  26D9               	addwf	fsr2l,f,c
  2996   000BCC  5012               	movf	(fputc@fp+1)^0,w,c
  2997   000BCE  22DA               	addwfc	fsr2h,f,c
  2998   000BD0  2ADE               	incf	postinc2,f,c
  2999   000BD2  0E00               	movlw	0
  3000   000BD4  22DD               	addwfc	postdec2,f,c
  3001   000BD6                     l1155:
  3002   000BD6  0012               	return		;funcret
  3003   000BD8                     __end_of_fputc:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _putch *****************
  3007 ;; Defined at:
  3008 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  txData          1    wreg     unsigned char 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  txData          1   13[COMRAM] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3022 ;;      Params:         0       0       0       0       0       0       0
  3023 ;;      Locals:         1       0       0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0
  3025 ;;      Totals:         1       0       0       0       0       0       0
  3026 ;;Total ram usage:        1 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 5
  3029 ;; This function calls:
  3030 ;;		_EUSART1_Write
  3031 ;; This function is called by:
  3032 ;;		_fputc
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text11
  3037   001064                     __ptext11:
  3038                           	callstack 0
  3039   001064                     _putch:
  3040                           	callstack 18
  3041                           
  3042                           ;incstack = 0
  3043                           ;putch@txData stored from wreg
  3044   001064  6E0E               	movwf	putch@txData^0,c
  3045   001066                     
  3046                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  3047   001066  500E               	movf	putch@txData^0,w,c
  3048   001068  EC0C  F008         	call	_EUSART1_Write
  3049   00106C  0012               	return		;funcret
  3050   00106E                     __end_of_putch:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _EUSART1_Write *****************
  3054 ;; Defined at:
  3055 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  txData          1    wreg     unsigned char 
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;  txData          1   12[COMRAM] unsigned char 
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		wreg
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3069 ;;      Params:         0       0       0       0       0       0       0
  3070 ;;      Locals:         1       0       0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0
  3072 ;;      Totals:         1       0       0       0       0       0       0
  3073 ;;Total ram usage:        1 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; Hardware stack levels required when called: 4
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_putch
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text12
  3084   001018                     __ptext12:
  3085                           	callstack 0
  3086   001018                     _EUSART1_Write:
  3087                           	callstack 18
  3088                           
  3089                           ;incstack = 0
  3090                           ;EUSART1_Write@txData stored from wreg
  3091   001018  6E0D               	movwf	EUSART1_Write@txData^0,c
  3092   00101A                     l230:
  3093                           
  3094                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  3095   00101A  A89E               	btfss	158,4,c	;volatile
  3096   00101C  EF12  F008         	goto	u1091
  3097   001020  EF14  F008         	goto	u1090
  3098   001024                     u1091:
  3099   001024  EF0D  F008         	goto	l230
  3100   001028                     u1090:
  3101   001028                     
  3102                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  3103   001028  C00D  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  3104   00102C  0012               	return		;funcret
  3105   00102E                     __end_of_EUSART1_Write:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function _TMR0_WriteTimer *****************
  3109 ;; Defined at:
  3110 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  timerVal        2   12[COMRAM] unsigned short 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3124 ;;      Params:         2       0       0       0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0
  3127 ;;      Totals:         2       0       0       0       0       0       0
  3128 ;;Total ram usage:        2 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 4
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_main
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text13
  3139   00106E                     __ptext13:
  3140                           	callstack 0
  3141   00106E                     _TMR0_WriteTimer:
  3142                           	callstack 26
  3143   00106E                     
  3144                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  3145   00106E  500E               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  3146   001070  6ED7               	movwf	215,c	;volatile
  3147   001072                     
  3148                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  3149   001072  C00D  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  3150   001076  0012               	return		;funcret
  3151   001078                     __end_of_TMR0_WriteTimer:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _SYSTEM_Initialize *****************
  3155 ;; Defined at:
  3156 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:         0       0       0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0
  3173 ;;      Totals:         0       0       0       0       0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; Hardware stack levels required when called: 6
  3177 ;; This function calls:
  3178 ;;		_EPWM1_Initialize
  3179 ;;		_EPWM2_Initialize
  3180 ;;		_EPWM3_Initialize
  3181 ;;		_EUSART1_Initialize
  3182 ;;		_INTERRUPT_Initialize
  3183 ;;		_OSCILLATOR_Initialize
  3184 ;;		_PIN_MANAGER_Initialize
  3185 ;;		_TMR0_Initialize
  3186 ;;		_TMR2_Initialize
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text14
  3193   000F76                     __ptext14:
  3194                           	callstack 0
  3195   000F76                     _SYSTEM_Initialize:
  3196                           	callstack 24
  3197   000F76                     
  3198                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  3199   000F76  EC55  F008         	call	_INTERRUPT_Initialize	;wreg free
  3200   000F7A                     
  3201                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3202   000F7A  EC7D  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  3203   000F7E                     
  3204                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3205   000F7E  ECFE  F007         	call	_OSCILLATOR_Initialize	;wreg free
  3206   000F82                     
  3207                           ;mcc_generated_files/mcc.c: 56:     EPWM2_Initialize();
  3208   000F82  ECDE  F007         	call	_EPWM2_Initialize	;wreg free
  3209   000F86                     
  3210                           ;mcc_generated_files/mcc.c: 57:     EPWM3_Initialize();
  3211   000F86  ECCE  F007         	call	_EPWM3_Initialize	;wreg free
  3212   000F8A                     
  3213                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  3214   000F8A  ECEE  F007         	call	_EPWM1_Initialize	;wreg free
  3215   000F8E                     
  3216                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  3217   000F8E  EC2A  F008         	call	_TMR2_Initialize	;wreg free
  3218   000F92                     
  3219                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  3220   000F92  ECD1  F006         	call	_TMR0_Initialize	;wreg free
  3221   000F96                     
  3222                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  3223   000F96  EC96  F006         	call	_EUSART1_Initialize	;wreg free
  3224   000F9A  0012               	return		;funcret
  3225   000F9C                     __end_of_SYSTEM_Initialize:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _TMR2_Initialize *****************
  3229 ;; Defined at:
  3230 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;		None
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3244 ;;      Params:         0       0       0       0       0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0
  3247 ;;      Totals:         0       0       0       0       0       0       0
  3248 ;;Total ram usage:        0 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 4
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_SYSTEM_Initialize
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           	psect	text15
  3259   001054                     __ptext15:
  3260                           	callstack 0
  3261   001054                     _TMR2_Initialize:
  3262                           	callstack 25
  3263   001054                     
  3264                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  3265   001054  0E3F               	movlw	63
  3266   001056  6EBB               	movwf	187,c	;volatile
  3267                           
  3268                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  3269   001058  0E00               	movlw	0
  3270   00105A  6EBC               	movwf	188,c	;volatile
  3271   00105C                     
  3272                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  3273   00105C  929E               	bcf	158,1,c	;volatile
  3274                           
  3275                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  3276   00105E  0E06               	movlw	6
  3277   001060  6EBA               	movwf	186,c	;volatile
  3278   001062  0012               	return		;funcret
  3279   001064                     __end_of_TMR2_Initialize:
  3280                           	callstack 0
  3281                           
  3282 ;; *************** function _TMR0_Initialize *****************
  3283 ;; Defined at:
  3284 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3298 ;;      Params:         0       0       0       0       0       0       0
  3299 ;;      Locals:         0       0       0       0       0       0       0
  3300 ;;      Temps:          2       0       0       0       0       0       0
  3301 ;;      Totals:         2       0       0       0       0       0       0
  3302 ;;Total ram usage:        2 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 5
  3305 ;; This function calls:
  3306 ;;		_TMR0_SetInterruptHandler
  3307 ;; This function is called by:
  3308 ;;		_SYSTEM_Initialize
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text16
  3313   000DA2                     __ptext16:
  3314                           	callstack 0
  3315   000DA2                     _TMR0_Initialize:
  3316                           	callstack 24
  3317   000DA2                     
  3318                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  3319   000DA2  9CD5               	bcf	213,6,c	;volatile
  3320   000DA4                     
  3321                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xF5;
  3322   000DA4  0EF5               	movlw	245
  3323   000DA6  6ED7               	movwf	215,c	;volatile
  3324   000DA8                     
  3325                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xFF;
  3326   000DA8  68D6               	setf	214,c	;volatile
  3327   000DAA                     
  3328                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  3329   000DAA  50D6               	movf	214,w,c	;volatile
  3330   000DAC  CFD7 F00F          	movff	4055,??_TMR0_Initialize	;volatile
  3331   000DB0  6A10               	clrf	(??_TMR0_Initialize+1)^0,c
  3332   000DB2  C00F  F010         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  3333   000DB6  6A0F               	clrf	??_TMR0_Initialize^0,c
  3334   000DB8  100F               	iorwf	??_TMR0_Initialize^0,w,c
  3335   000DBA  6E4A               	movwf	_timer0ReloadVal^0,c	;volatile
  3336   000DBC  5010               	movf	(??_TMR0_Initialize+1)^0,w,c
  3337   000DBE  6E4B               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  3338   000DC0                     
  3339                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  3340   000DC0  94F2               	bcf	242,2,c	;volatile
  3341   000DC2                     
  3342                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  3343   000DC2  8AF2               	bsf	242,5,c	;volatile
  3344   000DC4                     
  3345                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3346   000DC4  0EAE               	movlw	low _TMR0_DefaultInterruptHandler
  3347   000DC6  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3348   000DC8  0E10               	movlw	high _TMR0_DefaultInterruptHandler
  3349   000DCA  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3350   000DCC  EC3C  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  3351   000DD0                     
  3352                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x93;
  3353   000DD0  0E93               	movlw	147
  3354   000DD2  6ED5               	movwf	213,c	;volatile
  3355   000DD4  0012               	return		;funcret
  3356   000DD6                     __end_of_TMR0_Initialize:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _TMR0_SetInterruptHandler *****************
  3360 ;; Defined at:
  3361 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  InterruptHan    2   12[COMRAM] PTR FTN()void 
  3364 ;;		 -> TMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;		None
  3367 ;; Return value:  Size  Location     Type
  3368 ;;                  1    wreg      void 
  3369 ;; Registers used:
  3370 ;;		wreg, status,2, status,0
  3371 ;; Tracked objects:
  3372 ;;		On entry : 0/0
  3373 ;;		On exit  : 0/0
  3374 ;;		Unchanged: 0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3376 ;;      Params:         2       0       0       0       0       0       0
  3377 ;;      Locals:         0       0       0       0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0
  3379 ;;      Totals:         2       0       0       0       0       0       0
  3380 ;;Total ram usage:        2 bytes
  3381 ;; Hardware stack levels used: 1
  3382 ;; Hardware stack levels required when called: 4
  3383 ;; This function calls:
  3384 ;;		Nothing
  3385 ;; This function is called by:
  3386 ;;		_TMR0_Initialize
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text17
  3392   001078                     __ptext17:
  3393                           	callstack 0
  3394   001078                     _TMR0_SetInterruptHandler:
  3395                           	callstack 26
  3396   001078                     
  3397                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  3398   001078  C00D  F04C         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3399   00107C  C00E  F04D         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3400   001080  0012               	return		;funcret
  3401   001082                     __end_of_TMR0_SetInterruptHandler:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function _PIN_MANAGER_Initialize *****************
  3405 ;; Defined at:
  3406 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;		None
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;		None
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3420 ;;      Params:         0       0       0       0       0       0       0
  3421 ;;      Locals:         0       0       0       0       0       0       0
  3422 ;;      Temps:          0       0       0       0       0       0       0
  3423 ;;      Totals:         0       0       0       0       0       0       0
  3424 ;;Total ram usage:        0 bytes
  3425 ;; Hardware stack levels used: 1
  3426 ;; Hardware stack levels required when called: 4
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_SYSTEM_Initialize
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           	psect	text18
  3435   000EFA                     __ptext18:
  3436                           	callstack 0
  3437   000EFA                     _PIN_MANAGER_Initialize:
  3438                           	callstack 25
  3439   000EFA                     
  3440                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3441   000EFA  0E00               	movlw	0
  3442   000EFC  6E89               	movwf	137,c	;volatile
  3443                           
  3444                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  3445   000EFE  0E00               	movlw	0
  3446   000F00  6E8A               	movwf	138,c	;volatile
  3447                           
  3448                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  3449   000F02  0E00               	movlw	0
  3450   000F04  6E8B               	movwf	139,c	;volatile
  3451   000F06                     
  3452                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  3453   000F06  6892               	setf	146,c	;volatile
  3454                           
  3455                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xDF;
  3456   000F08  0EDF               	movlw	223
  3457   000F0A  6E93               	movwf	147,c	;volatile
  3458                           
  3459                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB9;
  3460   000F0C  0EB9               	movlw	185
  3461   000F0E  6E94               	movwf	148,c	;volatile
  3462                           
  3463                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  3464   000F10  0E3C               	movlw	60
  3465   000F12  010F               	movlb	15	; () banked
  3466   000F14  6F3A               	movwf	58,b	;volatile
  3467                           
  3468                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  3469   000F16  0E3F               	movlw	63
  3470   000F18  6F39               	movwf	57,b	;volatile
  3471                           
  3472                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  3473   000F1A  0E2F               	movlw	47
  3474   000F1C  6F38               	movwf	56,b	;volatile
  3475                           
  3476                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  3477   000F1E  0E00               	movlw	0
  3478   000F20  6E61               	movwf	97,c	;volatile
  3479   000F22                     
  3480                           ; BSR set to: 15
  3481                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  3482   000F22  8EF1               	bsf	241,7,c	;volatile
  3483   000F24                     
  3484                           ; BSR set to: 15
  3485   000F24  0012               	return		;funcret
  3486   000F26                     __end_of_PIN_MANAGER_Initialize:
  3487                           	callstack 0
  3488                           
  3489 ;; *************** function _OSCILLATOR_Initialize *****************
  3490 ;; Defined at:
  3491 ;;		line 64 in file "mcc_generated_files/mcc.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;		None
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;		None
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3505 ;;      Params:         0       0       0       0       0       0       0
  3506 ;;      Locals:         0       0       0       0       0       0       0
  3507 ;;      Temps:          0       0       0       0       0       0       0
  3508 ;;      Totals:         0       0       0       0       0       0       0
  3509 ;;Total ram usage:        0 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 4
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_SYSTEM_Initialize
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text19
  3520   000FFC                     __ptext19:
  3521                           	callstack 0
  3522   000FFC                     _OSCILLATOR_Initialize:
  3523                           	callstack 25
  3524   000FFC                     
  3525                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  3526   000FFC  0E70               	movlw	112
  3527   000FFE  6ED3               	movwf	211,c	;volatile
  3528                           
  3529                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  3530   001000  0E04               	movlw	4
  3531   001002  6ED2               	movwf	210,c	;volatile
  3532                           
  3533                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  3534   001004  0E40               	movlw	64
  3535   001006  6E9B               	movwf	155,c	;volatile
  3536   001008                     l160:
  3537                           
  3538                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  3539   001008  AED2               	btfss	4050,7,c	;volatile
  3540   00100A  EF09  F008         	goto	u881
  3541   00100E  EF0B  F008         	goto	u880
  3542   001012                     u881:
  3543   001012  EF04  F008         	goto	l160
  3544   001016                     u880:
  3545   001016  0012               	return		;funcret
  3546   001018                     __end_of_OSCILLATOR_Initialize:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _INTERRUPT_Initialize *****************
  3550 ;; Defined at:
  3551 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		None
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3565 ;;      Params:         0       0       0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0
  3568 ;;      Totals:         0       0       0       0       0       0       0
  3569 ;;Total ram usage:        0 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 4
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_SYSTEM_Initialize
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text20
  3580   0010AA                     __ptext20:
  3581                           	callstack 0
  3582   0010AA                     _INTERRUPT_Initialize:
  3583                           	callstack 25
  3584   0010AA                     
  3585                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  3586   0010AA  9ED0               	bcf	208,7,c	;volatile
  3587   0010AC  0012               	return		;funcret
  3588   0010AE                     __end_of_INTERRUPT_Initialize:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _EUSART1_Initialize *****************
  3592 ;; Defined at:
  3593 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      void 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0, cstack
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3607 ;;      Params:         0       0       0       0       0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0
  3610 ;;      Totals:         0       0       0       0       0       0       0
  3611 ;;Total ram usage:        0 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 5
  3614 ;; This function calls:
  3615 ;;		_EUSART1_SetErrorHandler
  3616 ;;		_EUSART1_SetFramingErrorHandler
  3617 ;;		_EUSART1_SetOverrunErrorHandler
  3618 ;; This function is called by:
  3619 ;;		_SYSTEM_Initialize
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           	psect	text21
  3624   000D2C                     __ptext21:
  3625                           	callstack 0
  3626   000D2C                     _EUSART1_Initialize:
  3627                           	callstack 24
  3628   000D2C                     
  3629                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  3630   000D2C  0E08               	movlw	8
  3631   000D2E  6EB8               	movwf	184,c	;volatile
  3632                           
  3633                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  3634   000D30  0E90               	movlw	144
  3635   000D32  6EAB               	movwf	171,c	;volatile
  3636                           
  3637                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  3638   000D34  0E24               	movlw	36
  3639   000D36  6EAC               	movwf	172,c	;volatile
  3640                           
  3641                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  3642   000D38  0E82               	movlw	130
  3643   000D3A  6EAF               	movwf	175,c	;volatile
  3644                           
  3645                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  3646   000D3C  0E06               	movlw	6
  3647   000D3E  6EB0               	movwf	176,c	;volatile
  3648   000D40                     
  3649                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  3650   000D40  0E00               	movlw	0
  3651   000D42  6E0D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  3652   000D44  0E00               	movlw	0
  3653   000D46  6E0E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  3654   000D48  EC46  F008         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  3655   000D4C                     
  3656                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  3657   000D4C  0E00               	movlw	0
  3658   000D4E  6E0D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  3659   000D50  0E00               	movlw	0
  3660   000D52  6E0E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  3661   000D54  EC41  F008         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  3662   000D58                     
  3663                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  3664   000D58  0E00               	movlw	0
  3665   000D5A  6E0D               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  3666   000D5C  0E00               	movlw	0
  3667   000D5E  6E0E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  3668   000D60  EC4B  F008         	call	_EUSART1_SetErrorHandler	;wreg free
  3669   000D64                     
  3670                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  3671   000D64  0E00               	movlw	0
  3672   000D66  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  3673   000D68  0012               	return		;funcret
  3674   000D6A                     __end_of_EUSART1_Initialize:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  3678 ;; Defined at:
  3679 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3682 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3694 ;;      Params:         2       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0
  3697 ;;      Totals:         2       0       0       0       0       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 4
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_EUSART1_Initialize
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text22
  3709   001082                     __ptext22:
  3710                           	callstack 0
  3711   001082                     _EUSART1_SetOverrunErrorHandler:
  3712                           	callstack 24
  3713   001082                     
  3714                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  3715   001082  C00D  F090         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3716   001086  C00E  F091         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3717   00108A  0012               	return		;funcret
  3718   00108C                     __end_of_EUSART1_SetOverrunErrorHandler:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3722 ;; Defined at:
  3723 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3726 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3738 ;;      Params:         2       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0
  3741 ;;      Totals:         2       0       0       0       0       0       0
  3742 ;;Total ram usage:        2 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 4
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		_EUSART1_Initialize
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text23
  3753   00108C                     __ptext23:
  3754                           	callstack 0
  3755   00108C                     _EUSART1_SetFramingErrorHandler:
  3756                           	callstack 24
  3757   00108C                     
  3758                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  3759   00108C  C00D  F092         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3760   001090  C00E  F093         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3761   001094  0012               	return		;funcret
  3762   001096                     __end_of_EUSART1_SetFramingErrorHandler:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _EUSART1_SetErrorHandler *****************
  3766 ;; Defined at:
  3767 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  interruptHan    2   12[COMRAM] PTR FTN()void 
  3770 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3782 ;;      Params:         2       0       0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0
  3785 ;;      Totals:         2       0       0       0       0       0       0
  3786 ;;Total ram usage:        2 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 4
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_EUSART1_Initialize
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text24
  3797   001096                     __ptext24:
  3798                           	callstack 0
  3799   001096                     _EUSART1_SetErrorHandler:
  3800                           	callstack 24
  3801   001096                     
  3802                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  3803   001096  C00D  F08E         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3804   00109A  C00E  F08F         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3805   00109E  0012               	return		;funcret
  3806   0010A0                     __end_of_EUSART1_SetErrorHandler:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _EPWM3_Initialize *****************
  3810 ;; Defined at:
  3811 ;;		line 64 in file "mcc_generated_files/epwm3.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3825 ;;      Params:         0       0       0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0
  3828 ;;      Totals:         0       0       0       0       0       0       0
  3829 ;;Total ram usage:        0 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 4
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		_SYSTEM_Initialize
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text25
  3840   000F9C                     __ptext25:
  3841                           	callstack 0
  3842   000F9C                     _EPWM3_Initialize:
  3843                           	callstack 25
  3844   000F9C                     
  3845                           ;mcc_generated_files/epwm3.c: 69:  CCP3CON = 0x3C;
  3846   000F9C  0E3C               	movlw	60
  3847   000F9E  010F               	movlb	15	; () banked
  3848   000FA0  6F5D               	movwf	93,b	;volatile
  3849                           
  3850                           ;mcc_generated_files/epwm3.c: 72:  ECCP3AS = 0x00;
  3851   000FA2  0E00               	movlw	0
  3852   000FA4  6F5B               	movwf	91,b	;volatile
  3853                           
  3854                           ;mcc_generated_files/epwm3.c: 75:  PWM3CON = 0x80;
  3855   000FA6  0E80               	movlw	128
  3856   000FA8  6F5C               	movwf	92,b	;volatile
  3857                           
  3858                           ;mcc_generated_files/epwm3.c: 78:  PSTR3CON = 0x01;
  3859   000FAA  0E01               	movlw	1
  3860   000FAC  6F5A               	movwf	90,b	;volatile
  3861                           
  3862                           ;mcc_generated_files/epwm3.c: 81:  CCPR3H = 0x00;
  3863   000FAE  0E00               	movlw	0
  3864   000FB0  6F5F               	movwf	95,b	;volatile
  3865                           
  3866                           ;mcc_generated_files/epwm3.c: 84:  CCPR3L = 0x1F;
  3867   000FB2  0E1F               	movlw	31
  3868   000FB4  6F5E               	movwf	94,b	;volatile
  3869                           
  3870                           ;mcc_generated_files/epwm3.c: 87:  CCPTMRS0bits.C3TSEL = 0x0;
  3871   000FB6  0E3F               	movlw	-193
  3872   000FB8  1749               	andwf	73,f,b	;volatile
  3873   000FBA                     
  3874                           ; BSR set to: 15
  3875   000FBA  0012               	return		;funcret
  3876   000FBC                     __end_of_EPWM3_Initialize:
  3877                           	callstack 0
  3878                           
  3879 ;; *************** function _EPWM2_Initialize *****************
  3880 ;; Defined at:
  3881 ;;		line 64 in file "mcc_generated_files/epwm2.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;		None
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;		None
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3895 ;;      Params:         0       0       0       0       0       0       0
  3896 ;;      Locals:         0       0       0       0       0       0       0
  3897 ;;      Temps:          0       0       0       0       0       0       0
  3898 ;;      Totals:         0       0       0       0       0       0       0
  3899 ;;Total ram usage:        0 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 4
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_SYSTEM_Initialize
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text26
  3910   000FBC                     __ptext26:
  3911                           	callstack 0
  3912   000FBC                     _EPWM2_Initialize:
  3913                           	callstack 25
  3914   000FBC                     
  3915                           ;mcc_generated_files/epwm2.c: 69:  CCP2CON = 0x3C;
  3916   000FBC  0E3C               	movlw	60
  3917   000FBE  6E66               	movwf	102,c	;volatile
  3918                           
  3919                           ;mcc_generated_files/epwm2.c: 72:  ECCP2AS = 0x00;
  3920   000FC0  0E00               	movlw	0
  3921   000FC2  6E64               	movwf	100,c	;volatile
  3922                           
  3923                           ;mcc_generated_files/epwm2.c: 75:  PWM2CON = 0x80;
  3924   000FC4  0E80               	movlw	128
  3925   000FC6  6E65               	movwf	101,c	;volatile
  3926                           
  3927                           ;mcc_generated_files/epwm2.c: 78:  PSTR2CON = 0x01;
  3928   000FC8  0E01               	movlw	1
  3929   000FCA  6E63               	movwf	99,c	;volatile
  3930                           
  3931                           ;mcc_generated_files/epwm2.c: 81:  CCPR2H = 0x00;
  3932   000FCC  0E00               	movlw	0
  3933   000FCE  6E68               	movwf	104,c	;volatile
  3934                           
  3935                           ;mcc_generated_files/epwm2.c: 84:  CCPR2L = 0x1F;
  3936   000FD0  0E1F               	movlw	31
  3937   000FD2  6E67               	movwf	103,c	;volatile
  3938                           
  3939                           ;mcc_generated_files/epwm2.c: 87:  CCPTMRS0bits.C2TSEL = 0x0;
  3940   000FD4  0EE7               	movlw	-25
  3941   000FD6  010F               	movlb	15	; () banked
  3942   000FD8  1749               	andwf	73,f,b	;volatile
  3943   000FDA                     
  3944                           ; BSR set to: 15
  3945   000FDA  0012               	return		;funcret
  3946   000FDC                     __end_of_EPWM2_Initialize:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _EPWM1_Initialize *****************
  3950 ;; Defined at:
  3951 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3965 ;;      Params:         0       0       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_SYSTEM_Initialize
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text27
  3980   000FDC                     __ptext27:
  3981                           	callstack 0
  3982   000FDC                     _EPWM1_Initialize:
  3983                           	callstack 25
  3984   000FDC                     
  3985                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  3986   000FDC  0E3C               	movlw	60
  3987   000FDE  6EBD               	movwf	189,c	;volatile
  3988                           
  3989                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  3990   000FE0  0E00               	movlw	0
  3991   000FE2  6EB6               	movwf	182,c	;volatile
  3992                           
  3993                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  3994   000FE4  0E80               	movlw	128
  3995   000FE6  6EB7               	movwf	183,c	;volatile
  3996                           
  3997                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  3998   000FE8  0E01               	movlw	1
  3999   000FEA  6EB9               	movwf	185,c	;volatile
  4000                           
  4001                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  4002   000FEC  0E00               	movlw	0
  4003   000FEE  6EBF               	movwf	191,c	;volatile
  4004                           
  4005                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  4006   000FF0  0E1F               	movlw	31
  4007   000FF2  6EBE               	movwf	190,c	;volatile
  4008                           
  4009                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  4010   000FF4  0EFC               	movlw	-4
  4011   000FF6  010F               	movlb	15	; () banked
  4012   000FF8  1749               	andwf	73,f,b	;volatile
  4013   000FFA                     
  4014                           ; BSR set to: 15
  4015   000FFA  0012               	return		;funcret
  4016   000FFC                     __end_of_EPWM1_Initialize:
  4017                           	callstack 0
  4018                           
  4019 ;; *************** function _EUSART1_is_rx_ready *****************
  4020 ;; Defined at:
  4021 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      _Bool 
  4028 ;; Registers used:
  4029 ;;		wreg
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4035 ;;      Params:         0       0       0       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0       0       0
  4038 ;;      Totals:         0       0       0       0       0       0       0
  4039 ;;Total ram usage:        0 bytes
  4040 ;; Hardware stack levels used: 1
  4041 ;; Hardware stack levels required when called: 4
  4042 ;; This function calls:
  4043 ;;		Nothing
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text28
  4050   00102E                     __ptext28:
  4051                           	callstack 0
  4052   00102E                     _EUSART1_is_rx_ready:
  4053                           	callstack 26
  4054   00102E                     
  4055                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  4056   00102E  BA9E               	btfsc	158,5,c	;volatile
  4057   001030  EF1C  F008         	goto	u941
  4058   001034  EF1F  F008         	goto	u940
  4059   001038                     u941:
  4060   001038  0E01               	movlw	1
  4061   00103A  EF20  F008         	goto	u946
  4062   00103E                     u940:
  4063   00103E  0E00               	movlw	0
  4064   001040                     u946:
  4065   001040  0012               	return		;funcret
  4066   001042                     __end_of_EUSART1_is_rx_ready:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _EUSART1_Read *****************
  4070 ;; Defined at:
  4071 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      unsigned char 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4085 ;;      Params:         0       0       0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0
  4088 ;;      Totals:         0       0       0       0       0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 4
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_main
  4096 ;;		_getch
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text29
  4101   000F4E                     __ptext29:
  4102                           	callstack 0
  4103   000F4E                     _EUSART1_Read:
  4104                           	callstack 26
  4105   000F4E                     l223:
  4106                           
  4107                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4108   000F4E  AA9E               	btfss	158,5,c	;volatile
  4109   000F50  EFAC  F007         	goto	u951
  4110   000F54  EFAE  F007         	goto	u950
  4111   000F58                     u951:
  4112   000F58  EFA7  F007         	goto	l223
  4113   000F5C                     u950:
  4114   000F5C                     
  4115                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4116   000F5C  0E00               	movlw	0
  4117   000F5E  6E51               	movwf	_eusart1RxLastError^0,c	;volatile
  4118   000F60                     
  4119                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4120   000F60  A2AB               	btfss	171,1,c	;volatile
  4121   000F62  EFB5  F007         	goto	u961
  4122   000F66  EFB7  F007         	goto	u960
  4123   000F6A                     u961:
  4124   000F6A  EFB9  F007         	goto	l2113
  4125   000F6E                     u960:
  4126   000F6E                     
  4127                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4128   000F6E  98AB               	bcf	171,4,c	;volatile
  4129                           
  4130                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4131   000F70  88AB               	bsf	171,4,c	;volatile
  4132   000F72                     l2113:
  4133                           
  4134                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4135   000F72  50AE               	movf	174,w,c	;volatile
  4136   000F74  0012               	return		;funcret
  4137   000F76                     __end_of_EUSART1_Read:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _EPWM3_LoadDutyValue *****************
  4141 ;; Defined at:
  4142 ;;		line 90 in file "mcc_generated_files/epwm3.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  dutyValue       2   12[COMRAM] unsigned short 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;		None
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4156 ;;      Params:         2       0       0       0       0       0       0
  4157 ;;      Locals:         0       0       0       0       0       0       0
  4158 ;;      Temps:          2       0       0       0       0       0       0
  4159 ;;      Totals:         4       0       0       0       0       0       0
  4160 ;;Total ram usage:        4 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 4
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_main
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text30
  4171   000DD6                     __ptext30:
  4172                           	callstack 0
  4173   000DD6                     _EPWM3_LoadDutyValue:
  4174                           	callstack 26
  4175   000DD6                     
  4176                           ;mcc_generated_files/epwm3.c: 90: void EPWM3_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm3.c: 91: {;mcc_generated_files/epwm3.c: 93:     CCPR3L = ((dutyValue & 0x
      +                          03FC)>>2);
  4177   000DD6  C00D  F00F         	movff	EPWM3_LoadDutyValue@dutyValue,??_EPWM3_LoadDutyValue
  4178   000DDA  C00E  F010         	movff	EPWM3_LoadDutyValue@dutyValue+1,??_EPWM3_LoadDutyValue+1
  4179   000DDE  90D8               	bcf	status,0,c
  4180   000DE0  3210               	rrcf	(??_EPWM3_LoadDutyValue+1)^0,f,c
  4181   000DE2  320F               	rrcf	??_EPWM3_LoadDutyValue^0,f,c
  4182   000DE4  90D8               	bcf	status,0,c
  4183   000DE6  3210               	rrcf	(??_EPWM3_LoadDutyValue+1)^0,f,c
  4184   000DE8  320F               	rrcf	??_EPWM3_LoadDutyValue^0,f,c
  4185   000DEA  500F               	movf	??_EPWM3_LoadDutyValue^0,w,c
  4186   000DEC  010F               	movlb	15	; () banked
  4187   000DEE  6F5E               	movwf	94,b	;volatile
  4188                           
  4189                           ;mcc_generated_files/epwm3.c: 96:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4190   000DF0  C00D  F00F         	movff	EPWM3_LoadDutyValue@dutyValue,??_EPWM3_LoadDutyValue
  4191   000DF4  0E03               	movlw	3
  4192   000DF6  160F               	andwf	??_EPWM3_LoadDutyValue^0,f,c
  4193   000DF8  3A0F               	swapf	??_EPWM3_LoadDutyValue^0,f,c
  4194   000DFA  0EF0               	movlw	240
  4195   000DFC  160F               	andwf	??_EPWM3_LoadDutyValue^0,f,c
  4196   000DFE  515D               	movf	93,w,b	;volatile
  4197   000E00  0BCF               	andlw	207
  4198   000E02  100F               	iorwf	??_EPWM3_LoadDutyValue^0,w,c
  4199   000E04  6F5D               	movwf	93,b	;volatile
  4200   000E06                     
  4201                           ; BSR set to: 15
  4202   000E06  0012               	return		;funcret
  4203   000E08                     __end_of_EPWM3_LoadDutyValue:
  4204                           	callstack 0
  4205                           
  4206 ;; *************** function _EPWM2_LoadDutyValue *****************
  4207 ;; Defined at:
  4208 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  dutyValue       2   12[COMRAM] unsigned short 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, status,2, status,0
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4222 ;;      Params:         2       0       0       0       0       0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0
  4224 ;;      Temps:          2       0       0       0       0       0       0
  4225 ;;      Totals:         4       0       0       0       0       0       0
  4226 ;;Total ram usage:        4 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 4
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_main
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text31
  4237   000E3A                     __ptext31:
  4238                           	callstack 0
  4239   000E3A                     _EPWM2_LoadDutyValue:
  4240                           	callstack 26
  4241   000E3A                     
  4242                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  4243   000E3A  C00D  F00F         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  4244   000E3E  C00E  F010         	movff	EPWM2_LoadDutyValue@dutyValue+1,??_EPWM2_LoadDutyValue+1
  4245   000E42  90D8               	bcf	status,0,c
  4246   000E44  3210               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  4247   000E46  320F               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  4248   000E48  90D8               	bcf	status,0,c
  4249   000E4A  3210               	rrcf	(??_EPWM2_LoadDutyValue+1)^0,f,c
  4250   000E4C  320F               	rrcf	??_EPWM2_LoadDutyValue^0,f,c
  4251   000E4E  500F               	movf	??_EPWM2_LoadDutyValue^0,w,c
  4252   000E50  6E67               	movwf	103,c	;volatile
  4253                           
  4254                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4255   000E52  C00D  F00F         	movff	EPWM2_LoadDutyValue@dutyValue,??_EPWM2_LoadDutyValue
  4256   000E56  0E03               	movlw	3
  4257   000E58  160F               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  4258   000E5A  3A0F               	swapf	??_EPWM2_LoadDutyValue^0,f,c
  4259   000E5C  0EF0               	movlw	240
  4260   000E5E  160F               	andwf	??_EPWM2_LoadDutyValue^0,f,c
  4261   000E60  5066               	movf	102,w,c	;volatile
  4262   000E62  0BCF               	andlw	207
  4263   000E64  100F               	iorwf	??_EPWM2_LoadDutyValue^0,w,c
  4264   000E66  6E66               	movwf	102,c	;volatile
  4265   000E68  0012               	return		;funcret
  4266   000E6A                     __end_of_EPWM2_LoadDutyValue:
  4267                           	callstack 0
  4268                           
  4269 ;; *************** function _EPWM1_LoadDutyValue *****************
  4270 ;; Defined at:
  4271 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;  dutyValue       2   12[COMRAM] unsigned short 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4285 ;;      Params:         2       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0
  4287 ;;      Temps:          2       0       0       0       0       0       0
  4288 ;;      Totals:         4       0       0       0       0       0       0
  4289 ;;Total ram usage:        4 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 4
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_main
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text32
  4300   000E6A                     __ptext32:
  4301                           	callstack 0
  4302   000E6A                     _EPWM1_LoadDutyValue:
  4303                           	callstack 26
  4304   000E6A                     
  4305                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4306   000E6A  C00D  F00F         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4307   000E6E  C00E  F010         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  4308   000E72  90D8               	bcf	status,0,c
  4309   000E74  3210               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4310   000E76  320F               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4311   000E78  90D8               	bcf	status,0,c
  4312   000E7A  3210               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  4313   000E7C  320F               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  4314   000E7E  500F               	movf	??_EPWM1_LoadDutyValue^0,w,c
  4315   000E80  6EBE               	movwf	190,c	;volatile
  4316                           
  4317                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4318   000E82  C00D  F00F         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  4319   000E86  0E03               	movlw	3
  4320   000E88  160F               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4321   000E8A  3A0F               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  4322   000E8C  0EF0               	movlw	240
  4323   000E8E  160F               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  4324   000E90  50BD               	movf	189,w,c	;volatile
  4325   000E92  0BCF               	andlw	207
  4326   000E94  100F               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  4327   000E96  6EBD               	movwf	189,c	;volatile
  4328   000E98  0012               	return		;funcret
  4329   000E9A                     __end_of_EPWM1_LoadDutyValue:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _INTERRUPT_InterruptManager *****************
  4333 ;; Defined at:
  4334 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4348 ;;      Params:         0       0       0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0
  4350 ;;      Temps:          6       0       0       0       0       0       0
  4351 ;;      Totals:         6       0       0       0       0       0       0
  4352 ;;Total ram usage:        6 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 3
  4355 ;; This function calls:
  4356 ;;		_TMR0_ISR
  4357 ;; This function is called by:
  4358 ;;		Interrupt level 2
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	intcode
  4363   000008                     __pintcode:
  4364                           	callstack 0
  4365   000008                     _INTERRUPT_InterruptManager:
  4366                           	callstack 18
  4367                           
  4368                           ;incstack = 0
  4369   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4370   00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  4371   00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4372   000012  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  4373   000016  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  4374   00001A  CFF3 F00B          	movff	prodl,??_INTERRUPT_InterruptManager+4
  4375   00001E  CFF4 F00C          	movff	prodh,??_INTERRUPT_InterruptManager+5
  4376   000022                     
  4377                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4378   000022  AAF2               	btfss	242,5,c	;volatile
  4379   000024  EF16  F000         	goto	i2u97_41
  4380   000028  EF18  F000         	goto	i2u97_40
  4381   00002C                     i2u97_41:
  4382   00002C  EF21  F000         	goto	i2l273
  4383   000030                     i2u97_40:
  4384   000030  A4F2               	btfss	242,2,c	;volatile
  4385   000032  EF1D  F000         	goto	i2u98_41
  4386   000036  EF1F  F000         	goto	i2u98_40
  4387   00003A                     i2u98_41:
  4388   00003A  EF21  F000         	goto	i2l273
  4389   00003E                     i2u98_40:
  4390   00003E                     
  4391                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  4392   00003E  ECB5  F006         	call	_TMR0_ISR	;wreg free
  4393   000042                     i2l273:
  4394   000042  C00C  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  4395   000046  C00B  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  4396   00004A  C00A  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  4397   00004E  C009  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  4398   000052  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4399   000056  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4400   00005A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4401   00005C  0011               	retfie		f
  4402   00005E                     __end_of_INTERRUPT_InterruptManager:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _TMR0_ISR *****************
  4406 ;; Defined at:
  4407 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4421 ;;      Params:         0       0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 2
  4428 ;; This function calls:
  4429 ;;		Absolute function
  4430 ;;		_TMR0ISR
  4431 ;;		_TMR0_DefaultInterruptHandler
  4432 ;; This function is called by:
  4433 ;;		_INTERRUPT_InterruptManager
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text34
  4438   000D6A                     __ptext34:
  4439                           	callstack 0
  4440   000D6A                     _TMR0_ISR:
  4441                           	callstack 18
  4442   000D6A                     
  4443                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  4444   000D6A  94F2               	bcf	242,2,c	;volatile
  4445   000D6C                     
  4446                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  4447   000D6C  504B               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  4448   000D6E  6ED7               	movwf	215,c	;volatile
  4449   000D70                     
  4450                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  4451   000D70  C04A  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4452   000D74                     
  4453                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  4454   000D74  504C               	movf	_TMR0_InterruptHandler^0,w,c
  4455   000D76  104D               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  4456   000D78  B4D8               	btfsc	status,2,c
  4457   000D7A  EFC1  F006         	goto	i2u92_41
  4458   000D7E  EFC3  F006         	goto	i2u92_40
  4459   000D82                     i2u92_41:
  4460   000D82  EFD0  F006         	goto	i2l122
  4461   000D86                     i2u92_40:
  4462   000D86                     
  4463                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  4464   000D86  D802               	call	i2u93_48
  4465   000D88  EFD0  F006         	goto	i2u93_49
  4466   000D8C                     i2u93_48:
  4467   000D8C  0005               	push	
  4468   000D8E  6EFA               	movwf	pclath,c
  4469   000D90  504C               	movf	_TMR0_InterruptHandler^0,w,c
  4470   000D92  6EFD               	movwf	tosl,c
  4471   000D94  504D               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  4472   000D96  6EFE               	movwf	tosh,c
  4473   000D98  50F8               	movf	tblptru,w,c
  4474   000D9A  6EFF               	movwf	tosu,c
  4475   000D9C  50FA               	movf	pclath,w,c
  4476   000D9E  0012               	return		;indir
  4477   000DA0                     i2u93_49:
  4478   000DA0                     i2l122:
  4479   000DA0  0012               	return		;funcret
  4480   000DA2                     __end_of_TMR0_ISR:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _TMR0ISR *****************
  4484 ;; Defined at:
  4485 ;;		line 182 in file "main.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      void 
  4492 ;; Registers used:
  4493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4499 ;;      Params:         0       0       0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0       0       0
  4502 ;;      Totals:         0       0       0       0       0       0       0
  4503 ;;Total ram usage:        0 bytes
  4504 ;; Hardware stack levels used: 1
  4505 ;; Hardware stack levels required when called: 1
  4506 ;; This function calls:
  4507 ;;		___awmod
  4508 ;;		i2_EPWM1_LoadDutyValue
  4509 ;;		i2_EPWM2_LoadDutyValue
  4510 ;;		i2_EPWM3_LoadDutyValue
  4511 ;;		i2_TMR0_WriteTimer
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;;		_TMR0_ISR
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text35
  4519   00092C                     __ptext35:
  4520                           	callstack 0
  4521   00092C                     _TMR0ISR:
  4522                           	callstack 18
  4523   00092C                     
  4524                           ;main.c: 184:     if(tour)
  4525   00092C  5050               	movf	_tour^0,w,c
  4526   00092E  B4D8               	btfsc	status,2,c
  4527   000930  EF9C  F004         	goto	i2u89_41
  4528   000934  EF9E  F004         	goto	i2u89_40
  4529   000938                     i2u89_41:
  4530   000938  EFE0  F004         	goto	i2l2047
  4531   00093C                     i2u89_40:
  4532   00093C                     
  4533                           ;main.c: 185:     {;main.c: 187:         if(edgeLocation != 0xFF)
  4534   00093C  284F               	incf	_edgeLocation^0,w,c
  4535   00093E  B4D8               	btfsc	status,2,c
  4536   000940  EFA4  F004         	goto	i2u90_41
  4537   000944  EFA6  F004         	goto	i2u90_40
  4538   000948                     i2u90_41:
  4539   000948  EFB0  F004         	goto	i2l2037
  4540   00094C                     i2u90_40:
  4541   00094C                     
  4542                           ;main.c: 188:         {;main.c: 190:             rgbDuty[0] += rgbDirection[0];
  4543   00094C  0100               	movlb	0	; () banked
  4544   00094E  518B               	movf	_rgbDirection& (0+255),w,b
  4545   000950  27C1               	addwf	_rgbDuty& (0+255),f,b
  4546                           
  4547                           ;main.c: 191:             rgbDuty[1] += rgbDirection[1];
  4548   000952  518C               	movf	(_rgbDirection+1)& (0+255),w,b
  4549   000954  27C2               	addwf	(_rgbDuty+1)& (0+255),f,b
  4550                           
  4551                           ;main.c: 192:             rgbDuty[2] += rgbDirection[2];
  4552   000956  518D               	movf	(_rgbDirection+2)& (0+255),w,b
  4553   000958  27C3               	addwf	(_rgbDuty+2)& (0+255),f,b
  4554   00095A                     
  4555                           ; BSR set to: 0
  4556                           ;main.c: 193:             edgeLocation++;
  4557   00095A  2A4F               	incf	_edgeLocation^0,f,c
  4558                           
  4559                           ;main.c: 194:         }
  4560   00095C  EFE0  F004         	goto	i2l2047
  4561   000960                     i2l2037:
  4562                           
  4563                           ;main.c: 196:         {;main.c: 197:             edgeLocation = 0x00;
  4564   000960  0E00               	movlw	0
  4565   000962  6E4F               	movwf	_edgeLocation^0,c
  4566   000964                     
  4567                           ;main.c: 198:             tourDirectionIndex = (tourDirectionIndex + 1) % 3;
  4568   000964  0E01               	movlw	1
  4569   000966  0100               	movlb	0	; () banked
  4570   000968  2594               	addwf	_tourDirectionIndex& (0+255),w,b
  4571   00096A  6E01               	movwf	___awmod@dividend^0,c
  4572   00096C  6A02               	clrf	(___awmod@dividend+1)^0,c
  4573   00096E  0E00               	movlw	0
  4574   000970  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  4575   000972  0E00               	movlw	0
  4576   000974  6E04               	movwf	(___awmod@divisor+1)^0,c
  4577   000976  0E03               	movlw	3
  4578   000978  6E03               	movwf	___awmod@divisor^0,c
  4579   00097A  ECFC  F004         	call	___awmod	;wreg free
  4580   00097E  5001               	movf	?___awmod^0,w,c
  4581   000980  0100               	movlb	0	; () banked
  4582   000982  6F94               	movwf	_tourDirectionIndex& (0+255),b
  4583   000984                     
  4584                           ; BSR set to: 0
  4585                           ;main.c: 199:             rgbDirection[0] = tourDirections[tourDirectionIndex][0];
  4586   000984  5194               	movf	_tourDirectionIndex& (0+255),w,b
  4587   000986  0D03               	mullw	3
  4588   000988  0EB5               	movlw	low _tourDirections
  4589   00098A  24F3               	addwf	243,w,c
  4590   00098C  6ED9               	movwf	fsr2l,c
  4591   00098E  0E00               	movlw	high _tourDirections
  4592   000990  20F4               	addwfc	prodh,w,c
  4593   000992  6EDA               	movwf	fsr2h,c
  4594   000994  50DF               	movf	indf2,w,c
  4595   000996  6F8B               	movwf	_rgbDirection& (0+255),b
  4596   000998                     
  4597                           ; BSR set to: 0
  4598                           ;main.c: 200:             rgbDirection[1] = tourDirections[tourDirectionIndex][1];
  4599   000998  5194               	movf	_tourDirectionIndex& (0+255),w,b
  4600   00099A  0D03               	mullw	3
  4601   00099C  0EB6               	movlw	low (_tourDirections+1)
  4602   00099E  24F3               	addwf	243,w,c
  4603   0009A0  6ED9               	movwf	fsr2l,c
  4604   0009A2  0E00               	movlw	high (_tourDirections+1)
  4605   0009A4  20F4               	addwfc	prodh,w,c
  4606   0009A6  6EDA               	movwf	fsr2h,c
  4607   0009A8  50DF               	movf	indf2,w,c
  4608   0009AA  6F8C               	movwf	(_rgbDirection+1)& (0+255),b
  4609   0009AC                     
  4610                           ; BSR set to: 0
  4611                           ;main.c: 201:             rgbDirection[2] = tourDirections[tourDirectionIndex][2];
  4612   0009AC  5194               	movf	_tourDirectionIndex& (0+255),w,b
  4613   0009AE  0D03               	mullw	3
  4614   0009B0  0EB7               	movlw	low (_tourDirections+2)
  4615   0009B2  24F3               	addwf	243,w,c
  4616   0009B4  6ED9               	movwf	fsr2l,c
  4617   0009B6  0E00               	movlw	high (_tourDirections+2)
  4618   0009B8  20F4               	addwfc	prodh,w,c
  4619   0009BA  6EDA               	movwf	fsr2h,c
  4620   0009BC  50DF               	movf	indf2,w,c
  4621   0009BE  6F8D               	movwf	(_rgbDirection+2)& (0+255),b
  4622   0009C0                     i2l2047:
  4623                           
  4624                           ;main.c: 205:     EPWM1_LoadDutyValue(rgbDuty[0]);
  4625   0009C0  C0C1  F001         	movff	_rgbDuty,i2EPWM1_LoadDutyValue@dutyValue
  4626   0009C4  6A02               	clrf	(i2EPWM1_LoadDutyValue@dutyValue+1)^0,c
  4627   0009C6  EC65  F007         	call	i2_EPWM1_LoadDutyValue	;wreg free
  4628   0009CA                     
  4629                           ;main.c: 206:     EPWM2_LoadDutyValue(rgbDuty[1]);
  4630   0009CA  C0C2  F001         	movff	_rgbDuty+1,i2EPWM2_LoadDutyValue@dutyValue
  4631   0009CE  6A02               	clrf	(i2EPWM2_LoadDutyValue@dutyValue+1)^0,c
  4632   0009D0  EC4D  F007         	call	i2_EPWM2_LoadDutyValue	;wreg free
  4633   0009D4                     
  4634                           ;main.c: 207:     EPWM3_LoadDutyValue(rgbDuty[2]);
  4635   0009D4  C0C3  F001         	movff	_rgbDuty+2,i2EPWM3_LoadDutyValue@dutyValue
  4636   0009D8  6A02               	clrf	(i2EPWM3_LoadDutyValue@dutyValue+1)^0,c
  4637   0009DA  EC04  F007         	call	i2_EPWM3_LoadDutyValue	;wreg free
  4638   0009DE                     
  4639                           ;main.c: 209:     TMR0_WriteTimer(0x0000 - period);
  4640   0009DE  0100               	movlb	0	; () banked
  4641   0009E0  51C4               	movf	_period& (0+255),w,b
  4642   0009E2  0800               	sublw	0
  4643   0009E4  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  4644   0009E6  51C5               	movf	(_period+1)& (0+255),w,b
  4645   0009E8  A0D8               	btfss	status,0,c
  4646   0009EA  2AE8               	incf	wreg,f,c
  4647   0009EC  0800               	sublw	0
  4648   0009EE  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  4649   0009F0  EC50  F008         	call	i2_TMR0_WriteTimer	;wreg free
  4650   0009F4                     
  4651                           ;main.c: 210:     INTCONbits.TMR0IF = 0;
  4652   0009F4  94F2               	bcf	242,2,c	;volatile
  4653   0009F6  0012               	return		;funcret
  4654   0009F8                     __end_of_TMR0ISR:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  4658 ;; Defined at:
  4659 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		None
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4673 ;;      Params:         0       0       0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_TMR0_Initialize
  4683 ;;		_TMR0_ISR
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           	psect	text36
  4688   0010AE                     __ptext36:
  4689                           	callstack 0
  4690   0010AE                     _TMR0_DefaultInterruptHandler:
  4691                           	callstack 19
  4692   0010AE  0012               	return		;funcret
  4693   0010B0                     __end_of_TMR0_DefaultInterruptHandler:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function i2_TMR0_WriteTimer *****************
  4697 ;; Defined at:
  4698 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  timerVal        2    0[COMRAM] unsigned short 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4712 ;;      Params:         2       0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0
  4715 ;;      Totals:         2       0       0       0       0       0       0
  4716 ;;Total ram usage:        2 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_TMR0ISR
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text37
  4726   0010A0                     __ptext37:
  4727                           	callstack 0
  4728   0010A0                     i2_TMR0_WriteTimer:
  4729                           	callstack 18
  4730   0010A0                     
  4731                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4732   0010A0  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  4733   0010A2  6ED7               	movwf	215,c	;volatile
  4734   0010A4                     
  4735                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4736   0010A4  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  4737   0010A8  0012               	return		;funcret
  4738   0010AA                     __end_ofi2_TMR0_WriteTimer:
  4739                           	callstack 0
  4740                           
  4741 ;; *************** function i2_EPWM3_LoadDutyValue *****************
  4742 ;; Defined at:
  4743 ;;		line 90 in file "mcc_generated_files/epwm3.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  dutyValue       2    0[COMRAM] unsigned short 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4757 ;;      Params:         2       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0
  4759 ;;      Temps:          2       0       0       0       0       0       0
  4760 ;;      Totals:         4       0       0       0       0       0       0
  4761 ;;Total ram usage:        4 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_TMR0ISR
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text38
  4771   000E08                     __ptext38:
  4772                           	callstack 0
  4773   000E08                     i2_EPWM3_LoadDutyValue:
  4774                           	callstack 18
  4775   000E08                     
  4776                           ;mcc_generated_files/epwm3.c: 90: void EPWM3_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm3.c: 91: {;mcc_generated_files/epwm3.c: 93:     CCPR3L = ((dutyValue & 0x
      +                          03FC)>>2);
  4777   000E08  C001  F003         	movff	i2EPWM3_LoadDutyValue@dutyValue,??i2_EPWM3_LoadDutyValue
  4778   000E0C  C002  F004         	movff	i2EPWM3_LoadDutyValue@dutyValue+1,??i2_EPWM3_LoadDutyValue+1
  4779   000E10  90D8               	bcf	status,0,c
  4780   000E12  3204               	rrcf	(??i2_EPWM3_LoadDutyValue+1)^0,f,c
  4781   000E14  3203               	rrcf	??i2_EPWM3_LoadDutyValue^0,f,c
  4782   000E16  90D8               	bcf	status,0,c
  4783   000E18  3204               	rrcf	(??i2_EPWM3_LoadDutyValue+1)^0,f,c
  4784   000E1A  3203               	rrcf	??i2_EPWM3_LoadDutyValue^0,f,c
  4785   000E1C  5003               	movf	??i2_EPWM3_LoadDutyValue^0,w,c
  4786   000E1E  010F               	movlb	15	; () banked
  4787   000E20  6F5E               	movwf	94,b	;volatile
  4788                           
  4789                           ;mcc_generated_files/epwm3.c: 96:     CCP3CON = ((uint8_t)(CCP3CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4790   000E22  C001  F003         	movff	i2EPWM3_LoadDutyValue@dutyValue,??i2_EPWM3_LoadDutyValue
  4791   000E26  0E03               	movlw	3
  4792   000E28  1603               	andwf	??i2_EPWM3_LoadDutyValue^0,f,c
  4793   000E2A  3A03               	swapf	??i2_EPWM3_LoadDutyValue^0,f,c
  4794   000E2C  0EF0               	movlw	240
  4795   000E2E  1603               	andwf	??i2_EPWM3_LoadDutyValue^0,f,c
  4796   000E30  515D               	movf	93,w,b	;volatile
  4797   000E32  0BCF               	andlw	207
  4798   000E34  1003               	iorwf	??i2_EPWM3_LoadDutyValue^0,w,c
  4799   000E36  6F5D               	movwf	93,b	;volatile
  4800   000E38                     
  4801                           ; BSR set to: 15
  4802   000E38  0012               	return		;funcret
  4803   000E3A                     __end_ofi2_EPWM3_LoadDutyValue:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function i2_EPWM2_LoadDutyValue *****************
  4807 ;; Defined at:
  4808 ;;		line 90 in file "mcc_generated_files/epwm2.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  dutyValue       2    0[COMRAM] unsigned short 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4822 ;;      Params:         2       0       0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0       0       0
  4824 ;;      Temps:          2       0       0       0       0       0       0
  4825 ;;      Totals:         4       0       0       0       0       0       0
  4826 ;;Total ram usage:        4 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_TMR0ISR
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text39
  4836   000E9A                     __ptext39:
  4837                           	callstack 0
  4838   000E9A                     i2_EPWM2_LoadDutyValue:
  4839                           	callstack 18
  4840   000E9A                     
  4841                           ;mcc_generated_files/epwm2.c: 90: void EPWM2_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm2.c: 91: {;mcc_generated_files/epwm2.c: 93:     CCPR2L = ((dutyValue & 0x
      +                          03FC)>>2);
  4842   000E9A  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  4843   000E9E  C002  F004         	movff	i2EPWM2_LoadDutyValue@dutyValue+1,??i2_EPWM2_LoadDutyValue+1
  4844   000EA2  90D8               	bcf	status,0,c
  4845   000EA4  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  4846   000EA6  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  4847   000EA8  90D8               	bcf	status,0,c
  4848   000EAA  3204               	rrcf	(??i2_EPWM2_LoadDutyValue+1)^0,f,c
  4849   000EAC  3203               	rrcf	??i2_EPWM2_LoadDutyValue^0,f,c
  4850   000EAE  5003               	movf	??i2_EPWM2_LoadDutyValue^0,w,c
  4851   000EB0  6E67               	movwf	103,c	;volatile
  4852                           
  4853                           ;mcc_generated_files/epwm2.c: 96:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4854   000EB2  C001  F003         	movff	i2EPWM2_LoadDutyValue@dutyValue,??i2_EPWM2_LoadDutyValue
  4855   000EB6  0E03               	movlw	3
  4856   000EB8  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  4857   000EBA  3A03               	swapf	??i2_EPWM2_LoadDutyValue^0,f,c
  4858   000EBC  0EF0               	movlw	240
  4859   000EBE  1603               	andwf	??i2_EPWM2_LoadDutyValue^0,f,c
  4860   000EC0  5066               	movf	102,w,c	;volatile
  4861   000EC2  0BCF               	andlw	207
  4862   000EC4  1003               	iorwf	??i2_EPWM2_LoadDutyValue^0,w,c
  4863   000EC6  6E66               	movwf	102,c	;volatile
  4864   000EC8  0012               	return		;funcret
  4865   000ECA                     __end_ofi2_EPWM2_LoadDutyValue:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function i2_EPWM1_LoadDutyValue *****************
  4869 ;; Defined at:
  4870 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  dutyValue       2    0[COMRAM] unsigned short 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4884 ;;      Params:         2       0       0       0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0
  4886 ;;      Temps:          2       0       0       0       0       0       0
  4887 ;;      Totals:         4       0       0       0       0       0       0
  4888 ;;Total ram usage:        4 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_TMR0ISR
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           	psect	text40
  4898   000ECA                     __ptext40:
  4899                           	callstack 0
  4900   000ECA                     i2_EPWM1_LoadDutyValue:
  4901                           	callstack 18
  4902   000ECA                     
  4903                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  4904   000ECA  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
  4905   000ECE  C002  F004         	movff	i2EPWM1_LoadDutyValue@dutyValue+1,??i2_EPWM1_LoadDutyValue+1
  4906   000ED2  90D8               	bcf	status,0,c
  4907   000ED4  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
  4908   000ED6  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
  4909   000ED8  90D8               	bcf	status,0,c
  4910   000EDA  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
  4911   000EDC  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
  4912   000EDE  5003               	movf	??i2_EPWM1_LoadDutyValue^0,w,c
  4913   000EE0  6EBE               	movwf	190,c	;volatile
  4914                           
  4915                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  4916   000EE2  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
  4917   000EE6  0E03               	movlw	3
  4918   000EE8  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
  4919   000EEA  3A03               	swapf	??i2_EPWM1_LoadDutyValue^0,f,c
  4920   000EEC  0EF0               	movlw	240
  4921   000EEE  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
  4922   000EF0  50BD               	movf	189,w,c	;volatile
  4923   000EF2  0BCF               	andlw	207
  4924   000EF4  1003               	iorwf	??i2_EPWM1_LoadDutyValue^0,w,c
  4925   000EF6  6EBD               	movwf	189,c	;volatile
  4926   000EF8  0012               	return		;funcret
  4927   000EFA                     __end_ofi2_EPWM1_LoadDutyValue:
  4928                           	callstack 0
  4929                           
  4930 ;; *************** function ___awmod *****************
  4931 ;; Defined at:
  4932 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  dividend        2    0[COMRAM] int 
  4935 ;;  divisor         2    2[COMRAM] int 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  sign            1    5[COMRAM] unsigned char 
  4938 ;;  counter         1    4[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  2    0[COMRAM] int 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4948 ;;      Params:         4       0       0       0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0
  4951 ;;      Totals:         6       0       0       0       0       0       0
  4952 ;;Total ram usage:        6 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; This function calls:
  4955 ;;		Nothing
  4956 ;; This function is called by:
  4957 ;;		_TMR0ISR
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text41
  4962   0009F8                     __ptext41:
  4963                           	callstack 0
  4964   0009F8                     ___awmod:
  4965                           	callstack 18
  4966   0009F8  0E00               	movlw	0
  4967   0009FA  6E06               	movwf	___awmod@sign^0,c
  4968   0009FC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4969   0009FE  EF05  F005         	goto	i2u79_40
  4970   000A02  EF03  F005         	goto	i2u79_41
  4971   000A06                     i2u79_41:
  4972   000A06  EF0B  F005         	goto	i2l1901
  4973   000A0A                     i2u79_40:
  4974   000A0A  6C01               	negf	___awmod@dividend^0,c
  4975   000A0C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4976   000A0E  B0D8               	btfsc	status,0,c
  4977   000A10  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4978   000A12  0E01               	movlw	1
  4979   000A14  6E06               	movwf	___awmod@sign^0,c
  4980   000A16                     i2l1901:
  4981   000A16  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4982   000A18  EF12  F005         	goto	i2u80_40
  4983   000A1C  EF10  F005         	goto	i2u80_41
  4984   000A20                     i2u80_41:
  4985   000A20  EF16  F005         	goto	i2l1905
  4986   000A24                     i2u80_40:
  4987   000A24  6C03               	negf	___awmod@divisor^0,c
  4988   000A26  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4989   000A28  B0D8               	btfsc	status,0,c
  4990   000A2A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4991   000A2C                     i2l1905:
  4992   000A2C  5003               	movf	___awmod@divisor^0,w,c
  4993   000A2E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4994   000A30  B4D8               	btfsc	status,2,c
  4995   000A32  EF1D  F005         	goto	i2u81_41
  4996   000A36  EF1F  F005         	goto	i2u81_40
  4997   000A3A                     i2u81_41:
  4998   000A3A  EF43  F005         	goto	i2l1921
  4999   000A3E                     i2u81_40:
  5000   000A3E  0E01               	movlw	1
  5001   000A40  6E05               	movwf	___awmod@counter^0,c
  5002   000A42  EF27  F005         	goto	i2l1911
  5003   000A46                     i2l1909:
  5004   000A46  90D8               	bcf	status,0,c
  5005   000A48  3603               	rlcf	___awmod@divisor^0,f,c
  5006   000A4A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5007   000A4C  2A05               	incf	___awmod@counter^0,f,c
  5008   000A4E                     i2l1911:
  5009   000A4E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5010   000A50  EF2C  F005         	goto	i2u82_41
  5011   000A54  EF2E  F005         	goto	i2u82_40
  5012   000A58                     i2u82_41:
  5013   000A58  EF23  F005         	goto	i2l1909
  5014   000A5C                     i2u82_40:
  5015   000A5C                     i2l1913:
  5016   000A5C  5003               	movf	___awmod@divisor^0,w,c
  5017   000A5E  5C01               	subwf	___awmod@dividend^0,w,c
  5018   000A60  5004               	movf	(___awmod@divisor+1)^0,w,c
  5019   000A62  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5020   000A64  A0D8               	btfss	status,0,c
  5021   000A66  EF37  F005         	goto	i2u83_41
  5022   000A6A  EF39  F005         	goto	i2u83_40
  5023   000A6E                     i2u83_41:
  5024   000A6E  EF3D  F005         	goto	i2l1917
  5025   000A72                     i2u83_40:
  5026   000A72  5003               	movf	___awmod@divisor^0,w,c
  5027   000A74  5E01               	subwf	___awmod@dividend^0,f,c
  5028   000A76  5004               	movf	(___awmod@divisor+1)^0,w,c
  5029   000A78  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5030   000A7A                     i2l1917:
  5031   000A7A  90D8               	bcf	status,0,c
  5032   000A7C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5033   000A7E  3203               	rrcf	___awmod@divisor^0,f,c
  5034   000A80  2E05               	decfsz	___awmod@counter^0,f,c
  5035   000A82  EF2E  F005         	goto	i2l1913
  5036   000A86                     i2l1921:
  5037   000A86  5006               	movf	___awmod@sign^0,w,c
  5038   000A88  B4D8               	btfsc	status,2,c
  5039   000A8A  EF49  F005         	goto	i2u84_41
  5040   000A8E  EF4B  F005         	goto	i2u84_40
  5041   000A92                     i2u84_41:
  5042   000A92  EF4F  F005         	goto	i2l1925
  5043   000A96                     i2u84_40:
  5044   000A96  6C01               	negf	___awmod@dividend^0,c
  5045   000A98  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5046   000A9A  B0D8               	btfsc	status,0,c
  5047   000A9C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5048   000A9E                     i2l1925:
  5049   000A9E  C001  F001         	movff	___awmod@dividend,?___awmod
  5050   000AA2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5051   000AA6  0012               	return		;funcret
  5052   000AA8                     __end_of___awmod:
  5053                           	callstack 0
  5054                           
  5055                           	psect	text42
  5056   000000                     __ptext42:
  5057                           	callstack 0
  5058   000000                     
  5059                           	psect	rparam
  5060   000000                     
  5061                           	psect	temp
  5062   000052                     btemp:
  5063                           	callstack 0
  5064   000052                     	ds	1
  5065   000000                     int$flags	set	btemp
  5066   000000                     wtemp8	set	btemp+1
  5067   000000                     ttemp5	set	btemp+1
  5068   000000                     ttemp6	set	btemp+4
  5069   000000                     ttemp7	set	btemp+8
  5070                           
  5071                           	psect	idloc
  5072                           
  5073                           ;Config register IDLOC0 @ 0x200000
  5074                           ;	unspecified, using default values
  5075   200000                     	org	2097152
  5076   200000  FF                 	db	255
  5077                           
  5078                           ;Config register IDLOC1 @ 0x200001
  5079                           ;	unspecified, using default values
  5080   200001                     	org	2097153
  5081   200001  FF                 	db	255
  5082                           
  5083                           ;Config register IDLOC2 @ 0x200002
  5084                           ;	unspecified, using default values
  5085   200002                     	org	2097154
  5086   200002  FF                 	db	255
  5087                           
  5088                           ;Config register IDLOC3 @ 0x200003
  5089                           ;	unspecified, using default values
  5090   200003                     	org	2097155
  5091   200003  FF                 	db	255
  5092                           
  5093                           ;Config register IDLOC4 @ 0x200004
  5094                           ;	unspecified, using default values
  5095   200004                     	org	2097156
  5096   200004  FF                 	db	255
  5097                           
  5098                           ;Config register IDLOC5 @ 0x200005
  5099                           ;	unspecified, using default values
  5100   200005                     	org	2097157
  5101   200005  FF                 	db	255
  5102                           
  5103                           ;Config register IDLOC6 @ 0x200006
  5104                           ;	unspecified, using default values
  5105   200006                     	org	2097158
  5106   200006  FF                 	db	255
  5107                           
  5108                           ;Config register IDLOC7 @ 0x200007
  5109                           ;	unspecified, using default values
  5110   200007                     	org	2097159
  5111   200007  FF                 	db	255
  5112                           
  5113                           	psect	config
  5114                           
  5115                           ; Padding undefined space
  5116   300000                     	org	3145728
  5117   300000  FF                 	db	255
  5118                           
  5119                           ;Config register CONFIG1H @ 0x300001
  5120                           ;	Oscillator Selection bits
  5121                           ;	FOSC = INTIO67, Internal oscillator block
  5122                           ;	4X PLL Enable
  5123                           ;	PLLCFG = OFF, Oscillator used directly
  5124                           ;	Primary clock enable bit
  5125                           ;	PRICLKEN = ON, Primary clock enabled
  5126                           ;	Fail-Safe Clock Monitor Enable bit
  5127                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5128                           ;	Internal/External Oscillator Switchover bit
  5129                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5130   300001                     	org	3145729
  5131   300001  28                 	db	40
  5132                           
  5133                           ;Config register CONFIG2L @ 0x300002
  5134                           ;	Power-up Timer Enable bit
  5135                           ;	PWRTEN = OFF, Power up timer disabled
  5136                           ;	Brown-out Reset Enable bits
  5137                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5138                           ;	Brown Out Reset Voltage bits
  5139                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5140   300002                     	org	3145730
  5141   300002  1F                 	db	31
  5142                           
  5143                           ;Config register CONFIG2H @ 0x300003
  5144                           ;	Watchdog Timer Enable bits
  5145                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5146                           ;	Watchdog Timer Postscale Select bits
  5147                           ;	WDTPS = 32768, 1:32768
  5148   300003                     	org	3145731
  5149   300003  3C                 	db	60
  5150                           
  5151                           ; Padding undefined space
  5152   300004                     	org	3145732
  5153   300004  FF                 	db	255
  5154                           
  5155                           ;Config register CONFIG3H @ 0x300005
  5156                           ;	CCP2 MUX bit
  5157                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5158                           ;	PORTB A/D Enable bit
  5159                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5160                           ;	P3A/CCP3 Mux bit
  5161                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5162                           ;	HFINTOSC Fast Start-up
  5163                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5164                           ;	Timer3 Clock input mux bit
  5165                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5166                           ;	ECCP2 B output mux bit
  5167                           ;	P2BMX = PORTB5, P2B is on RB5
  5168                           ;	MCLR Pin Enable bit
  5169                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5170   300005                     	org	3145733
  5171   300005  BF                 	db	191
  5172                           
  5173                           ;Config register CONFIG4L @ 0x300006
  5174                           ;	Stack Full/Underflow Reset Enable bit
  5175                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5176                           ;	Single-Supply ICSP Enable bit
  5177                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5178                           ;	Extended Instruction Set Enable bit
  5179                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5180                           ;	Background Debug
  5181                           ;	DEBUG = OFF, Disabled
  5182   300006                     	org	3145734
  5183   300006  85                 	db	133
  5184                           
  5185                           ; Padding undefined space
  5186   300007                     	org	3145735
  5187   300007  FF                 	db	255
  5188                           
  5189                           ;Config register CONFIG5L @ 0x300008
  5190                           ;	Code Protection Block 0
  5191                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5192                           ;	Code Protection Block 1
  5193                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5194                           ;	Code Protection Block 2
  5195                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5196                           ;	Code Protection Block 3
  5197                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5198   300008                     	org	3145736
  5199   300008  0F                 	db	15
  5200                           
  5201                           ;Config register CONFIG5H @ 0x300009
  5202                           ;	Boot Block Code Protection bit
  5203                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5204                           ;	Data EEPROM Code Protection bit
  5205                           ;	CPD = OFF, Data EEPROM not code-protected
  5206   300009                     	org	3145737
  5207   300009  C0                 	db	192
  5208                           
  5209                           ;Config register CONFIG6L @ 0x30000A
  5210                           ;	Write Protection Block 0
  5211                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5212                           ;	Write Protection Block 1
  5213                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5214                           ;	Write Protection Block 2
  5215                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5216                           ;	Write Protection Block 3
  5217                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5218   30000A                     	org	3145738
  5219   30000A  0F                 	db	15
  5220                           
  5221                           ;Config register CONFIG6H @ 0x30000B
  5222                           ;	Configuration Register Write Protection bit
  5223                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5224                           ;	Boot Block Write Protection bit
  5225                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5226                           ;	Data EEPROM Write Protection bit
  5227                           ;	WRTD = OFF, Data EEPROM not write-protected
  5228   30000B                     	org	3145739
  5229   30000B  E0                 	db	224
  5230                           
  5231                           ;Config register CONFIG7L @ 0x30000C
  5232                           ;	Table Read Protection Block 0
  5233                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5234                           ;	Table Read Protection Block 1
  5235                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5236                           ;	Table Read Protection Block 2
  5237                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5238                           ;	Table Read Protection Block 3
  5239                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5240   30000C                     	org	3145740
  5241   30000C  0F                 	db	15
  5242                           
  5243                           ;Config register CONFIG7H @ 0x30000D
  5244                           ;	Boot Block Table Read Protection bit
  5245                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5246   30000D                     	org	3145741
  5247   30000D  40                 	db	64
  5248                           tosu	equ	0xFFF
  5249                           tosh	equ	0xFFE
  5250                           tosl	equ	0xFFD
  5251                           stkptr	equ	0xFFC
  5252                           pclatu	equ	0xFFB
  5253                           pclath	equ	0xFFA
  5254                           pcl	equ	0xFF9
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           indf0	equ	0xFEF
  5262                           postinc0	equ	0xFEE
  5263                           postdec0	equ	0xFED
  5264                           preinc0	equ	0xFEC
  5265                           plusw0	equ	0xFEB
  5266                           fsr0h	equ	0xFEA
  5267                           fsr0l	equ	0xFE9
  5268                           wreg	equ	0xFE8
  5269                           indf1	equ	0xFE7
  5270                           postinc1	equ	0xFE6
  5271                           postdec1	equ	0xFE5
  5272                           preinc1	equ	0xFE4
  5273                           plusw1	equ	0xFE3
  5274                           fsr1h	equ	0xFE2
  5275                           fsr1l	equ	0xFE1
  5276                           bsr	equ	0xFE0
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           preinc2	equ	0xFDC
  5281                           plusw2	equ	0xFDB
  5282                           fsr2h	equ	0xFDA
  5283                           fsr2l	equ	0xFD9
  5284                           status	equ	0xFD8

Data Sizes:
    Strings     364
    Constant    0
    Data        17
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      81
    BANK0           160     43     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1341$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1341$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_21(CODE[17]), STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[33]), STR_15(CODE[40]), STR_14(CODE[26]), 
		 -> STR_13(CODE[26]), STR_12(CODE[39]), STR_11(CODE[44]), STR_10(CODE[24]), 
		 -> STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), 
		 -> STR_5(CODE[5]), STR_4(CODE[16]), STR_3(CODE[22]), STR_2(CODE[13]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_21(CODE[17]), STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[33]), STR_15(CODE[40]), STR_14(CODE[26]), 
		 -> STR_13(CODE[26]), STR_12(CODE[39]), STR_11(CODE[44]), STR_10(CODE[24]), 
		 -> STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), 
		 -> STR_5(CODE[5]), STR_4(CODE[16]), STR_3(CODE[22]), STR_2(CODE[13]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 44
		 -> STR_21(CODE[17]), STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[33]), STR_15(CODE[40]), STR_14(CODE[26]), 
		 -> STR_13(CODE[26]), STR_12(CODE[39]), STR_11(CODE[44]), STR_10(CODE[24]), 
		 -> STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), 
		 -> STR_5(CODE[5]), STR_4(CODE[16]), STR_3(CODE[22]), STR_2(CODE[13]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1376$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_21(CODE[17]), STR_20(CODE[5]), STR_19(CODE[5]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[33]), STR_15(CODE[40]), STR_14(CODE[26]), 
		 -> STR_13(CODE[26]), STR_12(CODE[39]), STR_11(CODE[44]), STR_10(CODE[24]), 
		 -> STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), STR_6(CODE[33]), 
		 -> STR_5(CODE[5]), STR_4(CODE[16]), STR_3(CODE[22]), STR_2(CODE[13]), 
		 -> STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0ISR->___awmod

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   12166
                                             39 BANK0      4     4      0
                _EPWM1_LoadDutyValue
                _EPWM2_LoadDutyValue
                _EPWM3_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   10640
                                             33 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    8663
                                             25 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6    8193
                                             59 COMRAM    10     4      6
                                             14 BANK0     11    11      0
                               _ctoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4572
                                             41 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3191
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             12 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             12 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1567
                                             23 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1186
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             13 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                   _EPWM1_Initialize
                   _EPWM2_Initialize
                   _EPWM3_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                             14 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM3_LoadDutyValue                                  4     2      2     170
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EPWM2_LoadDutyValue                                  4     2      2     170
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     170
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          6     6      0     728
                                              6 COMRAM     6     6      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0     728
                   Absolute function *
                            _TMR0ISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0ISR                                             0     0      0     728
                            ___awmod
              i2_EPWM1_LoadDutyValue
              i2_EPWM2_LoadDutyValue
              i2_EPWM3_LoadDutyValue
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (13) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_EPWM3_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_EPWM2_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) i2_EPWM1_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EPWM2_LoadDutyValue
   _EPWM3_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EPWM2_Initialize
     _EPWM3_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _fputc
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0ISR *
       ___awmod
       i2_EPWM1_LoadDutyValue
       i2_EPWM2_LoadDutyValue
       i2_EPWM3_LoadDutyValue
       i2_TMR0_WriteTimer
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     2B      66       4       63.7%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      51       1       86.2%
BITBIGSFRllhlhh     20      0       0      25        0.0%
BITBIGSFRhhlhh      19      0       0      16        0.0%
BITBIGSFRllhlll     10      0       0      28        0.0%
BITBIGSFRhhllll     10      0       0      19        0.0%
BITBIGSFRlllh        E      0       0      29        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRllhhhh      C      0       0      21        0.0%
BITBIGSFRllhhhl      6      0       0      23        0.0%
BITBIGSFRllhhl       6      0       0      24        0.0%
BITBIGSFRllhhhh      5      0       0      20        0.0%
BITBIGSFRllhhhl      2      0       0      22        0.0%
BITBIGSFRllhllh      1      0       0      27        0.0%
BITBIGSFRhhlllh      1      0       0      18        0.0%
BITBIGSFRhhllh       1      0       0      17        0.0%
BITBIGSFRllhlhl      1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B7      30        0.0%
DATA                 0      0      B7      32        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 13:16:25 2023

                                            l20 0E98                                              l17 0FFA  
                                            l47 0F24                                              l63 1062  
                               _timer0ReloadVal 004A                                             l103 0DD4  
                                           l115 1076                                             l125 1080  
                                           l214 1040                                             l310 0FDA  
                                           l206 0D68                                             l230 101A  
                                           l223 0F4E                                             l160 1008  
                                           l313 0E68                                             l233 102C  
                                           l227 0F74                                             l251 1094  
                                           l163 1016                                             l157 0F9A  
                                           l254 108A                                             l239 106C  
                                           l257 109E                                             l290 0FBA  
                                           l266 10AC                                             l356 0074  
                                           l293 0E06                                             l382 0288  
                                           l366 01D6                                             l386 0328  
                                           l843 085A                                             l836 083A  
                                           l853 092A                                             l846 090A  
                                           _PR2 000FBB                                             u940 103E  
                                           u941 1038                                             u950 0F5C  
                                           u951 0F58                                             u960 0F6E  
                                           u880 1016                                             u961 0F6A  
                                           u881 1012                                             u946 1040  
                                           _pad 0BD8                                    ___awmod@sign 0006  
                               _TMR2_Initialize 1054                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                        __end_of_EPWM2_Initialize 0FDC  
                         i2_EPWM2_LoadDutyValue 0E9A                                            l1100 0C50  
                                          l1110 0AEC                                            l1120 05D6  
                                          l2001 0DAA                                            l1114 0B40  
                                          l1106 0AD2                                            l2011 10AA  
                                          l2003 0DC0                                            l1131 05A4  
                                          l2101 102E                                            l2021 0D40  
                                          l2013 0FFC                                            l2005 0DC2  
                                          l1126 076A                                            l1118 05CE  
                                          l2111 0F6E                                            l2015 0FBC  
                                          l2023 0D4C                                            l2007 0DC4  
                                          l1143 0CA0                                            l2113 0F72  
                                          l2105 0F4E                                            l2017 0F9C  
                                          l2025 0D58                                            l2009 0DD0  
                                          l2107 0F5C                                            l2027 0D64  
                                          l2019 0D2C                                            l1155 0BD6  
                                          l1163 0D2A                                            l1076 0F4C  
                                          l2117 0DD6                                            l2109 0F60  
                                          l2301 1066                                            l2119 0E3A  
                                          l2071 1072                                            l2311 0B8E  
                                          l2303 0B42                                            l1096 0BFA  
                                          l2313 0BC4                                            l2305 0B54  
                                          l2321 0D06                                            l2401 0608  
                                          l2067 0E6A                                            l2091 0F86  
                                          l2083 0F76                                            l2307 0B66  
                                          l2331 079E                                            l2323 0D0A  
                                          l2411 069A                                            l2403 0610  
                                          l2093 0F8A                                            l2085 0F7A  
                                          l2069 106E                                            l2309 0B70  
                                          l2341 0820                                            l2333 07B2  
                                          l2325 076C                                            l2317 0CE8  
                                          l2405 0616                                            l2413 06FE  
                                          l2501 00CC                                            l2095 0F8E  
                                          l2087 0F7E                                            l2343 0822  
                                          l2335 07C0                                            l2327 0778  
                                          l2351 0882                                            l2319 0CF4  
                                          l2415 0712                                            l2407 068C  
                                          l2431 0418                                            l2423 03D6  
                                          l2511 0116                                            l2503 00DA  
                                          l2097 0F92                                            l2089 0F82  
                                          l2345 0834                                            l2337 07D2  
                                          l2329 0796                                            l2361 0904  
                                          l2353 0896                                            l2417 0730  
                                          l2409 0694                                            l2441 0494  
                                          l2433 043C                                            l2425 03FA  
                                          l2521 01C2                                            l2513 01B2  
                                          l2505 00E8                                            l2099 0F96  
                                          l2339 0800                                            l2355 08A4  
                                          l2347 085C                                            l2371 0C1A  
                                          l2363 0BD8                                            l2419 074A  
                                          l2451 053E                                            l2443 04B0  
                                          l2435 0470                                            l2427 0408  
                                          l2531 01E0                                            l2523 01C6  
                                          l2507 00F6                                            l2381 0AC6  
                                          l2357 08D2                                            l2349 087A  
                                          l2373 0C1E                                            l2365 0BE6  
                                          l2445 050E                                            l2453 056A  
                                          l2429 0414                                            l2541 021A  
                                          l2533 01EC                                            l2525 01DC  
                                          l2509 010A                                            l2391 0B10  
                                          l2359 08F2                                            l2375 0C3C  
                                          l2367 0BF2                                            l2439 0484  
                                          l2471 0C7A                                            l2551 0256  
                                          l2543 022A                                            l2535 01F0  
                                          l2519 01B6                                            l2297 101A  
                                          l2393 0B2E                                            l2385 0AE4  
                                          l2377 0AA8                                            l2369 0C06  
                                          l2457 057C                                            l2473 0C96  
                                          l2561 0294                                            l2553 025C  
                                          l2545 0230                                            l2537 0204  
                                          l2299 1028                                            l2387 0AF8  
                                          l2379 0ABA                                            l2395 05A6  
                                          l2467 0C52                                            l2643 035C  
                                          l2571 02E8                                            l2563 02D0  
                                          l2555 026C                                            l2547 0240  
                                          l2539 0214                                            l2491 0082  
                                          l2483 0062                                            l2389 0B0C  
                                          l2397 05C0                                            l2645 055C  
                                          l2469 0C5E                                            l2477 0F26  
                                          l2581 0332                                            l2573 02F0  
                                          l2565 02D4                                            l2557 0272  
                                          l2549 0246                                            l2493 00AC  
                                          l2485 0062                                            l2399 05FE  
                                          l2479 0F30                                            l2575 0308  
                                          l2567 02D8                                            l2559 0282  
                                          l2495 00AE                                            l2487 0066  
                                          l2577 0310                                            l2569 02E0  
                                          l2585 0348                                            l2497 00B0  
                                          l2489 0072                                            l1891 1096  
                                          l2499 00BE                                            l1885 1078  
                                          ?_pad 001F                                            l1983 0FDC  
                                          l1887 108C                                            l1991 1054  
                                          l1889 1082                                            l1985 0EFA  
                                          l1993 105C                                            l1987 0F06  
                                          l1995 0DA2                                            l1989 0F22  
                                          l1997 0DA4                                            l1999 0DA8  
                                          STR_1 7FE3                                            STR_2 7FD6  
                                          STR_3 7F7B                                            STR_4 7FB7  
                                          STR_5 7FFA                                            STR_6 7F0E  
                                          STR_7 7FC7                                            STR_8 7FEE  
                                          STR_9 7F91                                            u1100 0B54  
                                          u1101 0B50                                            u1110 0B66  
                                          u1111 0B62                                            u1120 0B8E  
                                          u1200 08A4                                            u1121 0B8A  
                                          u1201 08A0                                            u1130 0BC4  
                                          u1210 08D2                                            u1131 0BC0  
                                          u1211 08CE                                            u1140 0D2A  
                                          u1220 0BE6                                            u1300 074A  
                                          u1141 0D26                                            u1221 0BE2  
                                          u1301 0746                                            u1230 0C3C  
                                          u1310 03FA                                            u1151 0772  
                                          u1231 0C38                                            u1311 03F6  
                                          u1240 0ABA                                            u1160 0796  
                                          u1320 043C                                            u1400 022A  
                                          u1241 0AB6                                            u1161 0792  
                                          u1321 0438                                            u1401 0226  
                                          u1090 1028                                            u1250 0AE0  
                                          u1170 07C0                                            u1330 04B0  
                                          u1410 0240                                            u1091 1024  
                                          u1251 0ADC                                            u1171 07BC  
                                          u1331 04AC                                            u1411 023C  
                                          u1260 0B2E                                            u1180 0800  
                                          u1340 0C96                                            u1420 0256  
                                          u1261 0B2A                                            u1181 07FC  
                                          u1341 0C92                                            u1421 0252  
                                          _LATA 000F89                                            u1190 087A  
                                          u1270 05C0                                            u1430 026C  
                                          u1350 0082                                            _LATB 000F8A  
                                          u1191 0876                                            u1271 05BC  
                                          u1431 0268                                            u1351 007E  
                                          _LATC 000F8B                                            u1280 0712  
                                          u1440 0282                                            u1360 010A  
                                          u1281 070E                                            u1441 027E  
                                          u1361 0106                                            u1290 0730  
                                          u1370 01D6                                            u1291 072C  
                                          u1371 01D2                                            u1380 0200  
                                          u1381 01FC                                            u1390 0214  
                                          u1391 0210                                            i2l20 0EF8  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 1018                                 __end_of_TMR0ISR 09F8  
                                          _dbuf 0095                                            _ctoa 0AA8  
                                          _main 0062                                   ?_EUSART1_Read 0001  
                                          _prec 0048                                            pad@i 0026  
                                          pad@p 0023                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 0028  
                                          fsr2l 000FD9                                            btemp 0052  
                                          _utoa 05A6                                            _tour 0050  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 005E                           ??_EPWM1_LoadDutyValue 000F  
                      __end_of_EPWM3_Initialize 0FBC                                    ___param_bank 000000  
                                         ??_pad 0025                         __end_of_TMR0_Initialize 0DD6  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 1018  
                                         ?_ctoa 0018                                           ?_main 0001  
                                         STR_10 7F63                                           STR_11 7E93  
                                         STR_20 7FF5                                           STR_12 7EE7  
                                         STR_21 7FA6                                           STR_13 7F49  
                                         STR_14 7F2F                                           STR_15 7EBF  
                                         STR_16 7F0E                                           STR_17 7F2D  
                                         STR_18 7F2D                                           STR_19 7FF5  
                               __end_of___awmod 0AA8                                           ?_utoa 002A  
                                         _T0CON 000FD5                                 __end_of___lodiv 085C  
                                         _T2CON 000FBA                                 __end_of___lomod 092C  
                                         i2l122 0DA0                                           i2l115 10A8  
                                         i2l128 10AE                                           i2l313 0EC8  
                               _TMR0_WriteTimer 106E                                           i2l273 0042  
                                         i2l293 0E38                                           i2l642 0AA6  
                                         i2l395 09F6                                    vfpfcnvrt@fmt 003E  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                       ?_TMR0_SetInterruptHandler 000D  
                              __end_of_TMR0_ISR 0DA2                                           _flags 004E  
                                         _fputc 0B42                                           _fputs 0CE8  
                                         pad@fp 001F                                           _width 0046  
                                         ctoa@c 001A                                           _putch 1064  
                                         ctoa@l 001C                                           ctoa@w 001E  
                                         main@i 008A                                  ?_EUSART1_Write 0001  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000D  
                                         ttemp5 0053                                           ttemp6 0056  
                                         ttemp7 005A                                           utoa@d 002C  
                                         utoa@i 006C                                           utoa@n 0064  
                                         utoa@p 0062                                           utoa@w 0060  
                                         status 000FD8                                           wtemp8 0053  
                              ___lodiv@dividend 000D              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization 0CA2                                    __end_of_ctoa 0B42  
                    __end_of_EUSART1_Initialize 0D6A                                    __end_of_main 03D6  
                                  __end_of_utoa 076C                         __end_of_TMR2_Initialize 1064  
                   ?_INTERRUPT_InterruptManager 0001                         ??i2_EPWM1_LoadDutyValue 0003  
                                        ??_ctoa 001B                                          ??_main 0087  
                                        ??_utoa 0034                                   __activetblptr 000002  
                              ___lodiv@quotient 001D                          ?i2_EPWM2_LoadDutyValue 0001  
                                     ??_TMR0ISR 0007                                          ?_fputc 000F  
                                        ?_fputs 0018                                          _CCPR1H 000FBF  
                                        _CCPR2H 000F68                                          _CCPR1L 000FBE  
                                        _CCPR3H 000F5F                                          _CCPR2L 000F67  
                                        _CCPR3L 000F5E                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                                          i2l2031 093C  
                                        i2l2041 0984                                          i2l2033 094C  
                                        i2l2051 09D4                                          i2l2043 0998  
                                        i2l2035 095A                                          i2l2131 0022  
                                        i2l2053 09DE                                          i2l2045 09AC  
                                        i2l2037 0960                                          i2l2029 092C  
                                        i2l2133 0030                                          i2l2055 09F4  
                                        i2l2039 0964                                          i2l2047 09C0  
                                        i2l2135 003E                                          i2l2049 09CA  
                                        i2l2081 0D86                                          i2l2073 0D6A  
                                        i2l2075 0D6C                                          i2l2077 0D70  
                                        i2l2079 0D74                                          i2l1901 0A16  
                                        i2l1911 0A4E                                          i2l1903 0A24  
                                        i2l1913 0A5C                                          i2l1921 0A86  
                                        i2l1905 0A2C                                          i2l1923 0A96  
                                        i2l1915 0A72                                          i2l1907 0A3E  
                                        i2l1925 0A9E                                          i2l1917 0A7A  
                                        i2l1909 0A46                                          i2l1919 0A80  
                                        i2l1893 09F8                                          i2l1973 0ECA  
                                        i2l1981 0E9A                                          i2l1895 09FC  
                                        i2l1975 10A0                                          i2l1897 0A0A  
                                        i2l1977 10A4                                          i2l1899 0A12  
                                        i2l1979 0E08                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                          _SPBRG1 000FAF  
                            _tourDirectionIndex 0094                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 007F                                       ??___awmod 0005  
                       __end_of_TMR0_WriteTimer 1078                                       ??___lodiv 001D  
                                     ??___lomod 001D                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 000D                                ?_TMR0_Initialize 0001  
                                        clear_0 0CC8                                          clear_1 0CD4  
                                        _period 00C4                                 ___awmod@divisor 0003  
                                        isa$std 000001                                 ___awmod@counter 0005  
                                        _printf 0F26                                          pad@buf 0021  
              ??_EUSART1_SetOverrunErrorHandler 000F                 ?_EUSART1_SetOverrunErrorHandler 000D  
                                        ctoa@fp 0018                                          fputc@c 000F  
                                        fputs@c 001C                                          fputs@i 001D  
                                        fputs@s 0018                                    _edgeLocation 004F  
                                  __mediumconst 7E92                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf 0CA2                                 ??_EUSART1_Write 000D  
                           _EPWM2_LoadDutyValue 0E3A                                          utoa@fp 002A  
      TMR0_SetInterruptHandler@InterruptHandler 000D                               _SYSTEM_Initialize 0F76  
                                    __accesstop 0060                         __end_of__initialization 0CDA  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                  EPWM3_LoadDutyValue@dutyValue 000D                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                            ?_EPWM2_LoadDutyValue 000D  
                                  __pidataBANK0 1042                             ??_SYSTEM_Initialize 0011  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 000D  
                                 __end_of_fputc 0BD8                                   __end_of_fputs 0D2C  
                                 __end_of_putch 106E                                ?_TMR2_Initialize 0001  
                i2EPWM1_LoadDutyValue@dutyValue 0001                            __end_of_EUSART1_Read 0F76  
                             ?_EPWM2_Initialize 0001                                         ??_fputc 0013  
                     __end_of_SYSTEM_Initialize 0F9C                                         ??_fputs 001C  
                         i2_EPWM3_LoadDutyValue 0E08                              ??_EPWM2_Initialize 000D  
                                       ??_putch 000E                                      __pbssBANK0 008B  
                                _tourDirections 00B5                 __end_of_EUSART1_SetErrorHandler 10A0  
                         ??_EPWM2_LoadDutyValue 000F                               ?_EPWM3_Initialize 0001  
              __end_of_TMR0_SetInterruptHandler 1082                                      ??_TMR0_ISR 0007  
                              ?_TMR0_WriteTimer 000D                              ??_EPWM3_Initialize 000D  
                                       _CCP1CON 000FBD                                         _CCP2CON 000F66  
                                       _CCP3CON 000F5D                                         _ECCP1AS 000FB6  
                                       _ECCP2AS 000F64                                         _ECCP3AS 000F5B  
                                       ?_printf 0081          __end_of_EUSART1_SetFramingErrorHandler 1096  
                _EUSART1_SetFramingErrorHandler 108C                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       i2u80_40 0A24                                         i2u80_41 0A20  
                                       _PWM2CON 000F65                                         i2u81_40 0A3E  
                                       i2u81_41 0A3A                                         _PWM3CON 000F5C  
                                       i2u82_40 0A5C                                         i2u90_40 094C  
                                       i2u82_41 0A58                                         i2u90_41 0948  
                                       i2u83_40 0A72                                         i2u83_41 0A6E  
                                       _SPBRGH1 000FB0                                         i2u84_40 0A96  
                                       i2u92_40 0D86                                         i2u84_41 0A92  
                                       i2u92_41 0D82                                         _TMR0ISR 092C  
                                       i2u93_48 0D8C                                         i2u93_49 0DA0  
                                       i2u79_40 0A0A                                         i2u79_41 0A06  
                                       i2u89_40 093C                                         i2u97_40 0030  
                                       i2u89_41 0938                                         i2u97_41 002C  
                                       i2u98_40 003E                                         i2u98_41 003A  
                              ___lomod@dividend 000D                     __end_of_EPWM1_LoadDutyValue 0E9A  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___awmod 09F8                                         ___lodiv 076C  
                                       ___lomod 085C                                       ?_vfprintf 0079  
                           _EUSART1_is_rx_ready 102E                                         __pcinit 0CA2  
                                       __ramtop 0600                                         __ptext0 0062  
                                       __ptext1 0F26                                         __ptext2 0C52  
                                       __ptext3 03D6                                         __ptext4 05A6  
                                       __ptext5 0BD8                                         __ptext6 0CE8  
                                       __ptext7 085C                                         __ptext8 076C  
                                       __ptext9 0AA8                         ??i2_EPWM2_LoadDutyValue 0003  
                                     _T0CONbits 000FD5                   __end_ofi2_EPWM1_LoadDutyValue 0EFA  
                         _OSCILLATOR_Initialize 0FFC                                       _T2CONbits 000FBA  
                                       _rgbDuty 00C1                                ___awmod@dividend 0001  
                            _EUSART1_Initialize 0D2C                        ??_PIN_MANAGER_Initialize 000D  
                        ?i2_EPWM3_LoadDutyValue 0001                                         main@cmd 0089  
                          end_of_initialization 0CDA                            ?_EUSART1_is_rx_ready 0001  
                                    fp__TMR0ISR 0000                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0011                                   __Lmediumconst 7E92  
                   _EUSART1_OverrunErrorHandler 0090                                         fputs@fp 001A  
                             __end_of_vfpfcnvrt 05A6                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 006E                                      ??_vfprintf 0046  
                          ??_EUSART1_Initialize 000F                        _TMR0_SetInterruptHandler 1078  
                           EUSART1_Write@txData 000D                             _EPWM3_LoadDutyValue 0DD6  
                         ??_EUSART1_is_rx_ready 000D                                    _EUSART1_Read 0F4E  
                  __end_of_INTERRUPT_Initialize 10AE                            ?_EPWM3_LoadDutyValue 000D  
                                   vfpfcnvrt@ap 0040                                     vfpfcnvrt@cp 0077  
                                   vfpfcnvrt@fp 003C                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf 0F4E                             start_initialization 0CA2  
                               ___lodiv@divisor 0015                                 ___lodiv@counter 0025  
                                   __end_of_pad 0C52                                     putch@txData 000E  
                  EPWM1_LoadDutyValue@dutyValue 000D                           __end_of_EUSART1_Write 102E  
                                   vfprintf@fmt 007B                                    _rgbDirection 008B  
                         ??_EPWM3_LoadDutyValue 000F                                     __pdataBANK0 00B5  
                                      ??_printf 0046                  i2EPWM2_LoadDutyValue@dutyValue 0001  
                                   __pbssCOMRAM 0046                                   __pcstackBANK0 0060  
                                      ?_TMR0ISR 0001                ??_EUSART1_SetFramingErrorHandler 000F  
               ?_EUSART1_SetFramingErrorHandler 000D                     __end_of_EPWM2_LoadDutyValue 0E6A  
                         _TMR0_InterruptHandler 004C                          _PIN_MANAGER_Initialize 0EFA  
                                     __pintcode 0008                                   __pmediumconst 7E92  
                                      ?___awmod 0001                                        ?___lodiv 000D  
                                      ?___lomod 000D                    ??_INTERRUPT_InterruptManager 0007  
                               ___lomod@divisor 0015                                    _rgbTourStart 00BE  
                       ??i2_EPWM3_LoadDutyValue 0003                                 ___lomod@counter 001D  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                 __end_ofi2_EPWM2_LoadDutyValue 0ECA                            _EUSART1_ErrorHandler 008E  
                       _EUSART1_SetErrorHandler 1096                            _INTERRUPT_Initialize 10AA  
                             ??_TMR0_Initialize 000F         EUSART1_SetErrorHandler@interruptHandler 000D  
                    ??_TMR0_SetInterruptHandler 000F                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 0D6A  
                                      _PSTR1CON 000FB9                                        _PSTR2CON 000F63  
                                      _PSTR3CON 000F5A                                       _vfpfcnvrt 03D6  
                              _EPWM1_Initialize 0FDC                               i2_TMR0_WriteTimer 10A0  
                         i2_EPWM1_LoadDutyValue 0ECA                                      vfpfcnvrt@c 0076  
                            ?i2_TMR0_WriteTimer 0001                                     _INTCON2bits 000FF1  
                                     copy_data0 0CB6                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 000D                             ??i2_TMR0_WriteTimer 0003  
                                      __Hrparam 0000                                _EPWM2_Initialize 0FBC  
                                    vfprintf@ap 007D                                        __Lrparam 0000  
                                    vfprintf@fp 0079                         ??_OSCILLATOR_Initialize 000D  
                                    ?_vfpfcnvrt 003C                       __end_ofi2_TMR0_WriteTimer 10AA  
                     ??_EUSART1_SetErrorHandler 000F                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 1042                                _EPWM3_Initialize 0F9C  
                                      __ptext10 0B42                                        __ptext11 1064  
                                      __ptext20 10AA                                        __ptext12 1018  
                                      __ptext21 0D2C                                        __ptext13 106E  
                                      __ptext30 0DD6                                        __ptext22 1082  
                                      __ptext14 0F76                                        __ptext31 0E3A  
                                      __ptext23 108C                                        __ptext15 1054  
                                      __ptext40 0ECA                                        __ptext32 0E6A  
                                      __ptext24 1096                                        __ptext16 0DA2  
                                      __ptext41 09F8                                        __ptext25 0F9C  
                                      __ptext17 1078                                        __ptext42 0000  
                                      __ptext34 0D6A                                        __ptext26 0FBC  
                                      __ptext18 0EFA                                        __ptext35 092C  
                                      __ptext27 0FDC                                        __ptext19 0FFC  
                                      __ptext36 10AE                                        __ptext28 102E  
                                      __ptext37 10A0                                        __ptext29 0F4E  
                                      __ptext38 0E08                                        __ptext39 0E9A  
                       TMR0_WriteTimer@timerVal 000D                               ??_TMR0_WriteTimer 000F  
          __end_of_TMR0_DefaultInterruptHandler 10B0                    _TMR0_DefaultInterruptHandler 10AE  
EUSART1_SetOverrunErrorHandler@interruptHandler 000D                                        isa$xinst 000000  
                                      int$flags 0052                                        _vfprintf 0C52  
            __end_of_INTERRUPT_InterruptManager 005E                      _INTERRUPT_InterruptManager 0008  
                                     printf@fmt 0081                     _EUSART1_FramingErrorHandler 0092  
                        ?i2_EPWM1_LoadDutyValue 0001                                      _INTCONbits 000FF2  
                        ??_INTERRUPT_Initialize 000D                                        intlevel2 0000  
                  EPWM2_LoadDutyValue@dutyValue 000D                         ?_PIN_MANAGER_Initialize 0001  
                   __end_of_EPWM3_LoadDutyValue 0E08          __end_of_EUSART1_SetOverrunErrorHandler 108C  
                _EUSART1_SetOverrunErrorHandler 1082                                      _RCSTA1bits 000FAB  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                      printf@ap 0085  EUSART1_SetFramingErrorHandler@interruptHandler 000D  
                                   ??_vfpfcnvrt 0042                              _eusart1RxLastError 0051  
                               _TMR0_Initialize 0DA2                  i2EPWM3_LoadDutyValue@dutyValue 0001  
                 __end_ofi2_EPWM3_LoadDutyValue 0E3A                             _EPWM1_LoadDutyValue 0E6A  
                __end_of_PIN_MANAGER_Initialize 0F26                        __end_of_EPWM1_Initialize 0FFC  
                          ?_EPWM1_LoadDutyValue 000D  
