

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Apr 08 18:53:28 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 09/02/2023 GMT
    65                           ; 
    66                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F25K22 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   100   000000                     
   101 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   102   000000                     
   103 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   104   000000                     
   105                           	psect	idataCOMRAM
   106   001368                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _amplitude
   110   001368  10                 	db	16
   111                           
   112                           	psect	idataBANK0
   113   00103E                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _sin
   117   00103E  80                 	db	128
   118   00103F  8C                 	db	140
   119   001040  98                 	db	152
   120   001041  A5                 	db	165
   121   001042  B0                 	db	176
   122   001043  BC                 	db	188
   123   001044  C6                 	db	198
   124   001045  D0                 	db	208
   125   001046  DA                 	db	218
   126   001047  E2                 	db	226
   127   001048  EA                 	db	234
   128   001049  F0                 	db	240
   129   00104A  F5                 	db	245
   130   00104B  FA                 	db	250
   131   00104C  FD                 	db	253
   132   00104D  FE                 	db	254
   133   00104E  FF                 	db	255
   134   00104F  FE                 	db	254
   135   001050  FD                 	db	253
   136   001051  FA                 	db	250
   137   001052  F5                 	db	245
   138   001053  F0                 	db	240
   139   001054  EA                 	db	234
   140   001055  E2                 	db	226
   141   001056  DA                 	db	218
   142   001057  D0                 	db	208
   143   001058  C6                 	db	198
   144   001059  BC                 	db	188
   145   00105A  B0                 	db	176
   146   00105B  A5                 	db	165
   147   00105C  98                 	db	152
   148   00105D  8C                 	db	140
   149   00105E  80                 	db	128
   150   00105F  73                 	db	115
   151   001060  67                 	db	103
   152   001061  5A                 	db	90
   153   001062  4F                 	db	79
   154   001063  43                 	db	67
   155   001064  39                 	db	57
   156   001065  2F                 	db	47
   157   001066  25                 	db	37
   158   001067  1D                 	db	29
   159   001068  15                 	db	21
   160   001069  0F                 	db	15
   161   00106A  0A                 	db	10
   162   00106B  05                 	db	5
   163   00106C  02                 	db	2
   164   00106D  01                 	db	1
   165   00106E  00                 	db	0
   166   00106F  01                 	db	1
   167   001070  02                 	db	2
   168   001071  05                 	db	5
   169   001072  0A                 	db	10
   170   001073  0F                 	db	15
   171   001074  15                 	db	21
   172   001075  1D                 	db	29
   173   001076  25                 	db	37
   174   001077  2F                 	db	47
   175   001078  39                 	db	57
   176   001079  43                 	db	67
   177   00107A  4F                 	db	79
   178   00107B  5A                 	db	90
   179   00107C  67                 	db	103
   180   00107D  73                 	db	115
   181                           
   182                           ;initializer for _phaseIncrement
   183   00107E  0001               	dw	1
   184   000000                     _T1CON	set	4045
   185   000000                     _TMR1L	set	4046
   186   000000                     _TMR1H	set	4047
   187   000000                     _TXREG1	set	4013
   188   000000                     _RCREG1	set	4014
   189   000000                     _SPBRG1	set	4015
   190   000000                     _TXSTA1	set	4012
   191   000000                     _BAUDCON1	set	4024
   192   000000                     _T2CON	set	4026
   193   000000                     _TMR2	set	4028
   194   000000                     _PR2	set	4027
   195   000000                     _TMR0L	set	4054
   196   000000                     _TMR0H	set	4055
   197   000000                     _CCPR1L	set	4030
   198   000000                     _CCPR1H	set	4031
   199   000000                     _PSTR1CON	set	4025
   200   000000                     _PWM1CON	set	4023
   201   000000                     _ANSELA	set	3896
   202   000000                     _ANSELB	set	3897
   203   000000                     _ANSELC	set	3898
   204   000000                     _LATA	set	3977
   205   000000                     _TMR1	set	4046
   206   000000                     _T1GCONbits	set	4044
   207   000000                     _T1CONbits	set	4045
   208   000000                     _RCSTA1bits	set	4011
   209   000000                     _TXSTA1bits	set	4012
   210   000000                     _T2CONbits	set	4026
   211   000000                     _T0CON	set	4053
   212   000000                     _PLLRDY	set	32407
   213   000000                     _TRISA	set	3986
   214   000000                     _LATC	set	3979
   215   000000                     _LATB	set	3978
   216   000000                     _OSCTUNE	set	3995
   217   000000                     _PIR1bits	set	3998
   218   000000                     _ECCP1AS	set	4022
   219   000000                     _CCP1CON	set	4029
   220   000000                     _INTCON2bits	set	4081
   221   000000                     _TRISC	set	3988
   222   000000                     _TRISB	set	3987
   223   000000                     _CCPTMRS0bits	set	3913
   224   000000                     _WPUB	set	3937
   225   000000                     _INTCONbits	set	4082
   226   000000                     _T1GCON	set	4044
   227   000000                     _T0CONbits	set	4053
   228   000000                     _RCSTA1	set	4011
   229   000000                     _SPBRGH1	set	4016
   230   000000                     _RCONbits	set	4048
   231   000000                     _OSCCON2	set	4050
   232   000000                     _OSCCON	set	4051
   233                           
   234                           	psect	mediumconst
   235   007BEE                     __pmediumconst:
   236                           	callstack 0
   237   007BEE  00                 	db	0
   238   007BEF                     STR_10:
   239   007BEF  2D                 	db	45
   240   007BF0  2D                 	db	45
   241   007BF1  2D                 	db	45
   242   007BF2  2D                 	db	45
   243   007BF3  2D                 	db	45
   244   007BF4  2D                 	db	45
   245   007BF5  2D                 	db	45
   246   007BF6  2D                 	db	45
   247   007BF7  2D                 	db	45
   248   007BF8  2D                 	db	45
   249   007BF9  2D                 	db	45
   250   007BFA  2D                 	db	45
   251   007BFB  2D                 	db	45
   252   007BFC  2D                 	db	45
   253   007BFD  2D                 	db	45
   254   007BFE  2D                 	db	45
   255   007BFF  2D                 	db	45
   256   007C00  2D                 	db	45
   257   007C01  2D                 	db	45
   258   007C02  2D                 	db	45
   259   007C03  2D                 	db	45
   260   007C04  2D                 	db	45
   261   007C05  2D                 	db	45
   262   007C06  2D                 	db	45
   263   007C07  2D                 	db	45
   264   007C08  2D                 	db	45
   265   007C09  2D                 	db	45
   266   007C0A  2D                 	db	45
   267   007C0B  2D                 	db	45
   268   007C0C  2D                 	db	45
   269   007C0D  2D                 	db	45
   270   007C0E  2D                 	db	45
   271   007C0F  2D                 	db	45
   272   007C10  2D                 	db	45
   273   007C11  2D                 	db	45
   274   007C12  2D                 	db	45
   275   007C13  2D                 	db	45
   276   007C14  2D                 	db	45
   277   007C15  2D                 	db	45
   278   007C16  2D                 	db	45
   279   007C17  2D                 	db	45
   280   007C18  2D                 	db	45
   281   007C19  2D                 	db	45
   282   007C1A  2D                 	db	45
   283   007C1B  2D                 	db	45
   284   007C1C  2D                 	db	45
   285   007C1D  2D                 	db	45
   286   007C1E  2D                 	db	45
   287   007C1F  2D                 	db	45
   288   007C20  0A                 	db	10
   289   007C21  0D                 	db	13
   290   007C22  00                 	db	0
   291   007C23                     STR_25:
   292   007C23  41                 	db	65	;'A'
   293   007C24  2F                 	db	47
   294   007C25  61                 	db	97	;'a'
   295   007C26  3A                 	db	58	;':'
   296   007C27  20                 	db	32
   297   007C28  69                 	db	105	;'i'
   298   007C29  6E                 	db	110	;'n'
   299   007C2A  63                 	db	99	;'c'
   300   007C2B  72                 	db	114	;'r'
   301   007C2C  65                 	db	101	;'e'
   302   007C2D  61                 	db	97	;'a'
   303   007C2E  73                 	db	115	;'s'
   304   007C2F  65                 	db	101	;'e'
   305   007C30  2F                 	db	47
   306   007C31  64                 	db	100	;'d'
   307   007C32  65                 	db	101	;'e'
   308   007C33  63                 	db	99	;'c'
   309   007C34  72                 	db	114	;'r'
   310   007C35  65                 	db	101	;'e'
   311   007C36  61                 	db	97	;'a'
   312   007C37  73                 	db	115	;'s'
   313   007C38  65                 	db	101	;'e'
   314   007C39  20                 	db	32
   315   007C3A  41                 	db	65	;'A'
   316   007C3B  6D                 	db	109	;'m'
   317   007C3C  70                 	db	112	;'p'
   318   007C3D  6C                 	db	108	;'l'
   319   007C3E  69                 	db	105	;'i'
   320   007C3F  74                 	db	116	;'t'
   321   007C40  75                 	db	117	;'u'
   322   007C41  64                 	db	100	;'d'
   323   007C42  65                 	db	101	;'e'
   324   007C43  20                 	db	32
   325   007C44  73                 	db	115	;'s'
   326   007C45  65                 	db	101	;'e'
   327   007C46  6C                 	db	108	;'l'
   328   007C47  65                 	db	101	;'e'
   329   007C48  63                 	db	99	;'c'
   330   007C49  74                 	db	116	;'t'
   331   007C4A  20                 	db	32
   332   007C4B  61                 	db	97	;'a'
   333   007C4C  6D                 	db	109	;'m'
   334   007C4D  70                 	db	112	;'p'
   335   007C4E  6C                 	db	108	;'l'
   336   007C4F  69                 	db	105	;'i'
   337   007C50  74                 	db	116	;'t'
   338   007C51  75                 	db	117	;'u'
   339   007C52  64                 	db	100	;'d'
   340   007C53  65                 	db	101	;'e'
   341   007C54  0A                 	db	10
   342   007C55  0D                 	db	13
   343   007C56  00                 	db	0
   344   007C57                     STR_5:
   345   007C57  43                 	db	67	;'C'
   346   007C58  6F                 	db	111	;'o'
   347   007C59  6E                 	db	110	;'n'
   348   007C5A  6E                 	db	110	;'n'
   349   007C5B  65                 	db	101	;'e'
   350   007C5C  63                 	db	99	;'c'
   351   007C5D  74                 	db	116	;'t'
   352   007C5E  20                 	db	32
   353   007C5F  6A                 	db	106	;'j'
   354   007C60  75                 	db	117	;'u'
   355   007C61  6D                 	db	109	;'m'
   356   007C62  70                 	db	112	;'p'
   357   007C63  65                 	db	101	;'e'
   358   007C64  72                 	db	114	;'r'
   359   007C65  20                 	db	32
   360   007C66  62                 	db	98	;'b'
   361   007C67  65                 	db	101	;'e'
   362   007C68  74                 	db	116	;'t'
   363   007C69  77                 	db	119	;'w'
   364   007C6A  65                 	db	101	;'e'
   365   007C6B  65                 	db	101	;'e'
   366   007C6C  6E                 	db	110	;'n'
   367   007C6D  20                 	db	32
   368   007C6E  4C                 	db	76	;'L'
   369   007C6F  50                 	db	80	;'P'
   370   007C70  46                 	db	70	;'F'
   371   007C71  5F                 	db	95	;'_'
   372   007C72  6F                 	db	111	;'o'
   373   007C73  75                 	db	117	;'u'
   374   007C74  74                 	db	116	;'t'
   375   007C75  20                 	db	32
   376   007C76  61                 	db	97	;'a'
   377   007C77  6E                 	db	110	;'n'
   378   007C78  64                 	db	100	;'d'
   379   007C79  20                 	db	32
   380   007C7A  41                 	db	65	;'A'
   381   007C7B  4D                 	db	77	;'M'
   382   007C7C  50                 	db	80	;'P'
   383   007C7D  5F                 	db	95	;'_'
   384   007C7E  69                 	db	105	;'i'
   385   007C7F  6E                 	db	110	;'n'
   386   007C80  2E                 	db	46
   387   007C81  0D                 	db	13
   388   007C82  0A                 	db	10
   389   007C83  00                 	db	0
   390   007C84                     STR_7:
   391   007C84  43                 	db	67	;'C'
   392   007C85  6F                 	db	111	;'o'
   393   007C86  6E                 	db	110	;'n'
   394   007C87  6E                 	db	110	;'n'
   395   007C88  65                 	db	101	;'e'
   396   007C89  63                 	db	99	;'c'
   397   007C8A  74                 	db	116	;'t'
   398   007C8B  20                 	db	32
   399   007C8C  43                 	db	67	;'C'
   400   007C8D  68                 	db	104	;'h'
   401   007C8E  61                 	db	97	;'a'
   402   007C8F  6E                 	db	110	;'n'
   403   007C90  6E                 	db	110	;'n'
   404   007C91  65                 	db	101	;'e'
   405   007C92  6C                 	db	108	;'l'
   406   007C93  20                 	db	32
   407   007C94  32                 	db	50	;'2'
   408   007C95  20                 	db	32
   409   007C96  73                 	db	115	;'s'
   410   007C97  63                 	db	99	;'c'
   411   007C98  6F                 	db	111	;'o'
   412   007C99  70                 	db	112	;'p'
   413   007C9A  65                 	db	101	;'e'
   414   007C9B  20                 	db	32
   415   007C9C  70                 	db	112	;'p'
   416   007C9D  72                 	db	114	;'r'
   417   007C9E  6F                 	db	111	;'o'
   418   007C9F  62                 	db	98	;'b'
   419   007CA0  65                 	db	101	;'e'
   420   007CA1  20                 	db	32
   421   007CA2  74                 	db	116	;'t'
   422   007CA3  6F                 	db	111	;'o'
   423   007CA4  20                 	db	32
   424   007CA5  4C                 	db	76	;'L'
   425   007CA6  50                 	db	80	;'P'
   426   007CA7  46                 	db	70	;'F'
   427   007CA8  5F                 	db	95	;'_'
   428   007CA9  6F                 	db	111	;'o'
   429   007CAA  75                 	db	117	;'u'
   430   007CAB  74                 	db	116	;'t'
   431   007CAC  2E                 	db	46
   432   007CAD  0D                 	db	13
   433   007CAE  0A                 	db	10
   434   007CAF  00                 	db	0
   435   007CB0                     STR_23:
   436   007CB0  53                 	db	83	;'S'
   437   007CB1  2F                 	db	47
   438   007CB2  73                 	db	115	;'s'
   439   007CB3  3A                 	db	58	;':'
   440   007CB4  20                 	db	32
   441   007CB5  53                 	db	83	;'S'
   442   007CB6  74                 	db	116	;'t'
   443   007CB7  61                 	db	97	;'a'
   444   007CB8  72                 	db	114	;'r'
   445   007CB9  74                 	db	116	;'t'
   446   007CBA  2F                 	db	47
   447   007CBB  73                 	db	115	;'s'
   448   007CBC  74                 	db	116	;'t'
   449   007CBD  6F                 	db	111	;'o'
   450   007CBE  70                 	db	112	;'p'
   451   007CBF  20                 	db	32
   452   007CC0  66                 	db	102	;'f'
   453   007CC1  69                 	db	105	;'i'
   454   007CC2  78                 	db	120	;'x'
   455   007CC3  65                 	db	101	;'e'
   456   007CC4  64                 	db	100	;'d'
   457   007CC5  20                 	db	32
   458   007CC6  66                 	db	102	;'f'
   459   007CC7  72                 	db	114	;'r'
   460   007CC8  65                 	db	101	;'e'
   461   007CC9  71                 	db	113	;'q'
   462   007CCA  75                 	db	117	;'u'
   463   007CCB  65                 	db	101	;'e'
   464   007CCC  6E                 	db	110	;'n'
   465   007CCD  63                 	db	99	;'c'
   466   007CCE  79                 	db	121	;'y'
   467   007CCF  20                 	db	32
   468   007CD0  73                 	db	115	;'s'
   469   007CD1  69                 	db	105	;'i'
   470   007CD2  6E                 	db	110	;'n'
   471   007CD3  65                 	db	101	;'e'
   472   007CD4  20                 	db	32
   473   007CD5  77                 	db	119	;'w'
   474   007CD6  61                 	db	97	;'a'
   475   007CD7  76                 	db	118	;'v'
   476   007CD8  65                 	db	101	;'e'
   477   007CD9  0A                 	db	10
   478   007CDA  0D                 	db	13
   479   007CDB  00                 	db	0
   480   007CDC                     STR_4:
   481   007CDC  43                 	db	67	;'C'
   482   007CDD  6F                 	db	111	;'o'
   483   007CDE  6E                 	db	110	;'n'
   484   007CDF  6E                 	db	110	;'n'
   485   007CE0  65                 	db	101	;'e'
   486   007CE1  63                 	db	99	;'c'
   487   007CE2  74                 	db	116	;'t'
   488   007CE3  20                 	db	32
   489   007CE4  6A                 	db	106	;'j'
   490   007CE5  75                 	db	117	;'u'
   491   007CE6  6D                 	db	109	;'m'
   492   007CE7  70                 	db	112	;'p'
   493   007CE8  65                 	db	101	;'e'
   494   007CE9  72                 	db	114	;'r'
   495   007CEA  20                 	db	32
   496   007CEB  62                 	db	98	;'b'
   497   007CEC  65                 	db	101	;'e'
   498   007CED  74                 	db	116	;'t'
   499   007CEE  77                 	db	119	;'w'
   500   007CEF  65                 	db	101	;'e'
   501   007CF0  65                 	db	101	;'e'
   502   007CF1  6E                 	db	110	;'n'
   503   007CF2  20                 	db	32
   504   007CF3  52                 	db	82	;'R'
   505   007CF4  43                 	db	67	;'C'
   506   007CF5  32                 	db	50	;'2'
   507   007CF6  20                 	db	32
   508   007CF7  61                 	db	97	;'a'
   509   007CF8  6E                 	db	110	;'n'
   510   007CF9  64                 	db	100	;'d'
   511   007CFA  20                 	db	32
   512   007CFB  4C                 	db	76	;'L'
   513   007CFC  50                 	db	80	;'P'
   514   007CFD  46                 	db	70	;'F'
   515   007CFE  5F                 	db	95	;'_'
   516   007CFF  69                 	db	105	;'i'
   517   007D00  6E                 	db	110	;'n'
   518   007D01  2E                 	db	46
   519   007D02  0D                 	db	13
   520   007D03  0A                 	db	10
   521   007D04  00                 	db	0
   522   007D05                     STR_6:
   523   007D05  43                 	db	67	;'C'
   524   007D06  6F                 	db	111	;'o'
   525   007D07  6E                 	db	110	;'n'
   526   007D08  6E                 	db	110	;'n'
   527   007D09  65                 	db	101	;'e'
   528   007D0A  63                 	db	99	;'c'
   529   007D0B  74                 	db	116	;'t'
   530   007D0C  20                 	db	32
   531   007D0D  43                 	db	67	;'C'
   532   007D0E  68                 	db	104	;'h'
   533   007D0F  61                 	db	97	;'a'
   534   007D10  6E                 	db	110	;'n'
   535   007D11  6E                 	db	110	;'n'
   536   007D12  65                 	db	101	;'e'
   537   007D13  6C                 	db	108	;'l'
   538   007D14  20                 	db	32
   539   007D15  31                 	db	49	;'1'
   540   007D16  20                 	db	32
   541   007D17  73                 	db	115	;'s'
   542   007D18  63                 	db	99	;'c'
   543   007D19  6F                 	db	111	;'o'
   544   007D1A  70                 	db	112	;'p'
   545   007D1B  65                 	db	101	;'e'
   546   007D1C  20                 	db	32
   547   007D1D  70                 	db	112	;'p'
   548   007D1E  72                 	db	114	;'r'
   549   007D1F  6F                 	db	111	;'o'
   550   007D20  62                 	db	98	;'b'
   551   007D21  65                 	db	101	;'e'
   552   007D22  20                 	db	32
   553   007D23  74                 	db	116	;'t'
   554   007D24  6F                 	db	111	;'o'
   555   007D25  20                 	db	32
   556   007D26  52                 	db	82	;'R'
   557   007D27  43                 	db	67	;'C'
   558   007D28  32                 	db	50	;'2'
   559   007D29  2E                 	db	46
   560   007D2A  0D                 	db	13
   561   007D2B  0A                 	db	10
   562   007D2C  00                 	db	0
   563   007D2D                     STR_42:
   564   007D2D  73                 	db	115	;'s'
   565   007D2E  74                 	db	116	;'t'
   566   007D2F  6F                 	db	111	;'o'
   567   007D30  70                 	db	112	;'p'
   568   007D31  70                 	db	112	;'p'
   569   007D32  65                 	db	101	;'e'
   570   007D33  64                 	db	100	;'d'
   571   007D34  20                 	db	32
   572   007D35  67                 	db	103	;'g'
   573   007D36  65                 	db	101	;'e'
   574   007D37  6E                 	db	110	;'n'
   575   007D38  65                 	db	101	;'e'
   576   007D39  72                 	db	114	;'r'
   577   007D3A  61                 	db	97	;'a'
   578   007D3B  74                 	db	116	;'t'
   579   007D3C  69                 	db	105	;'i'
   580   007D3D  6E                 	db	110	;'n'
   581   007D3E  67                 	db	103	;'g'
   582   007D3F  20                 	db	32
   583   007D40  73                 	db	115	;'s'
   584   007D41  77                 	db	119	;'w'
   585   007D42  65                 	db	101	;'e'
   586   007D43  65                 	db	101	;'e'
   587   007D44  70                 	db	112	;'p'
   588   007D45  69                 	db	105	;'i'
   589   007D46  6E                 	db	110	;'n'
   590   007D47  67                 	db	103	;'g'
   591   007D48  20                 	db	32
   592   007D49  77                 	db	119	;'w'
   593   007D4A  61                 	db	97	;'a'
   594   007D4B  76                 	db	118	;'v'
   595   007D4C  65                 	db	101	;'e'
   596   007D4D  0D                 	db	13
   597   007D4E  0A                 	db	10
   598   007D4F  00                 	db	0
   599   007D50                     STR_43:
   600   007D50  65                 	db	101	;'e'
   601   007D51  6E                 	db	110	;'n'
   602   007D52  74                 	db	116	;'t'
   603   007D53  65                 	db	101	;'e'
   604   007D54  72                 	db	114	;'r'
   605   007D55  20                 	db	32
   606   007D56  61                 	db	97	;'a'
   607   007D57  20                 	db	32
   608   007D58  73                 	db	115	;'s'
   609   007D59  74                 	db	116	;'t'
   610   007D5A  61                 	db	97	;'a'
   611   007D5B  72                 	db	114	;'r'
   612   007D5C  74                 	db	116	;'t'
   613   007D5D  69                 	db	105	;'i'
   614   007D5E  6E                 	db	110	;'n'
   615   007D5F  67                 	db	103	;'g'
   616   007D60  20                 	db	32
   617   007D61  73                 	db	115	;'s'
   618   007D62  77                 	db	119	;'w'
   619   007D63  65                 	db	101	;'e'
   620   007D64  65                 	db	101	;'e'
   621   007D65  70                 	db	112	;'p'
   622   007D66  20                 	db	32
   623   007D67  66                 	db	102	;'f'
   624   007D68  72                 	db	114	;'r'
   625   007D69  65                 	db	101	;'e'
   626   007D6A  71                 	db	113	;'q'
   627   007D6B  75                 	db	117	;'u'
   628   007D6C  65                 	db	101	;'e'
   629   007D6D  6E                 	db	110	;'n'
   630   007D6E  63                 	db	99	;'c'
   631   007D6F  79                 	db	121	;'y'
   632   007D70  0A                 	db	10
   633   007D71  0D                 	db	13
   634   007D72  00                 	db	0
   635   007D73                     STR_45:
   636   007D73  65                 	db	101	;'e'
   637   007D74  6E                 	db	110	;'n'
   638   007D75  74                 	db	116	;'t'
   639   007D76  65                 	db	101	;'e'
   640   007D77  72                 	db	114	;'r'
   641   007D78  20                 	db	32
   642   007D79  61                 	db	97	;'a'
   643   007D7A  20                 	db	32
   644   007D7B  65                 	db	101	;'e'
   645   007D7C  6E                 	db	110	;'n'
   646   007D7D  64                 	db	100	;'d'
   647   007D7E  69                 	db	105	;'i'
   648   007D7F  6E                 	db	110	;'n'
   649   007D80  67                 	db	103	;'g'
   650   007D81  20                 	db	32
   651   007D82  73                 	db	115	;'s'
   652   007D83  77                 	db	119	;'w'
   653   007D84  65                 	db	101	;'e'
   654   007D85  65                 	db	101	;'e'
   655   007D86  70                 	db	112	;'p'
   656   007D87  20                 	db	32
   657   007D88  66                 	db	102	;'f'
   658   007D89  72                 	db	114	;'r'
   659   007D8A  65                 	db	101	;'e'
   660   007D8B  71                 	db	113	;'q'
   661   007D8C  75                 	db	117	;'u'
   662   007D8D  65                 	db	101	;'e'
   663   007D8E  6E                 	db	110	;'n'
   664   007D8F  63                 	db	99	;'c'
   665   007D90  79                 	db	121	;'y'
   666   007D91  0A                 	db	10
   667   007D92  0D                 	db	13
   668   007D93  00                 	db	0
   669   007D94                     STR_17:
   670   007D94  2D                 	db	45
   671   007D95  2D                 	db	45
   672   007D96  20                 	db	32
   673   007D97  20                 	db	32
   674   007D98  20                 	db	32
   675   007D99  20                 	db	32
   676   007D9A  20                 	db	32
   677   007D9B  20                 	db	32
   678   007D9C  44                 	db	68	;'D'
   679   007D9D  75                 	db	117	;'u'
   680   007D9E  72                 	db	114	;'r'
   681   007D9F  61                 	db	97	;'a'
   682   007DA0  74                 	db	116	;'t'
   683   007DA1  69                 	db	105	;'i'
   684   007DA2  6F                 	db	111	;'o'
   685   007DA3  6E                 	db	110	;'n'
   686   007DA4  3A                 	db	58	;':'
   687   007DA5  20                 	db	32
   688   007DA6  20                 	db	32
   689   007DA7  20                 	db	32
   690   007DA8  25                 	db	37
   691   007DA9  75                 	db	117	;'u'
   692   007DAA  20                 	db	32
   693   007DAB  73                 	db	115	;'s'
   694   007DAC  65                 	db	101	;'e'
   695   007DAD  63                 	db	99	;'c'
   696   007DAE  6F                 	db	111	;'o'
   697   007DAF  6E                 	db	110	;'n'
   698   007DB0  64                 	db	100	;'d'
   699   007DB1  0A                 	db	10
   700   007DB2  0D                 	db	13
   701   007DB3  00                 	db	0
   702   007DB4                     STR_35:
   703   007DB4  73                 	db	115	;'s'
   704   007DB5  74                 	db	116	;'t'
   705   007DB6  6F                 	db	111	;'o'
   706   007DB7  70                 	db	112	;'p'
   707   007DB8  70                 	db	112	;'p'
   708   007DB9  65                 	db	101	;'e'
   709   007DBA  64                 	db	100	;'d'
   710   007DBB  20                 	db	32
   711   007DBC  67                 	db	103	;'g'
   712   007DBD  65                 	db	101	;'e'
   713   007DBE  6E                 	db	110	;'n'
   714   007DBF  65                 	db	101	;'e'
   715   007DC0  72                 	db	114	;'r'
   716   007DC1  61                 	db	97	;'a'
   717   007DC2  74                 	db	116	;'t'
   718   007DC3  69                 	db	105	;'i'
   719   007DC4  6E                 	db	110	;'n'
   720   007DC5  67                 	db	103	;'g'
   721   007DC6  20                 	db	32
   722   007DC7  73                 	db	115	;'s'
   723   007DC8  69                 	db	105	;'i'
   724   007DC9  6E                 	db	110	;'n'
   725   007DCA  20                 	db	32
   726   007DCB  77                 	db	119	;'w'
   727   007DCC  61                 	db	97	;'a'
   728   007DCD  76                 	db	118	;'v'
   729   007DCE  65                 	db	101	;'e'
   730   007DCF  0A                 	db	10
   731   007DD0  0D                 	db	13
   732   007DD1  00                 	db	0
   733   007DD2                     STR_27:
   734   007DD2  74                 	db	116	;'t'
   735   007DD3  3A                 	db	58	;':'
   736   007DD4  20                 	db	32
   737   007DD5  65                 	db	101	;'e'
   738   007DD6  6E                 	db	110	;'n'
   739   007DD7  74                 	db	116	;'t'
   740   007DD8  65                 	db	101	;'e'
   741   007DD9  72                 	db	114	;'r'
   742   007DDA  20                 	db	32
   743   007DDB  73                 	db	115	;'s'
   744   007DDC  54                 	db	84	;'T'
   745   007DDD  61                 	db	97	;'a'
   746   007DDE  72                 	db	114	;'r'
   747   007DDF  74                 	db	116	;'t'
   748   007DE0  69                 	db	105	;'i'
   749   007DE1  6E                 	db	110	;'n'
   750   007DE2  67                 	db	103	;'g'
   751   007DE3  20                 	db	32
   752   007DE4  66                 	db	102	;'f'
   753   007DE5  72                 	db	114	;'r'
   754   007DE6  65                 	db	101	;'e'
   755   007DE7  71                 	db	113	;'q'
   756   007DE8  75                 	db	117	;'u'
   757   007DE9  65                 	db	101	;'e'
   758   007DEA  6E                 	db	110	;'n'
   759   007DEB  63                 	db	99	;'c'
   760   007DEC  79                 	db	121	;'y'
   761   007DED  0A                 	db	10
   762   007DEE  0D                 	db	13
   763   007DEF  00                 	db	0
   764   007DF0                     STR_13:
   765   007DF0  2D                 	db	45
   766   007DF1  2D                 	db	45
   767   007DF2  20                 	db	32
   768   007DF3  20                 	db	32
   769   007DF4  20                 	db	32
   770   007DF5  20                 	db	32
   771   007DF6  20                 	db	32
   772   007DF7  20                 	db	32
   773   007DF8  41                 	db	65	;'A'
   774   007DF9  6D                 	db	109	;'m'
   775   007DFA  70                 	db	112	;'p'
   776   007DFB  6C                 	db	108	;'l'
   777   007DFC  69                 	db	105	;'i'
   778   007DFD  74                 	db	116	;'t'
   779   007DFE  75                 	db	117	;'u'
   780   007DFF  64                 	db	100	;'d'
   781   007E00  65                 	db	101	;'e'
   782   007E01  3A                 	db	58	;':'
   783   007E02  20                 	db	32
   784   007E03  20                 	db	32
   785   007E04  25                 	db	37
   786   007E05  75                 	db	117	;'u'
   787   007E06  2F                 	db	47
   788   007E07  25                 	db	37
   789   007E08  75                 	db	117	;'u'
   790   007E09  0A                 	db	10
   791   007E0A  0D                 	db	13
   792   007E0B  00                 	db	0
   793   007E0C                     STR_28:
   794   007E0C  65                 	db	101	;'e'
   795   007E0D  3A                 	db	58	;':'
   796   007E0E  20                 	db	32
   797   007E0F  65                 	db	101	;'e'
   798   007E10  6E                 	db	110	;'n'
   799   007E11  74                 	db	116	;'t'
   800   007E12  65                 	db	101	;'e'
   801   007E13  72                 	db	114	;'r'
   802   007E14  20                 	db	32
   803   007E15  45                 	db	69	;'E'
   804   007E16  6E                 	db	110	;'n'
   805   007E17  64                 	db	100	;'d'
   806   007E18  69                 	db	105	;'i'
   807   007E19  6E                 	db	110	;'n'
   808   007E1A  67                 	db	103	;'g'
   809   007E1B  20                 	db	32
   810   007E1C  66                 	db	102	;'f'
   811   007E1D  72                 	db	114	;'r'
   812   007E1E  65                 	db	101	;'e'
   813   007E1F  71                 	db	113	;'q'
   814   007E20  75                 	db	117	;'u'
   815   007E21  65                 	db	101	;'e'
   816   007E22  6E                 	db	110	;'n'
   817   007E23  63                 	db	99	;'c'
   818   007E24  79                 	db	121	;'y'
   819   007E25  0A                 	db	10
   820   007E26  0D                 	db	13
   821   007E27  00                 	db	0
   822   007E28                     STR_16:
   823   007E28  2D                 	db	45
   824   007E29  2D                 	db	45
   825   007E2A  20                 	db	32
   826   007E2B  20                 	db	32
   827   007E2C  20                 	db	32
   828   007E2D  20                 	db	32
   829   007E2E  20                 	db	32
   830   007E2F  20                 	db	32
   831   007E30  45                 	db	69	;'E'
   832   007E31  6E                 	db	110	;'n'
   833   007E32  64                 	db	100	;'d'
   834   007E33  69                 	db	105	;'i'
   835   007E34  6E                 	db	110	;'n'
   836   007E35  67                 	db	103	;'g'
   837   007E36  3A                 	db	58	;':'
   838   007E37  20                 	db	32
   839   007E38  20                 	db	32
   840   007E39  20                 	db	32
   841   007E3A  20                 	db	32
   842   007E3B  20                 	db	32
   843   007E3C  25                 	db	37
   844   007E3D  75                 	db	117	;'u'
   845   007E3E  48                 	db	72	;'H'
   846   007E3F  7A                 	db	122	;'z'
   847   007E40  0A                 	db	10
   848   007E41  0D                 	db	13
   849   007E42  00                 	db	0
   850   007E43                     STR_15:
   851   007E43  2D                 	db	45
   852   007E44  2D                 	db	45
   853   007E45  20                 	db	32
   854   007E46  20                 	db	32
   855   007E47  20                 	db	32
   856   007E48  20                 	db	32
   857   007E49  20                 	db	32
   858   007E4A  20                 	db	32
   859   007E4B  53                 	db	83	;'S'
   860   007E4C  74                 	db	116	;'t'
   861   007E4D  61                 	db	97	;'a'
   862   007E4E  72                 	db	114	;'r'
   863   007E4F  74                 	db	116	;'t'
   864   007E50  69                 	db	105	;'i'
   865   007E51  6E                 	db	110	;'n'
   866   007E52  67                 	db	103	;'g'
   867   007E53  3A                 	db	58	;':'
   868   007E54  20                 	db	32
   869   007E55  20                 	db	32
   870   007E56  20                 	db	32
   871   007E57  25                 	db	37
   872   007E58  75                 	db	117	;'u'
   873   007E59  48                 	db	72	;'H'
   874   007E5A  7A                 	db	122	;'z'
   875   007E5B  0A                 	db	10
   876   007E5C  0D                 	db	13
   877   007E5D  00                 	db	0
   878   007E5E                     STR_12:
   879   007E5E  2D                 	db	45
   880   007E5F  2D                 	db	45
   881   007E60  20                 	db	32
   882   007E61  20                 	db	32
   883   007E62  20                 	db	32
   884   007E63  20                 	db	32
   885   007E64  20                 	db	32
   886   007E65  20                 	db	32
   887   007E66  46                 	db	70	;'F'
   888   007E67  72                 	db	114	;'r'
   889   007E68  65                 	db	101	;'e'
   890   007E69  71                 	db	113	;'q'
   891   007E6A  75                 	db	117	;'u'
   892   007E6B  65                 	db	101	;'e'
   893   007E6C  6E                 	db	110	;'n'
   894   007E6D  63                 	db	99	;'c'
   895   007E6E  79                 	db	121	;'y'
   896   007E6F  3A                 	db	58	;':'
   897   007E70  20                 	db	32
   898   007E71  20                 	db	32
   899   007E72  25                 	db	37
   900   007E73  75                 	db	117	;'u'
   901   007E74  48                 	db	72	;'H'
   902   007E75  7A                 	db	122	;'z'
   903   007E76  0A                 	db	10
   904   007E77  0D                 	db	13
   905   007E78  00                 	db	0
   906   007E79                     STR_41:
   907   007E79  70                 	db	112	;'p'
   908   007E7A  72                 	db	114	;'r'
   909   007E7B  65                 	db	101	;'e'
   910   007E7C  73                 	db	115	;'s'
   911   007E7D  73                 	db	115	;'s'
   912   007E7E  20                 	db	32
   913   007E7F  61                 	db	97	;'a'
   914   007E80  6E                 	db	110	;'n'
   915   007E81  79                 	db	121	;'y'
   916   007E82  20                 	db	32
   917   007E83  6B                 	db	107	;'k'
   918   007E84  65                 	db	101	;'e'
   919   007E85  79                 	db	121	;'y'
   920   007E86  20                 	db	32
   921   007E87  74                 	db	116	;'t'
   922   007E88  6F                 	db	111	;'o'
   923   007E89  20                 	db	32
   924   007E8A  65                 	db	101	;'e'
   925   007E8B  78                 	db	120	;'x'
   926   007E8C  69                 	db	105	;'i'
   927   007E8D  74                 	db	116	;'t'
   928   007E8E  2E                 	db	46
   929   007E8F  0D                 	db	13
   930   007E90  0A                 	db	10
   931   007E91  00                 	db	0
   932   007E92                     STR_2:
   933   007E92  44                 	db	68	;'D'
   934   007E93  44                 	db	68	;'D'
   935   007E94  53                 	db	83	;'S'
   936   007E95  20                 	db	32
   937   007E96  77                 	db	119	;'w'
   938   007E97  61                 	db	97	;'a'
   939   007E98  76                 	db	118	;'v'
   940   007E99  65                 	db	101	;'e'
   941   007E9A  66                 	db	102	;'f'
   942   007E9B  6F                 	db	111	;'o'
   943   007E9C  72                 	db	114	;'r'
   944   007E9D  6D                 	db	109	;'m'
   945   007E9E  20                 	db	32
   946   007E9F  67                 	db	103	;'g'
   947   007EA0  65                 	db	101	;'e'
   948   007EA1  6E                 	db	110	;'n'
   949   007EA2  65                 	db	101	;'e'
   950   007EA3  72                 	db	114	;'r'
   951   007EA4  61                 	db	97	;'a'
   952   007EA5  74                 	db	116	;'t'
   953   007EA6  6F                 	db	111	;'o'
   954   007EA7  72                 	db	114	;'r'
   955   007EA8  0D                 	db	13
   956   007EA9  0A                 	db	10
   957   007EAA  00                 	db	0
   958   007EAB                     STR_40:
   959   007EAB  67                 	db	103	;'g'
   960   007EAC  65                 	db	101	;'e'
   961   007EAD  6E                 	db	110	;'n'
   962   007EAE  65                 	db	101	;'e'
   963   007EAF  72                 	db	114	;'r'
   964   007EB0  61                 	db	97	;'a'
   965   007EB1  74                 	db	116	;'t'
   966   007EB2  69                 	db	105	;'i'
   967   007EB3  6E                 	db	110	;'n'
   968   007EB4  67                 	db	103	;'g'
   969   007EB5  20                 	db	32
   970   007EB6  73                 	db	115	;'s'
   971   007EB7  77                 	db	119	;'w'
   972   007EB8  65                 	db	101	;'e'
   973   007EB9  65                 	db	101	;'e'
   974   007EBA  70                 	db	112	;'p'
   975   007EBB  69                 	db	105	;'i'
   976   007EBC  6E                 	db	110	;'n'
   977   007EBD  67                 	db	103	;'g'
   978   007EBE  20                 	db	32
   979   007EBF  77                 	db	119	;'w'
   980   007EC0  61                 	db	97	;'a'
   981   007EC1  76                 	db	118	;'v'
   982   007EC2  65                 	db	101	;'e'
   983   007EC3  00                 	db	0
   984   007EC4                     STR_22:
   985   007EC4  7A                 	db	122	;'z'
   986   007EC5  3A                 	db	58	;':'
   987   007EC6  20                 	db	32
   988   007EC7  63                 	db	99	;'c'
   989   007EC8  6C                 	db	108	;'l'
   990   007EC9  65                 	db	101	;'e'
   991   007ECA  61                 	db	97	;'a'
   992   007ECB  72                 	db	114	;'r'
   993   007ECC  20                 	db	32
   994   007ECD  74                 	db	116	;'t'
   995   007ECE  68                 	db	104	;'h'
   996   007ECF  65                 	db	101	;'e'
   997   007ED0  20                 	db	32
   998   007ED1  74                 	db	116	;'t'
   999   007ED2  65                 	db	101	;'e'
  1000   007ED3  72                 	db	114	;'r'
  1001   007ED4  6D                 	db	109	;'m'
  1002   007ED5  69                 	db	105	;'i'
  1003   007ED6  6E                 	db	110	;'n'
  1004   007ED7  61                 	db	97	;'a'
  1005   007ED8  6C                 	db	108	;'l'
  1006   007ED9  0A                 	db	10
  1007   007EDA  0D                 	db	13
  1008   007EDB  00                 	db	0
  1009   007EDC                     STR_47:
  1010   007EDC  65                 	db	101	;'e'
  1011   007EDD  6E                 	db	110	;'n'
  1012   007EDE  74                 	db	116	;'t'
  1013   007EDF  65                 	db	101	;'e'
  1014   007EE0  72                 	db	114	;'r'
  1015   007EE1  20                 	db	32
  1016   007EE2  61                 	db	97	;'a'
  1017   007EE3  20                 	db	32
  1018   007EE4  73                 	db	115	;'s'
  1019   007EE5  77                 	db	119	;'w'
  1020   007EE6  65                 	db	101	;'e'
  1021   007EE7  65                 	db	101	;'e'
  1022   007EE8  70                 	db	112	;'p'
  1023   007EE9  20                 	db	32
  1024   007EEA  70                 	db	112	;'p'
  1025   007EEB  65                 	db	101	;'e'
  1026   007EEC  72                 	db	114	;'r'
  1027   007EED  69                 	db	105	;'i'
  1028   007EEE  6F                 	db	111	;'o'
  1029   007EEF  64                 	db	100	;'d'
  1030   007EF0  0A                 	db	10
  1031   007EF1  0D                 	db	13
  1032   007EF2  00                 	db	0
  1033   007EF3                     STR_3:
  1034   007EF3  44                 	db	68	;'D'
  1035   007EF4  65                 	db	101	;'e'
  1036   007EF5  76                 	db	118	;'v'
  1037   007EF6  27                 	db	39
  1038   007EF7  32                 	db	50	;'2'
  1039   007EF8  31                 	db	49	;'1'
  1040   007EF9  20                 	db	32
  1041   007EFA  42                 	db	66	;'B'
  1042   007EFB  6F                 	db	111	;'o'
  1043   007EFC  61                 	db	97	;'a'
  1044   007EFD  72                 	db	114	;'r'
  1045   007EFE  64                 	db	100	;'d'
  1046   007EFF  20                 	db	32
  1047   007F00  77                 	db	119	;'w'
  1048   007F01  69                 	db	105	;'i'
  1049   007F02  72                 	db	114	;'r'
  1050   007F03  69                 	db	105	;'i'
  1051   007F04  6E                 	db	110	;'n'
  1052   007F05  67                 	db	103	;'g'
  1053   007F06  0D                 	db	13
  1054   007F07  0A                 	db	10
  1055   007F08  00                 	db	0
  1056   007F09                     STR_38:
  1057   007F09  65                 	db	101	;'e'
  1058   007F0A  6E                 	db	110	;'n'
  1059   007F0B  74                 	db	116	;'t'
  1060   007F0C  65                 	db	101	;'e'
  1061   007F0D  72                 	db	114	;'r'
  1062   007F0E  20                 	db	32
  1063   007F0F  61                 	db	97	;'a'
  1064   007F10  6E                 	db	110	;'n'
  1065   007F11  20                 	db	32
  1066   007F12  61                 	db	97	;'a'
  1067   007F13  6D                 	db	109	;'m'
  1068   007F14  70                 	db	112	;'p'
  1069   007F15  6C                 	db	108	;'l'
  1070   007F16  69                 	db	105	;'i'
  1071   007F17  74                 	db	116	;'t'
  1072   007F18  75                 	db	117	;'u'
  1073   007F19  64                 	db	100	;'d'
  1074   007F1A  65                 	db	101	;'e'
  1075   007F1B  0A                 	db	10
  1076   007F1C  0D                 	db	13
  1077   007F1D  00                 	db	0
  1078   007F1E                     STR_26:
  1079   007F1E  57                 	db	87	;'W'
  1080   007F1F  3A                 	db	58	;':'
  1081   007F20  20                 	db	32
  1082   007F21  73                 	db	115	;'s'
  1083   007F22  57                 	db	87	;'W'
  1084   007F23  65                 	db	101	;'e'
  1085   007F24  65                 	db	101	;'e'
  1086   007F25  70                 	db	112	;'p'
  1087   007F26  20                 	db	32
  1088   007F27  73                 	db	115	;'s'
  1089   007F28  69                 	db	105	;'i'
  1090   007F29  6E                 	db	110	;'n'
  1091   007F2A  65                 	db	101	;'e'
  1092   007F2B  20                 	db	32
  1093   007F2C  77                 	db	119	;'w'
  1094   007F2D  61                 	db	97	;'a'
  1095   007F2E  76                 	db	118	;'v'
  1096   007F2F  65                 	db	101	;'e'
  1097   007F30  0A                 	db	10
  1098   007F31  0D                 	db	13
  1099   007F32  00                 	db	0
  1100   007F33                     STR_21:
  1101   007F33  5A                 	db	90	;'Z'
  1102   007F34  3A                 	db	58	;':'
  1103   007F35  20                 	db	32
  1104   007F36  72                 	db	114	;'r'
  1105   007F37  65                 	db	101	;'e'
  1106   007F38  73                 	db	115	;'s'
  1107   007F39  65                 	db	101	;'e'
  1108   007F3A  74                 	db	116	;'t'
  1109   007F3B  20                 	db	32
  1110   007F3C  70                 	db	112	;'p'
  1111   007F3D  72                 	db	114	;'r'
  1112   007F3E  6F                 	db	111	;'o'
  1113   007F3F  63                 	db	99	;'c'
  1114   007F40  65                 	db	101	;'e'
  1115   007F41  73                 	db	115	;'s'
  1116   007F42  73                 	db	115	;'s'
  1117   007F43  6F                 	db	111	;'o'
  1118   007F44  72                 	db	114	;'r'
  1119   007F45  0A                 	db	10
  1120   007F46  0D                 	db	13
  1121   007F47  00                 	db	0
  1122   007F48                     STR_24:
  1123   007F48  66                 	db	102	;'f'
  1124   007F49  3A                 	db	58	;':'
  1125   007F4A  20                 	db	32
  1126   007F4B  65                 	db	101	;'e'
  1127   007F4C  6E                 	db	110	;'n'
  1128   007F4D  74                 	db	116	;'t'
  1129   007F4E  65                 	db	101	;'e'
  1130   007F4F  72                 	db	114	;'r'
  1131   007F50  20                 	db	32
  1132   007F51  46                 	db	70	;'F'
  1133   007F52  72                 	db	114	;'r'
  1134   007F53  65                 	db	101	;'e'
  1135   007F54  71                 	db	113	;'q'
  1136   007F55  75                 	db	117	;'u'
  1137   007F56  65                 	db	101	;'e'
  1138   007F57  6E                 	db	110	;'n'
  1139   007F58  63                 	db	99	;'c'
  1140   007F59  79                 	db	121	;'y'
  1141   007F5A  0A                 	db	10
  1142   007F5B  0D                 	db	13
  1143   007F5C  00                 	db	0
  1144   007F5D                     STR_29:
  1145   007F5D  64                 	db	100	;'d'
  1146   007F5E  3A                 	db	58	;':'
  1147   007F5F  20                 	db	32
  1148   007F60  65                 	db	101	;'e'
  1149   007F61  6E                 	db	110	;'n'
  1150   007F62  74                 	db	116	;'t'
  1151   007F63  65                 	db	101	;'e'
  1152   007F64  72                 	db	114	;'r'
  1153   007F65  20                 	db	32
  1154   007F66  44                 	db	68	;'D'
  1155   007F67  75                 	db	117	;'u'
  1156   007F68  72                 	db	114	;'r'
  1157   007F69  61                 	db	97	;'a'
  1158   007F6A  74                 	db	116	;'t'
  1159   007F6B  69                 	db	105	;'i'
  1160   007F6C  6F                 	db	111	;'o'
  1161   007F6D  6E                 	db	110	;'n'
  1162   007F6E  0A                 	db	10
  1163   007F6F  0D                 	db	13
  1164   007F70  00                 	db	0
  1165   007F71                     STR_36:
  1166   007F71  65                 	db	101	;'e'
  1167   007F72  6E                 	db	110	;'n'
  1168   007F73  74                 	db	116	;'t'
  1169   007F74  65                 	db	101	;'e'
  1170   007F75  72                 	db	114	;'r'
  1171   007F76  20                 	db	32
  1172   007F77  61                 	db	97	;'a'
  1173   007F78  20                 	db	32
  1174   007F79  66                 	db	102	;'f'
  1175   007F7A  72                 	db	114	;'r'
  1176   007F7B  65                 	db	101	;'e'
  1177   007F7C  71                 	db	113	;'q'
  1178   007F7D  75                 	db	117	;'u'
  1179   007F7E  65                 	db	101	;'e'
  1180   007F7F  6E                 	db	110	;'n'
  1181   007F80  63                 	db	99	;'c'
  1182   007F81  79                 	db	121	;'y'
  1183   007F82  0A                 	db	10
  1184   007F83  0D                 	db	13
  1185   007F84  00                 	db	0
  1186   007F85                     STR_49:
  1187   007F85  75                 	db	117	;'u'
  1188   007F86  6E                 	db	110	;'n'
  1189   007F87  6B                 	db	107	;'k'
  1190   007F88  6E                 	db	110	;'n'
  1191   007F89  6F                 	db	111	;'o'
  1192   007F8A  77                 	db	119	;'w'
  1193   007F8B  6E                 	db	110	;'n'
  1194   007F8C  20                 	db	32
  1195   007F8D  6B                 	db	107	;'k'
  1196   007F8E  65                 	db	101	;'e'
  1197   007F8F  79                 	db	121	;'y'
  1198   007F90  20                 	db	32
  1199   007F91  25                 	db	37
  1200   007F92  63                 	db	99	;'c'
  1201   007F93  0D                 	db	13
  1202   007F94  0A                 	db	10
  1203   007F95  00                 	db	0
  1204   007F96                     STR_19:
  1205   007F96  3F                 	db	63	;'?'
  1206   007F97  3A                 	db	58	;':'
  1207   007F98  20                 	db	32
  1208   007F99  68                 	db	104	;'h'
  1209   007F9A  65                 	db	101	;'e'
  1210   007F9B  6C                 	db	108	;'l'
  1211   007F9C  70                 	db	112	;'p'
  1212   007F9D  20                 	db	32
  1213   007F9E  6D                 	db	109	;'m'
  1214   007F9F  65                 	db	101	;'e'
  1215   007FA0  6E                 	db	110	;'n'
  1216   007FA1  75                 	db	117	;'u'
  1217   007FA2  0A                 	db	10
  1218   007FA3  0D                 	db	13
  1219   007FA4  00                 	db	0
  1220   007FA5                     STR_14:
  1221   007FA5  2D                 	db	45
  1222   007FA6  2D                 	db	45
  1223   007FA7  20                 	db	32
  1224   007FA8  20                 	db	32
  1225   007FA9  53                 	db	83	;'S'
  1226   007FAA  77                 	db	119	;'w'
  1227   007FAB  65                 	db	101	;'e'
  1228   007FAC  65                 	db	101	;'e'
  1229   007FAD  70                 	db	112	;'p'
  1230   007FAE  3A                 	db	58	;':'
  1231   007FAF  0A                 	db	10
  1232   007FB0  0D                 	db	13
  1233   007FB1  00                 	db	0
  1234   007FB2                     STR_11:
  1235   007FB2  2D                 	db	45
  1236   007FB3  2D                 	db	45
  1237   007FB4  20                 	db	32
  1238   007FB5  20                 	db	32
  1239   007FB6  46                 	db	70	;'F'
  1240   007FB7  69                 	db	105	;'i'
  1241   007FB8  78                 	db	120	;'x'
  1242   007FB9  65                 	db	101	;'e'
  1243   007FBA  64                 	db	100	;'d'
  1244   007FBB  0A                 	db	10
  1245   007FBC  0D                 	db	13
  1246   007FBD  00                 	db	0
  1247   007FBE                     STR_39:
  1248   007FBE  2F                 	db	47
  1249   007FBF  31                 	db	49	;'1'
  1250   007FC0  36                 	db	54	;'6'
  1251   007FC1  20                 	db	32
  1252   007FC2  73                 	db	115	;'s'
  1253   007FC3  74                 	db	116	;'t'
  1254   007FC4  65                 	db	101	;'e'
  1255   007FC5  70                 	db	112	;'p'
  1256   007FC6  73                 	db	115	;'s'
  1257   007FC7  0A                 	db	10
  1258   007FC8  0D                 	db	13
  1259   007FC9  00                 	db	0
  1260   007FCA                     STR_1:
  1261   007FCA  4C                 	db	76	;'L'
  1262   007FCB  61                 	db	97	;'a'
  1263   007FCC  62                 	db	98	;'b'
  1264   007FCD  20                 	db	32
  1265   007FCE  31                 	db	49	;'1'
  1266   007FCF  32                 	db	50	;'2'
  1267   007FD0  0D                 	db	13
  1268   007FD1  0A                 	db	10
  1269   007FD2  00                 	db	0
  1270   007FD3                     STR_31:
  1271   007FD3  6F                 	db	111	;'o'
  1272   007FD4  3A                 	db	58	;':'
  1273   007FD5  20                 	db	32
  1274   007FD6  20                 	db	32
  1275   007FD7  6F                 	db	111	;'o'
  1276   007FD8  6B                 	db	107	;'k'
  1277   007FD9  0D                 	db	13
  1278   007FDA  0A                 	db	10
  1279   007FDB  00                 	db	0
  1280   007FDC                     STR_48:
  1281   007FDC  20                 	db	32
  1282   007FDD  74                 	db	116	;'t'
  1283   007FDE  6D                 	db	109	;'m'
  1284   007FDF  72                 	db	114	;'r'
  1285   007FE0  73                 	db	115	;'s'
  1286   007FE1  0A                 	db	10
  1287   007FE2  0D                 	db	13
  1288   007FE3  00                 	db	0
  1289   007FE4                     STR_20:
  1290   007FE4  6F                 	db	111	;'o'
  1291   007FE5  3A                 	db	58	;':'
  1292   007FE6  20                 	db	32
  1293   007FE7  6B                 	db	107	;'k'
  1294   007FE8  0A                 	db	10
  1295   007FE9  0D                 	db	13
  1296   007FEA  00                 	db	0
  1297   007FEB                     STR_37:
  1298   007FEB  20                 	db	32
  1299   007FEC  48                 	db	72	;'H'
  1300   007FED  7A                 	db	122	;'z'
  1301   007FEE  0A                 	db	10
  1302   007FEF  0D                 	db	13
  1303   007FF0  00                 	db	0
  1304   007FF1                     STR_9:
  1305   007FF1  25                 	db	37
  1306   007FF2  63                 	db	99	;'c'
  1307   007FF3  0A                 	db	10
  1308   007FF4  0D                 	db	13
  1309   007FF5  00                 	db	0
  1310   007FF6                     STR_8:
  1311   007FF6  0A                 	db	10
  1312   007FF7  0D                 	db	13
  1313   007FF8  3E                 	db	62	;'>'
  1314   007FF9  20                 	db	32
  1315   007FFA  00                 	db	0
  1316   007FFB                     STR_51:
  1317   007FFB  25                 	db	37
  1318   007FFC  63                 	db	99	;'c'
  1319   007FFD  00                 	db	0
  1320   007FFE  00                 	db	0	; dummy byte at the end
  1321   000000                     
  1322                           ; #config settings
  1323                           
  1324                           	psect	cinit
  1325   000F50                     __pcinit:
  1326                           	callstack 0
  1327   000F50                     start_initialization:
  1328                           	callstack 0
  1329   000F50                     __initialization:
  1330                           	callstack 0
  1331                           
  1332                           ; Initialize objects allocated to BANK0 (66 bytes)
  1333                           ; load TBLPTR registers with __pidataBANK0
  1334   000F50  0E3E               	movlw	low __pidataBANK0
  1335   000F52  6EF6               	movwf	tblptrl,c
  1336   000F54  0E10               	movlw	high __pidataBANK0
  1337   000F56  6EF7               	movwf	tblptrh,c
  1338   000F58  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1339   000F5A  6EF8               	movwf	tblptru,c
  1340   000F5C  EE00  F060         	lfsr	0,__pdataBANK0
  1341   000F60  EE10 F042          	lfsr	1,66
  1342   000F64                     copy_data0:
  1343   000F64  0009               	tblrd		*+
  1344   000F66  CFF5 FFEE          	movff	tablat,postinc0
  1345   000F6A  50E5               	movf	postdec1,w,c
  1346   000F6C  50E1               	movf	fsr1l,w,c
  1347   000F6E  E1FA               	bnz	copy_data0
  1348                           
  1349                           ; Initialize objects allocated to COMRAM (1 bytes)
  1350                           ; load TBLPTR registers with __pidataCOMRAM
  1351   000F70  0E68               	movlw	low __pidataCOMRAM
  1352   000F72  6EF6               	movwf	tblptrl,c
  1353   000F74  0E13               	movlw	high __pidataCOMRAM
  1354   000F76  6EF7               	movwf	tblptrh,c
  1355   000F78  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1356   000F7A  6EF8               	movwf	tblptru,c
  1357   000F7C  0009               	tblrd		*+	;fetch initializer
  1358   000F7E  CFF5 F04F          	movff	tablat,__pdataCOMRAM
  1359                           
  1360                           ; Clear objects allocated to BANK0 (41 bytes)
  1361   000F82  EE00  F0D6         	lfsr	0,__pbssBANK0
  1362   000F86  0E29               	movlw	41
  1363   000F88                     clear_0:
  1364   000F88  6AEE               	clrf	postinc0,c
  1365   000F8A  06E8               	decf	wreg,f,c
  1366   000F8C  E1FD               	bnz	clear_0
  1367                           
  1368                           ; Clear objects allocated to COMRAM (13 bytes)
  1369   000F8E  EE00  F042         	lfsr	0,__pbssCOMRAM
  1370   000F92  0E0D               	movlw	13
  1371   000F94                     clear_1:
  1372   000F94  6AEE               	clrf	postinc0,c
  1373   000F96  06E8               	decf	wreg,f,c
  1374   000F98  E1FD               	bnz	clear_1
  1375   000F9A                     end_of_initialization:
  1376                           	callstack 0
  1377   000F9A                     __end_of__initialization:
  1378                           	callstack 0
  1379   000F9A  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1380   000F9C  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1381   000F9E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1382   000FA0  6EF8               	movwf	tblptru,c
  1383   000FA2  0100               	movlb	0
  1384   000FA4  EF31  F000         	goto	_main	;jump to C main() function
  1385                           
  1386                           	psect	bssCOMRAM
  1387   000042                     __pbssCOMRAM:
  1388                           	callstack 0
  1389   000042                     _width:
  1390                           	callstack 0
  1391   000042                     	ds	2
  1392   000044                     _prec:
  1393                           	callstack 0
  1394   000044                     	ds	2
  1395   000046                     _timer1ReloadVal:
  1396                           	callstack 0
  1397   000046                     	ds	2
  1398   000048                     _timer0ReloadVal:
  1399                           	callstack 0
  1400   000048                     	ds	2
  1401   00004A                     _TMR0_InterruptHandler:
  1402                           	callstack 0
  1403   00004A                     	ds	2
  1404   00004C                     _phase:
  1405                           	callstack 0
  1406   00004C                     	ds	1
  1407   00004D                     _gensin:
  1408                           	callstack 0
  1409   00004D                     	ds	1
  1410   00004E                     _eusart1RxLastError:
  1411                           	callstack 0
  1412   00004E                     	ds	1
  1413                           
  1414                           	psect	dataCOMRAM
  1415   00004F                     __pdataCOMRAM:
  1416                           	callstack 0
  1417   00004F                     _amplitude:
  1418                           	callstack 0
  1419   00004F                     	ds	1
  1420                           
  1421                           	psect	bssBANK0
  1422   0000D6                     __pbssBANK0:
  1423                           	callstack 0
  1424   0000D6                     _phaseAccumulator:
  1425                           	callstack 0
  1426   0000D6                     	ds	2
  1427   0000D8                     _EUSART1_ErrorHandler:
  1428                           	callstack 0
  1429   0000D8                     	ds	2
  1430   0000DA                     _EUSART1_OverrunErrorHandler:
  1431                           	callstack 0
  1432   0000DA                     	ds	2
  1433   0000DC                     _EUSART1_FramingErrorHandler:
  1434                           	callstack 0
  1435   0000DC                     	ds	2
  1436   0000DE                     _flags:
  1437                           	callstack 0
  1438   0000DE                     	ds	1
  1439   0000DF                     _dbuf:
  1440                           	callstack 0
  1441   0000DF                     	ds	32
  1442                           
  1443                           	psect	dataBANK0
  1444   000060                     __pdataBANK0:
  1445                           	callstack 0
  1446   000060                     _sin:
  1447                           	callstack 0
  1448   000060                     	ds	64
  1449   0000A0                     _phaseIncrement:
  1450                           	callstack 0
  1451   0000A0                     	ds	2
  1452                           
  1453                           	psect	cstackBANK1
  1454   000100                     __pcstackBANK1:
  1455                           	callstack 0
  1456   000100                     ??_main:
  1457                           
  1458                           ; 1 bytes @ 0x0
  1459   000100                     	ds	2
  1460   000102                     main@history:
  1461                           	callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x2
  1464   000102                     	ds	2
  1465   000104                     main@sweepPeriod:
  1466                           	callstack 0
  1467                           
  1468                           ; 2 bytes @ 0x4
  1469   000104                     	ds	2
  1470   000106                     main@startSweep:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x6
  1474   000106                     	ds	2
  1475   000108                     main@cmd:
  1476                           	callstack 0
  1477                           
  1478                           ; 1 bytes @ 0x8
  1479   000108                     	ds	1
  1480   000109                     main@endSweep:
  1481                           	callstack 0
  1482                           
  1483                           ; 2 bytes @ 0x9
  1484   000109                     	ds	2
  1485   00010B                     main@i:
  1486                           	callstack 0
  1487                           
  1488                           ; 1 bytes @ 0xB
  1489   00010B                     	ds	1
  1490                           
  1491                           	psect	cstackBANK0
  1492   0000A2                     __pcstackBANK0:
  1493                           	callstack 0
  1494   0000A2                     utoa@w:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x0
  1498   0000A2                     	ds	2
  1499   0000A4                     utoa@p:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x2
  1503   0000A4                     	ds	2
  1504   0000A6                     utoa@n:
  1505                           	callstack 0
  1506                           
  1507                           ; 8 bytes @ 0x4
  1508   0000A6                     	ds	8
  1509   0000AE                     utoa@i:
  1510                           	callstack 0
  1511                           
  1512                           ; 2 bytes @ 0xC
  1513   0000AE                     	ds	2
  1514   0000B0                     vfpfcnvrt@fp:
  1515                           	callstack 0
  1516                           
  1517                           ; 2 bytes @ 0xE
  1518   0000B0                     	ds	2
  1519   0000B2                     vfpfcnvrt@fmt:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x10
  1523   0000B2                     	ds	2
  1524   0000B4                     vfpfcnvrt@ap:
  1525                           	callstack 0
  1526                           
  1527                           ; 2 bytes @ 0x12
  1528   0000B4                     	ds	2
  1529   0000B6                     vfpfcnvrt@convarg:
  1530                           	callstack 0
  1531                           
  1532                           ; 8 bytes @ 0x14
  1533   0000B6                     	ds	8
  1534   0000BE                     vfpfcnvrt@c:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x1C
  1538   0000BE                     	ds	1
  1539   0000BF                     vfpfcnvrt@cp:
  1540                           	callstack 0
  1541                           
  1542                           ; 2 bytes @ 0x1D
  1543   0000BF                     	ds	2
  1544   0000C1                     ?_vfprintf:
  1545                           	callstack 0
  1546   0000C1                     vfprintf@fp:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0x1F
  1550   0000C1                     	ds	2
  1551   0000C3                     vfprintf@fmt:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x21
  1555   0000C3                     	ds	2
  1556   0000C5                     vfprintf@ap:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x23
  1560   0000C5                     	ds	2
  1561   0000C7                     vfprintf@cfmt:
  1562                           	callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x25
  1565   0000C7                     	ds	2
  1566   0000C9                     ?_printf:
  1567                           	callstack 0
  1568   0000C9                     printf@fmt:
  1569                           	callstack 0
  1570                           
  1571                           ; 2 bytes @ 0x27
  1572   0000C9                     	ds	4
  1573   0000CD                     printf@ap:
  1574                           	callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x2B
  1577   0000CD                     	ds	2
  1578   0000CF                     ?_read16bit:
  1579                           	callstack 0
  1580   0000CF                     read16bit@maxValue:
  1581                           	callstack 0
  1582                           
  1583                           ; 2 bytes @ 0x2D
  1584   0000CF                     	ds	2
  1585   0000D1                     read16bit@i:
  1586                           	callstack 0
  1587                           
  1588                           ; 1 bytes @ 0x2F
  1589   0000D1                     	ds	1
  1590   0000D2                     read16bit@digit:
  1591                           	callstack 0
  1592                           
  1593                           ; 1 bytes @ 0x30
  1594   0000D2                     	ds	1
  1595   0000D3                     read16bit@character:
  1596                           	callstack 0
  1597                           
  1598                           ; 1 bytes @ 0x31
  1599   0000D3                     	ds	1
  1600   0000D4                     read16bit@numb:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x32
  1604   0000D4                     	ds	2
  1605                           
  1606                           	psect	cstackCOMRAM
  1607   000001                     __pcstackCOMRAM:
  1608                           	callstack 0
  1609   000001                     i2EPWM1_LoadDutyValue@dutyValue:
  1610                           	callstack 0
  1611   000001                     i2TMR0_WriteTimer@timerVal:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x0
  1615   000001                     	ds	2
  1616   000003                     ??i2_EPWM1_LoadDutyValue:
  1617   000003                     
  1618                           ; 1 bytes @ 0x2
  1619   000003                     	ds	2
  1620   000005                     ??_TMR0ISR:
  1621                           
  1622                           ; 1 bytes @ 0x4
  1623   000005                     	ds	4
  1624   000009                     ??_INTERRUPT_InterruptManager:
  1625                           
  1626                           ; 1 bytes @ 0x8
  1627   000009                     	ds	6
  1628   00000F                     ?___wmul:
  1629                           	callstack 0
  1630   00000F                     ?___lmul:
  1631                           	callstack 0
  1632   00000F                     ?___lodiv:
  1633                           	callstack 0
  1634   00000F                     ?___lomod:
  1635                           	callstack 0
  1636   00000F                     EUSART1_Write@txData:
  1637                           	callstack 0
  1638   00000F                     EPWM1_LoadDutyValue@dutyValue:
  1639                           	callstack 0
  1640   00000F                     TMR0_WriteTimer@timerVal:
  1641                           	callstack 0
  1642   00000F                     TMR0_SetInterruptHandler@InterruptHandler:
  1643                           	callstack 0
  1644   00000F                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1645                           	callstack 0
  1646   00000F                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1647                           	callstack 0
  1648   00000F                     EUSART1_SetErrorHandler@interruptHandler:
  1649                           	callstack 0
  1650   00000F                     TMR1_WriteTimer@timerVal:
  1651                           	callstack 0
  1652   00000F                     ___wmul@multiplier:
  1653                           	callstack 0
  1654   00000F                     ___lmul@multiplier:
  1655                           	callstack 0
  1656   00000F                     ___lodiv@dividend:
  1657                           	callstack 0
  1658   00000F                     ___lomod@dividend:
  1659                           	callstack 0
  1660                           
  1661                           ; 8 bytes @ 0xE
  1662   00000F                     	ds	1
  1663   000010                     putch@txData:
  1664                           	callstack 0
  1665                           
  1666                           ; 1 bytes @ 0xF
  1667   000010                     	ds	1
  1668   000011                     ??_EPWM1_LoadDutyValue:
  1669   000011                     ??_TMR0_Initialize:
  1670   000011                     ___wmul@multiplicand:
  1671                           	callstack 0
  1672   000011                     fputc@c:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0x10
  1676   000011                     	ds	2
  1677   000013                     ___wmul@product:
  1678                           	callstack 0
  1679   000013                     fputc@fp:
  1680                           	callstack 0
  1681   000013                     ___lmul@multiplicand:
  1682                           	callstack 0
  1683                           
  1684                           ; 4 bytes @ 0x12
  1685   000013                     	ds	2
  1686   000015                     ??_fputc:
  1687                           
  1688                           ; 1 bytes @ 0x14
  1689   000015                     	ds	2
  1690   000017                     ___lmul@product:
  1691                           	callstack 0
  1692   000017                     ___lodiv@divisor:
  1693                           	callstack 0
  1694   000017                     ___lomod@divisor:
  1695                           	callstack 0
  1696                           
  1697                           ; 8 bytes @ 0x16
  1698   000017                     	ds	3
  1699   00001A                     ctoa@fp:
  1700                           	callstack 0
  1701   00001A                     fputs@s:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x19
  1705   00001A                     	ds	2
  1706   00001C                     ctoa@c:
  1707                           	callstack 0
  1708   00001C                     fputs@fp:
  1709                           	callstack 0
  1710                           
  1711                           ; 2 bytes @ 0x1B
  1712   00001C                     	ds	1
  1713   00001D                     ??_ctoa:
  1714                           
  1715                           ; 1 bytes @ 0x1C
  1716   00001D                     	ds	1
  1717   00001E                     fputs@c:
  1718                           	callstack 0
  1719   00001E                     ctoa@l:
  1720                           	callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x1D
  1723   00001E                     	ds	1
  1724   00001F                     ___lomod@counter:
  1725                           	callstack 0
  1726   00001F                     fputs@i:
  1727                           	callstack 0
  1728   00001F                     ___lodiv@quotient:
  1729                           	callstack 0
  1730                           
  1731                           ; 8 bytes @ 0x1E
  1732   00001F                     	ds	1
  1733   000020                     ctoa@w:
  1734                           	callstack 0
  1735                           
  1736                           ; 2 bytes @ 0x1F
  1737   000020                     	ds	1
  1738   000021                     pad@fp:
  1739                           	callstack 0
  1740                           
  1741                           ; 2 bytes @ 0x20
  1742   000021                     	ds	2
  1743   000023                     pad@buf:
  1744                           	callstack 0
  1745                           
  1746                           ; 2 bytes @ 0x22
  1747   000023                     	ds	2
  1748   000025                     pad@p:
  1749                           	callstack 0
  1750                           
  1751                           ; 2 bytes @ 0x24
  1752   000025                     	ds	2
  1753   000027                     ??_pad:
  1754   000027                     ___lodiv@counter:
  1755                           	callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x26
  1758   000027                     	ds	1
  1759   000028                     pad@i:
  1760                           	callstack 0
  1761                           
  1762                           ; 2 bytes @ 0x27
  1763   000028                     	ds	2
  1764   00002A                     pad@w:
  1765                           	callstack 0
  1766                           
  1767                           ; 2 bytes @ 0x29
  1768   00002A                     	ds	2
  1769   00002C                     utoa@fp:
  1770                           	callstack 0
  1771                           
  1772                           ; 2 bytes @ 0x2B
  1773   00002C                     	ds	2
  1774   00002E                     utoa@d:
  1775                           	callstack 0
  1776                           
  1777                           ; 8 bytes @ 0x2D
  1778   00002E                     	ds	8
  1779   000036                     ??_utoa:
  1780                           
  1781                           ; 1 bytes @ 0x35
  1782   000036                     	ds	8
  1783   00003E                     ??_vfpfcnvrt:
  1784                           
  1785                           ; 1 bytes @ 0x3D
  1786   00003E                     	ds	4
  1787   000042                     
  1788                           ; 1 bytes @ 0x41
  1789 ;;
  1790 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1791 ;;
  1792 ;; *************** function _main *****************
  1793 ;; Defined at:
  1794 ;;		line 56 in file "main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  endSweep        2    9[BANK1 ] unsigned short 
  1799 ;;  startSweep      2    6[BANK1 ] unsigned short 
  1800 ;;  sweepPeriod     2    4[BANK1 ] unsigned short 
  1801 ;;  history         2    2[BANK1 ] unsigned short 
  1802 ;;  i               1   11[BANK1 ] unsigned char 
  1803 ;;  cmd             1    8[BANK1 ] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1813 ;;      Params:         0       0       0       0       0       0       0
  1814 ;;      Locals:         0       0      10       0       0       0       0
  1815 ;;      Temps:          0       0       2       0       0       0       0
  1816 ;;      Totals:         0       0      12       0       0       0       0
  1817 ;;Total ram usage:       12 bytes
  1818 ;; Hardware stack levels required when called: 14
  1819 ;; This function calls:
  1820 ;;		_EPWM1_LoadDutyValue
  1821 ;;		_EUSART1_Read
  1822 ;;		_EUSART1_is_rx_ready
  1823 ;;		_SYSTEM_Initialize
  1824 ;;		_TMR0_SetInterruptHandler
  1825 ;;		_TMR0_WriteTimer
  1826 ;;		_TMR1_HasOverflowOccured
  1827 ;;		_TMR1_WriteTimer
  1828 ;;		_printf
  1829 ;;		_read16bit
  1830 ;; This function is called by:
  1831 ;;		Startup code after reset
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text0
  1836   000062                     __ptext0:
  1837                           	callstack 0
  1838   000062                     _main:
  1839                           	callstack 17
  1840   000062                     
  1841                           ;main.c: 59:     uint8_t i;;main.c: 60:     char cmd;;main.c: 62:     uint16_t startSwee
      +                          p = 1;
  1842   000062  0E00               	movlw	0
  1843   000064  0101               	movlb	1	; () banked
  1844   000066  6F07               	movwf	(main@startSweep+1)& (0+255),b
  1845   000068  0E01               	movlw	1
  1846   00006A  6F06               	movwf	main@startSweep& (0+255),b
  1847                           
  1848                           ;main.c: 63:     uint16_t endSweep = 4096;
  1849   00006C  0E10               	movlw	16
  1850   00006E  6F0A               	movwf	(main@endSweep+1)& (0+255),b
  1851   000070  0E00               	movlw	0
  1852   000072  6F09               	movwf	main@endSweep& (0+255),b
  1853                           
  1854                           ;main.c: 64:     uint16_t sweepPeriod = 4000;
  1855   000074  0E0F               	movlw	15
  1856   000076  6F05               	movwf	(main@sweepPeriod+1)& (0+255),b
  1857   000078  0EA0               	movlw	160
  1858   00007A  6F04               	movwf	main@sweepPeriod& (0+255),b
  1859   00007C                     
  1860                           ; BSR set to: 1
  1861                           ;main.c: 65:     uint16_t history;;main.c: 68:     SYSTEM_Initialize();
  1862   00007C  EC2A  F009         	call	_SYSTEM_Initialize	;wreg free
  1863   000080                     
  1864                           ;main.c: 72:     TMR0_WriteTimer(0x0000);
  1865   000080  0E00               	movlw	0
  1866   000082  6E10               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1867   000084  0E00               	movlw	0
  1868   000086  6E0F               	movwf	TMR0_WriteTimer@timerVal^0,c
  1869   000088  EC93  F009         	call	_TMR0_WriteTimer	;wreg free
  1870   00008C                     
  1871                           ;main.c: 73:     INTCONbits.TMR0IF = 0;
  1872   00008C  94F2               	bcf	242,2,c	;volatile
  1873   00008E                     l345:
  1874   00008E  A4F2               	btfss	242,2,c	;volatile
  1875   000090  EF4C  F000         	goto	u1711
  1876   000094  EF4E  F000         	goto	u1710
  1877   000098                     u1711:
  1878   000098  EF47  F000         	goto	l345
  1879   00009C                     u1710:
  1880   00009C                     
  1881                           ;main.c: 77:     (INTCONbits.GIE = 1);
  1882   00009C  8EF2               	bsf	242,7,c	;volatile
  1883                           
  1884                           ;main.c: 78:     (INTCONbits.PEIE = 1);
  1885   00009E  8CF2               	bsf	242,6,c	;volatile
  1886   0000A0                     
  1887                           ;main.c: 79:     TMR0_SetInterruptHandler(TMR0ISR);
  1888   0000A0  0EEE               	movlw	low _TMR0ISR
  1889   0000A2  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  1890   0000A4  0E0D               	movlw	high _TMR0ISR
  1891   0000A6  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  1892   0000A8  EC98  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  1893   0000AC                     
  1894                           ;main.c: 82:     printf("Lab 12\r\n");
  1895   0000AC  0ECA               	movlw	low STR_1
  1896   0000AE  0100               	movlb	0	; () banked
  1897   0000B0  6FC9               	movwf	printf@fmt& (0+255),b
  1898   0000B2  0E7F               	movlw	high STR_1
  1899   0000B4  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1900   0000B6  ECDB  F008         	call	_printf	;wreg free
  1901   0000BA                     
  1902                           ;main.c: 83:     printf("DDS waveform generator\r\n");
  1903   0000BA  0E92               	movlw	low STR_2
  1904   0000BC  0100               	movlb	0	; () banked
  1905   0000BE  6FC9               	movwf	printf@fmt& (0+255),b
  1906   0000C0  0E7E               	movlw	high STR_2
  1907   0000C2  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1908   0000C4  ECDB  F008         	call	_printf	;wreg free
  1909   0000C8                     
  1910                           ;main.c: 84:     printf("Dev'21 Board wiring\r\n");
  1911   0000C8  0EF3               	movlw	low STR_3
  1912   0000CA  0100               	movlb	0	; () banked
  1913   0000CC  6FC9               	movwf	printf@fmt& (0+255),b
  1914   0000CE  0E7E               	movlw	high STR_3
  1915   0000D0  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1916   0000D2  ECDB  F008         	call	_printf	;wreg free
  1917   0000D6                     
  1918                           ;main.c: 85:     printf("Connect jumper between RC2 and LPF_in.\r\n");
  1919   0000D6  0EDC               	movlw	low STR_4
  1920   0000D8  0100               	movlb	0	; () banked
  1921   0000DA  6FC9               	movwf	printf@fmt& (0+255),b
  1922   0000DC  0E7C               	movlw	high STR_4
  1923   0000DE  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1924   0000E0  ECDB  F008         	call	_printf	;wreg free
  1925   0000E4                     
  1926                           ;main.c: 86:     printf("Connect jumper between LPF_out and AMP_in.\r\n");
  1927   0000E4  0E57               	movlw	low STR_5
  1928   0000E6  0100               	movlb	0	; () banked
  1929   0000E8  6FC9               	movwf	printf@fmt& (0+255),b
  1930   0000EA  0E7C               	movlw	high STR_5
  1931   0000EC  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1932   0000EE  ECDB  F008         	call	_printf	;wreg free
  1933   0000F2                     
  1934                           ;main.c: 87:     printf("Connect Channel 1 scope probe to RC2.\r\n");
  1935   0000F2  0E05               	movlw	low STR_6
  1936   0000F4  0100               	movlb	0	; () banked
  1937   0000F6  6FC9               	movwf	printf@fmt& (0+255),b
  1938   0000F8  0E7D               	movlw	high STR_6
  1939   0000FA  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1940   0000FC  ECDB  F008         	call	_printf	;wreg free
  1941   000100                     
  1942                           ;main.c: 88:     printf("Connect Channel 2 scope probe to LPF_out.\r\n");
  1943   000100  0E84               	movlw	low STR_7
  1944   000102  0100               	movlb	0	; () banked
  1945   000104  6FC9               	movwf	printf@fmt& (0+255),b
  1946   000106  0E7C               	movlw	high STR_7
  1947   000108  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1948   00010A  ECDB  F008         	call	_printf	;wreg free
  1949   00010E                     
  1950                           ;main.c: 91:     printf("\n\r> ");
  1951   00010E  0EF6               	movlw	low STR_8
  1952   000110  0100               	movlb	0	; () banked
  1953   000112  6FC9               	movwf	printf@fmt& (0+255),b
  1954   000114  0E7F               	movlw	high STR_8
  1955   000116  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1956   000118  ECDB  F008         	call	_printf	;wreg free
  1957   00011C                     l2799:
  1958                           
  1959                           ;main.c: 93:     {;main.c: 94:         if ((EUSART1_is_rx_ready()))
  1960   00011C  EC7C  F009         	call	_EUSART1_is_rx_ready	;wreg free
  1961   000120  0900               	iorlw	0
  1962   000122  B4D8               	btfsc	status,2,c
  1963   000124  EF96  F000         	goto	u1721
  1964   000128  EF98  F000         	goto	u1720
  1965   00012C                     u1721:
  1966   00012C  EF8E  F000         	goto	l2799
  1967   000130                     u1720:
  1968   000130                     
  1969                           ;main.c: 95:         {;main.c: 96:             cmd = EUSART1_Read();
  1970   000130  ECEF  F008         	call	_EUSART1_Read	;wreg free
  1971   000134  0101               	movlb	1	; () banked
  1972   000136  6F08               	movwf	main@cmd& (0+255),b
  1973   000138                     
  1974                           ; BSR set to: 1
  1975                           ;main.c: 97:             printf("%c\n\r", cmd);
  1976   000138  0EF1               	movlw	low STR_9
  1977   00013A  0100               	movlb	0	; () banked
  1978   00013C  6FC9               	movwf	printf@fmt& (0+255),b
  1979   00013E  0E7F               	movlw	high STR_9
  1980   000140  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1981   000142  C108  F0CB         	movff	main@cmd,?_printf+2
  1982   000146  6BCC               	clrf	(?_printf+3)& (0+255),b
  1983   000148  ECDB  F008         	call	_printf	;wreg free
  1984                           
  1985                           ;main.c: 98:             switch(cmd)
  1986   00014C  EF8C  F002         	goto	l2903
  1987   000150                     l2805:
  1988                           
  1989                           ; BSR set to: 1
  1990                           ;main.c: 102:                     printf("----------------------------------------------
      +                          ---\n\r");
  1991   000150  0EEF               	movlw	low STR_10
  1992   000152  0100               	movlb	0	; () banked
  1993   000154  6FC9               	movwf	printf@fmt& (0+255),b
  1994   000156  0E7B               	movlw	high STR_10
  1995   000158  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  1996   00015A  ECDB  F008         	call	_printf	;wreg free
  1997                           
  1998                           ;main.c: 103:                     printf("--  Fixed\n\r");
  1999   00015E  0EB2               	movlw	low STR_11
  2000   000160  0100               	movlb	0	; () banked
  2001   000162  6FC9               	movwf	printf@fmt& (0+255),b
  2002   000164  0E7F               	movlw	high STR_11
  2003   000166  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2004   000168  ECDB  F008         	call	_printf	;wreg free
  2005                           
  2006                           ;main.c: 104:                     printf("--      Frequency:  %uHz\n\r"), phaseIncrement
      +                          ;
  2007   00016C  0E5E               	movlw	low STR_12
  2008   00016E  0100               	movlb	0	; () banked
  2009   000170  6FC9               	movwf	printf@fmt& (0+255),b
  2010   000172  0E7E               	movlw	high STR_12
  2011   000174  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2012   000176  ECDB  F008         	call	_printf	;wreg free
  2013                           
  2014                           ;main.c: 105:                     printf("--      Amplitude:  %u/%u\n\r", 255);
  2015   00017A  0EF0               	movlw	low STR_13
  2016   00017C  0100               	movlb	0	; () banked
  2017   00017E  6FC9               	movwf	printf@fmt& (0+255),b
  2018   000180  0E7D               	movlw	high STR_13
  2019   000182  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2020   000184  0E00               	movlw	0
  2021   000186  6FCC               	movwf	(?_printf+3)& (0+255),b
  2022   000188  69CB               	setf	(?_printf+2)& (0+255),b
  2023   00018A  ECDB  F008         	call	_printf	;wreg free
  2024                           
  2025                           ;main.c: 106:                     printf("--  Sweep:\n\r");
  2026   00018E  0EA5               	movlw	low STR_14
  2027   000190  0100               	movlb	0	; () banked
  2028   000192  6FC9               	movwf	printf@fmt& (0+255),b
  2029   000194  0E7F               	movlw	high STR_14
  2030   000196  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2031   000198  ECDB  F008         	call	_printf	;wreg free
  2032                           
  2033                           ;main.c: 107:                     printf("--      Starting:   %uHz\n\r", startSweep);
  2034   00019C  0E43               	movlw	low STR_15
  2035   00019E  0100               	movlb	0	; () banked
  2036   0001A0  6FC9               	movwf	printf@fmt& (0+255),b
  2037   0001A2  0E7E               	movlw	high STR_15
  2038   0001A4  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2039   0001A6  C106  F0CB         	movff	main@startSweep,?_printf+2
  2040   0001AA  C107  F0CC         	movff	main@startSweep+1,?_printf+3
  2041   0001AE  ECDB  F008         	call	_printf	;wreg free
  2042                           
  2043                           ;main.c: 108:                     printf("--      Ending:     %uHz\n\r", endSweep);
  2044   0001B2  0E28               	movlw	low STR_16
  2045   0001B4  0100               	movlb	0	; () banked
  2046   0001B6  6FC9               	movwf	printf@fmt& (0+255),b
  2047   0001B8  0E7E               	movlw	high STR_16
  2048   0001BA  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2049   0001BC  C109  F0CB         	movff	main@endSweep,?_printf+2
  2050   0001C0  C10A  F0CC         	movff	main@endSweep+1,?_printf+3
  2051   0001C4  ECDB  F008         	call	_printf	;wreg free
  2052                           
  2053                           ;main.c: 109:                     printf("--      Duration:   %u second\n\r");
  2054   0001C8  0E94               	movlw	low STR_17
  2055   0001CA  0100               	movlb	0	; () banked
  2056   0001CC  6FC9               	movwf	printf@fmt& (0+255),b
  2057   0001CE  0E7D               	movlw	high STR_17
  2058   0001D0  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2059   0001D2  ECDB  F008         	call	_printf	;wreg free
  2060                           
  2061                           ;main.c: 110:                     printf("----------------------------------------------
      +                          ---\n\r");
  2062   0001D6  0EEF               	movlw	low STR_10
  2063   0001D8  0100               	movlb	0	; () banked
  2064   0001DA  6FC9               	movwf	printf@fmt& (0+255),b
  2065   0001DC  0E7B               	movlw	high STR_10
  2066   0001DE  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2067   0001E0  ECDB  F008         	call	_printf	;wreg free
  2068                           
  2069                           ;main.c: 111:                     printf("?: help menu\n\r");
  2070   0001E4  0E96               	movlw	low STR_19
  2071   0001E6  0100               	movlb	0	; () banked
  2072   0001E8  6FC9               	movwf	printf@fmt& (0+255),b
  2073   0001EA  0E7F               	movlw	high STR_19
  2074   0001EC  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2075   0001EE  ECDB  F008         	call	_printf	;wreg free
  2076                           
  2077                           ;main.c: 112:                     printf("o: k\n\r");
  2078   0001F2  0EE4               	movlw	low STR_20
  2079   0001F4  0100               	movlb	0	; () banked
  2080   0001F6  6FC9               	movwf	printf@fmt& (0+255),b
  2081   0001F8  0E7F               	movlw	high STR_20
  2082   0001FA  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2083   0001FC  ECDB  F008         	call	_printf	;wreg free
  2084                           
  2085                           ;main.c: 113:                     printf("Z: reset processor\n\r");
  2086   000200  0E33               	movlw	low STR_21
  2087   000202  0100               	movlb	0	; () banked
  2088   000204  6FC9               	movwf	printf@fmt& (0+255),b
  2089   000206  0E7F               	movlw	high STR_21
  2090   000208  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2091   00020A  ECDB  F008         	call	_printf	;wreg free
  2092                           
  2093                           ;main.c: 114:                     printf("z: clear the terminal\n\r");
  2094   00020E  0EC4               	movlw	low STR_22
  2095   000210  0100               	movlb	0	; () banked
  2096   000212  6FC9               	movwf	printf@fmt& (0+255),b
  2097   000214  0E7E               	movlw	high STR_22
  2098   000216  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2099   000218  ECDB  F008         	call	_printf	;wreg free
  2100                           
  2101                           ;main.c: 115:                     printf("S/s: Start/stop fixed frequency sine wave\n\r"
      +                          );
  2102   00021C  0EB0               	movlw	low STR_23
  2103   00021E  0100               	movlb	0	; () banked
  2104   000220  6FC9               	movwf	printf@fmt& (0+255),b
  2105   000222  0E7C               	movlw	high STR_23
  2106   000224  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2107   000226  ECDB  F008         	call	_printf	;wreg free
  2108                           
  2109                           ;main.c: 116:                     printf("f: enter Frequency\n\r");
  2110   00022A  0E48               	movlw	low STR_24
  2111   00022C  0100               	movlb	0	; () banked
  2112   00022E  6FC9               	movwf	printf@fmt& (0+255),b
  2113   000230  0E7F               	movlw	high STR_24
  2114   000232  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2115   000234  ECDB  F008         	call	_printf	;wreg free
  2116                           
  2117                           ;main.c: 117:                     printf("A/a: increase/decrease Amplitude select amplit
      +                          ude\n\r");
  2118   000238  0E23               	movlw	low STR_25
  2119   00023A  0100               	movlb	0	; () banked
  2120   00023C  6FC9               	movwf	printf@fmt& (0+255),b
  2121   00023E  0E7C               	movlw	high STR_25
  2122   000240  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2123   000242  ECDB  F008         	call	_printf	;wreg free
  2124                           
  2125                           ;main.c: 118:                     printf("W: sWeep sine wave\n\r");
  2126   000246  0E1E               	movlw	low STR_26
  2127   000248  0100               	movlb	0	; () banked
  2128   00024A  6FC9               	movwf	printf@fmt& (0+255),b
  2129   00024C  0E7F               	movlw	high STR_26
  2130   00024E  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2131   000250  ECDB  F008         	call	_printf	;wreg free
  2132                           
  2133                           ;main.c: 119:                     printf("t: enter sTarting frequency\n\r");
  2134   000254  0ED2               	movlw	low STR_27
  2135   000256  0100               	movlb	0	; () banked
  2136   000258  6FC9               	movwf	printf@fmt& (0+255),b
  2137   00025A  0E7D               	movlw	high STR_27
  2138   00025C  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2139   00025E  ECDB  F008         	call	_printf	;wreg free
  2140                           
  2141                           ;main.c: 120:                     printf("e: enter Ending frequency\n\r");
  2142   000262  0E0C               	movlw	low STR_28
  2143   000264  0100               	movlb	0	; () banked
  2144   000266  6FC9               	movwf	printf@fmt& (0+255),b
  2145   000268  0E7E               	movlw	high STR_28
  2146   00026A  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2147   00026C  ECDB  F008         	call	_printf	;wreg free
  2148                           
  2149                           ;main.c: 121:                     printf("d: enter Duration\n\r");
  2150   000270  0E5D               	movlw	low STR_29
  2151   000272  0100               	movlb	0	; () banked
  2152   000274  6FC9               	movwf	printf@fmt& (0+255),b
  2153   000276  0E7F               	movlw	high STR_29
  2154   000278  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2155   00027A  ECDB  F008         	call	_printf	;wreg free
  2156                           
  2157                           ;main.c: 122:                     printf("----------------------------------------------
      +                          ---\n\r");
  2158   00027E  0EEF               	movlw	low STR_10
  2159   000280  0100               	movlb	0	; () banked
  2160   000282  6FC9               	movwf	printf@fmt& (0+255),b
  2161   000284  0E7B               	movlw	high STR_10
  2162   000286  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2163   000288  ECDB  F008         	call	_printf	;wreg free
  2164                           
  2165                           ;main.c: 123:                     break;
  2166   00028C  EFCA  F002         	goto	l2905
  2167   000290                     l2807:
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;main.c: 126:                     printf("o:  ok\r\n");
  2171   000290  0ED3               	movlw	low STR_31
  2172   000292  0100               	movlb	0	; () banked
  2173   000294  6FC9               	movwf	printf@fmt& (0+255),b
  2174   000296  0E7F               	movlw	high STR_31
  2175   000298  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2176   00029A  ECDB  F008         	call	_printf	;wreg free
  2177                           
  2178                           ;main.c: 127:                     break;
  2179   00029E  EFCA  F002         	goto	l2905
  2180   0002A2                     l2809:
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;main.c: 130:                     for (i = 0; i < 40; i++) printf("\n");
  2184   0002A2  0E00               	movlw	0
  2185   0002A4  6F0B               	movwf	main@i& (0+255),b
  2186   0002A6                     l2815:
  2187                           
  2188                           ; BSR set to: 1
  2189   0002A6  0E2B               	movlw	low (STR_6+38)
  2190   0002A8  0100               	movlb	0	; () banked
  2191   0002AA  6FC9               	movwf	printf@fmt& (0+255),b
  2192   0002AC  0E7D               	movlw	high (STR_6+38)
  2193   0002AE  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2194   0002B0  ECDB  F008         	call	_printf	;wreg free
  2195   0002B4  0101               	movlb	1	; () banked
  2196   0002B6  2B0B               	incf	main@i& (0+255),f,b
  2197   0002B8                     
  2198                           ; BSR set to: 1
  2199   0002B8  0E27               	movlw	39
  2200   0002BA  650B               	cpfsgt	main@i& (0+255),b
  2201   0002BC  EF62  F001         	goto	u1731
  2202   0002C0  EF64  F001         	goto	u1730
  2203   0002C4                     u1731:
  2204   0002C4  EF53  F001         	goto	l2815
  2205   0002C8                     u1730:
  2206   0002C8                     
  2207                           ; BSR set to: 1
  2208   0002C8  00FF               	reset		;# 
  2209                           
  2210                           ;main.c: 132:                     break;
  2211   0002CA  EFCA  F002         	goto	l2905
  2212   0002CE                     l2821:
  2213                           
  2214                           ; BSR set to: 1
  2215                           ;main.c: 135:                     for (i = 0; i < 40; i++) printf("\n");
  2216   0002CE  0E00               	movlw	0
  2217   0002D0  6F0B               	movwf	main@i& (0+255),b
  2218   0002D2                     l2827:
  2219                           
  2220                           ; BSR set to: 1
  2221   0002D2  0E2B               	movlw	low (STR_6+38)
  2222   0002D4  0100               	movlb	0	; () banked
  2223   0002D6  6FC9               	movwf	printf@fmt& (0+255),b
  2224   0002D8  0E7D               	movlw	high (STR_6+38)
  2225   0002DA  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2226   0002DC  ECDB  F008         	call	_printf	;wreg free
  2227   0002E0  0101               	movlb	1	; () banked
  2228   0002E2  2B0B               	incf	main@i& (0+255),f,b
  2229   0002E4                     
  2230                           ; BSR set to: 1
  2231   0002E4  0E27               	movlw	39
  2232   0002E6  650B               	cpfsgt	main@i& (0+255),b
  2233   0002E8  EF78  F001         	goto	u1741
  2234   0002EC  EF7A  F001         	goto	u1740
  2235   0002F0                     u1741:
  2236   0002F0  EF69  F001         	goto	l2827
  2237   0002F4                     u1740:
  2238   0002F4  EFCA  F002         	goto	l2905
  2239   0002F8                     l2833:
  2240                           
  2241                           ; BSR set to: 1
  2242                           ;main.c: 140:                     gensin = 1;
  2243   0002F8  0E01               	movlw	1
  2244   0002FA  6E4D               	movwf	_gensin^0,c
  2245   0002FC                     
  2246                           ; BSR set to: 1
  2247                           ;main.c: 141:                     printf("generating sin wave\n\r");
  2248   0002FC  0EBC               	movlw	low (STR_35+8)
  2249   0002FE  0100               	movlb	0	; () banked
  2250   000300  6FC9               	movwf	printf@fmt& (0+255),b
  2251   000302  0E7D               	movlw	high (STR_35+8)
  2252   000304  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2253   000306  ECDB  F008         	call	_printf	;wreg free
  2254                           
  2255                           ;main.c: 142:                     break;
  2256   00030A  EFCA  F002         	goto	l2905
  2257   00030E                     l2837:
  2258                           
  2259                           ; BSR set to: 1
  2260                           ;main.c: 144:                     gensin = 0;
  2261   00030E  0E00               	movlw	0
  2262   000310  6E4D               	movwf	_gensin^0,c
  2263   000312                     
  2264                           ; BSR set to: 1
  2265                           ;main.c: 145:                     printf("stopped generating sin wave\n\r");
  2266   000312  0EB4               	movlw	low STR_35
  2267   000314  0100               	movlb	0	; () banked
  2268   000316  6FC9               	movwf	printf@fmt& (0+255),b
  2269   000318  0E7D               	movlw	high STR_35
  2270   00031A  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2271   00031C  ECDB  F008         	call	_printf	;wreg free
  2272                           
  2273                           ;main.c: 146:                     break;
  2274   000320  EFCA  F002         	goto	l2905
  2275   000324                     l2841:
  2276                           
  2277                           ; BSR set to: 1
  2278                           ;main.c: 148:                     printf("enter a frequency\n\r");
  2279   000324  0E71               	movlw	low STR_36
  2280   000326  0100               	movlb	0	; () banked
  2281   000328  6FC9               	movwf	printf@fmt& (0+255),b
  2282   00032A  0E7F               	movlw	high STR_36
  2283   00032C  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2284   00032E  ECDB  F008         	call	_printf	;wreg free
  2285   000332                     
  2286                           ;main.c: 149:                     phaseIncrement = read16bit(32767) << 2;
  2287   000332  0E7F               	movlw	127
  2288   000334  0100               	movlb	0	; () banked
  2289   000336  6FD0               	movwf	(read16bit@maxValue+1)& (0+255),b
  2290   000338  69CF               	setf	read16bit@maxValue& (0+255),b
  2291   00033A  ECA0  F004         	call	_read16bit	;wreg free
  2292   00033E  0100               	movlb	0	; () banked
  2293   000340  90D8               	bcf	status,0,c
  2294   000342  37CF               	rlcf	?_read16bit& (0+255),f,b
  2295   000344  37D0               	rlcf	(?_read16bit+1)& (0+255),f,b
  2296   000346  90D8               	bcf	status,0,c
  2297   000348  37CF               	rlcf	?_read16bit& (0+255),f,b
  2298   00034A  37D0               	rlcf	(?_read16bit+1)& (0+255),f,b
  2299   00034C  C0CF  F0A0         	movff	?_read16bit,_phaseIncrement
  2300   000350  C0D0  F0A1         	movff	?_read16bit+1,_phaseIncrement+1
  2301   000354                     
  2302                           ; BSR set to: 0
  2303                           ;main.c: 150:                     printf(" Hz\n\r");
  2304   000354  0EEB               	movlw	low STR_37
  2305   000356  6FC9               	movwf	printf@fmt& (0+255),b
  2306   000358  0E7F               	movlw	high STR_37
  2307   00035A  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2308   00035C  ECDB  F008         	call	_printf	;wreg free
  2309                           
  2310                           ;main.c: 151:                     break;
  2311   000360  EFCA  F002         	goto	l2905
  2312   000364                     l2847:
  2313                           
  2314                           ; BSR set to: 1
  2315                           ;main.c: 153:                     printf("enter an amplitude\n\r");
  2316   000364  0E09               	movlw	low STR_38
  2317   000366  0100               	movlb	0	; () banked
  2318   000368  6FC9               	movwf	printf@fmt& (0+255),b
  2319   00036A  0E7F               	movlw	high STR_38
  2320   00036C  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2321   00036E  ECDB  F008         	call	_printf	;wreg free
  2322   000372                     
  2323                           ;main.c: 154:                     amplitude = read16bit(16);
  2324   000372  0E00               	movlw	0
  2325   000374  0100               	movlb	0	; () banked
  2326   000376  6FD0               	movwf	(read16bit@maxValue+1)& (0+255),b
  2327   000378  0E10               	movlw	16
  2328   00037A  6FCF               	movwf	read16bit@maxValue& (0+255),b
  2329   00037C  ECA0  F004         	call	_read16bit	;wreg free
  2330   000380  0100               	movlb	0	; () banked
  2331   000382  51CF               	movf	?_read16bit& (0+255),w,b
  2332   000384  6E4F               	movwf	_amplitude^0,c
  2333   000386                     
  2334                           ; BSR set to: 0
  2335                           ;main.c: 155:                     printf("/16 steps\n\r");
  2336   000386  0EBE               	movlw	low STR_39
  2337   000388  6FC9               	movwf	printf@fmt& (0+255),b
  2338   00038A  0E7F               	movlw	high STR_39
  2339   00038C  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2340   00038E  ECDB  F008         	call	_printf	;wreg free
  2341                           
  2342                           ;main.c: 156:                     break;
  2343   000392  EFCA  F002         	goto	l2905
  2344   000396                     l364:
  2345                           
  2346                           ; BSR set to: 1
  2347                           ;main.c: 160:                     history = phaseIncrement;
  2348   000396  C0A0  F102         	movff	_phaseIncrement,main@history
  2349   00039A  C0A1  F103         	movff	_phaseIncrement+1,main@history+1
  2350   00039E                     
  2351                           ; BSR set to: 1
  2352                           ;main.c: 161:                     phaseAccumulator = 0;
  2353   00039E  0E00               	movlw	0
  2354   0003A0  0100               	movlb	0	; () banked
  2355   0003A2  6FD7               	movwf	(_phaseAccumulator+1)& (0+255),b
  2356   0003A4  0E00               	movlw	0
  2357   0003A6  6FD6               	movwf	_phaseAccumulator& (0+255),b
  2358   0003A8                     
  2359                           ; BSR set to: 0
  2360                           ;main.c: 162:                     printf("generating sweeping wave");
  2361   0003A8  0EAB               	movlw	low STR_40
  2362   0003AA  6FC9               	movwf	printf@fmt& (0+255),b
  2363   0003AC  0E7E               	movlw	high STR_40
  2364   0003AE  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2365   0003B0  ECDB  F008         	call	_printf	;wreg free
  2366   0003B4                     
  2367                           ;main.c: 163:                     printf("press any key to exit.\r\n");
  2368   0003B4  0E79               	movlw	low STR_41
  2369   0003B6  0100               	movlb	0	; () banked
  2370   0003B8  6FC9               	movwf	printf@fmt& (0+255),b
  2371   0003BA  0E7E               	movlw	high STR_41
  2372   0003BC  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2373   0003BE  ECDB  F008         	call	_printf	;wreg free
  2374                           
  2375                           ;main.c: 164:                     while ((EUSART1_is_rx_ready()) == 0)
  2376   0003C2  EF15  F002         	goto	l2873
  2377   0003C6                     l366:
  2378                           
  2379                           ;main.c: 165:                     {;main.c: 166:                         for (phaseIncre
      +                          ment = startSweep; phaseIncrement < endSweep; phaseIncrement++)
  2380   0003C6  C106  F0A0         	movff	main@startSweep,_phaseIncrement
  2381   0003CA  C107  F0A1         	movff	main@startSweep+1,_phaseIncrement+1
  2382   0003CE  EF06  F002         	goto	l2871
  2383   0003D2                     l2859:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;main.c: 167:                         {;main.c: 168:                             TMR1_Wr
      +                          iteTimer(0x00 - sweepPeriod);
  2387   0003D2  0101               	movlb	1	; () banked
  2388   0003D4  5104               	movf	main@sweepPeriod& (0+255),w,b
  2389   0003D6  0800               	sublw	0
  2390   0003D8  6E0F               	movwf	TMR1_WriteTimer@timerVal^0,c
  2391   0003DA  5105               	movf	(main@sweepPeriod+1)& (0+255),w,b
  2392   0003DC  A0D8               	btfss	status,0,c
  2393   0003DE  2AE8               	incf	wreg,f,c
  2394   0003E0  0800               	sublw	0
  2395   0003E2  6E10               	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2396   0003E4  EC03  F009         	call	_TMR1_WriteTimer	;wreg free
  2397   0003E8                     
  2398                           ;main.c: 169:                             PIR1bits.TMR1IF = 0;
  2399   0003E8  909E               	bcf	158,0,c	;volatile
  2400   0003EA                     
  2401                           ;main.c: 171:                             gensin = 1;
  2402   0003EA  0E01               	movlw	1
  2403   0003EC  6E4D               	movwf	_gensin^0,c
  2404   0003EE                     l2865:
  2405   0003EE  EC72  F009         	call	_TMR1_HasOverflowOccured	;wreg free
  2406   0003F2  0900               	iorlw	0
  2407   0003F4  B4D8               	btfsc	status,2,c
  2408   0003F6  EFFF  F001         	goto	u1751
  2409   0003FA  EF01  F002         	goto	u1750
  2410   0003FE                     u1751:
  2411   0003FE  EFF7  F001         	goto	l2865
  2412   000402                     u1750:
  2413   000402                     
  2414                           ;main.c: 173:                             gensin = 0;
  2415   000402  0E00               	movlw	0
  2416   000404  6E4D               	movwf	_gensin^0,c
  2417   000406                     
  2418                           ;main.c: 174:                         }
  2419   000406  0100               	movlb	0	; () banked
  2420   000408  4BA0               	infsnz	_phaseIncrement& (0+255),f,b
  2421   00040A  2BA1               	incf	(_phaseIncrement+1)& (0+255),f,b
  2422   00040C                     l2871:
  2423   00040C  0101               	movlb	1	; () banked
  2424   00040E  5109               	movf	main@endSweep& (0+255),w,b
  2425   000410  0100               	movlb	0	; () banked
  2426   000412  5DA0               	subwf	_phaseIncrement& (0+255),w,b
  2427   000414  0101               	movlb	1	; () banked
  2428   000416  510A               	movf	(main@endSweep+1)& (0+255),w,b
  2429   000418  0100               	movlb	0	; () banked
  2430   00041A  59A1               	subwfb	(_phaseIncrement+1)& (0+255),w,b
  2431   00041C  A0D8               	btfss	status,0,c
  2432   00041E  EF13  F002         	goto	u1761
  2433   000422  EF15  F002         	goto	u1760
  2434   000426                     u1761:
  2435   000426  EFE9  F001         	goto	l2859
  2436   00042A                     u1760:
  2437   00042A                     l2873:
  2438                           
  2439                           ;main.c: 164:                     while ((EUSART1_is_rx_ready()) == 0)
  2440   00042A  EC7C  F009         	call	_EUSART1_is_rx_ready	;wreg free
  2441   00042E  0900               	iorlw	0
  2442   000430  B4D8               	btfsc	status,2,c
  2443   000432  EF1D  F002         	goto	u1771
  2444   000436  EF1F  F002         	goto	u1770
  2445   00043A                     u1771:
  2446   00043A  EFE3  F001         	goto	l366
  2447   00043E                     u1770:
  2448   00043E                     
  2449                           ;main.c: 176:                     (void) EUSART1_Read();
  2450   00043E  ECEF  F008         	call	_EUSART1_Read	;wreg free
  2451   000442                     
  2452                           ;main.c: 177:                     phaseIncrement = history;
  2453   000442  C102  F0A0         	movff	main@history,_phaseIncrement
  2454   000446  C103  F0A1         	movff	main@history+1,_phaseIncrement+1
  2455   00044A                     
  2456                           ;main.c: 178:                     printf("stopped generating sweeping wave\r\n");
  2457   00044A  0E2D               	movlw	low STR_42
  2458   00044C  0100               	movlb	0	; () banked
  2459   00044E  6FC9               	movwf	printf@fmt& (0+255),b
  2460   000450  0E7D               	movlw	high STR_42
  2461   000452  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2462   000454  ECDB  F008         	call	_printf	;wreg free
  2463   000458                     
  2464                           ;main.c: 179:                     EPWM1_LoadDutyValue(0x80);
  2465   000458  0E00               	movlw	0
  2466   00045A  6E10               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2467   00045C  0E80               	movlw	128
  2468   00045E  6E0F               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2469   000460  EC96  F008         	call	_EPWM1_LoadDutyValue	;wreg free
  2470                           
  2471                           ;main.c: 180:                     break;
  2472   000464  EFCA  F002         	goto	l2905
  2473   000468                     l2883:
  2474                           
  2475                           ; BSR set to: 1
  2476                           ;main.c: 182:                     printf("enter a starting sweep frequency\n\r");
  2477   000468  0E50               	movlw	low STR_43
  2478   00046A  0100               	movlb	0	; () banked
  2479   00046C  6FC9               	movwf	printf@fmt& (0+255),b
  2480   00046E  0E7D               	movlw	high STR_43
  2481   000470  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2482   000472  ECDB  F008         	call	_printf	;wreg free
  2483   000476                     
  2484                           ;main.c: 183:                     startSweep = read16bit(endSweep);
  2485   000476  C109  F0CF         	movff	main@endSweep,read16bit@maxValue
  2486   00047A  C10A  F0D0         	movff	main@endSweep+1,read16bit@maxValue+1
  2487   00047E  ECA0  F004         	call	_read16bit	;wreg free
  2488   000482  C0CF  F106         	movff	?_read16bit,main@startSweep
  2489   000486  C0D0  F107         	movff	?_read16bit+1,main@startSweep+1
  2490   00048A                     
  2491                           ;main.c: 184:                     printf(" Hz\n\r");
  2492   00048A  0EEB               	movlw	low STR_37
  2493   00048C  0100               	movlb	0	; () banked
  2494   00048E  6FC9               	movwf	printf@fmt& (0+255),b
  2495   000490  0E7F               	movlw	high STR_37
  2496   000492  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2497   000494  ECDB  F008         	call	_printf	;wreg free
  2498   000498                     l2889:
  2499                           
  2500                           ;main.c: 186:                     printf("enter a ending sweep frequency\n\r");
  2501   000498  0E73               	movlw	low STR_45
  2502   00049A  0100               	movlb	0	; () banked
  2503   00049C  6FC9               	movwf	printf@fmt& (0+255),b
  2504   00049E  0E7D               	movlw	high STR_45
  2505   0004A0  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2506   0004A2  ECDB  F008         	call	_printf	;wreg free
  2507   0004A6                     
  2508                           ;main.c: 187:                     endSweep = read16bit(65535);
  2509   0004A6  0EFF               	movlw	255
  2510   0004A8  0100               	movlb	0	; () banked
  2511   0004AA  6FD0               	movwf	(read16bit@maxValue+1)& (0+255),b
  2512   0004AC  69CF               	setf	read16bit@maxValue& (0+255),b
  2513   0004AE  ECA0  F004         	call	_read16bit	;wreg free
  2514   0004B2  C0CF  F109         	movff	?_read16bit,main@endSweep
  2515   0004B6  C0D0  F10A         	movff	?_read16bit+1,main@endSweep+1
  2516                           
  2517                           ;main.c: 188:                     printf(" Hz\n\r");
  2518   0004BA  0EEB               	movlw	low STR_37
  2519   0004BC  0100               	movlb	0	; () banked
  2520   0004BE  6FC9               	movwf	printf@fmt& (0+255),b
  2521   0004C0  0E7F               	movlw	high STR_37
  2522   0004C2  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2523   0004C4  ECDB  F008         	call	_printf	;wreg free
  2524                           
  2525                           ;main.c: 189:                     break;
  2526   0004C8  EFCA  F002         	goto	l2905
  2527   0004CC                     l2893:
  2528                           
  2529                           ; BSR set to: 1
  2530                           ;main.c: 191:                     printf("enter a sweep period\n\r");
  2531   0004CC  0EDC               	movlw	low STR_47
  2532   0004CE  0100               	movlb	0	; () banked
  2533   0004D0  6FC9               	movwf	printf@fmt& (0+255),b
  2534   0004D2  0E7E               	movlw	high STR_47
  2535   0004D4  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2536   0004D6  ECDB  F008         	call	_printf	;wreg free
  2537   0004DA                     
  2538                           ;main.c: 192:                     sweepPeriod = read16bit(255);
  2539   0004DA  0E00               	movlw	0
  2540   0004DC  0100               	movlb	0	; () banked
  2541   0004DE  6FD0               	movwf	(read16bit@maxValue+1)& (0+255),b
  2542   0004E0  69CF               	setf	read16bit@maxValue& (0+255),b
  2543   0004E2  ECA0  F004         	call	_read16bit	;wreg free
  2544   0004E6  C0CF  F104         	movff	?_read16bit,main@sweepPeriod
  2545   0004EA  C0D0  F105         	movff	?_read16bit+1,main@sweepPeriod+1
  2546   0004EE                     
  2547                           ;main.c: 193:                     printf(" tmrs\n\r");
  2548   0004EE  0EDC               	movlw	low STR_48
  2549   0004F0  0100               	movlb	0	; () banked
  2550   0004F2  6FC9               	movwf	printf@fmt& (0+255),b
  2551   0004F4  0E7F               	movlw	high STR_48
  2552   0004F6  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2553   0004F8  ECDB  F008         	call	_printf	;wreg free
  2554                           
  2555                           ;main.c: 194:                     break;
  2556   0004FC  EFCA  F002         	goto	l2905
  2557   000500                     l2899:
  2558                           
  2559                           ; BSR set to: 1
  2560                           ;main.c: 197:                     printf("unknown key %c\r\n", cmd);
  2561   000500  0E85               	movlw	low STR_49
  2562   000502  0100               	movlb	0	; () banked
  2563   000504  6FC9               	movwf	printf@fmt& (0+255),b
  2564   000506  0E7F               	movlw	high STR_49
  2565   000508  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2566   00050A  C108  F0CB         	movff	main@cmd,?_printf+2
  2567   00050E  6BCC               	clrf	(?_printf+3)& (0+255),b
  2568   000510  ECDB  F008         	call	_printf	;wreg free
  2569                           
  2570                           ;main.c: 198:                     break;
  2571   000514  EFCA  F002         	goto	l2905
  2572   000518                     l2903:
  2573   000518  0101               	movlb	1	; () banked
  2574   00051A  5108               	movf	main@cmd& (0+255),w,b
  2575   00051C  6F00               	movwf	??_main& (0+255),b
  2576   00051E  6B01               	clrf	(??_main+1)& (0+255),b
  2577                           
  2578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2579                           ; Switch size 1, requested type "simple"
  2580                           ; Number of cases is 1, Range of values is 0 to 0
  2581                           ; switch strategies available:
  2582                           ; Name         Instructions Cycles
  2583                           ; simple_byte            4     3 (average)
  2584                           ;	Chosen strategy is simple_byte
  2585   000520  5101               	movf	(??_main+1)& (0+255),w,b
  2586   000522  0A00               	xorlw	0	; case 0
  2587   000524  B4D8               	btfsc	status,2,c
  2588   000526  EF97  F002         	goto	l2963
  2589   00052A  EF80  F002         	goto	l2899
  2590   00052E                     l2963:
  2591                           
  2592                           ; BSR set to: 1
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 12, Range of values is 63 to 122
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte           37    19 (average)
  2598                           ;	Chosen strategy is simple_byte
  2599   00052E  5100               	movf	??_main& (0+255),w,b
  2600   000530  0A3F               	xorlw	63	; case 63
  2601   000532  B4D8               	btfsc	status,2,c
  2602   000534  EFA8  F000         	goto	l2805
  2603   000538  0A6C               	xorlw	108	; case 83
  2604   00053A  B4D8               	btfsc	status,2,c
  2605   00053C  EF7C  F001         	goto	l2833
  2606   000540  0A09               	xorlw	9	; case 90
  2607   000542  B4D8               	btfsc	status,2,c
  2608   000544  EF51  F001         	goto	l2809
  2609   000548  0A3B               	xorlw	59	; case 97
  2610   00054A  B4D8               	btfsc	status,2,c
  2611   00054C  EFB2  F001         	goto	l2847
  2612   000550  0A05               	xorlw	5	; case 100
  2613   000552  B4D8               	btfsc	status,2,c
  2614   000554  EF66  F002         	goto	l2893
  2615   000558  0A01               	xorlw	1	; case 101
  2616   00055A  B4D8               	btfsc	status,2,c
  2617   00055C  EF4C  F002         	goto	l2889
  2618   000560  0A03               	xorlw	3	; case 102
  2619   000562  B4D8               	btfsc	status,2,c
  2620   000564  EF92  F001         	goto	l2841
  2621   000568  0A09               	xorlw	9	; case 111
  2622   00056A  B4D8               	btfsc	status,2,c
  2623   00056C  EF48  F001         	goto	l2807
  2624   000570  0A1C               	xorlw	28	; case 115
  2625   000572  B4D8               	btfsc	status,2,c
  2626   000574  EF87  F001         	goto	l2837
  2627   000578  0A07               	xorlw	7	; case 116
  2628   00057A  B4D8               	btfsc	status,2,c
  2629   00057C  EF34  F002         	goto	l2883
  2630   000580  0A03               	xorlw	3	; case 119
  2631   000582  B4D8               	btfsc	status,2,c
  2632   000584  EFCB  F001         	goto	l364
  2633   000588  0A0D               	xorlw	13	; case 122
  2634   00058A  B4D8               	btfsc	status,2,c
  2635   00058C  EF67  F001         	goto	l2821
  2636   000590  EF80  F002         	goto	l2899
  2637   000594                     l2905:
  2638                           
  2639                           ;main.c: 200:             printf("> ");
  2640   000594  0EF8               	movlw	low (STR_8+2)
  2641   000596  0100               	movlb	0	; () banked
  2642   000598  6FC9               	movwf	printf@fmt& (0+255),b
  2643   00059A  0E7F               	movlw	high (STR_8+2)
  2644   00059C  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2645   00059E  ECDB  F008         	call	_printf	;wreg free
  2646   0005A2  EF8E  F000         	goto	l2799
  2647   0005A6  EF2F  F000         	goto	start
  2648   0005AA                     __end_of_main:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _read16bit *****************
  2652 ;; Defined at:
  2653 ;;		line 224 in file "main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  maxValue        2   45[BANK0 ] unsigned short 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  numb            2   50[BANK0 ] unsigned short 
  2658 ;;  character       1   49[BANK0 ] unsigned char 
  2659 ;;  digit           1   48[BANK0 ] unsigned char 
  2660 ;;  i               1   47[BANK0 ] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  2   45[BANK0 ] unsigned short 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2670 ;;      Params:         0       2       0       0       0       0       0
  2671 ;;      Locals:         0       5       0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0
  2673 ;;      Totals:         0       7       0       0       0       0       0
  2674 ;;Total ram usage:        7 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 13
  2677 ;; This function calls:
  2678 ;;		_EUSART1_Read
  2679 ;;		___lmul
  2680 ;;		___wmul
  2681 ;;		_printf
  2682 ;; This function is called by:
  2683 ;;		_main
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text1
  2688   000940                     __ptext1:
  2689                           	callstack 0
  2690   000940                     _read16bit:
  2691                           	callstack 17
  2692   000940                     
  2693                           ;main.c: 224: uint16_t read16bit(uint16_t maxValue);main.c: 225: {;main.c: 227:     uint
      +                          16_t numb = 0;
  2694   000940  0E00               	movlw	0
  2695   000942  0100               	movlb	0	; () banked
  2696   000944  6FD5               	movwf	(read16bit@numb+1)& (0+255),b
  2697   000946  0E00               	movlw	0
  2698   000948  6FD4               	movwf	read16bit@numb& (0+255),b
  2699                           
  2700                           ;main.c: 229:     uint8_t character = 0;
  2701   00094A  0E00               	movlw	0
  2702   00094C  6FD3               	movwf	read16bit@character& (0+255),b
  2703                           
  2704                           ;main.c: 230:     uint8_t i = 0;
  2705   00094E  0E00               	movlw	0
  2706   000950  6FD1               	movwf	read16bit@i& (0+255),b
  2707                           
  2708                           ;main.c: 232:     while(character != '\r')
  2709   000952  EF71  F005         	goto	l2765
  2710   000956                     l2727:
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;main.c: 233:     {;main.c: 235:         character = EUSART1_Read();
  2714   000956  ECEF  F008         	call	_EUSART1_Read	;wreg free
  2715   00095A  0100               	movlb	0	; () banked
  2716   00095C  6FD3               	movwf	read16bit@character& (0+255),b
  2717   00095E                     
  2718                           ; BSR set to: 0
  2719                           ;main.c: 237:         if(character == 127)
  2720   00095E  0E7F               	movlw	127
  2721   000960  19D3               	xorwf	read16bit@character& (0+255),w,b
  2722   000962  A4D8               	btfss	status,2,c
  2723   000964  EFB6  F004         	goto	u1591
  2724   000968  EFB8  F004         	goto	u1590
  2725   00096C                     u1591:
  2726   00096C  EFF6  F004         	goto	l2741
  2727   000970                     u1590:
  2728   000970                     
  2729                           ; BSR set to: 0
  2730                           ;main.c: 238:         {;main.c: 239:             printf("%c", character);
  2731   000970  0EFB               	movlw	low STR_51
  2732   000972  6FC9               	movwf	printf@fmt& (0+255),b
  2733   000974  0E7F               	movlw	high STR_51
  2734   000976  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2735   000978  C0D3  F0CB         	movff	read16bit@character,?_printf+2
  2736   00097C  6BCC               	clrf	(?_printf+3)& (0+255),b
  2737   00097E  ECDB  F008         	call	_printf	;wreg free
  2738   000982                     
  2739                           ;main.c: 240:             if(numb > 0) numb = (((uint32_t)numb) * 6554) >> 16;
  2740   000982  0100               	movlb	0	; () banked
  2741   000984  51D4               	movf	read16bit@numb& (0+255),w,b
  2742   000986  11D5               	iorwf	(read16bit@numb+1)& (0+255),w,b
  2743   000988  B4D8               	btfsc	status,2,c
  2744   00098A  EFC9  F004         	goto	u1601
  2745   00098E  EFCB  F004         	goto	u1600
  2746   000992                     u1601:
  2747   000992  EFEA  F004         	goto	l2737
  2748   000996                     u1600:
  2749   000996                     
  2750                           ; BSR set to: 0
  2751   000996  C0D4  F00F         	movff	read16bit@numb,___lmul@multiplier
  2752   00099A  C0D5  F010         	movff	read16bit@numb+1,___lmul@multiplier+1
  2753   00099E  6A11               	clrf	(___lmul@multiplier+2)^0,c
  2754   0009A0  6A12               	clrf	(___lmul@multiplier+3)^0,c
  2755   0009A2  0E9A               	movlw	154
  2756   0009A4  6E13               	movwf	___lmul@multiplicand^0,c
  2757   0009A6  0E19               	movlw	25
  2758   0009A8  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  2759   0009AA  0E00               	movlw	0
  2760   0009AC  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  2761   0009AE  0E00               	movlw	0
  2762   0009B0  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  2763   0009B2  EC73  F007         	call	___lmul	;wreg free
  2764   0009B6  0E11               	movlw	17
  2765   0009B8  EFE3  F004         	goto	u1610
  2766   0009BC                     u1615:
  2767   0009BC  90D8               	bcf	status,0,c
  2768   0009BE  3212               	rrcf	(?___lmul+3)^0,f,c
  2769   0009C0  3211               	rrcf	(?___lmul+2)^0,f,c
  2770   0009C2  3210               	rrcf	(?___lmul+1)^0,f,c
  2771   0009C4  320F               	rrcf	?___lmul^0,f,c
  2772   0009C6                     u1610:
  2773   0009C6  2EE8               	decfsz	wreg,f,c
  2774   0009C8  EFDE  F004         	goto	u1615
  2775   0009CC  C00F  F0D4         	movff	?___lmul,read16bit@numb
  2776   0009D0  C010  F0D5         	movff	?___lmul+1,read16bit@numb+1
  2777   0009D4                     l2737:
  2778                           
  2779                           ;main.c: 241:             if(i > 0) i--;
  2780   0009D4  0100               	movlb	0	; () banked
  2781   0009D6  51D1               	movf	read16bit@i& (0+255),w,b
  2782   0009D8  B4D8               	btfsc	status,2,c
  2783   0009DA  EFF1  F004         	goto	u1621
  2784   0009DE  EFF3  F004         	goto	u1620
  2785   0009E2                     u1621:
  2786   0009E2  EF71  F005         	goto	l2765
  2787   0009E6                     u1620:
  2788   0009E6                     
  2789                           ; BSR set to: 0
  2790   0009E6  07D1               	decf	read16bit@i& (0+255),f,b
  2791   0009E8  EF71  F005         	goto	l2765
  2792   0009EC                     l2741:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;main.c: 245:         digit = character - '0';
  2796   0009EC  51D3               	movf	read16bit@character& (0+255),w,b
  2797   0009EE  0FD0               	addlw	208
  2798   0009F0  6FD2               	movwf	read16bit@digit& (0+255),b
  2799                           
  2800                           ;main.c: 246:         if((digit > 9) || (numb * 10 + digit > maxValue)) continue;
  2801   0009F2  0E0A               	movlw	10
  2802   0009F4  61D2               	cpfslt	read16bit@digit& (0+255),b
  2803   0009F6  EFFF  F004         	goto	u1631
  2804   0009FA  EF01  F005         	goto	u1630
  2805   0009FE                     u1631:
  2806   0009FE  EF71  F005         	goto	l2765
  2807   000A02                     u1630:
  2808   000A02                     
  2809                           ; BSR set to: 0
  2810   000A02  C0D4  F00F         	movff	read16bit@numb,___wmul@multiplier
  2811   000A06  C0D5  F010         	movff	read16bit@numb+1,___wmul@multiplier+1
  2812   000A0A  0E00               	movlw	0
  2813   000A0C  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  2814   000A0E  0E0A               	movlw	10
  2815   000A10  6E11               	movwf	___wmul@multiplicand^0,c
  2816   000A12  EC17  F009         	call	___wmul	;wreg free
  2817   000A16  0100               	movlb	0	; () banked
  2818   000A18  51D2               	movf	read16bit@digit& (0+255),w,b
  2819   000A1A  260F               	addwf	?___wmul^0,f,c
  2820   000A1C  0E00               	movlw	0
  2821   000A1E  2210               	addwfc	(?___wmul+1)^0,f,c
  2822   000A20  500F               	movf	?___wmul^0,w,c
  2823   000A22  5DCF               	subwf	read16bit@maxValue& (0+255),w,b
  2824   000A24  5010               	movf	(?___wmul+1)^0,w,c
  2825   000A26  59D0               	subwfb	(read16bit@maxValue+1)& (0+255),w,b
  2826   000A28  B0D8               	btfsc	status,0,c
  2827   000A2A  EF19  F005         	goto	u1641
  2828   000A2E  EF1B  F005         	goto	u1640
  2829   000A32                     u1641:
  2830   000A32  EF1D  F005         	goto	l2745
  2831   000A36                     u1640:
  2832   000A36  EF71  F005         	goto	l2765
  2833   000A3A                     l2745:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 247:         if((numb == 0) && (digit == 0) && (i > 0)) continue;
  2837   000A3A  51D4               	movf	read16bit@numb& (0+255),w,b
  2838   000A3C  11D5               	iorwf	(read16bit@numb+1)& (0+255),w,b
  2839   000A3E  A4D8               	btfss	status,2,c
  2840   000A40  EF24  F005         	goto	u1651
  2841   000A44  EF26  F005         	goto	u1650
  2842   000A48                     u1651:
  2843   000A48  EF38  F005         	goto	l2753
  2844   000A4C                     u1650:
  2845   000A4C                     
  2846                           ; BSR set to: 0
  2847   000A4C  51D2               	movf	read16bit@digit& (0+255),w,b
  2848   000A4E  A4D8               	btfss	status,2,c
  2849   000A50  EF2C  F005         	goto	u1661
  2850   000A54  EF2E  F005         	goto	u1660
  2851   000A58                     u1661:
  2852   000A58  EF38  F005         	goto	l2753
  2853   000A5C                     u1660:
  2854   000A5C                     
  2855                           ; BSR set to: 0
  2856   000A5C  51D1               	movf	read16bit@i& (0+255),w,b
  2857   000A5E  B4D8               	btfsc	status,2,c
  2858   000A60  EF34  F005         	goto	u1671
  2859   000A64  EF36  F005         	goto	u1670
  2860   000A68                     u1671:
  2861   000A68  EF38  F005         	goto	l2753
  2862   000A6C                     u1670:
  2863   000A6C  EF71  F005         	goto	l2765
  2864   000A70                     l2753:
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;main.c: 248:         if((numb == 0) && (i > 0)) printf("%c", 127);
  2868   000A70  51D4               	movf	read16bit@numb& (0+255),w,b
  2869   000A72  11D5               	iorwf	(read16bit@numb+1)& (0+255),w,b
  2870   000A74  A4D8               	btfss	status,2,c
  2871   000A76  EF3F  F005         	goto	u1681
  2872   000A7A  EF41  F005         	goto	u1680
  2873   000A7E                     u1681:
  2874   000A7E  EF53  F005         	goto	l395
  2875   000A82                     u1680:
  2876   000A82                     
  2877                           ; BSR set to: 0
  2878   000A82  51D1               	movf	read16bit@i& (0+255),w,b
  2879   000A84  B4D8               	btfsc	status,2,c
  2880   000A86  EF47  F005         	goto	u1691
  2881   000A8A  EF49  F005         	goto	u1690
  2882   000A8E                     u1691:
  2883   000A8E  EF53  F005         	goto	l395
  2884   000A92                     u1690:
  2885   000A92                     
  2886                           ; BSR set to: 0
  2887   000A92  0EFB               	movlw	low STR_51
  2888   000A94  6FC9               	movwf	printf@fmt& (0+255),b
  2889   000A96  0E7F               	movlw	high STR_51
  2890   000A98  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2891   000A9A  0E00               	movlw	0
  2892   000A9C  6FCC               	movwf	(?_printf+3)& (0+255),b
  2893   000A9E  0E7F               	movlw	127
  2894   000AA0  6FCB               	movwf	(?_printf+2)& (0+255),b
  2895   000AA2  ECDB  F008         	call	_printf	;wreg free
  2896   000AA6                     l395:
  2897                           
  2898                           ;main.c: 249:         printf("%c", character);
  2899   000AA6  0EFB               	movlw	low STR_51
  2900   000AA8  0100               	movlb	0	; () banked
  2901   000AAA  6FC9               	movwf	printf@fmt& (0+255),b
  2902   000AAC  0E7F               	movlw	high STR_51
  2903   000AAE  6FCA               	movwf	(printf@fmt+1)& (0+255),b
  2904   000AB0  C0D3  F0CB         	movff	read16bit@character,?_printf+2
  2905   000AB4  6BCC               	clrf	(?_printf+3)& (0+255),b
  2906   000AB6  ECDB  F008         	call	_printf	;wreg free
  2907   000ABA                     
  2908                           ;main.c: 250:         numb *= 10;
  2909   000ABA  C0D4  F00F         	movff	read16bit@numb,___wmul@multiplier
  2910   000ABE  C0D5  F010         	movff	read16bit@numb+1,___wmul@multiplier+1
  2911   000AC2  0E00               	movlw	0
  2912   000AC4  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  2913   000AC6  0E0A               	movlw	10
  2914   000AC8  6E11               	movwf	___wmul@multiplicand^0,c
  2915   000ACA  EC17  F009         	call	___wmul	;wreg free
  2916   000ACE  C00F  F0D4         	movff	?___wmul,read16bit@numb
  2917   000AD2  C010  F0D5         	movff	?___wmul+1,read16bit@numb+1
  2918   000AD6                     
  2919                           ;main.c: 251:         numb += digit;
  2920   000AD6  0100               	movlb	0	; () banked
  2921   000AD8  51D2               	movf	read16bit@digit& (0+255),w,b
  2922   000ADA  27D4               	addwf	read16bit@numb& (0+255),f,b
  2923   000ADC  0E00               	movlw	0
  2924   000ADE  23D5               	addwfc	(read16bit@numb+1)& (0+255),f,b
  2925   000AE0                     
  2926                           ; BSR set to: 0
  2927                           ;main.c: 252:         i++;
  2928   000AE0  2BD1               	incf	read16bit@i& (0+255),f,b
  2929   000AE2                     l2765:
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;main.c: 232:     while(character != '\r')
  2933   000AE2  0E0D               	movlw	13
  2934   000AE4  19D3               	xorwf	read16bit@character& (0+255),w,b
  2935   000AE6  A4D8               	btfss	status,2,c
  2936   000AE8  EF78  F005         	goto	u1701
  2937   000AEC  EF7A  F005         	goto	u1700
  2938   000AF0                     u1701:
  2939   000AF0  EFAB  F004         	goto	l2727
  2940   000AF4                     u1700:
  2941   000AF4                     
  2942                           ; BSR set to: 0
  2943                           ;main.c: 255:     return(numb);
  2944   000AF4  C0D4  F0CF         	movff	read16bit@numb,?_read16bit
  2945   000AF8  C0D5  F0D0         	movff	read16bit@numb+1,?_read16bit+1
  2946   000AFC                     
  2947                           ; BSR set to: 0
  2948   000AFC  0012               	return		;funcret
  2949   000AFE                     __end_of_read16bit:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _printf *****************
  2953 ;; Defined at:
  2954 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  fmt             2   39[BANK0 ] PTR const unsigned char 
  2957 ;;		 -> STR_53(3), STR_52(3), STR_51(3), STR_50(3), 
  2958 ;;		 -> STR_49(17), STR_48(8), STR_47(23), STR_46(6), 
  2959 ;;		 -> STR_45(33), STR_44(6), STR_43(35), STR_42(35), 
  2960 ;;		 -> STR_41(25), STR_40(25), STR_39(12), STR_38(21), 
  2961 ;;		 -> STR_37(6), STR_36(20), STR_35(30), STR_34(22), 
  2962 ;;		 -> STR_33(2), STR_32(2), STR_31(9), STR_30(52), 
  2963 ;;		 -> STR_29(20), STR_28(28), STR_27(30), STR_26(21), 
  2964 ;;		 -> STR_25(52), STR_24(21), STR_23(44), STR_22(24), 
  2965 ;;		 -> STR_21(21), STR_20(7), STR_19(15), STR_18(52), 
  2966 ;;		 -> STR_17(32), STR_16(27), STR_15(27), STR_14(13), 
  2967 ;;		 -> STR_13(28), STR_12(27), STR_11(12), STR_10(52), 
  2968 ;;		 -> STR_9(5), STR_8(5), STR_7(44), STR_6(40), 
  2969 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  2970 ;;		 -> STR_1(9), 
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  ap              2   43[BANK0 ] PTR void [1]
  2973 ;;		 -> ?_printf(2), 
  2974 ;;  ret             2    0        int 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  2   39[BANK0 ] int 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2984 ;;      Params:         0       4       0       0       0       0       0
  2985 ;;      Locals:         0       2       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0
  2987 ;;      Totals:         0       6       0       0       0       0       0
  2988 ;;Total ram usage:        6 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 12
  2991 ;; This function calls:
  2992 ;;		_vfprintf
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;;		_read16bit
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text2
  3000   0011B6                     __ptext2:
  3001                           	callstack 0
  3002   0011B6                     _printf:
  3003                           	callstack 17
  3004   0011B6  0ECB               	movlw	low (?_printf+2)
  3005   0011B8  0100               	movlb	0	; () banked
  3006   0011BA  6FCD               	movwf	printf@ap& (0+255),b
  3007   0011BC  0E00               	movlw	high (?_printf+2)
  3008   0011BE  6FCE               	movwf	(printf@ap+1)& (0+255),b
  3009   0011C0                     
  3010                           ; BSR set to: 0
  3011   0011C0  0E00               	movlw	0
  3012   0011C2  6FC1               	movwf	vfprintf@fp& (0+255),b
  3013   0011C4  0E00               	movlw	0
  3014   0011C6  6FC2               	movwf	(vfprintf@fp+1)& (0+255),b
  3015   0011C8  C0C9  F0C3         	movff	printf@fmt,vfprintf@fmt
  3016   0011CC  C0CA  F0C4         	movff	printf@fmt+1,vfprintf@fmt+1
  3017   0011D0  0ECD               	movlw	low printf@ap
  3018   0011D2  6FC5               	movwf	vfprintf@ap& (0+255),b
  3019   0011D4  0E00               	movlw	high printf@ap
  3020   0011D6  6FC6               	movwf	(vfprintf@ap+1)& (0+255),b
  3021   0011D8  ECD4  F007         	call	_vfprintf	;wreg free
  3022   0011DC  0012               	return		;funcret
  3023   0011DE                     __end_of_printf:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _vfprintf *****************
  3027 ;; Defined at:
  3028 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  3031 ;;		 -> NULL(0), 
  3032 ;;  fmt             2   33[BANK0 ] PTR const unsigned char 
  3033 ;;		 -> STR_53(3), STR_52(3), STR_51(3), STR_50(3), 
  3034 ;;		 -> STR_49(17), STR_48(8), STR_47(23), STR_46(6), 
  3035 ;;		 -> STR_45(33), STR_44(6), STR_43(35), STR_42(35), 
  3036 ;;		 -> STR_41(25), STR_40(25), STR_39(12), STR_38(21), 
  3037 ;;		 -> STR_37(6), STR_36(20), STR_35(30), STR_34(22), 
  3038 ;;		 -> STR_33(2), STR_32(2), STR_31(9), STR_30(52), 
  3039 ;;		 -> STR_29(20), STR_28(28), STR_27(30), STR_26(21), 
  3040 ;;		 -> STR_25(52), STR_24(21), STR_23(44), STR_22(24), 
  3041 ;;		 -> STR_21(21), STR_20(7), STR_19(15), STR_18(52), 
  3042 ;;		 -> STR_17(32), STR_16(27), STR_15(27), STR_14(13), 
  3043 ;;		 -> STR_13(28), STR_12(27), STR_11(12), STR_10(52), 
  3044 ;;		 -> STR_9(5), STR_8(5), STR_7(44), STR_6(40), 
  3045 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  3046 ;;		 -> STR_1(9), 
  3047 ;;  ap              2   35[BANK0 ] PTR PTR void 
  3048 ;;		 -> printf@ap(2), 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  cfmt            2   37[BANK0 ] PTR unsigned char 
  3051 ;;		 -> STR_53(3), STR_52(3), STR_51(3), STR_50(3), 
  3052 ;;		 -> STR_49(17), STR_48(8), STR_47(23), STR_46(6), 
  3053 ;;		 -> STR_45(33), STR_44(6), STR_43(35), STR_42(35), 
  3054 ;;		 -> STR_41(25), STR_40(25), STR_39(12), STR_38(21), 
  3055 ;;		 -> STR_37(6), STR_36(20), STR_35(30), STR_34(22), 
  3056 ;;		 -> STR_33(2), STR_32(2), STR_31(9), STR_30(52), 
  3057 ;;		 -> STR_29(20), STR_28(28), STR_27(30), STR_26(21), 
  3058 ;;		 -> STR_25(52), STR_24(21), STR_23(44), STR_22(24), 
  3059 ;;		 -> STR_21(21), STR_20(7), STR_19(15), STR_18(52), 
  3060 ;;		 -> STR_17(32), STR_16(27), STR_15(27), STR_14(13), 
  3061 ;;		 -> STR_13(28), STR_12(27), STR_11(12), STR_10(52), 
  3062 ;;		 -> STR_9(5), STR_8(5), STR_7(44), STR_6(40), 
  3063 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  3064 ;;		 -> STR_1(9), 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  2   31[BANK0 ] int 
  3067 ;; Registers used:
  3068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3074 ;;      Params:         0       6       0       0       0       0       0
  3075 ;;      Locals:         0       2       0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0
  3077 ;;      Totals:         0       8       0       0       0       0       0
  3078 ;;Total ram usage:        8 bytes
  3079 ;; Hardware stack levels used: 1
  3080 ;; Hardware stack levels required when called: 11
  3081 ;; This function calls:
  3082 ;;		_vfpfcnvrt
  3083 ;; This function is called by:
  3084 ;;		_printf
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           	psect	text3
  3089   000FA8                     __ptext3:
  3090                           	callstack 0
  3091   000FA8                     _vfprintf:
  3092                           	callstack 17
  3093   000FA8                     
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3095   000FA8  C0C3  F0C7         	movff	vfprintf@fmt,vfprintf@cfmt
  3096   000FAC  C0C4  F0C8         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3099   000FB0  EFE9  F007         	goto	l2593
  3100   000FB4                     l2591:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3103   000FB4  C0C1  F0B0         	movff	vfprintf@fp,vfpfcnvrt@fp
  3104   000FB8  C0C2  F0B1         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3105   000FBC  0EC7               	movlw	low vfprintf@cfmt
  3106   000FBE  0100               	movlb	0	; () banked
  3107   000FC0  6FB2               	movwf	vfpfcnvrt@fmt& (0+255),b
  3108   000FC2  0E00               	movlw	high vfprintf@cfmt
  3109   000FC4  6FB3               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3110   000FC6  C0C5  F0B4         	movff	vfprintf@ap,vfpfcnvrt@ap
  3111   000FCA  C0C6  F0B5         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3112   000FCE  ECD5  F002         	call	_vfpfcnvrt	;wreg free
  3113   000FD2                     l2593:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3116   000FD2  C0C7  FFF6         	movff	vfprintf@cfmt,tblptrl
  3117   000FD6  C0C8  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3118   000FDA                     	if	0	;tblptru may be non-zero
  3119   000FDA                     	endif
  3120   000FDA                     	if	0	;tblptru may be non-zero
  3121   000FDA                     	endif
  3122   000FDA  0008               	tblrd		*
  3123   000FDC  50F5               	movf	tablat,w,c
  3124   000FDE  0900               	iorlw	0
  3125   000FE0  A4D8               	btfss	status,2,c
  3126   000FE2  EFF5  F007         	goto	u1501
  3127   000FE6  EFF7  F007         	goto	u1500
  3128   000FEA                     u1501:
  3129   000FEA  EFDA  F007         	goto	l2591
  3130   000FEE                     u1500:
  3131   000FEE                     
  3132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3133   000FEE  0E00               	movlw	0
  3134   000FF0  0100               	movlb	0	; () banked
  3135   000FF2  6FC2               	movwf	(?_vfprintf+1)& (0+255),b
  3136   000FF4  0E00               	movlw	0
  3137   000FF6  6FC1               	movwf	?_vfprintf& (0+255),b
  3138   000FF8                     
  3139                           ; BSR set to: 0
  3140   000FF8  0012               	return		;funcret
  3141   000FFA                     __end_of_vfprintf:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _vfpfcnvrt *****************
  3145 ;; Defined at:
  3146 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  fp              2   14[BANK0 ] PTR struct _IO_FILE
  3149 ;;		 -> NULL(0), 
  3150 ;;  fmt             2   16[BANK0 ] PTR PTR unsigned char 
  3151 ;;		 -> vfprintf@cfmt(2), 
  3152 ;;  ap              2   18[BANK0 ] PTR PTR void 
  3153 ;;		 -> printf@ap(2), 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  convarg         8   20[BANK0 ] struct .
  3156 ;;  cp              2   29[BANK0 ] PTR unsigned char 
  3157 ;;		 -> STR_53(3), STR_52(3), STR_51(3), STR_50(3), 
  3158 ;;		 -> STR_49(17), STR_48(8), STR_47(23), STR_46(6), 
  3159 ;;		 -> STR_45(33), STR_44(6), STR_43(35), STR_42(35), 
  3160 ;;		 -> STR_41(25), STR_40(25), STR_39(12), STR_38(21), 
  3161 ;;		 -> STR_37(6), STR_36(20), STR_35(30), STR_34(22), 
  3162 ;;		 -> STR_33(2), STR_32(2), STR_31(9), STR_30(52), 
  3163 ;;		 -> STR_29(20), STR_28(28), STR_27(30), STR_26(21), 
  3164 ;;		 -> STR_25(52), STR_24(21), STR_23(44), STR_22(24), 
  3165 ;;		 -> STR_21(21), STR_20(7), STR_19(15), STR_18(52), 
  3166 ;;		 -> STR_17(32), STR_16(27), STR_15(27), STR_14(13), 
  3167 ;;		 -> STR_13(28), STR_12(27), STR_11(12), STR_10(52), 
  3168 ;;		 -> STR_9(5), STR_8(5), STR_7(44), STR_6(40), 
  3169 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  3170 ;;		 -> STR_1(9), 
  3171 ;;  i               2    0        int 
  3172 ;;  done            2    0        int 
  3173 ;;  c               1   28[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3183 ;;      Params:         0       6       0       0       0       0       0
  3184 ;;      Locals:         0      11       0       0       0       0       0
  3185 ;;      Temps:          4       0       0       0       0       0       0
  3186 ;;      Totals:         4      17       0       0       0       0       0
  3187 ;;Total ram usage:       21 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 10
  3190 ;; This function calls:
  3191 ;;		_ctoa
  3192 ;;		_fputc
  3193 ;;		_utoa
  3194 ;; This function is called by:
  3195 ;;		_vfprintf
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text4
  3200   0005AA                     __ptext4:
  3201                           	callstack 0
  3202   0005AA                     _vfpfcnvrt:
  3203                           	callstack 17
  3204   0005AA                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3206   0005AA  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3207   0005AE  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3208   0005B2  CFDE FFF6          	movff	postinc2,tblptrl
  3209   0005B6  CFDD FFF7          	movff	postdec2,tblptrh
  3210   0005BA                     	if	0	;tblptru may be non-zero
  3211   0005BA                     	endif
  3212   0005BA                     	if	0	;tblptru may be non-zero
  3213   0005BA                     	endif
  3214   0005BA  0008               	tblrd		*
  3215   0005BC  50F5               	movf	tablat,w,c
  3216   0005BE  0A25               	xorlw	37
  3217   0005C0  A4D8               	btfss	status,2,c
  3218   0005C2  EFE5  F002         	goto	u1471
  3219   0005C6  EFE7  F002         	goto	u1470
  3220   0005CA                     u1471:
  3221   0005CA  EFA8  F003         	goto	l2571
  3222   0005CE                     u1470:
  3223   0005CE                     
  3224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3225   0005CE  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3226   0005D2  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3227   0005D6  2ADE               	incf	postinc2,f,c
  3228   0005D8  0E00               	movlw	0
  3229   0005DA  22DD               	addwfc	postdec2,f,c
  3230   0005DC                     
  3231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3232   0005DC  0E00               	movlw	0
  3233   0005DE  6E43               	movwf	(_width+1)^0,c
  3234   0005E0  0E00               	movlw	0
  3235   0005E2  6E42               	movwf	_width^0,c
  3236   0005E4  C042  F0DE         	movff	_width,_flags
  3237   0005E8                     
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3239   0005E8  6844               	setf	_prec^0,c
  3240   0005EA  6845               	setf	(_prec+1)^0,c
  3241   0005EC                     
  3242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  3243   0005EC  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3244   0005F0  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3245   0005F4  CFDE FFF6          	movff	postinc2,tblptrl
  3246   0005F8  CFDD FFF7          	movff	postdec2,tblptrh
  3247   0005FC                     	if	0	;tblptru may be non-zero
  3248   0005FC                     	endif
  3249   0005FC                     	if	0	;tblptru may be non-zero
  3250   0005FC                     	endif
  3251   0005FC  0008               	tblrd		*
  3252   0005FE  50F5               	movf	tablat,w,c
  3253   000600  0A63               	xorlw	99
  3254   000602  A4D8               	btfss	status,2,c
  3255   000604  EF06  F003         	goto	u1481
  3256   000608  EF08  F003         	goto	u1480
  3257   00060C                     u1481:
  3258   00060C  EF2C  F003         	goto	l2553
  3259   000610                     u1480:
  3260   000610                     
  3261                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  3262   000610  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3263   000614  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3264   000618  2ADE               	incf	postinc2,f,c
  3265   00061A  0E00               	movlw	0
  3266   00061C  22DD               	addwfc	postdec2,f,c
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3269   00061E  C0B4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3270   000622  C0B5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3271   000626  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  3272   00062A  0E02               	movlw	2
  3273   00062C  26DE               	addwf	postinc2,f,c
  3274   00062E  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  3275   000632  0E00               	movlw	0
  3276   000634  22DD               	addwfc	postdec2,f,c
  3277   000636  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3278   00063A  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3279   00063E  50DF               	movf	indf2,w,c
  3280   000640  0100               	movlb	0	; () banked
  3281   000642  6FBE               	movwf	vfpfcnvrt@c& (0+255),b
  3282   000644                     
  3283                           ; BSR set to: 0
  3284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  3285   000644  C0B0  F01A         	movff	vfpfcnvrt@fp,ctoa@fp
  3286   000648  C0B1  F01B         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3287   00064C  C0BE  F01C         	movff	vfpfcnvrt@c,ctoa@c
  3288   000650  EC5F  F006         	call	_ctoa	;wreg free
  3289   000654  EFBC  F003         	goto	l1149
  3290   000658                     l2553:
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  3293   000658  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3294   00065C  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3295   000660  CFDE F0BF          	movff	postinc2,vfpfcnvrt@cp
  3296   000664  CFDD F0C0          	movff	postdec2,vfpfcnvrt@cp+1
  3297   000668  C0BF  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3298   00066C  C0C0  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3299   000670                     	if	0	;tblptru may be non-zero
  3300   000670                     	endif
  3301   000670                     	if	0	;tblptru may be non-zero
  3302   000670                     	endif
  3303   000670  0008               	tblrd		*
  3304   000672  50F5               	movf	tablat,w,c
  3305   000674  0A75               	xorlw	117
  3306   000676  A4D8               	btfss	status,2,c
  3307   000678  EF40  F003         	goto	u1491
  3308   00067C  EF42  F003         	goto	u1490
  3309   000680                     u1491:
  3310   000680  EF9F  F003         	goto	l2567
  3311   000684                     u1490:
  3312   000684                     
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3314   000684  C0B4  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3315   000688  C0B5  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3316   00068C  CFDF F03E          	movff	indf2,??_vfpfcnvrt
  3317   000690  0E02               	movlw	2
  3318   000692  26DE               	addwf	postinc2,f,c
  3319   000694  CFDF F03F          	movff	indf2,??_vfpfcnvrt+1
  3320   000698  0E00               	movlw	0
  3321   00069A  22DD               	addwfc	postdec2,f,c
  3322   00069C  C03E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3323   0006A0  C03F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3324   0006A4  CFDE F040          	movff	postinc2,??_vfpfcnvrt+2
  3325   0006A8  CFDD F041          	movff	postdec2,??_vfpfcnvrt+3
  3326   0006AC  C040  F0B6         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3327   0006B0  C041  F0B7         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3328   0006B4  0100               	movlb	0	; () banked
  3329   0006B6  6BB8               	clrf	(vfpfcnvrt@convarg+2)& (0+255),b
  3330   0006B8  6BB9               	clrf	(vfpfcnvrt@convarg+3)& (0+255),b
  3331   0006BA  6BBA               	clrf	(vfpfcnvrt@convarg+4)& (0+255),b
  3332   0006BC  6BBB               	clrf	(vfpfcnvrt@convarg+5)& (0+255),b
  3333   0006BE  6BBC               	clrf	(vfpfcnvrt@convarg+6)& (0+255),b
  3334   0006C0  6BBD               	clrf	(vfpfcnvrt@convarg+7)& (0+255),b
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  3337   0006C2  0E01               	movlw	1
  3338   0006C4  25BF               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3339   0006C6  6E3E               	movwf	??_vfpfcnvrt^0,c
  3340   0006C8  0E00               	movlw	0
  3341   0006CA  21C0               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3342   0006CC  6E3F               	movwf	(??_vfpfcnvrt+1)^0,c
  3343   0006CE  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3344   0006D2  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3345   0006D6  C03E  FFDE         	movff	??_vfpfcnvrt,postinc2
  3346   0006DA  C03F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  3349   0006DE  EF89  F003         	goto	l2565
  3350   0006E2                     l2559:
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  3354   0006E2  C0B0  F02C         	movff	vfpfcnvrt@fp,utoa@fp
  3355   0006E6  C0B1  F02D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3356   0006EA  C0B6  F02E         	movff	vfpfcnvrt@convarg,utoa@d
  3357   0006EE  C0B7  F02F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  3358   0006F2  C0B8  F030         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  3359   0006F6  C0B9  F031         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  3360   0006FA  C0BA  F032         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  3361   0006FE  C0BB  F033         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  3362   000702  C0BC  F034         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  3363   000706  C0BD  F035         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  3364   00070A  ECBD  F003         	call	_utoa	;wreg free
  3365   00070E  EFBC  F003         	goto	l1149
  3366   000712                     l2565:
  3367                           
  3368                           ; BSR set to: 0
  3369   000712  C0BF  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3370   000716  C0C0  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3371   00071A                     	if	0	;tblptru may be non-zero
  3372   00071A                     	endif
  3373   00071A                     	if	0	;tblptru may be non-zero
  3374   00071A                     	endif
  3375   00071A  0008               	tblrd		*
  3376   00071C  50F5               	movf	tablat,w,c
  3377   00071E  6E3E               	movwf	??_vfpfcnvrt^0,c
  3378   000720  6A3F               	clrf	(??_vfpfcnvrt+1)^0,c
  3379                           
  3380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3381                           ; Switch size 1, requested type "simple"
  3382                           ; Number of cases is 1, Range of values is 0 to 0
  3383                           ; switch strategies available:
  3384                           ; Name         Instructions Cycles
  3385                           ; simple_byte            4     3 (average)
  3386                           ;	Chosen strategy is simple_byte
  3387   000722  503F               	movf	(??_vfpfcnvrt+1)^0,w,c
  3388   000724  0A00               	xorlw	0	; case 0
  3389   000726  B4D8               	btfsc	status,2,c
  3390   000728  EF98  F003         	goto	l2965
  3391   00072C  EF9F  F003         	goto	l2567
  3392   000730                     l2965:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ; Switch size 1, requested type "simple"
  3396                           ; Number of cases is 1, Range of values is 117 to 117
  3397                           ; switch strategies available:
  3398                           ; Name         Instructions Cycles
  3399                           ; simple_byte            4     3 (average)
  3400                           ;	Chosen strategy is simple_byte
  3401   000730  503E               	movf	??_vfpfcnvrt^0,w,c
  3402   000732  0A75               	xorlw	117	; case 117
  3403   000734  B4D8               	btfsc	status,2,c
  3404   000736  EF71  F003         	goto	l2559
  3405   00073A  EF9F  F003         	goto	l2567
  3406   00073E                     l2567:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3409   00073E  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3410   000742  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3411   000746  2ADE               	incf	postinc2,f,c
  3412   000748  0E00               	movlw	0
  3413   00074A  22DD               	addwfc	postdec2,f,c
  3414   00074C  EFBC  F003         	goto	l1149
  3415   000750                     l2571:
  3416                           
  3417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3418   000750  C0B2  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3419   000754  C0B3  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3420   000758  CFDE FFF6          	movff	postinc2,tblptrl
  3421   00075C  CFDD FFF7          	movff	postdec2,tblptrh
  3422   000760                     	if	0	;tblptru may be non-zero
  3423   000760                     	endif
  3424   000760                     	if	0	;tblptru may be non-zero
  3425   000760                     	endif
  3426   000760  0008               	tblrd		*
  3427   000762  50F5               	movf	tablat,w,c
  3428   000764  6E11               	movwf	fputc@c^0,c
  3429   000766  6A12               	clrf	(fputc@c+1)^0,c
  3430   000768  C0B0  F013         	movff	vfpfcnvrt@fp,fputc@fp
  3431   00076C  C0B1  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3432   000770  ECAC  F006         	call	_fputc	;wreg free
  3433   000774  EF9F  F003         	goto	l2567
  3434   000778                     l1149:
  3435   000778  0012               	return		;funcret
  3436   00077A                     __end_of_vfpfcnvrt:
  3437                           	callstack 0
  3438                           
  3439 ;; *************** function _utoa *****************
  3440 ;; Defined at:
  3441 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  3444 ;;		 -> NULL(0), 
  3445 ;;  d               8   45[COMRAM] unsigned long long 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  n               8    4[BANK0 ] unsigned long long 
  3448 ;;  i               2   12[BANK0 ] int 
  3449 ;;  p               2    2[BANK0 ] int 
  3450 ;;  w               2    0[BANK0 ] int 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3460 ;;      Params:        10       0       0       0       0       0       0
  3461 ;;      Locals:         0      14       0       0       0       0       0
  3462 ;;      Temps:          8       0       0       0       0       0       0
  3463 ;;      Totals:        18      14       0       0       0       0       0
  3464 ;;Total ram usage:       32 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 9
  3467 ;; This function calls:
  3468 ;;		___lodiv
  3469 ;;		___lomod
  3470 ;;		_pad
  3471 ;; This function is called by:
  3472 ;;		_vfpfcnvrt
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           	psect	text5
  3477   00077A                     __ptext5:
  3478                           	callstack 0
  3479   00077A                     _utoa:
  3480                           	callstack 17
  3481   00077A                     
  3482                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  3483   00077A  BE45               	btfsc	(_prec+1)^0,7,c
  3484   00077C  EFCA  F003         	goto	u1430
  3485   000780  5045               	movf	(_prec+1)^0,w,c
  3486   000782  E106               	bnz	u1431
  3487   000784  0444               	decf	_prec^0,w,c
  3488   000786  B0D8               	btfsc	status,0,c
  3489   000788  EFC8  F003         	goto	u1431
  3490   00078C  EFCA  F003         	goto	u1430
  3491   000790                     u1431:
  3492   000790  EFD1  F003         	goto	l1136
  3493   000794                     u1430:
  3494   000794  0E00               	movlw	0
  3495   000796  0100               	movlb	0	; () banked
  3496   000798  6FA5               	movwf	(utoa@p+1)& (0+255),b
  3497   00079A  0E01               	movlw	1
  3498   00079C  6FA4               	movwf	utoa@p& (0+255),b
  3499   00079E  EFD5  F003         	goto	l1138
  3500   0007A2                     l1136:
  3501   0007A2  C044  F0A4         	movff	_prec,utoa@p
  3502   0007A6  C045  F0A5         	movff	_prec+1,utoa@p+1
  3503   0007AA                     l1138:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  3506   0007AA  C042  F0A2         	movff	_width,utoa@w
  3507   0007AE  C043  F0A3         	movff	_width+1,utoa@w+1
  3508                           
  3509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  3510   0007B2  C02E  F0A6         	movff	utoa@d,utoa@n
  3511   0007B6  C02F  F0A7         	movff	utoa@d+1,utoa@n+1
  3512   0007BA  C030  F0A8         	movff	utoa@d+2,utoa@n+2
  3513   0007BE  C031  F0A9         	movff	utoa@d+3,utoa@n+3
  3514   0007C2  C032  F0AA         	movff	utoa@d+4,utoa@n+4
  3515   0007C6  C033  F0AB         	movff	utoa@d+5,utoa@n+5
  3516   0007CA  C034  F0AC         	movff	utoa@d+6,utoa@n+6
  3517   0007CE  C035  F0AD         	movff	utoa@d+7,utoa@n+7
  3518   0007D2                     
  3519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  3520   0007D2  0E00               	movlw	0
  3521   0007D4  0100               	movlb	0	; () banked
  3522   0007D6  6FAF               	movwf	(utoa@i+1)& (0+255),b
  3523   0007D8  0E1F               	movlw	31
  3524   0007DA  6FAE               	movwf	utoa@i& (0+255),b
  3525   0007DC                     
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  3528   0007DC  0E00               	movlw	0
  3529   0007DE  6FFE               	movwf	(_dbuf+31)& (0+255),b
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3532   0007E0  EF69  F004         	goto	l2527
  3533   0007E4                     l2517:
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  3537   0007E4  07AE               	decf	utoa@i& (0+255),f,b
  3538   0007E6  A0D8               	btfss	status,0,c
  3539   0007E8  07AF               	decf	(utoa@i+1)& (0+255),f,b
  3540   0007EA                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  3543   0007EA  0EDF               	movlw	low _dbuf
  3544   0007EC  25AE               	addwf	utoa@i& (0+255),w,b
  3545   0007EE  6ED9               	movwf	fsr2l,c
  3546   0007F0  0E00               	movlw	high _dbuf
  3547   0007F2  21AF               	addwfc	(utoa@i+1)& (0+255),w,b
  3548   0007F4  6EDA               	movwf	fsr2h,c
  3549   0007F6  C0A6  F00F         	movff	utoa@n,___lomod@dividend
  3550   0007FA  C0A7  F010         	movff	utoa@n+1,___lomod@dividend+1
  3551   0007FE  C0A8  F011         	movff	utoa@n+2,___lomod@dividend+2
  3552   000802  C0A9  F012         	movff	utoa@n+3,___lomod@dividend+3
  3553   000806  C0AA  F013         	movff	utoa@n+4,___lomod@dividend+4
  3554   00080A  C0AB  F014         	movff	utoa@n+5,___lomod@dividend+5
  3555   00080E  C0AC  F015         	movff	utoa@n+6,___lomod@dividend+6
  3556   000812  C0AD  F016         	movff	utoa@n+7,___lomod@dividend+7
  3557   000816  0E0A               	movlw	10
  3558   000818  6E17               	movwf	___lomod@divisor^0,c
  3559   00081A  0E00               	movlw	0
  3560   00081C  6E18               	movwf	(___lomod@divisor+1)^0,c
  3561   00081E  0E00               	movlw	0
  3562   000820  6E19               	movwf	(___lomod@divisor+2)^0,c
  3563   000822  0E00               	movlw	0
  3564   000824  6E1A               	movwf	(___lomod@divisor+3)^0,c
  3565   000826  0E00               	movlw	0
  3566   000828  6E1B               	movwf	(___lomod@divisor+4)^0,c
  3567   00082A  0E00               	movlw	0
  3568   00082C  6E1C               	movwf	(___lomod@divisor+5)^0,c
  3569   00082E  0E00               	movlw	0
  3570   000830  6E1D               	movwf	(___lomod@divisor+6)^0,c
  3571   000832  0E00               	movlw	0
  3572   000834  6E1E               	movwf	(___lomod@divisor+7)^0,c
  3573   000836  ECF7  F005         	call	___lomod	;wreg free
  3574   00083A  C00F  F036         	movff	?___lomod,??_utoa
  3575   00083E  C010  F037         	movff	?___lomod+1,??_utoa+1
  3576   000842  C011  F038         	movff	?___lomod+2,??_utoa+2
  3577   000846  C012  F039         	movff	?___lomod+3,??_utoa+3
  3578   00084A  C013  F03A         	movff	?___lomod+4,??_utoa+4
  3579   00084E  C014  F03B         	movff	?___lomod+5,??_utoa+5
  3580   000852  C015  F03C         	movff	?___lomod+6,??_utoa+6
  3581   000856  C016  F03D         	movff	?___lomod+7,??_utoa+7
  3582   00085A  5036               	movf	??_utoa^0,w,c
  3583   00085C  0F30               	addlw	48
  3584   00085E  6EDF               	movwf	indf2,c
  3585   000860                     
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3587   000860  0100               	movlb	0	; () banked
  3588   000862  07A4               	decf	utoa@p& (0+255),f,b
  3589   000864  A0D8               	btfss	status,0,c
  3590   000866  07A5               	decf	(utoa@p+1)& (0+255),f,b
  3591   000868                     
  3592                           ; BSR set to: 0
  3593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3594   000868  07A2               	decf	utoa@w& (0+255),f,b
  3595   00086A  A0D8               	btfss	status,0,c
  3596   00086C  07A3               	decf	(utoa@w+1)& (0+255),f,b
  3597   00086E                     
  3598                           ; BSR set to: 0
  3599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3600   00086E  C0A6  F00F         	movff	utoa@n,___lodiv@dividend
  3601   000872  C0A7  F010         	movff	utoa@n+1,___lodiv@dividend+1
  3602   000876  C0A8  F011         	movff	utoa@n+2,___lodiv@dividend+2
  3603   00087A  C0A9  F012         	movff	utoa@n+3,___lodiv@dividend+3
  3604   00087E  C0AA  F013         	movff	utoa@n+4,___lodiv@dividend+4
  3605   000882  C0AB  F014         	movff	utoa@n+5,___lodiv@dividend+5
  3606   000886  C0AC  F015         	movff	utoa@n+6,___lodiv@dividend+6
  3607   00088A  C0AD  F016         	movff	utoa@n+7,___lodiv@dividend+7
  3608   00088E  0E0A               	movlw	10
  3609   000890  6E17               	movwf	___lodiv@divisor^0,c
  3610   000892  0E00               	movlw	0
  3611   000894  6E18               	movwf	(___lodiv@divisor+1)^0,c
  3612   000896  0E00               	movlw	0
  3613   000898  6E19               	movwf	(___lodiv@divisor+2)^0,c
  3614   00089A  0E00               	movlw	0
  3615   00089C  6E1A               	movwf	(___lodiv@divisor+3)^0,c
  3616   00089E  0E00               	movlw	0
  3617   0008A0  6E1B               	movwf	(___lodiv@divisor+4)^0,c
  3618   0008A2  0E00               	movlw	0
  3619   0008A4  6E1C               	movwf	(___lodiv@divisor+5)^0,c
  3620   0008A6  0E00               	movlw	0
  3621   0008A8  6E1D               	movwf	(___lodiv@divisor+6)^0,c
  3622   0008AA  0E00               	movlw	0
  3623   0008AC  6E1E               	movwf	(___lodiv@divisor+7)^0,c
  3624   0008AE  EC7F  F005         	call	___lodiv	;wreg free
  3625   0008B2  C00F  F0A6         	movff	?___lodiv,utoa@n
  3626   0008B6  C010  F0A7         	movff	?___lodiv+1,utoa@n+1
  3627   0008BA  C011  F0A8         	movff	?___lodiv+2,utoa@n+2
  3628   0008BE  C012  F0A9         	movff	?___lodiv+3,utoa@n+3
  3629   0008C2  C013  F0AA         	movff	?___lodiv+4,utoa@n+4
  3630   0008C6  C014  F0AB         	movff	?___lodiv+5,utoa@n+5
  3631   0008CA  C015  F0AC         	movff	?___lodiv+6,utoa@n+6
  3632   0008CE  C016  F0AD         	movff	?___lodiv+7,utoa@n+7
  3633   0008D2                     l2527:
  3634                           
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3636   0008D2  0100               	movlb	0	; () banked
  3637   0008D4  51AE               	movf	utoa@i& (0+255),w,b
  3638   0008D6  11AF               	iorwf	(utoa@i+1)& (0+255),w,b
  3639   0008D8  B4D8               	btfsc	status,2,c
  3640   0008DA  EF71  F004         	goto	u1441
  3641   0008DE  EF73  F004         	goto	u1440
  3642   0008E2                     u1441:
  3643   0008E2  EF8F  F004         	goto	l2533
  3644   0008E6                     u1440:
  3645   0008E6                     
  3646                           ; BSR set to: 0
  3647   0008E6  51A6               	movf	utoa@n& (0+255),w,b
  3648   0008E8  11A7               	iorwf	(utoa@n+1)& (0+255),w,b
  3649   0008EA  11A8               	iorwf	(utoa@n+2)& (0+255),w,b
  3650   0008EC  11A9               	iorwf	(utoa@n+3)& (0+255),w,b
  3651   0008EE  11AA               	iorwf	(utoa@n+4)& (0+255),w,b
  3652   0008F0  11AB               	iorwf	(utoa@n+5)& (0+255),w,b
  3653   0008F2  11AC               	iorwf	(utoa@n+6)& (0+255),w,b
  3654   0008F4  11AD               	iorwf	(utoa@n+7)& (0+255),w,b
  3655   0008F6  A4D8               	btfss	status,2,c
  3656   0008F8  EF80  F004         	goto	u1451
  3657   0008FC  EF82  F004         	goto	u1450
  3658   000900                     u1451:
  3659   000900  EFF2  F003         	goto	l2517
  3660   000904                     u1450:
  3661   000904                     
  3662                           ; BSR set to: 0
  3663   000904  BFA5               	btfsc	(utoa@p+1)& (0+255),7,b
  3664   000906  EF8F  F004         	goto	u1460
  3665   00090A  51A5               	movf	(utoa@p+1)& (0+255),w,b
  3666   00090C  E106               	bnz	u1461
  3667   00090E  05A4               	decf	utoa@p& (0+255),w,b
  3668   000910  B0D8               	btfsc	status,0,c
  3669   000912  EF8D  F004         	goto	u1461
  3670   000916  EF8F  F004         	goto	u1460
  3671   00091A                     u1461:
  3672   00091A  EFF2  F003         	goto	l2517
  3673   00091E                     u1460:
  3674   00091E                     l2533:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3678   00091E  C02C  F021         	movff	utoa@fp,pad@fp
  3679   000922  C02D  F022         	movff	utoa@fp+1,pad@fp+1
  3680   000926  0EDF               	movlw	low _dbuf
  3681   000928  25AE               	addwf	utoa@i& (0+255),w,b
  3682   00092A  6E23               	movwf	pad@buf^0,c
  3683   00092C  0E00               	movlw	high _dbuf
  3684   00092E  21AF               	addwfc	(utoa@i+1)& (0+255),w,b
  3685   000930  6E24               	movwf	(pad@buf+1)^0,c
  3686   000932  C0A2  F025         	movff	utoa@w,pad@p
  3687   000936  C0A3  F026         	movff	utoa@w+1,pad@p+1
  3688   00093A  EC36  F007         	call	_pad	;wreg free
  3689   00093E  0012               	return		;funcret
  3690   000940                     __end_of_utoa:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _pad *****************
  3694 ;; Defined at:
  3695 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  3698 ;;		 -> NULL(0), 
  3699 ;;  buf             2   34[COMRAM] PTR unsigned char 
  3700 ;;		 -> dbuf(32), 
  3701 ;;  p               2   36[COMRAM] int 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  w               2   41[COMRAM] int 
  3704 ;;  i               2   39[COMRAM] int 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3714 ;;      Params:         6       0       0       0       0       0       0
  3715 ;;      Locals:         4       0       0       0       0       0       0
  3716 ;;      Temps:          1       0       0       0       0       0       0
  3717 ;;      Totals:        11       0       0       0       0       0       0
  3718 ;;Total ram usage:       11 bytes
  3719 ;; Hardware stack levels used: 1
  3720 ;; Hardware stack levels required when called: 8
  3721 ;; This function calls:
  3722 ;;		_fputc
  3723 ;;		_fputs
  3724 ;; This function is called by:
  3725 ;;		_utoa
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text6
  3730   000E6C                     __ptext6:
  3731                           	callstack 0
  3732   000E6C                     _pad:
  3733                           	callstack 17
  3734   000E6C                     
  3735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3736   000E6C  BE26               	btfsc	(pad@p+1)^0,7,c
  3737   000E6E  EF3B  F007         	goto	u1381
  3738   000E72  EF3D  F007         	goto	u1380
  3739   000E76                     u1381:
  3740   000E76  EF43  F007         	goto	l2481
  3741   000E7A                     u1380:
  3742   000E7A  C025  F02A         	movff	pad@p,pad@w
  3743   000E7E  C026  F02B         	movff	pad@p+1,pad@w+1
  3744   000E82  EF47  F007         	goto	l1114
  3745   000E86                     l2481:
  3746   000E86  0E00               	movlw	0
  3747   000E88  6E2B               	movwf	(pad@w+1)^0,c
  3748   000E8A  0E00               	movlw	0
  3749   000E8C  6E2A               	movwf	pad@w^0,c
  3750   000E8E                     l1114:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3753   000E8E  0E00               	movlw	0
  3754   000E90  6E29               	movwf	(pad@i+1)^0,c
  3755   000E92  0E00               	movlw	0
  3756   000E94  6E28               	movwf	pad@i^0,c
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3759   000E96  EF59  F007         	goto	l2487
  3760   000E9A                     l2483:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3763   000E9A  0E00               	movlw	0
  3764   000E9C  6E12               	movwf	(fputc@c+1)^0,c
  3765   000E9E  0E20               	movlw	32
  3766   000EA0  6E11               	movwf	fputc@c^0,c
  3767   000EA2  C021  F013         	movff	pad@fp,fputc@fp
  3768   000EA6  C022  F014         	movff	pad@fp+1,fputc@fp+1
  3769   000EAA  ECAC  F006         	call	_fputc	;wreg free
  3770   000EAE                     
  3771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3772   000EAE  4A28               	infsnz	pad@i^0,f,c
  3773   000EB0  2A29               	incf	(pad@i+1)^0,f,c
  3774   000EB2                     l2487:
  3775                           
  3776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3777   000EB2  502A               	movf	pad@w^0,w,c
  3778   000EB4  5C28               	subwf	pad@i^0,w,c
  3779   000EB6  5029               	movf	(pad@i+1)^0,w,c
  3780   000EB8  0A80               	xorlw	128
  3781   000EBA  6E27               	movwf	??_pad^0,c
  3782   000EBC  502B               	movf	(pad@w+1)^0,w,c
  3783   000EBE  0A80               	xorlw	128
  3784   000EC0  5827               	subwfb	??_pad^0,w,c
  3785   000EC2  A0D8               	btfss	status,0,c
  3786   000EC4  EF66  F007         	goto	u1391
  3787   000EC8  EF68  F007         	goto	u1390
  3788   000ECC                     u1391:
  3789   000ECC  EF4D  F007         	goto	l2483
  3790   000ED0                     u1390:
  3791   000ED0                     
  3792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3793   000ED0  C023  F01A         	movff	pad@buf,fputs@s
  3794   000ED4  C024  F01B         	movff	pad@buf+1,fputs@s+1
  3795   000ED8  C021  F01C         	movff	pad@fp,fputs@fp
  3796   000EDC  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  3797   000EE0  ECFD  F007         	call	_fputs	;wreg free
  3798   000EE4  0012               	return		;funcret
  3799   000EE6                     __end_of_pad:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function _fputs *****************
  3803 ;; Defined at:
  3804 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  s               2   25[COMRAM] PTR const unsigned char 
  3807 ;;		 -> dbuf(32), 
  3808 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3809 ;;		 -> NULL(0), 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  i               2   30[COMRAM] int 
  3812 ;;  c               1   29[COMRAM] unsigned char 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  2   25[COMRAM] int 
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3822 ;;      Params:         4       0       0       0       0       0       0
  3823 ;;      Locals:         3       0       0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0
  3825 ;;      Totals:         7       0       0       0       0       0       0
  3826 ;;Total ram usage:        7 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 7
  3829 ;; This function calls:
  3830 ;;		_fputc
  3831 ;; This function is called by:
  3832 ;;		_pad
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text7
  3837   000FFA                     __ptext7:
  3838                           	callstack 0
  3839   000FFA                     _fputs:
  3840                           	callstack 17
  3841   000FFA  0E00               	movlw	0
  3842   000FFC  6E20               	movwf	(fputs@i+1)^0,c
  3843   000FFE  0E00               	movlw	0
  3844   001000  6E1F               	movwf	fputs@i^0,c
  3845   001002  EF0E  F008         	goto	l2437
  3846   001006                     l2433:
  3847   001006  C01E  F011         	movff	fputs@c,fputc@c
  3848   00100A  6A12               	clrf	(fputc@c+1)^0,c
  3849   00100C  C01C  F013         	movff	fputs@fp,fputc@fp
  3850   001010  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  3851   001014  ECAC  F006         	call	_fputc	;wreg free
  3852   001018  4A1F               	infsnz	fputs@i^0,f,c
  3853   00101A  2A20               	incf	(fputs@i+1)^0,f,c
  3854   00101C                     l2437:
  3855   00101C  501F               	movf	fputs@i^0,w,c
  3856   00101E  241A               	addwf	fputs@s^0,w,c
  3857   001020  6ED9               	movwf	fsr2l,c
  3858   001022  5020               	movf	(fputs@i+1)^0,w,c
  3859   001024  201B               	addwfc	(fputs@s+1)^0,w,c
  3860   001026  6EDA               	movwf	fsr2h,c
  3861   001028  50DF               	movf	indf2,w,c
  3862   00102A  6E1E               	movwf	fputs@c^0,c
  3863   00102C  501E               	movf	fputs@c^0,w,c
  3864   00102E  A4D8               	btfss	status,2,c
  3865   001030  EF1C  F008         	goto	u1301
  3866   001034  EF1E  F008         	goto	u1300
  3867   001038                     u1301:
  3868   001038  EF03  F008         	goto	l2433
  3869   00103C                     u1300:
  3870   00103C  0012               	return		;funcret
  3871   00103E                     __end_of_fputs:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function ___lomod *****************
  3875 ;; Defined at:
  3876 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  dividend        8   14[COMRAM] unsigned long long 
  3879 ;;  divisor         8   22[COMRAM] unsigned long long 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  counter         1   30[COMRAM] unsigned char 
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  8   14[COMRAM] unsigned long long 
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3891 ;;      Params:        16       0       0       0       0       0       0
  3892 ;;      Locals:         1       0       0       0       0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0
  3894 ;;      Totals:        17       0       0       0       0       0       0
  3895 ;;Total ram usage:       17 bytes
  3896 ;; Hardware stack levels used: 1
  3897 ;; Hardware stack levels required when called: 4
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_utoa
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text8
  3906   000BEE                     __ptext8:
  3907                           	callstack 0
  3908   000BEE                     ___lomod:
  3909                           	callstack 21
  3910   000BEE  5017               	movf	___lomod@divisor^0,w,c
  3911   000BF0  1018               	iorwf	(___lomod@divisor+1)^0,w,c
  3912   000BF2  1019               	iorwf	(___lomod@divisor+2)^0,w,c
  3913   000BF4  101A               	iorwf	(___lomod@divisor+3)^0,w,c
  3914   000BF6  101B               	iorwf	(___lomod@divisor+4)^0,w,c
  3915   000BF8  101C               	iorwf	(___lomod@divisor+5)^0,w,c
  3916   000BFA  101D               	iorwf	(___lomod@divisor+6)^0,w,c
  3917   000BFC  101E               	iorwf	(___lomod@divisor+7)^0,w,c
  3918   000BFE  B4D8               	btfsc	status,2,c
  3919   000C00  EF04  F006         	goto	u1351
  3920   000C04  EF06  F006         	goto	u1350
  3921   000C08                     u1351:
  3922   000C08  EF4E  F006         	goto	l864
  3923   000C0C                     u1350:
  3924   000C0C  0E01               	movlw	1
  3925   000C0E  6E1F               	movwf	___lomod@counter^0,c
  3926   000C10  EF14  F006         	goto	l2467
  3927   000C14                     l2465:
  3928   000C14  90D8               	bcf	status,0,c
  3929   000C16  3617               	rlcf	___lomod@divisor^0,f,c
  3930   000C18  3618               	rlcf	(___lomod@divisor+1)^0,f,c
  3931   000C1A  3619               	rlcf	(___lomod@divisor+2)^0,f,c
  3932   000C1C  361A               	rlcf	(___lomod@divisor+3)^0,f,c
  3933   000C1E  361B               	rlcf	(___lomod@divisor+4)^0,f,c
  3934   000C20  361C               	rlcf	(___lomod@divisor+5)^0,f,c
  3935   000C22  361D               	rlcf	(___lomod@divisor+6)^0,f,c
  3936   000C24  361E               	rlcf	(___lomod@divisor+7)^0,f,c
  3937   000C26  2A1F               	incf	___lomod@counter^0,f,c
  3938   000C28                     l2467:
  3939   000C28  AE1E               	btfss	(___lomod@divisor+7)^0,7,c
  3940   000C2A  EF19  F006         	goto	u1361
  3941   000C2E  EF1B  F006         	goto	u1360
  3942   000C32                     u1361:
  3943   000C32  EF0A  F006         	goto	l2465
  3944   000C36                     u1360:
  3945   000C36                     l2469:
  3946   000C36  5017               	movf	___lomod@divisor^0,w,c
  3947   000C38  5C0F               	subwf	___lomod@dividend^0,w,c
  3948   000C3A  5018               	movf	(___lomod@divisor+1)^0,w,c
  3949   000C3C  5810               	subwfb	(___lomod@dividend+1)^0,w,c
  3950   000C3E  5019               	movf	(___lomod@divisor+2)^0,w,c
  3951   000C40  5811               	subwfb	(___lomod@dividend+2)^0,w,c
  3952   000C42  501A               	movf	(___lomod@divisor+3)^0,w,c
  3953   000C44  5812               	subwfb	(___lomod@dividend+3)^0,w,c
  3954   000C46  501B               	movf	(___lomod@divisor+4)^0,w,c
  3955   000C48  5813               	subwfb	(___lomod@dividend+4)^0,w,c
  3956   000C4A  501C               	movf	(___lomod@divisor+5)^0,w,c
  3957   000C4C  5814               	subwfb	(___lomod@dividend+5)^0,w,c
  3958   000C4E  501D               	movf	(___lomod@divisor+6)^0,w,c
  3959   000C50  5815               	subwfb	(___lomod@dividend+6)^0,w,c
  3960   000C52  501E               	movf	(___lomod@divisor+7)^0,w,c
  3961   000C54  5816               	subwfb	(___lomod@dividend+7)^0,w,c
  3962   000C56  A0D8               	btfss	status,0,c
  3963   000C58  EF30  F006         	goto	u1371
  3964   000C5C  EF32  F006         	goto	u1370
  3965   000C60                     u1371:
  3966   000C60  EF42  F006         	goto	l2473
  3967   000C64                     u1370:
  3968   000C64  5017               	movf	___lomod@divisor^0,w,c
  3969   000C66  5E0F               	subwf	___lomod@dividend^0,f,c
  3970   000C68  5018               	movf	(___lomod@divisor+1)^0,w,c
  3971   000C6A  5A10               	subwfb	(___lomod@dividend+1)^0,f,c
  3972   000C6C  5019               	movf	(___lomod@divisor+2)^0,w,c
  3973   000C6E  5A11               	subwfb	(___lomod@dividend+2)^0,f,c
  3974   000C70  501A               	movf	(___lomod@divisor+3)^0,w,c
  3975   000C72  5A12               	subwfb	(___lomod@dividend+3)^0,f,c
  3976   000C74  501B               	movf	(___lomod@divisor+4)^0,w,c
  3977   000C76  5A13               	subwfb	(___lomod@dividend+4)^0,f,c
  3978   000C78  501C               	movf	(___lomod@divisor+5)^0,w,c
  3979   000C7A  5A14               	subwfb	(___lomod@dividend+5)^0,f,c
  3980   000C7C  501D               	movf	(___lomod@divisor+6)^0,w,c
  3981   000C7E  5A15               	subwfb	(___lomod@dividend+6)^0,f,c
  3982   000C80  501E               	movf	(___lomod@divisor+7)^0,w,c
  3983   000C82  5A16               	subwfb	(___lomod@dividend+7)^0,f,c
  3984   000C84                     l2473:
  3985   000C84  90D8               	bcf	status,0,c
  3986   000C86  321E               	rrcf	(___lomod@divisor+7)^0,f,c
  3987   000C88  321D               	rrcf	(___lomod@divisor+6)^0,f,c
  3988   000C8A  321C               	rrcf	(___lomod@divisor+5)^0,f,c
  3989   000C8C  321B               	rrcf	(___lomod@divisor+4)^0,f,c
  3990   000C8E  321A               	rrcf	(___lomod@divisor+3)^0,f,c
  3991   000C90  3219               	rrcf	(___lomod@divisor+2)^0,f,c
  3992   000C92  3218               	rrcf	(___lomod@divisor+1)^0,f,c
  3993   000C94  3217               	rrcf	___lomod@divisor^0,f,c
  3994   000C96  2E1F               	decfsz	___lomod@counter^0,f,c
  3995   000C98  EF1B  F006         	goto	l2469
  3996   000C9C                     l864:
  3997   000C9C  C00F  F00F         	movff	___lomod@dividend,?___lomod
  3998   000CA0  C010  F010         	movff	___lomod@dividend+1,?___lomod+1
  3999   000CA4  C011  F011         	movff	___lomod@dividend+2,?___lomod+2
  4000   000CA8  C012  F012         	movff	___lomod@dividend+3,?___lomod+3
  4001   000CAC  C013  F013         	movff	___lomod@dividend+4,?___lomod+4
  4002   000CB0  C014  F014         	movff	___lomod@dividend+5,?___lomod+5
  4003   000CB4  C015  F015         	movff	___lomod@dividend+6,?___lomod+6
  4004   000CB8  C016  F016         	movff	___lomod@dividend+7,?___lomod+7
  4005   000CBC  0012               	return		;funcret
  4006   000CBE                     __end_of___lomod:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function ___lodiv *****************
  4010 ;; Defined at:
  4011 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  dividend        8   14[COMRAM] unsigned long long 
  4014 ;;  divisor         8   22[COMRAM] unsigned long long 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  quotient        8   30[COMRAM] unsigned long long 
  4017 ;;  counter         1   38[COMRAM] unsigned char 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  8   14[COMRAM] unsigned long long 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4027 ;;      Params:        16       0       0       0       0       0       0
  4028 ;;      Locals:         9       0       0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0
  4030 ;;      Totals:        25       0       0       0       0       0       0
  4031 ;;Total ram usage:       25 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 4
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_utoa
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text9
  4042   000AFE                     __ptext9:
  4043                           	callstack 0
  4044   000AFE                     ___lodiv:
  4045                           	callstack 21
  4046   000AFE  EE20  F01F         	lfsr	2,___lodiv@quotient
  4047   000B02  0E07               	movlw	7
  4048   000B04                     u1311:
  4049   000B04  6ADE               	clrf	postinc2,c
  4050   000B06  06E8               	decf	wreg,f,c
  4051   000B08  E2FD               	bc	u1311
  4052   000B0A  5017               	movf	___lodiv@divisor^0,w,c
  4053   000B0C  1018               	iorwf	(___lodiv@divisor+1)^0,w,c
  4054   000B0E  1019               	iorwf	(___lodiv@divisor+2)^0,w,c
  4055   000B10  101A               	iorwf	(___lodiv@divisor+3)^0,w,c
  4056   000B12  101B               	iorwf	(___lodiv@divisor+4)^0,w,c
  4057   000B14  101C               	iorwf	(___lodiv@divisor+5)^0,w,c
  4058   000B16  101D               	iorwf	(___lodiv@divisor+6)^0,w,c
  4059   000B18  101E               	iorwf	(___lodiv@divisor+7)^0,w,c
  4060   000B1A  B4D8               	btfsc	status,2,c
  4061   000B1C  EF92  F005         	goto	u1321
  4062   000B20  EF94  F005         	goto	u1320
  4063   000B24                     u1321:
  4064   000B24  EFE6  F005         	goto	l854
  4065   000B28                     u1320:
  4066   000B28  0E01               	movlw	1
  4067   000B2A  6E27               	movwf	___lodiv@counter^0,c
  4068   000B2C  EFA2  F005         	goto	l2447
  4069   000B30                     l2445:
  4070   000B30  90D8               	bcf	status,0,c
  4071   000B32  3617               	rlcf	___lodiv@divisor^0,f,c
  4072   000B34  3618               	rlcf	(___lodiv@divisor+1)^0,f,c
  4073   000B36  3619               	rlcf	(___lodiv@divisor+2)^0,f,c
  4074   000B38  361A               	rlcf	(___lodiv@divisor+3)^0,f,c
  4075   000B3A  361B               	rlcf	(___lodiv@divisor+4)^0,f,c
  4076   000B3C  361C               	rlcf	(___lodiv@divisor+5)^0,f,c
  4077   000B3E  361D               	rlcf	(___lodiv@divisor+6)^0,f,c
  4078   000B40  361E               	rlcf	(___lodiv@divisor+7)^0,f,c
  4079   000B42  2A27               	incf	___lodiv@counter^0,f,c
  4080   000B44                     l2447:
  4081   000B44  AE1E               	btfss	(___lodiv@divisor+7)^0,7,c
  4082   000B46  EFA7  F005         	goto	u1331
  4083   000B4A  EFA9  F005         	goto	u1330
  4084   000B4E                     u1331:
  4085   000B4E  EF98  F005         	goto	l2445
  4086   000B52                     u1330:
  4087   000B52                     l2449:
  4088   000B52  90D8               	bcf	status,0,c
  4089   000B54  361F               	rlcf	___lodiv@quotient^0,f,c
  4090   000B56  3620               	rlcf	(___lodiv@quotient+1)^0,f,c
  4091   000B58  3621               	rlcf	(___lodiv@quotient+2)^0,f,c
  4092   000B5A  3622               	rlcf	(___lodiv@quotient+3)^0,f,c
  4093   000B5C  3623               	rlcf	(___lodiv@quotient+4)^0,f,c
  4094   000B5E  3624               	rlcf	(___lodiv@quotient+5)^0,f,c
  4095   000B60  3625               	rlcf	(___lodiv@quotient+6)^0,f,c
  4096   000B62  3626               	rlcf	(___lodiv@quotient+7)^0,f,c
  4097   000B64  5017               	movf	___lodiv@divisor^0,w,c
  4098   000B66  5C0F               	subwf	___lodiv@dividend^0,w,c
  4099   000B68  5018               	movf	(___lodiv@divisor+1)^0,w,c
  4100   000B6A  5810               	subwfb	(___lodiv@dividend+1)^0,w,c
  4101   000B6C  5019               	movf	(___lodiv@divisor+2)^0,w,c
  4102   000B6E  5811               	subwfb	(___lodiv@dividend+2)^0,w,c
  4103   000B70  501A               	movf	(___lodiv@divisor+3)^0,w,c
  4104   000B72  5812               	subwfb	(___lodiv@dividend+3)^0,w,c
  4105   000B74  501B               	movf	(___lodiv@divisor+4)^0,w,c
  4106   000B76  5813               	subwfb	(___lodiv@dividend+4)^0,w,c
  4107   000B78  501C               	movf	(___lodiv@divisor+5)^0,w,c
  4108   000B7A  5814               	subwfb	(___lodiv@dividend+5)^0,w,c
  4109   000B7C  501D               	movf	(___lodiv@divisor+6)^0,w,c
  4110   000B7E  5815               	subwfb	(___lodiv@dividend+6)^0,w,c
  4111   000B80  501E               	movf	(___lodiv@divisor+7)^0,w,c
  4112   000B82  5816               	subwfb	(___lodiv@dividend+7)^0,w,c
  4113   000B84  A0D8               	btfss	status,0,c
  4114   000B86  EFC7  F005         	goto	u1341
  4115   000B8A  EFC9  F005         	goto	u1340
  4116   000B8E                     u1341:
  4117   000B8E  EFDA  F005         	goto	l2457
  4118   000B92                     u1340:
  4119   000B92  5017               	movf	___lodiv@divisor^0,w,c
  4120   000B94  5E0F               	subwf	___lodiv@dividend^0,f,c
  4121   000B96  5018               	movf	(___lodiv@divisor+1)^0,w,c
  4122   000B98  5A10               	subwfb	(___lodiv@dividend+1)^0,f,c
  4123   000B9A  5019               	movf	(___lodiv@divisor+2)^0,w,c
  4124   000B9C  5A11               	subwfb	(___lodiv@dividend+2)^0,f,c
  4125   000B9E  501A               	movf	(___lodiv@divisor+3)^0,w,c
  4126   000BA0  5A12               	subwfb	(___lodiv@dividend+3)^0,f,c
  4127   000BA2  501B               	movf	(___lodiv@divisor+4)^0,w,c
  4128   000BA4  5A13               	subwfb	(___lodiv@dividend+4)^0,f,c
  4129   000BA6  501C               	movf	(___lodiv@divisor+5)^0,w,c
  4130   000BA8  5A14               	subwfb	(___lodiv@dividend+5)^0,f,c
  4131   000BAA  501D               	movf	(___lodiv@divisor+6)^0,w,c
  4132   000BAC  5A15               	subwfb	(___lodiv@dividend+6)^0,f,c
  4133   000BAE  501E               	movf	(___lodiv@divisor+7)^0,w,c
  4134   000BB0  5A16               	subwfb	(___lodiv@dividend+7)^0,f,c
  4135   000BB2  801F               	bsf	___lodiv@quotient^0,0,c
  4136   000BB4                     l2457:
  4137   000BB4  90D8               	bcf	status,0,c
  4138   000BB6  321E               	rrcf	(___lodiv@divisor+7)^0,f,c
  4139   000BB8  321D               	rrcf	(___lodiv@divisor+6)^0,f,c
  4140   000BBA  321C               	rrcf	(___lodiv@divisor+5)^0,f,c
  4141   000BBC  321B               	rrcf	(___lodiv@divisor+4)^0,f,c
  4142   000BBE  321A               	rrcf	(___lodiv@divisor+3)^0,f,c
  4143   000BC0  3219               	rrcf	(___lodiv@divisor+2)^0,f,c
  4144   000BC2  3218               	rrcf	(___lodiv@divisor+1)^0,f,c
  4145   000BC4  3217               	rrcf	___lodiv@divisor^0,f,c
  4146   000BC6  2E27               	decfsz	___lodiv@counter^0,f,c
  4147   000BC8  EFA9  F005         	goto	l2449
  4148   000BCC                     l854:
  4149   000BCC  C01F  F00F         	movff	___lodiv@quotient,?___lodiv
  4150   000BD0  C020  F010         	movff	___lodiv@quotient+1,?___lodiv+1
  4151   000BD4  C021  F011         	movff	___lodiv@quotient+2,?___lodiv+2
  4152   000BD8  C022  F012         	movff	___lodiv@quotient+3,?___lodiv+3
  4153   000BDC  C023  F013         	movff	___lodiv@quotient+4,?___lodiv+4
  4154   000BE0  C024  F014         	movff	___lodiv@quotient+5,?___lodiv+5
  4155   000BE4  C025  F015         	movff	___lodiv@quotient+6,?___lodiv+6
  4156   000BE8  C026  F016         	movff	___lodiv@quotient+7,?___lodiv+7
  4157   000BEC  0012               	return		;funcret
  4158   000BEE                     __end_of___lodiv:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _ctoa *****************
  4162 ;; Defined at:
  4163 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  4166 ;;		 -> NULL(0), 
  4167 ;;  c               1   27[COMRAM] unsigned char 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  w               2   31[COMRAM] int 
  4170 ;;  l               2   29[COMRAM] int 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  1    wreg      void 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4180 ;;      Params:         3       0       0       0       0       0       0
  4181 ;;      Locals:         4       0       0       0       0       0       0
  4182 ;;      Temps:          1       0       0       0       0       0       0
  4183 ;;      Totals:         8       0       0       0       0       0       0
  4184 ;;Total ram usage:        8 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 7
  4187 ;; This function calls:
  4188 ;;		_fputc
  4189 ;; This function is called by:
  4190 ;;		_vfpfcnvrt
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text10
  4195   000CBE                     __ptext10:
  4196                           	callstack 0
  4197   000CBE                     _ctoa:
  4198                           	callstack 19
  4199   000CBE                     
  4200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  4201   000CBE  5042               	movf	_width^0,w,c
  4202   000CC0  1043               	iorwf	(_width+1)^0,w,c
  4203   000CC2  A4D8               	btfss	status,2,c
  4204   000CC4  EF66  F006         	goto	u1401
  4205   000CC8  EF68  F006         	goto	u1400
  4206   000CCC                     u1401:
  4207   000CCC  EF6E  F006         	goto	l2495
  4208   000CD0                     u1400:
  4209   000CD0  C042  F020         	movff	_width,ctoa@w
  4210   000CD4  C043  F021         	movff	_width+1,ctoa@w+1
  4211   000CD8  EF74  F006         	goto	l1124
  4212   000CDC                     l2495:
  4213   000CDC  0EFF               	movlw	255
  4214   000CDE  2442               	addwf	_width^0,w,c
  4215   000CE0  6E20               	movwf	ctoa@w^0,c
  4216   000CE2  0EFF               	movlw	255
  4217   000CE4  2043               	addwfc	(_width+1)^0,w,c
  4218   000CE6  6E21               	movwf	(ctoa@w+1)^0,c
  4219   000CE8                     l1124:
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  4222   000CE8  BE21               	btfsc	(ctoa@w+1)^0,7,c
  4223   000CEA  EF79  F006         	goto	u1411
  4224   000CEE  EF7B  F006         	goto	u1410
  4225   000CF2                     u1411:
  4226   000CF2  EF7D  F006         	goto	l2499
  4227   000CF6                     u1410:
  4228   000CF6  EF81  F006         	goto	l1128
  4229   000CFA                     l2499:
  4230   000CFA  0E00               	movlw	0
  4231   000CFC  6E21               	movwf	(ctoa@w+1)^0,c
  4232   000CFE  0E00               	movlw	0
  4233   000D00  6E20               	movwf	ctoa@w^0,c
  4234   000D02                     l1128:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  4237   000D02  0E00               	movlw	0
  4238   000D04  6E1F               	movwf	(ctoa@l+1)^0,c
  4239   000D06  0E00               	movlw	0
  4240   000D08  6E1E               	movwf	ctoa@l^0,c
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4243   000D0A  EF93  F006         	goto	l2505
  4244   000D0E                     l2501:
  4245                           
  4246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  4247   000D0E  0E00               	movlw	0
  4248   000D10  6E12               	movwf	(fputc@c+1)^0,c
  4249   000D12  0E20               	movlw	32
  4250   000D14  6E11               	movwf	fputc@c^0,c
  4251   000D16  C01A  F013         	movff	ctoa@fp,fputc@fp
  4252   000D1A  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  4253   000D1E  ECAC  F006         	call	_fputc	;wreg free
  4254   000D22                     
  4255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  4256   000D22  4A1E               	infsnz	ctoa@l^0,f,c
  4257   000D24  2A1F               	incf	(ctoa@l+1)^0,f,c
  4258   000D26                     l2505:
  4259                           
  4260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  4261   000D26  5020               	movf	ctoa@w^0,w,c
  4262   000D28  5C1E               	subwf	ctoa@l^0,w,c
  4263   000D2A  501F               	movf	(ctoa@l+1)^0,w,c
  4264   000D2C  0A80               	xorlw	128
  4265   000D2E  6E1D               	movwf	??_ctoa^0,c
  4266   000D30  5021               	movf	(ctoa@w+1)^0,w,c
  4267   000D32  0A80               	xorlw	128
  4268   000D34  581D               	subwfb	??_ctoa^0,w,c
  4269   000D36  A0D8               	btfss	status,0,c
  4270   000D38  EFA0  F006         	goto	u1421
  4271   000D3C  EFA2  F006         	goto	u1420
  4272   000D40                     u1421:
  4273   000D40  EF87  F006         	goto	l2501
  4274   000D44                     u1420:
  4275   000D44                     
  4276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  4277   000D44  C01C  F011         	movff	ctoa@c,fputc@c
  4278   000D48  6A12               	clrf	(fputc@c+1)^0,c
  4279   000D4A  C01A  F013         	movff	ctoa@fp,fputc@fp
  4280   000D4E  C01B  F014         	movff	ctoa@fp+1,fputc@fp+1
  4281   000D52  ECAC  F006         	call	_fputc	;wreg free
  4282   000D56  0012               	return		;funcret
  4283   000D58                     __end_of_ctoa:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _fputc *****************
  4287 ;; Defined at:
  4288 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  c               2   16[COMRAM] int 
  4291 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  4292 ;;		 -> NULL(0), 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  2   16[COMRAM] int 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4304 ;;      Params:         4       0       0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0       0       0
  4306 ;;      Temps:          5       0       0       0       0       0       0
  4307 ;;      Totals:         9       0       0       0       0       0       0
  4308 ;;Total ram usage:        9 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 6
  4311 ;; This function calls:
  4312 ;;		_putch
  4313 ;; This function is called by:
  4314 ;;		_pad
  4315 ;;		_ctoa
  4316 ;;		_vfpfcnvrt
  4317 ;;		_fputs
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text11
  4322   000D58                     __ptext11:
  4323                           	callstack 0
  4324   000D58                     _fputc:
  4325                           	callstack 17
  4326   000D58  5013               	movf	fputc@fp^0,w,c
  4327   000D5A  1014               	iorwf	(fputc@fp+1)^0,w,c
  4328   000D5C  B4D8               	btfsc	status,2,c
  4329   000D5E  EFB3  F006         	goto	u1261
  4330   000D62  EFB5  F006         	goto	u1260
  4331   000D66                     u1261:
  4332   000D66  EFBE  F006         	goto	l2421
  4333   000D6A                     u1260:
  4334   000D6A  5013               	movf	fputc@fp^0,w,c
  4335   000D6C  1014               	iorwf	(fputc@fp+1)^0,w,c
  4336   000D6E  A4D8               	btfss	status,2,c
  4337   000D70  EFBC  F006         	goto	u1271
  4338   000D74  EFBE  F006         	goto	u1270
  4339   000D78                     u1271:
  4340   000D78  EFC3  F006         	goto	l2423
  4341   000D7C                     u1270:
  4342   000D7C                     l2421:
  4343   000D7C  5011               	movf	fputc@c^0,w,c
  4344   000D7E  EC8E  F009         	call	_putch
  4345   000D82  EFF6  F006         	goto	l1173
  4346   000D86                     l2423:
  4347   000D86  EE20 F009          	lfsr	2,9
  4348   000D8A  5013               	movf	fputc@fp^0,w,c
  4349   000D8C  26D9               	addwf	fsr2l,f,c
  4350   000D8E  5014               	movf	(fputc@fp+1)^0,w,c
  4351   000D90  22DA               	addwfc	fsr2h,f,c
  4352   000D92  50DE               	movf	postinc2,w,c
  4353   000D94  10DE               	iorwf	postinc2,w,c
  4354   000D96  B4D8               	btfsc	status,2,c
  4355   000D98  EFD0  F006         	goto	u1281
  4356   000D9C  EFD2  F006         	goto	u1280
  4357   000DA0                     u1281:
  4358   000DA0  EFED  F006         	goto	l2427
  4359   000DA4                     u1280:
  4360   000DA4  EE20 F009          	lfsr	2,9
  4361   000DA8  5013               	movf	fputc@fp^0,w,c
  4362   000DAA  26D9               	addwf	fsr2l,f,c
  4363   000DAC  5014               	movf	(fputc@fp+1)^0,w,c
  4364   000DAE  22DA               	addwfc	fsr2h,f,c
  4365   000DB0  EE10 F003          	lfsr	1,3
  4366   000DB4  5013               	movf	fputc@fp^0,w,c
  4367   000DB6  26E1               	addwf	fsr1l,f,c
  4368   000DB8  5014               	movf	(fputc@fp+1)^0,w,c
  4369   000DBA  22E2               	addwfc	fsr1h,f,c
  4370   000DBC  50DE               	movf	postinc2,w,c
  4371   000DBE  5CE6               	subwf	postinc1,w,c
  4372   000DC0  50E6               	movf	postinc1,w,c
  4373   000DC2  0A80               	xorlw	128
  4374   000DC4  6E19               	movwf	(??_fputc+4)^0,c
  4375   000DC6  50DE               	movf	postinc2,w,c
  4376   000DC8  0A80               	xorlw	128
  4377   000DCA  5819               	subwfb	(??_fputc+4)^0,w,c
  4378   000DCC  B0D8               	btfsc	status,0,c
  4379   000DCE  EFEB  F006         	goto	u1291
  4380   000DD2  EFED  F006         	goto	u1290
  4381   000DD6                     u1291:
  4382   000DD6  EFF6  F006         	goto	l1173
  4383   000DDA                     u1290:
  4384   000DDA                     l2427:
  4385   000DDA  EE20 F003          	lfsr	2,3
  4386   000DDE  5013               	movf	fputc@fp^0,w,c
  4387   000DE0  26D9               	addwf	fsr2l,f,c
  4388   000DE2  5014               	movf	(fputc@fp+1)^0,w,c
  4389   000DE4  22DA               	addwfc	fsr2h,f,c
  4390   000DE6  2ADE               	incf	postinc2,f,c
  4391   000DE8  0E00               	movlw	0
  4392   000DEA  22DD               	addwfc	postdec2,f,c
  4393   000DEC                     l1173:
  4394   000DEC  0012               	return		;funcret
  4395   000DEE                     __end_of_fputc:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _putch *****************
  4399 ;; Defined at:
  4400 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  txData          1    wreg     unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;  txData          1   15[COMRAM] unsigned char 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4414 ;;      Params:         0       0       0       0       0       0       0
  4415 ;;      Locals:         1       0       0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0
  4417 ;;      Totals:         1       0       0       0       0       0       0
  4418 ;;Total ram usage:        1 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 5
  4421 ;; This function calls:
  4422 ;;		_EUSART1_Write
  4423 ;; This function is called by:
  4424 ;;		_fputc
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text12
  4429   00131C                     __ptext12:
  4430                           	callstack 0
  4431   00131C                     _putch:
  4432                           	callstack 17
  4433                           
  4434                           ;incstack = 0
  4435                           ;putch@txData stored from wreg
  4436   00131C  6E10               	movwf	putch@txData^0,c
  4437   00131E                     
  4438                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4439   00131E  5010               	movf	putch@txData^0,w,c
  4440   001320  EC67  F009         	call	_EUSART1_Write
  4441   001324  0012               	return		;funcret
  4442   001326                     __end_of_putch:
  4443                           	callstack 0
  4444                           
  4445 ;; *************** function _EUSART1_Write *****************
  4446 ;; Defined at:
  4447 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  txData          1    wreg     unsigned char 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  txData          1   14[COMRAM] unsigned char 
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4461 ;;      Params:         0       0       0       0       0       0       0
  4462 ;;      Locals:         1       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0
  4464 ;;      Totals:         1       0       0       0       0       0       0
  4465 ;;Total ram usage:        1 bytes
  4466 ;; Hardware stack levels used: 1
  4467 ;; Hardware stack levels required when called: 4
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_putch
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text13
  4476   0012CE                     __ptext13:
  4477                           	callstack 0
  4478   0012CE                     _EUSART1_Write:
  4479                           	callstack 17
  4480                           
  4481                           ;incstack = 0
  4482                           ;EUSART1_Write@txData stored from wreg
  4483   0012CE  6E0F               	movwf	EUSART1_Write@txData^0,c
  4484   0012D0                     l195:
  4485                           
  4486                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4487   0012D0  A89E               	btfss	158,4,c	;volatile
  4488   0012D2  EF6D  F009         	goto	u1251
  4489   0012D6  EF6F  F009         	goto	u1250
  4490   0012DA                     u1251:
  4491   0012DA  EF68  F009         	goto	l195
  4492   0012DE                     u1250:
  4493   0012DE                     
  4494                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4495   0012DE  C00F  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4496   0012E2  0012               	return		;funcret
  4497   0012E4                     __end_of_EUSART1_Write:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function ___wmul *****************
  4501 ;; Defined at:
  4502 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  multiplier      2   14[COMRAM] unsigned int 
  4505 ;;  multiplicand    2   16[COMRAM] unsigned int 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  product         2   18[COMRAM] unsigned int 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2   14[COMRAM] unsigned int 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, prodl, prodh
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4517 ;;      Params:         4       0       0       0       0       0       0
  4518 ;;      Locals:         2       0       0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0
  4520 ;;      Totals:         6       0       0       0       0       0       0
  4521 ;;Total ram usage:        6 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 4
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_read16bit
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text14
  4532   00122E                     __ptext14:
  4533                           	callstack 0
  4534   00122E                     ___wmul:
  4535                           	callstack 25
  4536   00122E  500F               	movf	___wmul@multiplier^0,w,c
  4537   001230  0211               	mulwf	___wmul@multiplicand^0,c
  4538   001232  CFF3 F013          	movff	prodl,___wmul@product
  4539   001236  CFF4 F014          	movff	prodh,___wmul@product+1
  4540   00123A  500F               	movf	___wmul@multiplier^0,w,c
  4541   00123C  0212               	mulwf	(___wmul@multiplicand+1)^0,c
  4542   00123E  50F3               	movf	243,w,c
  4543   001240  2614               	addwf	(___wmul@product+1)^0,f,c
  4544   001242  5010               	movf	(___wmul@multiplier+1)^0,w,c
  4545   001244  0211               	mulwf	___wmul@multiplicand^0,c
  4546   001246  50F3               	movf	243,w,c
  4547   001248  2614               	addwf	(___wmul@product+1)^0,f,c
  4548   00124A  C013  F00F         	movff	___wmul@product,?___wmul
  4549   00124E  C014  F010         	movff	___wmul@product+1,?___wmul+1
  4550   001252  0012               	return		;funcret
  4551   001254                     __end_of___wmul:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function ___lmul *****************
  4555 ;; Defined at:
  4556 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  multiplier      4   14[COMRAM] unsigned long 
  4559 ;;  multiplicand    4   18[COMRAM] unsigned long 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  product         4   22[COMRAM] unsigned long 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  4   14[COMRAM] unsigned long 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4571 ;;      Params:         8       0       0       0       0       0       0
  4572 ;;      Locals:         4       0       0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0
  4574 ;;      Totals:        12       0       0       0       0       0       0
  4575 ;;Total ram usage:       12 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 4
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_read16bit
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text15
  4586   000EE6                     __ptext15:
  4587                           	callstack 0
  4588   000EE6                     ___lmul:
  4589                           	callstack 25
  4590   000EE6  0E00               	movlw	0
  4591   000EE8  6E17               	movwf	___lmul@product^0,c
  4592   000EEA  0E00               	movlw	0
  4593   000EEC  6E18               	movwf	(___lmul@product+1)^0,c
  4594   000EEE  0E00               	movlw	0
  4595   000EF0  6E19               	movwf	(___lmul@product+2)^0,c
  4596   000EF2  0E00               	movlw	0
  4597   000EF4  6E1A               	movwf	(___lmul@product+3)^0,c
  4598   000EF6                     l2673:
  4599   000EF6  A00F               	btfss	___lmul@multiplier^0,0,c
  4600   000EF8  EF80  F007         	goto	u1541
  4601   000EFC  EF82  F007         	goto	u1540
  4602   000F00                     u1541:
  4603   000F00  EF8A  F007         	goto	l2677
  4604   000F04                     u1540:
  4605   000F04  5013               	movf	___lmul@multiplicand^0,w,c
  4606   000F06  2617               	addwf	___lmul@product^0,f,c
  4607   000F08  5014               	movf	(___lmul@multiplicand+1)^0,w,c
  4608   000F0A  2218               	addwfc	(___lmul@product+1)^0,f,c
  4609   000F0C  5015               	movf	(___lmul@multiplicand+2)^0,w,c
  4610   000F0E  2219               	addwfc	(___lmul@product+2)^0,f,c
  4611   000F10  5016               	movf	(___lmul@multiplicand+3)^0,w,c
  4612   000F12  221A               	addwfc	(___lmul@product+3)^0,f,c
  4613   000F14                     l2677:
  4614   000F14  90D8               	bcf	status,0,c
  4615   000F16  3613               	rlcf	___lmul@multiplicand^0,f,c
  4616   000F18  3614               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4617   000F1A  3615               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4618   000F1C  3616               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4619   000F1E  90D8               	bcf	status,0,c
  4620   000F20  3212               	rrcf	(___lmul@multiplier+3)^0,f,c
  4621   000F22  3211               	rrcf	(___lmul@multiplier+2)^0,f,c
  4622   000F24  3210               	rrcf	(___lmul@multiplier+1)^0,f,c
  4623   000F26  320F               	rrcf	___lmul@multiplier^0,f,c
  4624   000F28  500F               	movf	___lmul@multiplier^0,w,c
  4625   000F2A  1010               	iorwf	(___lmul@multiplier+1)^0,w,c
  4626   000F2C  1011               	iorwf	(___lmul@multiplier+2)^0,w,c
  4627   000F2E  1012               	iorwf	(___lmul@multiplier+3)^0,w,c
  4628   000F30  A4D8               	btfss	status,2,c
  4629   000F32  EF9D  F007         	goto	u1551
  4630   000F36  EF9F  F007         	goto	u1550
  4631   000F3A                     u1551:
  4632   000F3A  EF7B  F007         	goto	l2673
  4633   000F3E                     u1550:
  4634   000F3E  C017  F00F         	movff	___lmul@product,?___lmul
  4635   000F42  C018  F010         	movff	___lmul@product+1,?___lmul+1
  4636   000F46  C019  F011         	movff	___lmul@product+2,?___lmul+2
  4637   000F4A  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  4638   000F4E  0012               	return		;funcret
  4639   000F50                     __end_of___lmul:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _EUSART1_Read *****************
  4643 ;; Defined at:
  4644 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4658 ;;      Params:         0       0       0       0       0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0       0       0
  4661 ;;      Totals:         0       0       0       0       0       0       0
  4662 ;;Total ram usage:        0 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 4
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_main
  4669 ;;		_read16bit
  4670 ;;		_getch
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text16
  4675   0011DE                     __ptext16:
  4676                           	callstack 0
  4677   0011DE                     _EUSART1_Read:
  4678                           	callstack 25
  4679   0011DE                     l188:
  4680                           
  4681                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  4682   0011DE  AA9E               	btfss	158,5,c	;volatile
  4683   0011E0  EFF4  F008         	goto	u1511
  4684   0011E4  EFF6  F008         	goto	u1510
  4685   0011E8                     u1511:
  4686   0011E8  EFEF  F008         	goto	l188
  4687   0011EC                     u1510:
  4688   0011EC                     
  4689                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4690   0011EC  0E00               	movlw	0
  4691   0011EE  6E4E               	movwf	_eusart1RxLastError^0,c	;volatile
  4692   0011F0                     
  4693                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  4694   0011F0  A2AB               	btfss	171,1,c	;volatile
  4695   0011F2  EFFD  F008         	goto	u1521
  4696   0011F6  EFFF  F008         	goto	u1520
  4697   0011FA                     u1521:
  4698   0011FA  EF01  F009         	goto	l2645
  4699   0011FE                     u1520:
  4700   0011FE                     
  4701                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  4702   0011FE  98AB               	bcf	171,4,c	;volatile
  4703                           
  4704                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  4705   001200  88AB               	bsf	171,4,c	;volatile
  4706   001202                     l2645:
  4707                           
  4708                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  4709   001202  50AE               	movf	174,w,c	;volatile
  4710   001204  0012               	return		;funcret
  4711   001206                     __end_of_EUSART1_Read:
  4712                           	callstack 0
  4713                           
  4714 ;; *************** function _TMR1_WriteTimer *****************
  4715 ;; Defined at:
  4716 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  timerVal        2   14[COMRAM] unsigned short 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4730 ;;      Params:         2       0       0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0
  4733 ;;      Totals:         2       0       0       0       0       0       0
  4734 ;;Total ram usage:        2 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 4
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;;		_TMR1_Reload
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text17
  4746   001206                     __ptext17:
  4747                           	callstack 0
  4748   001206                     _TMR1_WriteTimer:
  4749                           	callstack 26
  4750   001206                     
  4751                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  4752   001206  A4CD               	btfss	205,2,c	;volatile
  4753   001208  EF08  F009         	goto	u1571
  4754   00120C  EF0A  F009         	goto	u1570
  4755   001210                     u1571:
  4756   001210  EF12  F009         	goto	l2701
  4757   001214                     u1570:
  4758   001214                     
  4759                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  4760   001214  90CD               	bcf	205,0,c	;volatile
  4761   001216                     
  4762                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (uint8_t)(timerVal >> 8);
  4763   001216  5010               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4764   001218  6ECF               	movwf	207,c	;volatile
  4765   00121A                     
  4766                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t)timerVal;
  4767   00121A  C00F  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4768   00121E                     
  4769                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  4770   00121E  80CD               	bsf	205,0,c	;volatile
  4771                           
  4772                           ;mcc_generated_files/tmr1.c: 127:     }
  4773   001220  EF16  F009         	goto	l257
  4774   001224                     l2701:
  4775                           
  4776                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  4777   001224  5010               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  4778   001226  6ECF               	movwf	207,c	;volatile
  4779   001228                     
  4780                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  4781   001228  C00F  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  4782   00122C                     l257:
  4783   00122C  0012               	return		;funcret
  4784   00122E                     __end_of_TMR1_WriteTimer:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _TMR1_HasOverflowOccured *****************
  4788 ;; Defined at:
  4789 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      _Bool 
  4796 ;; Registers used:
  4797 ;;		wreg
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4803 ;;      Params:         0       0       0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 4
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text18
  4818   0012E4                     __ptext18:
  4819                           	callstack 0
  4820   0012E4                     _TMR1_HasOverflowOccured:
  4821                           	callstack 26
  4822   0012E4                     
  4823                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
  4824   0012E4  B09E               	btfsc	158,0,c	;volatile
  4825   0012E6  EF77  F009         	goto	u1581
  4826   0012EA  EF7A  F009         	goto	u1580
  4827   0012EE                     u1581:
  4828   0012EE  0E01               	movlw	1
  4829   0012F0  EF7B  F009         	goto	u1586
  4830   0012F4                     u1580:
  4831   0012F4  0E00               	movlw	0
  4832   0012F6                     u1586:
  4833   0012F6  0012               	return		;funcret
  4834   0012F8                     __end_of_TMR1_HasOverflowOccured:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function _TMR0_WriteTimer *****************
  4838 ;; Defined at:
  4839 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  timerVal        2   14[COMRAM] unsigned short 
  4842 ;; Auto vars:     Size  Location     Type
  4843 ;;		None
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4853 ;;      Params:         2       0       0       0       0       0       0
  4854 ;;      Locals:         0       0       0       0       0       0       0
  4855 ;;      Temps:          0       0       0       0       0       0       0
  4856 ;;      Totals:         2       0       0       0       0       0       0
  4857 ;;Total ram usage:        2 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 4
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text19
  4868   001326                     __ptext19:
  4869                           	callstack 0
  4870   001326                     _TMR0_WriteTimer:
  4871                           	callstack 26
  4872   001326                     
  4873                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  4874   001326  5010               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4875   001328  6ED7               	movwf	215,c	;volatile
  4876   00132A                     
  4877                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  4878   00132A  C00F  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4879   00132E  0012               	return		;funcret
  4880   001330                     __end_of_TMR0_WriteTimer:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _SYSTEM_Initialize *****************
  4884 ;; Defined at:
  4885 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4899 ;;      Params:         0       0       0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0
  4901 ;;      Temps:          0       0       0       0       0       0       0
  4902 ;;      Totals:         0       0       0       0       0       0       0
  4903 ;;Total ram usage:        0 bytes
  4904 ;; Hardware stack levels used: 1
  4905 ;; Hardware stack levels required when called: 6
  4906 ;; This function calls:
  4907 ;;		_EPWM1_Initialize
  4908 ;;		_EUSART1_Initialize
  4909 ;;		_INTERRUPT_Initialize
  4910 ;;		_OSCILLATOR_Initialize
  4911 ;;		_PIN_MANAGER_Initialize
  4912 ;;		_TMR0_Initialize
  4913 ;;		_TMR1_Initialize
  4914 ;;		_TMR2_Initialize
  4915 ;; This function is called by:
  4916 ;;		_main
  4917 ;; This function uses a non-reentrant model
  4918 ;;
  4919                           
  4920                           	psect	text20
  4921   001254                     __ptext20:
  4922                           	callstack 0
  4923   001254                     _SYSTEM_Initialize:
  4924                           	callstack 24
  4925   001254                     
  4926                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  4927   001254  ECB1  F009         	call	_INTERRUPT_Initialize	;wreg free
  4928   001258                     
  4929                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4930   001258  ECC6  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  4931   00125C                     
  4932                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4933   00125C  EC59  F009         	call	_OSCILLATOR_Initialize	;wreg free
  4934   001260                     
  4935                           ;mcc_generated_files/mcc.c: 56:     EPWM1_Initialize();
  4936   001260  EC3B  F009         	call	_EPWM1_Initialize	;wreg free
  4937   001264                     
  4938                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  4939   001264  EC86  F009         	call	_TMR2_Initialize	;wreg free
  4940   001268                     
  4941                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  4942   001268  EC4B  F009         	call	_TMR1_Initialize	;wreg free
  4943   00126C                     
  4944                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  4945   00126C  EC7B  F008         	call	_TMR0_Initialize	;wreg free
  4946   001270                     
  4947                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  4948   001270  EC40  F008         	call	_EUSART1_Initialize	;wreg free
  4949   001274  0012               	return		;funcret
  4950   001276                     __end_of_SYSTEM_Initialize:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _TMR2_Initialize *****************
  4954 ;; Defined at:
  4955 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         0       0       0       0       0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0
  4972 ;;      Totals:         0       0       0       0       0       0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 4
  4976 ;; This function calls:
  4977 ;;		Nothing
  4978 ;; This function is called by:
  4979 ;;		_SYSTEM_Initialize
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text21
  4984   00130C                     __ptext21:
  4985                           	callstack 0
  4986   00130C                     _TMR2_Initialize:
  4987                           	callstack 25
  4988   00130C                     
  4989                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  4990   00130C  0E3F               	movlw	63
  4991   00130E  6EBB               	movwf	187,c	;volatile
  4992                           
  4993                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4994   001310  0E00               	movlw	0
  4995   001312  6EBC               	movwf	188,c	;volatile
  4996   001314                     
  4997                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4998   001314  929E               	bcf	158,1,c	;volatile
  4999                           
  5000                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  5001   001316  0E05               	movlw	5
  5002   001318  6EBA               	movwf	186,c	;volatile
  5003   00131A  0012               	return		;funcret
  5004   00131C                     __end_of_TMR2_Initialize:
  5005                           	callstack 0
  5006                           
  5007 ;; *************** function _TMR1_Initialize *****************
  5008 ;; Defined at:
  5009 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, status,2
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5023 ;;      Params:         0       0       0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_SYSTEM_Initialize
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text22
  5038   001296                     __ptext22:
  5039                           	callstack 0
  5040   001296                     _TMR1_Initialize:
  5041                           	callstack 25
  5042   001296                     
  5043                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  5044   001296  0E00               	movlw	0
  5045   001298  6ECC               	movwf	204,c	;volatile
  5046                           
  5047                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0xE0;
  5048   00129A  0EE0               	movlw	224
  5049   00129C  6ECF               	movwf	207,c	;volatile
  5050                           
  5051                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  5052   00129E  0E00               	movlw	0
  5053   0012A0  6ECE               	movwf	206,c	;volatile
  5054   0012A2                     
  5055                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  5056   0012A2  CFCE F046          	movff	4046,_timer1ReloadVal	;volatile
  5057   0012A6  CFCF F047          	movff	4047,_timer1ReloadVal+1	;volatile
  5058   0012AA                     
  5059                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  5060   0012AA  909E               	bcf	158,0,c	;volatile
  5061                           
  5062                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  5063   0012AC  0E31               	movlw	49
  5064   0012AE  6ECD               	movwf	205,c	;volatile
  5065   0012B0  0012               	return		;funcret
  5066   0012B2                     __end_of_TMR1_Initialize:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _TMR0_Initialize *****************
  5070 ;; Defined at:
  5071 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5085 ;;      Params:         0       0       0       0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0
  5087 ;;      Temps:          2       0       0       0       0       0       0
  5088 ;;      Totals:         2       0       0       0       0       0       0
  5089 ;;Total ram usage:        2 bytes
  5090 ;; Hardware stack levels used: 1
  5091 ;; Hardware stack levels required when called: 5
  5092 ;; This function calls:
  5093 ;;		_TMR0_SetInterruptHandler
  5094 ;; This function is called by:
  5095 ;;		_SYSTEM_Initialize
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text23
  5100   0010F6                     __ptext23:
  5101                           	callstack 0
  5102   0010F6                     _TMR0_Initialize:
  5103                           	callstack 24
  5104   0010F6                     
  5105                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  5106   0010F6  9CD5               	bcf	213,6,c	;volatile
  5107   0010F8                     
  5108                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xE0;
  5109   0010F8  0EE0               	movlw	224
  5110   0010FA  6ED7               	movwf	215,c	;volatile
  5111                           
  5112                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xBF;
  5113   0010FC  0EBF               	movlw	191
  5114   0010FE  6ED6               	movwf	214,c	;volatile
  5115   001100                     
  5116                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  5117   001100  50D6               	movf	214,w,c	;volatile
  5118   001102  CFD7 F011          	movff	4055,??_TMR0_Initialize	;volatile
  5119   001106  6A12               	clrf	(??_TMR0_Initialize+1)^0,c
  5120   001108  C011  F012         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5121   00110C  6A11               	clrf	??_TMR0_Initialize^0,c
  5122   00110E  1011               	iorwf	??_TMR0_Initialize^0,w,c
  5123   001110  6E48               	movwf	_timer0ReloadVal^0,c	;volatile
  5124   001112  5012               	movf	(??_TMR0_Initialize+1)^0,w,c
  5125   001114  6E49               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  5126   001116                     
  5127                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  5128   001116  94F2               	bcf	242,2,c	;volatile
  5129   001118                     
  5130                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  5131   001118  8AF2               	bsf	242,5,c	;volatile
  5132   00111A                     
  5133                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5134   00111A  0E66               	movlw	low _TMR0_DefaultInterruptHandler
  5135   00111C  6E0F               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  5136   00111E  0E13               	movlw	high _TMR0_DefaultInterruptHandler
  5137   001120  6E10               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  5138   001122  EC98  F009         	call	_TMR0_SetInterruptHandler	;wreg free
  5139   001126                     
  5140                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x98;
  5141   001126  0E98               	movlw	152
  5142   001128  6ED5               	movwf	213,c	;volatile
  5143   00112A  0012               	return		;funcret
  5144   00112C                     __end_of_TMR0_Initialize:
  5145                           	callstack 0
  5146                           
  5147 ;; *************** function _TMR0_SetInterruptHandler *****************
  5148 ;; Defined at:
  5149 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  5152 ;;		 -> TMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, status,2, status,0
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5164 ;;      Params:         2       0       0       0       0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0
  5167 ;;      Totals:         2       0       0       0       0       0       0
  5168 ;;Total ram usage:        2 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 4
  5171 ;; This function calls:
  5172 ;;		Nothing
  5173 ;; This function is called by:
  5174 ;;		_TMR0_Initialize
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text24
  5180   001330                     __ptext24:
  5181                           	callstack 0
  5182   001330                     _TMR0_SetInterruptHandler:
  5183                           	callstack 26
  5184   001330                     
  5185                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  5186   001330  C00F  F04A         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  5187   001334  C010  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  5188   001338  0012               	return		;funcret
  5189   00133A                     __end_of_TMR0_SetInterruptHandler:
  5190                           	callstack 0
  5191                           
  5192 ;; *************** function _PIN_MANAGER_Initialize *****************
  5193 ;; Defined at:
  5194 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;		None
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;		None
  5199 ;; Return value:  Size  Location     Type
  5200 ;;                  1    wreg      void 
  5201 ;; Registers used:
  5202 ;;		wreg, status,2
  5203 ;; Tracked objects:
  5204 ;;		On entry : 0/0
  5205 ;;		On exit  : 0/0
  5206 ;;		Unchanged: 0/0
  5207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5208 ;;      Params:         0       0       0       0       0       0       0
  5209 ;;      Locals:         0       0       0       0       0       0       0
  5210 ;;      Temps:          0       0       0       0       0       0       0
  5211 ;;      Totals:         0       0       0       0       0       0       0
  5212 ;;Total ram usage:        0 bytes
  5213 ;; Hardware stack levels used: 1
  5214 ;; Hardware stack levels required when called: 4
  5215 ;; This function calls:
  5216 ;;		Nothing
  5217 ;; This function is called by:
  5218 ;;		_SYSTEM_Initialize
  5219 ;; This function uses a non-reentrant model
  5220 ;;
  5221                           
  5222                           	psect	text25
  5223   00118C                     __ptext25:
  5224                           	callstack 0
  5225   00118C                     _PIN_MANAGER_Initialize:
  5226                           	callstack 25
  5227   00118C                     
  5228                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5229   00118C  0E00               	movlw	0
  5230   00118E  6E89               	movwf	137,c	;volatile
  5231                           
  5232                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5233   001190  0E00               	movlw	0
  5234   001192  6E8A               	movwf	138,c	;volatile
  5235                           
  5236                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5237   001194  0E00               	movlw	0
  5238   001196  6E8B               	movwf	139,c	;volatile
  5239   001198                     
  5240                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  5241   001198  6892               	setf	146,c	;volatile
  5242   00119A                     
  5243                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  5244   00119A  6893               	setf	147,c	;volatile
  5245                           
  5246                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  5247   00119C  0EBB               	movlw	187
  5248   00119E  6E94               	movwf	148,c	;volatile
  5249                           
  5250                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  5251   0011A0  0E3C               	movlw	60
  5252   0011A2  010F               	movlb	15	; () banked
  5253   0011A4  6F3A               	movwf	58,b	;volatile
  5254                           
  5255                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  5256   0011A6  0E3F               	movlw	63
  5257   0011A8  6F39               	movwf	57,b	;volatile
  5258                           
  5259                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  5260   0011AA  0E2F               	movlw	47
  5261   0011AC  6F38               	movwf	56,b	;volatile
  5262                           
  5263                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5264   0011AE  0E00               	movlw	0
  5265   0011B0  6E61               	movwf	97,c	;volatile
  5266   0011B2                     
  5267                           ; BSR set to: 15
  5268                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  5269   0011B2  8EF1               	bsf	241,7,c	;volatile
  5270   0011B4                     
  5271                           ; BSR set to: 15
  5272   0011B4  0012               	return		;funcret
  5273   0011B6                     __end_of_PIN_MANAGER_Initialize:
  5274                           	callstack 0
  5275                           
  5276 ;; *************** function _OSCILLATOR_Initialize *****************
  5277 ;; Defined at:
  5278 ;;		line 63 in file "mcc_generated_files/mcc.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5292 ;;      Params:         0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used: 1
  5298 ;; Hardware stack levels required when called: 4
  5299 ;; This function calls:
  5300 ;;		Nothing
  5301 ;; This function is called by:
  5302 ;;		_SYSTEM_Initialize
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text26
  5307   0012B2                     __ptext26:
  5308                           	callstack 0
  5309   0012B2                     _OSCILLATOR_Initialize:
  5310                           	callstack 25
  5311   0012B2                     
  5312                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  5313   0012B2  0E70               	movlw	112
  5314   0012B4  6ED3               	movwf	211,c	;volatile
  5315                           
  5316                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  5317   0012B6  0E04               	movlw	4
  5318   0012B8  6ED2               	movwf	210,c	;volatile
  5319                           
  5320                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  5321   0012BA  0E40               	movlw	64
  5322   0012BC  6E9B               	movwf	155,c	;volatile
  5323   0012BE                     l299:
  5324                           
  5325                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  5326   0012BE  AED2               	btfss	4050,7,c	;volatile
  5327   0012C0  EF64  F009         	goto	u1531
  5328   0012C4  EF66  F009         	goto	u1530
  5329   0012C8                     u1531:
  5330   0012C8  EF5F  F009         	goto	l299
  5331   0012CC                     u1530:
  5332   0012CC  0012               	return		;funcret
  5333   0012CE                     __end_of_OSCILLATOR_Initialize:
  5334                           	callstack 0
  5335                           
  5336 ;; *************** function _INTERRUPT_Initialize *****************
  5337 ;; Defined at:
  5338 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      void 
  5345 ;; Registers used:
  5346 ;;		None
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5352 ;;      Params:         0       0       0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; Hardware stack levels required when called: 4
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_SYSTEM_Initialize
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text27
  5367   001362                     __ptext27:
  5368                           	callstack 0
  5369   001362                     _INTERRUPT_Initialize:
  5370                           	callstack 25
  5371   001362                     
  5372                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  5373   001362  9ED0               	bcf	208,7,c	;volatile
  5374   001364  0012               	return		;funcret
  5375   001366                     __end_of_INTERRUPT_Initialize:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _EUSART1_Initialize *****************
  5379 ;; Defined at:
  5380 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2, status,0, cstack
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5394 ;;      Params:         0       0       0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 5
  5401 ;; This function calls:
  5402 ;;		_EUSART1_SetErrorHandler
  5403 ;;		_EUSART1_SetFramingErrorHandler
  5404 ;;		_EUSART1_SetOverrunErrorHandler
  5405 ;; This function is called by:
  5406 ;;		_SYSTEM_Initialize
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text28
  5411   001080                     __ptext28:
  5412                           	callstack 0
  5413   001080                     _EUSART1_Initialize:
  5414                           	callstack 24
  5415   001080                     
  5416                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  5417   001080  0E08               	movlw	8
  5418   001082  6EB8               	movwf	184,c	;volatile
  5419                           
  5420                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  5421   001084  0E90               	movlw	144
  5422   001086  6EAB               	movwf	171,c	;volatile
  5423                           
  5424                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  5425   001088  0E24               	movlw	36
  5426   00108A  6EAC               	movwf	172,c	;volatile
  5427                           
  5428                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  5429   00108C  0E82               	movlw	130
  5430   00108E  6EAF               	movwf	175,c	;volatile
  5431                           
  5432                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  5433   001090  0E06               	movlw	6
  5434   001092  6EB0               	movwf	176,c	;volatile
  5435   001094                     
  5436                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  5437   001094  0E00               	movlw	0
  5438   001096  6E0F               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  5439   001098  0E00               	movlw	0
  5440   00109A  6E10               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  5441   00109C  ECA2  F009         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  5442   0010A0                     
  5443                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  5444   0010A0  0E00               	movlw	0
  5445   0010A2  6E0F               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  5446   0010A4  0E00               	movlw	0
  5447   0010A6  6E10               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  5448   0010A8  EC9D  F009         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  5449   0010AC                     
  5450                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  5451   0010AC  0E00               	movlw	0
  5452   0010AE  6E0F               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  5453   0010B0  0E00               	movlw	0
  5454   0010B2  6E10               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  5455   0010B4  ECA7  F009         	call	_EUSART1_SetErrorHandler	;wreg free
  5456   0010B8                     
  5457                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  5458   0010B8  0E00               	movlw	0
  5459   0010BA  6E4E               	movwf	_eusart1RxLastError^0,c	;volatile
  5460   0010BC  0012               	return		;funcret
  5461   0010BE                     __end_of_EUSART1_Initialize:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  5465 ;; Defined at:
  5466 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  5469 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5481 ;;      Params:         2       0       0       0       0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0
  5484 ;;      Totals:         2       0       0       0       0       0       0
  5485 ;;Total ram usage:        2 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 4
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_EUSART1_Initialize
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text29
  5496   00133A                     __ptext29:
  5497                           	callstack 0
  5498   00133A                     _EUSART1_SetOverrunErrorHandler:
  5499                           	callstack 24
  5500   00133A                     
  5501                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  5502   00133A  C00F  F0DA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  5503   00133E  C010  F0DB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  5504   001342  0012               	return		;funcret
  5505   001344                     __end_of_EUSART1_SetOverrunErrorHandler:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  5509 ;; Defined at:
  5510 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  5513 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;		None
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5525 ;;      Params:         2       0       0       0       0       0       0
  5526 ;;      Locals:         0       0       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0
  5528 ;;      Totals:         2       0       0       0       0       0       0
  5529 ;;Total ram usage:        2 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 4
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_EUSART1_Initialize
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text30
  5540   001344                     __ptext30:
  5541                           	callstack 0
  5542   001344                     _EUSART1_SetFramingErrorHandler:
  5543                           	callstack 24
  5544   001344                     
  5545                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  5546   001344  C00F  F0DC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  5547   001348  C010  F0DD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  5548   00134C  0012               	return		;funcret
  5549   00134E                     __end_of_EUSART1_SetFramingErrorHandler:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function _EUSART1_SetErrorHandler *****************
  5553 ;; Defined at:
  5554 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  interruptHan    2   14[COMRAM] PTR FTN()void 
  5557 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      void 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5569 ;;      Params:         2       0       0       0       0       0       0
  5570 ;;      Locals:         0       0       0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0
  5572 ;;      Totals:         2       0       0       0       0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 4
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_EUSART1_Initialize
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text31
  5584   00134E                     __ptext31:
  5585                           	callstack 0
  5586   00134E                     _EUSART1_SetErrorHandler:
  5587                           	callstack 24
  5588   00134E                     
  5589                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  5590   00134E  C00F  F0D8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  5591   001352  C010  F0D9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  5592   001356  0012               	return		;funcret
  5593   001358                     __end_of_EUSART1_SetErrorHandler:
  5594                           	callstack 0
  5595                           
  5596 ;; *************** function _EPWM1_Initialize *****************
  5597 ;; Defined at:
  5598 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;		None
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      void 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5612 ;;      Params:         0       0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0
  5615 ;;      Totals:         0       0       0       0       0       0       0
  5616 ;;Total ram usage:        0 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; Hardware stack levels required when called: 4
  5619 ;; This function calls:
  5620 ;;		Nothing
  5621 ;; This function is called by:
  5622 ;;		_SYSTEM_Initialize
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text32
  5627   001276                     __ptext32:
  5628                           	callstack 0
  5629   001276                     _EPWM1_Initialize:
  5630                           	callstack 25
  5631   001276                     
  5632                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  5633   001276  0E3C               	movlw	60
  5634   001278  6EBD               	movwf	189,c	;volatile
  5635                           
  5636                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  5637   00127A  0E00               	movlw	0
  5638   00127C  6EB6               	movwf	182,c	;volatile
  5639                           
  5640                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  5641   00127E  0E80               	movlw	128
  5642   001280  6EB7               	movwf	183,c	;volatile
  5643                           
  5644                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  5645   001282  0E01               	movlw	1
  5646   001284  6EB9               	movwf	185,c	;volatile
  5647                           
  5648                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  5649   001286  0E00               	movlw	0
  5650   001288  6EBF               	movwf	191,c	;volatile
  5651                           
  5652                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  5653   00128A  0E1F               	movlw	31
  5654   00128C  6EBE               	movwf	190,c	;volatile
  5655                           
  5656                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  5657   00128E  0EFC               	movlw	-4
  5658   001290  010F               	movlb	15	; () banked
  5659   001292  1749               	andwf	73,f,b	;volatile
  5660   001294                     
  5661                           ; BSR set to: 15
  5662   001294  0012               	return		;funcret
  5663   001296                     __end_of_EPWM1_Initialize:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _EUSART1_is_rx_ready *****************
  5667 ;; Defined at:
  5668 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;		None
  5673 ;; Return value:  Size  Location     Type
  5674 ;;                  1    wreg      _Bool 
  5675 ;; Registers used:
  5676 ;;		wreg
  5677 ;; Tracked objects:
  5678 ;;		On entry : 0/0
  5679 ;;		On exit  : 0/0
  5680 ;;		Unchanged: 0/0
  5681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5682 ;;      Params:         0       0       0       0       0       0       0
  5683 ;;      Locals:         0       0       0       0       0       0       0
  5684 ;;      Temps:          0       0       0       0       0       0       0
  5685 ;;      Totals:         0       0       0       0       0       0       0
  5686 ;;Total ram usage:        0 bytes
  5687 ;; Hardware stack levels used: 1
  5688 ;; Hardware stack levels required when called: 4
  5689 ;; This function calls:
  5690 ;;		Nothing
  5691 ;; This function is called by:
  5692 ;;		_main
  5693 ;; This function uses a non-reentrant model
  5694 ;;
  5695                           
  5696                           	psect	text33
  5697   0012F8                     __ptext33:
  5698                           	callstack 0
  5699   0012F8                     _EUSART1_is_rx_ready:
  5700                           	callstack 26
  5701   0012F8                     
  5702                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5703   0012F8  BA9E               	btfsc	158,5,c	;volatile
  5704   0012FA  EF81  F009         	goto	u1561
  5705   0012FE  EF84  F009         	goto	u1560
  5706   001302                     u1561:
  5707   001302  0E01               	movlw	1
  5708   001304  EF85  F009         	goto	u1566
  5709   001308                     u1560:
  5710   001308  0E00               	movlw	0
  5711   00130A                     u1566:
  5712   00130A  0012               	return		;funcret
  5713   00130C                     __end_of_EUSART1_is_rx_ready:
  5714                           	callstack 0
  5715                           
  5716 ;; *************** function _EPWM1_LoadDutyValue *****************
  5717 ;; Defined at:
  5718 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  dutyValue       2   14[COMRAM] unsigned short 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;		None
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  1    wreg      void 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5732 ;;      Params:         2       0       0       0       0       0       0
  5733 ;;      Locals:         0       0       0       0       0       0       0
  5734 ;;      Temps:          2       0       0       0       0       0       0
  5735 ;;      Totals:         4       0       0       0       0       0       0
  5736 ;;Total ram usage:        4 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; Hardware stack levels required when called: 4
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_main
  5743 ;; This function uses a non-reentrant model
  5744 ;;
  5745                           
  5746                           	psect	text34
  5747   00112C                     __ptext34:
  5748                           	callstack 0
  5749   00112C                     _EPWM1_LoadDutyValue:
  5750                           	callstack 26
  5751   00112C                     
  5752                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5753   00112C  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5754   001130  C010  F012         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5755   001134  90D8               	bcf	status,0,c
  5756   001136  3212               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5757   001138  3211               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5758   00113A  90D8               	bcf	status,0,c
  5759   00113C  3212               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5760   00113E  3211               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5761   001140  5011               	movf	??_EPWM1_LoadDutyValue^0,w,c
  5762   001142  6EBE               	movwf	190,c	;volatile
  5763                           
  5764                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5765   001144  C00F  F011         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5766   001148  0E03               	movlw	3
  5767   00114A  1611               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5768   00114C  3A11               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  5769   00114E  0EF0               	movlw	240
  5770   001150  1611               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5771   001152  50BD               	movf	189,w,c	;volatile
  5772   001154  0BCF               	andlw	207
  5773   001156  1011               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  5774   001158  6EBD               	movwf	189,c	;volatile
  5775   00115A  0012               	return		;funcret
  5776   00115C                     __end_of_EPWM1_LoadDutyValue:
  5777                           	callstack 0
  5778                           
  5779 ;; *************** function _INTERRUPT_InterruptManager *****************
  5780 ;; Defined at:
  5781 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;		None
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;		None
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5795 ;;      Params:         0       0       0       0       0       0       0
  5796 ;;      Locals:         0       0       0       0       0       0       0
  5797 ;;      Temps:          6       0       0       0       0       0       0
  5798 ;;      Totals:         6       0       0       0       0       0       0
  5799 ;;Total ram usage:        6 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 3
  5802 ;; This function calls:
  5803 ;;		_TMR0_ISR
  5804 ;; This function is called by:
  5805 ;;		Interrupt level 2
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	intcode
  5810   000008                     __pintcode:
  5811                           	callstack 0
  5812   000008                     _INTERRUPT_InterruptManager:
  5813                           	callstack 17
  5814                           
  5815                           ;incstack = 0
  5816   000008  8250               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5817   00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager
  5818   00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  5819   000012  CFD9 F00B          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  5820   000016  CFDA F00C          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  5821   00001A  CFF3 F00D          	movff	prodl,??_INTERRUPT_InterruptManager+4
  5822   00001E  CFF4 F00E          	movff	prodh,??_INTERRUPT_InterruptManager+5
  5823   000022                     
  5824                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5825   000022  AAF2               	btfss	242,5,c	;volatile
  5826   000024  EF16  F000         	goto	i2u123_41
  5827   000028  EF18  F000         	goto	i2u123_40
  5828   00002C                     i2u123_41:
  5829   00002C  EF21  F000         	goto	i2l413
  5830   000030                     i2u123_40:
  5831   000030  A4F2               	btfss	242,2,c	;volatile
  5832   000032  EF1D  F000         	goto	i2u124_41
  5833   000036  EF1F  F000         	goto	i2u124_40
  5834   00003A                     i2u124_41:
  5835   00003A  EF21  F000         	goto	i2l413
  5836   00003E                     i2u124_40:
  5837   00003E                     
  5838                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  5839   00003E  EC5F  F008         	call	_TMR0_ISR	;wreg free
  5840   000042                     i2l413:
  5841   000042  C00E  FFF4         	movff	??_INTERRUPT_InterruptManager+5,prodh
  5842   000046  C00D  FFF3         	movff	??_INTERRUPT_InterruptManager+4,prodl
  5843   00004A  C00C  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  5844   00004E  C00B  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  5845   000052  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  5846   000056  C009  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  5847   00005A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5848   00005C  0011               	retfie		f
  5849   00005E                     __end_of_INTERRUPT_InterruptManager:
  5850                           	callstack 0
  5851                           
  5852 ;; *************** function _TMR0_ISR *****************
  5853 ;; Defined at:
  5854 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;		None
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;		None
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5868 ;;      Params:         0       0       0       0       0       0       0
  5869 ;;      Locals:         0       0       0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0
  5871 ;;      Totals:         0       0       0       0       0       0       0
  5872 ;;Total ram usage:        0 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; Hardware stack levels required when called: 2
  5875 ;; This function calls:
  5876 ;;		Absolute function
  5877 ;;		_TMR0ISR
  5878 ;;		_TMR0_DefaultInterruptHandler
  5879 ;; This function is called by:
  5880 ;;		_INTERRUPT_InterruptManager
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           	psect	text36
  5885   0010BE                     __ptext36:
  5886                           	callstack 0
  5887   0010BE                     _TMR0_ISR:
  5888                           	callstack 17
  5889   0010BE                     
  5890                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  5891   0010BE  94F2               	bcf	242,2,c	;volatile
  5892   0010C0                     
  5893                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  5894   0010C0  5049               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  5895   0010C2  6ED7               	movwf	215,c	;volatile
  5896   0010C4                     
  5897                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  5898   0010C4  C048  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5899   0010C8                     
  5900                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  5901   0010C8  504A               	movf	_TMR0_InterruptHandler^0,w,c
  5902   0010CA  104B               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5903   0010CC  B4D8               	btfsc	status,2,c
  5904   0010CE  EF6B  F008         	goto	i2u99_41
  5905   0010D2  EF6D  F008         	goto	i2u99_40
  5906   0010D6                     i2u99_41:
  5907   0010D6  EF7A  F008         	goto	i2l90
  5908   0010DA                     i2u99_40:
  5909   0010DA                     
  5910                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  5911   0010DA  D802               	call	i2u100_48
  5912   0010DC  EF7A  F008         	goto	i2u100_49
  5913   0010E0                     i2u100_48:
  5914   0010E0  0005               	push	
  5915   0010E2  6EFA               	movwf	pclath,c
  5916   0010E4  504A               	movf	_TMR0_InterruptHandler^0,w,c
  5917   0010E6  6EFD               	movwf	tosl,c
  5918   0010E8  504B               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5919   0010EA  6EFE               	movwf	tosh,c
  5920   0010EC  50F8               	movf	tblptru,w,c
  5921   0010EE  6EFF               	movwf	tosu,c
  5922   0010F0  50FA               	movf	pclath,w,c
  5923   0010F2  0012               	return		;indir
  5924   0010F4                     i2u100_49:
  5925   0010F4                     i2l90:
  5926   0010F4  0012               	return		;funcret
  5927   0010F6                     __end_of_TMR0_ISR:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _TMR0ISR *****************
  5931 ;; Defined at:
  5932 ;;		line 206 in file "main.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5946 ;;      Params:         0       0       0       0       0       0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0
  5948 ;;      Temps:          4       0       0       0       0       0       0
  5949 ;;      Totals:         4       0       0       0       0       0       0
  5950 ;;Total ram usage:        4 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 1
  5953 ;; This function calls:
  5954 ;;		i2_EPWM1_LoadDutyValue
  5955 ;;		i2_TMR0_WriteTimer
  5956 ;; This function is called by:
  5957 ;;		_main
  5958 ;;		_TMR0_ISR
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text37
  5963   000DEE                     __ptext37:
  5964                           	callstack 0
  5965   000DEE                     _TMR0ISR:
  5966                           	callstack 17
  5967   000DEE                     
  5968                           ;main.c: 209:     if(gensin)
  5969   000DEE  504D               	movf	_gensin^0,w,c
  5970   000DF0  B4D8               	btfsc	status,2,c
  5971   000DF2  EFFD  F006         	goto	i2u94_41
  5972   000DF6  EFFF  F006         	goto	i2u94_40
  5973   000DFA                     i2u94_41:
  5974   000DFA  EF2E  F007         	goto	i2l2093
  5975   000DFE                     i2u94_40:
  5976   000DFE                     
  5977                           ;main.c: 210:     {;main.c: 212:         phaseAccumulator += phaseIncrement;
  5978   000DFE  0100               	movlb	0	; () banked
  5979   000E00  51A0               	movf	_phaseIncrement& (0+255),w,b
  5980   000E02  27D6               	addwf	_phaseAccumulator& (0+255),f,b
  5981   000E04  51A1               	movf	(_phaseIncrement+1)& (0+255),w,b
  5982   000E06  23D7               	addwfc	(_phaseAccumulator+1)& (0+255),f,b
  5983                           
  5984                           ;main.c: 213:         phase = phaseAccumulator >> 10;
  5985   000E08  C0D6  F005         	movff	_phaseAccumulator,??_TMR0ISR
  5986   000E0C  C0D7  F006         	movff	_phaseAccumulator+1,??_TMR0ISR+1
  5987   000E10  0E0A               	movlw	10
  5988   000E12  6E07               	movwf	(??_TMR0ISR+2)^0,c
  5989   000E14                     i2u95_45:
  5990   000E14  90D8               	bcf	status,0,c
  5991   000E16  3206               	rrcf	(??_TMR0ISR+1)^0,f,c
  5992   000E18  3205               	rrcf	??_TMR0ISR^0,f,c
  5993   000E1A  2E07               	decfsz	(??_TMR0ISR+2)^0,f,c
  5994   000E1C  EF0A  F007         	goto	i2u95_45
  5995   000E20  5005               	movf	??_TMR0ISR^0,w,c
  5996   000E22  6E4C               	movwf	_phase^0,c
  5997   000E24                     
  5998                           ; BSR set to: 0
  5999                           ;main.c: 216:         EPWM1_LoadDutyValue((((uint16_t)sin[phase]) * amplitude) >> 4);
  6000   000E24  0E60               	movlw	low _sin
  6001   000E26  244C               	addwf	_phase^0,w,c
  6002   000E28  6ED9               	movwf	fsr2l,c
  6003   000E2A  6ADA               	clrf	fsr2h,c
  6004   000E2C  0E00               	movlw	high _sin
  6005   000E2E  22DA               	addwfc	fsr2h,f,c
  6006   000E30  50DF               	movf	indf2,w,c
  6007   000E32  6E05               	movwf	??_TMR0ISR^0,c
  6008   000E34  5005               	movf	??_TMR0ISR^0,w,c
  6009   000E36  024F               	mulwf	_amplitude^0,c
  6010   000E38  CFF3 F006          	movff	prodl,??_TMR0ISR+1
  6011   000E3C  CFF4 F007          	movff	prodh,??_TMR0ISR+2
  6012   000E40  0E04               	movlw	4
  6013   000E42  6E08               	movwf	(??_TMR0ISR+3)^0,c
  6014   000E44                     i2u96_45:
  6015   000E44  90D8               	bcf	status,0,c
  6016   000E46  3207               	rrcf	(??_TMR0ISR+2)^0,f,c
  6017   000E48  3206               	rrcf	(??_TMR0ISR+1)^0,f,c
  6018   000E4A  2E08               	decfsz	(??_TMR0ISR+3)^0,f,c
  6019   000E4C  EF22  F007         	goto	i2u96_45
  6020   000E50  C006  F001         	movff	??_TMR0ISR+1,i2EPWM1_LoadDutyValue@dutyValue
  6021   000E54  C007  F002         	movff	??_TMR0ISR+2,i2EPWM1_LoadDutyValue@dutyValue+1
  6022   000E58  ECAE  F008         	call	i2_EPWM1_LoadDutyValue	;wreg free
  6023   000E5C                     i2l2093:
  6024                           
  6025                           ;main.c: 219:     TMR0_WriteTimer(0x0000 - 488 - 276);
  6026   000E5C  0EFD               	movlw	253
  6027   000E5E  6E02               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
  6028   000E60  0E04               	movlw	4
  6029   000E62  6E01               	movwf	i2TMR0_WriteTimer@timerVal^0,c
  6030   000E64  ECAC  F009         	call	i2_TMR0_WriteTimer	;wreg free
  6031   000E68                     
  6032                           ;main.c: 220:     INTCONbits.TMR0IF = 0;
  6033   000E68  94F2               	bcf	242,2,c	;volatile
  6034   000E6A  0012               	return		;funcret
  6035   000E6C                     __end_of_TMR0ISR:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6039 ;; Defined at:
  6040 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		None
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6054 ;;      Params:         0       0       0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_TMR0_Initialize
  6064 ;;		_TMR0_ISR
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           	psect	text38
  6069   001366                     __ptext38:
  6070                           	callstack 0
  6071   001366                     _TMR0_DefaultInterruptHandler:
  6072                           	callstack 18
  6073   001366  0012               	return		;funcret
  6074   001368                     __end_of_TMR0_DefaultInterruptHandler:
  6075                           	callstack 0
  6076                           
  6077 ;; *************** function i2_TMR0_WriteTimer *****************
  6078 ;; Defined at:
  6079 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  timerVal        2    0[COMRAM] unsigned short 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6093 ;;      Params:         2       0       0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0
  6096 ;;      Totals:         2       0       0       0       0       0       0
  6097 ;;Total ram usage:        2 bytes
  6098 ;; Hardware stack levels used: 1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_TMR0ISR
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text39
  6107   001358                     __ptext39:
  6108                           	callstack 0
  6109   001358                     i2_TMR0_WriteTimer:
  6110                           	callstack 17
  6111   001358                     
  6112                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  6113   001358  5002               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
  6114   00135A  6ED7               	movwf	215,c	;volatile
  6115   00135C                     
  6116                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6117   00135C  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  6118   001360  0012               	return		;funcret
  6119   001362                     __end_ofi2_TMR0_WriteTimer:
  6120                           	callstack 0
  6121                           
  6122 ;; *************** function i2_EPWM1_LoadDutyValue *****************
  6123 ;; Defined at:
  6124 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  dutyValue       2    0[COMRAM] unsigned short 
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;		None
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      void 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6138 ;;      Params:         2       0       0       0       0       0       0
  6139 ;;      Locals:         0       0       0       0       0       0       0
  6140 ;;      Temps:          2       0       0       0       0       0       0
  6141 ;;      Totals:         4       0       0       0       0       0       0
  6142 ;;Total ram usage:        4 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_TMR0ISR
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text40
  6152   00115C                     __ptext40:
  6153                           	callstack 0
  6154   00115C                     i2_EPWM1_LoadDutyValue:
  6155                           	callstack 17
  6156   00115C                     
  6157                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  6158   00115C  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
  6159   001160  C002  F004         	movff	i2EPWM1_LoadDutyValue@dutyValue+1,??i2_EPWM1_LoadDutyValue+1
  6160   001164  90D8               	bcf	status,0,c
  6161   001166  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
  6162   001168  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
  6163   00116A  90D8               	bcf	status,0,c
  6164   00116C  3204               	rrcf	(??i2_EPWM1_LoadDutyValue+1)^0,f,c
  6165   00116E  3203               	rrcf	??i2_EPWM1_LoadDutyValue^0,f,c
  6166   001170  5003               	movf	??i2_EPWM1_LoadDutyValue^0,w,c
  6167   001172  6EBE               	movwf	190,c	;volatile
  6168                           
  6169                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  6170   001174  C001  F003         	movff	i2EPWM1_LoadDutyValue@dutyValue,??i2_EPWM1_LoadDutyValue
  6171   001178  0E03               	movlw	3
  6172   00117A  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
  6173   00117C  3A03               	swapf	??i2_EPWM1_LoadDutyValue^0,f,c
  6174   00117E  0EF0               	movlw	240
  6175   001180  1603               	andwf	??i2_EPWM1_LoadDutyValue^0,f,c
  6176   001182  50BD               	movf	189,w,c	;volatile
  6177   001184  0BCF               	andlw	207
  6178   001186  1003               	iorwf	??i2_EPWM1_LoadDutyValue^0,w,c
  6179   001188  6EBD               	movwf	189,c	;volatile
  6180   00118A  0012               	return		;funcret
  6181   00118C                     __end_ofi2_EPWM1_LoadDutyValue:
  6182                           	callstack 0
  6183                           
  6184                           	psect	text41
  6185   000000                     __ptext41:
  6186                           	callstack 0
  6187   000000                     
  6188                           	psect	rparam
  6189   000000                     
  6190                           	psect	temp
  6191   000050                     btemp:
  6192                           	callstack 0
  6193   000050                     	ds	1
  6194   000000                     int$flags	set	btemp
  6195   000000                     wtemp8	set	btemp+1
  6196   000000                     ttemp5	set	btemp+1
  6197   000000                     ttemp6	set	btemp+4
  6198   000000                     ttemp7	set	btemp+8
  6199                           
  6200                           	psect	idloc
  6201                           
  6202                           ;Config register IDLOC0 @ 0x200000
  6203                           ;	unspecified, using default values
  6204   200000                     	org	2097152
  6205   200000  FF                 	db	255
  6206                           
  6207                           ;Config register IDLOC1 @ 0x200001
  6208                           ;	unspecified, using default values
  6209   200001                     	org	2097153
  6210   200001  FF                 	db	255
  6211                           
  6212                           ;Config register IDLOC2 @ 0x200002
  6213                           ;	unspecified, using default values
  6214   200002                     	org	2097154
  6215   200002  FF                 	db	255
  6216                           
  6217                           ;Config register IDLOC3 @ 0x200003
  6218                           ;	unspecified, using default values
  6219   200003                     	org	2097155
  6220   200003  FF                 	db	255
  6221                           
  6222                           ;Config register IDLOC4 @ 0x200004
  6223                           ;	unspecified, using default values
  6224   200004                     	org	2097156
  6225   200004  FF                 	db	255
  6226                           
  6227                           ;Config register IDLOC5 @ 0x200005
  6228                           ;	unspecified, using default values
  6229   200005                     	org	2097157
  6230   200005  FF                 	db	255
  6231                           
  6232                           ;Config register IDLOC6 @ 0x200006
  6233                           ;	unspecified, using default values
  6234   200006                     	org	2097158
  6235   200006  FF                 	db	255
  6236                           
  6237                           ;Config register IDLOC7 @ 0x200007
  6238                           ;	unspecified, using default values
  6239   200007                     	org	2097159
  6240   200007  FF                 	db	255
  6241                           
  6242                           	psect	config
  6243                           
  6244                           ; Padding undefined space
  6245   300000                     	org	3145728
  6246   300000  FF                 	db	255
  6247                           
  6248                           ;Config register CONFIG1H @ 0x300001
  6249                           ;	Oscillator Selection bits
  6250                           ;	FOSC = INTIO67, Internal oscillator block
  6251                           ;	4X PLL Enable
  6252                           ;	PLLCFG = OFF, Oscillator used directly
  6253                           ;	Primary clock enable bit
  6254                           ;	PRICLKEN = ON, Primary clock enabled
  6255                           ;	Fail-Safe Clock Monitor Enable bit
  6256                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6257                           ;	Internal/External Oscillator Switchover bit
  6258                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6259   300001                     	org	3145729
  6260   300001  28                 	db	40
  6261                           
  6262                           ;Config register CONFIG2L @ 0x300002
  6263                           ;	Power-up Timer Enable bit
  6264                           ;	PWRTEN = OFF, Power up timer disabled
  6265                           ;	Brown-out Reset Enable bits
  6266                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6267                           ;	Brown Out Reset Voltage bits
  6268                           ;	BORV = 190, VBOR set to 1.90 V nominal
  6269   300002                     	org	3145730
  6270   300002  1F                 	db	31
  6271                           
  6272                           ;Config register CONFIG2H @ 0x300003
  6273                           ;	Watchdog Timer Enable bits
  6274                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  6275                           ;	Watchdog Timer Postscale Select bits
  6276                           ;	WDTPS = 32768, 1:32768
  6277   300003                     	org	3145731
  6278   300003  3C                 	db	60
  6279                           
  6280                           ; Padding undefined space
  6281   300004                     	org	3145732
  6282   300004  FF                 	db	255
  6283                           
  6284                           ;Config register CONFIG3H @ 0x300005
  6285                           ;	CCP2 MUX bit
  6286                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  6287                           ;	PORTB A/D Enable bit
  6288                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  6289                           ;	P3A/CCP3 Mux bit
  6290                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  6291                           ;	HFINTOSC Fast Start-up
  6292                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  6293                           ;	Timer3 Clock input mux bit
  6294                           ;	T3CMX = PORTC0, T3CKI is on RC0
  6295                           ;	ECCP2 B output mux bit
  6296                           ;	P2BMX = PORTB5, P2B is on RB5
  6297                           ;	MCLR Pin Enable bit
  6298                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  6299   300005                     	org	3145733
  6300   300005  BF                 	db	191
  6301                           
  6302                           ;Config register CONFIG4L @ 0x300006
  6303                           ;	Stack Full/Underflow Reset Enable bit
  6304                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6305                           ;	Single-Supply ICSP Enable bit
  6306                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  6307                           ;	Extended Instruction Set Enable bit
  6308                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6309                           ;	Background Debug
  6310                           ;	DEBUG = OFF, Disabled
  6311   300006                     	org	3145734
  6312   300006  85                 	db	133
  6313                           
  6314                           ; Padding undefined space
  6315   300007                     	org	3145735
  6316   300007  FF                 	db	255
  6317                           
  6318                           ;Config register CONFIG5L @ 0x300008
  6319                           ;	Code Protection Block 0
  6320                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6321                           ;	Code Protection Block 1
  6322                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6323                           ;	Code Protection Block 2
  6324                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6325                           ;	Code Protection Block 3
  6326                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6327   300008                     	org	3145736
  6328   300008  0F                 	db	15
  6329                           
  6330                           ;Config register CONFIG5H @ 0x300009
  6331                           ;	Boot Block Code Protection bit
  6332                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6333                           ;	Data EEPROM Code Protection bit
  6334                           ;	CPD = OFF, Data EEPROM not code-protected
  6335   300009                     	org	3145737
  6336   300009  C0                 	db	192
  6337                           
  6338                           ;Config register CONFIG6L @ 0x30000A
  6339                           ;	Write Protection Block 0
  6340                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6341                           ;	Write Protection Block 1
  6342                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6343                           ;	Write Protection Block 2
  6344                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6345                           ;	Write Protection Block 3
  6346                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6347   30000A                     	org	3145738
  6348   30000A  0F                 	db	15
  6349                           
  6350                           ;Config register CONFIG6H @ 0x30000B
  6351                           ;	Configuration Register Write Protection bit
  6352                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6353                           ;	Boot Block Write Protection bit
  6354                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6355                           ;	Data EEPROM Write Protection bit
  6356                           ;	WRTD = OFF, Data EEPROM not write-protected
  6357   30000B                     	org	3145739
  6358   30000B  E0                 	db	224
  6359                           
  6360                           ;Config register CONFIG7L @ 0x30000C
  6361                           ;	Table Read Protection Block 0
  6362                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6363                           ;	Table Read Protection Block 1
  6364                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6365                           ;	Table Read Protection Block 2
  6366                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6367                           ;	Table Read Protection Block 3
  6368                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6369   30000C                     	org	3145740
  6370   30000C  0F                 	db	15
  6371                           
  6372                           ;Config register CONFIG7H @ 0x30000D
  6373                           ;	Boot Block Table Read Protection bit
  6374                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6375   30000D                     	org	3145741
  6376   30000D  40                 	db	64
  6377                           tosu	equ	0xFFF
  6378                           tosh	equ	0xFFE
  6379                           tosl	equ	0xFFD
  6380                           stkptr	equ	0xFFC
  6381                           pclatu	equ	0xFFB
  6382                           pclath	equ	0xFFA
  6383                           pcl	equ	0xFF9
  6384                           tblptru	equ	0xFF8
  6385                           tblptrh	equ	0xFF7
  6386                           tblptrl	equ	0xFF6
  6387                           tablat	equ	0xFF5
  6388                           prodh	equ	0xFF4
  6389                           prodl	equ	0xFF3
  6390                           indf0	equ	0xFEF
  6391                           postinc0	equ	0xFEE
  6392                           postdec0	equ	0xFED
  6393                           preinc0	equ	0xFEC
  6394                           plusw0	equ	0xFEB
  6395                           fsr0h	equ	0xFEA
  6396                           fsr0l	equ	0xFE9
  6397                           wreg	equ	0xFE8
  6398                           indf1	equ	0xFE7
  6399                           postinc1	equ	0xFE6
  6400                           postdec1	equ	0xFE5
  6401                           preinc1	equ	0xFE4
  6402                           plusw1	equ	0xFE3
  6403                           fsr1h	equ	0xFE2
  6404                           fsr1l	equ	0xFE1
  6405                           bsr	equ	0xFE0
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           preinc2	equ	0xFDC
  6410                           plusw2	equ	0xFDB
  6411                           fsr2h	equ	0xFDA
  6412                           fsr2l	equ	0xFD9
  6413                           status	equ	0xFD8

Data Sizes:
    Strings     1039
    Constant    0
    Data        67
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     65      79
    BANK0           160     52     159
    BANK1           256     12      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1491$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1491$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[3]), STR_50(CODE[3]), 
		 -> STR_49(CODE[17]), STR_48(CODE[8]), STR_47(CODE[23]), STR_46(CODE[6]), 
		 -> STR_45(CODE[33]), STR_44(CODE[6]), STR_43(CODE[35]), STR_42(CODE[35]), 
		 -> STR_41(CODE[25]), STR_40(CODE[25]), STR_39(CODE[12]), STR_38(CODE[21]), 
		 -> STR_37(CODE[6]), STR_36(CODE[20]), STR_35(CODE[30]), STR_34(CODE[22]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[9]), STR_30(CODE[52]), 
		 -> STR_29(CODE[20]), STR_28(CODE[28]), STR_27(CODE[30]), STR_26(CODE[21]), 
		 -> STR_25(CODE[52]), STR_24(CODE[21]), STR_23(CODE[44]), STR_22(CODE[24]), 
		 -> STR_21(CODE[21]), STR_20(CODE[7]), STR_19(CODE[15]), STR_18(CODE[52]), 
		 -> STR_17(CODE[32]), STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[13]), 
		 -> STR_13(CODE[28]), STR_12(CODE[27]), STR_11(CODE[12]), STR_10(CODE[52]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[3]), STR_50(CODE[3]), 
		 -> STR_49(CODE[17]), STR_48(CODE[8]), STR_47(CODE[23]), STR_46(CODE[6]), 
		 -> STR_45(CODE[33]), STR_44(CODE[6]), STR_43(CODE[35]), STR_42(CODE[35]), 
		 -> STR_41(CODE[25]), STR_40(CODE[25]), STR_39(CODE[12]), STR_38(CODE[21]), 
		 -> STR_37(CODE[6]), STR_36(CODE[20]), STR_35(CODE[30]), STR_34(CODE[22]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[9]), STR_30(CODE[52]), 
		 -> STR_29(CODE[20]), STR_28(CODE[28]), STR_27(CODE[30]), STR_26(CODE[21]), 
		 -> STR_25(CODE[52]), STR_24(CODE[21]), STR_23(CODE[44]), STR_22(CODE[24]), 
		 -> STR_21(CODE[21]), STR_20(CODE[7]), STR_19(CODE[15]), STR_18(CODE[52]), 
		 -> STR_17(CODE[32]), STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[13]), 
		 -> STR_13(CODE[28]), STR_12(CODE[27]), STR_11(CODE[12]), STR_10(CODE[52]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[3]), STR_50(CODE[3]), 
		 -> STR_49(CODE[17]), STR_48(CODE[8]), STR_47(CODE[23]), STR_46(CODE[6]), 
		 -> STR_45(CODE[33]), STR_44(CODE[6]), STR_43(CODE[35]), STR_42(CODE[35]), 
		 -> STR_41(CODE[25]), STR_40(CODE[25]), STR_39(CODE[12]), STR_38(CODE[21]), 
		 -> STR_37(CODE[6]), STR_36(CODE[20]), STR_35(CODE[30]), STR_34(CODE[22]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[9]), STR_30(CODE[52]), 
		 -> STR_29(CODE[20]), STR_28(CODE[28]), STR_27(CODE[30]), STR_26(CODE[21]), 
		 -> STR_25(CODE[52]), STR_24(CODE[21]), STR_23(CODE[44]), STR_22(CODE[24]), 
		 -> STR_21(CODE[21]), STR_20(CODE[7]), STR_19(CODE[15]), STR_18(CODE[52]), 
		 -> STR_17(CODE[32]), STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[13]), 
		 -> STR_13(CODE[28]), STR_12(CODE[27]), STR_11(CODE[12]), STR_10(CODE[52]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1526$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_53(CODE[3]), STR_52(CODE[3]), STR_51(CODE[3]), STR_50(CODE[3]), 
		 -> STR_49(CODE[17]), STR_48(CODE[8]), STR_47(CODE[23]), STR_46(CODE[6]), 
		 -> STR_45(CODE[33]), STR_44(CODE[6]), STR_43(CODE[35]), STR_42(CODE[35]), 
		 -> STR_41(CODE[25]), STR_40(CODE[25]), STR_39(CODE[12]), STR_38(CODE[21]), 
		 -> STR_37(CODE[6]), STR_36(CODE[20]), STR_35(CODE[30]), STR_34(CODE[22]), 
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[9]), STR_30(CODE[52]), 
		 -> STR_29(CODE[20]), STR_28(CODE[28]), STR_27(CODE[30]), STR_26(CODE[21]), 
		 -> STR_25(CODE[52]), STR_24(CODE[21]), STR_23(CODE[44]), STR_22(CODE[24]), 
		 -> STR_21(CODE[21]), STR_20(CODE[7]), STR_19(CODE[15]), STR_18(CODE[52]), 
		 -> STR_17(CODE[32]), STR_16(CODE[27]), STR_15(CODE[27]), STR_14(CODE[13]), 
		 -> STR_13(CODE[28]), STR_12(CODE[27]), STR_11(CODE[12]), STR_10(CODE[52]), 
		 -> STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_TMR0ISR
    _TMR0ISR->i2_EPWM1_LoadDutyValue

Critical Paths under _main in BANK0

    _main->_read16bit
    _read16bit->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   31214
                                              0 BANK1     12    12      0
                _EPWM1_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
                             _printf
                          _read16bit
 ---------------------------------------------------------------------------------
 (1) _read16bit                                            7     5      2   15721
                                             45 BANK0      7     5      2
                       _EUSART1_Read
                             ___lmul
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4   13520
                                             39 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8663
                                             31 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           25    19      6    8193
                                             61 COMRAM     4     4      0
                                             14 BANK0     17    11      6
                               _ctoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                32    22     10    4572
                                             43 COMRAM    18     8     10
                                              0 BANK0     14    14      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3191
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1506
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) ___lomod                                             17     1     16     412
                                             14 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (6) ___lodiv                                             25     9     16     421
                                             14 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (5) _ctoa                                                 8     5      3    1567
                                             25 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1186
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0      62
                                             15 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (10) _EUSART1_Write                                       1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     642
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     456
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     304
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             16 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     207
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          6     6      0     140
                                              8 COMRAM     6     6      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     140
                   Absolute function *
                            _TMR0ISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0ISR                                             4     4      0     140
                                              4 COMRAM     4     4      0
              i2_EPWM1_LoadDutyValue
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) i2_EPWM1_LoadDutyValue                               4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _TMR1_HasOverflowOccured
   _TMR1_WriteTimer
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _fputc
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc
   _read16bit
     _EUSART1_Read
     ___lmul
     ___wmul
     _printf

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0ISR *
       i2_EPWM1_LoadDutyValue
       i2_TMR0_WriteTimer
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      C       C       6        4.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     34      9F       4       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     41      4F       1       84.0%
BITBIGSFRlhh        27      0       0      25        0.0%
BITBIGSFRhhlhhh     19      0       0      16        0.0%
BITBIGSFRlhlh       17      0       0      26        0.0%
BITBIGSFRlhll        E      0       0      27        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRhhlllh      C      0       0      21        0.0%
BITBIGSFRhhlhhl      C      0       0      19        0.0%
BITBIGSFRhhllll      6      0       0      23        0.0%
BITBIGSFRhl          6      0       0      24        0.0%
BITBIGSFRhhlllh      5      0       0      20        0.0%
BITBIGSFRhhllll      2      0       0      22        0.0%
BITBIGSFRhhlhhl      1      0       0      17        0.0%
BITBIGSFRhhlhhl      1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA      28        0.0%
DATA                 0      0      FA      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Apr 08 18:53:28 2023

                                            l50 115A                                              l27 11B4  
                                            l47 1294                                              l71 112A  
                                            l83 132E                                              l93 1338  
                           ___wmul@multiplicand 0011                                 _timer0ReloadVal 0048  
                                           l204 1324                                             l109 131A  
                                           l222 1356                                             l302 12CC  
                                           l216 134C                                             l219 1342  
                                           l171 10BC                                             l243 12B0  
                                           l406 1364                                             l192 1204  
                                           l416 1252                                             l257 122C  
                                           l345 008E                                             l179 130A  
                                           l427 0F3E                                             l195 12D0  
                                           l347 009C                                             l188 11DE  
                                           l428 0F4E                                             l364 0396  
                                           l356 02C8                                             l269 12F6  
                                           l198 12E2                                             l366 03C6  
                                           l296 1274                                             l299 12BE  
                                           l395 0AA6                                             l396 0AF4  
                                           l397 0AFC                                             l861 0BEC  
                                           l854 0BCC                                             l871 0CBC  
                                           l864 0C9C                                             _PR2 000FBB  
                               _timer1ReloadVal 0046                                             _pad 0E6C  
                                           _sin 0060                                 _TMR2_Initialize 130C  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1114 0E8E  
                                          l1132 0D56                                            l1124 0CE8  
                                          l1118 0EE4                                            l1128 0D02  
                                          l1144 093E                                            l1136 07A2  
                                          l1161 0FF8                                            l1138 07AA  
                                          l1173 0DEC                                            l1181 103C  
                                          l1149 0778                                            l1094 11DC  
                                          l2411 12D0                                            l2413 12DE  
                                          l2421 0D7C                                            l2501 0D0E  
                                          l2415 131E                                            l2423 0D86  
                                          l2503 0D22                                            l2431 0FFA  
                                          l2511 0794                                            l2601 1198  
                                          l2425 0DA4                                            l2417 0D58  
                                          l2505 0D26                                            l2441 0B0A  
                                          l2433 1006                                            l2521 0860  
                                          l2513 07D2                                            l2603 119A  
                                          l2611 10F8                                            l2427 0DDA  
                                          l2419 0D6A                                            l2507 0D44  
                                          l2451 0B64                                            l2443 0B28  
                                          l2435 1018                                            l2531 0904  
                                          l2523 0868                                            l2515 07DC  
                                          l2605 11B2                                            l2621 1126  
                                          l2613 1100                                            l2701 1224  
                                          l2453 0B92                                            l2445 0B30  
                                          l2461 0BEE                                            l2437 101C  
                                          l2533 091E                                            l2525 086E  
                                          l2517 07E4                                            l2509 077A  
                                          l2541 05DC                                            l2607 1276  
                                          l2631 10A0                                            l2615 1116  
                                          l2623 130C                                            l2711 1258  
                                          l2703 1228                                            l2455 0BB2  
                                          l2447 0B44                                            l2439 0AFE  
                                          l2471 0C64                                            l2463 0C0C  
                                          l2519 07EA                                            l2527 08D2  
                                          l2543 05E8                                            l2633 10AC  
                                          l2617 1118                                            l2609 10F6  
                                          l2625 1314                                            l2721 126C  
                                          l2713 125C                                            l2705 12E4  
                                          l2641 11F0                                            l2457 0BB4  
                                          l2449 0B52                                            l2473 0C84  
                                          l2465 0C14                                            l2481 0E86  
                                          l2529 08E6                                            l2553 0658  
                                          l2545 05EC                                            l2537 05AA  
                                          l2801 0130                                            l2635 10B8  
                                          l2627 1080                                            l2619 111A  
                                          l2651 12A2                                            l2723 1270  
                                          l2715 1260                                            l2643 11FE  
                                          l2491 0CBE                                            l2459 0BC6  
                                          l2475 0C96                                            l2467 0C28  
                                          l2483 0E9A                                            l2555 0668  
                                          l2547 0610                                            l2539 05CE  
                                          l2571 0750                                            l2731 0970  
                                          l2803 0138                                            l2629 1094  
                                          l2581 1330                                            l2653 12AA  
                                          l2717 1264                                            l2709 1254  
                                          l2645 1202                                            l2637 11DE  
                                          l2493 0CD0                                            l2469 0C36  
                                          l2485 0EAE                                            l2477 0E6C  
                                          l2565 0712                                            l2557 0684  
                                          l2549 0644                                            l2661 11C0  
                                          l2733 0982                                            l2741 09EC  
                                          l2725 0940                                            l2821 02CE  
                                          l2805 0150                                            l2583 1344  
                                          l2655 1362                                            l2719 1268  
                                          l2639 11EC                                            l2671 0EE6  
                                          l2495 0CDC                                            l2487 0EB2  
                                          l2479 0E7A                                            l2559 06E2  
                                          l2567 073E                                            l2591 0FB4  
                                          l2743 0A02                                            l2735 0996  
                                          l2727 0956                                            l2831 02E4  
                                          l2815 02A6                                            l2807 0290  
                                          l2903 0518                                            l2681 112C  
                                          l2585 133A                                            l2657 12B2  
                                          l2649 1296                                            l2673 0EF6  
                                          l2665 122E                                            l2489 0ED0  
                                          l2593 0FD2                                            l2761 0AD6  
                                          l2753 0A70                                            l2745 0A3A  
                                          l2737 09D4                                            l2729 095E  
                                          l2841 0324                                            l2833 02F8  
                                          l2817 02B4                                            l2809 02A2  
                                          l2905 0594                                            l2587 134E  
                                          l2683 1326                                            l2691 1206  
                                          l2675 0F04                                            l2667 124A  
                                          l2499 0CFA                                            l2595 0FEE  
                                          l2659 11B6                                            l2763 0AE0  
                                          l2755 0A82                                            l2747 0A4C  
                                          l2739 09E6                                            l2851 0386  
                                          l2843 0332                                            l2835 02FC  
                                          l2827 02D2                                            l2819 02B8  
                                          l2685 132A                                            l2693 1214  
                                          l2677 0F14                                            l2589 0FA8  
                                          l2757 0A92                                            l2749 0A5C  
                                          l2765 0AE2                                            l2861 03E8  
                                          l2853 039E                                            l2845 0354  
                                          l2837 030E                                            l2829 02E0  
                                          l2781 00A0                                            l2773 0062  
                                          ?_pad 0021                                            l2687 12F8  
                                          l2599 118C                                            l2695 1216  
                                          l2679 0F1E                                            l2759 0ABA  
                                          l2863 03EA                                            l2871 040C  
                                          l2855 03A8                                            l2847 0364  
                                          l2839 0312                                            l2791 00E4  
                                          l2783 00AC                                            l2775 007C  
                                          l2697 121A                                            l2881 0458  
                                          l2865 03EE                                            l2873 042A  
                                          l2857 03B4                                            l2849 0372  
                                          l2793 00F2                                            l2785 00BA  
                                          l2777 0080                                            l2699 121E  
                                          l2963 052E                                            l2891 04A6  
                                          l2883 0468                                            l2875 043E  
                                          l2867 0402                                            l2859 03D2  
                                          l2795 0100                                            l2787 00C8  
                                          l2779 008C                                            l2965 0730  
                                          l2893 04CC                                            l2885 0476  
                                          l2877 0442                                            l2869 0406  
                                          l2797 010E                                            l2789 00D6  
                                          l2895 04DA                                            l2887 048A  
                                          l2879 044A                                            l2799 011C  
                                          l2897 04EE                                            l2889 0498  
                                          l2899 0500                                            STR_1 7FCA  
                                          STR_2 7E92                                            STR_3 7EF3  
                                          STR_4 7CDC                                            STR_5 7C57  
                                          STR_6 7D05                                            STR_7 7C84  
                                          STR_8 7FF6                                            STR_9 7FF1  
                                          u1300 103C                                            u1301 1038  
                                          u1311 0B04                                            u1400 0CD0  
                                          u1320 0B28                                            u1401 0CCC  
                                          u1321 0B24                                            u1250 12DE  
                                          u1410 0CF6                                            u1330 0B52  
                                          u1251 12DA                                            u1411 0CF2  
                                          u1331 0B4E                                            u1260 0D6A  
                                          u1420 0D44                                            u1340 0B92  
                                          u1500 0FEE                                            u1261 0D66  
                                          u1421 0D40                                            u1341 0B8E  
                                          u1501 0FEA                                            _LATA 000F89  
                                          u1510 11EC                                            u1270 0D7C  
                                          u1350 0C0C                                            u1430 0794  
                                          _LATB 000F8A                                            u1511 11E8  
                                          u1271 0D78                                            u1351 0C08  
                                          u1431 0790                                            _LATC 000F8B  
                                          u1520 11FE                                            u1280 0DA4  
                                          u1360 0C36                                            u1440 08E6  
                                          u1600 0996                                            u1521 11FA  
                                          u1281 0DA0                                            u1361 0C32  
                                          u1441 08E2                                            u1601 0992  
                                          u1530 12CC                                            u1290 0DDA  
                                          u1370 0C64                                            u1450 0904  
                                          u1610 09C6                                            u1531 12C8  
                                          u1291 0DD6                                            u1371 0C60  
                                          u1451 0900                                            u1540 0F04  
                                          u1380 0E7A                                            u1460 091E  
                                          u1700 0AF4                                            u1620 09E6  
                                          u1541 0F00                                            u1381 0E76  
                                          u1461 091A                                            u1701 0AF0  
                                          u1621 09E2                                            u1550 0F3E  
                                          u1390 0ED0                                            u1470 05CE  
                                          u1630 0A02                                            u1710 009C  
                                          u1551 0F3A                                            u1391 0ECC  
                                          u1471 05CA                                            u1631 09FE  
                                          u1615 09BC                                            u1711 0098  
                                          u1560 1308                                            u1480 0610  
                                          u1640 0A36                                            u1720 0130  
                                          u1561 1302                                            u1481 060C  
                                          u1641 0A32                                            u1721 012C  
                                          u1570 1214                                            u1490 0684  
                                          u1650 0A4C                                            u1730 02C8  
                                          u1571 1210                                            u1491 0680  
                                          u1651 0A48                                            u1731 02C4  
                                          u1580 12F4                                            u1660 0A5C  
                                          u1740 02F4                                            u1581 12EE  
                                          u1661 0A58                                            u1741 02F0  
                                          u1566 130A                                            u1670 0A6C  
                                          u1590 0970                                            u1750 0402  
                                          u1671 0A68                                            u1591 096C  
                                          u1751 03FE                                            u1680 0A82  
                                          u1760 042A                                            u1681 0A7E  
                                          u1761 0426                                            u1586 12F6  
                                          u1690 0A92                                            u1770 043E  
                                          u1691 0A8E                                            u1771 043A  
                                          i2l50 118A                                            i2l90 10F4  
                       _TMR1_HasOverflowOccured 12E4                                            i2l83 1360  
                                          i2l96 1366                                            _TMR1 000FCE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                   main@history 0102                                   _EUSART1_Write 12CE  
                               __end_of_TMR0ISR 0E6C                                            _dbuf 00DF  
                                          _ctoa 0CBE                                            _main 0062  
                                 ?_EUSART1_Read 0001                                            _prec 0044  
                                          pad@i 0028                                            pad@p 0025  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002A                                            fsr2l 000FD9  
                                          btemp 0050                                            _utoa 077A  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 005E                           ??_EPWM1_LoadDutyValue 0011  
                                  ___param_bank 000000                                           ??_pad 0027  
                                  main@endSweep 0109                         __end_of_TMR0_Initialize 112C  
                ??_TMR0_DefaultInterruptHandler 0001                   __end_of_OSCILLATOR_Initialize 12CE  
                                         ?_ctoa 001A                                           ?_main 0001  
                                         STR_10 7BEF                                           STR_11 7FB2  
                                         STR_20 7FE4                                           STR_12 7E5E  
                                         STR_21 7F33                                           STR_13 7DF0  
                                         STR_30 7BEF                                           STR_14 7FA5  
                                         STR_22 7EC4                                           STR_31 7FD3  
                                         STR_15 7E43                                           STR_23 7CB0  
                                         STR_32 7D2B                                           STR_24 7F48  
                                         STR_40 7EAB                                           STR_16 7E28  
                                         STR_33 7D2B                                           STR_41 7E79  
                                         STR_17 7D94                                           STR_25 7C23  
                                         STR_18 7BEF                                           STR_34 7DBC  
                                         STR_50 7FF8                                           STR_26 7F1E  
                                         STR_42 7D2D                                           STR_51 7FFB  
                                         STR_19 7F96                                           STR_27 7DD2  
                                         STR_35 7DB4                                           STR_43 7D50  
                                         STR_44 7FEB                                           STR_52 7FFB  
                                         STR_36 7F71                                           STR_28 7E0C  
                                         STR_53 7FFB                                           STR_37 7FEB  
                                         STR_29 7F5D                                           STR_45 7D73  
                                         STR_46 7FEB                                           STR_38 7F09  
                                         STR_39 7FBE                                           STR_47 7EDC  
                                         STR_48 7FDC                                           STR_49 7F85  
                                         ?_utoa 002C                                           _T0CON 000FD5  
                               __end_of___lodiv 0BEE                                           _T1CON 000FCD  
                                         _T2CON 000FBA                                 __end_of___lomod 0CBE  
                                         i2l413 0042                                 _TMR0_WriteTimer 1326  
                                         i2l383 0E6A                                    vfpfcnvrt@fmt 00B2  
                                         _TMR0H 000FD7                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             ___lmul@multiplicand 0013  
                     ?_TMR0_SetInterruptHandler 000F                                __end_of_TMR0_ISR 10F6  
                                         _flags 00DE                                           _fputc 0D58  
                                         _phase 004C                                           _fputs 0FFA  
                                         pad@fp 0021                                           _width 0042  
                                         ctoa@c 001C                                           _putch 131C  
                                         ctoa@l 001E                                           ctoa@w 0020  
                                         main@i 010B                                  ?_EUSART1_Write 0001  
                       __end_of_TMR1_Initialize 12B2                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                ??_EUSART1_Read 000F                                           ttemp5 0051  
                                         ttemp6 0054                                           ttemp7 0058  
                                         utoa@d 002E                                           utoa@i 00AE  
                                         utoa@n 00A6                                           utoa@p 00A4  
                                         utoa@w 00A2                                           status 000FD8  
                                         wtemp8 0051                                ___lodiv@dividend 000F  
            _EUSART1_DefaultFramingErrorHandler 000000                                 _TMR1_WriteTimer 1206  
                               __initialization 0F50                                    __end_of_ctoa 0D58  
                    __end_of_EUSART1_Initialize 10BE                                    __end_of_main 05AA  
                                  __end_of_utoa 0940                               read16bit@maxValue 00CF  
                       __end_of_TMR2_Initialize 131C                     ?_INTERRUPT_InterruptManager 0001  
                       ??i2_EPWM1_LoadDutyValue 0003                                          ??_ctoa 001D  
                                        ??_main 0100                                          ??_utoa 0036  
                                 __activetblptr 000002                                ___lodiv@quotient 001F  
                                     ??_TMR0ISR 0005                       ??_TMR1_HasOverflowOccured 000F  
                                        ?_fputc 0011                                          ?_fputs 001A  
                                        _CCPR1H 000FBF                                          _CCPR1L 000FBE  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 000F  
                                        i2l2015 115C                                          i2l2017 1358  
                                        i2l2121 10C0                                          i2l2019 135C  
                                        i2l2123 10C4                                          i2l2125 10C8  
                                        i2l2127 10DA                                          i2l2119 10BE  
                                        i2l2091 0E24                                          i2l2093 0E5C  
                                        i2l2095 0E68                                          i2l2087 0DEE  
                                        i2l2089 0DFE                                          i2l2355 0022  
                                        i2l2357 0030                                          i2l2359 003E  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 00C7                                          ___lmul 0EE6  
                                        ___wmul 122E                         __end_of_TMR0_WriteTimer 1330  
                                     ??___lodiv 001F                                       ??___lomod 001F  
                                        _gensin 004D                       i2TMR0_WriteTimer@timerVal 0001  
                      ?_EUSART1_SetErrorHandler 000F                                ?_TMR0_Initialize 0001  
                                        clear_0 0F88                                          clear_1 0F94  
                                        isa$std 000001                                          _printf 11B6  
                                        pad@buf 0023                ??_EUSART1_SetOverrunErrorHandler 0011  
               ?_EUSART1_SetOverrunErrorHandler 000F                                          ctoa@fp 001A  
                                        fputc@c 0011                                          fputs@c 001E  
                                        fputs@i 001F                                    __pdataCOMRAM 004F  
                                        fputs@s 001A                                    __mediumconst 7BEE  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 0FFA  
                               ??_EUSART1_Write 000F                                          utoa@fp 002C  
      TMR0_SetInterruptHandler@InterruptHandler 000F                         __end_of_TMR1_WriteTimer 122E  
                            read16bit@character 00D3                                ?_TMR1_Initialize 0001  
                             _SYSTEM_Initialize 1254                                      __accesstop 0060  
                       __end_of__initialization 0F9A                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 103E  
                           ??_SYSTEM_Initialize 0013                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 000F                                   __end_of_fputc 0DEE  
                                 __end_of_fputs 103E                                   __end_of_putch 1326  
                              ?_TMR2_Initialize 0001                  i2EPWM1_LoadDutyValue@dutyValue 0001  
                          __end_of_EUSART1_Read 1206                                         ??_fputc 0015  
                     __end_of_SYSTEM_Initialize 1276                                         ??_fputs 001E  
                                       ??_putch 0010                                      __pbssBANK0 00D6  
                                 read16bit@numb 00D4                 __end_of_EUSART1_SetErrorHandler 1358  
              __end_of_TMR0_SetInterruptHandler 133A                                         ?___lmul 000F  
                                       ?___wmul 000F                                      ??_TMR0_ISR 0009  
                              ?_TMR0_WriteTimer 000F                                         _CCP1CON 000FBD  
                                       _ECCP1AS 000FB6                                  ___lmul@product 0017  
                                       ?_printf 00C9          __end_of_EUSART1_SetFramingErrorHandler 134E  
                _EUSART1_SetFramingErrorHandler 1344                                         _OSCCON2 000FD2  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                         _TMR0ISR 0DEE  
                                       i2u94_40 0DFE                                         i2u94_41 0DFA  
                                       i2u95_45 0E14                                         i2u96_45 0E44  
                                       i2u99_40 10DA                                         i2u99_41 10D6  
                              ?_TMR1_WriteTimer 000F                                ___lomod@dividend 000F  
                   __end_of_EPWM1_LoadDutyValue 115C                                         __Hparam 0000  
                                       __Lparam 0000                                         ___lodiv 0AFE  
                                       ___lomod 0BEE                               __end_of_read16bit 0AFE  
                                     ?_vfprintf 00C1                             _EUSART1_is_rx_ready 12F8  
                                       __pcinit 0F50                                         __ramtop 0600  
                                       __ptext0 0062                                         __ptext1 0940  
                                       __ptext2 11B6                                         __ptext3 0FA8  
                                       __ptext4 05AA                                         __ptext5 077A  
                                       __ptext6 0E6C                                         __ptext7 0FFA  
                                       __ptext8 0BEE                                         __ptext9 0AFE  
                                     _T0CONbits 000FD5                   __end_ofi2_EPWM1_LoadDutyValue 118C  
                                     _T1CONbits 000FCD                           _OSCILLATOR_Initialize 12B2  
                                     _T2CONbits 000FBA                              _EUSART1_Initialize 1080  
                      ??_PIN_MANAGER_Initialize 000F                                         main@cmd 0108  
                          end_of_initialization 0F9A                            ?_EUSART1_is_rx_ready 0001  
                                    fp__TMR0ISR 0000                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0013                                   __Lmediumconst 7BEE  
                   _EUSART1_OverrunErrorHandler 00DA                                         fputs@fp 001C  
                             __end_of_vfpfcnvrt 077A                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 00B6                                      ??_vfprintf 0042  
                                main@startSweep 0106                            ??_EUSART1_Initialize 0011  
                      _TMR0_SetInterruptHandler 1330                             EUSART1_Write@txData 000F  
                         ??_EUSART1_is_rx_ready 000F                                    _EUSART1_Read 11DE  
                                    read16bit@i 00D1                    __end_of_INTERRUPT_Initialize 1366  
                                __end_of___lmul 0F50                                     vfpfcnvrt@ap 00B4  
                                   vfpfcnvrt@cp 00BF                                     vfpfcnvrt@fp 00B0  
                                __end_of___wmul 1254                                   __pidataCOMRAM 1368  
                        ?_OSCILLATOR_Initialize 0001                        ?_TMR1_HasOverflowOccured 0001  
                                __end_of_printf 11DE                             start_initialization 0F50  
                               ___lodiv@divisor 0017                                 ___lodiv@counter 0027  
                                   __end_of_pad 0EE6                                     putch@txData 0010  
                  EPWM1_LoadDutyValue@dutyValue 000F                           __end_of_EUSART1_Write 12E4  
                                   vfprintf@fmt 00C3                                        ??___lmul 0017  
                                      ??___wmul 0013                                     __pdataBANK0 0060  
                                      ??_printf 0042                                     __pbssCOMRAM 0042  
                                 __pcstackBANK0 00A2                                   __pcstackBANK1 0100  
                                      ?_TMR0ISR 0001                                  read16bit@digit 00D2  
              ??_EUSART1_SetFramingErrorHandler 0011                 ?_EUSART1_SetFramingErrorHandler 000F  
                         _TMR0_InterruptHandler 004A                          _PIN_MANAGER_Initialize 118C  
                                     __pintcode 0008                                   __pmediumconst 7BEE  
                                      ?___lodiv 000F                                        ?___lomod 000F  
               __end_of_TMR1_HasOverflowOccured 12F8                                       _amplitude 004F  
                  ??_INTERRUPT_InterruptManager 0009                                       _read16bit 0940  
                               ___lomod@divisor 0017                                 ___lomod@counter 001F  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                          _EUSART1_ErrorHandler 00D8                         _EUSART1_SetErrorHandler 134E  
                          _INTERRUPT_Initialize 1362                               ??_TMR0_Initialize 0011  
                                ___wmul@product 0013         EUSART1_SetErrorHandler@interruptHandler 000F  
                                      i2u100_48 10E0                                        i2u100_49 10F4  
                                      i2u123_40 0030                                        i2u123_41 002C  
                                      i2u124_40 003E                                        i2u124_41 003A  
                    ??_TMR0_SetInterruptHandler 0011                                        _PIR1bits 000F9E  
                                      _RCONbits 000FD0                                        _TMR0_ISR 10BE  
                                      _PSTR1CON 000FB9                                       _vfpfcnvrt 05AA  
                             ??_TMR1_Initialize 000F                               ___wmul@multiplier 000F  
                                    ?_read16bit 00CF                                _EPWM1_Initialize 1276  
                             i2_TMR0_WriteTimer 1358                           i2_EPWM1_LoadDutyValue 115C  
                                    vfpfcnvrt@c 00BE                              ?i2_TMR0_WriteTimer 0001  
                             ___lmul@multiplier 000F                                     _INTCON2bits 000FF1  
                                     copy_data0 0F64                           ?_INTERRUPT_Initialize 0001  
                             ??_TMR2_Initialize 000F                                  _phaseIncrement 00A0  
                           ??i2_TMR0_WriteTimer 0003                                        __Hrparam 0000  
                                    vfprintf@ap 00C5                                        __Lrparam 0000  
                                    vfprintf@fp 00C1                         ??_OSCILLATOR_Initialize 000F  
                                    ?_vfpfcnvrt 00B0                       __end_ofi2_TMR0_WriteTimer 1362  
                     ??_EUSART1_SetErrorHandler 0011                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 130C                                        __ptext10 0CBE  
                                      __ptext11 0D58                                        __ptext20 1254  
                                      __ptext12 131C                                        __ptext21 130C  
                                      __ptext13 12CE                                      _T1GCONbits 000FCC  
                                      __ptext30 1344                                        __ptext22 1296  
                                      __ptext14 122E                                        __ptext31 134E  
                                      __ptext23 10F6                                        __ptext15 0EE6  
                                      __ptext40 115C                                        __ptext32 1276  
                                      __ptext24 1330                                        __ptext16 11DE  
                                      __ptext41 0000                                        __ptext33 12F8  
                                      __ptext25 118C                                        __ptext17 1206  
                                      __ptext34 112C                                        __ptext26 12B2  
                                      __ptext18 12E4                                        __ptext27 1362  
                                      __ptext19 1326                                        __ptext36 10BE  
                                      __ptext28 1080                                        __ptext37 0DEE  
                                      __ptext29 133A                                        __ptext38 1366  
                                      __ptext39 1358                         TMR0_WriteTimer@timerVal 000F  
                             ??_TMR0_WriteTimer 0011            __end_of_TMR0_DefaultInterruptHandler 1368  
                  _TMR0_DefaultInterruptHandler 1366  EUSART1_SetOverrunErrorHandler@interruptHandler 000F  
                                      isa$xinst 000000                                        int$flags 0050  
                                      _vfprintf 0FA8              __end_of_INTERRUPT_InterruptManager 005E  
                    _INTERRUPT_InterruptManager 0008                                       printf@fmt 00C9  
                             ??_TMR1_WriteTimer 0011                     _EUSART1_FramingErrorHandler 00DC  
                                   ??_read16bit 0042                          ?i2_EPWM1_LoadDutyValue 0001  
                                    _INTCONbits 000FF2                          ??_INTERRUPT_Initialize 000F  
                                      intlevel2 0000                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 1344                  _EUSART1_SetOverrunErrorHandler 133A  
                                    _RCSTA1bits 000FAB                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                _phaseAccumulator 00D6  
                                      printf@ap 00CD  EUSART1_SetFramingErrorHandler@interruptHandler 000F  
                                   ??_vfpfcnvrt 003E                              _eusart1RxLastError 004E  
                               main@sweepPeriod 0104                                 _TMR0_Initialize 10F6  
                           _EPWM1_LoadDutyValue 112C                  __end_of_PIN_MANAGER_Initialize 11B6  
                               _TMR1_Initialize 1296                        __end_of_EPWM1_Initialize 1296  
                          ?_EPWM1_LoadDutyValue 000F  
