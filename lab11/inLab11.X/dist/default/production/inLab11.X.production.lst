

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Apr 08 15:03:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Generated 09/02/2023 GMT
    68                           ; 
    69                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F25K22 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   103  0000                     
   104 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   105  0000                     
   106 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   107  0000                     
   108                           	psect	idataBANK0
   109  0000'                    __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for main@F6134
   113  0000' 80                 	db	128
   114  0001' B0                 	db	176
   115  0002' DA                 	db	218
   116  0003' F5                 	db	245
   117  0004' FF                 	db	255
   118  0005' F5                 	db	245
   119  0006' DA                 	db	218
   120  0007' B0                 	db	176
   121  0008' 80                 	db	128
   122  0009' 4F                 	db	79
   123  000A' 25                 	db	37
   124  000B' 0A                 	db	10
   125  000C' 00                 	db	0
   126  000D' 0A                 	db	10
   127  000E' 25                 	db	37
   128  000F' 4F                 	db	79
   129  0000                     _T1CON	set	4045
   130  0000                     _TMR1L	set	4046
   131  0000                     _TMR1H	set	4047
   132  0000                     _TXREG1	set	4013
   133  0000                     _RCREG1	set	4014
   134  0000                     _SPBRG1	set	4015
   135  0000                     _TXSTA1	set	4012
   136  0000                     _BAUDCON1	set	4024
   137  0000                     _T2CON	set	4026
   138  0000                     _TMR2	set	4028
   139  0000                     _PR2	set	4027
   140  0000                     _TMR0L	set	4054
   141  0000                     _TMR0H	set	4055
   142  0000                     _CCPR1L	set	4030
   143  0000                     _CCPR1H	set	4031
   144  0000                     _PSTR1CON	set	4025
   145  0000                     _PWM1CON	set	4023
   146  0000                     _ANSELA	set	3896
   147  0000                     _ANSELB	set	3897
   148  0000                     _ANSELC	set	3898
   149  0000                     _LATA	set	3977
   150  0000                     _TMR1	set	4046
   151  0000                     _T1GCONbits	set	4044
   152  0000                     _T1CONbits	set	4045
   153  0000                     _RCSTA1bits	set	4011
   154  0000                     _TXSTA1bits	set	4012
   155  0000                     _T2CONbits	set	4026
   156  0000                     _T0CON	set	4053
   157  0000                     _PLLRDY	set	32407
   158  0000                     _TRISA	set	3986
   159  0000                     _LATC	set	3979
   160  0000                     _LATB	set	3978
   161  0000                     _OSCTUNE	set	3995
   162  0000                     _PIR1bits	set	3998
   163  0000                     _ECCP1AS	set	4022
   164  0000                     _CCP1CON	set	4029
   165  0000                     _INTCON2bits	set	4081
   166  0000                     _TRISC	set	3988
   167  0000                     _TRISB	set	3987
   168  0000                     _CCPTMRS0bits	set	3913
   169  0000                     _WPUB	set	3937
   170  0000                     _INTCONbits	set	4082
   171  0000                     _T1GCON	set	4044
   172  0000                     _T0CONbits	set	4053
   173  0000                     _RCSTA1	set	4011
   174  0000                     _SPBRGH1	set	4016
   175  0000                     _RCONbits	set	4048
   176  0000                     _OSCCON2	set	4050
   177  0000                     _OSCCON	set	4051
   178                           
   179                           	psect	mediumconst
   180  0000'                    __pmediumconst:
   181                           	callstack 0
   182  0000' 00                 	db	0
   183  0001'                    STR_9:
   184  0001' 2D                 	db	45
   185  0002' 2D                 	db	45
   186  0003' 2D                 	db	45
   187  0004' 2D                 	db	45
   188  0005' 2D                 	db	45
   189  0006' 2D                 	db	45
   190  0007' 2D                 	db	45
   191  0008' 2D                 	db	45
   192  0009' 2D                 	db	45
   193  000A' 2D                 	db	45
   194  000B' 2D                 	db	45
   195  000C' 2D                 	db	45
   196  000D' 2D                 	db	45
   197  000E' 2D                 	db	45
   198  000F' 2D                 	db	45
   199  0010' 2D                 	db	45
   200  0011' 2D                 	db	45
   201  0012' 2D                 	db	45
   202  0013' 2D                 	db	45
   203  0014' 2D                 	db	45
   204  0015' 2D                 	db	45
   205  0016' 2D                 	db	45
   206  0017' 2D                 	db	45
   207  0018' 2D                 	db	45
   208  0019' 2D                 	db	45
   209  001A' 2D                 	db	45
   210  001B' 2D                 	db	45
   211  001C' 2D                 	db	45
   212  001D' 2D                 	db	45
   213  001E' 2D                 	db	45
   214  001F' 2D                 	db	45
   215  0020' 2D                 	db	45
   216  0021' 2D                 	db	45
   217  0022' 2D                 	db	45
   218  0023' 2D                 	db	45
   219  0024' 2D                 	db	45
   220  0025' 2D                 	db	45
   221  0026' 2D                 	db	45
   222  0027' 2D                 	db	45
   223  0028' 2D                 	db	45
   224  0029' 2D                 	db	45
   225  002A' 2D                 	db	45
   226  002B' 2D                 	db	45
   227  002C' 2D                 	db	45
   228  002D' 2D                 	db	45
   229  002E' 2D                 	db	45
   230  002F' 2D                 	db	45
   231  0030' 2D                 	db	45
   232  0031' 2D                 	db	45
   233  0032' 0D                 	db	13
   234  0033' 0A                 	db	10
   235  0034' 00                 	db	0
   236  0035'                    STR_5:
   237  0035' 43                 	db	67	;'C'
   238  0036' 6F                 	db	111	;'o'
   239  0037' 6E                 	db	110	;'n'
   240  0038' 6E                 	db	110	;'n'
   241  0039' 65                 	db	101	;'e'
   242  003A' 63                 	db	99	;'c'
   243  003B' 74                 	db	116	;'t'
   244  003C' 20                 	db	32
   245  003D' 6A                 	db	106	;'j'
   246  003E' 75                 	db	117	;'u'
   247  003F' 6D                 	db	109	;'m'
   248  0040' 70                 	db	112	;'p'
   249  0041' 65                 	db	101	;'e'
   250  0042' 72                 	db	114	;'r'
   251  0043' 20                 	db	32
   252  0044' 62                 	db	98	;'b'
   253  0045' 65                 	db	101	;'e'
   254  0046' 74                 	db	116	;'t'
   255  0047' 77                 	db	119	;'w'
   256  0048' 65                 	db	101	;'e'
   257  0049' 65                 	db	101	;'e'
   258  004A' 6E                 	db	110	;'n'
   259  004B' 20                 	db	32
   260  004C' 4C                 	db	76	;'L'
   261  004D' 50                 	db	80	;'P'
   262  004E' 46                 	db	70	;'F'
   263  004F' 5F                 	db	95	;'_'
   264  0050' 6F                 	db	111	;'o'
   265  0051' 75                 	db	117	;'u'
   266  0052' 74                 	db	116	;'t'
   267  0053' 20                 	db	32
   268  0054' 61                 	db	97	;'a'
   269  0055' 6E                 	db	110	;'n'
   270  0056' 64                 	db	100	;'d'
   271  0057' 20                 	db	32
   272  0058' 41                 	db	65	;'A'
   273  0059' 4D                 	db	77	;'M'
   274  005A' 50                 	db	80	;'P'
   275  005B' 5F                 	db	95	;'_'
   276  005C' 69                 	db	105	;'i'
   277  005D' 6E                 	db	110	;'n'
   278  005E' 2E                 	db	46
   279  005F' 0D                 	db	13
   280  0060' 0A                 	db	10
   281  0061' 00                 	db	0
   282  0062'                    STR_7:
   283  0062' 43                 	db	67	;'C'
   284  0063' 6F                 	db	111	;'o'
   285  0064' 6E                 	db	110	;'n'
   286  0065' 6E                 	db	110	;'n'
   287  0066' 65                 	db	101	;'e'
   288  0067' 63                 	db	99	;'c'
   289  0068' 74                 	db	116	;'t'
   290  0069' 20                 	db	32
   291  006A' 43                 	db	67	;'C'
   292  006B' 68                 	db	104	;'h'
   293  006C' 61                 	db	97	;'a'
   294  006D' 6E                 	db	110	;'n'
   295  006E' 6E                 	db	110	;'n'
   296  006F' 65                 	db	101	;'e'
   297  0070' 6C                 	db	108	;'l'
   298  0071' 20                 	db	32
   299  0072' 32                 	db	50	;'2'
   300  0073' 20                 	db	32
   301  0074' 73                 	db	115	;'s'
   302  0075' 63                 	db	99	;'c'
   303  0076' 6F                 	db	111	;'o'
   304  0077' 70                 	db	112	;'p'
   305  0078' 65                 	db	101	;'e'
   306  0079' 20                 	db	32
   307  007A' 70                 	db	112	;'p'
   308  007B' 72                 	db	114	;'r'
   309  007C' 6F                 	db	111	;'o'
   310  007D' 62                 	db	98	;'b'
   311  007E' 65                 	db	101	;'e'
   312  007F' 20                 	db	32
   313  0080' 74                 	db	116	;'t'
   314  0081' 6F                 	db	111	;'o'
   315  0082' 20                 	db	32
   316  0083' 4C                 	db	76	;'L'
   317  0084' 50                 	db	80	;'P'
   318  0085' 46                 	db	70	;'F'
   319  0086' 5F                 	db	95	;'_'
   320  0087' 6F                 	db	111	;'o'
   321  0088' 75                 	db	117	;'u'
   322  0089' 74                 	db	116	;'t'
   323  008A' 2E                 	db	46
   324  008B' 0D                 	db	13
   325  008C' 0A                 	db	10
   326  008D' 00                 	db	0
   327  008E'                    STR_29:
   328  008E' 53                 	db	83	;'S'
   329  008F' 74                 	db	116	;'t'
   330  0090' 6F                 	db	111	;'o'
   331  0091' 70                 	db	112	;'p'
   332  0092' 70                 	db	112	;'p'
   333  0093' 65                 	db	101	;'e'
   334  0094' 64                 	db	100	;'d'
   335  0095' 20                 	db	32
   336  0096' 67                 	db	103	;'g'
   337  0097' 65                 	db	101	;'e'
   338  0098' 6E                 	db	110	;'n'
   339  0099' 65                 	db	101	;'e'
   340  009A' 72                 	db	114	;'r'
   341  009B' 61                 	db	97	;'a'
   342  009C' 74                 	db	116	;'t'
   343  009D' 69                 	db	105	;'i'
   344  009E' 6F                 	db	111	;'o'
   345  009F' 6E                 	db	110	;'n'
   346  00A0' 20                 	db	32
   347  00A1' 6F                 	db	111	;'o'
   348  00A2' 66                 	db	102	;'f'
   349  00A3' 20                 	db	32
   350  00A4' 73                 	db	115	;'s'
   351  00A5' 77                 	db	119	;'w'
   352  00A6' 65                 	db	101	;'e'
   353  00A7' 65                 	db	101	;'e'
   354  00A8' 70                 	db	112	;'p'
   355  00A9' 65                 	db	101	;'e'
   356  00AA' 64                 	db	100	;'d'
   357  00AB' 20                 	db	32
   358  00AC' 73                 	db	115	;'s'
   359  00AD' 69                 	db	105	;'i'
   360  00AE' 6E                 	db	110	;'n'
   361  00AF' 65                 	db	101	;'e'
   362  00B0' 20                 	db	32
   363  00B1' 77                 	db	119	;'w'
   364  00B2' 61                 	db	97	;'a'
   365  00B3' 76                 	db	118	;'v'
   366  00B4' 65                 	db	101	;'e'
   367  00B5' 0D                 	db	13
   368  00B6' 0A                 	db	10
   369  00B7' 00                 	db	0
   370  00B8'                    STR_4:
   371  00B8' 43                 	db	67	;'C'
   372  00B9' 6F                 	db	111	;'o'
   373  00BA' 6E                 	db	110	;'n'
   374  00BB' 6E                 	db	110	;'n'
   375  00BC' 65                 	db	101	;'e'
   376  00BD' 63                 	db	99	;'c'
   377  00BE' 74                 	db	116	;'t'
   378  00BF' 20                 	db	32
   379  00C0' 6A                 	db	106	;'j'
   380  00C1' 75                 	db	117	;'u'
   381  00C2' 6D                 	db	109	;'m'
   382  00C3' 70                 	db	112	;'p'
   383  00C4' 65                 	db	101	;'e'
   384  00C5' 72                 	db	114	;'r'
   385  00C6' 20                 	db	32
   386  00C7' 62                 	db	98	;'b'
   387  00C8' 65                 	db	101	;'e'
   388  00C9' 74                 	db	116	;'t'
   389  00CA' 77                 	db	119	;'w'
   390  00CB' 65                 	db	101	;'e'
   391  00CC' 65                 	db	101	;'e'
   392  00CD' 6E                 	db	110	;'n'
   393  00CE' 20                 	db	32
   394  00CF' 52                 	db	82	;'R'
   395  00D0' 43                 	db	67	;'C'
   396  00D1' 32                 	db	50	;'2'
   397  00D2' 20                 	db	32
   398  00D3' 61                 	db	97	;'a'
   399  00D4' 6E                 	db	110	;'n'
   400  00D5' 64                 	db	100	;'d'
   401  00D6' 20                 	db	32
   402  00D7' 4C                 	db	76	;'L'
   403  00D8' 50                 	db	80	;'P'
   404  00D9' 46                 	db	70	;'F'
   405  00DA' 5F                 	db	95	;'_'
   406  00DB' 69                 	db	105	;'i'
   407  00DC' 6E                 	db	110	;'n'
   408  00DD' 2E                 	db	46
   409  00DE' 0D                 	db	13
   410  00DF' 0A                 	db	10
   411  00E0' 00                 	db	0
   412  00E1'                    STR_18:
   413  00E1' 2B                 	db	43
   414  00E2' 2F                 	db	47
   415  00E3' 2D                 	db	45
   416  00E4' 3A                 	db	58	;':'
   417  00E5' 20                 	db	32
   418  00E6' 69                 	db	105	;'i'
   419  00E7' 6E                 	db	110	;'n'
   420  00E8' 63                 	db	99	;'c'
   421  00E9' 72                 	db	114	;'r'
   422  00EA' 65                 	db	101	;'e'
   423  00EB' 61                 	db	97	;'a'
   424  00EC' 73                 	db	115	;'s'
   425  00ED' 65                 	db	101	;'e'
   426  00EE' 2F                 	db	47
   427  00EF' 64                 	db	100	;'d'
   428  00F0' 65                 	db	101	;'e'
   429  00F1' 63                 	db	99	;'c'
   430  00F2' 72                 	db	114	;'r'
   431  00F3' 65                 	db	101	;'e'
   432  00F4' 61                 	db	97	;'a'
   433  00F5' 73                 	db	115	;'s'
   434  00F6' 65                 	db	101	;'e'
   435  00F7' 20                 	db	32
   436  00F8' 70                 	db	112	;'p'
   437  00F9' 68                 	db	104	;'h'
   438  00FA' 61                 	db	97	;'a'
   439  00FB' 73                 	db	115	;'s'
   440  00FC' 65                 	db	101	;'e'
   441  00FD' 20                 	db	32
   442  00FE' 69                 	db	105	;'i'
   443  00FF' 6E                 	db	110	;'n'
   444  0100' 63                 	db	99	;'c'
   445  0101' 72                 	db	114	;'r'
   446  0102' 65                 	db	101	;'e'
   447  0103' 6D                 	db	109	;'m'
   448  0104' 65                 	db	101	;'e'
   449  0105' 6E                 	db	110	;'n'
   450  0106' 74                 	db	116	;'t'
   451  0107' 0D                 	db	13
   452  0108' 0A                 	db	10
   453  0109' 00                 	db	0
   454  010A'                    STR_6:
   455  010A' 43                 	db	67	;'C'
   456  010B' 6F                 	db	111	;'o'
   457  010C' 6E                 	db	110	;'n'
   458  010D' 6E                 	db	110	;'n'
   459  010E' 65                 	db	101	;'e'
   460  010F' 63                 	db	99	;'c'
   461  0110' 74                 	db	116	;'t'
   462  0111' 20                 	db	32
   463  0112' 43                 	db	67	;'C'
   464  0113' 68                 	db	104	;'h'
   465  0114' 61                 	db	97	;'a'
   466  0115' 6E                 	db	110	;'n'
   467  0116' 6E                 	db	110	;'n'
   468  0117' 65                 	db	101	;'e'
   469  0118' 6C                 	db	108	;'l'
   470  0119' 20                 	db	32
   471  011A' 31                 	db	49	;'1'
   472  011B' 20                 	db	32
   473  011C' 73                 	db	115	;'s'
   474  011D' 63                 	db	99	;'c'
   475  011E' 6F                 	db	111	;'o'
   476  011F' 70                 	db	112	;'p'
   477  0120' 65                 	db	101	;'e'
   478  0121' 20                 	db	32
   479  0122' 70                 	db	112	;'p'
   480  0123' 72                 	db	114	;'r'
   481  0124' 6F                 	db	111	;'o'
   482  0125' 62                 	db	98	;'b'
   483  0126' 65                 	db	101	;'e'
   484  0127' 20                 	db	32
   485  0128' 74                 	db	116	;'t'
   486  0129' 6F                 	db	111	;'o'
   487  012A' 20                 	db	32
   488  012B' 52                 	db	82	;'R'
   489  012C' 43                 	db	67	;'C'
   490  012D' 32                 	db	50	;'2'
   491  012E' 2E                 	db	46
   492  012F' 0D                 	db	13
   493  0130' 0A                 	db	10
   494  0131' 00                 	db	0
   495  0132'                    STR_10:
   496  0132' 2D                 	db	45
   497  0133' 2D                 	db	45
   498  0134' 09                 	db	9
   499  0135' 46                 	db	70	;'F'
   500  0136' 69                 	db	105	;'i'
   501  0137' 78                 	db	120	;'x'
   502  0138' 65                 	db	101	;'e'
   503  0139' 64                 	db	100	;'d'
   504  013A' 20                 	db	32
   505  013B' 20                 	db	32
   506  013C' 20                 	db	32
   507  013D' 20                 	db	32
   508  013E' 20                 	db	32
   509  013F' 20                 	db	32
   510  0140' 20                 	db	32
   511  0141' 20                 	db	32
   512  0142' 20                 	db	32
   513  0143' 20                 	db	32
   514  0144' 20                 	db	32
   515  0145' 20                 	db	32
   516  0146' 20                 	db	32
   517  0147' 20                 	db	32
   518  0148' 20                 	db	32
   519  0149' 20                 	db	32
   520  014A' 20                 	db	32
   521  014B' 20                 	db	32
   522  014C' 20                 	db	32
   523  014D' 20                 	db	32
   524  014E' 20                 	db	32
   525  014F' 20                 	db	32
   526  0150' 20                 	db	32
   527  0151' 0D                 	db	13
   528  0152' 0A                 	db	10
   529  0153' 00                 	db	0
   530  0154'                    STR_26:
   531  0154' 53                 	db	83	;'S'
   532  0155' 74                 	db	116	;'t'
   533  0156' 6F                 	db	111	;'o'
   534  0157' 70                 	db	112	;'p'
   535  0158' 70                 	db	112	;'p'
   536  0159' 65                 	db	101	;'e'
   537  015A' 64                 	db	100	;'d'
   538  015B' 20                 	db	32
   539  015C' 67                 	db	103	;'g'
   540  015D' 65                 	db	101	;'e'
   541  015E' 6E                 	db	110	;'n'
   542  015F' 65                 	db	101	;'e'
   543  0160' 72                 	db	114	;'r'
   544  0161' 61                 	db	97	;'a'
   545  0162' 74                 	db	116	;'t'
   546  0163' 69                 	db	105	;'i'
   547  0164' 6E                 	db	110	;'n'
   548  0165' 67                 	db	103	;'g'
   549  0166' 20                 	db	32
   550  0167' 73                 	db	115	;'s'
   551  0168' 69                 	db	105	;'i'
   552  0169' 6E                 	db	110	;'n'
   553  016A' 65                 	db	101	;'e'
   554  016B' 20                 	db	32
   555  016C' 77                 	db	119	;'w'
   556  016D' 61                 	db	97	;'a'
   557  016E' 76                 	db	118	;'v'
   558  016F' 65                 	db	101	;'e'
   559  0170' 0D                 	db	13
   560  0171' 0A                 	db	10
   561  0172' 00                 	db	0
   562  0173'                    STR_25:
   563  0173' 47                 	db	71	;'G'
   564  0174' 65                 	db	101	;'e'
   565  0175' 6E                 	db	110	;'n'
   566  0176' 65                 	db	101	;'e'
   567  0177' 72                 	db	114	;'r'
   568  0178' 61                 	db	97	;'a'
   569  0179' 74                 	db	116	;'t'
   570  017A' 69                 	db	105	;'i'
   571  017B' 6E                 	db	110	;'n'
   572  017C' 67                 	db	103	;'g'
   573  017D' 20                 	db	32
   574  017E' 61                 	db	97	;'a'
   575  017F' 20                 	db	32
   576  0180' 25                 	db	37
   577  0181' 64                 	db	100	;'d'
   578  0182' 20                 	db	32
   579  0183' 48                 	db	72	;'H'
   580  0184' 7A                 	db	122	;'z'
   581  0185' 20                 	db	32
   582  0186' 73                 	db	115	;'s'
   583  0187' 69                 	db	105	;'i'
   584  0188' 6E                 	db	110	;'n'
   585  0189' 65                 	db	101	;'e'
   586  018A' 20                 	db	32
   587  018B' 77                 	db	119	;'w'
   588  018C' 61                 	db	97	;'a'
   589  018D' 76                 	db	118	;'v'
   590  018E' 65                 	db	101	;'e'
   591  018F' 0D                 	db	13
   592  0190' 0A                 	db	10
   593  0191' 00                 	db	0
   594  0192'                    STR_11:
   595  0192' 2D                 	db	45
   596  0193' 2D                 	db	45
   597  0194' 09                 	db	9
   598  0195' 09                 	db	9
   599  0196' 46                 	db	70	;'F'
   600  0197' 72                 	db	114	;'r'
   601  0198' 65                 	db	101	;'e'
   602  0199' 71                 	db	113	;'q'
   603  019A' 75                 	db	117	;'u'
   604  019B' 65                 	db	101	;'e'
   605  019C' 6E                 	db	110	;'n'
   606  019D' 63                 	db	99	;'c'
   607  019E' 79                 	db	121	;'y'
   608  019F' 3A                 	db	58	;':'
   609  01A0' 09                 	db	9
   610  01A1' 25                 	db	37
   611  01A2' 64                 	db	100	;'d'
   612  01A3' 48                 	db	72	;'H'
   613  01A4' 7A                 	db	122	;'z'
   614  01A5' 20                 	db	32
   615  01A6' 20                 	db	32
   616  01A7' 20                 	db	32
   617  01A8' 20                 	db	32
   618  01A9' 20                 	db	32
   619  01AA' 20                 	db	32
   620  01AB' 20                 	db	32
   621  01AC' 20                 	db	32
   622  01AD' 0D                 	db	13
   623  01AE' 0A                 	db	10
   624  01AF' 00                 	db	0
   625  01B0'                    STR_31:
   626  01B0' 64                 	db	100	;'d'
   627  01B1' 31                 	db	49	;'1'
   628  01B2' 36                 	db	54	;'6'
   629  01B3' 20                 	db	32
   630  01B4' 70                 	db	112	;'p'
   631  01B5' 61                 	db	97	;'a'
   632  01B6' 72                 	db	114	;'r'
   633  01B7' 61                 	db	97	;'a'
   634  01B8' 6E                 	db	110	;'n'
   635  01B9' 6F                 	db	111	;'o'
   636  01BA' 69                 	db	105	;'i'
   637  01BB' 64                 	db	100	;'d'
   638  01BC' 20                 	db	32
   639  01BD' 3D                 	db	61	;'='
   640  01BE' 20                 	db	32
   641  01BF' 30                 	db	48	;'0'
   642  01C0' 78                 	db	120	;'x'
   643  01C1' 25                 	db	37
   644  01C2' 30                 	db	48	;'0'
   645  01C3' 34                 	db	52	;'4'
   646  01C4' 78                 	db	120	;'x'
   647  01C5' 20                 	db	32
   648  01C6' 3D                 	db	61	;'='
   649  01C7' 20                 	db	32
   650  01C8' 25                 	db	37
   651  01C9' 75                 	db	117	;'u'
   652  01CA' 0D                 	db	13
   653  01CB' 0A                 	db	10
   654  01CC' 00                 	db	0
   655  01CD'                    STR_32:
   656  01CD' 64                 	db	100	;'d'
   657  01CE' 31                 	db	49	;'1'
   658  01CF' 36                 	db	54	;'6'
   659  01D0' 20                 	db	32
   660  01D1' 63                 	db	99	;'c'
   661  01D2' 61                 	db	97	;'a'
   662  01D3' 73                 	db	115	;'s'
   663  01D4' 75                 	db	117	;'u'
   664  01D5' 61                 	db	97	;'a'
   665  01D6' 6C                 	db	108	;'l'
   666  01D7' 20                 	db	32
   667  01D8' 3D                 	db	61	;'='
   668  01D9' 20                 	db	32
   669  01DA' 30                 	db	48	;'0'
   670  01DB' 78                 	db	120	;'x'
   671  01DC' 25                 	db	37
   672  01DD' 30                 	db	48	;'0'
   673  01DE' 34                 	db	52	;'4'
   674  01DF' 78                 	db	120	;'x'
   675  01E0' 20                 	db	32
   676  01E1' 3D                 	db	61	;'='
   677  01E2' 20                 	db	32
   678  01E3' 25                 	db	37
   679  01E4' 75                 	db	117	;'u'
   680  01E5' 0D                 	db	13
   681  01E6' 0A                 	db	10
   682  01E7' 00                 	db	0
   683  01E8'                    STR_17:
   684  01E8' 73                 	db	115	;'s'
   685  01E9' 3A                 	db	58	;':'
   686  01EA' 20                 	db	32
   687  01EB' 20                 	db	32
   688  01EC' 20                 	db	32
   689  01ED' 67                 	db	103	;'g'
   690  01EE' 65                 	db	101	;'e'
   691  01EF' 6E                 	db	110	;'n'
   692  01F0' 65                 	db	101	;'e'
   693  01F1' 72                 	db	114	;'r'
   694  01F2' 61                 	db	97	;'a'
   695  01F3' 74                 	db	116	;'t'
   696  01F4' 65                 	db	101	;'e'
   697  01F5' 20                 	db	32
   698  01F6' 53                 	db	83	;'S'
   699  01F7' 69                 	db	105	;'i'
   700  01F8' 6E                 	db	110	;'n'
   701  01F9' 65                 	db	101	;'e'
   702  01FA' 20                 	db	32
   703  01FB' 77                 	db	119	;'w'
   704  01FC' 61                 	db	97	;'a'
   705  01FD' 76                 	db	118	;'v'
   706  01FE' 65                 	db	101	;'e'
   707  01FF' 0D                 	db	13
   708  0200' 0A                 	db	10
   709  0201' 00                 	db	0
   710  0202'                    STR_16:
   711  0202' 7A                 	db	122	;'z'
   712  0203' 3A                 	db	58	;':'
   713  0204' 20                 	db	32
   714  0205' 20                 	db	32
   715  0206' 20                 	db	32
   716  0207' 63                 	db	99	;'c'
   717  0208' 6C                 	db	108	;'l'
   718  0209' 65                 	db	101	;'e'
   719  020A' 61                 	db	97	;'a'
   720  020B' 72                 	db	114	;'r'
   721  020C' 20                 	db	32
   722  020D' 74                 	db	116	;'t'
   723  020E' 68                 	db	104	;'h'
   724  020F' 65                 	db	101	;'e'
   725  0210' 20                 	db	32
   726  0211' 74                 	db	116	;'t'
   727  0212' 65                 	db	101	;'e'
   728  0213' 72                 	db	114	;'r'
   729  0214' 6D                 	db	109	;'m'
   730  0215' 69                 	db	105	;'i'
   731  0216' 6E                 	db	110	;'n'
   732  0217' 61                 	db	97	;'a'
   733  0218' 6C                 	db	108	;'l'
   734  0219' 0D                 	db	13
   735  021A' 0A                 	db	10
   736  021B' 00                 	db	0
   737  021C'                    STR_28:
   738  021C' 50                 	db	80	;'P'
   739  021D' 72                 	db	114	;'r'
   740  021E' 65                 	db	101	;'e'
   741  021F' 73                 	db	115	;'s'
   742  0220' 73                 	db	115	;'s'
   743  0221' 20                 	db	32
   744  0222' 61                 	db	97	;'a'
   745  0223' 6E                 	db	110	;'n'
   746  0224' 79                 	db	121	;'y'
   747  0225' 20                 	db	32
   748  0226' 6B                 	db	107	;'k'
   749  0227' 65                 	db	101	;'e'
   750  0228' 79                 	db	121	;'y'
   751  0229' 20                 	db	32
   752  022A' 74                 	db	116	;'t'
   753  022B' 6F                 	db	111	;'o'
   754  022C' 20                 	db	32
   755  022D' 65                 	db	101	;'e'
   756  022E' 78                 	db	120	;'x'
   757  022F' 69                 	db	105	;'i'
   758  0230' 74                 	db	116	;'t'
   759  0231' 2E                 	db	46
   760  0232' 0D                 	db	13
   761  0233' 0A                 	db	10
   762  0234' 00                 	db	0
   763  0235'                    STR_30:
   764  0235' 50                 	db	80	;'P'
   765  0236' 65                 	db	101	;'e'
   766  0237' 72                 	db	114	;'r'
   767  0238' 66                 	db	102	;'f'
   768  0239' 6F                 	db	111	;'o'
   769  023A' 72                 	db	114	;'r'
   770  023B' 6D                 	db	109	;'m'
   771  023C' 69                 	db	105	;'i'
   772  023D' 6E                 	db	110	;'n'
   773  023E' 67                 	db	103	;'g'
   774  023F' 3A                 	db	58	;':'
   775  0240' 20                 	db	32
   776  0241' 25                 	db	37
   777  0242' 75                 	db	117	;'u'
   778  0243' 2A                 	db	42
   779  0244' 35                 	db	53	;'5'
   780  0245' 30                 	db	48	;'0'
   781  0246' 30                 	db	48	;'0'
   782  0247' 2F                 	db	47
   783  0248' 25                 	db	37
   784  0249' 75                 	db	117	;'u'
   785  024A' 3A                 	db	58	;':'
   786  024B' 0D                 	db	13
   787  024C' 0A                 	db	10
   788  024D' 00                 	db	0
   789  024E'                    STR_2:
   790  024E' 44                 	db	68	;'D'
   791  024F' 44                 	db	68	;'D'
   792  0250' 53                 	db	83	;'S'
   793  0251' 20                 	db	32
   794  0252' 77                 	db	119	;'w'
   795  0253' 61                 	db	97	;'a'
   796  0254' 76                 	db	118	;'v'
   797  0255' 65                 	db	101	;'e'
   798  0256' 66                 	db	102	;'f'
   799  0257' 6F                 	db	111	;'o'
   800  0258' 72                 	db	114	;'r'
   801  0259' 6D                 	db	109	;'m'
   802  025A' 20                 	db	32
   803  025B' 67                 	db	103	;'g'
   804  025C' 65                 	db	101	;'e'
   805  025D' 6E                 	db	110	;'n'
   806  025E' 65                 	db	101	;'e'
   807  025F' 72                 	db	114	;'r'
   808  0260' 61                 	db	97	;'a'
   809  0261' 74                 	db	116	;'t'
   810  0262' 6F                 	db	111	;'o'
   811  0263' 72                 	db	114	;'r'
   812  0264' 0D                 	db	13
   813  0265' 0A                 	db	10
   814  0266' 00                 	db	0
   815  0267'                    STR_19:
   816  0267' 77                 	db	119	;'w'
   817  0268' 3A                 	db	58	;':'
   818  0269' 20                 	db	32
   819  026A' 20                 	db	32
   820  026B' 20                 	db	32
   821  026C' 73                 	db	115	;'s'
   822  026D' 57                 	db	87	;'W'
   823  026E' 65                 	db	101	;'e'
   824  026F' 65                 	db	101	;'e'
   825  0270' 70                 	db	112	;'p'
   826  0271' 20                 	db	32
   827  0272' 73                 	db	115	;'s'
   828  0273' 69                 	db	105	;'i'
   829  0274' 6E                 	db	110	;'n'
   830  0275' 65                 	db	101	;'e'
   831  0276' 20                 	db	32
   832  0277' 77                 	db	119	;'w'
   833  0278' 61                 	db	97	;'a'
   834  0279' 76                 	db	118	;'v'
   835  027A' 65                 	db	101	;'e'
   836  027B' 20                 	db	32
   837  027C' 0D                 	db	13
   838  027D' 0A                 	db	10
   839  027E' 00                 	db	0
   840  027F'                    STR_15:
   841  027F' 5A                 	db	90	;'Z'
   842  0280' 3A                 	db	58	;':'
   843  0281' 20                 	db	32
   844  0282' 20                 	db	32
   845  0283' 20                 	db	32
   846  0284' 72                 	db	114	;'r'
   847  0285' 65                 	db	101	;'e'
   848  0286' 73                 	db	115	;'s'
   849  0287' 65                 	db	101	;'e'
   850  0288' 74                 	db	116	;'t'
   851  0289' 20                 	db	32
   852  028A' 70                 	db	112	;'p'
   853  028B' 72                 	db	114	;'r'
   854  028C' 6F                 	db	111	;'o'
   855  028D' 63                 	db	99	;'c'
   856  028E' 65                 	db	101	;'e'
   857  028F' 73                 	db	115	;'s'
   858  0290' 73                 	db	115	;'s'
   859  0291' 6F                 	db	111	;'o'
   860  0292' 72                 	db	114	;'r'
   861  0293' 0D                 	db	13
   862  0294' 0A                 	db	10
   863  0295' 00                 	db	0
   864  0296'                    STR_27:
   865  0296' 70                 	db	112	;'p'
   866  0297' 68                 	db	104	;'h'
   867  0298' 61                 	db	97	;'a'
   868  0299' 73                 	db	115	;'s'
   869  029A' 65                 	db	101	;'e'
   870  029B' 49                 	db	73	;'I'
   871  029C' 6E                 	db	110	;'n'
   872  029D' 63                 	db	99	;'c'
   873  029E' 72                 	db	114	;'r'
   874  029F' 65                 	db	101	;'e'
   875  02A0' 6D                 	db	109	;'m'
   876  02A1' 65                 	db	101	;'e'
   877  02A2' 6E                 	db	110	;'n'
   878  02A3' 74                 	db	116	;'t'
   879  02A4' 20                 	db	32
   880  02A5' 3D                 	db	61	;'='
   881  02A6' 20                 	db	32
   882  02A7' 25                 	db	37
   883  02A8' 64                 	db	100	;'d'
   884  02A9' 0D                 	db	13
   885  02AA' 0A                 	db	10
   886  02AB' 00                 	db	0
   887  02AC'                    STR_3:
   888  02AC' 44                 	db	68	;'D'
   889  02AD' 65                 	db	101	;'e'
   890  02AE' 76                 	db	118	;'v'
   891  02AF' 27                 	db	39
   892  02B0' 32                 	db	50	;'2'
   893  02B1' 31                 	db	49	;'1'
   894  02B2' 20                 	db	32
   895  02B3' 42                 	db	66	;'B'
   896  02B4' 6F                 	db	111	;'o'
   897  02B5' 61                 	db	97	;'a'
   898  02B6' 72                 	db	114	;'r'
   899  02B7' 64                 	db	100	;'d'
   900  02B8' 20                 	db	32
   901  02B9' 77                 	db	119	;'w'
   902  02BA' 69                 	db	105	;'i'
   903  02BB' 72                 	db	114	;'r'
   904  02BC' 69                 	db	105	;'i'
   905  02BD' 6E                 	db	110	;'n'
   906  02BE' 67                 	db	103	;'g'
   907  02BF' 0D                 	db	13
   908  02C0' 0A                 	db	10
   909  02C1' 00                 	db	0
   910  02C2'                    STR_33:
   911  02C2' 55                 	db	85	;'U'
   912  02C3' 6E                 	db	110	;'n'
   913  02C4' 6B                 	db	107	;'k'
   914  02C5' 6E                 	db	110	;'n'
   915  02C6' 6F                 	db	111	;'o'
   916  02C7' 77                 	db	119	;'w'
   917  02C8' 6E                 	db	110	;'n'
   918  02C9' 20                 	db	32
   919  02CA' 6B                 	db	107	;'k'
   920  02CB' 65                 	db	101	;'e'
   921  02CC' 79                 	db	121	;'y'
   922  02CD' 20                 	db	32
   923  02CE' 25                 	db	37
   924  02CF' 63                 	db	99	;'c'
   925  02D0' 0D                 	db	13
   926  02D1' 0A                 	db	10
   927  02D2' 00                 	db	0
   928  02D3'                    STR_20:
   929  02D3' 6D                 	db	109	;'m'
   930  02D4' 3A                 	db	58	;':'
   931  02D5' 20                 	db	32
   932  02D6' 20                 	db	32
   933  02D7' 20                 	db	32
   934  02D8' 4D                 	db	77	;'M'
   935  02D9' 61                 	db	97	;'a'
   936  02DA' 74                 	db	116	;'t'
   937  02DB' 68                 	db	104	;'h'
   938  02DC' 20                 	db	32
   939  02DD' 74                 	db	116	;'t'
   940  02DE' 69                 	db	105	;'i'
   941  02DF' 6D                 	db	109	;'m'
   942  02E0' 65                 	db	101	;'e'
   943  02E1' 0D                 	db	13
   944  02E2' 0A                 	db	10
   945  02E3' 00                 	db	0
   946  02E4'                    STR_13:
   947  02E4' 3F                 	db	63	;'?'
   948  02E5' 3A                 	db	58	;':'
   949  02E6' 20                 	db	32
   950  02E7' 20                 	db	32
   951  02E8' 20                 	db	32
   952  02E9' 68                 	db	104	;'h'
   953  02EA' 65                 	db	101	;'e'
   954  02EB' 6C                 	db	108	;'l'
   955  02EC' 70                 	db	112	;'p'
   956  02ED' 20                 	db	32
   957  02EE' 6D                 	db	109	;'m'
   958  02EF' 65                 	db	101	;'e'
   959  02F0' 6E                 	db	110	;'n'
   960  02F1' 75                 	db	117	;'u'
   961  02F2' 0D                 	db	13
   962  02F3' 0A                 	db	10
   963  02F4' 00                 	db	0
   964  02F5'                    STR_1:
   965  02F5' 4C                 	db	76	;'L'
   966  02F6' 61                 	db	97	;'a'
   967  02F7' 62                 	db	98	;'b'
   968  02F8' 20                 	db	32
   969  02F9' 31                 	db	49	;'1'
   970  02FA' 32                 	db	50	;'2'
   971  02FB' 0D                 	db	13
   972  02FC' 0A                 	db	10
   973  02FD' 00                 	db	0
   974  02FE'                    STR_14:
   975  02FE' 6F                 	db	111	;'o'
   976  02FF' 3A                 	db	58	;':'
   977  0300' 20                 	db	32
   978  0301' 20                 	db	32
   979  0302' 20                 	db	32
   980  0303' 6B                 	db	107	;'k'
   981  0304' 0D                 	db	13
   982  0305' 0A                 	db	10
   983  0306' 00                 	db	0
   984  0307'                    STR_22:
   985  0307' 6F                 	db	111	;'o'
   986  0308' 3A                 	db	58	;':'
   987  0309' 09                 	db	9
   988  030A' 6F                 	db	111	;'o'
   989  030B' 6B                 	db	107	;'k'
   990  030C' 0D                 	db	13
   991  030D' 0A                 	db	10
   992  030E' 00                 	db	0
   993  030F'                    STR_8:
   994  030F' 0D                 	db	13
   995  0310' 0A                 	db	10
   996  0311' 3E                 	db	62	;'>'
   997  0312' 20                 	db	32
   998  0313' 00                 	db	0
   999  0314' 00                 	db	0	; dummy byte at the end
  1000  0000                     
  1001                           ; #config settings
  1002                           
  1003                           	psect	cinit
  1004  0000'                    __pcinit:
  1005                           	callstack 0
  1006  0000'                    start_initialization:
  1007                           	callstack 0
  1008  0000'                    __initialization:
  1009                           	callstack 0
  1010                           
  1011                           ; Initialize objects allocated to BANK0 (16 bytes)
  1012                           ; load TBLPTR registers with __pidataBANK0
  1013  0000' 0E00'              	movlw	low __pidataBANK0
  1014  0002' 6EF6               	movwf	tblptrl,c
  1015  0004' 0E00'              	movlw	high __pidataBANK0
  1016  0006' 6EF7               	movwf	tblptrh,c
  1017  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
  1018  000A' 6EF8               	movwf	tblptru,c
  1019  000C' EE00' F000'        	lfsr	0,__pdataBANK0
  1020  0010' EE10 F010          	lfsr	1,16
  1021  0014'                    copy_data0:
  1022  0014' 0009               	tblrd		*+
  1023  0016' CFF5 FFEE          	movff	tablat,postinc0
  1024  001A' 50E5               	movf	postdec1,w,c
  1025  001C' 50E1               	movf	fsr1l,w,c
  1026  001E' E1FA               	bnz	copy_data0
  1027                           
  1028                           ; Clear objects allocated to BANK0 (47 bytes)
  1029  0020' EE00' F000'        	lfsr	0,__pbssBANK0
  1030  0024' 0E2F               	movlw	47
  1031  0026'                    clear_0:
  1032  0026' 6AEE               	clrf	postinc0,c
  1033  0028' 06E8               	decf	wreg,f,c
  1034  002A' E1FD               	bnz	clear_0
  1035                           
  1036                           ; Clear objects allocated to COMRAM (3 bytes)
  1037  002C' 6A00'              	clrf	(__pbssCOMRAM+2)& (0+255),c
  1038  002E' 6A00'              	clrf	(__pbssCOMRAM+1)& (0+255),c
  1039  0030' 6A00'              	clrf	__pbssCOMRAM& (0+255),c
  1040  0032'                    end_of_initialization:
  1041                           	callstack 0
  1042  0032'                    __end_of__initialization:
  1043                           	callstack 0
  1044  0032' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1045  0034' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1046  0036' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
  1047  0038' 6EF8               	movwf	tblptru,c
  1048  003A' 0100               	movlb	0
  1049  003C' EF00' F000'        	goto	_main	;jump to C main() function
  1050                           
  1051                           	psect	bssCOMRAM
  1052  0000'                    __pbssCOMRAM:
  1053                           	callstack 0
  1054  0000'                    _prec:
  1055                           	callstack 0
  1056  0000'                    	ds	2
  1057  0002'                    _flags:
  1058                           	callstack 0
  1059  0002'                    	ds	1
  1060                           
  1061                           	psect	bssBANK0
  1062  0000'                    __pbssBANK0:
  1063                           	callstack 0
  1064  0000'                    _width:
  1065                           	callstack 0
  1066  0000'                    	ds	2
  1067  0002'                    _timer1ReloadVal:
  1068                           	callstack 0
  1069  0002'                    	ds	2
  1070  0004'                    _EUSART1_ErrorHandler:
  1071                           	callstack 0
  1072  0004'                    	ds	2
  1073  0006'                    _EUSART1_OverrunErrorHandler:
  1074                           	callstack 0
  1075  0006'                    	ds	2
  1076  0008'                    _EUSART1_FramingErrorHandler:
  1077                           	callstack 0
  1078  0008'                    	ds	2
  1079  000A'                    _timer0ReloadVal:
  1080                           	callstack 0
  1081  000A'                    	ds	2
  1082  000C'                    _TMR0_InterruptHandler:
  1083                           	callstack 0
  1084  000C'                    	ds	2
  1085  000E'                    _eusart1RxLastError:
  1086                           	callstack 0
  1087  000E'                    	ds	1
  1088  000F'                    _dbuf:
  1089                           	callstack 0
  1090  000F'                    	ds	32
  1091                           
  1092                           	psect	dataBANK0
  1093  0000'                    __pdataBANK0:
  1094                           	callstack 0
  1095  0000'                    main@F6134:
  1096                           	callstack 0
  1097  0000'                    	ds	16
  1098                           
  1099                           	psect	cstackBANK0
  1100  0000'                    __pcstackBANK0:
  1101                           	callstack 0
  1102  0000'                    ?_vfprintf:
  1103                           	callstack 0
  1104  0000'                    vfprintf@fp:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x0
  1108  0000'                    	ds	2
  1109  0002'                    vfprintf@fmt:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x2
  1113  0002'                    	ds	2
  1114  0004'                    vfprintf@ap:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x4
  1118  0004'                    	ds	2
  1119  0006'                    vfprintf@cfmt:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x6
  1123  0006'                    	ds	2
  1124  0008'                    ?_printf:
  1125                           	callstack 0
  1126  0008'                    printf@fmt:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x8
  1130  0008'                    	ds	6
  1131  000E'                    printf@ap:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0xE
  1135  000E'                    	ds	2
  1136  0010'                    ??_main:
  1137                           
  1138                           ; 1 bytes @ 0x10
  1139  0010'                    	ds	2
  1140  0012'                    main@sin:
  1141                           	callstack 0
  1142                           
  1143                           ; 16 bytes @ 0x12
  1144  0012'                    	ds	16
  1145  0022'                    main@a32:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x22
  1149  0022'                    	ds	4
  1150  0026'                    main@c32:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x26
  1154  0026'                    	ds	4
  1155  002A'                    main@index:
  1156                           	callstack 0
  1157                           
  1158                           ; 1 bytes @ 0x2A
  1159  002A'                    	ds	1
  1160  002B'                    main@b16:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x2B
  1164  002B'                    	ds	2
  1165  002D'                    main@cmd:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x2D
  1169  002D'                    	ds	1
  1170  002E'                    main@d16:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x2E
  1174  002E'                    	ds	2
  1175  0030'                    main@i:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x30
  1179  0030'                    	ds	1
  1180  0031'                    main@phaseAccumulator:
  1181                           	callstack 0
  1182                           
  1183                           ; 1 bytes @ 0x31
  1184  0031'                    	ds	1
  1185  0032'                    main@phaseIncrement:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x32
  1189  0032'                    	ds	1
  1190                           
  1191                           	psect	cstackCOMRAM
  1192  0000'                    __pcstackCOMRAM:
  1193                           	callstack 0
  1194  0000'                    ??_INTERRUPT_InterruptManager:
  1195  0000'                    ?_TMR0_HasOverflowOccured:
  1196                           
  1197                           ; 2 bytes @ 0x0
  1198  0000'                    	ds	2
  1199  0002'                    ?_isdigit:
  1200                           	callstack 0
  1201  0002'                    ?_isspace:
  1202                           	callstack 0
  1203  0002'                    ?___wmul:
  1204                           	callstack 0
  1205  0002'                    ?___lmul:
  1206                           	callstack 0
  1207  0002'                    ?___lldiv:
  1208                           	callstack 0
  1209  0002'                    ?___aodiv:
  1210                           	callstack 0
  1211  0002'                    ?___aomod:
  1212                           	callstack 0
  1213  0002'                    ?___lodiv:
  1214                           	callstack 0
  1215  0002'                    ?___lomod:
  1216                           	callstack 0
  1217  0002'                    EUSART1_Write@txData:
  1218                           	callstack 0
  1219  0002'                    EPWM1_LoadDutyValue@dutyValue:
  1220                           	callstack 0
  1221  0002'                    TMR0_WriteTimer@timerVal:
  1222                           	callstack 0
  1223  0002'                    TMR0_SetInterruptHandler@InterruptHandler:
  1224                           	callstack 0
  1225  0002'                    EUSART1_SetFramingErrorHandler@interruptHandler:
  1226                           	callstack 0
  1227  0002'                    EUSART1_SetOverrunErrorHandler@interruptHandler:
  1228                           	callstack 0
  1229  0002'                    EUSART1_SetErrorHandler@interruptHandler:
  1230                           	callstack 0
  1231  0002'                    TMR1_WriteTimer@timerVal:
  1232                           	callstack 0
  1233  0002'                    ___wmul@multiplier:
  1234                           	callstack 0
  1235  0002'                    isdigit@c:
  1236                           	callstack 0
  1237  0002'                    isspace@c:
  1238                           	callstack 0
  1239  0002'                    ___lmul@multiplier:
  1240                           	callstack 0
  1241  0002'                    ___lldiv@dividend:
  1242                           	callstack 0
  1243  0002'                    ___aodiv@dividend:
  1244                           	callstack 0
  1245  0002'                    ___aomod@dividend:
  1246                           	callstack 0
  1247  0002'                    ___lodiv@dividend:
  1248                           	callstack 0
  1249  0002'                    ___lomod@dividend:
  1250                           	callstack 0
  1251                           
  1252                           ; 8 bytes @ 0x2
  1253  0002'                    	ds	1
  1254  0003'                    putch@txData:
  1255                           	callstack 0
  1256                           
  1257                           ; 1 bytes @ 0x3
  1258  0003'                    	ds	1
  1259  0004'                    ??_isdigit:
  1260  0004'                    ??_isspace:
  1261  0004'                    ??_EPWM1_LoadDutyValue:
  1262  0004'                    ??_TMR0_Initialize:
  1263  0004'                    ___wmul@multiplicand:
  1264                           	callstack 0
  1265  0004'                    fputc@c:
  1266                           	callstack 0
  1267                           
  1268                           ; 2 bytes @ 0x4
  1269  0004'                    	ds	2
  1270  0006'                    _isspace$1602:
  1271                           	callstack 0
  1272  0006'                    ___wmul@product:
  1273                           	callstack 0
  1274  0006'                    fputc@fp:
  1275                           	callstack 0
  1276  0006'                    ___lmul@multiplicand:
  1277                           	callstack 0
  1278  0006'                    ___lldiv@divisor:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x6
  1282  0006'                    	ds	2
  1283  0008'                    ??_fputc:
  1284  0008'                    ?_atoi:
  1285                           	callstack 0
  1286  0008'                    ?___lwdiv:
  1287                           	callstack 0
  1288  0008'                    ___lwdiv@dividend:
  1289                           	callstack 0
  1290  0008'                    atoi@s:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x8
  1294  0008'                    	ds	2
  1295  000A'                    ??_atoi:
  1296  000A'                    ___lwdiv@divisor:
  1297                           	callstack 0
  1298  000A'                    ___lmul@product:
  1299                           	callstack 0
  1300  000A'                    ___lldiv@quotient:
  1301                           	callstack 0
  1302  000A'                    ___aodiv@divisor:
  1303                           	callstack 0
  1304  000A'                    ___aomod@divisor:
  1305                           	callstack 0
  1306  000A'                    ___lodiv@divisor:
  1307                           	callstack 0
  1308  000A'                    ___lomod@divisor:
  1309                           	callstack 0
  1310                           
  1311                           ; 8 bytes @ 0xA
  1312  000A'                    	ds	2
  1313  000C'                    ___lwdiv@quotient:
  1314                           	callstack 0
  1315                           
  1316                           ; 2 bytes @ 0xC
  1317  000C'                    	ds	1
  1318  000D'                    ctoa@fp:
  1319                           	callstack 0
  1320  000D'                    atoi@neg:
  1321                           	callstack 0
  1322  000D'                    fputs@s:
  1323                           	callstack 0
  1324                           
  1325                           ; 2 bytes @ 0xD
  1326  000D'                    	ds	1
  1327  000E'                    ___lldiv@counter:
  1328                           	callstack 0
  1329  000E'                    ___lwdiv@counter:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0xE
  1333  000E'                    	ds	1
  1334  000F'                    ctoa@c:
  1335                           	callstack 0
  1336  000F'                    atoi@n:
  1337                           	callstack 0
  1338  000F'                    fputs@fp:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0xF
  1342  000F'                    	ds	1
  1343  0010'                    ??_ctoa:
  1344                           
  1345                           ; 1 bytes @ 0x10
  1346  0010'                    	ds	1
  1347  0011'                    fputs@c:
  1348                           	callstack 0
  1349  0011'                    ctoa@l:
  1350                           	callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x11
  1353  0011'                    	ds	1
  1354  0012'                    ___aodiv@counter:
  1355                           	callstack 0
  1356  0012'                    ___aomod@counter:
  1357                           	callstack 0
  1358  0012'                    ___lomod@counter:
  1359                           	callstack 0
  1360  0012'                    fputs@i:
  1361                           	callstack 0
  1362  0012'                    ___lodiv@quotient:
  1363                           	callstack 0
  1364                           
  1365                           ; 8 bytes @ 0x12
  1366  0012'                    	ds	1
  1367  0013'                    ___aodiv@sign:
  1368                           	callstack 0
  1369  0013'                    ___aomod@sign:
  1370                           	callstack 0
  1371  0013'                    ctoa@w:
  1372                           	callstack 0
  1373                           
  1374                           ; 2 bytes @ 0x13
  1375  0013'                    	ds	1
  1376  0014'                    ?_abs:
  1377                           	callstack 0
  1378  0014'                    pad@fp:
  1379                           	callstack 0
  1380  0014'                    abs@a:
  1381                           	callstack 0
  1382  0014'                    ___aodiv@quotient:
  1383                           	callstack 0
  1384                           
  1385                           ; 8 bytes @ 0x14
  1386  0014'                    	ds	2
  1387  0016'                    ??_abs:
  1388  0016'                    pad@buf:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x16
  1392  0016'                    	ds	2
  1393  0018'                    pad@p:
  1394                           	callstack 0
  1395                           
  1396                           ; 2 bytes @ 0x18
  1397  0018'                    	ds	2
  1398  001A'                    ??_pad:
  1399  001A'                    ___lodiv@counter:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x1A
  1403  001A'                    	ds	1
  1404  001B'                    pad@i:
  1405                           	callstack 0
  1406                           
  1407                           ; 2 bytes @ 0x1B
  1408  001B'                    	ds	2
  1409  001D'                    pad@w:
  1410                           	callstack 0
  1411                           
  1412                           ; 2 bytes @ 0x1D
  1413  001D'                    	ds	2
  1414  001F'                    dtoa@fp:
  1415                           	callstack 0
  1416  001F'                    utoa@fp:
  1417                           	callstack 0
  1418  001F'                    xtoa@fp:
  1419                           	callstack 0
  1420                           
  1421                           ; 2 bytes @ 0x1F
  1422  001F'                    	ds	2
  1423  0021'                    dtoa@d:
  1424                           	callstack 0
  1425  0021'                    utoa@d:
  1426                           	callstack 0
  1427  0021'                    xtoa@d:
  1428                           	callstack 0
  1429                           
  1430                           ; 8 bytes @ 0x21
  1431  0021'                    	ds	8
  1432  0029'                    ??_dtoa:
  1433  0029'                    ??_utoa:
  1434  0029'                    ??_xtoa:
  1435                           
  1436                           ; 1 bytes @ 0x29
  1437  0029'                    	ds	8
  1438  0031'                    _dtoa$1534:
  1439                           	callstack 0
  1440  0031'                    utoa@p:
  1441                           	callstack 0
  1442  0031'                    _xtoa$1551:
  1443                           	callstack 0
  1444                           
  1445                           ; 2 bytes @ 0x31
  1446  0031'                    	ds	2
  1447  0033'                    dtoa@p:
  1448                           	callstack 0
  1449  0033'                    utoa@w:
  1450                           	callstack 0
  1451  0033'                    xtoa@p:
  1452                           	callstack 0
  1453                           
  1454                           ; 2 bytes @ 0x33
  1455  0033'                    	ds	2
  1456  0035'                    dtoa@w:
  1457                           	callstack 0
  1458  0035'                    xtoa@w:
  1459                           	callstack 0
  1460  0035'                    utoa@n:
  1461                           	callstack 0
  1462                           
  1463                           ; 8 bytes @ 0x35
  1464  0035'                    	ds	2
  1465  0037'                    dtoa@n:
  1466                           	callstack 0
  1467  0037'                    xtoa@n:
  1468                           	callstack 0
  1469                           
  1470                           ; 8 bytes @ 0x37
  1471  0037'                    	ds	6
  1472  003D'                    utoa@i:
  1473                           	callstack 0
  1474                           
  1475                           ; 2 bytes @ 0x3D
  1476  003D'                    	ds	2
  1477  003F'                    dtoa@s:
  1478                           	callstack 0
  1479  003F'                    xtoa@i:
  1480                           	callstack 0
  1481                           
  1482                           ; 2 bytes @ 0x3F
  1483  003F'                    	ds	1
  1484  0040'                    dtoa@i:
  1485                           	callstack 0
  1486                           
  1487                           ; 2 bytes @ 0x40
  1488  0040'                    	ds	1
  1489  0041'                    xtoa@c:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x41
  1493  0041'                    	ds	1
  1494  0042'                    vfpfcnvrt@fp:
  1495                           	callstack 0
  1496                           
  1497                           ; 2 bytes @ 0x42
  1498  0042'                    	ds	2
  1499  0044'                    vfpfcnvrt@fmt:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x44
  1503  0044'                    	ds	2
  1504  0046'                    vfpfcnvrt@ap:
  1505                           	callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x46
  1508  0046'                    	ds	2
  1509  0048'                    ??_vfpfcnvrt:
  1510                           
  1511                           ; 1 bytes @ 0x48
  1512  0048'                    	ds	4
  1513  004C'                    vfpfcnvrt@c:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x4C
  1517  004C'                    	ds	1
  1518  004D'                    vfpfcnvrt@done:
  1519                           	callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x4D
  1522  004D'                    	ds	2
  1523  004F'                    vfpfcnvrt@convarg:
  1524                           	callstack 0
  1525                           
  1526                           ; 8 bytes @ 0x4F
  1527  004F'                    	ds	8
  1528  0057'                    vfpfcnvrt@cp:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0x57
  1532  0057'                    	ds	2
  1533  0059'                    
  1534                           ; 1 bytes @ 0x59
  1535 ;;
  1536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1537 ;;
  1538 ;; *************** function _main *****************
  1539 ;; Defined at:
  1540 ;;		line 34 in file "main.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  sin            16   18[BANK0 ] unsigned char [16]
  1545 ;;  c32             4   38[BANK0 ] unsigned long 
  1546 ;;  b32             4    0        unsigned long 
  1547 ;;  a32             4   34[BANK0 ] unsigned long 
  1548 ;;  d32             4    0        unsigned long 
  1549 ;;  d16             2   46[BANK0 ] unsigned short 
  1550 ;;  b16             2   43[BANK0 ] unsigned short 
  1551 ;;  a16             2    0        unsigned short 
  1552 ;;  c16             2    0        unsigned short 
  1553 ;;  phaseIncreme    1   50[BANK0 ] unsigned char 
  1554 ;;  phaseAccumul    1   49[BANK0 ] unsigned char 
  1555 ;;  i               1   48[BANK0 ] unsigned char 
  1556 ;;  cmd             1   45[BANK0 ] unsigned char 
  1557 ;;  index           1   42[BANK0 ] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1567 ;;      Params:         0       0       0       0       0       0       0
  1568 ;;      Locals:         0      33       0       0       0       0       0
  1569 ;;      Temps:          0       2       0       0       0       0       0
  1570 ;;      Totals:         0      35       0       0       0       0       0
  1571 ;;Total ram usage:       35 bytes
  1572 ;; Hardware stack levels required when called: 12
  1573 ;; This function calls:
  1574 ;;		_EPWM1_LoadDutyValue
  1575 ;;		_EUSART1_Read
  1576 ;;		_EUSART1_is_rx_ready
  1577 ;;		_SYSTEM_Initialize
  1578 ;;		_TMR0_HasOverflowOccured
  1579 ;;		_TMR0_WriteTimer
  1580 ;;		_TMR1_HasOverflowOccured
  1581 ;;		_TMR1_WriteTimer
  1582 ;;		___lldiv
  1583 ;;		___lmul
  1584 ;;		___lwdiv
  1585 ;;		___wmul
  1586 ;;		_printf
  1587 ;; This function is called by:
  1588 ;;		Startup code after reset
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text0
  1593  0000'                    __ptext0:
  1594                           	callstack 0
  1595  0000'                    _main:
  1596                           	callstack 19
  1597  0000'                    
  1598                           ;main.c: 36:     uint8_t sin[16] = {128, 176, 218, 245, 255, 245, 218, 176, 128, 79, 37,
      +                           10, 0, 10, 37, 79};
  1599  0000' EE20' F000'        	lfsr	2,main@F6134
  1600  0004' EE10' F000'        	lfsr	1,main@sin
  1601  0008' 0E0F               	movlw	15
  1602  000A'                    u3211:
  1603  000A' CFDB FFE3          	movff	plusw2,plusw1
  1604  000E' 06E8               	decf	wreg,f,c
  1605  0010' E2FC               	bc	u3211
  1606  0012'                    
  1607                           ;main.c: 37:     uint8_t i;;main.c: 38:     char cmd;;main.c: 40:     uint16_t a16, b16,
      +                           c16, d16;;main.c: 41:     uint32_t a32, b32, c32, d32;;main.c: 43:     uint8_t phaseInc
      +                          rement = 10;
  1608  0012' 0E0A               	movlw	10
  1609  0014' 0100               	movlb	0	; () banked
  1610  0016' 6F00'              	movwf	main@phaseIncrement& (0+255),b
  1611  0018'                    
  1612                           ; BSR set to: 0
  1613                           ;main.c: 45:     uint8_t index;;main.c: 47:     SYSTEM_Initialize();
  1614  0018' EC00' F000'        	call	_SYSTEM_Initialize	;wreg free
  1615  001C'                    
  1616                           ;main.c: 50:     TMR0_WriteTimer(0x0000);
  1617  001C' 0E00               	movlw	0
  1618  001E' 6E00'              	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1619  0020' 0E00               	movlw	0
  1620  0022' 6E00'              	movwf	TMR0_WriteTimer@timerVal^0,c
  1621  0024' EC00' F000'        	call	_TMR0_WriteTimer	;wreg free
  1622  0028'                    
  1623                           ;main.c: 51:     INTCONbits.TMR0IF = 0;
  1624  0028' 94F2               	bcf	242,2,c	;volatile
  1625  002A'                    l331:
  1626  002A' A4F2               	btfss	242,2,c	;volatile
  1627  002C' EF00' F000'        	goto	u3221
  1628  0030' EF00' F000'        	goto	u3220
  1629  0034'                    u3221:
  1630  0034' EF00' F000'        	goto	l331
  1631  0038'                    u3220:
  1632  0038'                    
  1633                           ;main.c: 57:     printf("Lab 12\r\n");
  1634  0038' 0E00'              	movlw	low STR_1
  1635  003A' 0100               	movlb	0	; () banked
  1636  003C' 6F00'              	movwf	printf@fmt& (0+255),b
  1637  003E' 0E00'              	movlw	high STR_1
  1638  0040' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1639  0042' EC00' F000'        	call	_printf	;wreg free
  1640                           
  1641                           ;main.c: 58:     printf("DDS waveform generator\r\n");
  1642  0046' 0E00'              	movlw	low STR_2
  1643  0048' 0100               	movlb	0	; () banked
  1644  004A' 6F00'              	movwf	printf@fmt& (0+255),b
  1645  004C' 0E00'              	movlw	high STR_2
  1646  004E' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1647  0050' EC00' F000'        	call	_printf	;wreg free
  1648                           
  1649                           ;main.c: 59:     printf("Dev'21 Board wiring\r\n");
  1650  0054' 0E00'              	movlw	low STR_3
  1651  0056' 0100               	movlb	0	; () banked
  1652  0058' 6F00'              	movwf	printf@fmt& (0+255),b
  1653  005A' 0E00'              	movlw	high STR_3
  1654  005C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1655  005E' EC00' F000'        	call	_printf	;wreg free
  1656                           
  1657                           ;main.c: 60:     printf("Connect jumper between RC2 and LPF_in.\r\n");
  1658  0062' 0E00'              	movlw	low STR_4
  1659  0064' 0100               	movlb	0	; () banked
  1660  0066' 6F00'              	movwf	printf@fmt& (0+255),b
  1661  0068' 0E00'              	movlw	high STR_4
  1662  006A' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1663  006C' EC00' F000'        	call	_printf	;wreg free
  1664                           
  1665                           ;main.c: 61:     printf("Connect jumper between LPF_out and AMP_in.\r\n");
  1666  0070' 0E00'              	movlw	low STR_5
  1667  0072' 0100               	movlb	0	; () banked
  1668  0074' 6F00'              	movwf	printf@fmt& (0+255),b
  1669  0076' 0E00'              	movlw	high STR_5
  1670  0078' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1671  007A' EC00' F000'        	call	_printf	;wreg free
  1672                           
  1673                           ;main.c: 62:     printf("Connect Channel 1 scope probe to RC2.\r\n");
  1674  007E' 0E00'              	movlw	low STR_6
  1675  0080' 0100               	movlb	0	; () banked
  1676  0082' 6F00'              	movwf	printf@fmt& (0+255),b
  1677  0084' 0E00'              	movlw	high STR_6
  1678  0086' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1679  0088' EC00' F000'        	call	_printf	;wreg free
  1680                           
  1681                           ;main.c: 63:     printf("Connect Channel 2 scope probe to LPF_out.\r\n");
  1682  008C' 0E00'              	movlw	low STR_7
  1683  008E' 0100               	movlb	0	; () banked
  1684  0090' 6F00'              	movwf	printf@fmt& (0+255),b
  1685  0092' 0E00'              	movlw	high STR_7
  1686  0094' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1687  0096' EC00' F000'        	call	_printf	;wreg free
  1688                           
  1689                           ;main.c: 64:     printf("\r\n> ");
  1690  009A' 0E00'              	movlw	low STR_8
  1691  009C' 0100               	movlb	0	; () banked
  1692  009E' 6F00'              	movwf	printf@fmt& (0+255),b
  1693  00A0' 0E00'              	movlw	high STR_8
  1694  00A2' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1695  00A4' EC00' F000'        	call	_printf	;wreg free
  1696  00A8'                    l3669:
  1697                           
  1698                           ;main.c: 68:         if ((EUSART1_is_rx_ready())) {
  1699  00A8' EC00' F000'        	call	_EUSART1_is_rx_ready	;wreg free
  1700  00AC' 0900               	iorlw	0
  1701  00AE' B4D8               	btfsc	status,2,c
  1702  00B0' EF00' F000'        	goto	u3231
  1703  00B4' EF00' F000'        	goto	u3230
  1704  00B8'                    u3231:
  1705  00B8' EF00' F000'        	goto	l3669
  1706  00BC'                    u3230:
  1707  00BC'                    
  1708                           ;main.c: 69:             cmd = EUSART1_Read();
  1709  00BC' EC00' F000'        	call	_EUSART1_Read	;wreg free
  1710  00C0' 0100               	movlb	0	; () banked
  1711  00C2' 6F00'              	movwf	main@cmd& (0+255),b
  1712                           
  1713                           ;main.c: 70:             switch (cmd) {
  1714  00C4' EF00' F000'        	goto	l3791
  1715  00C8'                    l3673:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;main.c: 76:                     printf("-----------------------------------------------
      +                          --\r\n");
  1719  00C8' 0E00'              	movlw	low STR_9
  1720  00CA' 6F00'              	movwf	printf@fmt& (0+255),b
  1721  00CC' 0E00'              	movlw	high STR_9
  1722  00CE' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1723  00D0' EC00' F000'        	call	_printf	;wreg free
  1724                           
  1725                           ;main.c: 77:                     printf("--	Fixed                       \r\n");
  1726  00D4' 0E00'              	movlw	low STR_10
  1727  00D6' 0100               	movlb	0	; () banked
  1728  00D8' 6F00'              	movwf	printf@fmt& (0+255),b
  1729  00DA' 0E00'              	movlw	high STR_10
  1730  00DC' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1731  00DE' EC00' F000'        	call	_printf	;wreg free
  1732                           
  1733                           ;main.c: 78:                     printf("--		Frequency:	%dHz        \r\n", phaseIncremen
      +                          t << 5);
  1734  00E2' 0E00'              	movlw	low STR_11
  1735  00E4' 0100               	movlb	0	; () banked
  1736  00E6' 6F00'              	movwf	printf@fmt& (0+255),b
  1737  00E8' 0E00'              	movlw	high STR_11
  1738  00EA' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1739  00EC' 5100'              	movf	main@phaseIncrement& (0+255),w,b
  1740  00EE' 6F00'              	movwf	??_main& (0+255),b
  1741  00F0' 6B00'              	clrf	(??_main+1)& (0+255),b
  1742  00F2' 0E05               	movlw	5
  1743  00F4'                    u3245:
  1744  00F4' 90D8               	bcf	status,0,c
  1745  00F6' 3700'              	rlcf	??_main& (0+255),f,b
  1746  00F8' 3700'              	rlcf	(??_main+1)& (0+255),f,b
  1747  00FA' 2EE8               	decfsz	wreg,f,c
  1748  00FC' EF00' F000'        	goto	u3245
  1749  0100' C010' F00A'        	movff	??_main,?_printf+2
  1750  0104' C011' F00B'        	movff	??_main+1,?_printf+3
  1751  0108' EC00' F000'        	call	_printf	;wreg free
  1752                           
  1753                           ;main.c: 79:                     printf("-----------------------------------------------
      +                          --\r\n");
  1754  010C' 0E00'              	movlw	low STR_9
  1755  010E' 0100               	movlb	0	; () banked
  1756  0110' 6F00'              	movwf	printf@fmt& (0+255),b
  1757  0112' 0E00'              	movlw	high STR_9
  1758  0114' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1759  0116' EC00' F000'        	call	_printf	;wreg free
  1760                           
  1761                           ;main.c: 80:                     printf("?:   help menu\r\n");
  1762  011A' 0E00'              	movlw	low STR_13
  1763  011C' 0100               	movlb	0	; () banked
  1764  011E' 6F00'              	movwf	printf@fmt& (0+255),b
  1765  0120' 0E00'              	movlw	high STR_13
  1766  0122' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1767  0124' EC00' F000'        	call	_printf	;wreg free
  1768                           
  1769                           ;main.c: 81:                     printf("o:   k\r\n");
  1770  0128' 0E00'              	movlw	low STR_14
  1771  012A' 0100               	movlb	0	; () banked
  1772  012C' 6F00'              	movwf	printf@fmt& (0+255),b
  1773  012E' 0E00'              	movlw	high STR_14
  1774  0130' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1775  0132' EC00' F000'        	call	_printf	;wreg free
  1776                           
  1777                           ;main.c: 82:                     printf("Z:   reset processor\r\n");
  1778  0136' 0E00'              	movlw	low STR_15
  1779  0138' 0100               	movlb	0	; () banked
  1780  013A' 6F00'              	movwf	printf@fmt& (0+255),b
  1781  013C' 0E00'              	movlw	high STR_15
  1782  013E' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1783  0140' EC00' F000'        	call	_printf	;wreg free
  1784                           
  1785                           ;main.c: 83:                     printf("z:   clear the terminal\r\n");
  1786  0144' 0E00'              	movlw	low STR_16
  1787  0146' 0100               	movlb	0	; () banked
  1788  0148' 6F00'              	movwf	printf@fmt& (0+255),b
  1789  014A' 0E00'              	movlw	high STR_16
  1790  014C' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1791  014E' EC00' F000'        	call	_printf	;wreg free
  1792                           
  1793                           ;main.c: 84:                     printf("s:   generate Sine wave\r\n");
  1794  0152' 0E00'              	movlw	low STR_17
  1795  0154' 0100               	movlb	0	; () banked
  1796  0156' 6F00'              	movwf	printf@fmt& (0+255),b
  1797  0158' 0E00'              	movlw	high STR_17
  1798  015A' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1799  015C' EC00' F000'        	call	_printf	;wreg free
  1800                           
  1801                           ;main.c: 85:                     printf("+/-: increase/decrease phase increment\r\n");
  1802  0160' 0E00'              	movlw	low STR_18
  1803  0162' 0100               	movlb	0	; () banked
  1804  0164' 6F00'              	movwf	printf@fmt& (0+255),b
  1805  0166' 0E00'              	movlw	high STR_18
  1806  0168' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1807  016A' EC00' F000'        	call	_printf	;wreg free
  1808                           
  1809                           ;main.c: 86:                     printf("w:   sWeep sine wave \r\n");
  1810  016E' 0E00'              	movlw	low STR_19
  1811  0170' 0100               	movlb	0	; () banked
  1812  0172' 6F00'              	movwf	printf@fmt& (0+255),b
  1813  0174' 0E00'              	movlw	high STR_19
  1814  0176' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1815  0178' EC00' F000'        	call	_printf	;wreg free
  1816                           
  1817                           ;main.c: 87:                     printf("m:   Math time\r\n");
  1818  017C' 0E00'              	movlw	low STR_20
  1819  017E' 0100               	movlb	0	; () banked
  1820  0180' 6F00'              	movwf	printf@fmt& (0+255),b
  1821  0182' 0E00'              	movlw	high STR_20
  1822  0184' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1823  0186' EC00' F000'        	call	_printf	;wreg free
  1824                           
  1825                           ;main.c: 88:                     printf("-----------------------------------------------
      +                          --\r\n");
  1826  018A' 0E00'              	movlw	low STR_9
  1827  018C' 0100               	movlb	0	; () banked
  1828  018E' 6F00'              	movwf	printf@fmt& (0+255),b
  1829  0190' 0E00'              	movlw	high STR_9
  1830  0192' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1831  0194' EC00' F000'        	call	_printf	;wreg free
  1832                           
  1833                           ;main.c: 89:                     break;
  1834  0198' EF00' F000'        	goto	l3669
  1835  019C'                    l3675:
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;main.c: 95:                     printf("o:	ok\r\n");
  1839  019C' 0E00'              	movlw	low STR_22
  1840  019E' 6F00'              	movwf	printf@fmt& (0+255),b
  1841  01A0' 0E00'              	movlw	high STR_22
  1842  01A2' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1843  01A4' EC00' F000'        	call	_printf	;wreg free
  1844                           
  1845                           ;main.c: 96:                     break;
  1846  01A8' EF00' F000'        	goto	l3669
  1847  01AC'                    l3677:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;main.c: 102:                     for (i = 0; i < 40; i++) printf("\n");
  1851  01AC' 0E00               	movlw	0
  1852  01AE' 6F00'              	movwf	main@i& (0+255),b
  1853  01B0'                    l3683:
  1854                           
  1855                           ; BSR set to: 0
  1856  01B0' 0E00'              	movlw	low (STR_10+32)
  1857  01B2' 6F00'              	movwf	printf@fmt& (0+255),b
  1858  01B4' 0E00'              	movlw	high (STR_10+32)
  1859  01B6' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1860  01B8' EC00' F000'        	call	_printf	;wreg free
  1861  01BC' 0100               	movlb	0	; () banked
  1862  01BE' 2B00'              	incf	main@i& (0+255),f,b
  1863  01C0'                    
  1864                           ; BSR set to: 0
  1865  01C0' 0E27               	movlw	39
  1866  01C2' 6500'              	cpfsgt	main@i& (0+255),b
  1867  01C4' EF00' F000'        	goto	u3251
  1868  01C8' EF00' F000'        	goto	u3250
  1869  01CC'                    u3251:
  1870  01CC' EF00' F000'        	goto	l3683
  1871  01D0'                    u3250:
  1872  01D0'                    
  1873                           ; BSR set to: 0
  1874  01D0' 00FF               	reset		;# 
  1875                           
  1876                           ;main.c: 104:                     break;
  1877  01D2' EF00' F000'        	goto	l3669
  1878  01D6'                    l3689:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;main.c: 110:                     for (i = 0; i < 40; i++) printf("\n");
  1882  01D6' 0E00               	movlw	0
  1883  01D8' 6F00'              	movwf	main@i& (0+255),b
  1884  01DA'                    l3695:
  1885                           
  1886                           ; BSR set to: 0
  1887  01DA' 0E00'              	movlw	low (STR_10+32)
  1888  01DC' 6F00'              	movwf	printf@fmt& (0+255),b
  1889  01DE' 0E00'              	movlw	high (STR_10+32)
  1890  01E0' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1891  01E2' EC00' F000'        	call	_printf	;wreg free
  1892  01E6' 0100               	movlb	0	; () banked
  1893  01E8' 2B00'              	incf	main@i& (0+255),f,b
  1894  01EA'                    
  1895                           ; BSR set to: 0
  1896  01EA' 0E27               	movlw	39
  1897  01EC' 6500'              	cpfsgt	main@i& (0+255),b
  1898  01EE' EF00' F000'        	goto	u3261
  1899  01F2' EF00' F000'        	goto	u3260
  1900  01F6'                    u3261:
  1901  01F6' EF00' F000'        	goto	l3695
  1902  01FA'                    u3260:
  1903  01FA' EF00' F000'        	goto	l3669
  1904  01FE'                    l3701:
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;main.c: 118:                     phaseAccumulator = 0;
  1908  01FE' 0E00               	movlw	0
  1909  0200' 6F00'              	movwf	main@phaseAccumulator& (0+255),b
  1910  0202'                    
  1911                           ; BSR set to: 0
  1912                           ;main.c: 119:                     printf("Generating a %d Hz sine wave\r\n", phaseIncrem
      +                          ent << 5);
  1913  0202' 0E00'              	movlw	low STR_25
  1914  0204' 6F00'              	movwf	printf@fmt& (0+255),b
  1915  0206' 0E00'              	movlw	high STR_25
  1916  0208' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  1917  020A' 5100'              	movf	main@phaseIncrement& (0+255),w,b
  1918  020C' 6F00'              	movwf	??_main& (0+255),b
  1919  020E' 6B00'              	clrf	(??_main+1)& (0+255),b
  1920  0210' 0E05               	movlw	5
  1921  0212'                    u3275:
  1922  0212' 90D8               	bcf	status,0,c
  1923  0214' 3700'              	rlcf	??_main& (0+255),f,b
  1924  0216' 3700'              	rlcf	(??_main+1)& (0+255),f,b
  1925  0218' 2EE8               	decfsz	wreg,f,c
  1926  021A' EF00' F000'        	goto	u3275
  1927  021E' C010' F00A'        	movff	??_main,?_printf+2
  1928  0222' C011' F00B'        	movff	??_main+1,?_printf+3
  1929  0226' EC00' F000'        	call	_printf	;wreg free
  1930                           
  1931                           ;main.c: 120:                     while ((EUSART1_is_rx_ready()) == 0) {
  1932  022A' EF00' F000'        	goto	l3715
  1933  022E'                    l3705:
  1934                           
  1935                           ;main.c: 121:                         phaseAccumulator = phaseAccumulator + phaseIncreme
      +                          nt;
  1936  022E' 0100               	movlb	0	; () banked
  1937  0230' 5100'              	movf	main@phaseAccumulator& (0+255),w,b
  1938  0232' 2500'              	addwf	main@phaseIncrement& (0+255),w,b
  1939  0234' 6F00'              	movwf	main@phaseAccumulator& (0+255),b
  1940                           
  1941                           ;main.c: 122:                         index = phaseAccumulator >> 4;
  1942  0236' 3900'              	swapf	main@phaseAccumulator& (0+255),w,b
  1943  0238' 0B0F               	andlw	15
  1944  023A' 6F00'              	movwf	main@index& (0+255),b
  1945  023C'                    
  1946                           ; BSR set to: 0
  1947                           ;main.c: 123:                         EPWM1_LoadDutyValue(sin[index]);
  1948  023C' 0E00'              	movlw	low main@sin
  1949  023E' 2500'              	addwf	main@index& (0+255),w,b
  1950  0240' 6ED9               	movwf	fsr2l,c
  1951  0242' 6ADA               	clrf	fsr2h,c
  1952  0244' 0E00'              	movlw	high main@sin
  1953  0246' 22DA               	addwfc	fsr2h,f,c
  1954  0248' 50DF               	movf	indf2,w,c
  1955  024A' 6F00'              	movwf	??_main& (0+255),b
  1956  024C' 5100'              	movf	??_main& (0+255),w,b
  1957  024E' 6E00'              	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1958  0250' 6A00'              	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1959  0252' EC00' F000'        	call	_EPWM1_LoadDutyValue	;wreg free
  1960  0256'                    
  1961                           ;main.c: 125:                         TMR0_WriteTimer(0xFFFF - 1875);
  1962  0256' 0EF8               	movlw	248
  1963  0258' 6E00'              	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1964  025A' 0EAC               	movlw	172
  1965  025C' 6E00'              	movwf	TMR0_WriteTimer@timerVal^0,c
  1966  025E' EC00' F000'        	call	_TMR0_WriteTimer	;wreg free
  1967  0262'                    
  1968                           ;main.c: 126:                         INTCONbits.TMR0IF = 0;
  1969  0262' 94F2               	bcf	242,2,c	;volatile
  1970  0264'                    l3713:
  1971  0264' EC00' F000'        	call	_TMR0_HasOverflowOccured	;wreg free
  1972  0268' 5000'              	movf	?_TMR0_HasOverflowOccured^0,w,c
  1973  026A' 1000'              	iorwf	(?_TMR0_HasOverflowOccured+1)^0,w,c
  1974  026C' B4D8               	btfsc	status,2,c
  1975  026E' EF00' F000'        	goto	u3281
  1976  0272' EF00' F000'        	goto	u3280
  1977  0276'                    u3281:
  1978  0276' EF00' F000'        	goto	l3713
  1979  027A'                    u3280:
  1980  027A'                    l3715:
  1981                           
  1982                           ;main.c: 120:                     while ((EUSART1_is_rx_ready()) == 0) {
  1983  027A' EC00' F000'        	call	_EUSART1_is_rx_ready	;wreg free
  1984  027E' 0900               	iorlw	0
  1985  0280' B4D8               	btfsc	status,2,c
  1986  0282' EF00' F000'        	goto	u3291
  1987  0286' EF00' F000'        	goto	u3290
  1988  028A'                    u3291:
  1989  028A' EF00' F000'        	goto	l3705
  1990  028E'                    u3290:
  1991  028E'                    
  1992                           ;main.c: 130:                     (void) EUSART1_Read();
  1993  028E' EC00' F000'        	call	_EUSART1_Read	;wreg free
  1994  0292'                    
  1995                           ;main.c: 131:                     printf("Stopped generating sine wave\r\n");
  1996  0292' 0E00'              	movlw	low STR_26
  1997  0294' 0100               	movlb	0	; () banked
  1998  0296' 6F00'              	movwf	printf@fmt& (0+255),b
  1999  0298' 0E00'              	movlw	high STR_26
  2000  029A' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2001  029C' EC00' F000'        	call	_printf	;wreg free
  2002  02A0'                    l3721:
  2003                           
  2004                           ;main.c: 132:                     EPWM1_LoadDutyValue(0x80);
  2005  02A0' 0E00               	movlw	0
  2006  02A2' 6E00'              	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2007  02A4' 0E80               	movlw	128
  2008  02A6' 6E00'              	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2009  02A8' EC00' F000'        	call	_EPWM1_LoadDutyValue	;wreg free
  2010                           
  2011                           ;main.c: 133:                     break;
  2012  02AC' EF00' F000'        	goto	l3669
  2013  02B0'                    l3723:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;main.c: 140:                     if (cmd == '+') phaseIncrement += 1;
  2017  02B0' 0E2B               	movlw	43
  2018  02B2' 1900'              	xorwf	main@cmd& (0+255),w,b
  2019  02B4' A4D8               	btfss	status,2,c
  2020  02B6' EF00' F000'        	goto	u3301
  2021  02BA' EF00' F000'        	goto	u3300
  2022  02BE'                    u3301:
  2023  02BE' EF00' F000'        	goto	l3727
  2024  02C2'                    u3300:
  2025  02C2'                    
  2026                           ; BSR set to: 0
  2027  02C2' 2B00'              	incf	main@phaseIncrement& (0+255),f,b
  2028  02C4' EF00' F000'        	goto	l3729
  2029  02C8'                    l3727:
  2030                           
  2031                           ; BSR set to: 0
  2032  02C8' 0700'              	decf	main@phaseIncrement& (0+255),f,b
  2033  02CA'                    l3729:
  2034                           
  2035                           ; BSR set to: 0
  2036                           ;main.c: 142:                     printf("phaseIncrement = %d\r\n", phaseIncrement);
  2037  02CA' 0E00'              	movlw	low STR_27
  2038  02CC' 6F00'              	movwf	printf@fmt& (0+255),b
  2039  02CE' 0E00'              	movlw	high STR_27
  2040  02D0' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2041  02D2' C032' F00A'        	movff	main@phaseIncrement,?_printf+2
  2042  02D6' 6B00'              	clrf	(?_printf+3)& (0+255),b
  2043  02D8' EC00' F000'        	call	_printf	;wreg free
  2044                           
  2045                           ;main.c: 143:                     break;
  2046  02DC' EF00' F000'        	goto	l3669
  2047  02E0'                    l3731:
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;main.c: 149:                     phaseAccumulator = 0;
  2051  02E0' 0E00               	movlw	0
  2052  02E2' 6F00'              	movwf	main@phaseAccumulator& (0+255),b
  2053  02E4'                    
  2054                           ; BSR set to: 0
  2055                           ;main.c: 150:                     printf("Press any key to exit.\r\n");
  2056  02E4' 0E00'              	movlw	low STR_28
  2057  02E6' 6F00'              	movwf	printf@fmt& (0+255),b
  2058  02E8' 0E00'              	movlw	high STR_28
  2059  02EA' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2060  02EC' EC00' F000'        	call	_printf	;wreg free
  2061                           
  2062                           ;main.c: 151:                     while ((EUSART1_is_rx_ready()) == 0) {
  2063  02F0' EF00' F000'        	goto	l3761
  2064  02F4'                    l3735:
  2065                           
  2066                           ;main.c: 152:                         for (phaseIncrement = 3; phaseIncrement < 13; phas
      +                          eIncrement++) {
  2067  02F4' 0E03               	movlw	3
  2068  02F6' 0100               	movlb	0	; () banked
  2069  02F8' 6F00'              	movwf	main@phaseIncrement& (0+255),b
  2070  02FA'                    l3741:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;main.c: 154:                             TMR1_WriteTimer(0x0000);
  2074  02FA' 0E00               	movlw	0
  2075  02FC' 6E00'              	movwf	(TMR1_WriteTimer@timerVal+1)^0,c
  2076  02FE' 0E00               	movlw	0
  2077  0300' 6E00'              	movwf	TMR1_WriteTimer@timerVal^0,c
  2078  0302' EC00' F000'        	call	_TMR1_WriteTimer	;wreg free
  2079  0306'                    
  2080                           ;main.c: 155:                             PIR1bits.TMR1IF = 0;
  2081  0306' 909E               	bcf	158,0,c	;volatile
  2082                           
  2083                           ;main.c: 157:                             while (TMR1_HasOverflowOccured() == 0) {
  2084  0308' EF00' F000'        	goto	l3755
  2085  030C'                    l3745:
  2086                           
  2087                           ;main.c: 158:                                 phaseAccumulator = phaseAccumulator + phas
      +                          eIncrement;
  2088  030C' 0100               	movlb	0	; () banked
  2089  030E' 5100'              	movf	main@phaseAccumulator& (0+255),w,b
  2090  0310' 2500'              	addwf	main@phaseIncrement& (0+255),w,b
  2091  0312' 6F00'              	movwf	main@phaseAccumulator& (0+255),b
  2092                           
  2093                           ;main.c: 159:                                 index = phaseAccumulator >> 4;
  2094  0314' 3900'              	swapf	main@phaseAccumulator& (0+255),w,b
  2095  0316' 0B0F               	andlw	15
  2096  0318' 6F00'              	movwf	main@index& (0+255),b
  2097  031A'                    
  2098                           ; BSR set to: 0
  2099                           ;main.c: 160:                                 EPWM1_LoadDutyValue(sin[index]);
  2100  031A' 0E00'              	movlw	low main@sin
  2101  031C' 2500'              	addwf	main@index& (0+255),w,b
  2102  031E' 6ED9               	movwf	fsr2l,c
  2103  0320' 6ADA               	clrf	fsr2h,c
  2104  0322' 0E00'              	movlw	high main@sin
  2105  0324' 22DA               	addwfc	fsr2h,f,c
  2106  0326' 50DF               	movf	indf2,w,c
  2107  0328' 6F00'              	movwf	??_main& (0+255),b
  2108  032A' 5100'              	movf	??_main& (0+255),w,b
  2109  032C' 6E00'              	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2110  032E' 6A00'              	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2111  0330' EC00' F000'        	call	_EPWM1_LoadDutyValue	;wreg free
  2112  0334'                    
  2113                           ;main.c: 162:                                 TMR0_WriteTimer(0xFFFF - 1875);
  2114  0334' 0EF8               	movlw	248
  2115  0336' 6E00'              	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2116  0338' 0EAC               	movlw	172
  2117  033A' 6E00'              	movwf	TMR0_WriteTimer@timerVal^0,c
  2118  033C' EC00' F000'        	call	_TMR0_WriteTimer	;wreg free
  2119  0340'                    
  2120                           ;main.c: 163:                                 INTCONbits.TMR0IF = 0;
  2121  0340' 94F2               	bcf	242,2,c	;volatile
  2122  0342'                    l3753:
  2123  0342' EC00' F000'        	call	_TMR0_HasOverflowOccured	;wreg free
  2124  0346' 5000'              	movf	?_TMR0_HasOverflowOccured^0,w,c
  2125  0348' 1000'              	iorwf	(?_TMR0_HasOverflowOccured+1)^0,w,c
  2126  034A' B4D8               	btfsc	status,2,c
  2127  034C' EF00' F000'        	goto	u3311
  2128  0350' EF00' F000'        	goto	u3310
  2129  0354'                    u3311:
  2130  0354' EF00' F000'        	goto	l3753
  2131  0358'                    u3310:
  2132  0358'                    l3755:
  2133                           
  2134                           ;main.c: 157:                             while (TMR1_HasOverflowOccured() == 0) {
  2135  0358' EC00' F000'        	call	_TMR1_HasOverflowOccured	;wreg free
  2136  035C' 0900               	iorlw	0
  2137  035E' B4D8               	btfsc	status,2,c
  2138  0360' EF00' F000'        	goto	u3321
  2139  0364' EF00' F000'        	goto	u3320
  2140  0368'                    u3321:
  2141  0368' EF00' F000'        	goto	l3745
  2142  036C'                    u3320:
  2143  036C'                    
  2144                           ;main.c: 166:                         }
  2145  036C' 0100               	movlb	0	; () banked
  2146  036E' 2B00'              	incf	main@phaseIncrement& (0+255),f,b
  2147  0370'                    
  2148                           ; BSR set to: 0
  2149  0370' 0E0C               	movlw	12
  2150  0372' 6500'              	cpfsgt	main@phaseIncrement& (0+255),b
  2151  0374' EF00' F000'        	goto	u3331
  2152  0378' EF00' F000'        	goto	u3330
  2153  037C'                    u3331:
  2154  037C' EF00' F000'        	goto	l3741
  2155  0380'                    u3330:
  2156  0380'                    l3761:
  2157                           
  2158                           ;main.c: 151:                     while ((EUSART1_is_rx_ready()) == 0) {
  2159  0380' EC00' F000'        	call	_EUSART1_is_rx_ready	;wreg free
  2160  0384' 0900               	iorlw	0
  2161  0386' B4D8               	btfsc	status,2,c
  2162  0388' EF00' F000'        	goto	u3341
  2163  038C' EF00' F000'        	goto	u3340
  2164  0390'                    u3341:
  2165  0390' EF00' F000'        	goto	l3735
  2166  0394'                    u3340:
  2167  0394'                    
  2168                           ;main.c: 168:                     (void) EUSART1_Read();
  2169  0394' EC00' F000'        	call	_EUSART1_Read	;wreg free
  2170  0398'                    
  2171                           ;main.c: 169:                     printf("Stopped generation of sweeped sine wave\r\n");
  2172  0398' 0E00'              	movlw	low STR_29
  2173  039A' 0100               	movlb	0	; () banked
  2174  039C' 6F00'              	movwf	printf@fmt& (0+255),b
  2175  039E' 0E00'              	movlw	high STR_29
  2176  03A0' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2177  03A2' EC00' F000'        	call	_printf	;wreg free
  2178  03A6' EF00' F000'        	goto	l3721
  2179  03AA'                    l3769:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;main.c: 178:                     b16 = 200;
  2183  03AA' 0E00               	movlw	0
  2184  03AC' 6F00'              	movwf	(main@b16+1)& (0+255),b
  2185  03AE' 0EC8               	movlw	200
  2186  03B0' 6F00'              	movwf	main@b16& (0+255),b
  2187  03B2'                    
  2188                           ; BSR set to: 0
  2189                           ;main.c: 180:                     printf("Performing: %u*500/%u:\r\n", a16, b16);
  2190  03B2' 0E00'              	movlw	low STR_30
  2191  03B4' 6F00'              	movwf	printf@fmt& (0+255),b
  2192  03B6' 0E00'              	movlw	high STR_30
  2193  03B8' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2194  03BA' 0E00               	movlw	0
  2195  03BC' 6F00'              	movwf	(?_printf+3)& (0+255),b
  2196  03BE' 0E64               	movlw	100
  2197  03C0' 6F00'              	movwf	(?_printf+2)& (0+255),b
  2198  03C2' 0E00               	movlw	0
  2199  03C4' 6F00'              	movwf	(?_printf+5)& (0+255),b
  2200  03C6' 0EC8               	movlw	200
  2201  03C8' 6F00'              	movwf	(?_printf+4)& (0+255),b
  2202  03CA' EC00' F000'        	call	_printf	;wreg free
  2203  03CE'                    
  2204                           ;main.c: 183:                     a32 = ((uint32_t) a16) * ((uint32_t) 500);
  2205  03CE' 0E64               	movlw	100
  2206  03D0' 6E00'              	movwf	___lmul@multiplier^0,c
  2207  03D2' 0E00               	movlw	0
  2208  03D4' 6E00'              	movwf	(___lmul@multiplier+1)^0,c
  2209  03D6' 0E00               	movlw	0
  2210  03D8' 6E00'              	movwf	(___lmul@multiplier+2)^0,c
  2211  03DA' 0E00               	movlw	0
  2212  03DC' 6E00'              	movwf	(___lmul@multiplier+3)^0,c
  2213  03DE' 0EF4               	movlw	244
  2214  03E0' 6E00'              	movwf	___lmul@multiplicand^0,c
  2215  03E2' 0E01               	movlw	1
  2216  03E4' 6E00'              	movwf	(___lmul@multiplicand+1)^0,c
  2217  03E6' 0E00               	movlw	0
  2218  03E8' 6E00'              	movwf	(___lmul@multiplicand+2)^0,c
  2219  03EA' 0E00               	movlw	0
  2220  03EC' 6E00'              	movwf	(___lmul@multiplicand+3)^0,c
  2221  03EE' EC00' F000'        	call	___lmul	;wreg free
  2222  03F2' C002' F022'        	movff	?___lmul,main@a32
  2223  03F6' C003' F023'        	movff	?___lmul+1,main@a32+1
  2224  03FA' C004' F024'        	movff	?___lmul+2,main@a32+2
  2225  03FE' C005' F025'        	movff	?___lmul+3,main@a32+3
  2226  0402'                    
  2227                           ;main.c: 189:                     c32 = a32 / b32;
  2228  0402' C022' F002'        	movff	main@a32,___lldiv@dividend
  2229  0406' C023' F003'        	movff	main@a32+1,___lldiv@dividend+1
  2230  040A' C024' F004'        	movff	main@a32+2,___lldiv@dividend+2
  2231  040E' C025' F005'        	movff	main@a32+3,___lldiv@dividend+3
  2232  0412' 0EC8               	movlw	200
  2233  0414' 6E00'              	movwf	___lldiv@divisor^0,c
  2234  0416' 0E00               	movlw	0
  2235  0418' 6E00'              	movwf	(___lldiv@divisor+1)^0,c
  2236  041A' 0E00               	movlw	0
  2237  041C' 6E00'              	movwf	(___lldiv@divisor+2)^0,c
  2238  041E' 0E00               	movlw	0
  2239  0420' 6E00'              	movwf	(___lldiv@divisor+3)^0,c
  2240  0422' EC00' F000'        	call	___lldiv	;wreg free
  2241  0426' C002' F026'        	movff	?___lldiv,main@c32
  2242  042A' C003' F027'        	movff	?___lldiv+1,main@c32+1
  2243  042E' C004' F028'        	movff	?___lldiv+2,main@c32+2
  2244  0432' C005' F029'        	movff	?___lldiv+3,main@c32+3
  2245  0436'                    
  2246                           ;main.c: 192:                     d16 = (uint16_t) c32;
  2247  0436' C026' F02E'        	movff	main@c32,main@d16
  2248  043A' C027' F02F'        	movff	main@c32+1,main@d16+1
  2249  043E'                    
  2250                           ;main.c: 194:                     printf("d16 paranoid = 0x%04x = %u\r\n", d16, d16);
  2251  043E' 0E00'              	movlw	low STR_31
  2252  0440' 0100               	movlb	0	; () banked
  2253  0442' 6F00'              	movwf	printf@fmt& (0+255),b
  2254  0444' 0E00'              	movlw	high STR_31
  2255  0446' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2256  0448' C02E' F00A'        	movff	main@d16,?_printf+2
  2257  044C' C02F' F00B'        	movff	main@d16+1,?_printf+3
  2258  0450' C02E' F00C'        	movff	main@d16,?_printf+4
  2259  0454' C02F' F00D'        	movff	main@d16+1,?_printf+5
  2260  0458' EC00' F000'        	call	_printf	;wreg free
  2261  045C'                    
  2262                           ;main.c: 196:                     d16 = a16 * 500 / b16;
  2263  045C' 0E00               	movlw	0
  2264  045E' 6E00'              	movwf	(___wmul@multiplier+1)^0,c
  2265  0460' 0E64               	movlw	100
  2266  0462' 6E00'              	movwf	___wmul@multiplier^0,c
  2267  0464' 0E01               	movlw	1
  2268  0466' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  2269  0468' 0EF4               	movlw	244
  2270  046A' 6E00'              	movwf	___wmul@multiplicand^0,c
  2271  046C' EC00' F000'        	call	___wmul	;wreg free
  2272  0470' C002' F008'        	movff	?___wmul,___lwdiv@dividend
  2273  0474' C003' F009'        	movff	?___wmul+1,___lwdiv@dividend+1
  2274  0478' 0E00               	movlw	0
  2275  047A' 6E00'              	movwf	(___lwdiv@divisor+1)^0,c
  2276  047C' 0EC8               	movlw	200
  2277  047E' 6E00'              	movwf	___lwdiv@divisor^0,c
  2278  0480' EC00' F000'        	call	___lwdiv	;wreg free
  2279  0484' C008' F02E'        	movff	?___lwdiv,main@d16
  2280  0488' C009' F02F'        	movff	?___lwdiv+1,main@d16+1
  2281  048C'                    
  2282                           ;main.c: 198:                     printf("d16 casual = 0x%04x = %u\r\n", d16, d16);
  2283  048C' 0E00'              	movlw	low STR_32
  2284  048E' 0100               	movlb	0	; () banked
  2285  0490' 6F00'              	movwf	printf@fmt& (0+255),b
  2286  0492' 0E00'              	movlw	high STR_32
  2287  0494' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2288  0496' C02E' F00A'        	movff	main@d16,?_printf+2
  2289  049A' C02F' F00B'        	movff	main@d16+1,?_printf+3
  2290  049E' C02E' F00C'        	movff	main@d16,?_printf+4
  2291  04A2' C02F' F00D'        	movff	main@d16+1,?_printf+5
  2292  04A6' EC00' F000'        	call	_printf	;wreg free
  2293                           
  2294                           ;main.c: 200:                     break;
  2295  04AA' EF00' F000'        	goto	l3669
  2296  04AE'                    l3787:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;main.c: 206:                     printf("Unknown key %c\r\n", cmd);
  2300  04AE' 0E00'              	movlw	low STR_33
  2301  04B0' 6F00'              	movwf	printf@fmt& (0+255),b
  2302  04B2' 0E00'              	movlw	high STR_33
  2303  04B4' 6F00'              	movwf	(printf@fmt+1)& (0+255),b
  2304  04B6' C02D' F00A'        	movff	main@cmd,?_printf+2
  2305  04BA' 6B00'              	clrf	(?_printf+3)& (0+255),b
  2306  04BC' EC00' F000'        	call	_printf	;wreg free
  2307                           
  2308                           ;main.c: 207:                     break;
  2309  04C0' EF00' F000'        	goto	l3669
  2310  04C4'                    l3791:
  2311                           
  2312                           ; BSR set to: 0
  2313  04C4' 5100'              	movf	main@cmd& (0+255),w,b
  2314  04C6' 6F00'              	movwf	??_main& (0+255),b
  2315  04C8' 6B00'              	clrf	(??_main+1)& (0+255),b
  2316                           
  2317                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2318                           ; Switch size 1, requested type "simple"
  2319                           ; Number of cases is 1, Range of values is 0 to 0
  2320                           ; switch strategies available:
  2321                           ; Name         Instructions Cycles
  2322                           ; simple_byte            4     3 (average)
  2323                           ;	Chosen strategy is simple_byte
  2324  04CA' 5100'              	movf	(??_main+1)& (0+255),w,b
  2325  04CC' 0A00               	xorlw	0	; case 0
  2326  04CE' B4D8               	btfsc	status,2,c
  2327  04D0' EF00' F000'        	goto	l3877
  2328  04D4' EF00' F000'        	goto	l3787
  2329  04D8'                    l3877:
  2330                           
  2331                           ; BSR set to: 0
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 9, Range of values is 43 to 122
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte           28    15 (average)
  2337                           ;	Chosen strategy is simple_byte
  2338  04D8' 5100'              	movf	??_main& (0+255),w,b
  2339  04DA' 0A2B               	xorlw	43	; case 43
  2340  04DC' B4D8               	btfsc	status,2,c
  2341  04DE' EF00' F000'        	goto	l3723
  2342  04E2' 0A06               	xorlw	6	; case 45
  2343  04E4' B4D8               	btfsc	status,2,c
  2344  04E6' EF00' F000'        	goto	l3723
  2345  04EA' 0A12               	xorlw	18	; case 63
  2346  04EC' B4D8               	btfsc	status,2,c
  2347  04EE' EF00' F000'        	goto	l3673
  2348  04F2' 0A65               	xorlw	101	; case 90
  2349  04F4' B4D8               	btfsc	status,2,c
  2350  04F6' EF00' F000'        	goto	l3677
  2351  04FA' 0A37               	xorlw	55	; case 109
  2352  04FC' B4D8               	btfsc	status,2,c
  2353  04FE' EF00' F000'        	goto	l3769
  2354  0502' 0A02               	xorlw	2	; case 111
  2355  0504' B4D8               	btfsc	status,2,c
  2356  0506' EF00' F000'        	goto	l3675
  2357  050A' 0A1C               	xorlw	28	; case 115
  2358  050C' B4D8               	btfsc	status,2,c
  2359  050E' EF00' F000'        	goto	l3701
  2360  0512' 0A04               	xorlw	4	; case 119
  2361  0514' B4D8               	btfsc	status,2,c
  2362  0516' EF00' F000'        	goto	l3731
  2363  051A' 0A0D               	xorlw	13	; case 122
  2364  051C' B4D8               	btfsc	status,2,c
  2365  051E' EF00' F000'        	goto	l3689
  2366  0522' EF00' F000'        	goto	l3787
  2367  0526' EF00' F000'        	goto	start
  2368  052A'                    __end_of_main:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _printf *****************
  2372 ;; Defined at:
  2373 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2376 ;;		 -> STR_33(17), STR_32(27), STR_31(29), STR_30(25), 
  2377 ;;		 -> STR_29(42), STR_28(25), STR_27(22), STR_26(31), 
  2378 ;;		 -> STR_25(31), STR_24(2), STR_23(2), STR_22(8), 
  2379 ;;		 -> STR_21(52), STR_20(17), STR_19(24), STR_18(41), 
  2380 ;;		 -> STR_17(26), STR_16(26), STR_15(23), STR_14(9), 
  2381 ;;		 -> STR_13(17), STR_12(52), STR_11(30), STR_10(34), 
  2382 ;;		 -> STR_9(52), STR_8(5), STR_7(44), STR_6(40), 
  2383 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  2384 ;;		 -> STR_1(9), 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  ap              2   14[BANK0 ] PTR void [1]
  2387 ;;		 -> ?_printf(2), 
  2388 ;;  ret             2    0        int 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  2    8[BANK0 ] int 
  2391 ;; Registers used:
  2392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2398 ;;      Params:         0       6       0       0       0       0       0
  2399 ;;      Locals:         0       2       0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0
  2401 ;;      Totals:         0       8       0       0       0       0       0
  2402 ;;Total ram usage:        8 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 11
  2405 ;; This function calls:
  2406 ;;		_vfprintf
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           	psect	text1
  2413  0000'                    __ptext1:
  2414                           	callstack 0
  2415  0000'                    _printf:
  2416                           	callstack 19
  2417  0000' 0E00'              	movlw	low (?_printf+2)
  2418  0002' 0100               	movlb	0	; () banked
  2419  0004' 6F00'              	movwf	printf@ap& (0+255),b
  2420  0006' 0E00'              	movlw	high (?_printf+2)
  2421  0008' 6F00'              	movwf	(printf@ap+1)& (0+255),b
  2422  000A'                    
  2423                           ; BSR set to: 0
  2424  000A' 0E00               	movlw	0
  2425  000C' 6F00'              	movwf	vfprintf@fp& (0+255),b
  2426  000E' 0E00               	movlw	0
  2427  0010' 6F00'              	movwf	(vfprintf@fp+1)& (0+255),b
  2428  0012' C008' F002'        	movff	printf@fmt,vfprintf@fmt
  2429  0016' C009' F003'        	movff	printf@fmt+1,vfprintf@fmt+1
  2430  001A' 0E00'              	movlw	low printf@ap
  2431  001C' 6F00'              	movwf	vfprintf@ap& (0+255),b
  2432  001E' 0E00'              	movlw	high printf@ap
  2433  0020' 6F00'              	movwf	(vfprintf@ap+1)& (0+255),b
  2434  0022' EC00' F000'        	call	_vfprintf	;wreg free
  2435  0026' 0012               	return		;funcret
  2436  0028'                    __end_of_printf:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _vfprintf *****************
  2440 ;; Defined at:
  2441 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2444 ;;		 -> NULL(0), 
  2445 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2446 ;;		 -> STR_33(17), STR_32(27), STR_31(29), STR_30(25), 
  2447 ;;		 -> STR_29(42), STR_28(25), STR_27(22), STR_26(31), 
  2448 ;;		 -> STR_25(31), STR_24(2), STR_23(2), STR_22(8), 
  2449 ;;		 -> STR_21(52), STR_20(17), STR_19(24), STR_18(41), 
  2450 ;;		 -> STR_17(26), STR_16(26), STR_15(23), STR_14(9), 
  2451 ;;		 -> STR_13(17), STR_12(52), STR_11(30), STR_10(34), 
  2452 ;;		 -> STR_9(52), STR_8(5), STR_7(44), STR_6(40), 
  2453 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  2454 ;;		 -> STR_1(9), 
  2455 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2456 ;;		 -> printf@ap(2), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  2459 ;;		 -> STR_33(17), STR_32(27), STR_31(29), STR_30(25), 
  2460 ;;		 -> STR_29(42), STR_28(25), STR_27(22), STR_26(31), 
  2461 ;;		 -> STR_25(31), STR_24(2), STR_23(2), STR_22(8), 
  2462 ;;		 -> STR_21(52), STR_20(17), STR_19(24), STR_18(41), 
  2463 ;;		 -> STR_17(26), STR_16(26), STR_15(23), STR_14(9), 
  2464 ;;		 -> STR_13(17), STR_12(52), STR_11(30), STR_10(34), 
  2465 ;;		 -> STR_9(52), STR_8(5), STR_7(44), STR_6(40), 
  2466 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  2467 ;;		 -> STR_1(9), 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    0[BANK0 ] int 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2477 ;;      Params:         0       6       0       0       0       0       0
  2478 ;;      Locals:         0       2       0       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0       0       0
  2480 ;;      Totals:         0       8       0       0       0       0       0
  2481 ;;Total ram usage:        8 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 10
  2484 ;; This function calls:
  2485 ;;		_vfpfcnvrt
  2486 ;; This function is called by:
  2487 ;;		_printf
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           	psect	text2
  2492  0000'                    __ptext2:
  2493                           	callstack 0
  2494  0000'                    _vfprintf:
  2495                           	callstack 19
  2496  0000'                    
  2497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2498  0000' C002' F006'        	movff	vfprintf@fmt,vfprintf@cfmt
  2499  0004' C003' F007'        	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2502  0008' EF00' F000'        	goto	l3643
  2503  000C'                    l3641:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2506  000C' C000' F042'        	movff	vfprintf@fp,vfpfcnvrt@fp
  2507  0010' C001' F043'        	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2508  0014' 0E00'              	movlw	low vfprintf@cfmt
  2509  0016' 6E00'              	movwf	vfpfcnvrt@fmt^0,c
  2510  0018' 0E00'              	movlw	high vfprintf@cfmt
  2511  001A' 6E00'              	movwf	(vfpfcnvrt@fmt+1)^0,c
  2512  001C' C004' F046'        	movff	vfprintf@ap,vfpfcnvrt@ap
  2513  0020' C005' F047'        	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2514  0024' EC00' F000'        	call	_vfpfcnvrt	;wreg free
  2515  0028'                    l3643:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2518  0028' C006' FFF6         	movff	vfprintf@cfmt,tblptrl
  2519  002C' C007' FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2520  0030'                    	if	0	;tblptru may be non-zero
  2521  0030'                    	endif
  2522  0030'                    	if	0	;tblptru may be non-zero
  2523  0030'                    	endif
  2524  0030' 0008               	tblrd		*
  2525  0032' 50F5               	movf	tablat,w,c
  2526  0034' 0900               	iorlw	0
  2527  0036' A4D8               	btfss	status,2,c
  2528  0038' EF00' F000'        	goto	u3201
  2529  003C' EF00' F000'        	goto	u3200
  2530  0040'                    u3201:
  2531  0040' EF00' F000'        	goto	l3641
  2532  0044'                    u3200:
  2533  0044'                    
  2534                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2535  0044' 0E00               	movlw	0
  2536  0046' 0100               	movlb	0	; () banked
  2537  0048' 6F00'              	movwf	(?_vfprintf+1)& (0+255),b
  2538  004A' 0E00               	movlw	0
  2539  004C' 6F00'              	movwf	?_vfprintf& (0+255),b
  2540  004E'                    
  2541                           ; BSR set to: 0
  2542  004E' 0012               	return		;funcret
  2543  0050'                    __end_of_vfprintf:
  2544                           	callstack 0
  2545                           
  2546 ;; *************** function _vfpfcnvrt *****************
  2547 ;; Defined at:
  2548 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2551 ;;		 -> NULL(0), 
  2552 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2553 ;;		 -> vfprintf@cfmt(2), 
  2554 ;;  ap              2   70[COMRAM] PTR PTR void 
  2555 ;;		 -> printf@ap(2), 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;  convarg         8   79[COMRAM] struct .
  2558 ;;  cp              2   87[COMRAM] PTR unsigned char 
  2559 ;;		 -> STR_33(17), STR_32(27), STR_31(29), STR_30(25), 
  2560 ;;		 -> STR_29(42), STR_28(25), STR_27(22), STR_26(31), 
  2561 ;;		 -> STR_25(31), STR_24(2), STR_23(2), STR_22(8), 
  2562 ;;		 -> STR_21(52), STR_20(17), STR_19(24), STR_18(41), 
  2563 ;;		 -> STR_17(26), STR_16(26), STR_15(23), STR_14(9), 
  2564 ;;		 -> STR_13(17), STR_12(52), STR_11(30), STR_10(34), 
  2565 ;;		 -> STR_9(52), STR_8(5), STR_7(44), STR_6(40), 
  2566 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  2567 ;;		 -> STR_1(9), 
  2568 ;;  done            2   77[COMRAM] int 
  2569 ;;  i               2    0        int 
  2570 ;;  c               1   76[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2580 ;;      Params:         6       0       0       0       0       0       0
  2581 ;;      Locals:        13       0       0       0       0       0       0
  2582 ;;      Temps:          4       0       0       0       0       0       0
  2583 ;;      Totals:        23       0       0       0       0       0       0
  2584 ;;Total ram usage:       23 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 9
  2587 ;; This function calls:
  2588 ;;		_atoi
  2589 ;;		_ctoa
  2590 ;;		_dtoa
  2591 ;;		_fputc
  2592 ;;		_isdigit
  2593 ;;		_utoa
  2594 ;;		_xtoa
  2595 ;; This function is called by:
  2596 ;;		_vfprintf
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text3
  2601  0000'                    __ptext3:
  2602                           	callstack 0
  2603  0000'                    _vfpfcnvrt:
  2604                           	callstack 19
  2605  0000'                    
  2606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2607  0000' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608  0004' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609  0008' CFDE FFF6          	movff	postinc2,tblptrl
  2610  000C' CFDD FFF7          	movff	postdec2,tblptrh
  2611  0010'                    	if	0	;tblptru may be non-zero
  2612  0010'                    	endif
  2613  0010'                    	if	0	;tblptru may be non-zero
  2614  0010'                    	endif
  2615  0010' 0008               	tblrd		*
  2616  0012' 50F5               	movf	tablat,w,c
  2617  0014' 0A25               	xorlw	37
  2618  0016' A4D8               	btfss	status,2,c
  2619  0018' EF00' F000'        	goto	u3101
  2620  001C' EF00' F000'        	goto	u3100
  2621  0020'                    u3101:
  2622  0020' EF00' F000'        	goto	l3625
  2623  0024'                    u3100:
  2624  0024'                    
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2626  0024' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2627  0028' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2628  002C' 2ADE               	incf	postinc2,f,c
  2629  002E' 0E00               	movlw	0
  2630  0030' 22DD               	addwfc	postdec2,f,c
  2631  0032'                    
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2633  0032' 0E00               	movlw	0
  2634  0034' 0100               	movlb	0	; () banked
  2635  0036' 6F00'              	movwf	(_width+1)& (0+255),b
  2636  0038' 0E00               	movlw	0
  2637  003A' 6F00'              	movwf	_width& (0+255),b
  2638  003C' C000' F002'        	movff	_width,_flags
  2639  0040'                    
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2642  0040' 6800'              	setf	_prec^0,c
  2643  0042' 6800'              	setf	(_prec+1)^0,c
  2644  0044'                    
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2647  0044' 0E00               	movlw	0
  2648  0046' 6E00'              	movwf	(vfpfcnvrt@done+1)^0,c
  2649  0048' 0E00               	movlw	0
  2650  004A' 6E00'              	movwf	vfpfcnvrt@done^0,c
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2653  004C' EF00' F000'        	goto	l3565
  2654  0050'                    l3555:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2657  0050' 8200'              	bsf	_flags^0,1,c
  2658  0052'                    
  2659                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2660  0052' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2661  0056' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2662  005A' 2ADE               	incf	postinc2,f,c
  2663  005C' 0E00               	movlw	0
  2664  005E' 22DD               	addwfc	postdec2,f,c
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2667  0060' EF00' F000'        	goto	l3565
  2668  0064'                    l3559:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2671  0064' 0E00               	movlw	0
  2672  0066' 6E00'              	movwf	(vfpfcnvrt@done+1)^0,c
  2673  0068' 0E01               	movlw	1
  2674  006A' 6E00'              	movwf	vfpfcnvrt@done^0,c
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2677  006C' EF00' F000'        	goto	l3565
  2678  0070'                    l3563:
  2679  0070' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2680  0074' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2681  0078' CFDE FFF6          	movff	postinc2,tblptrl
  2682  007C' CFDD FFF7          	movff	postdec2,tblptrh
  2683  0080'                    	if	0	;tblptru may be non-zero
  2684  0080'                    	endif
  2685  0080'                    	if	0	;tblptru may be non-zero
  2686  0080'                    	endif
  2687  0080' 0008               	tblrd		*
  2688  0082' 50F5               	movf	tablat,w,c
  2689  0084' 6E00'              	movwf	??_vfpfcnvrt^0,c
  2690  0086' 6A00'              	clrf	(??_vfpfcnvrt+1)^0,c
  2691                           
  2692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2693                           ; Switch size 1, requested type "simple"
  2694                           ; Number of cases is 1, Range of values is 0 to 0
  2695                           ; switch strategies available:
  2696                           ; Name         Instructions Cycles
  2697                           ; simple_byte            4     3 (average)
  2698                           ;	Chosen strategy is simple_byte
  2699  0088' 5000'              	movf	(??_vfpfcnvrt+1)^0,w,c
  2700  008A' 0A00               	xorlw	0	; case 0
  2701  008C' B4D8               	btfsc	status,2,c
  2702  008E' EF00' F000'        	goto	l3879
  2703  0092' EF00' F000'        	goto	l3559
  2704  0096'                    l3879:
  2705                           
  2706                           ; Switch size 1, requested type "simple"
  2707                           ; Number of cases is 1, Range of values is 48 to 48
  2708                           ; switch strategies available:
  2709                           ; Name         Instructions Cycles
  2710                           ; simple_byte            4     3 (average)
  2711                           ;	Chosen strategy is simple_byte
  2712  0096' 5000'              	movf	??_vfpfcnvrt^0,w,c
  2713  0098' 0A30               	xorlw	48	; case 48
  2714  009A' B4D8               	btfsc	status,2,c
  2715  009C' EF00' F000'        	goto	l3555
  2716  00A0' EF00' F000'        	goto	l3559
  2717  00A4'                    l3565:
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2720  00A4' 5000'              	movf	vfpfcnvrt@done^0,w,c
  2721  00A6' 1000'              	iorwf	(vfpfcnvrt@done+1)^0,w,c
  2722  00A8' B4D8               	btfsc	status,2,c
  2723  00AA' EF00' F000'        	goto	u3111
  2724  00AE' EF00' F000'        	goto	u3110
  2725  00B2'                    u3111:
  2726  00B2' EF00' F000'        	goto	l3563
  2727  00B6'                    u3110:
  2728  00B6'                    
  2729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2730  00B6' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2731  00BA' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2732  00BE' CFDE FFF6          	movff	postinc2,tblptrl
  2733  00C2' CFDD FFF7          	movff	postdec2,tblptrh
  2734  00C6'                    	if	0	;tblptru may be non-zero
  2735  00C6'                    	endif
  2736  00C6'                    	if	0	;tblptru may be non-zero
  2737  00C6'                    	endif
  2738  00C6' 0008               	tblrd		*
  2739  00C8' 50F5               	movf	tablat,w,c
  2740  00CA' 0A2A               	xorlw	42
  2741  00CC' A4D8               	btfss	status,2,c
  2742  00CE' EF00' F000'        	goto	u3121
  2743  00D2' EF00' F000'        	goto	u3120
  2744  00D6'                    u3121:
  2745  00D6' EF00' F000'        	goto	l3575
  2746  00DA'                    u3120:
  2747  00DA'                    
  2748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2749  00DA' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2750  00DE' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2751  00E2' 2ADE               	incf	postinc2,f,c
  2752  00E4' 0E00               	movlw	0
  2753  00E6' 22DD               	addwfc	postdec2,f,c
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2756  00E8' C046' FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2757  00EC' C047' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2758  00F0' CFDF F048'         	movff	indf2,??_vfpfcnvrt
  2759  00F4' 0E02               	movlw	2
  2760  00F6' 26DE               	addwf	postinc2,f,c
  2761  00F8' CFDF F049'         	movff	indf2,??_vfpfcnvrt+1
  2762  00FC' 0E00               	movlw	0
  2763  00FE' 22DD               	addwfc	postdec2,f,c
  2764  0100' C048' FFD9         	movff	??_vfpfcnvrt,fsr2l
  2765  0104' C049' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2766  0108' CFDE F000'         	movff	postinc2,_width
  2767  010C' CFDD F001'         	movff	postdec2,_width+1
  2768  0110'                    
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2770  0110' 0100               	movlb	0	; () banked
  2771  0112' BF00'              	btfsc	(_width+1)& (0+255),7,b
  2772  0114' EF00' F000'        	goto	u3130
  2773  0118' EF00' F000'        	goto	u3131
  2774  011C'                    u3131:
  2775  011C' EF00' F000'        	goto	l3583
  2776  0120'                    u3130:
  2777  0120'                    
  2778                           ; BSR set to: 0
  2779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2780  0120' 8000'              	bsf	_flags^0,0,c
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2783  0122' 6D00'              	negf	_width& (0+255),b
  2784  0124' 1F00'              	comf	(_width+1)& (0+255),f,b
  2785  0126' B0D8               	btfsc	status,0,c
  2786  0128' 2B00'              	incf	(_width+1)& (0+255),f,b
  2787  012A' EF00' F000'        	goto	l3583
  2788  012E'                    l3575:
  2789                           
  2790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2791  012E' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2792  0132' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2793  0136' CFDE F008'         	movff	postinc2,atoi@s
  2794  013A' CFDD F009'         	movff	postdec2,atoi@s+1
  2795  013E' EC00' F000'        	call	_atoi	;wreg free
  2796  0142' C008' F000'        	movff	?_atoi,_width
  2797  0146' C009' F001'        	movff	?_atoi+1,_width+1
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2800  014A' EF00' F000'        	goto	l3581
  2801  014E'                    l3577:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2804  014E' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2805  0152' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2806  0156' 2ADE               	incf	postinc2,f,c
  2807  0158' 0E00               	movlw	0
  2808  015A' 22DD               	addwfc	postdec2,f,c
  2809  015C'                    l3581:
  2810  015C' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2811  0160' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2812  0164' CFDE FFF6          	movff	postinc2,tblptrl
  2813  0168' CFDD FFF7          	movff	postdec2,tblptrh
  2814  016C'                    	if	0	;tblptru may be non-zero
  2815  016C'                    	endif
  2816  016C'                    	if	0	;tblptru may be non-zero
  2817  016C'                    	endif
  2818  016C' 0008               	tblrd		*
  2819  016E' CFF5 F048'         	movff	tablat,??_vfpfcnvrt
  2820  0172' 0ED0               	movlw	208
  2821  0174' 2400'              	addwf	??_vfpfcnvrt^0,w,c
  2822  0176' 6E00'              	movwf	(??_vfpfcnvrt+1)^0,c
  2823  0178' 6A00'              	clrf	(??_vfpfcnvrt+2)^0,c
  2824  017A' 0EFF               	movlw	255
  2825  017C' 2200'              	addwfc	(??_vfpfcnvrt+2)^0,f,c
  2826  017E' 5000'              	movf	(??_vfpfcnvrt+2)^0,w,c
  2827  0180' E109               	bnz	u3140
  2828  0182' 0E0A               	movlw	10
  2829  0184' 5C00'              	subwf	(??_vfpfcnvrt+1)^0,w,c
  2830  0186' A0D8               	btfss	status,0,c
  2831  0188' EF00' F000'        	goto	u3141
  2832  018C' EF00' F000'        	goto	u3140
  2833  0190'                    u3141:
  2834  0190' EF00' F000'        	goto	l3577
  2835  0194'                    u3140:
  2836  0194'                    l3583:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1108:         if 
      +                          (*fmt[0] == 'c') {
  2839  0194' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2840  0198' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2841  019C' CFDE FFF6          	movff	postinc2,tblptrl
  2842  01A0' CFDD FFF7          	movff	postdec2,tblptrh
  2843  01A4'                    	if	0	;tblptru may be non-zero
  2844  01A4'                    	endif
  2845  01A4'                    	if	0	;tblptru may be non-zero
  2846  01A4'                    	endif
  2847  01A4' 0008               	tblrd		*
  2848  01A6' 50F5               	movf	tablat,w,c
  2849  01A8' 0A63               	xorlw	99
  2850  01AA' A4D8               	btfss	status,2,c
  2851  01AC' EF00' F000'        	goto	u3151
  2852  01B0' EF00' F000'        	goto	u3150
  2853  01B4'                    u3151:
  2854  01B4' EF00' F000'        	goto	l3591
  2855  01B8'                    u3150:
  2856  01B8'                    
  2857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1109:            
      +                           ++*fmt;
  2858  01B8' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2859  01BC' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2860  01C0' 2ADE               	incf	postinc2,f,c
  2861  01C2' 0E00               	movlw	0
  2862  01C4' 22DD               	addwfc	postdec2,f,c
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1110:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2865  01C6' C046' FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2866  01CA' C047' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2867  01CE' CFDF F048'         	movff	indf2,??_vfpfcnvrt
  2868  01D2' 0E02               	movlw	2
  2869  01D4' 26DE               	addwf	postinc2,f,c
  2870  01D6' CFDF F049'         	movff	indf2,??_vfpfcnvrt+1
  2871  01DA' 0E00               	movlw	0
  2872  01DC' 22DD               	addwfc	postdec2,f,c
  2873  01DE' C048' FFD9         	movff	??_vfpfcnvrt,fsr2l
  2874  01E2' C049' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2875  01E6' 50DF               	movf	indf2,w,c
  2876  01E8' 6E00'              	movwf	vfpfcnvrt@c^0,c
  2877  01EA'                    
  2878                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1111:            
      +                           return (void) ctoa(fp, c);;	Return value of _vfpfcnvrt is never used
  2879  01EA' C042' F00D'        	movff	vfpfcnvrt@fp,ctoa@fp
  2880  01EE' C043' F00E'        	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2881  01F2' C04C' F00F'        	movff	vfpfcnvrt@c,ctoa@c
  2882  01F6' EC00' F000'        	call	_ctoa	;wreg free
  2883  01FA' EF00' F000'        	goto	l1193
  2884  01FE'                    l3591:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2887  01FE' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2888  0202' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2889  0206' CFDE F057'         	movff	postinc2,vfpfcnvrt@cp
  2890  020A' CFDD F058'         	movff	postdec2,vfpfcnvrt@cp+1
  2891  020E'                    
  2892                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2893  020E' C057' FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2894  0212' C058' FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2895  0216'                    	if	0	;tblptru may be non-zero
  2896  0216'                    	endif
  2897  0216'                    	if	0	;tblptru may be non-zero
  2898  0216'                    	endif
  2899  0216' 0008               	tblrd		*
  2900  0218' 50F5               	movf	tablat,w,c
  2901  021A' 0A64               	xorlw	100
  2902  021C' B4D8               	btfsc	status,2,c
  2903  021E' EF00' F000'        	goto	u3161
  2904  0222' EF00' F000'        	goto	u3160
  2905  0226'                    u3161:
  2906  0226' EF00' F000'        	goto	l3597
  2907  022A'                    u3160:
  2908  022A' C057' FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2909  022E' C058' FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2910  0232'                    	if	0	;tblptru may be non-zero
  2911  0232'                    	endif
  2912  0232'                    	if	0	;tblptru may be non-zero
  2913  0232'                    	endif
  2914  0232' 0008               	tblrd		*
  2915  0234' 50F5               	movf	tablat,w,c
  2916  0236' 0A69               	xorlw	105
  2917  0238' A4D8               	btfss	status,2,c
  2918  023A' EF00' F000'        	goto	u3171
  2919  023E' EF00' F000'        	goto	u3170
  2920  0242'                    u3171:
  2921  0242' EF00' F000'        	goto	l3603
  2922  0246'                    u3170:
  2923  0246'                    l3597:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2926  0246' C046' FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2927  024A' C047' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2928  024E' CFDF F048'         	movff	indf2,??_vfpfcnvrt
  2929  0252' 0E02               	movlw	2
  2930  0254' 26DE               	addwf	postinc2,f,c
  2931  0256' CFDF F049'         	movff	indf2,??_vfpfcnvrt+1
  2932  025A' 0E00               	movlw	0
  2933  025C' 22DD               	addwfc	postdec2,f,c
  2934  025E' C048' FFD9         	movff	??_vfpfcnvrt,fsr2l
  2935  0262' C049' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2936  0266' CFDE F04F'         	movff	postinc2,vfpfcnvrt@convarg
  2937  026A' CFDD F050'         	movff	postdec2,vfpfcnvrt@convarg+1
  2938  026E' 0E00               	movlw	0
  2939  0270' BE00'              	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2940  0272' 0EFF               	movlw	-1
  2941  0274' 6E00'              	movwf	(vfpfcnvrt@convarg+2)^0,c
  2942  0276' 6E00'              	movwf	(vfpfcnvrt@convarg+3)^0,c
  2943  0278' 6E00'              	movwf	(vfpfcnvrt@convarg+4)^0,c
  2944  027A' 6E00'              	movwf	(vfpfcnvrt@convarg+5)^0,c
  2945  027C' 6E00'              	movwf	(vfpfcnvrt@convarg+6)^0,c
  2946  027E' 6E00'              	movwf	(vfpfcnvrt@convarg+7)^0,c
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2949  0280' 0E01               	movlw	1
  2950  0282' 2400'              	addwf	vfpfcnvrt@cp^0,w,c
  2951  0284' 6E00'              	movwf	??_vfpfcnvrt^0,c
  2952  0286' 0E00               	movlw	0
  2953  0288' 2000'              	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2954  028A' 6E00'              	movwf	(??_vfpfcnvrt+1)^0,c
  2955  028C' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2956  0290' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2957  0294' C048' FFDE         	movff	??_vfpfcnvrt,postinc2
  2958  0298' C049' FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2959  029C'                    
  2960                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2961  029C' C042' F01F'        	movff	vfpfcnvrt@fp,dtoa@fp
  2962  02A0' C043' F020'        	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2963  02A4' C04F' F021'        	movff	vfpfcnvrt@convarg,dtoa@d
  2964  02A8' C050' F022'        	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2965  02AC' C051' F023'        	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2966  02B0' C052' F024'        	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2967  02B4' C053' F025'        	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2968  02B8' C054' F026'        	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2969  02BC' C055' F027'        	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2970  02C0' C056' F028'        	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2971  02C4' EC00' F000'        	call	_dtoa	;wreg free
  2972  02C8' EF00' F000'        	goto	l1193
  2973  02CC'                    l3603:
  2974  02CC' C057' FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2975  02D0' C058' FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2976  02D4'                    	if	0	;tblptru may be non-zero
  2977  02D4'                    	endif
  2978  02D4'                    	if	0	;tblptru may be non-zero
  2979  02D4'                    	endif
  2980  02D4' 0008               	tblrd		*
  2981  02D6' 50F5               	movf	tablat,w,c
  2982  02D8' 0A78               	xorlw	120
  2983  02DA' B4D8               	btfsc	status,2,c
  2984  02DC' EF00' F000'        	goto	u3181
  2985  02E0' EF00' F000'        	goto	u3180
  2986  02E4'                    u3181:
  2987  02E4' EF00' F000'        	goto	l3607
  2988  02E8'                    u3180:
  2989  02E8' C057' FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2990  02EC' C058' FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2991  02F0'                    	if	0	;tblptru may be non-zero
  2992  02F0'                    	endif
  2993  02F0'                    	if	0	;tblptru may be non-zero
  2994  02F0'                    	endif
  2995  02F0' 0008               	tblrd		*
  2996  02F2' 50F5               	movf	tablat,w,c
  2997  02F4' 0A75               	xorlw	117
  2998  02F6' A4D8               	btfss	status,2,c
  2999  02F8' EF00' F000'        	goto	u3191
  3000  02FC' EF00' F000'        	goto	u3190
  3001  0300'                    u3191:
  3002  0300' EF00' F000'        	goto	l3621
  3003  0304'                    u3190:
  3004  0304'                    l3607:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  3007  0304' C046' FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3008  0308' C047' FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3009  030C' CFDF F048'         	movff	indf2,??_vfpfcnvrt
  3010  0310' 0E02               	movlw	2
  3011  0312' 26DE               	addwf	postinc2,f,c
  3012  0314' CFDF F049'         	movff	indf2,??_vfpfcnvrt+1
  3013  0318' 0E00               	movlw	0
  3014  031A' 22DD               	addwfc	postdec2,f,c
  3015  031C' C048' FFD9         	movff	??_vfpfcnvrt,fsr2l
  3016  0320' C049' FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3017  0324' CFDE F04A'         	movff	postinc2,??_vfpfcnvrt+2
  3018  0328' CFDD F04B'         	movff	postdec2,??_vfpfcnvrt+3
  3019  032C' C04A' F04F'        	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  3020  0330' C04B' F050'        	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  3021  0334' 6A00'              	clrf	(vfpfcnvrt@convarg+2)^0,c
  3022  0336' 6A00'              	clrf	(vfpfcnvrt@convarg+3)^0,c
  3023  0338' 6A00'              	clrf	(vfpfcnvrt@convarg+4)^0,c
  3024  033A' 6A00'              	clrf	(vfpfcnvrt@convarg+5)^0,c
  3025  033C' 6A00'              	clrf	(vfpfcnvrt@convarg+6)^0,c
  3026  033E' 6A00'              	clrf	(vfpfcnvrt@convarg+7)^0,c
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  3029  0340' 0E01               	movlw	1
  3030  0342' 2400'              	addwf	vfpfcnvrt@cp^0,w,c
  3031  0344' 6E00'              	movwf	??_vfpfcnvrt^0,c
  3032  0346' 0E00               	movlw	0
  3033  0348' 2000'              	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3034  034A' 6E00'              	movwf	(??_vfpfcnvrt+1)^0,c
  3035  034C' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3036  0350' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3037  0354' C048' FFDE         	movff	??_vfpfcnvrt,postinc2
  3038  0358' C049' FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  3041  035C' EF00' F000'        	goto	l3619
  3042  0360'                    l3609:
  3043                           
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  3045  0360' C042' F01F'        	movff	vfpfcnvrt@fp,utoa@fp
  3046  0364' C043' F020'        	movff	vfpfcnvrt@fp+1,utoa@fp+1
  3047  0368' C04F' F021'        	movff	vfpfcnvrt@convarg,utoa@d
  3048  036C' C050' F022'        	movff	vfpfcnvrt@convarg+1,utoa@d+1
  3049  0370' C051' F023'        	movff	vfpfcnvrt@convarg+2,utoa@d+2
  3050  0374' C052' F024'        	movff	vfpfcnvrt@convarg+3,utoa@d+3
  3051  0378' C053' F025'        	movff	vfpfcnvrt@convarg+4,utoa@d+4
  3052  037C' C054' F026'        	movff	vfpfcnvrt@convarg+5,utoa@d+5
  3053  0380' C055' F027'        	movff	vfpfcnvrt@convarg+6,utoa@d+6
  3054  0384' C056' F028'        	movff	vfpfcnvrt@convarg+7,utoa@d+7
  3055  0388' EC00' F000'        	call	_utoa	;wreg free
  3056  038C' EF00' F000'        	goto	l1193
  3057  0390'                    l3613:
  3058                           
  3059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1314:      return
      +                           (void) xtoa(fp,convarg.llu);;	Return value of _vfpfcnvrt is never used
  3060  0390' C042' F01F'        	movff	vfpfcnvrt@fp,xtoa@fp
  3061  0394' C043' F020'        	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  3062  0398' C04F' F021'        	movff	vfpfcnvrt@convarg,xtoa@d
  3063  039C' C050' F022'        	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  3064  03A0' C051' F023'        	movff	vfpfcnvrt@convarg+2,xtoa@d+2
  3065  03A4' C052' F024'        	movff	vfpfcnvrt@convarg+3,xtoa@d+3
  3066  03A8' C053' F025'        	movff	vfpfcnvrt@convarg+4,xtoa@d+4
  3067  03AC' C054' F026'        	movff	vfpfcnvrt@convarg+5,xtoa@d+5
  3068  03B0' C055' F027'        	movff	vfpfcnvrt@convarg+6,xtoa@d+6
  3069  03B4' C056' F028'        	movff	vfpfcnvrt@convarg+7,xtoa@d+7
  3070  03B8' EC00' F000'        	call	_xtoa	;wreg free
  3071  03BC' EF00' F000'        	goto	l1193
  3072  03C0'                    l3619:
  3073  03C0' C057' FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3074  03C4' C058' FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3075  03C8'                    	if	0	;tblptru may be non-zero
  3076  03C8'                    	endif
  3077  03C8'                    	if	0	;tblptru may be non-zero
  3078  03C8'                    	endif
  3079  03C8' 0008               	tblrd		*
  3080  03CA' 50F5               	movf	tablat,w,c
  3081  03CC' 6E00'              	movwf	??_vfpfcnvrt^0,c
  3082  03CE' 6A00'              	clrf	(??_vfpfcnvrt+1)^0,c
  3083                           
  3084                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3085                           ; Switch size 1, requested type "simple"
  3086                           ; Number of cases is 1, Range of values is 0 to 0
  3087                           ; switch strategies available:
  3088                           ; Name         Instructions Cycles
  3089                           ; simple_byte            4     3 (average)
  3090                           ;	Chosen strategy is simple_byte
  3091  03D0' 5000'              	movf	(??_vfpfcnvrt+1)^0,w,c
  3092  03D2' 0A00               	xorlw	0	; case 0
  3093  03D4' B4D8               	btfsc	status,2,c
  3094  03D6' EF00' F000'        	goto	l3881
  3095  03DA' EF00' F000'        	goto	l3621
  3096  03DE'                    l3881:
  3097                           
  3098                           ; Switch size 1, requested type "simple"
  3099                           ; Number of cases is 2, Range of values is 117 to 120
  3100                           ; switch strategies available:
  3101                           ; Name         Instructions Cycles
  3102                           ; simple_byte            7     4 (average)
  3103                           ;	Chosen strategy is simple_byte
  3104  03DE' 5000'              	movf	??_vfpfcnvrt^0,w,c
  3105  03E0' 0A75               	xorlw	117	; case 117
  3106  03E2' B4D8               	btfsc	status,2,c
  3107  03E4' EF00' F000'        	goto	l3609
  3108  03E8' 0A0D               	xorlw	13	; case 120
  3109  03EA' B4D8               	btfsc	status,2,c
  3110  03EC' EF00' F000'        	goto	l3613
  3111  03F0' EF00' F000'        	goto	l3621
  3112  03F4'                    l3621:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3115  03F4' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3116  03F8' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3117  03FC' 2ADE               	incf	postinc2,f,c
  3118  03FE' 0E00               	movlw	0
  3119  0400' 22DD               	addwfc	postdec2,f,c
  3120  0402' EF00' F000'        	goto	l1193
  3121  0406'                    l3625:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3124  0406' C044' FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3125  040A' C045' FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3126  040E' CFDE FFF6          	movff	postinc2,tblptrl
  3127  0412' CFDD FFF7          	movff	postdec2,tblptrh
  3128  0416'                    	if	0	;tblptru may be non-zero
  3129  0416'                    	endif
  3130  0416'                    	if	0	;tblptru may be non-zero
  3131  0416'                    	endif
  3132  0416' 0008               	tblrd		*
  3133  0418' 50F5               	movf	tablat,w,c
  3134  041A' 6E00'              	movwf	fputc@c^0,c
  3135  041C' 6A00'              	clrf	(fputc@c+1)^0,c
  3136  041E' C042' F006'        	movff	vfpfcnvrt@fp,fputc@fp
  3137  0422' C043' F007'        	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3138  0426' EC00' F000'        	call	_fputc	;wreg free
  3139  042A' EF00' F000'        	goto	l3621
  3140  042E'                    l1193:
  3141  042E' 0012               	return		;funcret
  3142  0430'                    __end_of_vfpfcnvrt:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function _xtoa *****************
  3146 ;; Defined at:
  3147 ;;		line 934 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3150 ;;		 -> NULL(0), 
  3151 ;;  d               8   33[COMRAM] unsigned long long 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;  n               8   55[COMRAM] unsigned long long 
  3154 ;;  i               2   63[COMRAM] int 
  3155 ;;  w               2   53[COMRAM] int 
  3156 ;;  p               2   51[COMRAM] int 
  3157 ;;  c               1   65[COMRAM] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      void 
  3160 ;; Registers used:
  3161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3167 ;;      Params:        10       0       0       0       0       0       0
  3168 ;;      Locals:        17       0       0       0       0       0       0
  3169 ;;      Temps:          8       0       0       0       0       0       0
  3170 ;;      Totals:        35       0       0       0       0       0       0
  3171 ;;Total ram usage:       35 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 8
  3174 ;; This function calls:
  3175 ;;		_pad
  3176 ;; This function is called by:
  3177 ;;		_vfpfcnvrt
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text4
  3182  0000'                    __ptext4:
  3183                           	callstack 0
  3184  0000'                    _xtoa:
  3185                           	callstack 19
  3186  0000'                    
  3187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 934: static void 
      +                          xtoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 937: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 938:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 939:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 940:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\
      +                          c99\common\doprnt.c: 944:     if (!(prec < 0)) {
  3188  0000' BE00'              	btfsc	(_prec+1)^0,7,c
  3189  0002' EF00' F000'        	goto	u2971
  3190  0006' EF00' F000'        	goto	u2970
  3191  000A'                    u2971:
  3192  000A' EF00' F000'        	goto	l3471
  3193  000E'                    u2970:
  3194  000E'                    
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 945:         flag
      +                          s &= ~(1 << 1);
  3196  000E' 9200'              	bcf	_flags^0,1,c
  3197  0010'                    l3471:
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 948:     p = (0 <
      +                           prec) ? prec : 1;
  3200  0010' BE00'              	btfsc	(_prec+1)^0,7,c
  3201  0012' EF00' F000'        	goto	u2980
  3202  0016' 5000'              	movf	(_prec+1)^0,w,c
  3203  0018' E106               	bnz	u2981
  3204  001A' 0400'              	decf	_prec^0,w,c
  3205  001C' B0D8               	btfsc	status,0,c
  3206  001E' EF00' F000'        	goto	u2981
  3207  0022' EF00' F000'        	goto	u2980
  3208  0026'                    u2981:
  3209  0026' EF00' F000'        	goto	l1159
  3210  002A'                    u2980:
  3211  002A' 0E00               	movlw	0
  3212  002C' 6E00'              	movwf	(xtoa@p+1)^0,c
  3213  002E' 0E01               	movlw	1
  3214  0030' 6E00'              	movwf	xtoa@p^0,c
  3215  0032' EF00' F000'        	goto	l1161
  3216  0036'                    l1159:
  3217  0036' C000' F033'        	movff	_prec,xtoa@p
  3218  003A' C001' F034'        	movff	_prec+1,xtoa@p+1
  3219  003E'                    l1161:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 949:     w = widt
      +                          h;
  3222  003E' C000' F035'        	movff	_width,xtoa@w
  3223  0042' C001' F036'        	movff	_width+1,xtoa@w+1
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 957:     n = d;
  3226  0046' C021' F037'        	movff	xtoa@d,xtoa@n
  3227  004A' C022' F038'        	movff	xtoa@d+1,xtoa@n+1
  3228  004E' C023' F039'        	movff	xtoa@d+2,xtoa@n+2
  3229  0052' C024' F03A'        	movff	xtoa@d+3,xtoa@n+3
  3230  0056' C025' F03B'        	movff	xtoa@d+4,xtoa@n+4
  3231  005A' C026' F03C'        	movff	xtoa@d+5,xtoa@n+5
  3232  005E' C027' F03D'        	movff	xtoa@d+6,xtoa@n+6
  3233  0062' C028' F03E'        	movff	xtoa@d+7,xtoa@n+7
  3234  0066'                    
  3235                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 958:     i = size
      +                          of(dbuf) - 1;
  3236  0066' 0E00               	movlw	0
  3237  0068' 6E00'              	movwf	(xtoa@i+1)^0,c
  3238  006A' 0E1F               	movlw	31
  3239  006C' 6E00'              	movwf	xtoa@i^0,c
  3240  006E'                    
  3241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 959:     dbuf[i] 
      +                          = '\0';
  3242  006E' 0E00               	movlw	0
  3243  0070' 0100               	movlb	0	; () banked
  3244  0072' 6F00'              	movwf	(_dbuf+31)& (0+255),b
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  3247  0074' EF00' F000'        	goto	l3499
  3248  0078'                    l3479:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 964:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 965:         --i;
  3251  0078' 0600'              	decf	xtoa@i^0,f,c
  3252  007A' A0D8               	btfss	status,0,c
  3253  007C' 0600'              	decf	(xtoa@i+1)^0,f,c
  3254  007E'                    
  3255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 966:         c = 
      +                          n & 0x0f;
  3256  007E' 5000'              	movf	xtoa@n^0,w,c
  3257  0080' 0B0F               	andlw	15
  3258  0082' 6E00'              	movwf	xtoa@c^0,c
  3259  0084'                    
  3260                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 968:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  3261  0084' 0E09               	movlw	9
  3262  0086' 6400'              	cpfsgt	xtoa@c^0,c
  3263  0088' EF00' F000'        	goto	u2991
  3264  008C' EF00' F000'        	goto	u2990
  3265  0090'                    u2991:
  3266  0090' EF00' F000'        	goto	l3487
  3267  0094'                    u2990:
  3268  0094' 0E57               	movlw	87
  3269  0096' 2400'              	addwf	xtoa@c^0,w,c
  3270  0098' 6E00'              	movwf	_xtoa$1551^0,c
  3271  009A' 6A00'              	clrf	(_xtoa$1551+1)^0,c
  3272  009C' 0E00               	movlw	0
  3273  009E' 2200'              	addwfc	(_xtoa$1551+1)^0,f,c
  3274  00A0' EF00' F000'        	goto	l3489
  3275  00A4'                    l3487:
  3276  00A4' 0E30               	movlw	48
  3277  00A6' 2400'              	addwf	xtoa@c^0,w,c
  3278  00A8' 6E00'              	movwf	_xtoa$1551^0,c
  3279  00AA' 6A00'              	clrf	(_xtoa$1551+1)^0,c
  3280  00AC' 0E00               	movlw	0
  3281  00AE' 2200'              	addwfc	(_xtoa$1551+1)^0,f,c
  3282  00B0'                    l3489:
  3283  00B0' C031' F041'        	movff	_xtoa$1551,xtoa@c
  3284  00B4'                    
  3285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 977:         dbuf
      +                          [i] = (char)c;
  3286  00B4' 0E00'              	movlw	low _dbuf
  3287  00B6' 2400'              	addwf	xtoa@i^0,w,c
  3288  00B8' 6ED9               	movwf	fsr2l,c
  3289  00BA' 0E00'              	movlw	high _dbuf
  3290  00BC' 2000'              	addwfc	(xtoa@i+1)^0,w,c
  3291  00BE' 6EDA               	movwf	fsr2h,c
  3292  00C0' C041' FFDF         	movff	xtoa@c,indf2
  3293  00C4'                    
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 978:         --p;
  3295  00C4' 0600'              	decf	xtoa@p^0,f,c
  3296  00C6' A0D8               	btfss	status,0,c
  3297  00C8' 0600'              	decf	(xtoa@p+1)^0,f,c
  3298  00CA'                    
  3299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 979:         --w;
  3300  00CA' 0600'              	decf	xtoa@w^0,f,c
  3301  00CC' A0D8               	btfss	status,0,c
  3302  00CE' 0600'              	decf	(xtoa@w+1)^0,f,c
  3303  00D0'                    
  3304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 980:         n = 
      +                          n >> 4;
  3305  00D0' C037' F029'        	movff	xtoa@n,??_xtoa
  3306  00D4' C038' F02A'        	movff	xtoa@n+1,??_xtoa+1
  3307  00D8' C039' F02B'        	movff	xtoa@n+2,??_xtoa+2
  3308  00DC' C03A' F02C'        	movff	xtoa@n+3,??_xtoa+3
  3309  00E0' C03B' F02D'        	movff	xtoa@n+4,??_xtoa+4
  3310  00E4' C03C' F02E'        	movff	xtoa@n+5,??_xtoa+5
  3311  00E8' C03D' F02F'        	movff	xtoa@n+6,??_xtoa+6
  3312  00EC' C03E' F030'        	movff	xtoa@n+7,??_xtoa+7
  3313  00F0' 0E05               	movlw	5
  3314  00F2' EF00' F000'        	goto	u3000
  3315  00F6'                    u3005:
  3316  00F6' 90D8               	bcf	status,0,c
  3317  00F8' 3200'              	rrcf	(??_xtoa+7)^0,f,c
  3318  00FA' 3200'              	rrcf	(??_xtoa+6)^0,f,c
  3319  00FC' 3200'              	rrcf	(??_xtoa+5)^0,f,c
  3320  00FE' 3200'              	rrcf	(??_xtoa+4)^0,f,c
  3321  0100' 3200'              	rrcf	(??_xtoa+3)^0,f,c
  3322  0102' 3200'              	rrcf	(??_xtoa+2)^0,f,c
  3323  0104' 3200'              	rrcf	(??_xtoa+1)^0,f,c
  3324  0106' 3200'              	rrcf	??_xtoa^0,f,c
  3325  0108'                    u3000:
  3326  0108' 2EE8               	decfsz	wreg,f,c
  3327  010A' EF00' F000'        	goto	u3005
  3328  010E' C029' F037'        	movff	??_xtoa,xtoa@n
  3329  0112' C02A' F038'        	movff	??_xtoa+1,xtoa@n+1
  3330  0116' C02B' F039'        	movff	??_xtoa+2,xtoa@n+2
  3331  011A' C02C' F03A'        	movff	??_xtoa+3,xtoa@n+3
  3332  011E' C02D' F03B'        	movff	??_xtoa+4,xtoa@n+4
  3333  0122' C02E' F03C'        	movff	??_xtoa+5,xtoa@n+5
  3334  0126' C02F' F03D'        	movff	??_xtoa+6,xtoa@n+6
  3335  012A' C030' F03E'        	movff	??_xtoa+7,xtoa@n+7
  3336  012E'                    l3499:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 960:     while (!
      +                          (i < 2) && (n || (0 < p)
  3339  012E' BE00'              	btfsc	(xtoa@i+1)^0,7,c
  3340  0130' EF00' F000'        	goto	u3011
  3341  0134' 5000'              	movf	(xtoa@i+1)^0,w,c
  3342  0136' E109               	bnz	u3010
  3343  0138' 0E02               	movlw	2
  3344  013A' 5C00'              	subwf	xtoa@i^0,w,c
  3345  013C' A0D8               	btfss	status,0,c
  3346  013E' EF00' F000'        	goto	u3011
  3347  0142' EF00' F000'        	goto	u3010
  3348  0146'                    u3011:
  3349  0146' EF00' F000'        	goto	l3509
  3350  014A'                    u3010:
  3351  014A' 5000'              	movf	xtoa@n^0,w,c
  3352  014C' 1000'              	iorwf	(xtoa@n+1)^0,w,c
  3353  014E' 1000'              	iorwf	(xtoa@n+2)^0,w,c
  3354  0150' 1000'              	iorwf	(xtoa@n+3)^0,w,c
  3355  0152' 1000'              	iorwf	(xtoa@n+4)^0,w,c
  3356  0154' 1000'              	iorwf	(xtoa@n+5)^0,w,c
  3357  0156' 1000'              	iorwf	(xtoa@n+6)^0,w,c
  3358  0158' 1000'              	iorwf	(xtoa@n+7)^0,w,c
  3359  015A' A4D8               	btfss	status,2,c
  3360  015C' EF00' F000'        	goto	u3021
  3361  0160' EF00' F000'        	goto	u3020
  3362  0164'                    u3021:
  3363  0164' EF00' F000'        	goto	l3479
  3364  0168'                    u3020:
  3365  0168' BE00'              	btfsc	(xtoa@p+1)^0,7,c
  3366  016A' EF00' F000'        	goto	u3030
  3367  016E' 5000'              	movf	(xtoa@p+1)^0,w,c
  3368  0170' E106               	bnz	u3031
  3369  0172' 0400'              	decf	xtoa@p^0,w,c
  3370  0174' B0D8               	btfsc	status,0,c
  3371  0176' EF00' F000'        	goto	u3031
  3372  017A' EF00' F000'        	goto	u3030
  3373  017E'                    u3031:
  3374  017E' EF00' F000'        	goto	l3479
  3375  0182'                    u3030:
  3376  0182' BE00'              	btfsc	(xtoa@w+1)^0,7,c
  3377  0184' EF00' F000'        	goto	u3041
  3378  0188' 5000'              	movf	(xtoa@w+1)^0,w,c
  3379  018A' E108               	bnz	u3040
  3380  018C' 0400'              	decf	xtoa@w^0,w,c
  3381  018E' A0D8               	btfss	status,0,c
  3382  0190' EF00' F000'        	goto	u3041
  3383  0194' EF00' F000'        	goto	u3040
  3384  0198'                    u3041:
  3385  0198' EF00' F000'        	goto	l3509
  3386  019C'                    u3040:
  3387  019C' B200'              	btfsc	_flags^0,1,c
  3388  019E' EF00' F000'        	goto	u3051
  3389  01A2' EF00' F000'        	goto	u3050
  3390  01A6'                    u3051:
  3391  01A6' EF00' F000'        	goto	l3479
  3392  01AA'                    u3050:
  3393  01AA'                    l3509:
  3394                           
  3395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1000:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3396  01AA' C01F' F014'        	movff	xtoa@fp,pad@fp
  3397  01AE' C020' F015'        	movff	xtoa@fp+1,pad@fp+1
  3398  01B2' 0E00'              	movlw	low _dbuf
  3399  01B4' 2400'              	addwf	xtoa@i^0,w,c
  3400  01B6' 6E00'              	movwf	pad@buf^0,c
  3401  01B8' 0E00'              	movlw	high _dbuf
  3402  01BA' 2000'              	addwfc	(xtoa@i+1)^0,w,c
  3403  01BC' 6E00'              	movwf	(pad@buf+1)^0,c
  3404  01BE' C035' F018'        	movff	xtoa@w,pad@p
  3405  01C2' C036' F019'        	movff	xtoa@w+1,pad@p+1
  3406  01C6' EC00' F000'        	call	_pad	;wreg free
  3407  01CA' 0012               	return		;funcret
  3408  01CC'                    __end_of_xtoa:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _utoa *****************
  3412 ;; Defined at:
  3413 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3416 ;;		 -> NULL(0), 
  3417 ;;  d               8   33[COMRAM] unsigned long long 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  n               8   53[COMRAM] unsigned long long 
  3420 ;;  i               2   61[COMRAM] int 
  3421 ;;  w               2   51[COMRAM] int 
  3422 ;;  p               2   49[COMRAM] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3432 ;;      Params:        10       0       0       0       0       0       0
  3433 ;;      Locals:        14       0       0       0       0       0       0
  3434 ;;      Temps:          8       0       0       0       0       0       0
  3435 ;;      Totals:        32       0       0       0       0       0       0
  3436 ;;Total ram usage:       32 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 8
  3439 ;; This function calls:
  3440 ;;		___lodiv
  3441 ;;		___lomod
  3442 ;;		_pad
  3443 ;; This function is called by:
  3444 ;;		_vfpfcnvrt
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text5
  3449  0000'                    __ptext5:
  3450                           	callstack 0
  3451  0000'                    _utoa:
  3452                           	callstack 19
  3453  0000'                    
  3454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 901:     if (!(prec < 0)) {
  3455  0000' BE00'              	btfsc	(_prec+1)^0,7,c
  3456  0002' EF00' F000'        	goto	u2901
  3457  0006' EF00' F000'        	goto	u2900
  3458  000A'                    u2901:
  3459  000A' EF00' F000'        	goto	l3435
  3460  000E'                    u2900:
  3461  000E'                    
  3462                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 902:         flag
      +                          s &= ~(1 << 1);
  3463  000E' 9200'              	bcf	_flags^0,1,c
  3464  0010'                    l3435:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 905:     p = (0 <
      +                           prec) ? prec : 1;
  3467  0010' BE00'              	btfsc	(_prec+1)^0,7,c
  3468  0012' EF00' F000'        	goto	u2910
  3469  0016' 5000'              	movf	(_prec+1)^0,w,c
  3470  0018' E106               	bnz	u2911
  3471  001A' 0400'              	decf	_prec^0,w,c
  3472  001C' B0D8               	btfsc	status,0,c
  3473  001E' EF00' F000'        	goto	u2911
  3474  0022' EF00' F000'        	goto	u2910
  3475  0026'                    u2911:
  3476  0026' EF00' F000'        	goto	l1144
  3477  002A'                    u2910:
  3478  002A' 0E00               	movlw	0
  3479  002C' 6E00'              	movwf	(utoa@p+1)^0,c
  3480  002E' 0E01               	movlw	1
  3481  0030' 6E00'              	movwf	utoa@p^0,c
  3482  0032' EF00' F000'        	goto	l1146
  3483  0036'                    l1144:
  3484  0036' C000' F031'        	movff	_prec,utoa@p
  3485  003A' C001' F032'        	movff	_prec+1,utoa@p+1
  3486  003E'                    l1146:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  3489  003E' C000' F033'        	movff	_width,utoa@w
  3490  0042' C001' F034'        	movff	_width+1,utoa@w+1
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  3493  0046' C021' F035'        	movff	utoa@d,utoa@n
  3494  004A' C022' F036'        	movff	utoa@d+1,utoa@n+1
  3495  004E' C023' F037'        	movff	utoa@d+2,utoa@n+2
  3496  0052' C024' F038'        	movff	utoa@d+3,utoa@n+3
  3497  0056' C025' F039'        	movff	utoa@d+4,utoa@n+4
  3498  005A' C026' F03A'        	movff	utoa@d+5,utoa@n+5
  3499  005E' C027' F03B'        	movff	utoa@d+6,utoa@n+6
  3500  0062' C028' F03C'        	movff	utoa@d+7,utoa@n+7
  3501  0066'                    
  3502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  3503  0066' 0E00               	movlw	0
  3504  0068' 6E00'              	movwf	(utoa@i+1)^0,c
  3505  006A' 0E1F               	movlw	31
  3506  006C' 6E00'              	movwf	utoa@i^0,c
  3507  006E'                    
  3508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  3509  006E' 0E00               	movlw	0
  3510  0070' 0100               	movlb	0	; () banked
  3511  0072' 6F00'              	movwf	(_dbuf+31)& (0+255),b
  3512                           
  3513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3514  0074' EF00' F000'        	goto	l3453
  3515  0078'                    l3443:
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  3518  0078' 0600'              	decf	utoa@i^0,f,c
  3519  007A' A0D8               	btfss	status,0,c
  3520  007C' 0600'              	decf	(utoa@i+1)^0,f,c
  3521  007E'                    
  3522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  3523  007E' 0E00'              	movlw	low _dbuf
  3524  0080' 2400'              	addwf	utoa@i^0,w,c
  3525  0082' 6ED9               	movwf	fsr2l,c
  3526  0084' 0E00'              	movlw	high _dbuf
  3527  0086' 2000'              	addwfc	(utoa@i+1)^0,w,c
  3528  0088' 6EDA               	movwf	fsr2h,c
  3529  008A' C035' F002'        	movff	utoa@n,___lomod@dividend
  3530  008E' C036' F003'        	movff	utoa@n+1,___lomod@dividend+1
  3531  0092' C037' F004'        	movff	utoa@n+2,___lomod@dividend+2
  3532  0096' C038' F005'        	movff	utoa@n+3,___lomod@dividend+3
  3533  009A' C039' F006'        	movff	utoa@n+4,___lomod@dividend+4
  3534  009E' C03A' F007'        	movff	utoa@n+5,___lomod@dividend+5
  3535  00A2' C03B' F008'        	movff	utoa@n+6,___lomod@dividend+6
  3536  00A6' C03C' F009'        	movff	utoa@n+7,___lomod@dividend+7
  3537  00AA' 0E0A               	movlw	10
  3538  00AC' 6E00'              	movwf	___lomod@divisor^0,c
  3539  00AE' 0E00               	movlw	0
  3540  00B0' 6E00'              	movwf	(___lomod@divisor+1)^0,c
  3541  00B2' 0E00               	movlw	0
  3542  00B4' 6E00'              	movwf	(___lomod@divisor+2)^0,c
  3543  00B6' 0E00               	movlw	0
  3544  00B8' 6E00'              	movwf	(___lomod@divisor+3)^0,c
  3545  00BA' 0E00               	movlw	0
  3546  00BC' 6E00'              	movwf	(___lomod@divisor+4)^0,c
  3547  00BE' 0E00               	movlw	0
  3548  00C0' 6E00'              	movwf	(___lomod@divisor+5)^0,c
  3549  00C2' 0E00               	movlw	0
  3550  00C4' 6E00'              	movwf	(___lomod@divisor+6)^0,c
  3551  00C6' 0E00               	movlw	0
  3552  00C8' 6E00'              	movwf	(___lomod@divisor+7)^0,c
  3553  00CA' EC00' F000'        	call	___lomod	;wreg free
  3554  00CE' C002' F029'        	movff	?___lomod,??_utoa
  3555  00D2' C003' F02A'        	movff	?___lomod+1,??_utoa+1
  3556  00D6' C004' F02B'        	movff	?___lomod+2,??_utoa+2
  3557  00DA' C005' F02C'        	movff	?___lomod+3,??_utoa+3
  3558  00DE' C006' F02D'        	movff	?___lomod+4,??_utoa+4
  3559  00E2' C007' F02E'        	movff	?___lomod+5,??_utoa+5
  3560  00E6' C008' F02F'        	movff	?___lomod+6,??_utoa+6
  3561  00EA' C009' F030'        	movff	?___lomod+7,??_utoa+7
  3562  00EE' 5000'              	movf	??_utoa^0,w,c
  3563  00F0' 0F30               	addlw	48
  3564  00F2' 6EDF               	movwf	indf2,c
  3565  00F4'                    
  3566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  3567  00F4' 0600'              	decf	utoa@p^0,f,c
  3568  00F6' A0D8               	btfss	status,0,c
  3569  00F8' 0600'              	decf	(utoa@p+1)^0,f,c
  3570  00FA'                    
  3571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  3572  00FA' 0600'              	decf	utoa@w^0,f,c
  3573  00FC' A0D8               	btfss	status,0,c
  3574  00FE' 0600'              	decf	(utoa@w+1)^0,f,c
  3575  0100'                    
  3576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  3577  0100' C035' F002'        	movff	utoa@n,___lodiv@dividend
  3578  0104' C036' F003'        	movff	utoa@n+1,___lodiv@dividend+1
  3579  0108' C037' F004'        	movff	utoa@n+2,___lodiv@dividend+2
  3580  010C' C038' F005'        	movff	utoa@n+3,___lodiv@dividend+3
  3581  0110' C039' F006'        	movff	utoa@n+4,___lodiv@dividend+4
  3582  0114' C03A' F007'        	movff	utoa@n+5,___lodiv@dividend+5
  3583  0118' C03B' F008'        	movff	utoa@n+6,___lodiv@dividend+6
  3584  011C' C03C' F009'        	movff	utoa@n+7,___lodiv@dividend+7
  3585  0120' 0E0A               	movlw	10
  3586  0122' 6E00'              	movwf	___lodiv@divisor^0,c
  3587  0124' 0E00               	movlw	0
  3588  0126' 6E00'              	movwf	(___lodiv@divisor+1)^0,c
  3589  0128' 0E00               	movlw	0
  3590  012A' 6E00'              	movwf	(___lodiv@divisor+2)^0,c
  3591  012C' 0E00               	movlw	0
  3592  012E' 6E00'              	movwf	(___lodiv@divisor+3)^0,c
  3593  0130' 0E00               	movlw	0
  3594  0132' 6E00'              	movwf	(___lodiv@divisor+4)^0,c
  3595  0134' 0E00               	movlw	0
  3596  0136' 6E00'              	movwf	(___lodiv@divisor+5)^0,c
  3597  0138' 0E00               	movlw	0
  3598  013A' 6E00'              	movwf	(___lodiv@divisor+6)^0,c
  3599  013C' 0E00               	movlw	0
  3600  013E' 6E00'              	movwf	(___lodiv@divisor+7)^0,c
  3601  0140' EC00' F000'        	call	___lodiv	;wreg free
  3602  0144' C002' F035'        	movff	?___lodiv,utoa@n
  3603  0148' C003' F036'        	movff	?___lodiv+1,utoa@n+1
  3604  014C' C004' F037'        	movff	?___lodiv+2,utoa@n+2
  3605  0150' C005' F038'        	movff	?___lodiv+3,utoa@n+3
  3606  0154' C006' F039'        	movff	?___lodiv+4,utoa@n+4
  3607  0158' C007' F03A'        	movff	?___lodiv+5,utoa@n+5
  3608  015C' C008' F03B'        	movff	?___lodiv+6,utoa@n+6
  3609  0160' C009' F03C'        	movff	?___lodiv+7,utoa@n+7
  3610  0164'                    l3453:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  3613  0164' 5000'              	movf	utoa@i^0,w,c
  3614  0166' 1000'              	iorwf	(utoa@i+1)^0,w,c
  3615  0168' B4D8               	btfsc	status,2,c
  3616  016A' EF00' F000'        	goto	u2921
  3617  016E' EF00' F000'        	goto	u2920
  3618  0172'                    u2921:
  3619  0172' EF00' F000'        	goto	l3463
  3620  0176'                    u2920:
  3621  0176' 5000'              	movf	utoa@n^0,w,c
  3622  0178' 1000'              	iorwf	(utoa@n+1)^0,w,c
  3623  017A' 1000'              	iorwf	(utoa@n+2)^0,w,c
  3624  017C' 1000'              	iorwf	(utoa@n+3)^0,w,c
  3625  017E' 1000'              	iorwf	(utoa@n+4)^0,w,c
  3626  0180' 1000'              	iorwf	(utoa@n+5)^0,w,c
  3627  0182' 1000'              	iorwf	(utoa@n+6)^0,w,c
  3628  0184' 1000'              	iorwf	(utoa@n+7)^0,w,c
  3629  0186' A4D8               	btfss	status,2,c
  3630  0188' EF00' F000'        	goto	u2931
  3631  018C' EF00' F000'        	goto	u2930
  3632  0190'                    u2931:
  3633  0190' EF00' F000'        	goto	l3443
  3634  0194'                    u2930:
  3635  0194' BE00'              	btfsc	(utoa@p+1)^0,7,c
  3636  0196' EF00' F000'        	goto	u2940
  3637  019A' 5000'              	movf	(utoa@p+1)^0,w,c
  3638  019C' E106               	bnz	u2941
  3639  019E' 0400'              	decf	utoa@p^0,w,c
  3640  01A0' B0D8               	btfsc	status,0,c
  3641  01A2' EF00' F000'        	goto	u2941
  3642  01A6' EF00' F000'        	goto	u2940
  3643  01AA'                    u2941:
  3644  01AA' EF00' F000'        	goto	l3443
  3645  01AE'                    u2940:
  3646  01AE' BE00'              	btfsc	(utoa@w+1)^0,7,c
  3647  01B0' EF00' F000'        	goto	u2951
  3648  01B4' 5000'              	movf	(utoa@w+1)^0,w,c
  3649  01B6' E108               	bnz	u2950
  3650  01B8' 0400'              	decf	utoa@w^0,w,c
  3651  01BA' A0D8               	btfss	status,0,c
  3652  01BC' EF00' F000'        	goto	u2951
  3653  01C0' EF00' F000'        	goto	u2950
  3654  01C4'                    u2951:
  3655  01C4' EF00' F000'        	goto	l3463
  3656  01C8'                    u2950:
  3657  01C8' B200'              	btfsc	_flags^0,1,c
  3658  01CA' EF00' F000'        	goto	u2961
  3659  01CE' EF00' F000'        	goto	u2960
  3660  01D2'                    u2961:
  3661  01D2' EF00' F000'        	goto	l3443
  3662  01D6'                    u2960:
  3663  01D6'                    l3463:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3666  01D6' C01F' F014'        	movff	utoa@fp,pad@fp
  3667  01DA' C020' F015'        	movff	utoa@fp+1,pad@fp+1
  3668  01DE' 0E00'              	movlw	low _dbuf
  3669  01E0' 2400'              	addwf	utoa@i^0,w,c
  3670  01E2' 6E00'              	movwf	pad@buf^0,c
  3671  01E4' 0E00'              	movlw	high _dbuf
  3672  01E6' 2000'              	addwfc	(utoa@i+1)^0,w,c
  3673  01E8' 6E00'              	movwf	(pad@buf+1)^0,c
  3674  01EA' C033' F018'        	movff	utoa@w,pad@p
  3675  01EE' C034' F019'        	movff	utoa@w+1,pad@p+1
  3676  01F2' EC00' F000'        	call	_pad	;wreg free
  3677  01F6' 0012               	return		;funcret
  3678  01F8'                    __end_of_utoa:
  3679                           	callstack 0
  3680                           
  3681 ;; *************** function ___lomod *****************
  3682 ;; Defined at:
  3683 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  dividend        8    2[COMRAM] unsigned long long 
  3686 ;;  divisor         8   10[COMRAM] unsigned long long 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  counter         1   18[COMRAM] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  8    2[COMRAM] unsigned long long 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3698 ;;      Params:        16       0       0       0       0       0       0
  3699 ;;      Locals:         1       0       0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0
  3701 ;;      Totals:        17       0       0       0       0       0       0
  3702 ;;Total ram usage:       17 bytes
  3703 ;; Hardware stack levels used: 1
  3704 ;; Hardware stack levels required when called: 3
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_utoa
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text6
  3713  0000'                    __ptext6:
  3714                           	callstack 0
  3715  0000'                    ___lomod:
  3716                           	callstack 23
  3717  0000' 5000'              	movf	___lomod@divisor^0,w,c
  3718  0002' 1000'              	iorwf	(___lomod@divisor+1)^0,w,c
  3719  0004' 1000'              	iorwf	(___lomod@divisor+2)^0,w,c
  3720  0006' 1000'              	iorwf	(___lomod@divisor+3)^0,w,c
  3721  0008' 1000'              	iorwf	(___lomod@divisor+4)^0,w,c
  3722  000A' 1000'              	iorwf	(___lomod@divisor+5)^0,w,c
  3723  000C' 1000'              	iorwf	(___lomod@divisor+6)^0,w,c
  3724  000E' 1000'              	iorwf	(___lomod@divisor+7)^0,w,c
  3725  0010' B4D8               	btfsc	status,2,c
  3726  0012' EF00' F000'        	goto	u2601
  3727  0016' EF00' F000'        	goto	u2600
  3728  001A'                    u2601:
  3729  001A' EF00' F000'        	goto	l839
  3730  001E'                    u2600:
  3731  001E' 0E01               	movlw	1
  3732  0020' 6E00'              	movwf	___lomod@counter^0,c
  3733  0022' EF00' F000'        	goto	l3299
  3734  0026'                    l3297:
  3735  0026' 90D8               	bcf	status,0,c
  3736  0028' 3600'              	rlcf	___lomod@divisor^0,f,c
  3737  002A' 3600'              	rlcf	(___lomod@divisor+1)^0,f,c
  3738  002C' 3600'              	rlcf	(___lomod@divisor+2)^0,f,c
  3739  002E' 3600'              	rlcf	(___lomod@divisor+3)^0,f,c
  3740  0030' 3600'              	rlcf	(___lomod@divisor+4)^0,f,c
  3741  0032' 3600'              	rlcf	(___lomod@divisor+5)^0,f,c
  3742  0034' 3600'              	rlcf	(___lomod@divisor+6)^0,f,c
  3743  0036' 3600'              	rlcf	(___lomod@divisor+7)^0,f,c
  3744  0038' 2A00'              	incf	___lomod@counter^0,f,c
  3745  003A'                    l3299:
  3746  003A' AE00'              	btfss	(___lomod@divisor+7)^0,7,c
  3747  003C' EF00' F000'        	goto	u2611
  3748  0040' EF00' F000'        	goto	u2610
  3749  0044'                    u2611:
  3750  0044' EF00' F000'        	goto	l3297
  3751  0048'                    u2610:
  3752  0048'                    l3301:
  3753  0048' 5000'              	movf	___lomod@divisor^0,w,c
  3754  004A' 5C00'              	subwf	___lomod@dividend^0,w,c
  3755  004C' 5000'              	movf	(___lomod@divisor+1)^0,w,c
  3756  004E' 5800'              	subwfb	(___lomod@dividend+1)^0,w,c
  3757  0050' 5000'              	movf	(___lomod@divisor+2)^0,w,c
  3758  0052' 5800'              	subwfb	(___lomod@dividend+2)^0,w,c
  3759  0054' 5000'              	movf	(___lomod@divisor+3)^0,w,c
  3760  0056' 5800'              	subwfb	(___lomod@dividend+3)^0,w,c
  3761  0058' 5000'              	movf	(___lomod@divisor+4)^0,w,c
  3762  005A' 5800'              	subwfb	(___lomod@dividend+4)^0,w,c
  3763  005C' 5000'              	movf	(___lomod@divisor+5)^0,w,c
  3764  005E' 5800'              	subwfb	(___lomod@dividend+5)^0,w,c
  3765  0060' 5000'              	movf	(___lomod@divisor+6)^0,w,c
  3766  0062' 5800'              	subwfb	(___lomod@dividend+6)^0,w,c
  3767  0064' 5000'              	movf	(___lomod@divisor+7)^0,w,c
  3768  0066' 5800'              	subwfb	(___lomod@dividend+7)^0,w,c
  3769  0068' A0D8               	btfss	status,0,c
  3770  006A' EF00' F000'        	goto	u2621
  3771  006E' EF00' F000'        	goto	u2620
  3772  0072'                    u2621:
  3773  0072' EF00' F000'        	goto	l3305
  3774  0076'                    u2620:
  3775  0076' 5000'              	movf	___lomod@divisor^0,w,c
  3776  0078' 5E00'              	subwf	___lomod@dividend^0,f,c
  3777  007A' 5000'              	movf	(___lomod@divisor+1)^0,w,c
  3778  007C' 5A00'              	subwfb	(___lomod@dividend+1)^0,f,c
  3779  007E' 5000'              	movf	(___lomod@divisor+2)^0,w,c
  3780  0080' 5A00'              	subwfb	(___lomod@dividend+2)^0,f,c
  3781  0082' 5000'              	movf	(___lomod@divisor+3)^0,w,c
  3782  0084' 5A00'              	subwfb	(___lomod@dividend+3)^0,f,c
  3783  0086' 5000'              	movf	(___lomod@divisor+4)^0,w,c
  3784  0088' 5A00'              	subwfb	(___lomod@dividend+4)^0,f,c
  3785  008A' 5000'              	movf	(___lomod@divisor+5)^0,w,c
  3786  008C' 5A00'              	subwfb	(___lomod@dividend+5)^0,f,c
  3787  008E' 5000'              	movf	(___lomod@divisor+6)^0,w,c
  3788  0090' 5A00'              	subwfb	(___lomod@dividend+6)^0,f,c
  3789  0092' 5000'              	movf	(___lomod@divisor+7)^0,w,c
  3790  0094' 5A00'              	subwfb	(___lomod@dividend+7)^0,f,c
  3791  0096'                    l3305:
  3792  0096' 90D8               	bcf	status,0,c
  3793  0098' 3200'              	rrcf	(___lomod@divisor+7)^0,f,c
  3794  009A' 3200'              	rrcf	(___lomod@divisor+6)^0,f,c
  3795  009C' 3200'              	rrcf	(___lomod@divisor+5)^0,f,c
  3796  009E' 3200'              	rrcf	(___lomod@divisor+4)^0,f,c
  3797  00A0' 3200'              	rrcf	(___lomod@divisor+3)^0,f,c
  3798  00A2' 3200'              	rrcf	(___lomod@divisor+2)^0,f,c
  3799  00A4' 3200'              	rrcf	(___lomod@divisor+1)^0,f,c
  3800  00A6' 3200'              	rrcf	___lomod@divisor^0,f,c
  3801  00A8' 2E00'              	decfsz	___lomod@counter^0,f,c
  3802  00AA' EF00' F000'        	goto	l3301
  3803  00AE'                    l839:
  3804  00AE' C002' F002'        	movff	___lomod@dividend,?___lomod
  3805  00B2' C003' F003'        	movff	___lomod@dividend+1,?___lomod+1
  3806  00B6' C004' F004'        	movff	___lomod@dividend+2,?___lomod+2
  3807  00BA' C005' F005'        	movff	___lomod@dividend+3,?___lomod+3
  3808  00BE' C006' F006'        	movff	___lomod@dividend+4,?___lomod+4
  3809  00C2' C007' F007'        	movff	___lomod@dividend+5,?___lomod+5
  3810  00C6' C008' F008'        	movff	___lomod@dividend+6,?___lomod+6
  3811  00CA' C009' F009'        	movff	___lomod@dividend+7,?___lomod+7
  3812  00CE' 0012               	return		;funcret
  3813  00D0'                    __end_of___lomod:
  3814                           	callstack 0
  3815                           
  3816 ;; *************** function ___lodiv *****************
  3817 ;; Defined at:
  3818 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  dividend        8    2[COMRAM] unsigned long long 
  3821 ;;  divisor         8   10[COMRAM] unsigned long long 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  quotient        8   18[COMRAM] unsigned long long 
  3824 ;;  counter         1   26[COMRAM] unsigned char 
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  8    2[COMRAM] unsigned long long 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3834 ;;      Params:        16       0       0       0       0       0       0
  3835 ;;      Locals:         9       0       0       0       0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0
  3837 ;;      Totals:        25       0       0       0       0       0       0
  3838 ;;Total ram usage:       25 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; Hardware stack levels required when called: 3
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_utoa
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text7
  3849  0000'                    __ptext7:
  3850                           	callstack 0
  3851  0000'                    ___lodiv:
  3852                           	callstack 23
  3853  0000' EE20' F000'        	lfsr	2,___lodiv@quotient
  3854  0004' 0E07               	movlw	7
  3855  0006'                    u2561:
  3856  0006' 6ADE               	clrf	postinc2,c
  3857  0008' 06E8               	decf	wreg,f,c
  3858  000A' E2FD               	bc	u2561
  3859  000C' 5000'              	movf	___lodiv@divisor^0,w,c
  3860  000E' 1000'              	iorwf	(___lodiv@divisor+1)^0,w,c
  3861  0010' 1000'              	iorwf	(___lodiv@divisor+2)^0,w,c
  3862  0012' 1000'              	iorwf	(___lodiv@divisor+3)^0,w,c
  3863  0014' 1000'              	iorwf	(___lodiv@divisor+4)^0,w,c
  3864  0016' 1000'              	iorwf	(___lodiv@divisor+5)^0,w,c
  3865  0018' 1000'              	iorwf	(___lodiv@divisor+6)^0,w,c
  3866  001A' 1000'              	iorwf	(___lodiv@divisor+7)^0,w,c
  3867  001C' B4D8               	btfsc	status,2,c
  3868  001E' EF00' F000'        	goto	u2571
  3869  0022' EF00' F000'        	goto	u2570
  3870  0026'                    u2571:
  3871  0026' EF00' F000'        	goto	l829
  3872  002A'                    u2570:
  3873  002A' 0E01               	movlw	1
  3874  002C' 6E00'              	movwf	___lodiv@counter^0,c
  3875  002E' EF00' F000'        	goto	l3279
  3876  0032'                    l3277:
  3877  0032' 90D8               	bcf	status,0,c
  3878  0034' 3600'              	rlcf	___lodiv@divisor^0,f,c
  3879  0036' 3600'              	rlcf	(___lodiv@divisor+1)^0,f,c
  3880  0038' 3600'              	rlcf	(___lodiv@divisor+2)^0,f,c
  3881  003A' 3600'              	rlcf	(___lodiv@divisor+3)^0,f,c
  3882  003C' 3600'              	rlcf	(___lodiv@divisor+4)^0,f,c
  3883  003E' 3600'              	rlcf	(___lodiv@divisor+5)^0,f,c
  3884  0040' 3600'              	rlcf	(___lodiv@divisor+6)^0,f,c
  3885  0042' 3600'              	rlcf	(___lodiv@divisor+7)^0,f,c
  3886  0044' 2A00'              	incf	___lodiv@counter^0,f,c
  3887  0046'                    l3279:
  3888  0046' AE00'              	btfss	(___lodiv@divisor+7)^0,7,c
  3889  0048' EF00' F000'        	goto	u2581
  3890  004C' EF00' F000'        	goto	u2580
  3891  0050'                    u2581:
  3892  0050' EF00' F000'        	goto	l3277
  3893  0054'                    u2580:
  3894  0054'                    l3281:
  3895  0054' 90D8               	bcf	status,0,c
  3896  0056' 3600'              	rlcf	___lodiv@quotient^0,f,c
  3897  0058' 3600'              	rlcf	(___lodiv@quotient+1)^0,f,c
  3898  005A' 3600'              	rlcf	(___lodiv@quotient+2)^0,f,c
  3899  005C' 3600'              	rlcf	(___lodiv@quotient+3)^0,f,c
  3900  005E' 3600'              	rlcf	(___lodiv@quotient+4)^0,f,c
  3901  0060' 3600'              	rlcf	(___lodiv@quotient+5)^0,f,c
  3902  0062' 3600'              	rlcf	(___lodiv@quotient+6)^0,f,c
  3903  0064' 3600'              	rlcf	(___lodiv@quotient+7)^0,f,c
  3904  0066' 5000'              	movf	___lodiv@divisor^0,w,c
  3905  0068' 5C00'              	subwf	___lodiv@dividend^0,w,c
  3906  006A' 5000'              	movf	(___lodiv@divisor+1)^0,w,c
  3907  006C' 5800'              	subwfb	(___lodiv@dividend+1)^0,w,c
  3908  006E' 5000'              	movf	(___lodiv@divisor+2)^0,w,c
  3909  0070' 5800'              	subwfb	(___lodiv@dividend+2)^0,w,c
  3910  0072' 5000'              	movf	(___lodiv@divisor+3)^0,w,c
  3911  0074' 5800'              	subwfb	(___lodiv@dividend+3)^0,w,c
  3912  0076' 5000'              	movf	(___lodiv@divisor+4)^0,w,c
  3913  0078' 5800'              	subwfb	(___lodiv@dividend+4)^0,w,c
  3914  007A' 5000'              	movf	(___lodiv@divisor+5)^0,w,c
  3915  007C' 5800'              	subwfb	(___lodiv@dividend+5)^0,w,c
  3916  007E' 5000'              	movf	(___lodiv@divisor+6)^0,w,c
  3917  0080' 5800'              	subwfb	(___lodiv@dividend+6)^0,w,c
  3918  0082' 5000'              	movf	(___lodiv@divisor+7)^0,w,c
  3919  0084' 5800'              	subwfb	(___lodiv@dividend+7)^0,w,c
  3920  0086' A0D8               	btfss	status,0,c
  3921  0088' EF00' F000'        	goto	u2591
  3922  008C' EF00' F000'        	goto	u2590
  3923  0090'                    u2591:
  3924  0090' EF00' F000'        	goto	l3289
  3925  0094'                    u2590:
  3926  0094' 5000'              	movf	___lodiv@divisor^0,w,c
  3927  0096' 5E00'              	subwf	___lodiv@dividend^0,f,c
  3928  0098' 5000'              	movf	(___lodiv@divisor+1)^0,w,c
  3929  009A' 5A00'              	subwfb	(___lodiv@dividend+1)^0,f,c
  3930  009C' 5000'              	movf	(___lodiv@divisor+2)^0,w,c
  3931  009E' 5A00'              	subwfb	(___lodiv@dividend+2)^0,f,c
  3932  00A0' 5000'              	movf	(___lodiv@divisor+3)^0,w,c
  3933  00A2' 5A00'              	subwfb	(___lodiv@dividend+3)^0,f,c
  3934  00A4' 5000'              	movf	(___lodiv@divisor+4)^0,w,c
  3935  00A6' 5A00'              	subwfb	(___lodiv@dividend+4)^0,f,c
  3936  00A8' 5000'              	movf	(___lodiv@divisor+5)^0,w,c
  3937  00AA' 5A00'              	subwfb	(___lodiv@dividend+5)^0,f,c
  3938  00AC' 5000'              	movf	(___lodiv@divisor+6)^0,w,c
  3939  00AE' 5A00'              	subwfb	(___lodiv@dividend+6)^0,f,c
  3940  00B0' 5000'              	movf	(___lodiv@divisor+7)^0,w,c
  3941  00B2' 5A00'              	subwfb	(___lodiv@dividend+7)^0,f,c
  3942  00B4' 8000'              	bsf	___lodiv@quotient^0,0,c
  3943  00B6'                    l3289:
  3944  00B6' 90D8               	bcf	status,0,c
  3945  00B8' 3200'              	rrcf	(___lodiv@divisor+7)^0,f,c
  3946  00BA' 3200'              	rrcf	(___lodiv@divisor+6)^0,f,c
  3947  00BC' 3200'              	rrcf	(___lodiv@divisor+5)^0,f,c
  3948  00BE' 3200'              	rrcf	(___lodiv@divisor+4)^0,f,c
  3949  00C0' 3200'              	rrcf	(___lodiv@divisor+3)^0,f,c
  3950  00C2' 3200'              	rrcf	(___lodiv@divisor+2)^0,f,c
  3951  00C4' 3200'              	rrcf	(___lodiv@divisor+1)^0,f,c
  3952  00C6' 3200'              	rrcf	___lodiv@divisor^0,f,c
  3953  00C8' 2E00'              	decfsz	___lodiv@counter^0,f,c
  3954  00CA' EF00' F000'        	goto	l3281
  3955  00CE'                    l829:
  3956  00CE' C012' F002'        	movff	___lodiv@quotient,?___lodiv
  3957  00D2' C013' F003'        	movff	___lodiv@quotient+1,?___lodiv+1
  3958  00D6' C014' F004'        	movff	___lodiv@quotient+2,?___lodiv+2
  3959  00DA' C015' F005'        	movff	___lodiv@quotient+3,?___lodiv+3
  3960  00DE' C016' F006'        	movff	___lodiv@quotient+4,?___lodiv+4
  3961  00E2' C017' F007'        	movff	___lodiv@quotient+5,?___lodiv+5
  3962  00E6' C018' F008'        	movff	___lodiv@quotient+6,?___lodiv+6
  3963  00EA' C019' F009'        	movff	___lodiv@quotient+7,?___lodiv+7
  3964  00EE' 0012               	return		;funcret
  3965  00F0'                    __end_of___lodiv:
  3966                           	callstack 0
  3967                           
  3968 ;; *************** function _dtoa *****************
  3969 ;; Defined at:
  3970 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  3973 ;;		 -> NULL(0), 
  3974 ;;  d               8   33[COMRAM] long long 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  n               8   55[COMRAM] long long 
  3977 ;;  i               2   64[COMRAM] int 
  3978 ;;  w               2   53[COMRAM] int 
  3979 ;;  p               2   51[COMRAM] int 
  3980 ;;  s               1   63[COMRAM] unsigned char 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3990 ;;      Params:        10       0       0       0       0       0       0
  3991 ;;      Locals:        17       0       0       0       0       0       0
  3992 ;;      Temps:          8       0       0       0       0       0       0
  3993 ;;      Totals:        35       0       0       0       0       0       0
  3994 ;;Total ram usage:       35 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 8
  3997 ;; This function calls:
  3998 ;;		___aodiv
  3999 ;;		___aomod
  4000 ;;		_abs
  4001 ;;		_pad
  4002 ;; This function is called by:
  4003 ;;		_vfpfcnvrt
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text8
  4008  0000'                    __ptext8:
  4009                           	callstack 0
  4010  0000'                    _dtoa:
  4011                           	callstack 19
  4012  0000'                    
  4013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4014  0000' C021' F037'        	movff	dtoa@d,dtoa@n
  4015  0004' C022' F038'        	movff	dtoa@d+1,dtoa@n+1
  4016  0008' C023' F039'        	movff	dtoa@d+2,dtoa@n+2
  4017  000C' C024' F03A'        	movff	dtoa@d+3,dtoa@n+3
  4018  0010' C025' F03B'        	movff	dtoa@d+4,dtoa@n+4
  4019  0014' C026' F03C'        	movff	dtoa@d+5,dtoa@n+5
  4020  0018' C027' F03D'        	movff	dtoa@d+6,dtoa@n+6
  4021  001C' C028' F03E'        	movff	dtoa@d+7,dtoa@n+7
  4022  0020'                    
  4023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4024  0020' BE00'              	btfsc	(dtoa@n+7)^0,7,c
  4025  0022' EF00' F000'        	goto	u2771
  4026  0026' EF00' F000'        	goto	u2770
  4027  002A'                    u2771:
  4028  002A' 0E01               	movlw	1
  4029  002C' EF00' F000'        	goto	u2780
  4030  0030'                    u2770:
  4031  0030' 0E00               	movlw	0
  4032  0032'                    u2780:
  4033  0032' 6E00'              	movwf	dtoa@s^0,c
  4034  0034'                    
  4035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4036  0034' 5000'              	movf	dtoa@s^0,w,c
  4037  0036' B4D8               	btfsc	status,2,c
  4038  0038' EF00' F000'        	goto	u2791
  4039  003C' EF00' F000'        	goto	u2790
  4040  0040'                    u2791:
  4041  0040' EF00' F000'        	goto	l3379
  4042  0044'                    u2790:
  4043  0044'                    
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4045  0044' 1E00'              	comf	(dtoa@n+7)^0,f,c
  4046  0046' 1E00'              	comf	(dtoa@n+6)^0,f,c
  4047  0048' 1E00'              	comf	(dtoa@n+5)^0,f,c
  4048  004A' 1E00'              	comf	(dtoa@n+4)^0,f,c
  4049  004C' 1E00'              	comf	(dtoa@n+3)^0,f,c
  4050  004E' 1E00'              	comf	(dtoa@n+2)^0,f,c
  4051  0050' 1E00'              	comf	(dtoa@n+1)^0,f,c
  4052  0052' 6C00'              	negf	dtoa@n^0,c
  4053  0054' 0E00               	movlw	0
  4054  0056' 2200'              	addwfc	(dtoa@n+1)^0,f,c
  4055  0058' 2200'              	addwfc	(dtoa@n+2)^0,f,c
  4056  005A' 2200'              	addwfc	(dtoa@n+3)^0,f,c
  4057  005C' 2200'              	addwfc	(dtoa@n+4)^0,f,c
  4058  005E' 2200'              	addwfc	(dtoa@n+5)^0,f,c
  4059  0060' 2200'              	addwfc	(dtoa@n+6)^0,f,c
  4060  0062' 2200'              	addwfc	(dtoa@n+7)^0,f,c
  4061  0064'                    l3379:
  4062                           
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  4064  0064' BE00'              	btfsc	(_prec+1)^0,7,c
  4065  0066' EF00' F000'        	goto	u2801
  4066  006A' EF00' F000'        	goto	u2800
  4067  006E'                    u2801:
  4068  006E' EF00' F000'        	goto	l3383
  4069  0072'                    u2800:
  4070  0072'                    
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  4072  0072' 9200'              	bcf	_flags^0,1,c
  4073  0074'                    l3383:
  4074                           
  4075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4076  0074' BE00'              	btfsc	(_prec+1)^0,7,c
  4077  0076' EF00' F000'        	goto	u2810
  4078  007A' 5000'              	movf	(_prec+1)^0,w,c
  4079  007C' E106               	bnz	u2811
  4080  007E' 0400'              	decf	_prec^0,w,c
  4081  0080' B0D8               	btfsc	status,0,c
  4082  0082' EF00' F000'        	goto	u2811
  4083  0086' EF00' F000'        	goto	u2810
  4084  008A'                    u2811:
  4085  008A' EF00' F000'        	goto	l1123
  4086  008E'                    u2810:
  4087  008E' 0E00               	movlw	0
  4088  0090' 6E00'              	movwf	(dtoa@p+1)^0,c
  4089  0092' 0E01               	movlw	1
  4090  0094' 6E00'              	movwf	dtoa@p^0,c
  4091  0096' EF00' F000'        	goto	l1125
  4092  009A'                    l1123:
  4093  009A' C000' F033'        	movff	_prec,dtoa@p
  4094  009E' C001' F034'        	movff	_prec+1,dtoa@p+1
  4095  00A2'                    l1125:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4098  00A2' C000' F035'        	movff	_width,dtoa@w
  4099  00A6' C001' F036'        	movff	_width+1,dtoa@w+1
  4100  00AA'                    
  4101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4102  00AA' 5000'              	movf	dtoa@s^0,w,c
  4103  00AC' B4D8               	btfsc	status,2,c
  4104  00AE' EF00' F000'        	goto	u2821
  4105  00B2' EF00' F000'        	goto	u2820
  4106  00B6'                    u2821:
  4107  00B6' EF00' F000'        	goto	l1126
  4108  00BA'                    u2820:
  4109  00BA'                    
  4110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4111  00BA' 0600'              	decf	dtoa@w^0,f,c
  4112  00BC' A0D8               	btfss	status,0,c
  4113  00BE' 0600'              	decf	(dtoa@w+1)^0,f,c
  4114  00C0'                    
  4115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4116  00C0' 5000'              	movf	dtoa@s^0,w,c
  4117  00C2' A4D8               	btfss	status,2,c
  4118  00C4' EF00' F000'        	goto	u2831
  4119  00C8' EF00' F000'        	goto	u2830
  4120  00CC'                    u2831:
  4121  00CC' EF00' F000'        	goto	l3395
  4122  00D0'                    u2830:
  4123  00D0' 0E00               	movlw	0
  4124  00D2' 6E00'              	movwf	(_dtoa$1534+1)^0,c
  4125  00D4' 0E2B               	movlw	43
  4126  00D6' 6E00'              	movwf	_dtoa$1534^0,c
  4127  00D8' EF00' F000'        	goto	l3397
  4128  00DC'                    l3395:
  4129  00DC' 0E00               	movlw	0
  4130  00DE' 6E00'              	movwf	(_dtoa$1534+1)^0,c
  4131  00E0' 0E2D               	movlw	45
  4132  00E2' 6E00'              	movwf	_dtoa$1534^0,c
  4133  00E4'                    l3397:
  4134  00E4' C031' F03F'        	movff	_dtoa$1534,dtoa@s
  4135  00E8'                    l1126:
  4136                           
  4137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4138  00E8' 0E00               	movlw	0
  4139  00EA' 6E00'              	movwf	(dtoa@i+1)^0,c
  4140  00EC' 0E1F               	movlw	31
  4141  00EE' 6E00'              	movwf	dtoa@i^0,c
  4142  00F0'                    
  4143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4144  00F0' 0E00               	movlw	0
  4145  00F2' 0100               	movlb	0	; () banked
  4146  00F4' 6F00'              	movwf	(_dbuf+31)& (0+255),b
  4147                           
  4148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4149  00F6' EF00' F000'        	goto	l3411
  4150  00FA'                    l3401:
  4151                           
  4152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4153  00FA' 0600'              	decf	dtoa@i^0,f,c
  4154  00FC' A0D8               	btfss	status,0,c
  4155  00FE' 0600'              	decf	(dtoa@i+1)^0,f,c
  4156  0100'                    
  4157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4158  0100' 0E00'              	movlw	low _dbuf
  4159  0102' 2400'              	addwf	dtoa@i^0,w,c
  4160  0104' 6ED9               	movwf	fsr2l,c
  4161  0106' 0E00'              	movlw	high _dbuf
  4162  0108' 2000'              	addwfc	(dtoa@i+1)^0,w,c
  4163  010A' 6EDA               	movwf	fsr2h,c
  4164  010C' C037' F002'        	movff	dtoa@n,___aomod@dividend
  4165  0110' C038' F003'        	movff	dtoa@n+1,___aomod@dividend+1
  4166  0114' C039' F004'        	movff	dtoa@n+2,___aomod@dividend+2
  4167  0118' C03A' F005'        	movff	dtoa@n+3,___aomod@dividend+3
  4168  011C' C03B' F006'        	movff	dtoa@n+4,___aomod@dividend+4
  4169  0120' C03C' F007'        	movff	dtoa@n+5,___aomod@dividend+5
  4170  0124' C03D' F008'        	movff	dtoa@n+6,___aomod@dividend+6
  4171  0128' C03E' F009'        	movff	dtoa@n+7,___aomod@dividend+7
  4172  012C' 0E0A               	movlw	10
  4173  012E' 6E00'              	movwf	___aomod@divisor^0,c
  4174  0130' 0E00               	movlw	0
  4175  0132' 6E00'              	movwf	(___aomod@divisor+1)^0,c
  4176  0134' 0E00               	movlw	0
  4177  0136' 6E00'              	movwf	(___aomod@divisor+2)^0,c
  4178  0138' 0E00               	movlw	0
  4179  013A' 6E00'              	movwf	(___aomod@divisor+3)^0,c
  4180  013C' 0E00               	movlw	0
  4181  013E' 6E00'              	movwf	(___aomod@divisor+4)^0,c
  4182  0140' 0E00               	movlw	0
  4183  0142' 6E00'              	movwf	(___aomod@divisor+5)^0,c
  4184  0144' 0E00               	movlw	0
  4185  0146' 6E00'              	movwf	(___aomod@divisor+6)^0,c
  4186  0148' 0E00               	movlw	0
  4187  014A' 6E00'              	movwf	(___aomod@divisor+7)^0,c
  4188  014C' EC00' F000'        	call	___aomod	;wreg free
  4189  0150' C002' F029'        	movff	?___aomod,??_dtoa
  4190  0154' C003' F02A'        	movff	?___aomod+1,??_dtoa+1
  4191  0158' C004' F02B'        	movff	?___aomod+2,??_dtoa+2
  4192  015C' C005' F02C'        	movff	?___aomod+3,??_dtoa+3
  4193  0160' C006' F02D'        	movff	?___aomod+4,??_dtoa+4
  4194  0164' C007' F02E'        	movff	?___aomod+5,??_dtoa+5
  4195  0168' C008' F02F'        	movff	?___aomod+6,??_dtoa+6
  4196  016C' C009' F030'        	movff	?___aomod+7,??_dtoa+7
  4197  0170' C029' F014'        	movff	??_dtoa,abs@a
  4198  0174' C02A' F015'        	movff	??_dtoa+1,abs@a+1
  4199  0178' EC00' F000'        	call	_abs	;wreg free
  4200  017C' 5000'              	movf	?_abs^0,w,c
  4201  017E' 0F30               	addlw	48
  4202  0180' 6EDF               	movwf	indf2,c
  4203  0182'                    
  4204                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4205  0182' 0600'              	decf	dtoa@p^0,f,c
  4206  0184' A0D8               	btfss	status,0,c
  4207  0186' 0600'              	decf	(dtoa@p+1)^0,f,c
  4208  0188'                    
  4209                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4210  0188' 0600'              	decf	dtoa@w^0,f,c
  4211  018A' A0D8               	btfss	status,0,c
  4212  018C' 0600'              	decf	(dtoa@w+1)^0,f,c
  4213  018E'                    
  4214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4215  018E' C037' F002'        	movff	dtoa@n,___aodiv@dividend
  4216  0192' C038' F003'        	movff	dtoa@n+1,___aodiv@dividend+1
  4217  0196' C039' F004'        	movff	dtoa@n+2,___aodiv@dividend+2
  4218  019A' C03A' F005'        	movff	dtoa@n+3,___aodiv@dividend+3
  4219  019E' C03B' F006'        	movff	dtoa@n+4,___aodiv@dividend+4
  4220  01A2' C03C' F007'        	movff	dtoa@n+5,___aodiv@dividend+5
  4221  01A6' C03D' F008'        	movff	dtoa@n+6,___aodiv@dividend+6
  4222  01AA' C03E' F009'        	movff	dtoa@n+7,___aodiv@dividend+7
  4223  01AE' 0E0A               	movlw	10
  4224  01B0' 6E00'              	movwf	___aodiv@divisor^0,c
  4225  01B2' 0E00               	movlw	0
  4226  01B4' 6E00'              	movwf	(___aodiv@divisor+1)^0,c
  4227  01B6' 0E00               	movlw	0
  4228  01B8' 6E00'              	movwf	(___aodiv@divisor+2)^0,c
  4229  01BA' 0E00               	movlw	0
  4230  01BC' 6E00'              	movwf	(___aodiv@divisor+3)^0,c
  4231  01BE' 0E00               	movlw	0
  4232  01C0' 6E00'              	movwf	(___aodiv@divisor+4)^0,c
  4233  01C2' 0E00               	movlw	0
  4234  01C4' 6E00'              	movwf	(___aodiv@divisor+5)^0,c
  4235  01C6' 0E00               	movlw	0
  4236  01C8' 6E00'              	movwf	(___aodiv@divisor+6)^0,c
  4237  01CA' 0E00               	movlw	0
  4238  01CC' 6E00'              	movwf	(___aodiv@divisor+7)^0,c
  4239  01CE' EC00' F000'        	call	___aodiv	;wreg free
  4240  01D2' C002' F037'        	movff	?___aodiv,dtoa@n
  4241  01D6' C003' F038'        	movff	?___aodiv+1,dtoa@n+1
  4242  01DA' C004' F039'        	movff	?___aodiv+2,dtoa@n+2
  4243  01DE' C005' F03A'        	movff	?___aodiv+3,dtoa@n+3
  4244  01E2' C006' F03B'        	movff	?___aodiv+4,dtoa@n+4
  4245  01E6' C007' F03C'        	movff	?___aodiv+5,dtoa@n+5
  4246  01EA' C008' F03D'        	movff	?___aodiv+6,dtoa@n+6
  4247  01EE' C009' F03E'        	movff	?___aodiv+7,dtoa@n+7
  4248  01F2'                    l3411:
  4249                           
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4251  01F2' BE00'              	btfsc	(dtoa@i+1)^0,7,c
  4252  01F4' EF00' F000'        	goto	u2841
  4253  01F8' 5000'              	movf	(dtoa@i+1)^0,w,c
  4254  01FA' E108               	bnz	u2840
  4255  01FC' 0400'              	decf	dtoa@i^0,w,c
  4256  01FE' A0D8               	btfss	status,0,c
  4257  0200' EF00' F000'        	goto	u2841
  4258  0204' EF00' F000'        	goto	u2840
  4259  0208'                    u2841:
  4260  0208' EF00' F000'        	goto	l3421
  4261  020C'                    u2840:
  4262  020C' 5000'              	movf	dtoa@n^0,w,c
  4263  020E' 1000'              	iorwf	(dtoa@n+1)^0,w,c
  4264  0210' 1000'              	iorwf	(dtoa@n+2)^0,w,c
  4265  0212' 1000'              	iorwf	(dtoa@n+3)^0,w,c
  4266  0214' 1000'              	iorwf	(dtoa@n+4)^0,w,c
  4267  0216' 1000'              	iorwf	(dtoa@n+5)^0,w,c
  4268  0218' 1000'              	iorwf	(dtoa@n+6)^0,w,c
  4269  021A' 1000'              	iorwf	(dtoa@n+7)^0,w,c
  4270  021C' A4D8               	btfss	status,2,c
  4271  021E' EF00' F000'        	goto	u2851
  4272  0222' EF00' F000'        	goto	u2850
  4273  0226'                    u2851:
  4274  0226' EF00' F000'        	goto	l3401
  4275  022A'                    u2850:
  4276  022A' BE00'              	btfsc	(dtoa@p+1)^0,7,c
  4277  022C' EF00' F000'        	goto	u2860
  4278  0230' 5000'              	movf	(dtoa@p+1)^0,w,c
  4279  0232' E106               	bnz	u2861
  4280  0234' 0400'              	decf	dtoa@p^0,w,c
  4281  0236' B0D8               	btfsc	status,0,c
  4282  0238' EF00' F000'        	goto	u2861
  4283  023C' EF00' F000'        	goto	u2860
  4284  0240'                    u2861:
  4285  0240' EF00' F000'        	goto	l3401
  4286  0244'                    u2860:
  4287  0244' BE00'              	btfsc	(dtoa@w+1)^0,7,c
  4288  0246' EF00' F000'        	goto	u2871
  4289  024A' 5000'              	movf	(dtoa@w+1)^0,w,c
  4290  024C' E108               	bnz	u2870
  4291  024E' 0400'              	decf	dtoa@w^0,w,c
  4292  0250' A0D8               	btfss	status,0,c
  4293  0252' EF00' F000'        	goto	u2871
  4294  0256' EF00' F000'        	goto	u2870
  4295  025A'                    u2871:
  4296  025A' EF00' F000'        	goto	l3421
  4297  025E'                    u2870:
  4298  025E' B200'              	btfsc	_flags^0,1,c
  4299  0260' EF00' F000'        	goto	u2881
  4300  0264' EF00' F000'        	goto	u2880
  4301  0268'                    u2881:
  4302  0268' EF00' F000'        	goto	l3401
  4303  026C'                    u2880:
  4304  026C'                    l3421:
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  4307  026C' 5000'              	movf	dtoa@s^0,w,c
  4308  026E' B4D8               	btfsc	status,2,c
  4309  0270' EF00' F000'        	goto	u2891
  4310  0274' EF00' F000'        	goto	u2890
  4311  0278'                    u2891:
  4312  0278' EF00' F000'        	goto	l3427
  4313  027C'                    u2890:
  4314  027C'                    
  4315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  4316  027C' 0600'              	decf	dtoa@i^0,f,c
  4317  027E' A0D8               	btfss	status,0,c
  4318  0280' 0600'              	decf	(dtoa@i+1)^0,f,c
  4319  0282'                    
  4320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  4321  0282' 0E00'              	movlw	low _dbuf
  4322  0284' 2400'              	addwf	dtoa@i^0,w,c
  4323  0286' 6ED9               	movwf	fsr2l,c
  4324  0288' 0E00'              	movlw	high _dbuf
  4325  028A' 2000'              	addwfc	(dtoa@i+1)^0,w,c
  4326  028C' 6EDA               	movwf	fsr2h,c
  4327  028E' C03F' FFDF         	movff	dtoa@s,indf2
  4328  0292'                    l3427:
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  4331  0292' C01F' F014'        	movff	dtoa@fp,pad@fp
  4332  0296' C020' F015'        	movff	dtoa@fp+1,pad@fp+1
  4333  029A' 0E00'              	movlw	low _dbuf
  4334  029C' 2400'              	addwf	dtoa@i^0,w,c
  4335  029E' 6E00'              	movwf	pad@buf^0,c
  4336  02A0' 0E00'              	movlw	high _dbuf
  4337  02A2' 2000'              	addwfc	(dtoa@i+1)^0,w,c
  4338  02A4' 6E00'              	movwf	(pad@buf+1)^0,c
  4339  02A6' C035' F018'        	movff	dtoa@w,pad@p
  4340  02AA' C036' F019'        	movff	dtoa@w+1,pad@p+1
  4341  02AE' EC00' F000'        	call	_pad	;wreg free
  4342  02B2' 0012               	return		;funcret
  4343  02B4'                    __end_of_dtoa:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _pad *****************
  4347 ;; Defined at:
  4348 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  4351 ;;		 -> NULL(0), 
  4352 ;;  buf             2   22[COMRAM] PTR unsigned char 
  4353 ;;		 -> dbuf(32), 
  4354 ;;  p               2   24[COMRAM] int 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  w               2   29[COMRAM] int 
  4357 ;;  i               2   27[COMRAM] int 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4367 ;;      Params:         6       0       0       0       0       0       0
  4368 ;;      Locals:         4       0       0       0       0       0       0
  4369 ;;      Temps:          1       0       0       0       0       0       0
  4370 ;;      Totals:        11       0       0       0       0       0       0
  4371 ;;Total ram usage:       11 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 7
  4374 ;; This function calls:
  4375 ;;		_fputc
  4376 ;;		_fputs
  4377 ;; This function is called by:
  4378 ;;		_dtoa
  4379 ;;		_utoa
  4380 ;;		_xtoa
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text9
  4385  0000'                    __ptext9:
  4386                           	callstack 0
  4387  0000'                    _pad:
  4388                           	callstack 19
  4389  0000'                    
  4390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  4391  0000' A000'              	btfss	_flags^0,0,c
  4392  0002' EF00' F000'        	goto	u2631
  4393  0006' EF00' F000'        	goto	u2630
  4394  000A'                    u2631:
  4395  000A' EF00' F000'        	goto	l3313
  4396  000E'                    u2630:
  4397  000E'                    
  4398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  4399  000E' C016' F00D'        	movff	pad@buf,fputs@s
  4400  0012' C017' F00E'        	movff	pad@buf+1,fputs@s+1
  4401  0016' C014' F00F'        	movff	pad@fp,fputs@fp
  4402  001A' C015' F010'        	movff	pad@fp+1,fputs@fp+1
  4403  001E' EC00' F000'        	call	_fputs	;wreg free
  4404  0022'                    l3313:
  4405                           
  4406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  4407  0022' BE00'              	btfsc	(pad@p+1)^0,7,c
  4408  0024' EF00' F000'        	goto	u2641
  4409  0028' EF00' F000'        	goto	u2640
  4410  002C'                    u2641:
  4411  002C' EF00' F000'        	goto	l3317
  4412  0030'                    u2640:
  4413  0030' C018' F01D'        	movff	pad@p,pad@w
  4414  0034' C019' F01E'        	movff	pad@p+1,pad@w+1
  4415  0038' EF00' F000'        	goto	l1096
  4416  003C'                    l3317:
  4417  003C' 0E00               	movlw	0
  4418  003E' 6E00'              	movwf	(pad@w+1)^0,c
  4419  0040' 0E00               	movlw	0
  4420  0042' 6E00'              	movwf	pad@w^0,c
  4421  0044'                    l1096:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  4424  0044' 0E00               	movlw	0
  4425  0046' 6E00'              	movwf	(pad@i+1)^0,c
  4426  0048' 0E00               	movlw	0
  4427  004A' 6E00'              	movwf	pad@i^0,c
  4428                           
  4429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4430  004C' EF00' F000'        	goto	l3323
  4431  0050'                    l3319:
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  4434  0050' 0E00               	movlw	0
  4435  0052' 6E00'              	movwf	(fputc@c+1)^0,c
  4436  0054' 0E20               	movlw	32
  4437  0056' 6E00'              	movwf	fputc@c^0,c
  4438  0058' C014' F006'        	movff	pad@fp,fputc@fp
  4439  005C' C015' F007'        	movff	pad@fp+1,fputc@fp+1
  4440  0060' EC00' F000'        	call	_fputc	;wreg free
  4441  0064'                    
  4442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  4443  0064' 4A00'              	infsnz	pad@i^0,f,c
  4444  0066' 2A00'              	incf	(pad@i+1)^0,f,c
  4445  0068'                    l3323:
  4446                           
  4447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  4448  0068' 5000'              	movf	pad@w^0,w,c
  4449  006A' 5C00'              	subwf	pad@i^0,w,c
  4450  006C' 5000'              	movf	(pad@i+1)^0,w,c
  4451  006E' 0A80               	xorlw	128
  4452  0070' 6E00'              	movwf	??_pad^0,c
  4453  0072' 5000'              	movf	(pad@w+1)^0,w,c
  4454  0074' 0A80               	xorlw	128
  4455  0076' 5800'              	subwfb	??_pad^0,w,c
  4456  0078' A0D8               	btfss	status,0,c
  4457  007A' EF00' F000'        	goto	u2651
  4458  007E' EF00' F000'        	goto	u2650
  4459  0082'                    u2651:
  4460  0082' EF00' F000'        	goto	l3319
  4461  0086'                    u2650:
  4462  0086'                    
  4463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  4464  0086' B000'              	btfsc	_flags^0,0,c
  4465  0088' EF00' F000'        	goto	u2661
  4466  008C' EF00' F000'        	goto	u2660
  4467  0090'                    u2661:
  4468  0090' EF00' F000'        	goto	l1101
  4469  0094'                    u2660:
  4470  0094'                    
  4471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  4472  0094' C016' F00D'        	movff	pad@buf,fputs@s
  4473  0098' C017' F00E'        	movff	pad@buf+1,fputs@s+1
  4474  009C' C014' F00F'        	movff	pad@fp,fputs@fp
  4475  00A0' C015' F010'        	movff	pad@fp+1,fputs@fp+1
  4476  00A4' EC00' F000'        	call	_fputs	;wreg free
  4477  00A8'                    l1101:
  4478  00A8' 0012               	return		;funcret
  4479  00AA'                    __end_of_pad:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _fputs *****************
  4483 ;; Defined at:
  4484 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  s               2   13[COMRAM] PTR const unsigned char 
  4487 ;;		 -> dbuf(32), 
  4488 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  4489 ;;		 -> NULL(0), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  i               2   18[COMRAM] int 
  4492 ;;  c               1   17[COMRAM] unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  2   13[COMRAM] int 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4502 ;;      Params:         4       0       0       0       0       0       0
  4503 ;;      Locals:         3       0       0       0       0       0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0
  4505 ;;      Totals:         7       0       0       0       0       0       0
  4506 ;;Total ram usage:        7 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 6
  4509 ;; This function calls:
  4510 ;;		_fputc
  4511 ;; This function is called by:
  4512 ;;		_pad
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text10
  4517  0000'                    __ptext10:
  4518                           	callstack 0
  4519  0000'                    _fputs:
  4520                           	callstack 19
  4521  0000' 0E00               	movlw	0
  4522  0002' 6E00'              	movwf	(fputs@i+1)^0,c
  4523  0004' 0E00               	movlw	0
  4524  0006' 6E00'              	movwf	fputs@i^0,c
  4525  0008' EF00' F000'        	goto	l3183
  4526  000C'                    l3179:
  4527  000C' C011' F004'        	movff	fputs@c,fputc@c
  4528  0010' 6A00'              	clrf	(fputc@c+1)^0,c
  4529  0012' C00F' F006'        	movff	fputs@fp,fputc@fp
  4530  0016' C010' F007'        	movff	fputs@fp+1,fputc@fp+1
  4531  001A' EC00' F000'        	call	_fputc	;wreg free
  4532  001E' 4A00'              	infsnz	fputs@i^0,f,c
  4533  0020' 2A00'              	incf	(fputs@i+1)^0,f,c
  4534  0022'                    l3183:
  4535  0022' 5000'              	movf	fputs@i^0,w,c
  4536  0024' 2400'              	addwf	fputs@s^0,w,c
  4537  0026' 6ED9               	movwf	fsr2l,c
  4538  0028' 5000'              	movf	(fputs@i+1)^0,w,c
  4539  002A' 2000'              	addwfc	(fputs@s+1)^0,w,c
  4540  002C' 6EDA               	movwf	fsr2h,c
  4541  002E' 50DF               	movf	indf2,w,c
  4542  0030' 6E00'              	movwf	fputs@c^0,c
  4543  0032' 5000'              	movf	fputs@c^0,w,c
  4544  0034' A4D8               	btfss	status,2,c
  4545  0036' EF00' F000'        	goto	u2421
  4546  003A' EF00' F000'        	goto	u2420
  4547  003E'                    u2421:
  4548  003E' EF00' F000'        	goto	l3179
  4549  0042'                    u2420:
  4550  0042' 0012               	return		;funcret
  4551  0044'                    __end_of_fputs:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function _abs *****************
  4555 ;; Defined at:
  4556 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  a               2   20[COMRAM] int 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2   20[COMRAM] int 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4570 ;;      Params:         2       0       0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0
  4572 ;;      Temps:          2       0       0       0       0       0       0
  4573 ;;      Totals:         4       0       0       0       0       0       0
  4574 ;;Total ram usage:        4 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 3
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_dtoa
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text11
  4585  0000'                    __ptext11:
  4586                           	callstack 0
  4587  0000'                    _abs:
  4588                           	callstack 23
  4589  0000' BE00'              	btfsc	(abs@a+1)^0,7,c
  4590  0002' EF00' F000'        	goto	u2670
  4591  0006' 5000'              	movf	(abs@a+1)^0,w,c
  4592  0008' E106               	bnz	u2671
  4593  000A' 0400'              	decf	abs@a^0,w,c
  4594  000C' B0D8               	btfsc	status,0,c
  4595  000E' EF00' F000'        	goto	u2671
  4596  0012' EF00' F000'        	goto	u2670
  4597  0016'                    u2671:
  4598  0016' EF00' F000'        	goto	l1213
  4599  001A'                    u2670:
  4600  001A' C014' F016'        	movff	abs@a,??_abs
  4601  001E' C015' F017'        	movff	abs@a+1,??_abs+1
  4602  0022' 1E00'              	comf	??_abs^0,f,c
  4603  0024' 1E00'              	comf	(??_abs+1)^0,f,c
  4604  0026' 4A00'              	infsnz	??_abs^0,f,c
  4605  0028' 2A00'              	incf	(??_abs+1)^0,f,c
  4606  002A' C016' F014'        	movff	??_abs,?_abs
  4607  002E' C017' F015'        	movff	??_abs+1,?_abs+1
  4608  0032' EF00' F000'        	goto	l1216
  4609  0036'                    l1213:
  4610  0036' C014' F014'        	movff	abs@a,?_abs
  4611  003A' C015' F015'        	movff	abs@a+1,?_abs+1
  4612  003E'                    l1216:
  4613  003E' 0012               	return		;funcret
  4614  0040'                    __end_of_abs:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function ___aomod *****************
  4618 ;; Defined at:
  4619 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;  dividend        8    2[COMRAM] long long 
  4622 ;;  divisor         8   10[COMRAM] long long 
  4623 ;; Auto vars:     Size  Location     Type
  4624 ;;  sign            1   19[COMRAM] unsigned char 
  4625 ;;  counter         1   18[COMRAM] unsigned char 
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  8    2[COMRAM] long long 
  4628 ;; Registers used:
  4629 ;;		wreg, status,2, status,0
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4635 ;;      Params:        16       0       0       0       0       0       0
  4636 ;;      Locals:         2       0       0       0       0       0       0
  4637 ;;      Temps:          0       0       0       0       0       0       0
  4638 ;;      Totals:        18       0       0       0       0       0       0
  4639 ;;Total ram usage:       18 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 3
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_dtoa
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text12
  4650  0000'                    __ptext12:
  4651                           	callstack 0
  4652  0000'                    ___aomod:
  4653                           	callstack 23
  4654  0000' 0E00               	movlw	0
  4655  0002' 6E00'              	movwf	___aomod@sign^0,c
  4656  0004' BE00'              	btfsc	(___aomod@dividend+7)^0,7,c
  4657  0006' EF00' F000'        	goto	u2500
  4658  000A' EF00' F000'        	goto	u2501
  4659  000E'                    u2501:
  4660  000E' EF00' F000'        	goto	l3243
  4661  0012'                    u2500:
  4662  0012' 1E00'              	comf	(___aomod@dividend+7)^0,f,c
  4663  0014' 1E00'              	comf	(___aomod@dividend+6)^0,f,c
  4664  0016' 1E00'              	comf	(___aomod@dividend+5)^0,f,c
  4665  0018' 1E00'              	comf	(___aomod@dividend+4)^0,f,c
  4666  001A' 1E00'              	comf	(___aomod@dividend+3)^0,f,c
  4667  001C' 1E00'              	comf	(___aomod@dividend+2)^0,f,c
  4668  001E' 1E00'              	comf	(___aomod@dividend+1)^0,f,c
  4669  0020' 6C00'              	negf	___aomod@dividend^0,c
  4670  0022' 0E00               	movlw	0
  4671  0024' 2200'              	addwfc	(___aomod@dividend+1)^0,f,c
  4672  0026' 2200'              	addwfc	(___aomod@dividend+2)^0,f,c
  4673  0028' 2200'              	addwfc	(___aomod@dividend+3)^0,f,c
  4674  002A' 2200'              	addwfc	(___aomod@dividend+4)^0,f,c
  4675  002C' 2200'              	addwfc	(___aomod@dividend+5)^0,f,c
  4676  002E' 2200'              	addwfc	(___aomod@dividend+6)^0,f,c
  4677  0030' 2200'              	addwfc	(___aomod@dividend+7)^0,f,c
  4678  0032' 0E01               	movlw	1
  4679  0034' 6E00'              	movwf	___aomod@sign^0,c
  4680  0036'                    l3243:
  4681  0036' BE00'              	btfsc	(___aomod@divisor+7)^0,7,c
  4682  0038' EF00' F000'        	goto	u2510
  4683  003C' EF00' F000'        	goto	u2511
  4684  0040'                    u2511:
  4685  0040' EF00' F000'        	goto	l3247
  4686  0044'                    u2510:
  4687  0044' 1E00'              	comf	(___aomod@divisor+7)^0,f,c
  4688  0046' 1E00'              	comf	(___aomod@divisor+6)^0,f,c
  4689  0048' 1E00'              	comf	(___aomod@divisor+5)^0,f,c
  4690  004A' 1E00'              	comf	(___aomod@divisor+4)^0,f,c
  4691  004C' 1E00'              	comf	(___aomod@divisor+3)^0,f,c
  4692  004E' 1E00'              	comf	(___aomod@divisor+2)^0,f,c
  4693  0050' 1E00'              	comf	(___aomod@divisor+1)^0,f,c
  4694  0052' 6C00'              	negf	___aomod@divisor^0,c
  4695  0054' 0E00               	movlw	0
  4696  0056' 2200'              	addwfc	(___aomod@divisor+1)^0,f,c
  4697  0058' 2200'              	addwfc	(___aomod@divisor+2)^0,f,c
  4698  005A' 2200'              	addwfc	(___aomod@divisor+3)^0,f,c
  4699  005C' 2200'              	addwfc	(___aomod@divisor+4)^0,f,c
  4700  005E' 2200'              	addwfc	(___aomod@divisor+5)^0,f,c
  4701  0060' 2200'              	addwfc	(___aomod@divisor+6)^0,f,c
  4702  0062' 2200'              	addwfc	(___aomod@divisor+7)^0,f,c
  4703  0064'                    l3247:
  4704  0064' 5000'              	movf	___aomod@divisor^0,w,c
  4705  0066' 1000'              	iorwf	(___aomod@divisor+1)^0,w,c
  4706  0068' 1000'              	iorwf	(___aomod@divisor+2)^0,w,c
  4707  006A' 1000'              	iorwf	(___aomod@divisor+3)^0,w,c
  4708  006C' 1000'              	iorwf	(___aomod@divisor+4)^0,w,c
  4709  006E' 1000'              	iorwf	(___aomod@divisor+5)^0,w,c
  4710  0070' 1000'              	iorwf	(___aomod@divisor+6)^0,w,c
  4711  0072' 1000'              	iorwf	(___aomod@divisor+7)^0,w,c
  4712  0074' B4D8               	btfsc	status,2,c
  4713  0076' EF00' F000'        	goto	u2521
  4714  007A' EF00' F000'        	goto	u2520
  4715  007E'                    u2521:
  4716  007E' EF00' F000'        	goto	l3263
  4717  0082'                    u2520:
  4718  0082' 0E01               	movlw	1
  4719  0084' 6E00'              	movwf	___aomod@counter^0,c
  4720  0086' EF00' F000'        	goto	l3253
  4721  008A'                    l3251:
  4722  008A' 90D8               	bcf	status,0,c
  4723  008C' 3600'              	rlcf	___aomod@divisor^0,f,c
  4724  008E' 3600'              	rlcf	(___aomod@divisor+1)^0,f,c
  4725  0090' 3600'              	rlcf	(___aomod@divisor+2)^0,f,c
  4726  0092' 3600'              	rlcf	(___aomod@divisor+3)^0,f,c
  4727  0094' 3600'              	rlcf	(___aomod@divisor+4)^0,f,c
  4728  0096' 3600'              	rlcf	(___aomod@divisor+5)^0,f,c
  4729  0098' 3600'              	rlcf	(___aomod@divisor+6)^0,f,c
  4730  009A' 3600'              	rlcf	(___aomod@divisor+7)^0,f,c
  4731  009C' 2A00'              	incf	___aomod@counter^0,f,c
  4732  009E'                    l3253:
  4733  009E' AE00'              	btfss	(___aomod@divisor+7)^0,7,c
  4734  00A0' EF00' F000'        	goto	u2531
  4735  00A4' EF00' F000'        	goto	u2530
  4736  00A8'                    u2531:
  4737  00A8' EF00' F000'        	goto	l3251
  4738  00AC'                    u2530:
  4739  00AC'                    l3255:
  4740  00AC' 5000'              	movf	___aomod@divisor^0,w,c
  4741  00AE' 5C00'              	subwf	___aomod@dividend^0,w,c
  4742  00B0' 5000'              	movf	(___aomod@divisor+1)^0,w,c
  4743  00B2' 5800'              	subwfb	(___aomod@dividend+1)^0,w,c
  4744  00B4' 5000'              	movf	(___aomod@divisor+2)^0,w,c
  4745  00B6' 5800'              	subwfb	(___aomod@dividend+2)^0,w,c
  4746  00B8' 5000'              	movf	(___aomod@divisor+3)^0,w,c
  4747  00BA' 5800'              	subwfb	(___aomod@dividend+3)^0,w,c
  4748  00BC' 5000'              	movf	(___aomod@divisor+4)^0,w,c
  4749  00BE' 5800'              	subwfb	(___aomod@dividend+4)^0,w,c
  4750  00C0' 5000'              	movf	(___aomod@divisor+5)^0,w,c
  4751  00C2' 5800'              	subwfb	(___aomod@dividend+5)^0,w,c
  4752  00C4' 5000'              	movf	(___aomod@divisor+6)^0,w,c
  4753  00C6' 5800'              	subwfb	(___aomod@dividend+6)^0,w,c
  4754  00C8' 5000'              	movf	(___aomod@divisor+7)^0,w,c
  4755  00CA' 5800'              	subwfb	(___aomod@dividend+7)^0,w,c
  4756  00CC' A0D8               	btfss	status,0,c
  4757  00CE' EF00' F000'        	goto	u2541
  4758  00D2' EF00' F000'        	goto	u2540
  4759  00D6'                    u2541:
  4760  00D6' EF00' F000'        	goto	l3259
  4761  00DA'                    u2540:
  4762  00DA' 5000'              	movf	___aomod@divisor^0,w,c
  4763  00DC' 5E00'              	subwf	___aomod@dividend^0,f,c
  4764  00DE' 5000'              	movf	(___aomod@divisor+1)^0,w,c
  4765  00E0' 5A00'              	subwfb	(___aomod@dividend+1)^0,f,c
  4766  00E2' 5000'              	movf	(___aomod@divisor+2)^0,w,c
  4767  00E4' 5A00'              	subwfb	(___aomod@dividend+2)^0,f,c
  4768  00E6' 5000'              	movf	(___aomod@divisor+3)^0,w,c
  4769  00E8' 5A00'              	subwfb	(___aomod@dividend+3)^0,f,c
  4770  00EA' 5000'              	movf	(___aomod@divisor+4)^0,w,c
  4771  00EC' 5A00'              	subwfb	(___aomod@dividend+4)^0,f,c
  4772  00EE' 5000'              	movf	(___aomod@divisor+5)^0,w,c
  4773  00F0' 5A00'              	subwfb	(___aomod@dividend+5)^0,f,c
  4774  00F2' 5000'              	movf	(___aomod@divisor+6)^0,w,c
  4775  00F4' 5A00'              	subwfb	(___aomod@dividend+6)^0,f,c
  4776  00F6' 5000'              	movf	(___aomod@divisor+7)^0,w,c
  4777  00F8' 5A00'              	subwfb	(___aomod@dividend+7)^0,f,c
  4778  00FA'                    l3259:
  4779  00FA' 90D8               	bcf	status,0,c
  4780  00FC' 3200'              	rrcf	(___aomod@divisor+7)^0,f,c
  4781  00FE' 3200'              	rrcf	(___aomod@divisor+6)^0,f,c
  4782  0100' 3200'              	rrcf	(___aomod@divisor+5)^0,f,c
  4783  0102' 3200'              	rrcf	(___aomod@divisor+4)^0,f,c
  4784  0104' 3200'              	rrcf	(___aomod@divisor+3)^0,f,c
  4785  0106' 3200'              	rrcf	(___aomod@divisor+2)^0,f,c
  4786  0108' 3200'              	rrcf	(___aomod@divisor+1)^0,f,c
  4787  010A' 3200'              	rrcf	___aomod@divisor^0,f,c
  4788  010C' 2E00'              	decfsz	___aomod@counter^0,f,c
  4789  010E' EF00' F000'        	goto	l3255
  4790  0112'                    l3263:
  4791  0112' 5000'              	movf	___aomod@sign^0,w,c
  4792  0114' B4D8               	btfsc	status,2,c
  4793  0116' EF00' F000'        	goto	u2551
  4794  011A' EF00' F000'        	goto	u2550
  4795  011E'                    u2551:
  4796  011E' EF00' F000'        	goto	l3267
  4797  0122'                    u2550:
  4798  0122' 1E00'              	comf	(___aomod@dividend+7)^0,f,c
  4799  0124' 1E00'              	comf	(___aomod@dividend+6)^0,f,c
  4800  0126' 1E00'              	comf	(___aomod@dividend+5)^0,f,c
  4801  0128' 1E00'              	comf	(___aomod@dividend+4)^0,f,c
  4802  012A' 1E00'              	comf	(___aomod@dividend+3)^0,f,c
  4803  012C' 1E00'              	comf	(___aomod@dividend+2)^0,f,c
  4804  012E' 1E00'              	comf	(___aomod@dividend+1)^0,f,c
  4805  0130' 6C00'              	negf	___aomod@dividend^0,c
  4806  0132' 0E00               	movlw	0
  4807  0134' 2200'              	addwfc	(___aomod@dividend+1)^0,f,c
  4808  0136' 2200'              	addwfc	(___aomod@dividend+2)^0,f,c
  4809  0138' 2200'              	addwfc	(___aomod@dividend+3)^0,f,c
  4810  013A' 2200'              	addwfc	(___aomod@dividend+4)^0,f,c
  4811  013C' 2200'              	addwfc	(___aomod@dividend+5)^0,f,c
  4812  013E' 2200'              	addwfc	(___aomod@dividend+6)^0,f,c
  4813  0140' 2200'              	addwfc	(___aomod@dividend+7)^0,f,c
  4814  0142'                    l3267:
  4815  0142' C002' F002'        	movff	___aomod@dividend,?___aomod
  4816  0146' C003' F003'        	movff	___aomod@dividend+1,?___aomod+1
  4817  014A' C004' F004'        	movff	___aomod@dividend+2,?___aomod+2
  4818  014E' C005' F005'        	movff	___aomod@dividend+3,?___aomod+3
  4819  0152' C006' F006'        	movff	___aomod@dividend+4,?___aomod+4
  4820  0156' C007' F007'        	movff	___aomod@dividend+5,?___aomod+5
  4821  015A' C008' F008'        	movff	___aomod@dividend+6,?___aomod+6
  4822  015E' C009' F009'        	movff	___aomod@dividend+7,?___aomod+7
  4823  0162' 0012               	return		;funcret
  4824  0164'                    __end_of___aomod:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function ___aodiv *****************
  4828 ;; Defined at:
  4829 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  dividend        8    2[COMRAM] long long 
  4832 ;;  divisor         8   10[COMRAM] long long 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  quotient        8   20[COMRAM] long long 
  4835 ;;  sign            1   19[COMRAM] unsigned char 
  4836 ;;  counter         1   18[COMRAM] unsigned char 
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  8    2[COMRAM] long long 
  4839 ;; Registers used:
  4840 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4846 ;;      Params:        16       0       0       0       0       0       0
  4847 ;;      Locals:        10       0       0       0       0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0
  4849 ;;      Totals:        26       0       0       0       0       0       0
  4850 ;;Total ram usage:       26 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 3
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_dtoa
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text13
  4861  0000'                    __ptext13:
  4862                           	callstack 0
  4863  0000'                    ___aodiv:
  4864                           	callstack 23
  4865  0000' 0E00               	movlw	0
  4866  0002' 6E00'              	movwf	___aodiv@sign^0,c
  4867  0004' BE00'              	btfsc	(___aodiv@divisor+7)^0,7,c
  4868  0006' EF00' F000'        	goto	u2430
  4869  000A' EF00' F000'        	goto	u2431
  4870  000E'                    u2431:
  4871  000E' EF00' F000'        	goto	l3199
  4872  0012'                    u2430:
  4873  0012' 1E00'              	comf	(___aodiv@divisor+7)^0,f,c
  4874  0014' 1E00'              	comf	(___aodiv@divisor+6)^0,f,c
  4875  0016' 1E00'              	comf	(___aodiv@divisor+5)^0,f,c
  4876  0018' 1E00'              	comf	(___aodiv@divisor+4)^0,f,c
  4877  001A' 1E00'              	comf	(___aodiv@divisor+3)^0,f,c
  4878  001C' 1E00'              	comf	(___aodiv@divisor+2)^0,f,c
  4879  001E' 1E00'              	comf	(___aodiv@divisor+1)^0,f,c
  4880  0020' 6C00'              	negf	___aodiv@divisor^0,c
  4881  0022' 0E00               	movlw	0
  4882  0024' 2200'              	addwfc	(___aodiv@divisor+1)^0,f,c
  4883  0026' 2200'              	addwfc	(___aodiv@divisor+2)^0,f,c
  4884  0028' 2200'              	addwfc	(___aodiv@divisor+3)^0,f,c
  4885  002A' 2200'              	addwfc	(___aodiv@divisor+4)^0,f,c
  4886  002C' 2200'              	addwfc	(___aodiv@divisor+5)^0,f,c
  4887  002E' 2200'              	addwfc	(___aodiv@divisor+6)^0,f,c
  4888  0030' 2200'              	addwfc	(___aodiv@divisor+7)^0,f,c
  4889  0032' 0E01               	movlw	1
  4890  0034' 6E00'              	movwf	___aodiv@sign^0,c
  4891  0036'                    l3199:
  4892  0036' BE00'              	btfsc	(___aodiv@dividend+7)^0,7,c
  4893  0038' EF00' F000'        	goto	u2440
  4894  003C' EF00' F000'        	goto	u2441
  4895  0040'                    u2441:
  4896  0040' EF00' F000'        	goto	l3205
  4897  0044'                    u2440:
  4898  0044' 1E00'              	comf	(___aodiv@dividend+7)^0,f,c
  4899  0046' 1E00'              	comf	(___aodiv@dividend+6)^0,f,c
  4900  0048' 1E00'              	comf	(___aodiv@dividend+5)^0,f,c
  4901  004A' 1E00'              	comf	(___aodiv@dividend+4)^0,f,c
  4902  004C' 1E00'              	comf	(___aodiv@dividend+3)^0,f,c
  4903  004E' 1E00'              	comf	(___aodiv@dividend+2)^0,f,c
  4904  0050' 1E00'              	comf	(___aodiv@dividend+1)^0,f,c
  4905  0052' 6C00'              	negf	___aodiv@dividend^0,c
  4906  0054' 0E00               	movlw	0
  4907  0056' 2200'              	addwfc	(___aodiv@dividend+1)^0,f,c
  4908  0058' 2200'              	addwfc	(___aodiv@dividend+2)^0,f,c
  4909  005A' 2200'              	addwfc	(___aodiv@dividend+3)^0,f,c
  4910  005C' 2200'              	addwfc	(___aodiv@dividend+4)^0,f,c
  4911  005E' 2200'              	addwfc	(___aodiv@dividend+5)^0,f,c
  4912  0060' 2200'              	addwfc	(___aodiv@dividend+6)^0,f,c
  4913  0062' 2200'              	addwfc	(___aodiv@dividend+7)^0,f,c
  4914  0064' 0E01               	movlw	1
  4915  0066' 1A00'              	xorwf	___aodiv@sign^0,f,c
  4916  0068'                    l3205:
  4917  0068' EE20' F000'        	lfsr	2,___aodiv@quotient
  4918  006C' 0E07               	movlw	7
  4919  006E'                    u2451:
  4920  006E' 6ADE               	clrf	postinc2,c
  4921  0070' 06E8               	decf	wreg,f,c
  4922  0072' E2FD               	bc	u2451
  4923  0074' 5000'              	movf	___aodiv@divisor^0,w,c
  4924  0076' 1000'              	iorwf	(___aodiv@divisor+1)^0,w,c
  4925  0078' 1000'              	iorwf	(___aodiv@divisor+2)^0,w,c
  4926  007A' 1000'              	iorwf	(___aodiv@divisor+3)^0,w,c
  4927  007C' 1000'              	iorwf	(___aodiv@divisor+4)^0,w,c
  4928  007E' 1000'              	iorwf	(___aodiv@divisor+5)^0,w,c
  4929  0080' 1000'              	iorwf	(___aodiv@divisor+6)^0,w,c
  4930  0082' 1000'              	iorwf	(___aodiv@divisor+7)^0,w,c
  4931  0084' B4D8               	btfsc	status,2,c
  4932  0086' EF00' F000'        	goto	u2461
  4933  008A' EF00' F000'        	goto	u2460
  4934  008E'                    u2461:
  4935  008E' EF00' F000'        	goto	l3227
  4936  0092'                    u2460:
  4937  0092' 0E01               	movlw	1
  4938  0094' 6E00'              	movwf	___aodiv@counter^0,c
  4939  0096' EF00' F000'        	goto	l3213
  4940  009A'                    l3211:
  4941  009A' 90D8               	bcf	status,0,c
  4942  009C' 3600'              	rlcf	___aodiv@divisor^0,f,c
  4943  009E' 3600'              	rlcf	(___aodiv@divisor+1)^0,f,c
  4944  00A0' 3600'              	rlcf	(___aodiv@divisor+2)^0,f,c
  4945  00A2' 3600'              	rlcf	(___aodiv@divisor+3)^0,f,c
  4946  00A4' 3600'              	rlcf	(___aodiv@divisor+4)^0,f,c
  4947  00A6' 3600'              	rlcf	(___aodiv@divisor+5)^0,f,c
  4948  00A8' 3600'              	rlcf	(___aodiv@divisor+6)^0,f,c
  4949  00AA' 3600'              	rlcf	(___aodiv@divisor+7)^0,f,c
  4950  00AC' 2A00'              	incf	___aodiv@counter^0,f,c
  4951  00AE'                    l3213:
  4952  00AE' AE00'              	btfss	(___aodiv@divisor+7)^0,7,c
  4953  00B0' EF00' F000'        	goto	u2471
  4954  00B4' EF00' F000'        	goto	u2470
  4955  00B8'                    u2471:
  4956  00B8' EF00' F000'        	goto	l3211
  4957  00BC'                    u2470:
  4958  00BC'                    l3215:
  4959  00BC' 90D8               	bcf	status,0,c
  4960  00BE' 3600'              	rlcf	___aodiv@quotient^0,f,c
  4961  00C0' 3600'              	rlcf	(___aodiv@quotient+1)^0,f,c
  4962  00C2' 3600'              	rlcf	(___aodiv@quotient+2)^0,f,c
  4963  00C4' 3600'              	rlcf	(___aodiv@quotient+3)^0,f,c
  4964  00C6' 3600'              	rlcf	(___aodiv@quotient+4)^0,f,c
  4965  00C8' 3600'              	rlcf	(___aodiv@quotient+5)^0,f,c
  4966  00CA' 3600'              	rlcf	(___aodiv@quotient+6)^0,f,c
  4967  00CC' 3600'              	rlcf	(___aodiv@quotient+7)^0,f,c
  4968  00CE' 5000'              	movf	___aodiv@divisor^0,w,c
  4969  00D0' 5C00'              	subwf	___aodiv@dividend^0,w,c
  4970  00D2' 5000'              	movf	(___aodiv@divisor+1)^0,w,c
  4971  00D4' 5800'              	subwfb	(___aodiv@dividend+1)^0,w,c
  4972  00D6' 5000'              	movf	(___aodiv@divisor+2)^0,w,c
  4973  00D8' 5800'              	subwfb	(___aodiv@dividend+2)^0,w,c
  4974  00DA' 5000'              	movf	(___aodiv@divisor+3)^0,w,c
  4975  00DC' 5800'              	subwfb	(___aodiv@dividend+3)^0,w,c
  4976  00DE' 5000'              	movf	(___aodiv@divisor+4)^0,w,c
  4977  00E0' 5800'              	subwfb	(___aodiv@dividend+4)^0,w,c
  4978  00E2' 5000'              	movf	(___aodiv@divisor+5)^0,w,c
  4979  00E4' 5800'              	subwfb	(___aodiv@dividend+5)^0,w,c
  4980  00E6' 5000'              	movf	(___aodiv@divisor+6)^0,w,c
  4981  00E8' 5800'              	subwfb	(___aodiv@dividend+6)^0,w,c
  4982  00EA' 5000'              	movf	(___aodiv@divisor+7)^0,w,c
  4983  00EC' 5800'              	subwfb	(___aodiv@dividend+7)^0,w,c
  4984  00EE' A0D8               	btfss	status,0,c
  4985  00F0' EF00' F000'        	goto	u2481
  4986  00F4' EF00' F000'        	goto	u2480
  4987  00F8'                    u2481:
  4988  00F8' EF00' F000'        	goto	l3223
  4989  00FC'                    u2480:
  4990  00FC' 5000'              	movf	___aodiv@divisor^0,w,c
  4991  00FE' 5E00'              	subwf	___aodiv@dividend^0,f,c
  4992  0100' 5000'              	movf	(___aodiv@divisor+1)^0,w,c
  4993  0102' 5A00'              	subwfb	(___aodiv@dividend+1)^0,f,c
  4994  0104' 5000'              	movf	(___aodiv@divisor+2)^0,w,c
  4995  0106' 5A00'              	subwfb	(___aodiv@dividend+2)^0,f,c
  4996  0108' 5000'              	movf	(___aodiv@divisor+3)^0,w,c
  4997  010A' 5A00'              	subwfb	(___aodiv@dividend+3)^0,f,c
  4998  010C' 5000'              	movf	(___aodiv@divisor+4)^0,w,c
  4999  010E' 5A00'              	subwfb	(___aodiv@dividend+4)^0,f,c
  5000  0110' 5000'              	movf	(___aodiv@divisor+5)^0,w,c
  5001  0112' 5A00'              	subwfb	(___aodiv@dividend+5)^0,f,c
  5002  0114' 5000'              	movf	(___aodiv@divisor+6)^0,w,c
  5003  0116' 5A00'              	subwfb	(___aodiv@dividend+6)^0,f,c
  5004  0118' 5000'              	movf	(___aodiv@divisor+7)^0,w,c
  5005  011A' 5A00'              	subwfb	(___aodiv@dividend+7)^0,f,c
  5006  011C' 8000'              	bsf	___aodiv@quotient^0,0,c
  5007  011E'                    l3223:
  5008  011E' 90D8               	bcf	status,0,c
  5009  0120' 3200'              	rrcf	(___aodiv@divisor+7)^0,f,c
  5010  0122' 3200'              	rrcf	(___aodiv@divisor+6)^0,f,c
  5011  0124' 3200'              	rrcf	(___aodiv@divisor+5)^0,f,c
  5012  0126' 3200'              	rrcf	(___aodiv@divisor+4)^0,f,c
  5013  0128' 3200'              	rrcf	(___aodiv@divisor+3)^0,f,c
  5014  012A' 3200'              	rrcf	(___aodiv@divisor+2)^0,f,c
  5015  012C' 3200'              	rrcf	(___aodiv@divisor+1)^0,f,c
  5016  012E' 3200'              	rrcf	___aodiv@divisor^0,f,c
  5017  0130' 2E00'              	decfsz	___aodiv@counter^0,f,c
  5018  0132' EF00' F000'        	goto	l3215
  5019  0136'                    l3227:
  5020  0136' 5000'              	movf	___aodiv@sign^0,w,c
  5021  0138' B4D8               	btfsc	status,2,c
  5022  013A' EF00' F000'        	goto	u2491
  5023  013E' EF00' F000'        	goto	u2490
  5024  0142'                    u2491:
  5025  0142' EF00' F000'        	goto	l3231
  5026  0146'                    u2490:
  5027  0146' 1E00'              	comf	(___aodiv@quotient+7)^0,f,c
  5028  0148' 1E00'              	comf	(___aodiv@quotient+6)^0,f,c
  5029  014A' 1E00'              	comf	(___aodiv@quotient+5)^0,f,c
  5030  014C' 1E00'              	comf	(___aodiv@quotient+4)^0,f,c
  5031  014E' 1E00'              	comf	(___aodiv@quotient+3)^0,f,c
  5032  0150' 1E00'              	comf	(___aodiv@quotient+2)^0,f,c
  5033  0152' 1E00'              	comf	(___aodiv@quotient+1)^0,f,c
  5034  0154' 6C00'              	negf	___aodiv@quotient^0,c
  5035  0156' 0E00               	movlw	0
  5036  0158' 2200'              	addwfc	(___aodiv@quotient+1)^0,f,c
  5037  015A' 2200'              	addwfc	(___aodiv@quotient+2)^0,f,c
  5038  015C' 2200'              	addwfc	(___aodiv@quotient+3)^0,f,c
  5039  015E' 2200'              	addwfc	(___aodiv@quotient+4)^0,f,c
  5040  0160' 2200'              	addwfc	(___aodiv@quotient+5)^0,f,c
  5041  0162' 2200'              	addwfc	(___aodiv@quotient+6)^0,f,c
  5042  0164' 2200'              	addwfc	(___aodiv@quotient+7)^0,f,c
  5043  0166'                    l3231:
  5044  0166' C014' F002'        	movff	___aodiv@quotient,?___aodiv
  5045  016A' C015' F003'        	movff	___aodiv@quotient+1,?___aodiv+1
  5046  016E' C016' F004'        	movff	___aodiv@quotient+2,?___aodiv+2
  5047  0172' C017' F005'        	movff	___aodiv@quotient+3,?___aodiv+3
  5048  0176' C018' F006'        	movff	___aodiv@quotient+4,?___aodiv+4
  5049  017A' C019' F007'        	movff	___aodiv@quotient+5,?___aodiv+5
  5050  017E' C01A' F008'        	movff	___aodiv@quotient+6,?___aodiv+6
  5051  0182' C01B' F009'        	movff	___aodiv@quotient+7,?___aodiv+7
  5052  0186' 0012               	return		;funcret
  5053  0188'                    __end_of___aodiv:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function _ctoa *****************
  5057 ;; Defined at:
  5058 ;;		line 406 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5061 ;;		 -> NULL(0), 
  5062 ;;  c               1   15[COMRAM] unsigned char 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  w               2   19[COMRAM] int 
  5065 ;;  l               2   17[COMRAM] int 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5075 ;;      Params:         3       0       0       0       0       0       0
  5076 ;;      Locals:         4       0       0       0       0       0       0
  5077 ;;      Temps:          1       0       0       0       0       0       0
  5078 ;;      Totals:         8       0       0       0       0       0       0
  5079 ;;Total ram usage:        8 bytes
  5080 ;; Hardware stack levels used: 1
  5081 ;; Hardware stack levels required when called: 6
  5082 ;; This function calls:
  5083 ;;		_fputc
  5084 ;; This function is called by:
  5085 ;;		_vfpfcnvrt
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text14
  5090  0000'                    __ptext14:
  5091                           	callstack 0
  5092  0000'                    _ctoa:
  5093                           	callstack 21
  5094  0000'                    
  5095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 406: static void 
      +                          ctoa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprn
      +                          t.c: 407: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 408:  
      +                             int l,w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 411:  
      +                             w = width ? width - 1 : width;
  5096  0000' 0100               	movlb	0	; () banked
  5097  0002' 5100'              	movf	_width& (0+255),w,b
  5098  0004' 1100'              	iorwf	(_width+1)& (0+255),w,b
  5099  0006' A4D8               	btfss	status,2,c
  5100  0008' EF00' F000'        	goto	u2721
  5101  000C' EF00' F000'        	goto	u2720
  5102  0010'                    u2721:
  5103  0010' EF00' F000'        	goto	l3351
  5104  0014'                    u2720:
  5105  0014'                    
  5106                           ; BSR set to: 0
  5107  0014' C000' F013'        	movff	_width,ctoa@w
  5108  0018' C001' F014'        	movff	_width+1,ctoa@w+1
  5109  001C' EF00' F000'        	goto	l3353
  5110  0020'                    l3351:
  5111                           
  5112                           ; BSR set to: 0
  5113  0020' 0EFF               	movlw	255
  5114  0022' 2500'              	addwf	_width& (0+255),w,b
  5115  0024' 6E00'              	movwf	ctoa@w^0,c
  5116  0026' 0EFF               	movlw	255
  5117  0028' 2100'              	addwfc	(_width+1)& (0+255),w,b
  5118  002A' 6E00'              	movwf	(ctoa@w+1)^0,c
  5119  002C'                    l3353:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 415:     if (flag
      +                          s & (1 << 0)) {
  5123  002C' A000'              	btfss	_flags^0,0,c
  5124  002E' EF00' F000'        	goto	u2731
  5125  0032' EF00' F000'        	goto	u2730
  5126  0036'                    u2731:
  5127  0036' EF00' F000'        	goto	l3357
  5128  003A'                    u2730:
  5129  003A'                    
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 416:         fput
      +                          c(c, fp);
  5132  003A' C00F' F004'        	movff	ctoa@c,fputc@c
  5133  003E' 6A00'              	clrf	(fputc@c+1)^0,c
  5134  0040' C00D' F006'        	movff	ctoa@fp,fputc@fp
  5135  0044' C00E' F007'        	movff	ctoa@fp+1,fputc@fp+1
  5136  0048' EC00' F000'        	call	_fputc	;wreg free
  5137  004C'                    l3357:
  5138                           
  5139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 421:     w = (w <
      +                           0) ? 0 : w;
  5140  004C' BE00'              	btfsc	(ctoa@w+1)^0,7,c
  5141  004E' EF00' F000'        	goto	u2741
  5142  0052' EF00' F000'        	goto	u2740
  5143  0056'                    u2741:
  5144  0056' EF00' F000'        	goto	l3361
  5145  005A'                    u2740:
  5146  005A' EF00' F000'        	goto	l1112
  5147  005E'                    l3361:
  5148  005E' 0E00               	movlw	0
  5149  0060' 6E00'              	movwf	(ctoa@w+1)^0,c
  5150  0062' 0E00               	movlw	0
  5151  0064' 6E00'              	movwf	ctoa@w^0,c
  5152  0066'                    l1112:
  5153                           
  5154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 422:     l = 0;
  5155  0066' 0E00               	movlw	0
  5156  0068' 6E00'              	movwf	(ctoa@l+1)^0,c
  5157  006A' 0E00               	movlw	0
  5158  006C' 6E00'              	movwf	ctoa@l^0,c
  5159                           
  5160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  5161  006E' EF00' F000'        	goto	l3367
  5162  0072'                    l3363:
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 424:         fput
      +                          c(' ', fp);
  5165  0072' 0E00               	movlw	0
  5166  0074' 6E00'              	movwf	(fputc@c+1)^0,c
  5167  0076' 0E20               	movlw	32
  5168  0078' 6E00'              	movwf	fputc@c^0,c
  5169  007A' C00D' F006'        	movff	ctoa@fp,fputc@fp
  5170  007E' C00E' F007'        	movff	ctoa@fp+1,fputc@fp+1
  5171  0082' EC00' F000'        	call	_fputc	;wreg free
  5172  0086'                    
  5173                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 425:         ++l;
  5174  0086' 4A00'              	infsnz	ctoa@l^0,f,c
  5175  0088' 2A00'              	incf	(ctoa@l+1)^0,f,c
  5176  008A'                    l3367:
  5177                           
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 423:     while (l
      +                           < w) {
  5179  008A' 5000'              	movf	ctoa@w^0,w,c
  5180  008C' 5C00'              	subwf	ctoa@l^0,w,c
  5181  008E' 5000'              	movf	(ctoa@l+1)^0,w,c
  5182  0090' 0A80               	xorlw	128
  5183  0092' 6E00'              	movwf	??_ctoa^0,c
  5184  0094' 5000'              	movf	(ctoa@w+1)^0,w,c
  5185  0096' 0A80               	xorlw	128
  5186  0098' 5800'              	subwfb	??_ctoa^0,w,c
  5187  009A' A0D8               	btfss	status,0,c
  5188  009C' EF00' F000'        	goto	u2751
  5189  00A0' EF00' F000'        	goto	u2750
  5190  00A4'                    u2751:
  5191  00A4' EF00' F000'        	goto	l3363
  5192  00A8'                    u2750:
  5193  00A8'                    
  5194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 429:     if (!(fl
      +                          ags & (1 << 0))) {
  5195  00A8' B000'              	btfsc	_flags^0,0,c
  5196  00AA' EF00' F000'        	goto	u2761
  5197  00AE' EF00' F000'        	goto	u2760
  5198  00B2'                    u2761:
  5199  00B2' EF00' F000'        	goto	l1117
  5200  00B6'                    u2760:
  5201  00B6'                    
  5202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 431:         fput
      +                          c(c, fp);
  5203  00B6' C00F' F004'        	movff	ctoa@c,fputc@c
  5204  00BA' 6A00'              	clrf	(fputc@c+1)^0,c
  5205  00BC' C00D' F006'        	movff	ctoa@fp,fputc@fp
  5206  00C0' C00E' F007'        	movff	ctoa@fp+1,fputc@fp+1
  5207  00C4' EC00' F000'        	call	_fputc	;wreg free
  5208  00C8'                    l1117:
  5209  00C8' 0012               	return		;funcret
  5210  00CA'                    __end_of_ctoa:
  5211                           	callstack 0
  5212                           
  5213 ;; *************** function _fputc *****************
  5214 ;; Defined at:
  5215 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;  c               2    4[COMRAM] int 
  5218 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5219 ;;		 -> NULL(0), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  2    4[COMRAM] int 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5231 ;;      Params:         4       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0
  5233 ;;      Temps:          5       0       0       0       0       0       0
  5234 ;;      Totals:         9       0       0       0       0       0       0
  5235 ;;Total ram usage:        9 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 5
  5238 ;; This function calls:
  5239 ;;		_putch
  5240 ;; This function is called by:
  5241 ;;		_pad
  5242 ;;		_ctoa
  5243 ;;		_vfpfcnvrt
  5244 ;;		_fputs
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text15
  5249  0000'                    __ptext15:
  5250                           	callstack 0
  5251  0000'                    _fputc:
  5252                           	callstack 19
  5253  0000' 5000'              	movf	fputc@fp^0,w,c
  5254  0002' 1000'              	iorwf	(fputc@fp+1)^0,w,c
  5255  0004' B4D8               	btfsc	status,2,c
  5256  0006' EF00' F000'        	goto	u2381
  5257  000A' EF00' F000'        	goto	u2380
  5258  000E'                    u2381:
  5259  000E' EF00' F000'        	goto	l3167
  5260  0012'                    u2380:
  5261  0012' 5000'              	movf	fputc@fp^0,w,c
  5262  0014' 1000'              	iorwf	(fputc@fp+1)^0,w,c
  5263  0016' A4D8               	btfss	status,2,c
  5264  0018' EF00' F000'        	goto	u2391
  5265  001C' EF00' F000'        	goto	u2390
  5266  0020'                    u2391:
  5267  0020' EF00' F000'        	goto	l3169
  5268  0024'                    u2390:
  5269  0024'                    l3167:
  5270  0024' 5000'              	movf	fputc@c^0,w,c
  5271  0026' EC00' F000'        	call	_putch
  5272  002A' EF00' F000'        	goto	l1267
  5273  002E'                    l3169:
  5274  002E' EE20 F009          	lfsr	2,9
  5275  0032' 5000'              	movf	fputc@fp^0,w,c
  5276  0034' 26D9               	addwf	fsr2l,f,c
  5277  0036' 5000'              	movf	(fputc@fp+1)^0,w,c
  5278  0038' 22DA               	addwfc	fsr2h,f,c
  5279  003A' 50DE               	movf	postinc2,w,c
  5280  003C' 10DE               	iorwf	postinc2,w,c
  5281  003E' B4D8               	btfsc	status,2,c
  5282  0040' EF00' F000'        	goto	u2401
  5283  0044' EF00' F000'        	goto	u2400
  5284  0048'                    u2401:
  5285  0048' EF00' F000'        	goto	l3173
  5286  004C'                    u2400:
  5287  004C' EE20 F009          	lfsr	2,9
  5288  0050' 5000'              	movf	fputc@fp^0,w,c
  5289  0052' 26D9               	addwf	fsr2l,f,c
  5290  0054' 5000'              	movf	(fputc@fp+1)^0,w,c
  5291  0056' 22DA               	addwfc	fsr2h,f,c
  5292  0058' EE10 F003          	lfsr	1,3
  5293  005C' 5000'              	movf	fputc@fp^0,w,c
  5294  005E' 26E1               	addwf	fsr1l,f,c
  5295  0060' 5000'              	movf	(fputc@fp+1)^0,w,c
  5296  0062' 22E2               	addwfc	fsr1h,f,c
  5297  0064' 50DE               	movf	postinc2,w,c
  5298  0066' 5CE6               	subwf	postinc1,w,c
  5299  0068' 50E6               	movf	postinc1,w,c
  5300  006A' 0A80               	xorlw	128
  5301  006C' 6E00'              	movwf	(??_fputc+4)^0,c
  5302  006E' 50DE               	movf	postinc2,w,c
  5303  0070' 0A80               	xorlw	128
  5304  0072' 5800'              	subwfb	(??_fputc+4)^0,w,c
  5305  0074' B0D8               	btfsc	status,0,c
  5306  0076' EF00' F000'        	goto	u2411
  5307  007A' EF00' F000'        	goto	u2410
  5308  007E'                    u2411:
  5309  007E' EF00' F000'        	goto	l1267
  5310  0082'                    u2410:
  5311  0082'                    l3173:
  5312  0082' EE20 F003          	lfsr	2,3
  5313  0086' 5000'              	movf	fputc@fp^0,w,c
  5314  0088' 26D9               	addwf	fsr2l,f,c
  5315  008A' 5000'              	movf	(fputc@fp+1)^0,w,c
  5316  008C' 22DA               	addwfc	fsr2h,f,c
  5317  008E' 2ADE               	incf	postinc2,f,c
  5318  0090' 0E00               	movlw	0
  5319  0092' 22DD               	addwfc	postdec2,f,c
  5320  0094'                    l1267:
  5321  0094' 0012               	return		;funcret
  5322  0096'                    __end_of_fputc:
  5323                           	callstack 0
  5324                           
  5325 ;; *************** function _putch *****************
  5326 ;; Defined at:
  5327 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  txData          1    wreg     unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;  txData          1    3[COMRAM] unsigned char 
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, cstack
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5341 ;;      Params:         0       0       0       0       0       0       0
  5342 ;;      Locals:         1       0       0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0
  5344 ;;      Totals:         1       0       0       0       0       0       0
  5345 ;;Total ram usage:        1 bytes
  5346 ;; Hardware stack levels used: 1
  5347 ;; Hardware stack levels required when called: 4
  5348 ;; This function calls:
  5349 ;;		_EUSART1_Write
  5350 ;; This function is called by:
  5351 ;;		_fputc
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text16
  5356  0000'                    __ptext16:
  5357                           	callstack 0
  5358  0000'                    _putch:
  5359                           	callstack 19
  5360                           
  5361                           ;incstack = 0
  5362                           ;putch@txData stored from wreg
  5363  0000' 6E00'              	movwf	putch@txData^0,c
  5364  0002'                    
  5365                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  5366  0002' 5000'              	movf	putch@txData^0,w,c
  5367  0004' EC00' F000'        	call	_EUSART1_Write
  5368  0008' 0012               	return		;funcret
  5369  000A'                    __end_of_putch:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function _EUSART1_Write *****************
  5373 ;; Defined at:
  5374 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  txData          1    wreg     unsigned char 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  txData          1    2[COMRAM] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5388 ;;      Params:         0       0       0       0       0       0       0
  5389 ;;      Locals:         1       0       0       0       0       0       0
  5390 ;;      Temps:          0       0       0       0       0       0       0
  5391 ;;      Totals:         1       0       0       0       0       0       0
  5392 ;;Total ram usage:        1 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 3
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_putch
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text17
  5403  0000'                    __ptext17:
  5404                           	callstack 0
  5405  0000'                    _EUSART1_Write:
  5406                           	callstack 19
  5407                           
  5408                           ;incstack = 0
  5409                           ;EUSART1_Write@txData stored from wreg
  5410  0000' 6E00'              	movwf	EUSART1_Write@txData^0,c
  5411  0002'                    l195:
  5412                           
  5413                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  5414  0002' A89E               	btfss	158,4,c	;volatile
  5415  0004' EF00' F000'        	goto	u2371
  5416  0008' EF00' F000'        	goto	u2370
  5417  000C'                    u2371:
  5418  000C' EF00' F000'        	goto	l195
  5419  0010'                    u2370:
  5420  0010'                    
  5421                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  5422  0010' C002' FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  5423  0014' 0012               	return		;funcret
  5424  0016'                    __end_of_EUSART1_Write:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _atoi *****************
  5428 ;; Defined at:
  5429 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  s               2    8[COMRAM] PTR const unsigned char 
  5432 ;;		 -> STR_33(17), STR_32(27), STR_31(29), STR_30(25), 
  5433 ;;		 -> STR_29(42), STR_28(25), STR_27(22), STR_26(31), 
  5434 ;;		 -> STR_25(31), STR_24(2), STR_23(2), STR_22(8), 
  5435 ;;		 -> STR_21(52), STR_20(17), STR_19(24), STR_18(41), 
  5436 ;;		 -> STR_17(26), STR_16(26), STR_15(23), STR_14(9), 
  5437 ;;		 -> STR_13(17), STR_12(52), STR_11(30), STR_10(34), 
  5438 ;;		 -> STR_9(52), STR_8(5), STR_7(44), STR_6(40), 
  5439 ;;		 -> STR_5(45), STR_4(41), STR_3(22), STR_2(25), 
  5440 ;;		 -> STR_1(9), 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  n               2   15[COMRAM] int 
  5443 ;;  neg             2   13[COMRAM] int 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2    8[COMRAM] int 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5453 ;;      Params:         2       0       0       0       0       0       0
  5454 ;;      Locals:         4       0       0       0       0       0       0
  5455 ;;      Temps:          3       0       0       0       0       0       0
  5456 ;;      Totals:         9       0       0       0       0       0       0
  5457 ;;Total ram usage:        9 bytes
  5458 ;; Hardware stack levels used: 1
  5459 ;; Hardware stack levels required when called: 4
  5460 ;; This function calls:
  5461 ;;		___wmul
  5462 ;;		_isdigit
  5463 ;;		_isspace
  5464 ;; This function is called by:
  5465 ;;		_vfpfcnvrt
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text18
  5470  0000'                    __ptext18:
  5471                           	callstack 0
  5472  0000'                    _atoi:
  5473                           	callstack 23
  5474  0000' 0E00               	movlw	0
  5475  0002' 6E00'              	movwf	(atoi@n+1)^0,c
  5476  0004' 0E00               	movlw	0
  5477  0006' 6E00'              	movwf	atoi@n^0,c
  5478  0008' 0E00               	movlw	0
  5479  000A' 6E00'              	movwf	(atoi@neg+1)^0,c
  5480  000C' 0E00               	movlw	0
  5481  000E' 6E00'              	movwf	atoi@neg^0,c
  5482  0010' EF00' F000'        	goto	l3519
  5483  0014'                    l3515:
  5484  0014' 4A00'              	infsnz	atoi@s^0,f,c
  5485  0016' 2A00'              	incf	(atoi@s+1)^0,f,c
  5486  0018'                    l3519:
  5487  0018' C008' FFF6         	movff	atoi@s,tblptrl
  5488  001C' C009' FFF7         	movff	atoi@s+1,tblptrh
  5489  0020'                    	if	0	;tblptru may be non-zero
  5490  0020'                    	endif
  5491  0020'                    	if	0	;tblptru may be non-zero
  5492  0020'                    	endif
  5493  0020' 0008               	tblrd		*
  5494  0022' 50F5               	movf	tablat,w,c
  5495  0024' 0A20               	xorlw	32
  5496  0026' B4D8               	btfsc	status,2,c
  5497  0028' EF00' F000'        	goto	u3061
  5498  002C' EF00' F000'        	goto	u3060
  5499  0030'                    u3061:
  5500  0030' EF00' F000'        	goto	l3515
  5501  0034'                    u3060:
  5502  0034' C008' FFF6         	movff	atoi@s,tblptrl
  5503  0038' C009' FFF7         	movff	atoi@s+1,tblptrh
  5504  003C'                    	if	0	;tblptru may be non-zero
  5505  003C'                    	endif
  5506  003C'                    	if	0	;tblptru may be non-zero
  5507  003C'                    	endif
  5508  003C' 0008               	tblrd		*
  5509  003E' CFF5 F00A'         	movff	tablat,??_atoi
  5510  0042' 0EF7               	movlw	247
  5511  0044' 2400'              	addwf	??_atoi^0,w,c
  5512  0046' 6E00'              	movwf	(??_atoi+1)^0,c
  5513  0048' 6A00'              	clrf	(??_atoi+2)^0,c
  5514  004A' 0EFF               	movlw	255
  5515  004C' 2200'              	addwfc	(??_atoi+2)^0,f,c
  5516  004E' 5000'              	movf	(??_atoi+2)^0,w,c
  5517  0050' E109               	bnz	u3070
  5518  0052' 0E05               	movlw	5
  5519  0054' 5C00'              	subwf	(??_atoi+1)^0,w,c
  5520  0056' A0D8               	btfss	status,0,c
  5521  0058' EF00' F000'        	goto	u3071
  5522  005C' EF00' F000'        	goto	u3070
  5523  0060'                    u3071:
  5524  0060' EF00' F000'        	goto	l3515
  5525  0064'                    u3070:
  5526  0064' EF00' F000'        	goto	l3527
  5527  0068'                    l3523:
  5528  0068' 0E00               	movlw	0
  5529  006A' 6E00'              	movwf	(atoi@neg+1)^0,c
  5530  006C' 0E01               	movlw	1
  5531  006E' 6E00'              	movwf	atoi@neg^0,c
  5532  0070'                    l3525:
  5533  0070' 4A00'              	infsnz	atoi@s^0,f,c
  5534  0072' 2A00'              	incf	(atoi@s+1)^0,f,c
  5535  0074' EF00' F000'        	goto	l3535
  5536  0078'                    l3527:
  5537  0078' C008' FFF6         	movff	atoi@s,tblptrl
  5538  007C' C009' FFF7         	movff	atoi@s+1,tblptrh
  5539  0080'                    	if	0	;tblptru may be non-zero
  5540  0080'                    	endif
  5541  0080'                    	if	0	;tblptru may be non-zero
  5542  0080'                    	endif
  5543  0080' 0008               	tblrd		*
  5544  0082' 50F5               	movf	tablat,w,c
  5545  0084' 6E00'              	movwf	??_atoi^0,c
  5546  0086' 6A00'              	clrf	(??_atoi+1)^0,c
  5547                           
  5548                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5549                           ; Switch size 1, requested type "simple"
  5550                           ; Number of cases is 1, Range of values is 0 to 0
  5551                           ; switch strategies available:
  5552                           ; Name         Instructions Cycles
  5553                           ; simple_byte            4     3 (average)
  5554                           ;	Chosen strategy is simple_byte
  5555  0088' 5000'              	movf	(??_atoi+1)^0,w,c
  5556  008A' 0A00               	xorlw	0	; case 0
  5557  008C' B4D8               	btfsc	status,2,c
  5558  008E' EF00' F000'        	goto	l3883
  5559  0092' EF00' F000'        	goto	l3535
  5560  0096'                    l3883:
  5561                           
  5562                           ; Switch size 1, requested type "simple"
  5563                           ; Number of cases is 2, Range of values is 43 to 45
  5564                           ; switch strategies available:
  5565                           ; Name         Instructions Cycles
  5566                           ; simple_byte            7     4 (average)
  5567                           ;	Chosen strategy is simple_byte
  5568  0096' 5000'              	movf	??_atoi^0,w,c
  5569  0098' 0A2B               	xorlw	43	; case 43
  5570  009A' B4D8               	btfsc	status,2,c
  5571  009C' EF00' F000'        	goto	l3525
  5572  00A0' 0A06               	xorlw	6	; case 45
  5573  00A2' B4D8               	btfsc	status,2,c
  5574  00A4' EF00' F000'        	goto	l3523
  5575  00A8' EF00' F000'        	goto	l3535
  5576  00AC'                    l3529:
  5577  00AC' C00F' F002'        	movff	atoi@n,___wmul@multiplier
  5578  00B0' C010' F003'        	movff	atoi@n+1,___wmul@multiplier+1
  5579  00B4' 0E00               	movlw	0
  5580  00B6' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  5581  00B8' 0E0A               	movlw	10
  5582  00BA' 6E00'              	movwf	___wmul@multiplicand^0,c
  5583  00BC' EC00' F000'        	call	___wmul	;wreg free
  5584  00C0' C008' FFF6         	movff	atoi@s,tblptrl
  5585  00C4' C009' FFF7         	movff	atoi@s+1,tblptrh
  5586  00C8'                    	if	0	;tblptru may be non-zero
  5587  00C8'                    	endif
  5588  00C8'                    	if	0	;tblptru may be non-zero
  5589  00C8'                    	endif
  5590  00C8' 0008               	tblrd		*
  5591  00CA' 50F5               	movf	tablat,w,c
  5592  00CC' 5E00'              	subwf	?___wmul^0,f,c
  5593  00CE' 0E00               	movlw	0
  5594  00D0' 5A00'              	subwfb	(?___wmul+1)^0,f,c
  5595  00D2' 0E30               	movlw	48
  5596  00D4' 2400'              	addwf	?___wmul^0,w,c
  5597  00D6' 6E00'              	movwf	atoi@n^0,c
  5598  00D8' 0E00               	movlw	0
  5599  00DA' 2000'              	addwfc	(?___wmul+1)^0,w,c
  5600  00DC' 6E00'              	movwf	(atoi@n+1)^0,c
  5601  00DE' EF00' F000'        	goto	l3525
  5602  00E2'                    l3535:
  5603  00E2' C008' FFF6         	movff	atoi@s,tblptrl
  5604  00E6' C009' FFF7         	movff	atoi@s+1,tblptrh
  5605  00EA'                    	if	0	;tblptru may be non-zero
  5606  00EA'                    	endif
  5607  00EA'                    	if	0	;tblptru may be non-zero
  5608  00EA'                    	endif
  5609  00EA' 0008               	tblrd		*
  5610  00EC' CFF5 F00A'         	movff	tablat,??_atoi
  5611  00F0' 0ED0               	movlw	208
  5612  00F2' 2400'              	addwf	??_atoi^0,w,c
  5613  00F4' 6E00'              	movwf	(??_atoi+1)^0,c
  5614  00F6' 6A00'              	clrf	(??_atoi+2)^0,c
  5615  00F8' 0EFF               	movlw	255
  5616  00FA' 2200'              	addwfc	(??_atoi+2)^0,f,c
  5617  00FC' 5000'              	movf	(??_atoi+2)^0,w,c
  5618  00FE' E109               	bnz	u3080
  5619  0100' 0E0A               	movlw	10
  5620  0102' 5C00'              	subwf	(??_atoi+1)^0,w,c
  5621  0104' A0D8               	btfss	status,0,c
  5622  0106' EF00' F000'        	goto	u3081
  5623  010A' EF00' F000'        	goto	u3080
  5624  010E'                    u3081:
  5625  010E' EF00' F000'        	goto	l3529
  5626  0112'                    u3080:
  5627  0112' 5000'              	movf	atoi@neg^0,w,c
  5628  0114' 1000'              	iorwf	(atoi@neg+1)^0,w,c
  5629  0116' A4D8               	btfss	status,2,c
  5630  0118' EF00' F000'        	goto	u3091
  5631  011C' EF00' F000'        	goto	u3090
  5632  0120'                    u3091:
  5633  0120' EF00' F000'        	goto	l1238
  5634  0124'                    u3090:
  5635  0124' C00F' F00A'        	movff	atoi@n,??_atoi
  5636  0128' C010' F00B'        	movff	atoi@n+1,??_atoi+1
  5637  012C' 1E00'              	comf	??_atoi^0,f,c
  5638  012E' 1E00'              	comf	(??_atoi+1)^0,f,c
  5639  0130' 4A00'              	infsnz	??_atoi^0,f,c
  5640  0132' 2A00'              	incf	(??_atoi+1)^0,f,c
  5641  0134' C00A' F008'        	movff	??_atoi,?_atoi
  5642  0138' C00B' F009'        	movff	??_atoi+1,?_atoi+1
  5643  013C' EF00' F000'        	goto	l1241
  5644  0140'                    l1238:
  5645  0140' C00F' F008'        	movff	atoi@n,?_atoi
  5646  0144' C010' F009'        	movff	atoi@n+1,?_atoi+1
  5647  0148'                    l1241:
  5648  0148' 0012               	return		;funcret
  5649  014A'                    __end_of_atoi:
  5650                           	callstack 0
  5651                           
  5652 ;; *************** function _isspace *****************
  5653 ;; Defined at:
  5654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  5655 ;; Parameters:    Size  Location     Type
  5656 ;;  c               2    2[COMRAM] int 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;		None
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  2    2[COMRAM] int 
  5661 ;; Registers used:
  5662 ;;		wreg, status,2, status,0
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5668 ;;      Params:         2       0       0       0       0       0       0
  5669 ;;      Locals:         1       0       0       0       0       0       0
  5670 ;;      Temps:          2       0       0       0       0       0       0
  5671 ;;      Totals:         5       0       0       0       0       0       0
  5672 ;;Total ram usage:        5 bytes
  5673 ;; Hardware stack levels used: 1
  5674 ;; Hardware stack levels required when called: 3
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_atoi
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text19
  5683  0000'                    __ptext19:
  5684                           	callstack 0
  5685  0000'                    _isspace:
  5686                           	callstack 23
  5687  0000' 0E01               	movlw	1
  5688  0002' 6E00'              	movwf	_isspace$1602^0,c
  5689  0004' 0E20               	movlw	32
  5690  0006' 1800'              	xorwf	isspace@c^0,w,c
  5691  0008' 1000'              	iorwf	(isspace@c+1)^0,w,c
  5692  000A' B4D8               	btfsc	status,2,c
  5693  000C' EF00' F000'        	goto	u2701
  5694  0010' EF00' F000'        	goto	u2700
  5695  0014'                    u2701:
  5696  0014' EF00' F000'        	goto	l3343
  5697  0018'                    u2700:
  5698  0018' 0EF7               	movlw	247
  5699  001A' 2400'              	addwf	isspace@c^0,w,c
  5700  001C' 6E00'              	movwf	??_isspace^0,c
  5701  001E' 0EFF               	movlw	255
  5702  0020' 2000'              	addwfc	(isspace@c+1)^0,w,c
  5703  0022' 6E00'              	movwf	(??_isspace+1)^0,c
  5704  0024' 5000'              	movf	(??_isspace+1)^0,w,c
  5705  0026' E109               	bnz	u2710
  5706  0028' 0E05               	movlw	5
  5707  002A' 5C00'              	subwf	??_isspace^0,w,c
  5708  002C' A0D8               	btfss	status,0,c
  5709  002E' EF00' F000'        	goto	u2711
  5710  0032' EF00' F000'        	goto	u2710
  5711  0036'                    u2711:
  5712  0036' EF00' F000'        	goto	l3343
  5713  003A'                    u2710:
  5714  003A' 0E00               	movlw	0
  5715  003C' 6E00'              	movwf	_isspace$1602^0,c
  5716  003E'                    l3343:
  5717  003E' C006' F002'        	movff	_isspace$1602,?_isspace
  5718  0042' 6A00'              	clrf	(?_isspace+1)^0,c
  5719  0044' 0012               	return		;funcret
  5720  0046'                    __end_of_isspace:
  5721                           	callstack 0
  5722                           
  5723 ;; *************** function _isdigit *****************
  5724 ;; Defined at:
  5725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  c               2    2[COMRAM] int 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;		None
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  2    2[COMRAM] int 
  5732 ;; Registers used:
  5733 ;;		wreg, status,2, status,0
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5739 ;;      Params:         2       0       0       0       0       0       0
  5740 ;;      Locals:         0       0       0       0       0       0       0
  5741 ;;      Temps:          2       0       0       0       0       0       0
  5742 ;;      Totals:         4       0       0       0       0       0       0
  5743 ;;Total ram usage:        4 bytes
  5744 ;; Hardware stack levels used: 1
  5745 ;; Hardware stack levels required when called: 3
  5746 ;; This function calls:
  5747 ;;		Nothing
  5748 ;; This function is called by:
  5749 ;;		_vfpfcnvrt
  5750 ;;		_atoi
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text20
  5755  0000'                    __ptext20:
  5756                           	callstack 0
  5757  0000'                    _isdigit:
  5758                           	callstack 24
  5759  0000' 0ED0               	movlw	208
  5760  0002' 2400'              	addwf	isdigit@c^0,w,c
  5761  0004' 6E00'              	movwf	??_isdigit^0,c
  5762  0006' 0EFF               	movlw	255
  5763  0008' 2000'              	addwfc	(isdigit@c+1)^0,w,c
  5764  000A' 6E00'              	movwf	(??_isdigit+1)^0,c
  5765  000C' 5000'              	movf	(??_isdigit+1)^0,w,c
  5766  000E' E10A               	bnz	u2680
  5767  0010' 0E0A               	movlw	10
  5768  0012' 5C00'              	subwf	??_isdigit^0,w,c
  5769  0014' A0D8               	btfss	status,0,c
  5770  0016' EF00' F000'        	goto	u2681
  5771  001A' EF00' F000'        	goto	u2680
  5772  001E'                    u2681:
  5773  001E' 0E01               	movlw	1
  5774  0020' EF00' F000'        	goto	u2690
  5775  0024'                    u2680:
  5776  0024' 0E00               	movlw	0
  5777  0026'                    u2690:
  5778  0026' 6E00'              	movwf	?_isdigit^0,c
  5779  0028' 6A00'              	clrf	(?_isdigit+1)^0,c
  5780  002A' 0012               	return		;funcret
  5781  002C'                    __end_of_isdigit:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function ___wmul *****************
  5785 ;; Defined at:
  5786 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  multiplier      2    2[COMRAM] unsigned int 
  5789 ;;  multiplicand    2    4[COMRAM] unsigned int 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  product         2    6[COMRAM] unsigned int 
  5792 ;; Return value:  Size  Location     Type
  5793 ;;                  2    2[COMRAM] unsigned int 
  5794 ;; Registers used:
  5795 ;;		wreg, status,2, status,0, prodl, prodh
  5796 ;; Tracked objects:
  5797 ;;		On entry : 0/0
  5798 ;;		On exit  : 0/0
  5799 ;;		Unchanged: 0/0
  5800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5801 ;;      Params:         4       0       0       0       0       0       0
  5802 ;;      Locals:         2       0       0       0       0       0       0
  5803 ;;      Temps:          0       0       0       0       0       0       0
  5804 ;;      Totals:         6       0       0       0       0       0       0
  5805 ;;Total ram usage:        6 bytes
  5806 ;; Hardware stack levels used: 1
  5807 ;; Hardware stack levels required when called: 3
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;;		_atoi
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text21
  5817  0000'                    __ptext21:
  5818                           	callstack 0
  5819  0000'                    ___wmul:
  5820                           	callstack 23
  5821  0000' 5000'              	movf	___wmul@multiplier^0,w,c
  5822  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
  5823  0004' CFF3 F006'         	movff	prodl,___wmul@product
  5824  0008' CFF4 F007'         	movff	prodh,___wmul@product+1
  5825  000C' 5000'              	movf	___wmul@multiplier^0,w,c
  5826  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
  5827  0010' 50F3               	movf	243,w,c
  5828  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
  5829  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
  5830  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
  5831  0018' 50F3               	movf	243,w,c
  5832  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
  5833  001C' C006' F002'        	movff	___wmul@product,?___wmul
  5834  0020' C007' F003'        	movff	___wmul@product+1,?___wmul+1
  5835  0024' 0012               	return		;funcret
  5836  0026'                    __end_of___wmul:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function ___lwdiv *****************
  5840 ;; Defined at:
  5841 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  dividend        2    8[COMRAM] unsigned int 
  5844 ;;  divisor         2   10[COMRAM] unsigned int 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  quotient        2   12[COMRAM] unsigned int 
  5847 ;;  counter         1   14[COMRAM] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2    8[COMRAM] unsigned int 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5857 ;;      Params:         4       0       0       0       0       0       0
  5858 ;;      Locals:         3       0       0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0
  5860 ;;      Totals:         7       0       0       0       0       0       0
  5861 ;;Total ram usage:        7 bytes
  5862 ;; Hardware stack levels used: 1
  5863 ;; Hardware stack levels required when called: 3
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_main
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           	psect	text22
  5872  0000'                    __ptext22:
  5873                           	callstack 0
  5874  0000'                    ___lwdiv:
  5875                           	callstack 27
  5876  0000' 0E00               	movlw	0
  5877  0002' 6E00'              	movwf	(___lwdiv@quotient+1)^0,c
  5878  0004' 0E00               	movlw	0
  5879  0006' 6E00'              	movwf	___lwdiv@quotient^0,c
  5880  0008' 5000'              	movf	___lwdiv@divisor^0,w,c
  5881  000A' 1000'              	iorwf	(___lwdiv@divisor+1)^0,w,c
  5882  000C' B4D8               	btfsc	status,2,c
  5883  000E' EF00' F000'        	goto	u2181
  5884  0012' EF00' F000'        	goto	u2180
  5885  0016'                    u2181:
  5886  0016' EF00' F000'        	goto	l882
  5887  001A'                    u2180:
  5888  001A' 0E01               	movlw	1
  5889  001C' 6E00'              	movwf	___lwdiv@counter^0,c
  5890  001E' EF00' F000'        	goto	l2905
  5891  0022'                    l2903:
  5892  0022' 90D8               	bcf	status,0,c
  5893  0024' 3600'              	rlcf	___lwdiv@divisor^0,f,c
  5894  0026' 3600'              	rlcf	(___lwdiv@divisor+1)^0,f,c
  5895  0028' 2A00'              	incf	___lwdiv@counter^0,f,c
  5896  002A'                    l2905:
  5897  002A' AE00'              	btfss	(___lwdiv@divisor+1)^0,7,c
  5898  002C' EF00' F000'        	goto	u2191
  5899  0030' EF00' F000'        	goto	u2190
  5900  0034'                    u2191:
  5901  0034' EF00' F000'        	goto	l2903
  5902  0038'                    u2190:
  5903  0038'                    l2907:
  5904  0038' 90D8               	bcf	status,0,c
  5905  003A' 3600'              	rlcf	___lwdiv@quotient^0,f,c
  5906  003C' 3600'              	rlcf	(___lwdiv@quotient+1)^0,f,c
  5907  003E' 5000'              	movf	___lwdiv@divisor^0,w,c
  5908  0040' 5C00'              	subwf	___lwdiv@dividend^0,w,c
  5909  0042' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
  5910  0044' 5800'              	subwfb	(___lwdiv@dividend+1)^0,w,c
  5911  0046' A0D8               	btfss	status,0,c
  5912  0048' EF00' F000'        	goto	u2201
  5913  004C' EF00' F000'        	goto	u2200
  5914  0050'                    u2201:
  5915  0050' EF00' F000'        	goto	l2915
  5916  0054'                    u2200:
  5917  0054' 5000'              	movf	___lwdiv@divisor^0,w,c
  5918  0056' 5E00'              	subwf	___lwdiv@dividend^0,f,c
  5919  0058' 5000'              	movf	(___lwdiv@divisor+1)^0,w,c
  5920  005A' 5A00'              	subwfb	(___lwdiv@dividend+1)^0,f,c
  5921  005C' 8000'              	bsf	___lwdiv@quotient^0,0,c
  5922  005E'                    l2915:
  5923  005E' 90D8               	bcf	status,0,c
  5924  0060' 3200'              	rrcf	(___lwdiv@divisor+1)^0,f,c
  5925  0062' 3200'              	rrcf	___lwdiv@divisor^0,f,c
  5926  0064' 2E00'              	decfsz	___lwdiv@counter^0,f,c
  5927  0066' EF00' F000'        	goto	l2907
  5928  006A'                    l882:
  5929  006A' C00C' F008'        	movff	___lwdiv@quotient,?___lwdiv
  5930  006E' C00D' F009'        	movff	___lwdiv@quotient+1,?___lwdiv+1
  5931  0072' 0012               	return		;funcret
  5932  0074'                    __end_of___lwdiv:
  5933                           	callstack 0
  5934                           
  5935 ;; *************** function ___lmul *****************
  5936 ;; Defined at:
  5937 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul32.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  multiplier      4    2[COMRAM] unsigned long 
  5940 ;;  multiplicand    4    6[COMRAM] unsigned long 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  product         4   10[COMRAM] unsigned long 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  4    2[COMRAM] unsigned long 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5952 ;;      Params:         8       0       0       0       0       0       0
  5953 ;;      Locals:         4       0       0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0
  5955 ;;      Totals:        12       0       0       0       0       0       0
  5956 ;;Total ram usage:       12 bytes
  5957 ;; Hardware stack levels used: 1
  5958 ;; Hardware stack levels required when called: 3
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_main
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text23
  5967  0000'                    __ptext23:
  5968                           	callstack 0
  5969  0000'                    ___lmul:
  5970                           	callstack 27
  5971  0000' 0E00               	movlw	0
  5972  0002' 6E00'              	movwf	___lmul@product^0,c
  5973  0004' 0E00               	movlw	0
  5974  0006' 6E00'              	movwf	(___lmul@product+1)^0,c
  5975  0008' 0E00               	movlw	0
  5976  000A' 6E00'              	movwf	(___lmul@product+2)^0,c
  5977  000C' 0E00               	movlw	0
  5978  000E' 6E00'              	movwf	(___lmul@product+3)^0,c
  5979  0010'                    l2867:
  5980  0010' A000'              	btfss	___lmul@multiplier^0,0,c
  5981  0012' EF00' F000'        	goto	u2131
  5982  0016' EF00' F000'        	goto	u2130
  5983  001A'                    u2131:
  5984  001A' EF00' F000'        	goto	l2871
  5985  001E'                    u2130:
  5986  001E' 5000'              	movf	___lmul@multiplicand^0,w,c
  5987  0020' 2600'              	addwf	___lmul@product^0,f,c
  5988  0022' 5000'              	movf	(___lmul@multiplicand+1)^0,w,c
  5989  0024' 2200'              	addwfc	(___lmul@product+1)^0,f,c
  5990  0026' 5000'              	movf	(___lmul@multiplicand+2)^0,w,c
  5991  0028' 2200'              	addwfc	(___lmul@product+2)^0,f,c
  5992  002A' 5000'              	movf	(___lmul@multiplicand+3)^0,w,c
  5993  002C' 2200'              	addwfc	(___lmul@product+3)^0,f,c
  5994  002E'                    l2871:
  5995  002E' 90D8               	bcf	status,0,c
  5996  0030' 3600'              	rlcf	___lmul@multiplicand^0,f,c
  5997  0032' 3600'              	rlcf	(___lmul@multiplicand+1)^0,f,c
  5998  0034' 3600'              	rlcf	(___lmul@multiplicand+2)^0,f,c
  5999  0036' 3600'              	rlcf	(___lmul@multiplicand+3)^0,f,c
  6000  0038' 90D8               	bcf	status,0,c
  6001  003A' 3200'              	rrcf	(___lmul@multiplier+3)^0,f,c
  6002  003C' 3200'              	rrcf	(___lmul@multiplier+2)^0,f,c
  6003  003E' 3200'              	rrcf	(___lmul@multiplier+1)^0,f,c
  6004  0040' 3200'              	rrcf	___lmul@multiplier^0,f,c
  6005  0042' 5000'              	movf	___lmul@multiplier^0,w,c
  6006  0044' 1000'              	iorwf	(___lmul@multiplier+1)^0,w,c
  6007  0046' 1000'              	iorwf	(___lmul@multiplier+2)^0,w,c
  6008  0048' 1000'              	iorwf	(___lmul@multiplier+3)^0,w,c
  6009  004A' A4D8               	btfss	status,2,c
  6010  004C' EF00' F000'        	goto	u2141
  6011  0050' EF00' F000'        	goto	u2140
  6012  0054'                    u2141:
  6013  0054' EF00' F000'        	goto	l2867
  6014  0058'                    u2140:
  6015  0058' C00A' F002'        	movff	___lmul@product,?___lmul
  6016  005C' C00B' F003'        	movff	___lmul@product+1,?___lmul+1
  6017  0060' C00C' F004'        	movff	___lmul@product+2,?___lmul+2
  6018  0064' C00D' F005'        	movff	___lmul@product+3,?___lmul+3
  6019  0068' 0012               	return		;funcret
  6020  006A'                    __end_of___lmul:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function ___lldiv *****************
  6024 ;; Defined at:
  6025 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__lldiv.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  dividend        4    2[COMRAM] unsigned long 
  6028 ;;  divisor         4    6[COMRAM] unsigned long 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  quotient        4   10[COMRAM] unsigned long 
  6031 ;;  counter         1   14[COMRAM] unsigned char 
  6032 ;; Return value:  Size  Location     Type
  6033 ;;                  4    2[COMRAM] unsigned long 
  6034 ;; Registers used:
  6035 ;;		wreg, status,2, status,0
  6036 ;; Tracked objects:
  6037 ;;		On entry : 0/0
  6038 ;;		On exit  : 0/0
  6039 ;;		Unchanged: 0/0
  6040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6041 ;;      Params:         8       0       0       0       0       0       0
  6042 ;;      Locals:         5       0       0       0       0       0       0
  6043 ;;      Temps:          0       0       0       0       0       0       0
  6044 ;;      Totals:        13       0       0       0       0       0       0
  6045 ;;Total ram usage:       13 bytes
  6046 ;; Hardware stack levels used: 1
  6047 ;; Hardware stack levels required when called: 3
  6048 ;; This function calls:
  6049 ;;		Nothing
  6050 ;; This function is called by:
  6051 ;;		_main
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text24
  6056  0000'                    __ptext24:
  6057                           	callstack 0
  6058  0000'                    ___lldiv:
  6059                           	callstack 27
  6060  0000' 0E00               	movlw	0
  6061  0002' 6E00'              	movwf	___lldiv@quotient^0,c
  6062  0004' 0E00               	movlw	0
  6063  0006' 6E00'              	movwf	(___lldiv@quotient+1)^0,c
  6064  0008' 0E00               	movlw	0
  6065  000A' 6E00'              	movwf	(___lldiv@quotient+2)^0,c
  6066  000C' 0E00               	movlw	0
  6067  000E' 6E00'              	movwf	(___lldiv@quotient+3)^0,c
  6068  0010' 5000'              	movf	___lldiv@divisor^0,w,c
  6069  0012' 1000'              	iorwf	(___lldiv@divisor+1)^0,w,c
  6070  0014' 1000'              	iorwf	(___lldiv@divisor+2)^0,w,c
  6071  0016' 1000'              	iorwf	(___lldiv@divisor+3)^0,w,c
  6072  0018' B4D8               	btfsc	status,2,c
  6073  001A' EF00' F000'        	goto	u2151
  6074  001E' EF00' F000'        	goto	u2150
  6075  0022'                    u2151:
  6076  0022' EF00' F000'        	goto	l418
  6077  0026'                    u2150:
  6078  0026' 0E01               	movlw	1
  6079  0028' 6E00'              	movwf	___lldiv@counter^0,c
  6080  002A' EF00' F000'        	goto	l2883
  6081  002E'                    l2881:
  6082  002E' 90D8               	bcf	status,0,c
  6083  0030' 3600'              	rlcf	___lldiv@divisor^0,f,c
  6084  0032' 3600'              	rlcf	(___lldiv@divisor+1)^0,f,c
  6085  0034' 3600'              	rlcf	(___lldiv@divisor+2)^0,f,c
  6086  0036' 3600'              	rlcf	(___lldiv@divisor+3)^0,f,c
  6087  0038' 2A00'              	incf	___lldiv@counter^0,f,c
  6088  003A'                    l2883:
  6089  003A' AE00'              	btfss	(___lldiv@divisor+3)^0,7,c
  6090  003C' EF00' F000'        	goto	u2161
  6091  0040' EF00' F000'        	goto	u2160
  6092  0044'                    u2161:
  6093  0044' EF00' F000'        	goto	l2881
  6094  0048'                    u2160:
  6095  0048'                    l2885:
  6096  0048' 90D8               	bcf	status,0,c
  6097  004A' 3600'              	rlcf	___lldiv@quotient^0,f,c
  6098  004C' 3600'              	rlcf	(___lldiv@quotient+1)^0,f,c
  6099  004E' 3600'              	rlcf	(___lldiv@quotient+2)^0,f,c
  6100  0050' 3600'              	rlcf	(___lldiv@quotient+3)^0,f,c
  6101  0052' 5000'              	movf	___lldiv@divisor^0,w,c
  6102  0054' 5C00'              	subwf	___lldiv@dividend^0,w,c
  6103  0056' 5000'              	movf	(___lldiv@divisor+1)^0,w,c
  6104  0058' 5800'              	subwfb	(___lldiv@dividend+1)^0,w,c
  6105  005A' 5000'              	movf	(___lldiv@divisor+2)^0,w,c
  6106  005C' 5800'              	subwfb	(___lldiv@dividend+2)^0,w,c
  6107  005E' 5000'              	movf	(___lldiv@divisor+3)^0,w,c
  6108  0060' 5800'              	subwfb	(___lldiv@dividend+3)^0,w,c
  6109  0062' A0D8               	btfss	status,0,c
  6110  0064' EF00' F000'        	goto	u2171
  6111  0068' EF00' F000'        	goto	u2170
  6112  006C'                    u2171:
  6113  006C' EF00' F000'        	goto	l2893
  6114  0070'                    u2170:
  6115  0070' 5000'              	movf	___lldiv@divisor^0,w,c
  6116  0072' 5E00'              	subwf	___lldiv@dividend^0,f,c
  6117  0074' 5000'              	movf	(___lldiv@divisor+1)^0,w,c
  6118  0076' 5A00'              	subwfb	(___lldiv@dividend+1)^0,f,c
  6119  0078' 5000'              	movf	(___lldiv@divisor+2)^0,w,c
  6120  007A' 5A00'              	subwfb	(___lldiv@dividend+2)^0,f,c
  6121  007C' 5000'              	movf	(___lldiv@divisor+3)^0,w,c
  6122  007E' 5A00'              	subwfb	(___lldiv@dividend+3)^0,f,c
  6123  0080' 8000'              	bsf	___lldiv@quotient^0,0,c
  6124  0082'                    l2893:
  6125  0082' 90D8               	bcf	status,0,c
  6126  0084' 3200'              	rrcf	(___lldiv@divisor+3)^0,f,c
  6127  0086' 3200'              	rrcf	(___lldiv@divisor+2)^0,f,c
  6128  0088' 3200'              	rrcf	(___lldiv@divisor+1)^0,f,c
  6129  008A' 3200'              	rrcf	___lldiv@divisor^0,f,c
  6130  008C' 2E00'              	decfsz	___lldiv@counter^0,f,c
  6131  008E' EF00' F000'        	goto	l2885
  6132  0092'                    l418:
  6133  0092' C00A' F002'        	movff	___lldiv@quotient,?___lldiv
  6134  0096' C00B' F003'        	movff	___lldiv@quotient+1,?___lldiv+1
  6135  009A' C00C' F004'        	movff	___lldiv@quotient+2,?___lldiv+2
  6136  009E' C00D' F005'        	movff	___lldiv@quotient+3,?___lldiv+3
  6137  00A2' 0012               	return		;funcret
  6138  00A4'                    __end_of___lldiv:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _TMR1_WriteTimer *****************
  6142 ;; Defined at:
  6143 ;;		line 114 in file "mcc_generated_files/tmr1.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  timerVal        2    2[COMRAM] unsigned short 
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6157 ;;      Params:         2       0       0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0
  6160 ;;      Totals:         2       0       0       0       0       0       0
  6161 ;;Total ram usage:        2 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 3
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_main
  6168 ;;		_TMR1_Reload
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text25
  6173  0000'                    __ptext25:
  6174                           	callstack 0
  6175  0000'                    _TMR1_WriteTimer:
  6176                           	callstack 27
  6177  0000'                    
  6178                           ;mcc_generated_files/tmr1.c: 114: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 115: {;mcc_generated_files/tmr1.c: 116:     if (T1CONbits.T1SYNC == 1)
  6179  0000' A4CD               	btfss	205,2,c	;volatile
  6180  0002' EF00' F000'        	goto	u2111
  6181  0006' EF00' F000'        	goto	u2110
  6182  000A'                    u2111:
  6183  000A' EF00' F000'        	goto	l2835
  6184  000E'                    u2110:
  6185  000E'                    
  6186                           ;mcc_generated_files/tmr1.c: 117:     {;mcc_generated_files/tmr1.c: 119:         T1CONbi
      +                          ts.TMR1ON = 0;
  6187  000E' 90CD               	bcf	205,0,c	;volatile
  6188  0010'                    
  6189                           ;mcc_generated_files/tmr1.c: 122:         TMR1H = (uint8_t)(timerVal >> 8);
  6190  0010' 5000'              	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  6191  0012' 6ECF               	movwf	207,c	;volatile
  6192  0014'                    
  6193                           ;mcc_generated_files/tmr1.c: 123:         TMR1L = (uint8_t)timerVal;
  6194  0014' C002' FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  6195  0018'                    
  6196                           ;mcc_generated_files/tmr1.c: 126:         T1CONbits.TMR1ON =1;
  6197  0018' 80CD               	bsf	205,0,c	;volatile
  6198                           
  6199                           ;mcc_generated_files/tmr1.c: 127:     }
  6200  001A' EF00' F000'        	goto	l257
  6201  001E'                    l2835:
  6202                           
  6203                           ;mcc_generated_files/tmr1.c: 129:     {;mcc_generated_files/tmr1.c: 131:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  6204  001E' 5000'              	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  6205  0020' 6ECF               	movwf	207,c	;volatile
  6206  0022'                    
  6207                           ;mcc_generated_files/tmr1.c: 132:         TMR1L = (uint8_t)timerVal;
  6208  0022' C002' FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  6209  0026'                    l257:
  6210  0026' 0012               	return		;funcret
  6211  0028'                    __end_of_TMR1_WriteTimer:
  6212                           	callstack 0
  6213                           
  6214 ;; *************** function _TMR1_HasOverflowOccured *****************
  6215 ;; Defined at:
  6216 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      _Bool 
  6223 ;; Registers used:
  6224 ;;		wreg
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6230 ;;      Params:         0       0       0       0       0       0       0
  6231 ;;      Locals:         0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0
  6233 ;;      Totals:         0       0       0       0       0       0       0
  6234 ;;Total ram usage:        0 bytes
  6235 ;; Hardware stack levels used: 1
  6236 ;; Hardware stack levels required when called: 3
  6237 ;; This function calls:
  6238 ;;		Nothing
  6239 ;; This function is called by:
  6240 ;;		_main
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text26
  6245  0000'                    __ptext26:
  6246                           	callstack 0
  6247  0000'                    _TMR1_HasOverflowOccured:
  6248                           	callstack 27
  6249  0000'                    
  6250                           ;mcc_generated_files/tmr1.c: 154:     return(PIR1bits.TMR1IF);
  6251  0000' B09E               	btfsc	158,0,c	;volatile
  6252  0002' EF00' F000'        	goto	u2121
  6253  0006' EF00' F000'        	goto	u2120
  6254  000A'                    u2121:
  6255  000A' 0E01               	movlw	1
  6256  000C' EF00' F000'        	goto	u2126
  6257  0010'                    u2120:
  6258  0010' 0E00               	movlw	0
  6259  0012'                    u2126:
  6260  0012' 0012               	return		;funcret
  6261  0014'                    __end_of_TMR1_HasOverflowOccured:
  6262                           	callstack 0
  6263                           
  6264 ;; *************** function _TMR0_WriteTimer *****************
  6265 ;; Defined at:
  6266 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  timerVal        2    2[COMRAM] unsigned short 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;		None
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  1    wreg      void 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6280 ;;      Params:         2       0       0       0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0
  6283 ;;      Totals:         2       0       0       0       0       0       0
  6284 ;;Total ram usage:        2 bytes
  6285 ;; Hardware stack levels used: 1
  6286 ;; Hardware stack levels required when called: 3
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text27
  6295  0000'                    __ptext27:
  6296                           	callstack 0
  6297  0000'                    _TMR0_WriteTimer:
  6298                           	callstack 27
  6299  0000'                    
  6300                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  6301  0000' 5000'              	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  6302  0002' 6ED7               	movwf	215,c	;volatile
  6303  0004'                    
  6304                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  6305  0004' C002' FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  6306  0008' 0012               	return		;funcret
  6307  000A'                    __end_of_TMR0_WriteTimer:
  6308                           	callstack 0
  6309                           
  6310 ;; *************** function _SYSTEM_Initialize *****************
  6311 ;; Defined at:
  6312 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6326 ;;      Params:         0       0       0       0       0       0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0       0       0
  6329 ;;      Totals:         0       0       0       0       0       0       0
  6330 ;;Total ram usage:        0 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 5
  6333 ;; This function calls:
  6334 ;;		_EPWM1_Initialize
  6335 ;;		_EUSART1_Initialize
  6336 ;;		_INTERRUPT_Initialize
  6337 ;;		_OSCILLATOR_Initialize
  6338 ;;		_PIN_MANAGER_Initialize
  6339 ;;		_TMR0_Initialize
  6340 ;;		_TMR1_Initialize
  6341 ;;		_TMR2_Initialize
  6342 ;; This function is called by:
  6343 ;;		_main
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text28
  6348  0000'                    __ptext28:
  6349                           	callstack 0
  6350  0000'                    _SYSTEM_Initialize:
  6351                           	callstack 25
  6352  0000'                    
  6353                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6354  0000' EC00' F000'        	call	_INTERRUPT_Initialize	;wreg free
  6355  0004'                    
  6356                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  6357  0004' EC00' F000'        	call	_PIN_MANAGER_Initialize	;wreg free
  6358  0008'                    
  6359                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  6360  0008' EC00' F000'        	call	_OSCILLATOR_Initialize	;wreg free
  6361  000C'                    
  6362                           ;mcc_generated_files/mcc.c: 56:     EPWM1_Initialize();
  6363  000C' EC00' F000'        	call	_EPWM1_Initialize	;wreg free
  6364  0010'                    
  6365                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  6366  0010' EC00' F000'        	call	_TMR2_Initialize	;wreg free
  6367  0014'                    
  6368                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  6369  0014' EC00' F000'        	call	_TMR1_Initialize	;wreg free
  6370  0018'                    
  6371                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  6372  0018' EC00' F000'        	call	_TMR0_Initialize	;wreg free
  6373  001C'                    
  6374                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  6375  001C' EC00' F000'        	call	_EUSART1_Initialize	;wreg free
  6376  0020' 0012               	return		;funcret
  6377  0022'                    __end_of_SYSTEM_Initialize:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function _TMR2_Initialize *****************
  6381 ;; Defined at:
  6382 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;		None
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;		None
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      void 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6396 ;;      Params:         0       0       0       0       0       0       0
  6397 ;;      Locals:         0       0       0       0       0       0       0
  6398 ;;      Temps:          0       0       0       0       0       0       0
  6399 ;;      Totals:         0       0       0       0       0       0       0
  6400 ;;Total ram usage:        0 bytes
  6401 ;; Hardware stack levels used: 1
  6402 ;; Hardware stack levels required when called: 3
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_SYSTEM_Initialize
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text29
  6411  0000'                    __ptext29:
  6412                           	callstack 0
  6413  0000'                    _TMR2_Initialize:
  6414                           	callstack 26
  6415  0000'                    
  6416                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  6417  0000' 0E3F               	movlw	63
  6418  0002' 6EBB               	movwf	187,c	;volatile
  6419                           
  6420                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  6421  0004' 0E00               	movlw	0
  6422  0006' 6EBC               	movwf	188,c	;volatile
  6423  0008'                    
  6424                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  6425  0008' 929E               	bcf	158,1,c	;volatile
  6426                           
  6427                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  6428  000A' 0E05               	movlw	5
  6429  000C' 6EBA               	movwf	186,c	;volatile
  6430  000E' 0012               	return		;funcret
  6431  0010'                    __end_of_TMR2_Initialize:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function _TMR1_Initialize *****************
  6435 ;; Defined at:
  6436 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;		None
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;                  1    wreg      void 
  6443 ;; Registers used:
  6444 ;;		wreg, status,2
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6450 ;;      Params:         0       0       0       0       0       0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0
  6452 ;;      Temps:          0       0       0       0       0       0       0
  6453 ;;      Totals:         0       0       0       0       0       0       0
  6454 ;;Total ram usage:        0 bytes
  6455 ;; Hardware stack levels used: 1
  6456 ;; Hardware stack levels required when called: 3
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_SYSTEM_Initialize
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464                           	psect	text30
  6465  0000'                    __ptext30:
  6466                           	callstack 0
  6467  0000'                    _TMR1_Initialize:
  6468                           	callstack 26
  6469  0000'                    
  6470                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  6471  0000' 0E00               	movlw	0
  6472  0002' 6ECC               	movwf	204,c	;volatile
  6473                           
  6474                           ;mcc_generated_files/tmr1.c: 71:     TMR1H = 0xE0;
  6475  0004' 0EE0               	movlw	224
  6476  0006' 6ECF               	movwf	207,c	;volatile
  6477                           
  6478                           ;mcc_generated_files/tmr1.c: 74:     TMR1L = 0x00;
  6479  0008' 0E00               	movlw	0
  6480  000A' 6ECE               	movwf	206,c	;volatile
  6481  000C'                    
  6482                           ;mcc_generated_files/tmr1.c: 77:     timer1ReloadVal=TMR1;
  6483  000C' CFCE F002'         	movff	4046,_timer1ReloadVal	;volatile
  6484  0010' CFCF F003'         	movff	4047,_timer1ReloadVal+1	;volatile
  6485  0014'                    
  6486                           ;mcc_generated_files/tmr1.c: 80:     PIR1bits.TMR1IF = 0;
  6487  0014' 909E               	bcf	158,0,c	;volatile
  6488                           
  6489                           ;mcc_generated_files/tmr1.c: 83:     T1CON = 0x31;
  6490  0016' 0E31               	movlw	49
  6491  0018' 6ECD               	movwf	205,c	;volatile
  6492  001A' 0012               	return		;funcret
  6493  001C'                    __end_of_TMR1_Initialize:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function _TMR0_Initialize *****************
  6497 ;; Defined at:
  6498 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6512 ;;      Params:         0       0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0
  6514 ;;      Temps:          2       0       0       0       0       0       0
  6515 ;;      Totals:         2       0       0       0       0       0       0
  6516 ;;Total ram usage:        2 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 4
  6519 ;; This function calls:
  6520 ;;		_TMR0_SetInterruptHandler
  6521 ;; This function is called by:
  6522 ;;		_SYSTEM_Initialize
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text31
  6527  0000'                    __ptext31:
  6528                           	callstack 0
  6529  0000'                    _TMR0_Initialize:
  6530                           	callstack 25
  6531  0000'                    
  6532                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  6533  0000' 9CD5               	bcf	213,6,c	;volatile
  6534  0002'                    
  6535                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xE0;
  6536  0002' 0EE0               	movlw	224
  6537  0004' 6ED7               	movwf	215,c	;volatile
  6538                           
  6539                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0xBF;
  6540  0006' 0EBF               	movlw	191
  6541  0008' 6ED6               	movwf	214,c	;volatile
  6542  000A'                    
  6543                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  6544  000A' 50D6               	movf	214,w,c	;volatile
  6545  000C' CFD7 F004'         	movff	4055,??_TMR0_Initialize	;volatile
  6546  0010' 6A00'              	clrf	(??_TMR0_Initialize+1)^0,c
  6547  0012' C004' F005'        	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6548  0016' 6A00'              	clrf	??_TMR0_Initialize^0,c
  6549  0018' 1000'              	iorwf	??_TMR0_Initialize^0,w,c
  6550  001A' 0100               	movlb	0	; () banked
  6551  001C' 6F00'              	movwf	_timer0ReloadVal& (0+255),b	;volatile
  6552  001E' 5000'              	movf	(??_TMR0_Initialize+1)^0,w,c
  6553  0020' 6F00'              	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  6554  0022'                    
  6555                           ; BSR set to: 0
  6556                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  6557  0022' 94F2               	bcf	242,2,c	;volatile
  6558  0024'                    
  6559                           ; BSR set to: 0
  6560                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  6561  0024' 8AF2               	bsf	242,5,c	;volatile
  6562  0026'                    
  6563                           ; BSR set to: 0
  6564                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6565  0026' 0E00'              	movlw	low _TMR0_DefaultInterruptHandler
  6566  0028' 6E00'              	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  6567  002A' 0E00'              	movlw	high _TMR0_DefaultInterruptHandler
  6568  002C' 6E00'              	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  6569  002E' EC00' F000'        	call	_TMR0_SetInterruptHandler	;wreg free
  6570  0032'                    
  6571                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x98;
  6572  0032' 0E98               	movlw	152
  6573  0034' 6ED5               	movwf	213,c	;volatile
  6574  0036' 0012               	return		;funcret
  6575  0038'                    __end_of_TMR0_Initialize:
  6576                           	callstack 0
  6577                           
  6578 ;; *************** function _TMR0_SetInterruptHandler *****************
  6579 ;; Defined at:
  6580 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
  6583 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;		None
  6586 ;; Return value:  Size  Location     Type
  6587 ;;                  1    wreg      void 
  6588 ;; Registers used:
  6589 ;;		wreg, status,2, status,0
  6590 ;; Tracked objects:
  6591 ;;		On entry : 0/0
  6592 ;;		On exit  : 0/0
  6593 ;;		Unchanged: 0/0
  6594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6595 ;;      Params:         2       0       0       0       0       0       0
  6596 ;;      Locals:         0       0       0       0       0       0       0
  6597 ;;      Temps:          0       0       0       0       0       0       0
  6598 ;;      Totals:         2       0       0       0       0       0       0
  6599 ;;Total ram usage:        2 bytes
  6600 ;; Hardware stack levels used: 1
  6601 ;; Hardware stack levels required when called: 3
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		_TMR0_Initialize
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text32
  6610  0000'                    __ptext32:
  6611                           	callstack 0
  6612  0000'                    _TMR0_SetInterruptHandler:
  6613                           	callstack 25
  6614  0000'                    
  6615                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  6616  0000' C002' F00C'        	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6617  0004' C003' F00D'        	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6618  0008' 0012               	return		;funcret
  6619  000A'                    __end_of_TMR0_SetInterruptHandler:
  6620                           	callstack 0
  6621                           
  6622 ;; *************** function _PIN_MANAGER_Initialize *****************
  6623 ;; Defined at:
  6624 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6638 ;;      Params:         0       0       0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 3
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_SYSTEM_Initialize
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text33
  6653  0000'                    __ptext33:
  6654                           	callstack 0
  6655  0000'                    _PIN_MANAGER_Initialize:
  6656                           	callstack 26
  6657  0000'                    
  6658                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  6659  0000' 0E00               	movlw	0
  6660  0002' 6E89               	movwf	137,c	;volatile
  6661                           
  6662                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  6663  0004' 0E00               	movlw	0
  6664  0006' 6E8A               	movwf	138,c	;volatile
  6665                           
  6666                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  6667  0008' 0E00               	movlw	0
  6668  000A' 6E8B               	movwf	139,c	;volatile
  6669  000C'                    
  6670                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  6671  000C' 6892               	setf	146,c	;volatile
  6672  000E'                    
  6673                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  6674  000E' 6893               	setf	147,c	;volatile
  6675                           
  6676                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  6677  0010' 0EBB               	movlw	187
  6678  0012' 6E94               	movwf	148,c	;volatile
  6679                           
  6680                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  6681  0014' 0E3C               	movlw	60
  6682  0016' 010F               	movlb	15	; () banked
  6683  0018' 6F3A               	movwf	58,b	;volatile
  6684                           
  6685                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  6686  001A' 0E3F               	movlw	63
  6687  001C' 6F39               	movwf	57,b	;volatile
  6688                           
  6689                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  6690  001E' 0E2F               	movlw	47
  6691  0020' 6F38               	movwf	56,b	;volatile
  6692                           
  6693                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  6694  0022' 0E00               	movlw	0
  6695  0024' 6E61               	movwf	97,c	;volatile
  6696  0026'                    
  6697                           ; BSR set to: 15
  6698                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  6699  0026' 8EF1               	bsf	241,7,c	;volatile
  6700  0028'                    
  6701                           ; BSR set to: 15
  6702  0028' 0012               	return		;funcret
  6703  002A'                    __end_of_PIN_MANAGER_Initialize:
  6704                           	callstack 0
  6705                           
  6706 ;; *************** function _OSCILLATOR_Initialize *****************
  6707 ;; Defined at:
  6708 ;;		line 63 in file "mcc_generated_files/mcc.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, status,2
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6722 ;;      Params:         0       0       0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used: 1
  6728 ;; Hardware stack levels required when called: 3
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_SYSTEM_Initialize
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text34
  6737  0000'                    __ptext34:
  6738                           	callstack 0
  6739  0000'                    _OSCILLATOR_Initialize:
  6740                           	callstack 26
  6741  0000'                    
  6742                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  6743  0000' 0E70               	movlw	112
  6744  0002' 6ED3               	movwf	211,c	;volatile
  6745                           
  6746                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  6747  0004' 0E04               	movlw	4
  6748  0006' 6ED2               	movwf	210,c	;volatile
  6749                           
  6750                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x40;
  6751  0008' 0E40               	movlw	64
  6752  000A' 6E9B               	movwf	155,c	;volatile
  6753  000C'                    l299:
  6754                           
  6755                           ;mcc_generated_files/mcc.c: 72:     while(PLLRDY == 0)
  6756  000C' AED2               	btfss	4050,7,c	;volatile
  6757  000E' EF00' F000'        	goto	u2041
  6758  0012' EF00' F000'        	goto	u2040
  6759  0016'                    u2041:
  6760  0016' EF00' F000'        	goto	l299
  6761  001A'                    u2040:
  6762  001A' 0012               	return		;funcret
  6763  001C'                    __end_of_OSCILLATOR_Initialize:
  6764                           	callstack 0
  6765                           
  6766 ;; *************** function _INTERRUPT_Initialize *****************
  6767 ;; Defined at:
  6768 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;		None
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		None
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6782 ;;      Params:         0       0       0       0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0
  6784 ;;      Temps:          0       0       0       0       0       0       0
  6785 ;;      Totals:         0       0       0       0       0       0       0
  6786 ;;Total ram usage:        0 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 3
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_SYSTEM_Initialize
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           	psect	text35
  6797  0000'                    __ptext35:
  6798                           	callstack 0
  6799  0000'                    _INTERRUPT_Initialize:
  6800                           	callstack 26
  6801  0000'                    
  6802                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6803  0000' 9ED0               	bcf	208,7,c	;volatile
  6804  0002' 0012               	return		;funcret
  6805  0004'                    __end_of_INTERRUPT_Initialize:
  6806                           	callstack 0
  6807                           
  6808 ;; *************** function _EUSART1_Initialize *****************
  6809 ;; Defined at:
  6810 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  6811 ;; Parameters:    Size  Location     Type
  6812 ;;		None
  6813 ;; Auto vars:     Size  Location     Type
  6814 ;;		None
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  1    wreg      void 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, cstack
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6824 ;;      Params:         0       0       0       0       0       0       0
  6825 ;;      Locals:         0       0       0       0       0       0       0
  6826 ;;      Temps:          0       0       0       0       0       0       0
  6827 ;;      Totals:         0       0       0       0       0       0       0
  6828 ;;Total ram usage:        0 bytes
  6829 ;; Hardware stack levels used: 1
  6830 ;; Hardware stack levels required when called: 4
  6831 ;; This function calls:
  6832 ;;		_EUSART1_SetErrorHandler
  6833 ;;		_EUSART1_SetFramingErrorHandler
  6834 ;;		_EUSART1_SetOverrunErrorHandler
  6835 ;; This function is called by:
  6836 ;;		_SYSTEM_Initialize
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           	psect	text36
  6841  0000'                    __ptext36:
  6842                           	callstack 0
  6843  0000'                    _EUSART1_Initialize:
  6844                           	callstack 25
  6845  0000'                    
  6846                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  6847  0000' 0E08               	movlw	8
  6848  0002' 6EB8               	movwf	184,c	;volatile
  6849                           
  6850                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  6851  0004' 0E90               	movlw	144
  6852  0006' 6EAB               	movwf	171,c	;volatile
  6853                           
  6854                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  6855  0008' 0E24               	movlw	36
  6856  000A' 6EAC               	movwf	172,c	;volatile
  6857                           
  6858                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  6859  000C' 0E82               	movlw	130
  6860  000E' 6EAF               	movwf	175,c	;volatile
  6861                           
  6862                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  6863  0010' 0E06               	movlw	6
  6864  0012' 6EB0               	movwf	176,c	;volatile
  6865  0014'                    
  6866                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  6867  0014' 0E00               	movlw	0
  6868  0016' 6E00'              	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  6869  0018' 0E00               	movlw	0
  6870  001A' 6E00'              	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  6871  001C' EC00' F000'        	call	_EUSART1_SetFramingErrorHandler	;wreg free
  6872  0020'                    
  6873                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  6874  0020' 0E00               	movlw	0
  6875  0022' 6E00'              	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  6876  0024' 0E00               	movlw	0
  6877  0026' 6E00'              	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  6878  0028' EC00' F000'        	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  6879  002C'                    
  6880                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  6881  002C' 0E00               	movlw	0
  6882  002E' 6E00'              	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  6883  0030' 0E00               	movlw	0
  6884  0032' 6E00'              	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  6885  0034' EC00' F000'        	call	_EUSART1_SetErrorHandler	;wreg free
  6886  0038'                    
  6887                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  6888  0038' 0E00               	movlw	0
  6889  003A' 0100               	movlb	0	; () banked
  6890  003C' 6F00'              	movwf	_eusart1RxLastError& (0+255),b	;volatile
  6891  003E'                    
  6892                           ; BSR set to: 0
  6893  003E' 0012               	return		;funcret
  6894  0040'                    __end_of_EUSART1_Initialize:
  6895                           	callstack 0
  6896                           
  6897 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  6898 ;; Defined at:
  6899 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  6900 ;; Parameters:    Size  Location     Type
  6901 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  6902 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6914 ;;      Params:         2       0       0       0       0       0       0
  6915 ;;      Locals:         0       0       0       0       0       0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0
  6917 ;;      Totals:         2       0       0       0       0       0       0
  6918 ;;Total ram usage:        2 bytes
  6919 ;; Hardware stack levels used: 1
  6920 ;; Hardware stack levels required when called: 3
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_EUSART1_Initialize
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text37
  6929  0000'                    __ptext37:
  6930                           	callstack 0
  6931  0000'                    _EUSART1_SetOverrunErrorHandler:
  6932                           	callstack 25
  6933  0000'                    
  6934                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  6935  0000' C002' F006'        	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  6936  0004' C003' F007'        	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  6937  0008' 0012               	return		;funcret
  6938  000A'                    __end_of_EUSART1_SetOverrunErrorHandler:
  6939                           	callstack 0
  6940                           
  6941 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  6942 ;; Defined at:
  6943 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  6946 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6958 ;;      Params:         2       0       0       0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0
  6961 ;;      Totals:         2       0       0       0       0       0       0
  6962 ;;Total ram usage:        2 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; Hardware stack levels required when called: 3
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_EUSART1_Initialize
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text38
  6973  0000'                    __ptext38:
  6974                           	callstack 0
  6975  0000'                    _EUSART1_SetFramingErrorHandler:
  6976                           	callstack 25
  6977  0000'                    
  6978                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  6979  0000' C002' F008'        	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  6980  0004' C003' F009'        	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  6981  0008' 0012               	return		;funcret
  6982  000A'                    __end_of_EUSART1_SetFramingErrorHandler:
  6983                           	callstack 0
  6984                           
  6985 ;; *************** function _EUSART1_SetErrorHandler *****************
  6986 ;; Defined at:
  6987 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  interruptHan    2    2[COMRAM] PTR FTN()void 
  6990 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7002 ;;      Params:         2       0       0       0       0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0
  7005 ;;      Totals:         2       0       0       0       0       0       0
  7006 ;;Total ram usage:        2 bytes
  7007 ;; Hardware stack levels used: 1
  7008 ;; Hardware stack levels required when called: 3
  7009 ;; This function calls:
  7010 ;;		Nothing
  7011 ;; This function is called by:
  7012 ;;		_EUSART1_Initialize
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text39
  7017  0000'                    __ptext39:
  7018                           	callstack 0
  7019  0000'                    _EUSART1_SetErrorHandler:
  7020                           	callstack 25
  7021  0000'                    
  7022                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  7023  0000' C002' F004'        	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7024  0004' C003' F005'        	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7025  0008' 0012               	return		;funcret
  7026  000A'                    __end_of_EUSART1_SetErrorHandler:
  7027                           	callstack 0
  7028                           
  7029 ;; *************** function _EPWM1_Initialize *****************
  7030 ;; Defined at:
  7031 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;		None
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7045 ;;      Params:         0       0       0       0       0       0       0
  7046 ;;      Locals:         0       0       0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0       0       0
  7048 ;;      Totals:         0       0       0       0       0       0       0
  7049 ;;Total ram usage:        0 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 3
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_SYSTEM_Initialize
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text40
  7060  0000'                    __ptext40:
  7061                           	callstack 0
  7062  0000'                    _EPWM1_Initialize:
  7063                           	callstack 26
  7064  0000'                    
  7065                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  7066  0000' 0E3C               	movlw	60
  7067  0002' 6EBD               	movwf	189,c	;volatile
  7068                           
  7069                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  7070  0004' 0E00               	movlw	0
  7071  0006' 6EB6               	movwf	182,c	;volatile
  7072                           
  7073                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  7074  0008' 0E80               	movlw	128
  7075  000A' 6EB7               	movwf	183,c	;volatile
  7076                           
  7077                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  7078  000C' 0E01               	movlw	1
  7079  000E' 6EB9               	movwf	185,c	;volatile
  7080                           
  7081                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  7082  0010' 0E00               	movlw	0
  7083  0012' 6EBF               	movwf	191,c	;volatile
  7084                           
  7085                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  7086  0014' 0E1F               	movlw	31
  7087  0016' 6EBE               	movwf	190,c	;volatile
  7088                           
  7089                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  7090  0018' 0EFC               	movlw	-4
  7091  001A' 010F               	movlb	15	; () banked
  7092  001C' 1749               	andwf	73,f,b	;volatile
  7093  001E'                    
  7094                           ; BSR set to: 15
  7095  001E' 0012               	return		;funcret
  7096  0020'                    __end_of_EPWM1_Initialize:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function _EUSART1_is_rx_ready *****************
  7100 ;; Defined at:
  7101 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;		None
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;		None
  7106 ;; Return value:  Size  Location     Type
  7107 ;;                  1    wreg      _Bool 
  7108 ;; Registers used:
  7109 ;;		wreg
  7110 ;; Tracked objects:
  7111 ;;		On entry : 0/0
  7112 ;;		On exit  : 0/0
  7113 ;;		Unchanged: 0/0
  7114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7115 ;;      Params:         0       0       0       0       0       0       0
  7116 ;;      Locals:         0       0       0       0       0       0       0
  7117 ;;      Temps:          0       0       0       0       0       0       0
  7118 ;;      Totals:         0       0       0       0       0       0       0
  7119 ;;Total ram usage:        0 bytes
  7120 ;; Hardware stack levels used: 1
  7121 ;; Hardware stack levels required when called: 3
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_main
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text41
  7130  0000'                    __ptext41:
  7131                           	callstack 0
  7132  0000'                    _EUSART1_is_rx_ready:
  7133                           	callstack 27
  7134  0000'                    
  7135                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7136  0000' BA9E               	btfsc	158,5,c	;volatile
  7137  0002' EF00' F000'        	goto	u2081
  7138  0006' EF00' F000'        	goto	u2080
  7139  000A'                    u2081:
  7140  000A' 0E01               	movlw	1
  7141  000C' EF00' F000'        	goto	u2086
  7142  0010'                    u2080:
  7143  0010' 0E00               	movlw	0
  7144  0012'                    u2086:
  7145  0012' 0012               	return		;funcret
  7146  0014'                    __end_of_EUSART1_is_rx_ready:
  7147                           	callstack 0
  7148                           
  7149 ;; *************** function _EUSART1_Read *****************
  7150 ;; Defined at:
  7151 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;		None
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      unsigned char 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7165 ;;      Params:         0       0       0       0       0       0       0
  7166 ;;      Locals:         0       0       0       0       0       0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0
  7168 ;;      Totals:         0       0       0       0       0       0       0
  7169 ;;Total ram usage:        0 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 3
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_main
  7176 ;;		_getch
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text42
  7181  0000'                    __ptext42:
  7182                           	callstack 0
  7183  0000'                    _EUSART1_Read:
  7184                           	callstack 27
  7185  0000'                    l188:
  7186                           
  7187                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7188  0000' AA9E               	btfss	158,5,c	;volatile
  7189  0002' EF00' F000'        	goto	u2091
  7190  0006' EF00' F000'        	goto	u2090
  7191  000A'                    u2091:
  7192  000A' EF00' F000'        	goto	l188
  7193  000E'                    u2090:
  7194  000E'                    
  7195                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7196  000E' 0E00               	movlw	0
  7197  0010' 0100               	movlb	0	; () banked
  7198  0012' 6F00'              	movwf	_eusart1RxLastError& (0+255),b	;volatile
  7199  0014'                    
  7200                           ; BSR set to: 0
  7201                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7202  0014' A2AB               	btfss	171,1,c	;volatile
  7203  0016' EF00' F000'        	goto	u2101
  7204  001A' EF00' F000'        	goto	u2100
  7205  001E'                    u2101:
  7206  001E' EF00' F000'        	goto	l2821
  7207  0022'                    u2100:
  7208  0022'                    
  7209                           ; BSR set to: 0
  7210                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7211  0022' 98AB               	bcf	171,4,c	;volatile
  7212                           
  7213                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7214  0024' 88AB               	bsf	171,4,c	;volatile
  7215  0026'                    l2821:
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7219  0026' 50AE               	movf	174,w,c	;volatile
  7220  0028'                    
  7221                           ; BSR set to: 0
  7222  0028' 0012               	return		;funcret
  7223  002A'                    __end_of_EUSART1_Read:
  7224                           	callstack 0
  7225                           
  7226 ;; *************** function _EPWM1_LoadDutyValue *****************
  7227 ;; Defined at:
  7228 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  dutyValue       2    2[COMRAM] unsigned short 
  7231 ;; Auto vars:     Size  Location     Type
  7232 ;;		None
  7233 ;; Return value:  Size  Location     Type
  7234 ;;                  1    wreg      void 
  7235 ;; Registers used:
  7236 ;;		wreg, status,2, status,0
  7237 ;; Tracked objects:
  7238 ;;		On entry : 0/0
  7239 ;;		On exit  : 0/0
  7240 ;;		Unchanged: 0/0
  7241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7242 ;;      Params:         2       0       0       0       0       0       0
  7243 ;;      Locals:         0       0       0       0       0       0       0
  7244 ;;      Temps:          2       0       0       0       0       0       0
  7245 ;;      Totals:         4       0       0       0       0       0       0
  7246 ;;Total ram usage:        4 bytes
  7247 ;; Hardware stack levels used: 1
  7248 ;; Hardware stack levels required when called: 3
  7249 ;; This function calls:
  7250 ;;		Nothing
  7251 ;; This function is called by:
  7252 ;;		_main
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           	psect	text43
  7257  0000'                    __ptext43:
  7258                           	callstack 0
  7259  0000'                    _EPWM1_LoadDutyValue:
  7260                           	callstack 27
  7261  0000'                    
  7262                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  7263  0000' C002' F004'        	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7264  0004' C003' F005'        	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  7265  0008' 90D8               	bcf	status,0,c
  7266  000A' 3200'              	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  7267  000C' 3200'              	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  7268  000E' 90D8               	bcf	status,0,c
  7269  0010' 3200'              	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  7270  0012' 3200'              	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  7271  0014' 5000'              	movf	??_EPWM1_LoadDutyValue^0,w,c
  7272  0016' 6EBE               	movwf	190,c	;volatile
  7273                           
  7274                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  7275  0018' C002' F004'        	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  7276  001C' 0E03               	movlw	3
  7277  001E' 1600'              	andwf	??_EPWM1_LoadDutyValue^0,f,c
  7278  0020' 3A00'              	swapf	??_EPWM1_LoadDutyValue^0,f,c
  7279  0022' 0EF0               	movlw	240
  7280  0024' 1600'              	andwf	??_EPWM1_LoadDutyValue^0,f,c
  7281  0026' 50BD               	movf	189,w,c	;volatile
  7282  0028' 0BCF               	andlw	207
  7283  002A' 1000'              	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  7284  002C' 6EBD               	movwf	189,c	;volatile
  7285  002E' 0012               	return		;funcret
  7286  0030'                    __end_of_EPWM1_LoadDutyValue:
  7287                           	callstack 0
  7288                           
  7289 ;; *************** function _INTERRUPT_InterruptManager *****************
  7290 ;; Defined at:
  7291 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;		None
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;		None
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  1    wreg      void 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7305 ;;      Params:         0       0       0       0       0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0
  7307 ;;      Temps:          2       0       0       0       0       0       0
  7308 ;;      Totals:         2       0       0       0       0       0       0
  7309 ;;Total ram usage:        2 bytes
  7310 ;; Hardware stack levels used: 1
  7311 ;; Hardware stack levels required when called: 2
  7312 ;; This function calls:
  7313 ;;		_TMR0_ISR
  7314 ;; This function is called by:
  7315 ;;		Interrupt level 2
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           	psect	intcode
  7320  0000'                    __pintcode:
  7321                           	callstack 0
  7322  0000'                    _INTERRUPT_InterruptManager:
  7323                           	callstack 19
  7324                           
  7325                           ;incstack = 0
  7326  0000' 8200'              	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7327  0002' CFFA F000'         	movff	pclath,??_INTERRUPT_InterruptManager
  7328  0006' CFFB F001'         	movff	pclatu,??_INTERRUPT_InterruptManager+1
  7329  000A'                    
  7330                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7331  000A' AAF2               	btfss	242,5,c	;volatile
  7332  000C' EF00' F000'        	goto	i2u235_41
  7333  0010' EF00' F000'        	goto	i2u235_40
  7334  0014'                    i2u235_41:
  7335  0014' EF00' F000'        	goto	i2l388
  7336  0018'                    i2u235_40:
  7337  0018' A4F2               	btfss	242,2,c	;volatile
  7338  001A' EF00' F000'        	goto	i2u236_41
  7339  001E' EF00' F000'        	goto	i2u236_40
  7340  0022'                    i2u236_41:
  7341  0022' EF00' F000'        	goto	i2l388
  7342  0026'                    i2u236_40:
  7343  0026'                    
  7344                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  7345  0026' EC00' F000'        	call	_TMR0_ISR	;wreg free
  7346  002A'                    i2l388:
  7347  002A' C001' FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  7348  002E' C000' FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  7349  0032' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7350  0034' 0011               	retfie		f
  7351  0036'                    __end_of_INTERRUPT_InterruptManager:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _TMR0_ISR *****************
  7355 ;; Defined at:
  7356 ;;		line 136 in file "mcc_generated_files/tmr0.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;		None
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;		None
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  1    wreg      void 
  7363 ;; Registers used:
  7364 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7370 ;;      Params:         0       0       0       0       0       0       0
  7371 ;;      Locals:         0       0       0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0
  7373 ;;      Totals:         0       0       0       0       0       0       0
  7374 ;;Total ram usage:        0 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 1
  7377 ;; This function calls:
  7378 ;;		Absolute function
  7379 ;;		_TMR0_DefaultInterruptHandler
  7380 ;; This function is called by:
  7381 ;;		_INTERRUPT_InterruptManager
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text45
  7386  0000'                    __ptext45:
  7387                           	callstack 0
  7388  0000'                    _TMR0_ISR:
  7389                           	callstack 19
  7390  0000'                    
  7391                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
  7392  0000' 94F2               	bcf	242,2,c	;volatile
  7393  0002'                    
  7394                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
  7395  0002' 0100               	movlb	0	; () banked
  7396  0004' 5100'              	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  7397  0006' 6ED7               	movwf	215,c	;volatile
  7398  0008'                    
  7399                           ; BSR set to: 0
  7400                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
  7401  0008' C00A' FFD6         	movff	_timer0ReloadVal,4054	;volatile
  7402  000C'                    
  7403                           ; BSR set to: 0
  7404                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
  7405  000C' 5100'              	movf	_TMR0_InterruptHandler& (0+255),w,b
  7406  000E' 1100'              	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  7407  0010' B4D8               	btfsc	status,2,c
  7408  0012' EF00' F000'        	goto	i2u206_41
  7409  0016' EF00' F000'        	goto	i2u206_40
  7410  001A'                    i2u206_41:
  7411  001A' EF00' F000'        	goto	i2l90
  7412  001E'                    i2u206_40:
  7413  001E'                    
  7414                           ; BSR set to: 0
  7415                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
  7416  001E' D802               	call	i2u207_48
  7417  0020' EF00' F000'        	goto	i2u207_49
  7418  0024'                    i2u207_48:
  7419  0024' 0005               	push	
  7420  0026' 6EFA               	movwf	pclath,c
  7421  0028' 5100'              	movf	_TMR0_InterruptHandler& (0+255),w,b
  7422  002A' 6EFD               	movwf	tosl,c
  7423  002C' 5100'              	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  7424  002E' 6EFE               	movwf	tosh,c
  7425  0030' 50F8               	movf	tblptru,w,c
  7426  0032' 6EFF               	movwf	tosu,c
  7427  0034' 50FA               	movf	pclath,w,c
  7428  0036' 0012               	return		;indir
  7429  0038'                    i2u207_49:
  7430  0038'                    i2l90:
  7431  0038' 0012               	return		;funcret
  7432  003A'                    __end_of_TMR0_ISR:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7436 ;; Defined at:
  7437 ;;		line 160 in file "mcc_generated_files/tmr0.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		None
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7451 ;;      Params:         0       0       0       0       0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0
  7454 ;;      Totals:         0       0       0       0       0       0       0
  7455 ;;Total ram usage:        0 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_TMR0_Initialize
  7461 ;;		_TMR0_ISR
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text46
  7466  0000'                    __ptext46:
  7467                           	callstack 0
  7468  0000'                    _TMR0_DefaultInterruptHandler:
  7469                           	callstack 19
  7470  0000' 0012               	return		;funcret
  7471  0002'                    __end_of_TMR0_DefaultInterruptHandler:
  7472                           	callstack 0
  7473                           
  7474                           	psect	text47
  7475  0000'                    __ptext47:
  7476                           	callstack 0
  7477  0000'                    
  7478                           	psect	rparam
  7479  0000                     
  7480                           	psect	temp
  7481  0000'                    btemp:
  7482                           	callstack 0
  7483  0000'                    	ds	1
  7484  0000                     int$flags	set	btemp
  7485  0000                     wtemp8	set	btemp+1
  7486  0000                     ttemp5	set	btemp+1
  7487  0000                     ttemp6	set	btemp+4
  7488  0000                     ttemp7	set	btemp+8
  7489                           
  7490                           	psect	idloc
  7491                           
  7492                           ;Config register IDLOC0 @ 0x200000
  7493                           ;	unspecified, using default values
  7494  200000                     	org	2097152
  7495  200000  FF                 	db	255
  7496                           
  7497                           ;Config register IDLOC1 @ 0x200001
  7498                           ;	unspecified, using default values
  7499  200001                     	org	2097153
  7500  200001  FF                 	db	255
  7501                           
  7502                           ;Config register IDLOC2 @ 0x200002
  7503                           ;	unspecified, using default values
  7504  200002                     	org	2097154
  7505  200002  FF                 	db	255
  7506                           
  7507                           ;Config register IDLOC3 @ 0x200003
  7508                           ;	unspecified, using default values
  7509  200003                     	org	2097155
  7510  200003  FF                 	db	255
  7511                           
  7512                           ;Config register IDLOC4 @ 0x200004
  7513                           ;	unspecified, using default values
  7514  200004                     	org	2097156
  7515  200004  FF                 	db	255
  7516                           
  7517                           ;Config register IDLOC5 @ 0x200005
  7518                           ;	unspecified, using default values
  7519  200005                     	org	2097157
  7520  200005  FF                 	db	255
  7521                           
  7522                           ;Config register IDLOC6 @ 0x200006
  7523                           ;	unspecified, using default values
  7524  200006                     	org	2097158
  7525  200006  FF                 	db	255
  7526                           
  7527                           ;Config register IDLOC7 @ 0x200007
  7528                           ;	unspecified, using default values
  7529  200007                     	org	2097159
  7530  200007  FF                 	db	255
  7531                           
  7532                           	psect	config
  7533                           
  7534                           ; Padding undefined space
  7535  300000                     	org	3145728
  7536  300000  FF                 	db	255
  7537                           
  7538                           ;Config register CONFIG1H @ 0x300001
  7539                           ;	Oscillator Selection bits
  7540                           ;	FOSC = INTIO67, Internal oscillator block
  7541                           ;	4X PLL Enable
  7542                           ;	PLLCFG = OFF, Oscillator used directly
  7543                           ;	Primary clock enable bit
  7544                           ;	PRICLKEN = ON, Primary clock enabled
  7545                           ;	Fail-Safe Clock Monitor Enable bit
  7546                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7547                           ;	Internal/External Oscillator Switchover bit
  7548                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7549  300001                     	org	3145729
  7550  300001  28                 	db	40
  7551                           
  7552                           ;Config register CONFIG2L @ 0x300002
  7553                           ;	Power-up Timer Enable bit
  7554                           ;	PWRTEN = OFF, Power up timer disabled
  7555                           ;	Brown-out Reset Enable bits
  7556                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7557                           ;	Brown Out Reset Voltage bits
  7558                           ;	BORV = 190, VBOR set to 1.90 V nominal
  7559  300002                     	org	3145730
  7560  300002  1F                 	db	31
  7561                           
  7562                           ;Config register CONFIG2H @ 0x300003
  7563                           ;	Watchdog Timer Enable bits
  7564                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  7565                           ;	Watchdog Timer Postscale Select bits
  7566                           ;	WDTPS = 32768, 1:32768
  7567  300003                     	org	3145731
  7568  300003  3C                 	db	60
  7569                           
  7570                           ; Padding undefined space
  7571  300004                     	org	3145732
  7572  300004  FF                 	db	255
  7573                           
  7574                           ;Config register CONFIG3H @ 0x300005
  7575                           ;	CCP2 MUX bit
  7576                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  7577                           ;	PORTB A/D Enable bit
  7578                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  7579                           ;	P3A/CCP3 Mux bit
  7580                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  7581                           ;	HFINTOSC Fast Start-up
  7582                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  7583                           ;	Timer3 Clock input mux bit
  7584                           ;	T3CMX = PORTC0, T3CKI is on RC0
  7585                           ;	ECCP2 B output mux bit
  7586                           ;	P2BMX = PORTB5, P2B is on RB5
  7587                           ;	MCLR Pin Enable bit
  7588                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  7589  300005                     	org	3145733
  7590  300005  BF                 	db	191
  7591                           
  7592                           ;Config register CONFIG4L @ 0x300006
  7593                           ;	Stack Full/Underflow Reset Enable bit
  7594                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7595                           ;	Single-Supply ICSP Enable bit
  7596                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7597                           ;	Extended Instruction Set Enable bit
  7598                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7599                           ;	Background Debug
  7600                           ;	DEBUG = OFF, Disabled
  7601  300006                     	org	3145734
  7602  300006  85                 	db	133
  7603                           
  7604                           ; Padding undefined space
  7605  300007                     	org	3145735
  7606  300007  FF                 	db	255
  7607                           
  7608                           ;Config register CONFIG5L @ 0x300008
  7609                           ;	Code Protection Block 0
  7610                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7611                           ;	Code Protection Block 1
  7612                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7613                           ;	Code Protection Block 2
  7614                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7615                           ;	Code Protection Block 3
  7616                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7617  300008                     	org	3145736
  7618  300008  0F                 	db	15
  7619                           
  7620                           ;Config register CONFIG5H @ 0x300009
  7621                           ;	Boot Block Code Protection bit
  7622                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7623                           ;	Data EEPROM Code Protection bit
  7624                           ;	CPD = OFF, Data EEPROM not code-protected
  7625  300009                     	org	3145737
  7626  300009  C0                 	db	192
  7627                           
  7628                           ;Config register CONFIG6L @ 0x30000A
  7629                           ;	Write Protection Block 0
  7630                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7631                           ;	Write Protection Block 1
  7632                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7633                           ;	Write Protection Block 2
  7634                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7635                           ;	Write Protection Block 3
  7636                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7637  30000A                     	org	3145738
  7638  30000A  0F                 	db	15
  7639                           
  7640                           ;Config register CONFIG6H @ 0x30000B
  7641                           ;	Configuration Register Write Protection bit
  7642                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7643                           ;	Boot Block Write Protection bit
  7644                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7645                           ;	Data EEPROM Write Protection bit
  7646                           ;	WRTD = OFF, Data EEPROM not write-protected
  7647  30000B                     	org	3145739
  7648  30000B  E0                 	db	224
  7649                           
  7650                           ;Config register CONFIG7L @ 0x30000C
  7651                           ;	Table Read Protection Block 0
  7652                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7653                           ;	Table Read Protection Block 1
  7654                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7655                           ;	Table Read Protection Block 2
  7656                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7657                           ;	Table Read Protection Block 3
  7658                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7659  30000C                     	org	3145740
  7660  30000C  0F                 	db	15
  7661                           
  7662                           ;Config register CONFIG7H @ 0x30000D
  7663                           ;	Boot Block Table Read Protection bit
  7664                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7665  30000D                     	org	3145741
  7666  30000D  40                 	db	64
  7667                           tosu	equ	0xFFF
  7668                           tosh	equ	0xFFE
  7669                           tosl	equ	0xFFD
  7670                           stkptr	equ	0xFFC
  7671                           pclatu	equ	0xFFB
  7672                           pclath	equ	0xFFA
  7673                           pcl	equ	0xFF9
  7674                           tblptru	equ	0xFF8
  7675                           tblptrh	equ	0xFF7
  7676                           tblptrl	equ	0xFF6
  7677                           tablat	equ	0xFF5
  7678                           prodh	equ	0xFF4
  7679                           prodl	equ	0xFF3
  7680                           indf0	equ	0xFEF
  7681                           postinc0	equ	0xFEE
  7682                           postdec0	equ	0xFED
  7683                           preinc0	equ	0xFEC
  7684                           plusw0	equ	0xFEB
  7685                           fsr0h	equ	0xFEA
  7686                           fsr0l	equ	0xFE9
  7687                           wreg	equ	0xFE8
  7688                           indf1	equ	0xFE7
  7689                           postinc1	equ	0xFE6
  7690                           postdec1	equ	0xFE5
  7691                           preinc1	equ	0xFE4
  7692                           plusw1	equ	0xFE3
  7693                           fsr1h	equ	0xFE2
  7694                           fsr1l	equ	0xFE1
  7695                           bsr	equ	0xFE0
  7696                           indf2	equ	0xFDF
  7697                           postinc2	equ	0xFDE
  7698                           postdec2	equ	0xFDD
  7699                           preinc2	equ	0xFDC
  7700                           plusw2	equ	0xFDB
  7701                           fsr2h	equ	0xFDA
  7702                           fsr2l	equ	0xFD9
  7703                           status	equ	0xFD8

Data Sizes:
    Strings     787
    Constant    0
    Data        16
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160     51     114
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1451$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S1451$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_33(CODE[17]), STR_32(CODE[27]), STR_31(CODE[29]), STR_30(CODE[25]), 
		 -> STR_29(CODE[42]), STR_28(CODE[25]), STR_27(CODE[22]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[8]), 
		 -> STR_21(CODE[52]), STR_20(CODE[17]), STR_19(CODE[24]), STR_18(CODE[41]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[23]), STR_14(CODE[9]), 
		 -> STR_13(CODE[17]), STR_12(CODE[52]), STR_11(CODE[30]), STR_10(CODE[34]), 
		 -> STR_9(CODE[52]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_33(CODE[17]), STR_32(CODE[27]), STR_31(CODE[29]), STR_30(CODE[25]), 
		 -> STR_29(CODE[42]), STR_28(CODE[25]), STR_27(CODE[22]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[8]), 
		 -> STR_21(CODE[52]), STR_20(CODE[17]), STR_19(CODE[24]), STR_18(CODE[41]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[23]), STR_14(CODE[9]), 
		 -> STR_13(CODE[17]), STR_12(CODE[52]), STR_11(CODE[30]), STR_10(CODE[34]), 
		 -> STR_9(CODE[52]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 52
		 -> STR_33(CODE[17]), STR_32(CODE[27]), STR_31(CODE[29]), STR_30(CODE[25]), 
		 -> STR_29(CODE[42]), STR_28(CODE[25]), STR_27(CODE[22]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[8]), 
		 -> STR_21(CODE[52]), STR_20(CODE[17]), STR_19(CODE[24]), STR_18(CODE[41]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[23]), STR_14(CODE[9]), 
		 -> STR_13(CODE[17]), STR_12(CODE[52]), STR_11(CODE[30]), STR_10(CODE[34]), 
		 -> STR_9(CODE[52]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 52
		 -> STR_33(CODE[17]), STR_32(CODE[27]), STR_31(CODE[29]), STR_30(CODE[25]), 
		 -> STR_29(CODE[42]), STR_28(CODE[25]), STR_27(CODE[22]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[8]), 
		 -> STR_21(CODE[52]), STR_20(CODE[17]), STR_19(CODE[24]), STR_18(CODE[41]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[23]), STR_14(CODE[9]), 
		 -> STR_13(CODE[17]), STR_12(CODE[52]), STR_11(CODE[30]), STR_10(CODE[34]), 
		 -> STR_9(CODE[52]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1491$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 52
		 -> STR_33(CODE[17]), STR_32(CODE[27]), STR_31(CODE[29]), STR_30(CODE[25]), 
		 -> STR_29(CODE[42]), STR_28(CODE[25]), STR_27(CODE[22]), STR_26(CODE[31]), 
		 -> STR_25(CODE[31]), STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[8]), 
		 -> STR_21(CODE[52]), STR_20(CODE[17]), STR_19(CODE[24]), STR_18(CODE[41]), 
		 -> STR_17(CODE[26]), STR_16(CODE[26]), STR_15(CODE[23]), STR_14(CODE[9]), 
		 -> STR_13(CODE[17]), STR_12(CODE[52]), STR_11(CODE[30]), STR_10(CODE[34]), 
		 -> STR_9(CODE[52]), STR_8(CODE[5]), STR_7(CODE[44]), STR_6(CODE[40]), 
		 -> STR_5(CODE[45]), STR_4(CODE[41]), STR_3(CODE[22]), STR_2(CODE[25]), 
		 -> STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->___wmul
    ___lwdiv->___wmul
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   31680
                                             16 BANK0     35    35      0
                _EPWM1_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                    _TMR0_WriteTimer
            _TMR1_HasOverflowOccured
                    _TMR1_WriteTimer
                            ___lldiv
                             ___lmul
                            ___lwdiv
                             ___wmul
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   27622
                                              8 BANK0      8     2      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24553
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   24044
                                             66 COMRAM    23    17      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    25     10    5079
                                             31 COMRAM    35    25     10
                                _pad
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5745
                                             31 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                              2 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                              2 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    6633
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4333
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1866
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1809
                                             13 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1366
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                              3 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1634
                                              8 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     642
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              8 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              12     4      8     370
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             13     5      8     314
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _TMR1_WriteTimer                                      2     0      2     240
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     272
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                              4 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     348
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_WriteTimer
   _TMR1_HasOverflowOccured
   _TMR1_WriteTimer
   ___lldiv
   ___lmul
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
             _fputs
               _fputc
         _fputc
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
         _xtoa
           _pad

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     33      72       4       71.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITBIGSFRlhh        27      0       0      25        0.0%
BITBIGSFRhhlhhh     19      0       0      16        0.0%
BITBIGSFRlhlh       17      0       0      26        0.0%
BITBIGSFRlhll        E      0       0      27        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRhhlllh      C      0       0      21        0.0%
BITBIGSFRhhlhhl      C      0       0      19        0.0%
BITBIGSFRhhllll      6      0       0      23        0.0%
BITBIGSFRhl          6      0       0      24        0.0%
BITBIGSFRhhlllh      5      0       0      20        0.0%
BITBIGSFRhhllll      2      0       0      22        0.0%
BITBIGSFRhhlhhl      1      0       0      17        0.0%
BITBIGSFRhhlhhl      1      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CE      28        0.0%
DATA                 0      0      CE      30        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Apr 08 15:03:33 2023

                                            l50 00002E                                              l27 000028  
                                            l47 00001E                                              l71 000036  
                                            l83 000008                                              l93 000008  
                           ___wmul@multiplicand 000004                                 _timer0ReloadVal 00000A  
                                           l204 000008                                             l109 00000E  
                                           l222 000008                                             l302 00001A  
                                           l216 000008                                             l402 000058  
                                           l219 000008                                             l171 00003E  
                                           l243 00001A                                             l403 000068  
                                           l331 00002A                                             l342 0001D0  
                                           l192 000028                                             l257 000026  
                                           l425 0000A2                                             l505 000186  
                                           l418 000092                                             l179 000012  
                                           l195 000002                                             l188 000000  
                                           l381 000002                                             l269 000012  
                                           l198 000014                                             l518 000162  
                                           l391 000024                                             l296 000020  
                                           l299 00000C                                             l836 0000EE  
                                           l829 0000CE                                             l846 0000CE  
                                           l839 0000AE                                             l882 00006A  
                                           l889 000072                                             _PR2 000FBB  
                               _timer1ReloadVal 000002                                             _abs 000000  
                                           _pad 000000                                 _TMR2_Initialize 000000  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                            l1101 0000A8  
                                          l1112 000066                                            l1115 0000A8  
                                          l1123 00009A                                            ?_abs 000014  
                                          l1117 0000C8                                            l1213 000036  
                                          l1125 0000A2                                            l1126 0000E8  
                                          l1216 00003E                                            l1144 000036  
                                          l1241 000148                                            l1161 00003E  
                                          l1209 00004E                                            l1154 0001F6  
                                          l1146 00003E                                            l1139 0002B2  
                                          l1244 00002A                                            l1252 000044  
                                          l1173 0001CA                                            l1069 000026  
                                          l1238 000140                                            l1159 000036  
                                          l1096 000044                                            l3201 000044  
                                          l1193 00042E                                            l1267 000094  
                                          l3211 00009A                                            l3203 000064  
                                          l1275 000042                                            l1099 000086  
                                          l3221 00011C                                            l3213 0000AE  
                                          l3205 000068                                            l3301 000048  
                                          l3231 000166                                            l3223 00011E  
                                          l3215 0000BC                                            l3207 000074  
                                          l3311 00000E                                            l3303 000076  
                                          l3161 000002                                            l3225 000130  
                                          l3217 0000CE                                            l3209 000092  
                                          l3241 000032                                            l3321 000064  
                                          l3313 000022                                            l3401 0000FA  
                                          l3305 000096                                            l3331 000000  
                                          l3171 00004C                                            l3163 000000  
                                          l3219 0000FC                                            l3227 000136  
                                          l3251 00008A                                            l3243 000036  
                                          l3235 000000                                            l3323 000068  
                                          l3315 000030                                            l3403 000100  
                                          l3411 0001F2                                            l3307 0000A8  
                                          l3341 00003A                                            l3157 000002  
                                          l3173 000082                                            l3165 000012  
                                          l3229 000146                                            l3261 00010C  
                                          l3253 00009E                                            l3245 000044  
                                          l3237 000004                                            l3181 00001E  
                                          l3325 000094                                            l3317 00003C  
                                          l3309 000000                                            l3413 00020C  
                                          l3421 00026C                                            l3405 000182  
                                          l3501 00014A                                            l3343 00003E  
                                          l3335 000000                                            l3159 000010  
                                          l3167 000024                                            l3351 000020  
                                          l3191 000000                                            l3255 0000AC  
                                          l3263 000112                                            l3247 000064  
                                          l3239 000012                                            l3327 000000  
                                          l3183 000022                                            l3319 000050  
                                          l3423 00027C                                            l3415 00022A  
                                          l3407 000188                                            l3271 000000  
                                          l3431 000000                                            l3503 000168  
                                          l2633 000000                                            l3185 000000  
                                          l3337 000004                                            l3521 000034  
                                          l3513 000000                                            l3169 00002E  
                                          l3361 00005E                                            l3353 00002C  
                                          l3193 000004                                            l3265 000122  
                                          l3257 0000DA                                            l3249 000082  
                                          l3329 00001A                                            l3177 000000  
                                          l3425 000282                                            l3417 000244  
                                          l3409 00018E                                            l3281 000054  
                                          l3273 00000C                                            l3441 00006E  
                                          l3433 00000E                                            l3505 000182  
                                          l2635 000000                                            l3187 00001C  
                                          l3339 000018                                            l3523 000068  
                                          l3515 000014                                            l3363 000072  
                                          l3355 00003A                                            l3347 000000  
                                          l3195 000012                                            l3267 000142  
                                          l3259 0000FA                                            l3179 00000C  
                                          l3427 000292                                            l3419 00025E  
                                          l3371 000000                                            l3291 0000C8  
                                          l3283 000066                                            l3275 00002A  
                                          l3451 000100                                            l3443 000078  
                                          l3435 000010                                            l3507 00019C  
                                          l3603 0002CC                                            l2821 000026  
                                          l2813 000000                                            l2637 000000  
                                          l2741 000026                                            l2901 00001A  
                                          l3525 000070                                            l3365 000086  
                                          l3357 00004C                                            l3349 000014  
                                          l3197 000032                                            l3381 000072  
                                          l3373 000020                                            l3285 000094  
                                          l3277 000032                                            l3293 000000  
                                          l3461 0001C8                                            l3445 00007E  
                                          l3453 000164                                            l3437 00002A  
                                          l3509 0001AA                                            l3613 000390  
                                          l3621 0003F4                                            l3605 0002E8  
                                          l3701 0001FE                                            l2815 00000E  
                                          l2743 000000                                            l2639 000000  
                                          l2735 000000                                            l2751 000022  
                                          l2831 000014                                            l2911 000054  
                                          l2903 000022                                            l3535 0000E2  
                                          l3527 000078                                            l3519 000018  
                                          l3367 00008A                                            l3199 000036  
                                          l3391 0000C0                                            l3383 000074  
                                          l3375 000034                                            l3287 0000B4  
                                          l3279 000046                                            l3295 00001E  
                                          l3455 000176                                            l3463 0001D6  
                                          l3447 0000F4                                            l3439 000066  
                                          l3471 000010                                            l3607 000304  
                                          l3551 000040                                            l3711 000262  
                                          l3703 000202                                            l2817 000014  
                                          l2809 000000                                            l2737 00000C  
                                          l2753 000024                                            l2745 000000  
                                          l2761 000008                                            l2833 000018  
                                          l2825 000000                                            l2913 00005C  
                                          l2905 00002A                                            l3537 000112  
                                          l3529 0000AC                                            l3369 0000B6  
                                          l3393 0000D0                                            l3385 00008E  
                                          l3377 000044                                            l3289 0000B6  
                                          l3297 000026                                            l3457 000194  
                                          l3449 0000FA                                            l3481 00007E  
                                          l3473 00002A                                            l3609 000360  
                                          l3553 000044                                            l3625 000406  
                                          l3545 000000                                            l3641 00000C  
                                          l3721 0002A0                                            l3713 000264  
                                          l3705 00022E                                            l2819 000022  
                                          l2771 000038                                            l2763 000000  
                                          l2739 00000E                                            l2755 000026  
                                          l2747 000002                                            l2851 000010  
                                          l2843 000000                                            l2827 00000E  
                                          l2835 00001E                                            l2915 00005E  
                                          l2907 000038                                            l3539 000124  
                                          l3395 0000DC                                            l3387 0000AA  
                                          l3379 000064                                            l3299 00003A  
                                          l3459 0001AE                                            l3491 0000B4  
                                          l3483 000084                                            l3475 000066  
                                          l3467 000000                                            l3619 0003C0  
                                          l3571 000110                                            l3563 000070  
                                          l3555 000050                                            l3547 000024  
                                          l3643 000028                                            l3651 00000A  
                                          l3731 0002E0                                            l3723 0002B0  
                                          l3707 00023C                                            l3715 00027A  
                                          l2765 000014                                            l2781 000000  
                                          l2757 000032                                            l2749 00000A  
                                          l2773 000000                                            l2853 000014  
                                          l2845 000004                                            l2837 000022  
                                          l2829 000010                                            l2917 000064  
                                          l2909 00003E                                            l3397 0000E4  
                                          l3389 0000BA                                            l3493 0000C4  
                                          l3485 000094                                            l3477 00006E  
                                          l3469 00000E                                            l3581 00015C  
                                          l3573 000120                                            l3557 000052  
                                          l3565 0000A4                                            l3549 000032  
                                          l3645 000044                                            l3741 0002FA  
                                          l3733 0002E4                                            l3725 0002C2  
                                          l3717 00028E                                            l3709 000256  
                                          l3661 000018                                            ?_pad 000014  
                                          l2767 000020                                            l2775 00000C  
                                          l2759 000000                                            l2855 000018  
                                          l2847 000008                                            l2839 000000  
                                          l2871 00002E                                            l3399 0000F0  
                                          l3495 0000CA                                            l3487 0000A4  
                                          l3479 000078                                            l3591 0001FE  
                                          l3583 000194                                            l3575 00012E  
                                          l3567 0000B6                                            l3559 000064  
                                          l3639 000000                                            l3751 000340  
                                          l3743 000306                                            l3735 0002F4  
                                          l3727 0002C8                                            l3719 000292  
                                          l3671 0000BC                                            l3663 00001C  
                                          l3655 000000                                            l2793 000000  
                                          l2769 00002C                                            l2777 000014  
                                          l2857 00001C                                            l2849 00000C  
                                          l2881 00002E                                            l2873 000038  
                                          l2865 000000                                            l3497 0000D0  
                                          l3489 0000B0                                            l3593 00020E  
                                          l3585 0001B8                                            l3577 00014E  
                                          l3569 0000DA                                            l3649 000000  
                                          l3753 000342                                            l3745 00030C  
                                          l3761 000380                                            l3729 0002CA  
                                          l3673 0000C8                                            l3665 000028  
                                          l3657 000012                                            l2779 000000  
                                          l2795 000000                                            l2891 000080  
                                          l2883 00003A                                            l2875 000000  
                                          l2867 000010                                            l3499 00012E  
                                          l3595 00022A                                            l3587 0001EA  
                                          l3771 0003B2                                            l3763 000394  
                                          l3747 00031A                                            l3755 000358  
                                          l3683 0001B0                                            l3675 00019C  
                                          l3667 000038                                            l3659 000018  
                                          l2797 000004                                            l2893 000082  
                                          l2885 000048                                            l2877 000010  
                                          l2869 00001E                                            l3597 000246  
                                          l3781 00043E                                            l3773 0003CE  
                                          l3765 000398                                            l3757 00036C  
                                          l3749 000334                                            l3685 0001BC  
                                          l3677 0001AC                                            l3669 0000A8  
                                          l2895 00008C                                            l2887 000052  
                                          l2879 000026                                            l3599 00029C  
                                          l3783 00045C                                            l3775 000402  
                                          l3759 000370                                            l3695 0001DA  
                                          l3687 0001C0                                            l3791 0004C4  
                                          l2889 000070                                            l2897 000000  
                                          l3881 0003DE                                            l3785 00048C  
                                          l3777 000402                                            l3769 0003AA  
                                          l3697 0001E6                                            l3689 0001D6  
                                          l2899 000008                                            l3883 000096  
                                          l3787 0004AE                                            l3779 000436  
                                          l3699 0001EA                                            l3877 0004D8  
                                          l3879 000096                                            STR_1 0002F5  
                                          STR_2 00024E                                            STR_3 0002AC  
                                          STR_4 0000B8                                            STR_5 000035  
                                          STR_6 00010A                                            STR_7 000062  
                                          STR_8 00030F                                            STR_9 000001  
                                          u2100 000022                                            u2101 00001E  
                                          u2110 00000E                                            u2111 00000A  
                                          u2040 00001A                                            u2120 000010  
                                          u2200 000054                                            u3000 000108  
                                          u2041 000016                                            u2121 00000A  
                                          u2201 000050                                            u2130 00001E  
                                          u3010 00014A                                            u2131 00001A  
                                          u3011 000146                                            u2140 000058  
                                          u3020 000168                                            u3100 000024  
                                          u2141 000054                                            u3021 000164  
                                          u3005 0000F6                                            u3101 000020  
                                          _LATA 000F89                                            u2126 000012  
                                          u2150 000026                                            u3030 000182  
                                          u3110 0000B6                                            _LATB 000F8A  
                                          u2151 000022                                            u3031 00017E  
                                          u3111 0000B2                                            _LATC 000F8B  
                                          u2080 000010                                            u2160 000048  
                                          u2400 00004C                                            u3040 00019C  
                                          u3120 0000DA                                            u3200 000044  
                                          u2081 00000A                                            u2161 000044  
                                          u2401 000048                                            u3041 000198  
                                          u3121 0000D6                                            u3201 000040  
                                          u2090 00000E                                            u2170 000070  
                                          u2410 000082                                            u3050 0001AA  
                                          u3130 000120                                            u2091 00000A  
                                          u2171 00006C                                            u2411 00007E  
                                          u3051 0001A6                                            u3131 00011C  
                                          u3211 00000A                                            u2180 00001A  
                                          u3060 000034                                            u2500 000012  
                                          u2420 000042                                            u3140 000194  
                                          u3300 0002C2                                            u3220 000038  
                                          u2181 000016                                            u3061 000030  
                                          u2501 00000E                                            u2421 00003E  
                                          u3141 000190                                            u3301 0002BE  
                                          u3221 000034                                            u2086 000012  
                                          u2190 000038                                            u3070 000064  
                                          u2430 000012                                            u2510 000044  
                                          u3150 0001B8                                            u3310 000358  
                                          u3230 0000BC                                            u2191 000034  
                                          u3071 000060                                            u2431 00000E  
                                          u2511 000040                                            u3151 0001B4  
                                          u3311 000354                                            u3231 0000B8  
                                          u3080 000112                                            u2440 000044  
                                          u2520 000082                                            u2600 00001E  
                                          u3160 00022A                                            u3320 00036C  
                                          u3081 00010E                                            u2441 000040  
                                          u2521 00007E                                            u2601 00001A  
                                          u3161 000226                                            u3321 000368  
                                          u3090 000124                                            u2370 000010  
                                          u2530 0000AC                                            u2610 000048  
                                          u3170 000246                                            u3330 000380  
                                          u3250 0001D0                                            u3091 000120  
                                          u2371 00000C                                            u2451 00006E  
                                          u2531 0000A8                                            u2611 000044  
                                          u3171 000242                                            u3331 00037C  
                                          u3251 0001CC                                            u2700 000018  
                                          u2380 000012                                            u2460 000092  
                                          u2540 0000DA                                            u2620 000076  
                                          u3180 0002E8                                            u3340 000394  
                                          u3260 0001FA                                            u2701 000014  
                                          u2381 00000E                                            u2461 00008E  
                                          u2541 0000D6                                            u2621 000072  
                                          u3181 0002E4                                            u3341 000390  
                                          u3261 0001F6                                            u3245 0000F4  
                                          u2710 00003A                                            u2390 000024  
                                          u2470 0000BC                                            u2550 000122  
                                          u2630 00000E                                            u3190 000304  
                                          u2711 000036                                            u2391 000020  
                                          u2471 0000B8                                            u2551 00011E  
                                          u2631 00000A                                            u3191 000300  
                                          u2720 000014                                            u2480 0000FC  
                                          u2640 000030                                            u2800 000072  
                                          u3280 00027A                                            u2721 000010  
                                          u2481 0000F8                                            u2641 00002C  
                                          u2801 00006E                                            u2561 000006  
                                          u3281 000276                                            u2730 00003A  
                                          u2490 000146                                            u2650 000086  
                                          u2810 00008E                                            u2570 00002A  
                                          u3290 00028E                                            u2731 000036  
                                          u2491 000142                                            u2651 000082  
                                          u2811 00008A                                            u2571 000026  
                                          u3291 00028A                                            u3275 000212  
                                          u2740 00005A                                            u2660 000094  
                                          u2820 0000BA                                            u2580 000054  
                                          u2900 00000E                                            u2741 000056  
                                          u2661 000090                                            u2821 0000B6  
                                          u2581 000050                                            u2901 00000A  
                                          u2750 0000A8                                            u2670 00001A  
                                          u2830 0000D0                                            u2590 000094  
                                          u2910 00002A                                            u2751 0000A4  
                                          u2671 000016                                            u2831 0000CC  
                                          u2591 000090                                            u2911 000026  
                                          u2680 000024                                            u2760 0000B6  
                                          u2840 00020C                                            u2920 000176  
                                          u2681 00001E                                            u2761 0000B2  
                                          u2841 000208                                            u2921 000172  
                                          u2690 000026                                            u2850 00022A  
                                          u2770 000030                                            u2930 000194  
                                          u2851 000226                                            u2771 00002A  
                                          u2931 000190                                            u2860 000244  
                                          u2780 000032                                            u2940 0001AE  
                                          u2861 000240                                            u2941 0001AA  
                                          u2870 00025E                                            u2790 000044  
                                          u2950 0001C8                                            u2871 00025A  
                                          u2791 000040                                            u2951 0001C4  
                                          u2880 00026C                                            u2960 0001D6  
                                          u2881 000268                                            u2961 0001D2  
                                          u2890 00027C                                            u2970 00000E  
                                          u2891 000278                                            u2971 00000A  
                                          u2980 00002A                                            u2981 000026  
                                          u2990 000094                                            u2991 000090  
                                          i2l90 000038                         _TMR1_HasOverflowOccured 000000  
                                          i2l96 000000                                            _TMR1 000FCE  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 000000                                            abs@a 000014  
                                          _dbuf 00000F                                            _atoi 000000  
                                          _ctoa 000000                                            _main 000000  
                                          _dtoa 000000                                   ?_EUSART1_Read 000000  
                                          _prec 000000                                            pad@i 00001B  
                                          pad@p 000018                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 00001D  
                                          fsr2l 000FD9                                            btemp 000000  
                                          _utoa 000000                                            _xtoa 000000  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 000000*                          ??_EPWM1_LoadDutyValue 000004  
                                  ___param_bank 000000                                           ??_abs 000016  
                                         ??_pad 00001A                         __end_of_TMR0_Initialize 000038  
                ??_TMR0_DefaultInterruptHandler 000000                   __end_of_OSCILLATOR_Initialize 00001C  
                               __end_of___aodiv 000188                                           ?_atoi 000008  
                                         ?_ctoa 00000D                                           ?_main 000000  
                                         ?_dtoa 00001F                                 __end_of___aomod 000164  
                                         STR_10 000132                                           STR_11 000192  
                                         STR_12 000000                                           STR_20 0002D3  
                                         STR_21 000000                                           STR_13 0002E4  
                                         STR_22 000307                                           STR_14 0002FE  
                                         STR_30 000235                                           STR_23 000020  
                                         STR_15 00027F                                           STR_31 0001B0  
                                         STR_24 000020                                           STR_16 000202  
                                         STR_32 0001CD                                           STR_33 0002C2  
                                         STR_17 0001E8                                           STR_25 000173  
                                         STR_26 000154                                           STR_18 0000E1  
                                         STR_27 000296                                           STR_19 000267  
                                         STR_28 00021C                                           STR_29 00008E  
                               __end_of___lldiv 0000A4                                           ?_utoa 00001F  
                                         _T0CON 000FD5                                 __end_of___lodiv 0000F0  
                                         ?_xtoa 00001F                                           _T1CON 000FCD  
                                         _T2CON 000FBA                                 __end_of___lomod 0000D0  
                               __end_of___lwdiv 000074                                 _TMR0_WriteTimer 000000  
                                         i2l388 00002A                                    vfpfcnvrt@fmt 000044  
                                         _TMR0H 000FD7                                           _TMR1H 000FCF  
                                         _TMR0L 000FD6                                           _TMR1L 000FCE  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                             ___lmul@multiplicand 000006  
                     ?_TMR0_SetInterruptHandler 000002                                __end_of_TMR0_ISR 00003A  
                                         _flags 000002                                           _fputc 000000  
                                         _fputs 000000                                 __end_of_isdigit 00002C  
                                         atoi@n 00000F                                           pad@fp 000014  
                                         atoi@s 000008                                           _width 000000  
                                         ctoa@c 00000F                                           _putch 000000  
                                         ctoa@l 000011                                           ctoa@w 000013  
                                         main@i 000030                                           dtoa@d 000021  
                                         dtoa@i 000040                                           dtoa@n 000037  
                                         dtoa@p 000033                                           dtoa@s 00003F  
                                         dtoa@w 000035                                 __end_of_isspace 000046  
                                ?_EUSART1_Write 000000                         __end_of_TMR1_Initialize 00001C  
                                         pclath 000FFA                                           pclatu 000FFB  
                                         tablat 000FF5                                  ??_EUSART1_Read 000002  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         ttemp5 000001                                           ttemp6 000004  
                                         ttemp7 000008                                           utoa@d 000021  
                                         utoa@i 00003D                                           utoa@n 000035  
                                         utoa@p 000031                                           utoa@w 000033  
                                         status 000FD8                                           wtemp8 000001  
                                         xtoa@c 000041                                           xtoa@d 000021  
                                         xtoa@i 00003F                                           xtoa@n 000037  
                                         xtoa@p 000033                                           xtoa@w 000035  
                              ___lodiv@dividend 000002              _EUSART1_DefaultFramingErrorHandler 000000  
                               _TMR1_WriteTimer 000000                                 __initialization 000000  
                                  __end_of_atoi 00014A                                    __end_of_ctoa 0000CA  
                    __end_of_EUSART1_Initialize 000040                                    __end_of_main 00052A  
                                  __end_of_dtoa 0002B4                                    __end_of_utoa 0001F8  
                                  __end_of_xtoa 0001CC                         __end_of_TMR2_Initialize 000010  
                   ?_INTERRUPT_InterruptManager 000000                                          ??_atoi 00000A  
                                        ??_ctoa 000010                                          ??_main 000010  
                                        ??_dtoa 000029                                          ??_utoa 000029  
                                        ??_xtoa 000029                                   __activetblptr 000002  
                              ___lodiv@quotient 000012                       ??_TMR1_HasOverflowOccured 000002  
                                        ?_fputc 000004                                          ?_fputs 00000D  
                                        _CCPR1H 000FBF                                          _CCPR1L 000FBE  
                                        _ANSELA 000F38                                          ?_putch 000000  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                                        _T1GCON 000FCC                         TMR1_WriteTimer@timerVal 000002  
                                        i2l3071 00000A                                          i2l3073 000018  
                                        i2l3075 000026                                          i2l2801 000002  
                                        i2l2803 000008                                          i2l2805 00000C  
                                        i2l2807 00001E                                          i2l2799 000000  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 00004D                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 000006  
                                        ___lmul 000000                                       ??___aodiv 000012  
                                     ??___aomod 000012                                          ___wmul 000000  
                       __end_of_TMR0_WriteTimer 00000A                                       ??___lldiv 00000A  
                                     ??___lodiv 000012                                       ??___lomod 000012  
                                     ??___lwdiv 00000C                        ?_EUSART1_SetErrorHandler 000002  
                              ?_TMR0_Initialize 000000                                          clear_0 000026  
                                        isa$std 000001                                          _printf 000000  
                                        pad@buf 000016                ??_EUSART1_SetOverrunErrorHandler 000004  
               ?_EUSART1_SetOverrunErrorHandler 000002                                          ctoa@fp 00000D  
                                        dtoa@fp 00001F                                          fputc@c 000004  
                                        fputs@c 000011                                          fputs@i 000012  
                                        fputs@s 00000D                                       ??_isdigit 000004  
                                  __mediumconst 000000*                                      ??_isspace 000004  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                __end_of_vfprintf 000050  
                               ??_EUSART1_Write 000002                                          utoa@fp 00001F  
      TMR0_SetInterruptHandler@InterruptHandler 000002                         __end_of_TMR1_WriteTimer 000028  
                                        xtoa@fp 00001F                                ?_TMR1_Initialize 000000  
                            main@phaseIncrement 000032                               _SYSTEM_Initialize 000000  
                                    __accesstop 000000*                        __end_of__initialization 000032  
                            ?_SYSTEM_Initialize 000000                                   ___rparam_used 000001  
                             ?_EPWM1_Initialize 000000                                  __pcstackCOMRAM 000000  
                                  __pidataBANK0 000000                             ??_SYSTEM_Initialize 000006  
                                     ?_TMR0_ISR 000000                              ??_EPWM1_Initialize 000002  
                                 __end_of_fputc 000096                                   __end_of_fputs 000044  
                                 __end_of_putch 00000A                                ?_TMR2_Initialize 000000  
                          __end_of_EUSART1_Read 00002A                                         ??_fputc 000008  
                     __end_of_SYSTEM_Initialize 000022                                         ??_fputs 000011  
                                       ??_putch 000003                                      __pbssBANK0 000000  
               __end_of_EUSART1_SetErrorHandler 00000A                __end_of_TMR0_SetInterruptHandler 00000A  
                                       ?___lmul 000002                                         ?___wmul 000002  
                                    ??_TMR0_ISR 000000                                ?_TMR0_WriteTimer 000002  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                ___lmul@product 00000A                                         ?_printf 000008  
        __end_of_EUSART1_SetFramingErrorHandler 00000A                  _EUSART1_SetFramingErrorHandler 000000  
                                       _OSCCON2 000FD2                                         _OSCTUNE 000F9B  
                                       _PWM1CON 000FB7                                         _SPBRGH1 000FB0  
                              ?_TMR1_WriteTimer 000002                                ___lomod@dividend 000002  
                       _TMR0_HasOverflowOccured 000000*                    __end_of_EPWM1_LoadDutyValue 000030  
                                       __Hparam 000000                                         __Lparam 000000  
                                       ___aodiv 000000                                         ___aomod 000000  
                                       ___lldiv 000000                                         ___lodiv 000000  
                                       ___lomod 000000                                         ___lwdiv 000000  
                                     ?_vfprintf 000000                             _EUSART1_is_rx_ready 000000  
                                       __pcinit 000000                                         __ramtop 000000* 
                                       __ptext0 000000                                         __ptext1 000000  
                                       __ptext2 000000                                         __ptext3 000000  
                                       __ptext4 000000                                         __ptext5 000000  
                                       __ptext6 000000                                         __ptext7 000000  
                                       __ptext8 000000                                         __ptext9 000000  
                                     _T0CONbits 000FD5                                       _T1CONbits 000FCD  
                         _OSCILLATOR_Initialize 000000                                       _T2CONbits 000FBA  
                                       _isdigit 000000                              _EUSART1_Initialize 000000  
                      ??_PIN_MANAGER_Initialize 000002                                         _isspace 000000  
                                       atoi@neg 00000D                                         main@a32 000022  
                                       main@b16 00002B                                         main@c32 000026  
                                       main@d16 00002E                                         main@cmd 00002D  
                                       main@sin 000012                            end_of_initialization 000032  
                          ?_EUSART1_is_rx_ready 000000                             ?_EUSART1_Initialize 000000  
                                       fputc@fp 000006                                   __Lmediumconst 000000* 
                   _EUSART1_OverrunErrorHandler 000006                                         fputs@fp 00000F  
                               ___lldiv@divisor 000006                                 ___lldiv@counter 00000E  
                             __end_of_vfpfcnvrt 000430                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                              vfpfcnvrt@convarg 00004F                                      ??_vfprintf 000059  
                          ??_EUSART1_Initialize 000004                        _TMR0_SetInterruptHandler 000000  
                     ??_TMR0_HasOverflowOccured 000000                             EUSART1_Write@txData 000002  
                         ??_EUSART1_is_rx_ready 000002                                    _EUSART1_Read 000000  
                  __end_of_INTERRUPT_Initialize 000004                                  __end_of___lmul 00006A  
                                   vfpfcnvrt@ap 000046                                     vfpfcnvrt@cp 000057  
                                   vfpfcnvrt@fp 000042                                  __end_of___wmul 000026  
                        ?_OSCILLATOR_Initialize 000000                        ?_TMR1_HasOverflowOccured 000000  
                                __end_of_printf 000028                             start_initialization 000000  
                               ___lodiv@divisor 00000A                                 ___lodiv@counter 00001A  
                                   __end_of_abs 000040                                     __end_of_pad 0000AA  
                                   putch@txData 000003                    EPWM1_LoadDutyValue@dutyValue 000002  
                         __end_of_EUSART1_Write 000016                                     vfprintf@fmt 000002  
                                      ??___lmul 00000A                                        ??___wmul 000006  
                                   __pdataBANK0 000000                                        ??_printf 000059  
                                   __pbssCOMRAM 000000                                   __pcstackBANK0 000000  
                              ___aodiv@dividend 000002                ??_EUSART1_SetFramingErrorHandler 000004  
               ?_EUSART1_SetFramingErrorHandler 000002                           _TMR0_InterruptHandler 00000C  
                              ___lwdiv@dividend 000008                          _PIN_MANAGER_Initialize 000000  
                                     _dtoa$1534 000031                                       __pintcode 000000  
                                 __pmediumconst 000000                                        ?___aodiv 000002  
                                      ?___aomod 000002                                ___aodiv@quotient 000014  
                                      ?___lldiv 000002                                        ?___lodiv 000002  
                                      ?___lomod 000002                                        ?___lwdiv 000008  
               __end_of_TMR1_HasOverflowOccured 000014                    ??_INTERRUPT_InterruptManager 000000  
                               ___lomod@divisor 00000A                                 ___lomod@counter 000012  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isdigit 000002                            _EUSART1_ErrorHandler 000004  
                                      ?_isspace 000002                         _EUSART1_SetErrorHandler 000000  
                              ___lwdiv@quotient 00000C                            _INTERRUPT_Initialize 000000  
                             ??_TMR0_Initialize 000004                                  ___wmul@product 000006  
       EUSART1_SetErrorHandler@interruptHandler 000002                                        i2u206_40 00001E  
                                      i2u206_41 00001A                                        i2u207_48 000024  
                                      i2u207_49 000038                                        i2u235_40 000018  
                                      i2u235_41 000014                                        i2u236_40 000026  
                                      i2u236_41 000022                      ??_TMR0_SetInterruptHandler 000004  
                                      _PIR1bits 000F9E                                        _RCONbits 000FD0  
                                     main@F6134 000000                                        _TMR0_ISR 000000  
                                      _PSTR1CON 000FB9                                       _vfpfcnvrt 000000  
                                     _xtoa$1551 000031                               ??_TMR1_Initialize 000002  
                             ___wmul@multiplier 000002                                       main@index 00002A  
                              _EPWM1_Initialize 000000                                    _isspace$1602 000006  
                                    vfpfcnvrt@c 00004C                               ___lmul@multiplier 000002  
                                   _INTCON2bits 000FF1                                       copy_data0 000014  
                         ?_INTERRUPT_Initialize 000000                            main@phaseAccumulator 000031  
                             ??_TMR2_Initialize 000002                                        __Hrparam 000000* 
                                    vfprintf@ap 000004                                        __Lrparam 000000* 
                                    vfprintf@fp 000000                         ??_OSCILLATOR_Initialize 000002  
                                    ?_vfpfcnvrt 000042                                 ___aodiv@divisor 00000A  
                               ___aodiv@counter 000012                       ??_EUSART1_SetErrorHandler 000004  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 000014  
                               ___lwdiv@divisor 00000A                                 ___lwdiv@counter 00000E  
                                      __ptext10 000000                                        __ptext11 000000  
                                      __ptext20 000000                                        __ptext12 000000  
                                      __ptext21 000000                                        __ptext13 000000  
                                    _T1GCONbits 000FCC                                        __ptext30 000000  
                                      __ptext22 000000                                        __ptext14 000000  
                                      __ptext31 000000                                        __ptext23 000000  
                                      __ptext15 000000                                        __ptext40 000000  
                                      __ptext32 000000                                        __ptext24 000000  
                                      __ptext16 000000                                        __ptext41 000000  
                                      __ptext33 000000                                        __ptext25 000000  
                                      __ptext17 000000                                        __ptext42 000000  
                                      __ptext34 000000                                        __ptext26 000000  
                                      __ptext18 000000                                        __ptext43 000000  
                                      __ptext35 000000                                        __ptext27 000000  
                                      __ptext19 000000                                        __ptext36 000000  
                                      __ptext28 000000                                        __ptext45 000000  
                                      __ptext37 000000                                        __ptext29 000000  
                                      __ptext46 000000                                        __ptext38 000000  
                                      __ptext47 000000                                        __ptext39 000000  
                       TMR0_WriteTimer@timerVal 000002                               ??_TMR0_WriteTimer 000004  
          __end_of_TMR0_DefaultInterruptHandler 000002                    _TMR0_DefaultInterruptHandler 000000  
EUSART1_SetOverrunErrorHandler@interruptHandler 000002                                        isa$xinst 000000  
                                      int$flags 000000                                        _vfprintf 000000  
            __end_of_INTERRUPT_InterruptManager 000036                      _INTERRUPT_InterruptManager 000000  
                                     printf@fmt 000008                               ??_TMR1_WriteTimer 000004  
                   _EUSART1_FramingErrorHandler 000008                                ___aomod@dividend 000002  
                      ?_TMR0_HasOverflowOccured 000000                                      _INTCONbits 000FF2  
                                      isdigit@c 000002                          ??_INTERRUPT_Initialize 000002  
                                      intlevel2 000000*                                       isspace@c 000002  
                              ___lldiv@dividend 000002                         ?_PIN_MANAGER_Initialize 000000  
        __end_of_EUSART1_SetOverrunErrorHandler 00000A                  _EUSART1_SetOverrunErrorHandler 000000  
                                    _RCSTA1bits 000FAB                 fp__TMR0_DefaultInterruptHandler 000000  
                 ?_TMR0_DefaultInterruptHandler 000000                                        printf@ap 00000E  
EUSART1_SetFramingErrorHandler@interruptHandler 000002                                 ___aomod@divisor 00000A  
                                   ??_vfpfcnvrt 000048                                 ___aomod@counter 000012  
                            _eusart1RxLastError 00000E                                ___lldiv@quotient 00000A  
                               _TMR0_Initialize 000000                             _EPWM1_LoadDutyValue 000000  
                                  ___aodiv@sign 000013                  __end_of_PIN_MANAGER_Initialize 00002A  
                                  ___aomod@sign 000013                                 _TMR1_Initialize 000000  
                      __end_of_EPWM1_Initialize 000020                            ?_EPWM1_LoadDutyValue 000002  
